{"version":3,"names":["UIConfig","touchScrollEnable","mouseWheelEnable","showButtons","popupBgColor","popupBgAlpha","closeDialogOnSide","AutoBitmap","Graphics","constructor","this","_width","_height","uv","_color","destroy","super","_source","LayaEnv","isPlaying","off","_setChanged","_sizeGrid","_offset","sizeGrid","value","map","v","width","sourceWidth","height","sourceHeight","_stateNum","source","on","_setDrawGridCmd","setState","index","numStates","_stateIndex","color","_isChanged","ILaya","timer","callLater","changeSource","bitmap","_sp","stateIndex","stateNum","h","getCachedClip","cmd","sw","sh","DrawTextureCmd","create","Draw9GridTextureCmd","newcmd","_drawGridCmd","removeCmd","recover","addCmd","UIEvent","SHOW_TIP","HIDE_TIP","UIUtils","static","arr","str","type","temp","concat","a","split","i","n","Math","min","length","Utils","toHexColor","target","isGray","filters","indexOf","grayFilter","push","splice","_funMap","WeakObject","fun","get","replace","window","Laya","_runScript","set","ColorFilter","UIComponent","Sprite","createChildren","_widget","Widget","EMPTY","preinitialize","initialize","destroyChild","_dataSource","_toolTip","get_width","_isWidthSet","measureWidth","max","commitMeasure","numChildren","comp","getChildAt","_visible","_x","scaleX","get_height","_isHeightSet","measureHeight","_y","scaleY","dataSource","get_dataSource","set_dataSource","prop","top","get_top","set_top","_getWidget","bottom","get_bottom","set_bottom","left","right","centerX","centerY","_shouldRefreshLayout","_sizeChanged","event","Event","RESIZE","resetLayout","toolTip","MOUSE_OVER","onMouseOver","MOUSE_OUT","onMouseOut","e","stage","gray","_gray","disabled","_disabled","SerializeUtil","isDeserializing","mouseEnabled","addComponent","onCompResize","_childChanged","child","freshLayout","Box","name","getChildByName","Function","bgColor","_bgColor","graphics","clear","drawRect","Styles","ScrollType","defaultSizeGrid","labelColor","labelPadding","inputLabelPadding","buttonStateNum","buttonLabelColors","comboBoxItemColors","scrollBarMinNum","scrollBarDelayTime","Button","skin","label","_state","_autoSize","_stateChanged","_labelColors","_text","_clickHandler","_strokeColors","setGraphics","createText","Text","overflow","HIDDEN","align","valign","hideFlags","HideFlags","HideAndDontSave","_mouseState","_setBit","NodeFlags","HAS_MOUSE","onMouse","MOUSE_DOWN","MOUSE_UP","CLICK","toggle","_selected","selected","run","state","stateMap","_skin","_setSkin","url","_skinBaseUrl","URL","formatURL","tex","Loader","getRes","_skinLoaded","Promise","resolve","loader","load","IMAGE","then","_destroyed","_graphics","changeClips","_setStateChanged","LOADED","parseInt","img","x","console","log","runCallLater","changeState","text","parent","addChild","CHANGE","strokeColor","labelColors","join","fillArray","String","strokeColors","padding","Number","labelSize","fontSize","labelStroke","stroke","labelStrokeColor","labelBold","bold","labelFont","font","labelAlign","labelVAlign","clickHandler","_setWidth","_setHeight","iconOffset","mouseup","mouseover","mousedown","mouseout","CheckBox","Boolean","Clip","clipX","clipY","_clipX","_clipY","_clipWidth","_clipHeight","_interval","_index","_toIndex","_sources","_onDisplay","_isPlaying","_getBit","DISPLAYED_INSTAGE","play","stop","_autoPlay","_setClipChanged","clipWidth","clipHeight","changeClip","_clipChanged","loadComplete","Handler","w","ceil","j","sources","group","_group","setGroup","total","autoPlay","interval","from","to","loop","_loop","DISPLAY","UNDISPLAY","COMPLETE","ColorPicker","_gridSize","_borderColor","_inputColor","_inputBgColor","_colors","_selectedColor","removeColorBox","_colorPanel","_colorButton","_colorTiles","_colorBlock","_colorInput","changeHandler","size","Input","onColorButtonClick","pos","onColorInputChange","KEY_DOWN","onColorFieldKeyDown","MOUSE_MOVE","onColorTilesMouseMove","onColorTilesClick","onPanelMouseDown","stopPropagation","changePanel","_panelChanged","g","drawBlock","borderColor","mainColors","strColor","toColor","y","close","open","p","localToGlobal","Point","px","py","zOrder","removeSelf","keyCode","selectedColor","getColorByMouse","focus","point","getMousePoint","floor","showColor","drawLine","changeColor","runWith","once","_setPanelChanged","inputColor","inputBgColor","Label","_fitContent","_tf","_parseEscapeChars","_onPostLayout","textWidth","textHeight","_fitFlag","wordWrap","alignItems","italic","leading","html","ubb","maxWidth","fitContent","textField","set_width","set_height","underline","underlineColor","ignoreLang","templateVars","setVar","Image","dispose","clearRes","sk","repaint","_useSourceSize","useSourceSize","Slider","isVertical","showLabel","_showProgress","_max","_min","_tick","_value","_bg","_bar","_progress","addChildAt","onBarMouseDown","allowClickBack","_globalSacle","setTo","globalScaleX","globalScaleY","_maxMove","_tx","mouseX","_ty","mouseY","mouseMove","mouseUp","showValueText","hideValueText","sendChangeEvent","CHANGED","oldValue","pow","round","showProgress","AssetDb","inst","resolveURL","tasks","replaceFileExtension","all","setBarPoint","changeValue","setSlider","scaleValue","tick","num","_allowClickBack","onBgMouseDown","bar","ScrollBar","rollRatio","scaleBar","autoHide","elasticDistance","elasticBackTime","topMoveLimit","bottomMoveLimit","disableDrag","_scrollSize","_thumbPercent","_lastOffset","_checkElastic","_isElastic","_hide","_clickOnly","_showButtons","_touchScrollEnable","_mouseWheelEnable","stopScroll","upButton","downButton","slider","_offsets","onSliderChange","onButtonMouseDown","isUp","currentTarget","slide","startLoop","onStageMouseUp","frameLoop","changeScrollBar","visible","resetPositions","resetButtonPosition","setScroll","scrollSize","thumbPercent","_target","MOUSE_WHEEL","onTargetMouseWheel","onTargetMouseDown","hide","delta","isLockedFun","END","_lastPoint","tweenMove","Tween","clearTween","onStageMouseUp2","startDragForce","cancelDragOp","checkTriggers","isTweenMove","triggerDownDragLimit","triggerUpDragLimit","lastOffset","startTweenMoveForce","abs","_canvasTransform","getScaleY","getScaleX","alpha","START","moveValue","stopMoveLimit","Ease","sineOut","elasticOver","offset","dis","maxDistance","tarSpeed","backToNormal","_backToNormal","VScrollBar","HScrollBar","List","selectEnable","totalPage","disableStopScroll","_repeatX","_repeatY","_repeatX2","_repeatY2","_spaceX","_spaceY","_cells","_startIndex","_selectedIndex","_page","_isVertical","_cellSize","_cellOffset","_createdLine","_usedCache","_elasticEnabled","_scrollType","_preLen","_content","_scrollBar","_itemRender","_array","selectHandler","renderHandler","mouseHandler","cacheAs","onScrollStart","onScrollEnd","content","scrollType","None","scrollRect","Horizontal","_hScrollBarSkin","scrollBar","_setCellChanged","_vScrollBarSkin","vScrollBarSkin","Vertical","hScrollBarSkin","onScrollBarChange","Rectangle","itemRender","repeatX","repeatY","spaceX","spaceY","changeCells","_cellChanged","cell","_getOneCell","cellWidth","cellHeight","listWidth","listHeight","setContentSize","numX","numY","_createItems","array","renderItems","changeSelectStatus","item","createItem","cacheContent","startY","box","cacheBox","k","l","pop","addCell","_$type","_$prefab","HierarchyParser","parse","skinBaseUrl","LegacyUIParser","createComp","warn","watchMap","watcher","onCellMouse","RIGHT_CLICK","onAfterDeserialize","initItems","_afterInited","count","r","_isMoved","selectedIndex","changeCellState","selectBox","scrollValue","lineX","lineY","scrollLine","cellIndex","down","toIndex","shift","unshift","renderItem","_style","posCell","startIndex","selectedItem","selection","getCell","_bindData","hasListener","RENDER","data","_$bindData","ele","getBindFun","call","lineCount","updateArray","freshStart","page","Array","cells","elasticEnabled","refresh","getItem","changeItem","setItem","addItem","addItemAt","souce","deleteItem","scrollTo","tweenTo","time","complete","ComboBox","labels","_visibleNum","_itemSize","_labels","_defaultLabel","_itemColors","_itemPadding","removeList","_onStageMouseWheel","_button","_list","_itemHeight","_selectHandler","_createList","_scrollBarSkin","_setListEvent","list","onListDown","onlistItemMouse","onScrollBarDown","switchTo","_isOpen","_listChanged","changeList","labelWidth","_padding","itemPadding","props","_isCustomList","ROLL_OVER","isOpen","changeOpen","_itemChanged","_listHeight","changeSelected","selectedLabel","defaultLabel","visibleNum","itemHeight","itemColors","itemSize","TEMP","contains","scrollBarSkin","button","View","Scene","_watchMap","_scene","json","cacheRes","changeData","key","exe","uiMap","DialogManager","maskLayer","popupEffect","dialog","scale","_effectTween","backOut","doOpen","closeEffect","strongOut","doClose","popupEffectHandler","closeEffectHandler","_onResize","_closeOnSide","Dialog","setLockView","lockLayer","removeChildren","isPopupCenter","_centerDialog","pivotX","pivotY","closeOther","showEffect","_closeAll","_clearDialogEffect","isModal","HAS_ZORDER","_checkMask","OPEN","onOpened","_param","lock","isShowEffect","CLOSE","closeHandler","closeType","onClosed","autoDestroyAtClosed","closeAll","getDialogsByGroup","closeByGroup","manager","_dealDragArea","_onClick","_manager","dragTarget","dragArea","_dragArea","toString","_onMouseDown","startDrag","stopDrag","btn","CANCEL","SURE","NO","OK","YES","param","show","_open","popup","modal","isPopup","view","FontClip","sheet","_valueArr","_indexMap","_sheet","_direction","_align","_wordsW","_wordsH","line","direction","texture","isHorizontal","dX","sz","charAt","drawImage","resetLayoutX","resetLayoutY","LayoutBox","_space","onResize","_setItemChanged","removeChildAt","changeItems","space","sortItem","items","sort","b","HBox","maxHeight","TOP","MIDDLE","BOTTOM","NONE","HSlider","Panel","_vScrollBar","_hScrollBar","destroyChildren","_setScrollChanged","removeChild","_parent","_children","_setParent","beginIndex","endIndex","getChildIndex","changeScroll","_scrollChanged","contentW","contentWidth","contentH","contentHeight","vscroll","hscroll","vShow","hShow","showWidth","showHeight","createHScrollBar","createVScrollBar","Both","vScrollBar","hScrollBar","rect","start","ProgressBar","grid","isNaN","bg","Radio","onClick","obj","UIGroup","_items","autoLayout","display","preItem","delItem","newIndex","itemClick","setSelect","_setLabelChanged","hasHideFlag","startsWith","_labelStroke","_labelStrokeColor","_labelSize","_labelBold","_labelFont","_labelPadding","changeLabels","_labelChanged","_labelAlign","RadioGroup","ScaleBox","_oldW","_oldH","onEnable","onDisable","Tab","TextInput","INPUT","ENTER","BLUR","FOCUS","multiline","editable","select","restrict","pattern","prompt","promptColor","maxChars","setSelection","TextArea","onHBarChanged","onVBarChanged","scrollY","scrollX","maxScrollY","maxScrollX","TipManager","_tipBox","_tipText","tipTextColor","_defaultTipHandler","_showDefaultTip","_onStageShowTip","_onStageHideTip","_showTip","tipDelay","tip","apply","_onStageMouseMove","_onStageMouseDown","_showToStage","offsetX","offsetY","offX","offY","rec","getBounds","showDislayTip","tipBackColor","defaultTipHandler","Tree","_spaceLeft","_spaceBottom","_keepStatus","_renderHandler","onListChange","keepStatus","parseOpenStatus","getArray","spaceLeft","spaceBottom","getParentOpenStatus","getDepth","nodeParent","arrow","hasChild","__cellIndex","onArrowClick","folder","isDirectory","setItemState","fresh","xml","parseXml","isRoot","elements","childCount","list2","attributes","node","oldSource","newSource","newItem","m","oldItem","isSameParent","item1","item2","selectedPath","path","filter","result","getFilterSource","toLocaleLowerCase","toLowerCase","VBox","isSortItem","LEFT","CENTER","RIGHT","ViewStack","_setIndexHandler","setIndex","setItems","views","setIndexHandler","VSlider","OpenDataContextView","_fps","Texture","Texture2D","TextureFormat","R8G8B8A8","fps","activeInHierarchy","wx","sharedCanvas","_onLoop","_onActive","_onInActive","postMsg","canvas","Browser","onMiniGame","toTempFilePath","setImageData","updateViewPort","sx","transform","sy","msg","getOpenDataContext","postMessage","StatUI","_show","_showToggle","Stat","AllShow","_view","createUI","showToggle","AllToggle","_toggleView","_toggleSprite","createToggleUI","update","strArray","isAverage","mode","units","_count","_txt","one","_checkBoxArray","sp","clientScaleX","clientScaleY","leftText","title","checkBoxTex","pixels","Uint8Array","R8G8B8","setPixelsData","TEXTURE2D","_testWord","toggles","cb","render","ctx","c","ClassUtils","regClass"],"sources":["../../src/layaAir/UIConfig.ts","../../src/layaAir/laya/ui/AutoBitmap.ts","../../src/layaAir/laya/ui/UIEvent.ts","../../src/layaAir/laya/ui/UIUtils.ts","../../src/layaAir/laya/ui/UIComponent.ts","../../src/layaAir/laya/ui/Box.ts","../../src/layaAir/laya/ui/Styles.ts","../../src/layaAir/laya/ui/Button.ts","../../src/layaAir/laya/ui/CheckBox.ts","../../src/layaAir/laya/ui/Clip.ts","../../src/layaAir/laya/ui/ColorPicker.ts","../../src/layaAir/laya/ui/Label.ts","../../src/layaAir/laya/ui/Image.ts","../../src/layaAir/laya/ui/Slider.ts","../../src/layaAir/laya/ui/ScrollBar.ts","../../src/layaAir/laya/ui/VScrollBar.ts","../../src/layaAir/laya/ui/HScrollBar.ts","../../src/layaAir/laya/ui/List.ts","../../src/layaAir/laya/ui/ComboBox.ts","../../src/layaAir/laya/ui/View.ts","../../src/layaAir/laya/ui/DialogManager.ts","../../src/layaAir/laya/ui/Dialog.ts","../../src/layaAir/laya/ui/FontClip.ts","../../src/layaAir/laya/ui/LayoutBox.ts","../../src/layaAir/laya/ui/HBox.ts","../../src/layaAir/laya/ui/HSlider.ts","../../src/layaAir/laya/ui/Panel.ts","../../src/layaAir/laya/ui/ProgressBar.ts","../../src/layaAir/laya/ui/Radio.ts","../../src/layaAir/laya/ui/UIGroup.ts","../../src/layaAir/laya/ui/RadioGroup.ts","../../src/layaAir/laya/ui/ScaleBox.ts","../../src/layaAir/laya/ui/Tab.ts","../../src/layaAir/laya/ui/TextInput.ts","../../src/layaAir/laya/ui/TextArea.ts","../../src/layaAir/laya/ui/TipManager.ts","../../src/layaAir/laya/ui/Tree.ts","../../src/layaAir/laya/ui/VBox.ts","../../src/layaAir/laya/ui/ViewStack.ts","../../src/layaAir/laya/ui/VSlider.ts","../../src/layaAir/laya/ui/OpenDataContextView.ts","../../src/layaAir/laya/ui/StatUI.ts","../../src/layaAir/laya/ui/ModuleDef.ts"],"sourcesContent":["/**全局配置*/\nexport class UIConfig {\n    /**是否开启触摸滚动（针对滚动条）*/\n    static touchScrollEnable: boolean = true;\n    /**是否开启滑轮滚动（针对滚动条）*/\n    static mouseWheelEnable: boolean = true;\n    /**是否显示滚动条按钮*/\n    static showButtons: boolean = true;\n    /**弹出框背景颜色*/\n    static popupBgColor: string = \"#000000\";\n    /**弹出框背景透明度*/\n    static popupBgAlpha: number = 0.5;\n    /**模式窗口点击边缘，是否关闭窗口，默认是关闭的*/\n    static closeDialogOnSide: boolean = true;\n}\n\n","import { Graphics } from \"../display/Graphics\"\nimport { Texture } from \"../resource/Texture\"\nimport { ILaya } from \"../../ILaya\";\nimport { Draw9GridTextureCmd } from \"../display/cmd/Draw9GridTextureCmd\";\nimport { DrawTextureCmd } from \"../display/cmd/DrawTextureCmd\";\nimport { LayaEnv } from \"../../LayaEnv\";\n\n/**\n * <code>AutoBitmap</code> 类是用于表示位图图像或绘制图形的显示对象。\n * <p>封装了位置，宽高及九宫格的处理，供UI组件使用。</p>\n */\nexport class AutoBitmap extends Graphics {\n    /**@private 宽度*/\n    private _width: number = null;\n    /**@private 高度*/\n    private _height: number = null;\n    /**@private 源数据*/\n    private _source: Texture;\n    /**@private 网格数据*/\n    private _sizeGrid: number[];\n    /**@private */\n    protected _isChanged: boolean;\n\n    protected _stateIndex: number;\n    protected _stateNum: number;\n\n    /**@internal */\n    _offset: any[];\n    uv: number[] = null;\n\n    _color: string = \"#ffffff\";\n\n    /**@private */\n    private _drawGridCmd: Draw9GridTextureCmd | DrawTextureCmd;\n\n    /**@inheritDoc \n     * @override\n    */\n    destroy(): void {\n        super.destroy();\n        if (this._source && !LayaEnv.isPlaying)\n            this._source.off(\"reload\", this, this._setChanged);\n        this._source = null;\n        this._sizeGrid = null;\n        this._offset = null;\n    }\n\n    get sizeGrid(): number[] {\n        return this._sizeGrid;\n    }\n\n    set sizeGrid(value: number[]) {\n        this._sizeGrid = value ? value.map((v) => { return +v; }) : null;\n        this._setChanged();\n    }\n\n    /**\n     * 表示显示对象的宽度，以像素为单位。\n     */\n    get width(): number {\n        if (this._width != null) return this._width;\n        if (this._source) return this._source.sourceWidth;\n        return 0;\n    }\n\n    set width(value: number) {\n        if (this._width != value) {\n            this._width = value;\n            this._setChanged();\n        }\n    }\n\n    /**\n     * 表示显示对象的高度，以像素为单位。\n     */\n    get height(): number {\n        if (this._height != null) return this._height;\n        if (this._source) return this._source.sourceHeight / (this._source._stateNum || this._stateNum || 1);\n        return 0;\n    }\n\n    set height(value: number) {\n        if (this._height != value) {\n            this._height = value;\n            this._setChanged();\n        }\n    }\n\n    /**\n     * 对象的纹理资源。\n     */\n    get source(): Texture {\n        return this._source;\n    }\n\n    set source(value: Texture) {\n        if (this._source && !LayaEnv.isPlaying)\n            this._source.off(\"reload\", this, this._setChanged);\n        if (value) {\n            this._source = value;\n            this._setChanged();\n            if (!LayaEnv.isPlaying)\n                value.on(\"reload\", this, this._setChanged);\n        } else {\n            this._source = null;\n            this._setDrawGridCmd(null);\n        }\n    }\n\n    setState(index: number, numStates: number) {\n        this._stateIndex = index;\n        this._stateNum = numStates;\n        this._setChanged();\n    }\n\n    get color() {\n        return this._color;\n    }\n\n    set color(value: string) {\n        if (this._color != value) {\n            this._color = value;\n            this._setChanged();\n        }\n    }\n\n    /** @private */\n    protected _setChanged(): void {\n        if (!this._isChanged) {\n            this._isChanged = true;\n            ILaya.timer.callLater(this, this.changeSource);\n        }\n    }\n\n    /**\n     * @private\n     * 修改纹理资源。\n     */\n    protected changeSource(): void {\n        this._isChanged = false;\n        let source = this._source;\n        if (!source || !source.bitmap || !this._sp)\n            return;\n\n        let width = this.width;\n        let height = this.height;\n        let sizeGrid = this._sizeGrid || source._sizeGrid;\n        let stateIndex = this._stateIndex;\n        if (stateIndex != null) {\n            let stateNum = source._stateNum || this._stateNum || 1;\n            if (stateNum == 1)\n                stateIndex = 0;\n            else if (stateNum == 2) {\n                if (stateIndex == 2)\n                    stateIndex = 1;\n                else\n                    stateIndex = 0;\n            }\n            else if (stateNum == 3) {\n                if (stateIndex == 3)\n                    stateIndex = 0;\n            }\n\n            let h = source.height / stateNum;\n            source = source.getCachedClip(0, h * stateIndex, source.width, h)\n            if (!source)\n                return;\n        }\n\n        let sw = source.sourceWidth;\n        let sh = source.sourceHeight;\n\n        //如果没有设置9宫格，或大小未改变，则直接用原图绘制\n        let cmd: any;\n        if (!sizeGrid || (sw === width && sh === height))\n            cmd = DrawTextureCmd.create(source, this._offset ? this._offset[0] : 0, this._offset ? this._offset[1] : 0, width, height, null, 1, this._color, null, this.uv)\n        else\n            cmd = Draw9GridTextureCmd.create(source, 0, 0, width, height, sizeGrid, false, this._color);\n        this._setDrawGridCmd(cmd);\n    }\n\n    /**\n     *  由于可能有其他的graphic命令，因此不能用原来的直接clear()的方法\n     */\n    private _setDrawGridCmd(newcmd: any) {\n        if (this._drawGridCmd) {\n            this.removeCmd(this._drawGridCmd);\n            this._drawGridCmd.recover();\n        }\n        this._drawGridCmd = newcmd;\n        if (newcmd)\n            this.addCmd(newcmd);\n    }\n}\n","/**\n * <code>UIEvent</code> 类用来定义UI组件类的事件类型。\n */\nexport class UIEvent {\n    /**\n     * 显示提示信息。\n     */\n    static SHOW_TIP: string = \"showtip\";\n    /**\n     * 隐藏提示信息。\n     */\n    static HIDE_TIP: string = \"hidetip\";\n}","import { Sprite } from \"../display/Sprite\"\nimport { ColorFilter } from \"../filters/ColorFilter\"\nimport { Utils } from \"../utils/Utils\"\nimport { WeakObject } from \"../utils/WeakObject\"\n\n/**\n * <code>UIUtils</code> 是文本工具集。\n */\nexport class UIUtils {\n    private static grayFilter: ColorFilter = new ColorFilter([0.3086, 0.6094, 0.082, 0, 0, 0.3086, 0.6094, 0.082, 0, 0, 0.3086, 0.6094, 0.082, 0, 0, 0, 0, 0, 1, 0]);\n\n    /**\n     * 用字符串填充数组，并返回数组副本。\n     * @param\tarr 源数组对象。\n     * @param\tstr 用逗号连接的字符串。如\"p1,p2,p3,p4\"。\n     * @param\ttype 如果值不为null，则填充的是新增值得类型。\n     * @return 填充后的数组。\n     */\n    static fillArray(arr: any[], str: string, type: typeof Number | typeof String = null): any[] {\n        let temp = arr.concat();\n        if (str) {\n            let a = str.split(\",\");\n            for (let i = 0, n = Math.min(temp.length, a.length); i < n; i++) {\n                let value = a[i];\n                temp[i] = (value == \"true\" ? true : (value == \"false\" ? false : value));\n                if (type != null) temp[i] = type(value);\n            }\n        }\n        return temp;\n    }\n\n    /**\n     * 转换uint类型颜色值为字符型颜色值。\n     * @param color uint颜色值。\n     * @return 字符型颜色值。\n     */\n    static toColor(color: number): string {\n        return Utils.toHexColor(color);\n    }\n\n    /**\n     * 给指定的目标显示对象添加或移除灰度滤镜。\n     * @param\ttarget 目标显示对象。\n     * @param\tisGray 如果值true，则添加灰度滤镜，否则移除灰度滤镜。\n     */\n    //TODO:coverage\n    static gray(target: Sprite, isGray: boolean = true): void {\n        let filters: any[] = target.filters || [];\n        let i = filters.indexOf(UIUtils.grayFilter);\n        if (isGray) {\n            if (i == -1) {\n                filters.push(UIUtils.grayFilter);\n                target.filters = filters;\n            }\n        }\n        else if (i != -1) {\n            filters.splice(i, 1);\n            target.filters = filters;\n        }\n    }\n\n    /**@private */\n    private static _funMap: WeakObject = null;//new WeakObject();\n\n    /**\n     * @private 根据字符串，返回函数表达式\n     */\n    //TODO:coverage\n    static getBindFun(value: string): Function {\n        if (!UIUtils._funMap) {\n            UIUtils._funMap = new WeakObject();\n        }\n        var fun: Function = UIUtils._funMap.get(value);\n        if (fun == null) {\n            var temp: string = \"\\\"\" + value + \"\\\"\";\n            temp = temp.replace(/^\"\\${|}\"$/g, \"\").replace(/\\${/g, \"\\\"+\").replace(/}/g, \"+\\\"\");\n            var str: string = \"(function(data){if(data==null)return;with(data){try{\\nreturn \" + temp + \"\\n}catch(e){}}})\";\n            fun = (window as any).Laya._runScript(str);\n            UIUtils._funMap.set(value, fun);\n        }\n        return fun;\n    }\n}","import { Widget } from \"../components/Widget\";\nimport { UIEvent } from \"./UIEvent\";\nimport { UIUtils } from \"./UIUtils\";\nimport { Node } from \"../display/Node\"\nimport { Sprite } from \"../display/Sprite\"\nimport { Event } from \"../events/Event\"\nimport { ILaya } from \"../../ILaya\";\nimport { SerializeUtil } from \"../loaders/SerializeUtil\";\n\n/**\n * <code>Component</code> 是ui控件类的基类。\n * <p>生命周期：preinitialize > createChildren > initialize > 组件构造函数</p>\n */\nexport class UIComponent extends Sprite {\n    /**@private 控件的数据源。 */\n    protected _dataSource: any;\n    /**@private 鼠标悬停提示 */\n    protected _toolTip: any;\n    /**@private 禁用 */\n    protected _disabled: boolean;\n    /**@private 变灰*/\n    protected _gray: boolean;\n    /**@private 相对布局组件*/\n    protected _widget: Widget = Widget.EMPTY;\n\n    /**\n     * <p>创建一个新的 <code>Component</code> 实例。</p>\n     */\n    constructor(createChildren = true) {\n        super();\n        if (createChildren) {\n            this.preinitialize();\n            this.createChildren();\n            this.initialize();\n        }\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n     */\n    destroy(destroyChild: boolean = true): void {\n        super.destroy(destroyChild);\n        this._dataSource = null;\n        this._toolTip = null;\n    }\n\n    /**\n     * <p>预初始化。</p>\n     * 子类可在此函数内设置、修改属性默认值\n     */\n    protected preinitialize(): void {\n    }\n\n    /**\n     * <p>创建并添加控件子节点。</p>\n     * 子类可在此函数内创建并添加子节点。\n     */\n    protected createChildren(): void {\n    }\n\n    /**\n     * <p>控件初始化。</p>\n     * 在此子对象已被创建，可以对子对象进行修改。\n     */\n    protected initialize(): void {\n    }\n\n    /**\n     * @override\n     */\n    get_width(): number {\n        if (this._isWidthSet) return this._width;\n        return this.measureWidth();\n    }\n\n    /**\n     * <p>显示对象的实际显示区域宽度（以像素为单位）。</p>\n     */\n    protected measureWidth(): number {\n        var max: number = 0;\n        this.commitMeasure();\n        for (var i: number = this.numChildren - 1; i > -1; i--) {\n            var comp: Sprite = (<Sprite>this.getChildAt(i));\n            if (comp._visible) {\n                max = Math.max(comp._x + comp.width * comp.scaleX, max);\n            }\n        }\n        return max;\n    }\n\n    /**\n     * <p>立即执行影响宽高度量的延迟调用函数。</p>\n     * <p>使用 <code>runCallLater</code> 函数，立即执行影响宽高度量的延迟运行函数(使用 <code>callLater</code> 设置延迟执行函数)。</p>\n     * @see #callLater()\n     * @see #runCallLater()\n     */\n    protected commitMeasure(): void {\n    }\n\n    /**\n     * @override\n     */\n    get_height(): number {\n        if (this._isHeightSet) return this._height;\n        return this.measureHeight();\n    }\n\n    /**\n     * <p>显示对象的实际显示区域高度（以像素为单位）。</p>\n     */\n    protected measureHeight(): number {\n        var max: number = 0;\n        this.commitMeasure();\n        for (var i: number = this.numChildren - 1; i > -1; i--) {\n            var comp: Sprite = (<Sprite>this.getChildAt(i));\n            if (comp._visible) {\n                max = Math.max(comp._y + comp.height * comp.scaleY, max);\n            }\n        }\n        return max;\n    }\n\n    /**\n     * @implements\n     * <p>数据赋值，通过对UI赋值来控制UI显示逻辑。</p>\n     * <p>简单赋值会更改组件的默认属性，使用大括号可以指定组件的任意属性进行赋值。</p>\n     * @example\n       //默认属性赋值\n       dataSource = {label1: \"改变了label\", checkbox1: true};//(更改了label1的text属性值，更改checkbox1的selected属性)。\n       //任意属性赋值\n       dataSource = {label2: {text:\"改变了label\",size:14}, checkbox2: {selected:true,x:10}};\n     */\n    get dataSource(): any {\n        return this.get_dataSource();\n    }\n\n    get_dataSource(): any {\n        return this._dataSource;\n    }\n\n    set dataSource(value: any) {\n        this.set_dataSource(value);\n    }\n\n    set_dataSource(value: any) {\n        this._dataSource = value;\n        for (var prop in this._dataSource) {\n            if (prop in this && !(typeof ((this as any)[prop]) == 'function')) {\n                (this as any)[prop] = this._dataSource[prop];\n            }\n        }\n    }\n\n    /**\n     * <p>从组件顶边到其内容区域顶边之间的垂直距离（以像素为单位）。</p>\n     */\n    get top(): number {\n        return this.get_top();\n    }\n\n    get_top(): number {\n        return this._widget.top;\n    }\n\n    set top(value: number) {\n        this.set_top(value);\n    }\n\n    set_top(value: number) {\n        if (value != this._widget.top) {\n            this._getWidget().top = value;\n        }\n    }\n\n    /**\n     * <p>从组件底边到其内容区域底边之间的垂直距离（以像素为单位）。</p>\n     */\n    get bottom(): number {\n        return this.get_bottom();\n    }\n\n    get_bottom(): number {\n        return this._widget.bottom;\n    }\n\n    set bottom(value: number) {\n        this.set_bottom(value);\n    }\n\n    set_bottom(value: number) {\n        if (value != this._widget.bottom) {\n            this._getWidget().bottom = value;\n        }\n    }\n\n    /**\n     * <p>从组件左边到其内容区域左边之间的水平距离（以像素为单位）。</p>\n     */\n    get left(): number {\n        return this._widget.left;\n    }\n\n    set left(value: number) {\n        if (value != this._widget.left) {\n            this._getWidget().left = value;\n        }\n    }\n\n    /**\n     * <p>从组件右边到其内容区域右边之间的水平距离（以像素为单位）。</p>\n     */\n    get right(): number {\n        return this._widget.right;\n    }\n\n    set right(value: number) {\n        if (value != this._widget.right) {\n            this._getWidget().right = value;\n        }\n    }\n\n    /**\n     * <p>在父容器中，此对象的水平方向中轴线与父容器的水平方向中心线的距离（以像素为单位）。</p>\n     */\n    get centerX(): number {\n        return this._widget.centerX;\n    }\n\n    set centerX(value: number) {\n        if (value != this._widget.centerX) {\n            this._getWidget().centerX = value;\n        }\n    }\n\n    /**\n     * <p>在父容器中，此对象的垂直方向中轴线与父容器的垂直方向中心线的距离（以像素为单位）。</p>\n     */\n    get centerY(): number {\n        return this._widget.centerY;\n    }\n\n    set centerY(value: number) {\n        if (value != this._widget.centerY) {\n            this._getWidget().centerY = value;\n        }\n    }\n\n    protected _shouldRefreshLayout(): void {\n        super._shouldRefreshLayout();\n        this.callLater(this._sizeChanged);\n    }\n\n    protected _sizeChanged(): void {\n        this.event(Event.RESIZE);\n        if (this._widget !== Widget.EMPTY) this._widget.resetLayout();\n    }\n\n    /**\n     * <p>鼠标悬停提示。</p>\n     * <p>可以赋值为文本 <code>String</code> 或函数 <code>Handler</code> ，用来实现自定义样式的鼠标提示和参数携带等。</p>\n     * @example\n     * private var _testTips:TestTipsUI = new TestTipsUI();\n     * private function testTips():void {\n       //简单鼠标提示\n     * btn2.toolTip = \"这里是鼠标提示&lt;b&gt;粗体&lt;/b&gt;&lt;br&gt;换行\";\n       //自定义的鼠标提示\n     * btn1.toolTip = showTips1;\n       //带参数的自定义鼠标提示\n     * clip.toolTip = new Handler(this,showTips2, [\"clip\"]);\n     * }\n     * private function showTips1():void {\n     * _testTips.label.text = \"这里是按钮[\" + btn1.label + \"]\";\n     * tip.addChild(_testTips);\n     * }\n     * private function showTips2(name:String):void {\n     * _testTips.label.text = \"这里是\" + name;\n     * tip.addChild(_testTips);\n     * }\n     */\n    get toolTip(): any {\n        return this._toolTip;\n    }\n\n    set toolTip(value: any) {\n        if (this._toolTip != value) {\n            this._toolTip = value;\n            if (value != null) {\n                this.on(Event.MOUSE_OVER, this, this.onMouseOver);\n                this.on(Event.MOUSE_OUT, this, this.onMouseOut);\n            } else {\n                this.off(Event.MOUSE_OVER, this, this.onMouseOver);\n                this.off(Event.MOUSE_OUT, this, this.onMouseOut);\n            }\n        }\n    }\n\n    /**\n     * 对象的 <code>Event.MOUSE_OVER</code> 事件侦听处理函数。\n     */\n    private onMouseOver(e: Event): void {\n        ILaya.stage.event(UIEvent.SHOW_TIP, this._toolTip);\n    }\n\n    /**\n     * 对象的 <code>Event.MOUSE_OUT</code> 事件侦听处理函数。\n     */\n    private onMouseOut(e: Event): void {\n        ILaya.stage.event(UIEvent.HIDE_TIP, this._toolTip);\n    }\n\n    /** 是否变灰。*/\n    get gray(): boolean {\n        return this._gray;\n    }\n\n    set gray(value: boolean) {\n        if (value !== this._gray) {\n            this._gray = value;\n            UIUtils.gray(this, value);\n        }\n    }\n\n    /** 是否禁用页面，设置为true后，会变灰并且禁用鼠标。*/\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        if (value !== this._disabled) {\n            this._disabled = value;\n            if (!SerializeUtil.isDeserializing)\n                this.gray = value;\n            this.mouseEnabled = !value;\n        }\n    }\n\n    /**\n     * @private\n     * <p>获取对象的布局样式。请不要直接修改此对象</p>\n     */\n    private _getWidget(): Widget {\n        this._widget === Widget.EMPTY && (this._widget = this.addComponent(Widget));\n        return this._widget;\n    }\n\n    /**@private */\n    protected onCompResize(): void {\n        this._sizeChanged();\n\n    }\n\n    /**\n     * \n     * @param child \n     * @override\n     */\n    protected _childChanged(child: Node = null): void {\n        this.callLater(this._sizeChanged);\n        super._childChanged(child);\n    }\n\n    /**\n     * 重新排版\n     */\n    freshLayout() {\n        if (this._widget != Widget.EMPTY) {\n            this._widget.resetLayout();\n        }\n    }\n}\n","import { UIComponent } from \"./UIComponent\";\n\n/**\n * <code>Box</code> 类是一个控件容器类。\n */\nexport class Box extends UIComponent {\n    private _bgColor: string;\n\n    /**\n     * @inheritDoc \n     * @override\n     */\n    set_dataSource(value: any) {\n        this._dataSource = value;\n        for (let name in value) {\n            let comp = (<UIComponent>this.getChildByName(name));\n            if (comp)\n                comp.dataSource = value[name];\n            else if (name in this && !((this as any)[name] instanceof Function))\n                (this as any)[name] = value[name];\n        }\n    }\n\n    /**背景颜色*/\n    get bgColor(): string {\n        return this._bgColor;\n    }\n\n    set bgColor(value: string) {\n        this._bgColor = value;\n        this.graphics.clear();\n        this.graphics.drawRect(0, 0, 1, 1, this._bgColor, null, null, true);\n    }\n}","\n/**\n * <code>Styles</code> 定义了组件常用的样式属性。\n */\nexport class Styles {\n\n    /**\n     * 默认九宫格信息。\n     * @see laya.ui.AutoBitmap#sizeGrid\n     */\n    static defaultSizeGrid: any[] = [4, 4, 4, 4, 0];\n\n    //-----------------Label-----------------\n    /**\n     * 标签颜色。\n     */\n    static labelColor: string = \"#000000\";\n    /**\n     * 标签的边距。\n     * <p><b>格式：</b>[上边距，右边距，下边距，左边距]。</p>\n     */\n    static labelPadding: any[] = [2, 2, 2, 2];\n\n    /**\n     * 标签的边距。\n     * <p><b>格式：</b>[上边距，右边距，下边距，左边距]。</p>\n     */\n    static inputLabelPadding: any[] = [1, 1, 1, 3];\n\n    //-----------------Button-----------------\n    /**\n     * 按钮皮肤的状态数，支持1,2,3三种状态值。\n     */\n    static buttonStateNum: number = 3;\n    /**\n     * 按钮标签颜色。\n     * <p><b>格式：</b>[upColor,overColor,downColor]。</p>\n     */\n    static buttonLabelColors: any[] = [\"#32556b\", \"#32cc6b\", \"#ff0000\"];\n\n    //-----------------ComboBox-----------------\n    /**\n     * 下拉框项颜色。\n     * <p><b>格式：</b>[overBgColor,overLabelColor,outLabelColor,borderColor,bgColor]。</p>\n     */\n    static comboBoxItemColors: any[] = [\"#5e95b6\", \"#ffffff\", \"#000000\", \"#8fa4b1\", \"#ffffff\"];\n\n    //-----------------ScrollBar-----------------\n    /**\n     * 滚动条的最小值。\n     */\n    static scrollBarMinNum: number = 15;\n    /**\n     * 长按按钮，等待时间，使其可激活连续滚动。\n     */\n    static scrollBarDelayTime: number = 500;\n}\n\nexport enum ScrollType {\n    None,\n    Horizontal,\n    Vertical,\n    Both\n}","import { UIComponent } from \"./UIComponent\";\nimport { ISelect } from \"./ISelect\";\nimport { Styles } from \"./Styles\";\nimport { NodeFlags, HideFlags } from \"../Const\"\nimport { Text } from \"../display/Text\"\nimport { Event } from \"../events/Event\"\nimport { Loader } from \"../net/Loader\"\nimport { Texture } from \"../resource/Texture\"\nimport { AutoBitmap } from \"./AutoBitmap\"\nimport { UIUtils } from \"./UIUtils\"\nimport { Handler } from \"../utils/Handler\"\nimport { ILaya } from \"../../ILaya\";\nimport { URL } from \"../net/URL\";\n\n/**\n * 当按钮的选中状态（ <code>selected</code> 属性）发生改变时调度。\n * @eventType laya.events.Event\n */\n/*[Event(name = \"change\", type = \"laya.events.Event\")]*/\n\n/**\n * <code>Button</code> 组件用来表示常用的多态按钮。 <code>Button</code> 组件可显示文本标签、图标或同时显示两者。\t *\n * <p>可以是单态，两态和三态，默认三态(up,over,down)。</p>\n *\n * @example <caption>以下示例代码，创建了一个 <code>Button</code> 实例。</caption>\n * package\n *\t{\n *\t\timport laya.ui.Button;\n *\t\timport laya.utils.Handler;\n *\t\tpublic class Button_Example\n *\t\t{\n *\t\t\tpublic function Button_Example()\n *\t\t\t{\n *\t\t\t\tLaya.init(640, 800);//设置游戏画布宽高。\n *\t\t\t\tLaya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\n *\t\t\t\tLaya.loader.load(\"resource/ui/button.png\", Handler.create(this,onLoadComplete));//加载资源。\n *\t\t\t}\n *\t\t\tprivate function onLoadComplete():void\n *\t\t\t{\n *\t\t\t\ttrace(\"资源加载完成！\");\n *\t\t\t\tvar button:Button = new Button(\"resource/ui/button.png\",\"label\");//创建一个 Button 类的实例对象 button ,并传入它的皮肤。\n *\t\t\t\tbutton.x = 100;//设置 button 对象的属性 x 的值，用于控制 button 对象的显示位置。\n *\t\t\t\tbutton.y = 100;//设置 button 对象的属性 y 的值，用于控制 button 对象的显示位置。\n *\t\t\t\tbutton.clickHandler = new Handler(this, onClickButton,[button]);//设置 button 的点击事件处理器。\n *\t\t\t\tLaya.stage.addChild(button);//将此 button 对象添加到显示列表。\n *\t\t\t}\n *\t\t\tprivate function onClickButton(button:Button):void\n *\t\t\t{\n *\t\t\t\ttrace(\"按钮button被点击了！\");\n *\t\t\t}\n *\t\t}\n *\t}\n * @example\n * Laya.init(640, 800);//设置游戏画布宽高、渲染模式。\n * Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\n * Laya.loader.load(\"resource/ui/button.png\",laya.utils.Handler.create(this,loadComplete));//加载资源\n * function loadComplete()\n * {\n *     console.log(\"资源加载完成！\");\n *     var button = new laya.ui.Button(\"resource/ui/button.png\",\"label\");//创建一个 Button 类的实例对象 button ,传入它的皮肤skin和标签label。\n *     button.x =100;//设置 button 对象的属性 x 的值，用于控制 button 对象的显示位置。\n *     button.y =100;//设置 button 对象的属性 y 的值，用于控制 button 对象的显示位置。\n *     button.clickHandler = laya.utils.Handler.create(this,onClickButton,[button],false);//设置 button 的点击事件处理函数。\n *     Laya.stage.addChild(button);//将此 button 对象添加到显示列表。\n * }\n * function onClickButton(button)\n * {\n *     console.log(\"按钮被点击了。\",button);\n * }\n * @example\n * import Button=laya.ui.Button;\n * import Handler=laya.utils.Handler;\n * class Button_Example{\n *     constructor()\n *     {\n *         Laya.init(640, 800);\n *         Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\n *         Laya.loader.load(\"resource/ui/button.png\", laya.utils.Handler.create(this,this.onLoadComplete));//加载资源。\n *     }\n *     private onLoadComplete()\n *     {\n *         var button:Button = new Button(\"resource/ui/button.png\",\"label\");//创建一个 Button 类的实例对象 button ,并传入它的皮肤。\n *         button.x = 100;//设置 button 对象的属性 x 的值，用于控制 button 对象的显示位置。\n *         button.y = 100;//设置 button 对象的属性 y 的值，用于控制 button 对象的显示位置。\n *         button.clickHandler = new Handler(this, this.onClickButton,[button]);//设置 button 的点击事件处理器。\n *         Laya.stage.addChild(button);//将此 button 对象添加到显示列表。\n *     }\n *     private onClickButton(button:Button):void\n *     {\n *         console.log(\"按钮button被点击了！\")\n *     }\n * }\n */\nexport class Button extends UIComponent implements ISelect {\n    /**\n     * 指定按钮按下时是否是切换按钮的显示状态。\n     *\n     * @example 以下示例代码，创建了一个 <code>Button</code> 实例，并设置为切换按钮。\n     * @example\n     * package\n     *\t{\n     *\t\timport laya.ui.Button;\n     *\t\timport laya.utils.Handler;\n     *\t\tpublic class Button_toggle\n     *\t\t{\n     *\t\t\tpublic function Button_toggle()\n     *\t\t\t{\n     *\t\t\t\tLaya.init(640, 800);//设置游戏画布宽高、渲染模式。\n     *\t\t\t\tLaya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\n     *\t\t\t\tLaya.loader.load(\"resource/ui/button.png\", Handler.create(this,onLoadComplete));\n     *\t\t\t}\n     *\t\t\tprivate function onLoadComplete():void\n     *\t\t\t{\n     *\t\t\t\ttrace(\"资源加载完成！\");\n     *\t\t\t\tvar button:Button = new Button(\"resource/ui/button.png\",\"label\");//创建一个 Button 实例对象 button ,传入它的皮肤skin和标签label。\n     *\t\t\t\tbutton.x = 100;//设置 button 对象的属性 x 的值，用于控制 button 对象的显示位置。\n     *\t\t\t\tbutton.y = 100;//设置 button 对象的属性 y 的值，用于控制 button 对象的显示位置。\n     *\t\t\t\tbutton.toggle = true;//设置 button 对象为切换按钮。\n     *\t\t\t\tbutton.clickHandler = new Handler(this, onClickButton,[button]);//设置 button 的点击事件处理器。\n     *\t\t\t\tLaya.stage.addChild(button);//将此 button 对象添加到显示列表。\n     *\t \t\t}\n     *\t\t\tprivate function onClickButton(button:Button):void\n     *\t\t\t{\n     *\t\t\t\ttrace(\"button.selected = \"+ button.selected);\n     *\t\t\t}\n     *\t\t}\n     *\t}\n     * @example\n     * Laya.init(640, 800);//设置游戏画布宽高、渲染模式。\n     * Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\n     * Laya.loader.load(\"resource/ui/button.png\",laya.utils.Handler.create(this,loadComplete));//加载资源\n     * function loadComplete()\n     * {\n     *     console.log(\"资源加载完成！\");\n     *     var button = new laya.ui.Button(\"resource/ui/button.png\",\"label\");//创建一个 Button 类的实例对象 button ,传入它的皮肤skin和标签label。\n     *     button.x =100;//设置 button 对象的属性 x 的值，用于控制 button 对象的显示位置。\n     *     button.y =100;//设置 button 对象的属性 y 的值，用于控制 button 对象的显示位置。\n     *     button.toggle = true;//设置 button 对象为切换按钮。\n     *     button.clickHandler = laya.utils.Handler.create(this,onClickButton,[button],false);//设置 button 的点击事件处理器。\n     *     Laya.stage.addChild(button);//将此 button 对象添加到显示列表。\n     * }\n     * function onClickButton(button)\n     * {\n     *     console.log(\"button.selected = \",button.selected);\n     * }\n     * @example\n     * Laya.init(640, 800);//设置游戏画布宽高、渲染模式。\n     * Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\n     * Laya.loader.load(\"button.png\", null,null, null, null, null);//加载资源\n     * function loadComplete() {\n     *     console.log(\"资源加载完成！\");\n     *     var button:laya.ui.Button = new laya.ui.Button(\"button.png\", \"label\");//创建一个 Button 类的实例对象 button ,传入它的皮肤skin和标签label。\n     *     button.x = 100;//设置 button 对象的属性 x 的值，用于控制 button 对象的显示位置。\n     *     button.y = 100;//设置 button 对象的属性 y 的值，用于控制 button 对象的显示位置。\n     *     button.toggle = true;//设置 button 对象为切换按钮。\n     *     button.clickHandler = laya.utils.Handler.create(this, onClickButton, [button], false);//设置 button 的点击事件处理器。\n     *     Laya.stage.addChild(button);//将此 button 对象添加到显示列表。\n     * }\n     * function onClickButton(button) {\n     *     console.log(\"button.selected = \", button.selected);\n     * }\n     */\n    toggle: boolean;\n    /**\n     * @private\n     * 按钮上的文本。\n     */\n    protected _text: Text;\n    /**\n     * @private\n     * 按钮文本标签的颜色值。\n     */\n    protected _labelColors: string[];\n    /**\n     * @private\n     * 按钮文本标签描边的颜色值。\n     */\n    protected _strokeColors: string[];\n    /**\n     * @private\n     * 按钮的状态值。\n     */\n    protected _state: number = 0;\n    /**\n     * @private\n     * 表示按钮的选中状态。\n     */\n    protected _selected: boolean;\n\n    protected _skin: string;\n\n    /**\n     * @private\n     * 指定此显示对象是否自动计算并改变大小等属性。\n     */\n    protected _autoSize: boolean = true;\n    /**\n     * @private\n     * 按钮的状态数。\n     */\n    protected _stateNum: number;\n    /**\n     * @private\n     * 按钮的点击事件函数。\n     */\n    protected _clickHandler: Handler;\n    /**\n     * @private\n     */\n    protected _stateChanged: boolean = false;\n\n    declare _graphics: AutoBitmap;\n\n    /**\n     * 创建一个新的 <code>Button</code> 类实例。\n     * @param skin 皮肤资源地址。\n     * @param label 按钮的文本内容。\n     */\n    constructor(skin: string = null, label: string = \"\") {\n        super();\n        this._labelColors = Styles.buttonLabelColors;\n        this._stateNum = Styles.buttonStateNum;\n\n        if (skin)\n            this.skin = skin;\n        this.label = label;\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n     */\n    destroy(destroyChild: boolean = true): void {\n        super.destroy(destroyChild);\n        this._text && this._text.destroy(destroyChild);\n        this._text = null;\n        this._clickHandler = null;\n        this._labelColors = this._strokeColors = null;\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n     */\n    protected createChildren(): void {\n        this.setGraphics(new AutoBitmap(), true);\n    }\n\n    /**@private */\n    protected createText(): void {\n        if (!this._text) {\n            this._text = new Text();\n            this._text.overflow = Text.HIDDEN;\n            this._text.align = \"center\";\n            this._text.valign = \"middle\";\n            this._text.width = this._width;\n            this._text.height = this._height;\n            this._text.hideFlags = HideFlags.HideAndDontSave;\n        }\n    }\n\n    /**@inheritDoc \n     * @override\n    */\n    protected initialize(): void {\n        if (this._mouseState !== 1) {\n            this.mouseEnabled = true;\n            this._setBit(NodeFlags.HAS_MOUSE, true);\n        }\n        this.on(Event.MOUSE_OVER, this, this.onMouse);\n        this.on(Event.MOUSE_OUT, this, this.onMouse);\n        this.on(Event.MOUSE_DOWN, this, this.onMouse);\n        this.on(Event.MOUSE_UP, this, this.onMouse);\n        this.on(Event.CLICK, this, this.onMouse);\n    }\n\n    /**\n     * 对象的 <code>Event.MOUSE_OVER、Event.MOUSE_OUT、Event.MOUSE_DOWN、Event.MOUSE_UP、Event.CLICK</code> 事件侦听处理函数。\n     * @param e Event 对象。\n     */\n    protected onMouse(e: Event): void {\n        if (this.toggle === false && this._selected) return;\n        let type = e ? e.type : Event.CLICK;\n        if (type === Event.CLICK) {\n            this.toggle && (this.selected = !this._selected);\n            this._clickHandler && this._clickHandler.run();\n            return;\n        }\n        !this._selected && (this.state = stateMap[type]);\n    }\n\n    /**\n     * <p>对象的皮肤资源地址。</p>\n     * 支持单态，两态和三态，用 <code>stateNum</code> 属性设置\n     * <p>对象的皮肤地址，以字符串表示。</p>\n     * @see #stateNum\n     */\n    get skin(): string {\n        return this._skin;\n    }\n\n    set skin(value: string) {\n        if (this._skin == value)\n            return;\n\n        this._setSkin(value);\n    }\n\n    _setSkin(url: string): Promise<void> {\n        this._skin = url;\n        if (url) {\n            if (this._skinBaseUrl)\n                url = URL.formatURL(url, this._skinBaseUrl);\n            let tex = Loader.getRes(url);\n            if (!tex)\n                return ILaya.loader.load(url, Loader.IMAGE).then(tex => this._skinLoaded(tex));\n            else {\n                this._skinLoaded(tex);\n                return Promise.resolve();\n            }\n        }\n        else {\n            this._skinLoaded(null);\n            return Promise.resolve();\n        }\n    }\n\n    protected _skinLoaded(tex: any): void {\n        if (this._destroyed)\n            return;\n\n        this._graphics.source = tex;\n        if (tex)\n            this.callLater(this.changeClips);\n        this._setStateChanged();\n        this._sizeChanged();\n        this.event(Event.LOADED);\n    }\n\n    /**\n     * <p>指定对象的状态值，以数字表示。</p>\n     * <p>默认值为3。此值决定皮肤资源图片的切割方式。</p>\n     * <p><b>取值：</b>\n     * <li>1：单态。图片不做切割，按钮的皮肤状态只有一种。</li>\n     * <li>2：两态。图片将以竖直方向被等比切割为2部分，从上向下，依次为\n     * 弹起状态皮肤、\n     * 按下和经过及选中状态皮肤。</li>\n     * <li>3：三态。图片将以竖直方向被等比切割为3部分，从上向下，依次为\n     * 弹起状态皮肤、\n     * 经过状态皮肤、\n     * 按下和选中状态皮肤</li>\n     * </p>\n     */\n    get stateNum(): number {\n        return this._stateNum;\n    }\n\n    set stateNum(value: number) {\n        if (typeof (value as any) == 'string') {\n            value = parseInt(value as any);\n        }\n        if (this._stateNum != value) {\n            this._stateNum = value < 1 ? 1 : value > 3 ? 3 : value;\n            this._graphics.setState(this._state, this._stateNum);\n            if (this._skin) {\n                this.callLater(this.changeClips);\n                this._setStateChanged();\n            }\n        }\n    }\n\n    /**\n     * @private\n     * 对象的资源切片发生改变。\n     */\n    protected changeClips(): void {\n        let width: number = 0, height: number = 0;\n\n        let img: Texture = Loader.getRes(this._skin);\n        if (!img) {\n            console.log(`lose skin ${this._skin}`);\n            return;\n        }\n\n        width = img.sourceWidth;\n        height = img.sourceHeight / (img._stateNum || this._stateNum);\n\n        if (this._autoSize) {\n            this._graphics.width = this._isWidthSet ? this._width : width;\n            this._graphics.height = this._isHeightSet ? this._height : height;\n            if (this._text) {\n                this._text.width = this._graphics.width;\n                this._text.height = this._graphics.height;\n            }\n        } else {\n            if (this._text) {\n                this._text.x = width;\n                this._text.height = height;\n            }\n        }\n    }\n\n    /**\n     * @inheritDoc\n     * @override\n     */\n    protected measureWidth(): number {\n        if (this._skin)\n            this.runCallLater(this.changeClips);\n        if (this._autoSize) return this._graphics.width;\n        this.runCallLater(this.changeState);\n        return this._graphics.width + (this._text ? this._text.width : 0);\n    }\n\n    /**\n     * @inheritDoc\n     * @override\n     */\n    protected measureHeight(): number {\n        if (this._skin)\n            this.runCallLater(this.changeClips);\n        return this._text ? Math.max(this._graphics.height, this._text.height) : this._graphics.height;\n    }\n\n    /**\n     * 按钮的文本内容。\n     */\n    get label(): string {\n        return this._text ? this._text.text : null;\n    }\n\n    set label(value: string) {\n        if (!this._text && !value) return;\n        this.createText();\n        if (this._text.text != value) {\n            value && !this._text.parent && this.addChild(this._text);\n            this._text.text = (value + \"\").replace(/\\\\n/g, \"\\n\");\n            this._setStateChanged();\n        }\n    }\n\n    /**\n     * 表示按钮的选中状态。\n     * <p>如果值为true，表示该对象处于选中状态。否则该对象处于未选中状态。</p>\n     * @implements\n     */\n    get selected(): boolean {\n        return this._selected;\n    }\n\n    set selected(value: boolean) {\n        if (this._selected != value) {\n            this._selected = value;\n            this.state = this._selected ? 2 : 0;\n            this.event(Event.CHANGE);\n        }\n    }\n\n    /**\n     * 对象的状态值。\n     * @see #stateMap\n     */\n    protected get state(): number {\n        return this._state;\n    }\n\n    protected set state(value: number) {\n        if (this._state != value) {\n            this._state = value;\n            this._setStateChanged();\n        }\n    }\n\n    /**\n     * @private\n     * 改变对象的状态。\n     */\n    protected changeState(): void {\n        this._stateChanged = false;\n        if (this._skin)\n            this.runCallLater(this.changeClips);\n        let index = Math.max(this._state, 0);\n        this._graphics.setState(index, this._stateNum);\n        if (this.label) {\n            this._text.color = this._labelColors[index];\n            if (this._strokeColors) this._text.strokeColor = this._strokeColors[index];\n        }\n    }\n\n    /**\n     * 表示按钮各个状态下的文本颜色。\n     * <p><b>格式:</b> \"upColor,overColor,downColor\"。</p>\n     */\n    get labelColors(): string {\n        return this._labelColors.join(\",\");\n    }\n\n    set labelColors(value: string) {\n        this._labelColors = UIUtils.fillArray(Styles.buttonLabelColors, value, String);\n        this._setStateChanged();\n    }\n\n    /**\n     * 表示按钮各个状态下的描边颜色。\n     * <p><b>格式:</b> \"upColor,overColor,downColor\"。</p>\n     */\n    get strokeColors(): string {\n        return this._strokeColors ? this._strokeColors.join(\",\") : \"\";\n    }\n\n    set strokeColors(value: string) {\n        this._strokeColors = UIUtils.fillArray(Styles.buttonLabelColors, value, String);\n        this._setStateChanged();\n    }\n\n    /**\n     * 表示按钮文本标签的边距。\n     * <p><b>格式：</b>\"上边距,右边距,下边距,左边距\"。</p>\n     */\n    get labelPadding(): string {\n        this.createText();\n        return this._text.padding.join(\",\");\n    }\n\n    set labelPadding(value: string) {\n        this.createText();\n        this._text.padding = UIUtils.fillArray(Styles.labelPadding, value, Number);\n    }\n\n    /**\n     * 表示按钮文本标签的字体大小。\n     * @see laya.display.Text.fontSize()\n     */\n    get labelSize(): number {\n        this.createText();\n        return this._text.fontSize;\n    }\n\n    set labelSize(value: number) {\n        this.createText();\n        this._text.fontSize = value\n    }\n\n    /**\n     * <p>描边宽度（以像素为单位）。</p>\n     * 默认值0，表示不描边。\n     * @see laya.display.Text.stroke()\n     */\n    get labelStroke(): number {\n        this.createText();\n        return this._text.stroke;\n    }\n\n    set labelStroke(value: number) {\n        this.createText();\n        this._text.stroke = value\n    }\n\n    /**\n     * <p>描边颜色，以字符串表示。</p>\n     * 默认值为 \"#000000\"（黑色）;\n     * @see laya.display.Text.strokeColor()\n     */\n    get labelStrokeColor(): string {\n        this.createText();\n        return this._text.strokeColor;\n    }\n\n    set labelStrokeColor(value: string) {\n        this.createText();\n        this._text.strokeColor = value\n    }\n\n    /**\n     * 表示按钮文本标签是否为粗体字。\n     * @see laya.display.Text.bold()\n     */\n    get labelBold(): boolean {\n        this.createText();\n        return this._text.bold;\n    }\n\n    set labelBold(value: boolean) {\n        this.createText();\n        this._text.bold = value;\n    }\n\n    /**\n     * 表示按钮文本标签的字体名称，以字符串形式表示。\n     */\n    get labelFont(): string {\n        this.createText();\n        return this._text.font;\n    }\n\n    set labelFont(value: string) {\n        this.createText();\n        this._text.font = value;\n    }\n\n    /**\n     * 标签对齐模式，\n     */\n    get labelAlign(): string {\n        this.createText()\n        return this._text.align;\n    }\n\n    set labelAlign(value: string) {\n        this.createText()\n        this._text.align = value;\n    }\n\n    /**\n     * 标签垂直对齐模式，\n     */\n    get labelVAlign(): string {\n        this.createText()\n        return this._text.valign;\n    }\n\n    set labelVAlign(value: string) {\n        this.createText()\n        this._text.valign = value;\n    }\n\n    /**\n     * 对象的点击事件处理器函数（无默认参数）。\n     * @implements\n     */\n    get clickHandler(): Handler {\n        return this._clickHandler;\n    }\n\n    set clickHandler(value: Handler) {\n        this._clickHandler = value;\n    }\n\n    /**\n     * 按钮文本标签 <code>Text</code> 控件。\n     */\n    get text(): Text {\n        this.createText();\n        return this._text;\n    }\n\n    /**\n     * 兼容老IDE\n     * @private\n    */\n    set text(value: Text) {\n        if (typeof (value) == \"string\") {\n            this._text && (this._text.text = value);\n        }\n    }\n\n    /**\n     * <p>当前实例的位图 <code>AutoImage</code> 实例的有效缩放网格数据。</p>\n     * <p>数据格式：\"上边距,右边距,下边距,左边距,是否重复填充(值为0：不重复填充，1：重复填充)\"，以逗号分隔。\n     * <ul><li>例如：\"4,4,4,4,1\"</li></ul></p>\n     */\n    get sizeGrid(): string {\n        if (this._graphics.sizeGrid) return this._graphics.sizeGrid.join(\",\");\n        return null;\n    }\n\n    set sizeGrid(value: string) {\n        if (value)\n            this._graphics.sizeGrid = UIUtils.fillArray(Styles.defaultSizeGrid, value, Number);\n        else\n            this._graphics.sizeGrid = null;\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n     */\n    _setWidth(value: number) {\n        super._setWidth(value);\n        if (this._autoSize) {\n            this._graphics.width = value;\n            this._text && (this._text.width = value);\n        }\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n     */\n    _setHeight(value: number) {\n        super._setHeight(value);\n        if (this._autoSize) {\n            this._graphics.height = value;\n            this._text && (this._text.height = value);\n        }\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n     */\n    set_dataSource(value: any) {\n        if (typeof (value) == 'number' || typeof (value) == 'string') {\n            this._dataSource = value;\n            this.label = value + \"\";\n        }\n        else\n            super.set_dataSource(value);\n    }\n\n    /**图标x,y偏移，格式：100,100*/\n    get iconOffset(): string {\n        return this._graphics._offset ? this._graphics._offset.join(\",\") : null;\n    }\n\n    set iconOffset(value: string) {\n        if (value)\n            this._graphics._offset = UIUtils.fillArray([1, 1], value, Number);\n        else\n            this._graphics._offset = [];\n    }\n\n    /**@private */\n    protected _setStateChanged(): void {\n        if (!this._stateChanged) {\n            this._stateChanged = true;\n            this.callLater(this.changeState);\n        }\n    }\n}\n\nconst stateMap: any = { \"mouseup\": 0, \"mouseover\": 1, \"mousedown\": 2, \"mouseout\": 0 };","import { Button } from \"./Button\"\n\n/**\n * 当按钮的选中状态（ <code>selected</code> 属性）发生改变时调度。\n * @eventType laya.events.Event\n */\n/*[Event(name = \"change\", type = \"laya.events.Event\")]*/\n\n/**\n * <code>CheckBox</code> 组件显示一个小方框，该方框内可以有选中标记。\n * <code>CheckBox</code> 组件还可以显示可选的文本标签，默认该标签位于 CheckBox 右侧。\n * <p><code>CheckBox</code> 使用 <code>dataSource</code>赋值时的的默认属性是：<code>selected</code>。</p>\n *\n * @example <caption>以下示例代码，创建了一个 <code>CheckBox</code> 实例。</caption>\n * package\n *\t{\n *\t\timport laya.ui.CheckBox;\n *\t\timport laya.utils.Handler;\n *\t\tpublic class CheckBox_Example\n *\t\t{\n *\t\t\tpublic function CheckBox_Example()\n *\t\t\t{\n *\t\t\t\tLaya.init(640, 800);//设置游戏画布宽高。\n * \t\t\t\tLaya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\n *\t\t\t\tLaya.loader.load(\"resource/ui/check.png\", Handler.create(this,onLoadComplete));//加载资源。\n *\t\t\t}\n *\t\t\tprivate function onLoadComplete():void\n *\t\t\t{\n *\t\t\t\ttrace(\"资源加载完成！\");\n *\t\t\t\tvar checkBox:CheckBox = new CheckBox(\"resource/ui/check.png\", \"这个是一个CheckBox组件。\");//创建一个 CheckBox 类的实例对象 checkBox ,传入它的皮肤skin和标签label。\n *\t\t\t\tcheckBox.x = 100;//设置 checkBox 对象的属性 x 的值，用于控制 checkBox 对象的显示位置。\n *\t\t\t\tcheckBox.y = 100;//设置 checkBox 对象的属性 y 的值，用于控制 checkBox 对象的显示位置。\n *\t\t\t\tcheckBox.clickHandler = new Handler(this, onClick, [checkBox]);//设置 checkBox 的点击事件处理器。\n *\t\t\t\tLaya.stage.addChild(checkBox);//将此 checkBox 对象添加到显示列表。\n *\t\t\t}\n *\t\t\tprivate function onClick(checkBox:CheckBox):void\n *\t\t\t{\n *\t\t\t\ttrace(\"输出选中状态: checkBox.selected = \" + checkBox.selected);\n *\t\t\t}\n *\t\t}\n *\t}\n * @example\n * Laya.init(640, 800);//设置游戏画布宽高\n * Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色\n * Laya.loader.load(\"resource/ui/check.png\",laya.utils.Handler.create(this,loadComplete));//加载资源\n * function loadComplete()\n * {\n *     console.log(\"资源加载完成！\");\n *     var checkBox:laya.ui.CheckBox= new laya.ui.CheckBox(\"resource/ui/check.png\", \"这个是一个CheckBox组件。\");//创建一个 CheckBox 类的类的实例对象 checkBox ,传入它的皮肤skin和标签label。\n *     checkBox.x =100;//设置 checkBox 对象的属性 x 的值，用于控制 checkBox 对象的显示位置。\n *     checkBox.y =100;//设置 checkBox 对象的属性 y 的值，用于控制 checkBox 对象的显示位置。\n *     checkBox.clickHandler = new laya.utils.Handler(this,this.onClick,[checkBox],false);//设置 checkBox 的点击事件处理器。\n *     Laya.stage.addChild(checkBox);//将此 checkBox 对象添加到显示列表。\n * }\n * function onClick(checkBox)\n * {\n *     console.log(\"checkBox.selected = \",checkBox.selected);\n * }\n * @example\n * import CheckBox= laya.ui.CheckBox;\n * import Handler=laya.utils.Handler;\n * class CheckBox_Example{\n *     constructor()\n *     {\n *         Laya.init(640, 800);\n *         Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\n *         Laya.loader.load(\"resource/ui/check.png\", Handler.create(this,this.onLoadComplete));//加载资源。\n *     }\n *     private onLoadComplete()\n *     {\n *         var checkBox:CheckBox = new CheckBox(\"resource/ui/check.png\", \"这个是一个CheckBox组件。\");//创建一个 CheckBox 类的实例对象 checkBox ,传入它的皮肤skin和标签label。\n *         checkBox.x = 100;//设置 checkBox 对象的属性 x 的值，用于控制 checkBox 对象的显示位置。\n *         checkBox.y = 100;//设置 checkBox 对象的属性 y 的值，用于控制 checkBox 对象的显示位置。\n *         checkBox.clickHandler = new Handler(this, this.onClick,[checkBox]);//设置 checkBox 的点击事件处理器。\n *         Laya.stage.addChild(checkBox);//将此 checkBox 对象添加到显示列表。\n *     }\n *     private onClick(checkBox:CheckBox):void\n *     {\n *         console.log(\"输出选中状态: checkBox.selected = \" + checkBox.selected);\n *     }\n * }\n */\nexport class CheckBox extends Button {\n\n    /**\n     * 创建一个新的 <code>CheckBox</code> 组件实例。\n     * @param skin 皮肤资源地址。\n     * @param label 文本标签的内容。\n     */\n    constructor(skin: string = null, label: string = \"\") {\n        super(skin, label);\n        this.toggle = true;\n        this._autoSize = false;\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n     */\n    protected preinitialize(): void {\n        super.preinitialize();\n        this.toggle = true;\n        this._autoSize = false;\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n     */\n    protected initialize(): void {\n        super.initialize();\n        this.createText();\n        this._text.align = \"left\";\n        this._text.valign = \"top\";\n        this._text.width = null;\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n     */\n    set_dataSource(value: any) {\n        this._dataSource = value;\n        if (value instanceof Boolean)\n            this.selected = value as boolean;\n        else if (typeof (value) == 'string')\n            this.selected = value === \"true\";\n        else\n            super.set_dataSource(value);\n    }\n}","import { UIComponent } from \"./UIComponent\";\nimport { AutoBitmap } from \"./AutoBitmap\";\nimport { UIUtils } from \"./UIUtils\";\nimport { Styles } from \"./Styles\";\nimport { NodeFlags } from \"../Const\"\nimport { Event } from \"../events/Event\"\nimport { Loader } from \"../net/Loader\"\nimport { Texture } from \"../resource/Texture\"\nimport { Handler } from \"../utils/Handler\"\nimport { ILaya } from \"../../ILaya\";\nimport { URL } from \"../net/URL\";\n\n/**\n * 图片加载完成后调度。\n * @eventType Event.LOADED\n */\n/*[Event(name = \"loaded\", type = \"laya.events.Event\")]*/\n/**\n * 当前帧发生变化后调度。\n * @eventType laya.events.Event\n */\n/*[Event(name = \"change\", type = \"laya.events.Event\")]*/\n\n/**\n * <p> <code>Clip</code> 类是位图切片动画。</p>\n * <p> <code>Clip</code> 可将一张图片，按横向分割数量 <code>clipX</code> 、竖向分割数量 <code>clipY</code> ，\n * 或横向分割每个切片的宽度 <code>clipWidth</code> 、竖向分割每个切片的高度 <code>clipHeight</code> ，\n * 从左向右，从上到下，分割组合为一个切片动画。</p>\n * Image和Clip组件是唯一支持异步加载的两个组件，比如clip.skin = \"abc/xxx.png\"，其他UI组件均不支持异步加载。\n *\n * @example <caption>以下示例代码，创建了一个 <code>Clip</code> 实例。</caption>\n * package\n *\t{\n *\t\timport laya.ui.Clip;\n *\t\tpublic class Clip_Example\n *\t\t{\n *\t\t\tprivate var clip:Clip;\n *\t\t\tpublic function Clip_Example()\n *\t\t\t{\n *\t\t\t\tLaya.init(640, 800);//设置游戏画布宽高。\n *\t\t\t\tLaya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\n *\t\t\t\tonInit();\n *\t\t\t}\n *\t\t\tprivate function onInit():void\n *\t\t\t{\n *\t\t\t\tclip = new Clip(\"resource/ui/clip_num.png\", 10, 1);//创建一个 Clip 类的实例对象 clip ,传入它的皮肤skin和横向分割数量、竖向分割数量。\n *\t\t\t\tclip.autoPlay = true;//设置 clip 动画自动播放。\n *\t\t\t\tclip.interval = 100;//设置 clip 动画的播放时间间隔。\n *\t\t\t\tclip.x = 100;//设置 clip 对象的属性 x 的值，用于控制 clip 对象的显示位置。\n *\t\t\t\tclip.y = 100;//设置 clip 对象的属性 y 的值，用于控制 clip 对象的显示位置。\n *\t\t\t\tclip.on(Event.CLICK, this, onClick);//给 clip 添加点击事件函数侦听。\n *\t\t\t\tLaya.stage.addChild(clip);//将此 clip 对象添加到显示列表。\n *\t\t\t}\n *\t\t\tprivate function onClick():void\n *\t\t\t{\n *\t\t\t\ttrace(\"clip 的点击事件侦听处理函数。clip.total=\"+ clip.total);\n *\t\t\t\tif (clip.isPlaying == true)\n *\t\t\t\t{\n *\t\t\t\t\tclip.stop();//停止动画。\n *\t\t\t\t}else {\n *\t\t\t\t\tclip.play();//播放动画。\n *\t\t\t\t}\n *\t\t\t}\n *\t\t}\n *\t}\n * @example\n * Laya.init(640, 800);//设置游戏画布宽高\n * Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色\n * var clip;\n * Laya.loader.load(\"resource/ui/clip_num.png\",laya.utils.Handler.create(this,loadComplete));//加载资源\n * function loadComplete() {\n *     console.log(\"资源加载完成！\");\n *     clip = new laya.ui.Clip(\"resource/ui/clip_num.png\",10,1);//创建一个 Clip 类的实例对象 clip ,传入它的皮肤skin和横向分割数量、竖向分割数量。\n *     clip.autoPlay = true;//设置 clip 动画自动播放。\n *     clip.interval = 100;//设置 clip 动画的播放时间间隔。\n *     clip.x =100;//设置 clip 对象的属性 x 的值，用于控制 clip 对象的显示位置。\n *     clip.y =100;//设置 clip 对象的属性 y 的值，用于控制 clip 对象的显示位置。\n *     clip.on(Event.CLICK,this,onClick);//给 clip 添加点击事件函数侦听。\n *     Laya.stage.addChild(clip);//将此 clip 对象添加到显示列表。\n * }\n * function onClick()\n * {\n *     console.log(\"clip 的点击事件侦听处理函数。\");\n *     if(clip.isPlaying == true)\n *     {\n *         clip.stop();\n *     }else {\n *         clip.play();\n *     }\n * }\n * @example\n * import Clip = laya.ui.Clip;\n * import Handler = laya.utils.Handler;\n * class Clip_Example {\n *     private clip: Clip;\n *     constructor() {\n *         Laya.init(640, 800);//设置游戏画布宽高。\n *         Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\n *         this.onInit();\n *     }\n *     private onInit(): void {\n *         this.clip = new Clip(\"resource/ui/clip_num.png\", 10, 1);//创建一个 Clip 类的实例对象 clip ,传入它的皮肤skin和横向分割数量、竖向分割数量。\n *         this.clip.autoPlay = true;//设置 clip 动画自动播放。\n *         this.clip.interval = 100;//设置 clip 动画的播放时间间隔。\n *         this.clip.x = 100;//设置 clip 对象的属性 x 的值，用于控制 clip 对象的显示位置。\n *         this.clip.y = 100;//设置 clip 对象的属性 y 的值，用于控制 clip 对象的显示位置。\n *         this.clip.on(laya.events.Event.CLICK, this, this.onClick);//给 clip 添加点击事件函数侦听。\n *         Laya.stage.addChild(this.clip);//将此 clip 对象添加到显示列表。\n *     }\n *     private onClick(): void {\n *         console.log(\"clip 的点击事件侦听处理函数。clip.total=\" + this.clip.total);\n *         if (this.clip.isPlaying == true) {\n *             this.clip.stop();//停止动画。\n *         } else {\n *             this.clip.play();//播放动画。\n *         }\n *     }\n * }\n *\n */\nexport class Clip extends UIComponent {\n    /**@private */\n    protected _sources: Texture[];\n    /**@private */\n    protected _skin: string;\n    /**@private */\n    protected _clipX: number = 1;\n    /**@private */\n    protected _clipY: number = 1;\n    /**@private */\n    protected _clipWidth: number = 0;\n    /**@private */\n    protected _clipHeight: number = 0;\n    /**@private */\n    protected _autoPlay: boolean;\n    /**@private */\n    protected _interval: number = 50;\n    /**@private */\n    protected _complete: Handler;\n    /**@private */\n    protected _isPlaying: boolean;\n    /**@private */\n    protected _index: number = 0;\n    /**@private */\n    protected _clipChanged: boolean;\n    /**@private */\n    protected _group: string;\n    /**@private */\n    protected _toIndex: number = -1;\n\n    declare _graphics: AutoBitmap;\n\n    /**\n     * 创建一个新的 <code>Clip</code> 示例。\n     * @param url 资源类库名或者地址\n     * @param clipX x方向分割个数\n     * @param clipY y方向分割个数\n     */\n    constructor(url: string = null, clipX: number = 1, clipY: number = 1) {\n        super();\n\n        this._sources = [];\n        this._clipX = clipX;\n        this._clipY = clipY;\n        this.skin = url;\n    }\n\n    /**\n     * @inheritDoc\n     * @override \n     */\n    protected createChildren(): void {\n        this.setGraphics(new AutoBitmap(), true);\n    }\n\n    /**@private\t @override*/\n    protected _onDisplay(e?: boolean): void {\n        if (this._isPlaying) {\n            if (this._getBit(NodeFlags.DISPLAYED_INSTAGE)) this.play();\n            else this.stop();\n        } else if (this._autoPlay) {\n            this.play();\n        }\n    }\n\n    /**\n     * @copy laya.ui.Image#skin\n     */\n    get skin(): string {\n        return this._skin;\n    }\n\n    set skin(value: string) {\n        if (this._skin == value)\n            return;\n\n        this._setSkin(value);\n    }\n\n    _setSkin(url: string): Promise<void> {\n        this._skin = url;\n        if (url) {\n            if (this._skinBaseUrl)\n                url = URL.formatURL(url, this._skinBaseUrl);\n            if (!Loader.getRes(url))\n                return ILaya.loader.load(url, Loader.IMAGE).then(() => this._skinLoaded());\n            else {\n                this._skinLoaded();\n                return Promise.resolve();\n            }\n        }\n        else {\n            this._graphics.source = null;\n            return Promise.resolve();\n        }\n    }\n\n    protected _skinLoaded(): void {\n        if (this._destroyed)\n            return;\n\n        this._setClipChanged();\n        this._sizeChanged();\n        this.event(Event.LOADED);\n    }\n\n    /**X轴（横向）切片数量。*/\n    get clipX(): number {\n        return this._clipX;\n    }\n\n    set clipX(value: number) {\n        this._clipX = value || 1;\n        this._setClipChanged()\n    }\n\n    /**Y轴(竖向)切片数量。*/\n    get clipY(): number {\n        return this._clipY;\n    }\n\n    set clipY(value: number) {\n        this._clipY = value || 1;\n        this._setClipChanged()\n    }\n\n    /**\n     * 横向分割时每个切片的宽度，与 <code>clipX</code> 同时设置时优先级高于 <code>clipX</code> 。\n     */\n    get clipWidth(): number {\n        return this._clipWidth;\n    }\n\n    set clipWidth(value: number) {\n        this._clipWidth = value;\n        this._setClipChanged()\n    }\n\n    /**\n     * 竖向分割时每个切片的高度，与 <code>clipY</code> 同时设置时优先级高于 <code>clipY</code> 。\n     */\n    get clipHeight(): number {\n        return this._clipHeight;\n    }\n\n    set clipHeight(value: number) {\n        this._clipHeight = value;\n        this._setClipChanged()\n    }\n\n    /**\n     * @private\n     * 改变切片的资源、切片的大小。\n     */\n    protected changeClip(): void {\n        this._clipChanged = false;\n        if (!this._skin || this._destroyed) return;\n\n        let url = this._skinBaseUrl ? URL.formatURL(this._skin, this._skinBaseUrl) : this._skin;\n\n        let img: any = Loader.getRes(url);\n        if (img) {\n            this.loadComplete(this._skin, img);\n        } else {\n            ILaya.loader.load(url, Handler.create(this, this.loadComplete, [this._skin]), null, Loader.IMAGE);\n        }\n    }\n\n    /**\n     * @private\n     * 加载切片图片资源完成函数。\n     * @param url 资源地址。\n     * @param img 纹理。\n     */\n    protected loadComplete(url: string, img: Texture): void {\n        if (url !== this._skin)\n            return;\n\n        this._sources.length = 0;\n        if (img) {\n            var w: number = this._clipWidth || Math.ceil(img.sourceWidth / this._clipX);\n            var h: number = this._clipHeight || Math.ceil(img.sourceHeight / this._clipY);\n\n            for (let i = 0; i < this._clipY; i++) {\n                for (let j = 0; j < this._clipX; j++) {\n                    this._sources.push(img.getCachedClip(w * j, h * i, w, h));\n                }\n            }\n        }\n\n        this.index = this._index;\n        this.event(Event.LOADED);\n        this.onCompResize();\n    }\n\n    /**\n     * 源数据。\n     */\n    get sources(): Texture[] {\n        return this._sources;\n    }\n\n    set sources(value: Texture[]) {\n        this._sources = value;\n        this.index = this._index;\n        this.event(Event.LOADED);\n    }\n\n    /**\n     * 资源分组。\n     */\n    get group(): string {\n        return this._group;\n    }\n\n    set group(value: string) {\n        if (value && this._skin) Loader.setGroup(this._skin, value);\n        this._group = value;\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n     */\n    _setWidth(value: number) {\n        super._setWidth(value);\n        this._graphics.width = value;\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n     */\n    _setHeight(value: number) {\n        super._setHeight(value);\n        this._graphics.height = value;\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n     */\n    protected measureWidth(): number {\n        this.runCallLater(this.changeClip);\n        return this._graphics.width;\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n     */\n    protected measureHeight(): number {\n        this.runCallLater(this.changeClip);\n        return this._graphics.height;\n    }\n\n    /**\n     * <p>当前实例的位图 <code>AutoImage</code> 实例的有效缩放网格数据。</p>\n     * <p>数据格式：\"上边距,右边距,下边距,左边距,是否重复填充(值为0：不重复填充，1：重复填充)\"，以逗号分隔。\n     * <ul><li>例如：\"4,4,4,4,1\"</li></ul></p>\n     */\n    get sizeGrid(): string {\n        if (this._graphics.sizeGrid) return this._graphics.sizeGrid.join(\",\");\n        return null;\n    }\n\n    set sizeGrid(value: string) {\n        if (value)\n            this._graphics.sizeGrid = UIUtils.fillArray(Styles.defaultSizeGrid, value, Number);\n        else\n            this._graphics.sizeGrid = null;\n    }\n\n    /**\n     * 当前帧索引。\n     */\n    get index(): number {\n        return this._index;\n    }\n\n    set index(value: number) {\n        this._index = value;\n        this._graphics && (this._graphics.source = this._sources[value]);\n        this.event(Event.CHANGE);\n    }\n\n    /**\n     * 切片动画的总帧数。\n     */\n    get total(): number {\n        this.runCallLater(this.changeClip);\n        return this._sources.length;\n    }\n\n    /**\n     * 表示是否自动播放切片动画，若自动播放值为true,否则值为false;\n     * <p>可控制切片动画的播放、停止。</p>\n     */\n    get autoPlay(): boolean {\n        return this._autoPlay;\n    }\n\n    set autoPlay(value: boolean) {\n        if (this._autoPlay != value) {\n            this._autoPlay = value;\n            value ? this.play() : this.stop();\n        }\n    }\n\n    /**\n     * 表示切片动画播放间隔时间(以毫秒为单位)。\n     */\n    get interval(): number {\n        return this._interval;\n    }\n\n    set interval(value: number) {\n        if (this._interval != value) {\n            this._interval = value;\n            if (this._isPlaying) this.play();\n        }\n    }\n\n    /**\n     * 表示切片动画的当前播放状态。\n     * 如果切片动画正在播放中，则为true，否则为flash。\n     */\n    get isPlaying(): boolean {\n        return this._isPlaying;\n    }\n\n    set isPlaying(value: boolean) {\n        this._isPlaying = value;\n    }\n\n    /**\n     * 播放切片动画。\n     * @param\tfrom\t开始索引\n     * @param\tto\t\t结束索引，-1为不限制\n     */\n    play(from: number = 0, to: number = -1): void {\n        this._setClipChanged();\n        this._isPlaying = true;\n        this.index = from;\n        this._toIndex = to;\n        // this._index++;\n        //修复clip重复播放丢失帧的问题\n        ILaya.timer.loop(this.interval, this, this._loop);\n\n        this.on(Event.DISPLAY, this, this._onDisplay);\n        this.on(Event.UNDISPLAY, this, this._onDisplay);\n    }\n\n    /**\n     * @private\n     */\n    protected _loop(): void {\n        if (this._visible) {\n            this._index++;\n            if (this._toIndex > -1 && this._index >= this._toIndex)\n                this.stop();\n            else if (this._index >= this._sources.length)\n                this._index = 0;\n            this.index = this._index;\n        }\n    }\n\n    /**\n     * 停止切片动画。\n     */\n    stop(): void {\n        this._isPlaying = false;\n        ILaya.timer.clear(this, this._loop);\n        this.event(Event.COMPLETE);\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n     */\n    set_dataSource(value: any): void {\n        this._dataSource = value;\n        if (typeof (value) == 'number' || typeof (value) == 'string')\n            this.index = parseInt(value as string);\n        else\n            super.set_dataSource(value);\n    }\n\n    /**@private */\n    protected _setClipChanged(): void {\n        if (!this._clipChanged) {\n            this._clipChanged = true;\n            this.callLater(this.changeClip);\n        }\n    }\n}","import { UIComponent } from \"./UIComponent\";\nimport { Box } from \"./Box\";\nimport { Button } from \"./Button\";\nimport { UIUtils } from \"./UIUtils\";\nimport { Graphics } from \"../display/Graphics\"\nimport { Input } from \"../display/Input\"\nimport { Sprite } from \"../display/Sprite\"\nimport { Event } from \"../events/Event\"\nimport { Point } from \"../maths/Point\"\nimport { Handler } from \"../utils/Handler\"\nimport { ILaya } from \"../../ILaya\";\nimport { HideFlags } from \"../Const\";\n\n/**\n * 选择项改变后调度。\n * @eventType laya.events.Event\n */\n/*[Event(name = \"change\", type = \"laya.events.Event\")]*/\n\n/**\n * <code>ColorPicker</code> 组件将显示包含多个颜色样本的列表，用户可以从中选择颜色。\n *\n * @example <caption>以下示例代码，创建了一个 <code>ColorPicker</code> 实例。</caption>\n * package\n *\t{\n *\t\timport laya.ui.ColorPicker;\n *\t\timport laya.utils.Handler;\n *\t\tpublic class ColorPicker_Example\n *\t\t{\n *\t\t\tpublic function ColorPicker_Example()\n *\t\t\t{\n *\t\t\t\tLaya.init(640, 800);//设置游戏画布宽高。\n *\t\t\t\tLaya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\n *\t\t\t\tLaya.loader.load(\"resource/ui/color.png\", Handler.create(this,onLoadComplete));//加载资源。\n *\t\t\t}\n *\t\t\tprivate function onLoadComplete():void\n *\t\t\t{\n *\t\t\t\ttrace(\"资源加载完成！\");\n *\t\t\t\tvar colorPicket:ColorPicker = new ColorPicker();//创建一个 ColorPicker 类的实例对象 colorPicket 。\n *\t\t\t\tcolorPicket.skin = \"resource/ui/color.png\";//设置 colorPicket 的皮肤。\n *\t\t\t\tcolorPicket.x = 100;//设置 colorPicket 对象的属性 x 的值，用于控制 colorPicket 对象的显示位置。\n *\t\t\t\tcolorPicket.y = 100;//设置 colorPicket 对象的属性 y 的值，用于控制 colorPicket 对象的显示位置。\n *\t\t\t\tcolorPicket.changeHandler = new Handler(this, onChangeColor,[colorPicket]);//设置 colorPicket 的颜色改变回调函数。\n *\t\t\t\tLaya.stage.addChild(colorPicket);//将此 colorPicket 对象添加到显示列表。\n *\t\t\t}\n *\t\t\tprivate function onChangeColor(colorPicket:ColorPicker):void\n *\t\t\t{\n *\t\t\t\ttrace(\"当前选择的颜色： \" + colorPicket.selectedColor);\n *\t\t\t}\n *\t\t}\n *\t}\n * @example\n * Laya.init(640, 800);//设置游戏画布宽高\n * Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色\n * Laya.loader.load(\"resource/ui/color.png\",laya.utils.Handler.create(this,loadComplete));//加载资源\n * function loadComplete()\n * {\n *     console.log(\"资源加载完成！\");\n *     var colorPicket = new laya.ui.ColorPicker();//创建一个 ColorPicker 类的实例对象 colorPicket 。\n *     colorPicket.skin = \"resource/ui/color.png\";//设置 colorPicket 的皮肤。\n *     colorPicket.x = 100;//设置 colorPicket 对象的属性 x 的值，用于控制 colorPicket 对象的显示位置。\n *     colorPicket.y = 100;//设置 colorPicket 对象的属性 y 的值，用于控制 colorPicket 对象的显示位置。\n *     colorPicket.changeHandler = laya.utils.Handler.create(this, onChangeColor,[colorPicket],false);//设置 colorPicket 的颜色改变回调函数。\n *     Laya.stage.addChild(colorPicket);//将此 colorPicket 对象添加到显示列表。\n * }\n * function onChangeColor(colorPicket)\n * {\n *     console.log(\"当前选择的颜色： \" + colorPicket.selectedColor);\n * }\n * @example\n * import ColorPicker = laya.ui.ColorPicker;\n * import Handler = laya.utils.Handler;\n * class ColorPicker_Example {\n *     constructor() {\n *         Laya.init(640, 800);//设置游戏画布宽高。\n *         Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\n *         Laya.loader.load(\"resource/ui/color.png\", Handler.create(this, this.onLoadComplete));//加载资源。\n *     }\n *     private onLoadComplete(): void {\n *         console.log(\"资源加载完成！\");\n *         var colorPicket: ColorPicker = new ColorPicker();//创建一个 ColorPicker 类的实例对象 colorPicket 。\n *         colorPicket.skin = \"resource/ui/color.png\";//设置 colorPicket 的皮肤。\n *         colorPicket.x = 100;//设置 colorPicket 对象的属性 x 的值，用于控制 colorPicket 对象的显示位置。\n *         colorPicket.y = 100;//设置 colorPicket 对象的属性 y 的值，用于控制 colorPicket 对象的显示位置。\n *         colorPicket.changeHandler = new Handler(this, this.onChangeColor, [colorPicket]);//设置 colorPicket 的颜色改变回调函数。\n *         Laya.stage.addChild(colorPicket);//将此 colorPicket 对象添加到显示列表。\n *     }\n *     private onChangeColor(colorPicket: ColorPicker): void {\n *         console.log(\"当前选择的颜色： \" + colorPicket.selectedColor);\n *     }\n * }\n */\nexport class ColorPicker extends UIComponent {\n\n    /**\n     * 当颜色发生改变时执行的函数处理器。\n     * 默认返回参数color：颜色值字符串。\n     */\n    changeHandler: Handler;\n\n    /**\n     * @private\n     * 指定每个正方形的颜色小格子的宽高（以像素为单位）。\n     */\n    protected _gridSize: number = 11;\n    /**\n     * @private\n     * 表示颜色样本列表面板的背景颜色值。\n     */\n    protected _bgColor: string = \"#ffffff\";\n    /**\n     * @private\n     * 表示颜色样本列表面板的边框颜色值。\n     */\n    protected _borderColor: string = \"#000000\";\n    /**\n     * @private\n     * 表示颜色样本列表面板选择或输入的颜色值。\n     */\n    protected _inputColor: string = \"#000000\";\n    /**\n     * @private\n     * 表示颜色输入框的背景颜色值。\n     */\n    protected _inputBgColor: string = \"#efefef\";\n    /**\n     * @private\n     * 表示颜色样本列表面板。\n     */\n    protected _colorPanel: Box;\n    /**\n     * @private\n     * 表示颜色网格。\n     */\n    protected _colorTiles: Sprite;\n    /**\n     * @private\n     * 表示颜色块显示对象。\n     */\n    protected _colorBlock: Sprite;\n    /**\n     * @private\n     * 表示颜色输入框控件 <code>Input</code> 。\n     */\n    protected _colorInput: Input;\n    /**\n     * @private\n     * 表示点击后显示颜色样本列表面板的按钮控件 <code>Button</code> 。\n     */\n    protected _colorButton: Button;\n    /**\n     * @private\n     * 表示颜色值列表。\n     */\n    protected _colors: any[] = [];\n    /**\n     * @private\n     * 表示选择的颜色值。\n     */\n    protected _selectedColor: string = \"#000000\";\n    /** @private */\n    protected _panelChanged: boolean;\n\n    constructor(createChildren = true) {\n        super(false);\n        if (createChildren) {\n            this.preinitialize();\n            this.createChildren();\n            this.initialize();\n        }\n    }\n    /**\n     * @inheritDoc \n     * @override\n     */\n    destroy(destroyChild: boolean = true): void {\n        ILaya.stage.off(Event.MOUSE_DOWN, this, this.removeColorBox);\n        super.destroy(destroyChild);\n        this._colorPanel && this._colorPanel.destroy(destroyChild);\n        this._colorButton && this._colorButton.destroy(destroyChild);\n        this._colorPanel = null;\n        this._colorTiles = null;\n        this._colorBlock = null;\n        this._colorInput = null;\n        this._colorButton = null;\n        this._colors = null;\n        this.changeHandler = null;\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n     */\n    protected createChildren(): void {\n        this._colorButton = new Button()\n        this._colorButton.hideFlags = HideFlags.HideAndDontSave;\n        this.addChild(this._colorButton);\n        this._colorPanel = new Box();\n        this._colorPanel.hideFlags = HideFlags.HideAndDontSave;\n        this._colorPanel.size(230, 166);\n        this._colorPanel.addChild(this._colorTiles = new Sprite());\n        this._colorPanel.addChild(this._colorBlock = new Sprite());\n        this._colorPanel.addChild(this._colorInput = new Input());\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n     */\n    protected initialize(): void {\n        this._colorButton.on(Event.CLICK, this, this.onColorButtonClick);\n\n        this._colorBlock.pos(5, 5);\n\n        this._colorInput.pos(60, 5);\n        this._colorInput.size(60, 20);\n        this._colorInput.on(Event.CHANGE, this, this.onColorInputChange);\n        this._colorInput.on(Event.KEY_DOWN, this, this.onColorFieldKeyDown);\n\n        this._colorTiles.pos(5, 30);\n        this._colorTiles.on(Event.MOUSE_MOVE, this, this.onColorTilesMouseMove);\n        this._colorTiles.on(Event.CLICK, this, this.onColorTilesClick);\n        this._colorTiles.size(20 * this._gridSize, 12 * this._gridSize);\n\n        this._colorPanel.on(Event.MOUSE_DOWN, this, this.onPanelMouseDown);\n\n        this.bgColor = this._bgColor;\n    }\n\n    private onPanelMouseDown(e: Event): void {\n        e.stopPropagation();\n    }\n\n    /**\n     * 改变颜色样本列表面板。\n     */\n    protected changePanel(): void {\n        this._panelChanged = false;\n        var g: Graphics = this._colorPanel.graphics;\n        g.clear(true);\n        //g.drawRect(0, 0, 230, 166, _bgColor);\n        g.drawRect(0, 0, 230, 166, this._bgColor, this._borderColor);\n\n        this.drawBlock(this._selectedColor);\n\n        this._colorInput.borderColor = this._borderColor;\n        this._colorInput.bgColor = this._inputBgColor;\n        this._colorInput.color = this._inputColor;\n\n        g = this._colorTiles.graphics;\n        g.clear(true);\n\n        var mainColors: any[] = [0x000000, 0x333333, 0x666666, 0x999999, 0xCCCCCC, 0xFFFFFF, 0xFF0000, 0x00FF00, 0x0000FF, 0xFFFF00, 0x00FFFF, 0xFF00FF];\n        for (var i: number = 0; i < 12; i++) {\n            for (var j: number = 0; j < 20; j++) {\n                var color: number;\n                if (j === 0) color = mainColors[i];\n                else if (j === 1) color = 0x000000;\n                else color = (((i * 3 + j / 6) % 3 << 0) + ((i / 6) << 0) * 3) * 0x33 << 16 | j % 6 * 0x33 << 8 | (i << 0) % 6 * 0x33;\n\n                var strColor: string = UIUtils.toColor(color);\n                this._colors.push(strColor);\n\n                var x: number = j * this._gridSize;\n                var y: number = i * this._gridSize;\n\n                g.drawRect(x, y, this._gridSize, this._gridSize, strColor, \"#000000\");\n                //g.drawRect(x + 1, y + 1, _gridSize - 1, _gridSize - 1, strColor);\n            }\n        }\n    }\n\n    /**\n     * 颜色样本列表面板的显示按钮的 <code>Event.MOUSE_DOWN</code> 事件侦听处理函数。\n     */\n    private onColorButtonClick(e: Event): void {\n        if (this._colorPanel.parent) this.close();\n        else this.open();\n    }\n\n    /**\n     * 打开颜色样本列表面板。\n     */\n    open(): void {\n        let stage = ILaya.stage;\n        var p: Point = this.localToGlobal(new Point());\n        var px: number = p.x + this._colorPanel.width <= stage.width ? p.x : stage.width - this._colorPanel.width;\n        var py: number = p.y + this._colorButton.height;\n        py = py + this._colorPanel.height <= stage.height ? py : p.y - this._colorPanel.height;\n        this._colorPanel.pos(px, py);\n        this._colorPanel.zOrder = 1001;\n        stage.addChild(this._colorPanel);\n        stage.on(Event.MOUSE_DOWN, this, this.removeColorBox);\n    }\n\n    /**\n     * 关闭颜色样本列表面板。\n     */\n    close(): void {\n        ILaya.stage.off(Event.MOUSE_DOWN, this, this.removeColorBox);\n        this._colorPanel.removeSelf();\n    }\n\n    /**\n     * 舞台的 <code>Event.MOUSE_DOWN</code> 事件侦听处理函数。\n     */\n    private removeColorBox(e: Event = null): void {\n        this.close();\n        //var target:Sprite = e.target as Sprite;\n        //if (!_colorButton.contains(target) && !_colorPanel.contains(target)) {\n        //close();\n        //}\n    }\n\n    /**\n     * 小格子色块的 <code>Event.KEY_DOWN</code> 事件侦听处理函数。\n     */\n    private onColorFieldKeyDown(e: Event): void {\n        if (e.keyCode == 13) {\n            if (this._colorInput.text) this.selectedColor = this._colorInput.text;\n            else this.selectedColor = null;\n            this.close();\n            e.stopPropagation();\n        }\n    }\n\n    /**\n     * 颜色值输入框 <code>Event.CHANGE</code> 事件侦听处理函数。\n     */\n    private onColorInputChange(e: Event = null): void {\n        if (this._colorInput.text) this.drawBlock(this._colorInput.text);\n        else this.drawBlock(\"#FFFFFF\");\n    }\n\n    /**\n     * 小格子色块的 <code>Event.CLICK</code> 事件侦听处理函数。\n     */\n    private onColorTilesClick(e: Event): void {\n        this.selectedColor = this.getColorByMouse();\n        this.close();\n    }\n\n    /**\n     * @private\n     * 小格子色块的 <code>Event.MOUSE_MOVE</code> 事件侦听处理函数。\n     */\n    private onColorTilesMouseMove(e: Event): void {\n        this._colorInput.focus = false;\n        var color: string = this.getColorByMouse();\n        this._colorInput.text = color;\n        this.drawBlock(color);\n    }\n\n    /**\n     * 通过鼠标位置取对应的颜色块的颜色值。\n     */\n    protected getColorByMouse(): string {\n        var point: Point = this._colorTiles.getMousePoint();\n        var x: number = Math.floor(point.x / this._gridSize);\n        var y: number = Math.floor(point.y / this._gridSize);\n        return this._colors[y * 20 + x];\n    }\n\n    /**\n     * 绘制颜色块。\n     * @param color 需要绘制的颜色块的颜色值。\n     */\n    private drawBlock(color: string): void {\n        var g: Graphics = this._colorBlock.graphics;\n        g.clear(true);\n        var showColor: string = color ? color : \"#ffffff\";\n        g.drawRect(0, 0, 50, 20, showColor, this._borderColor);\n\n        color || g.drawLine(0, 0, 50, 20, \"#ff0000\");\n    }\n\n    /**\n     * 表示选择的颜色值。\n     */\n    get selectedColor(): string {\n        return this._selectedColor;\n    }\n\n    set selectedColor(value: string) {\n        if (this._selectedColor != value) {\n            this._selectedColor = this._colorInput.text = value;\n            this.drawBlock(value);\n            this.changeColor();\n            this.changeHandler && this.changeHandler.runWith(this._selectedColor);\n            this.event(Event.CHANGE, Event.EMPTY);\n        }\n    }\n\n    /**\n     * @copy laya.ui.Button#skin\n     */\n    get skin(): string {\n        return this._colorButton.skin;\n    }\n\n    set skin(value: string) {\n        this._colorButton.once(Event.LOADED, this, this.changeColor);\n        this._colorButton.skin = value;\n        //changeColor();\n    }\n\n    /**\n     * 改变颜色。\n     */\n    private changeColor(): void {\n        var g: Graphics = this.graphics;\n        g.clear(true);\n        var showColor: string = this._selectedColor || \"#000000\";\n        g.drawRect(0, 0, this._colorButton.width, this._colorButton.height, showColor);\n    }\n\n    /**\n     * 表示颜色样本列表面板的背景颜色值。\n     */\n    get bgColor(): string {\n        return this._bgColor;\n    }\n\n    set bgColor(value: string) {\n        this._bgColor = value;\n        this._setPanelChanged();\n    }\n\n    /**\n     * 表示颜色样本列表面板的边框颜色值。\n     */\n    get borderColor(): string {\n        return this._borderColor;\n    }\n\n    set borderColor(value: string) {\n        this._borderColor = value;\n        this._setPanelChanged();\n    }\n\n    /**\n     * 表示颜色样本列表面板选择或输入的颜色值。\n     */\n    get inputColor(): string {\n        return this._inputColor;\n    }\n\n    set inputColor(value: string) {\n        this._inputColor = value;\n        this._setPanelChanged();\n    }\n\n    /**\n     * 表示颜色输入框的背景颜色值。\n     */\n    get inputBgColor(): string {\n        return this._inputBgColor;\n    }\n\n    set inputBgColor(value: string) {\n        this._inputBgColor = value;\n        this._setPanelChanged();\n    }\n\n    /**@private */\n    protected _setPanelChanged(): void {\n        if (!this._panelChanged) {\n            this._panelChanged = true;\n            this.callLater(this.changePanel);\n        }\n    }\n}","import { Styles } from \"./Styles\";\nimport { Text } from \"../display/Text\"\nimport { Event } from \"../events/Event\"\nimport { UIComponent } from \"./UIComponent\"\nimport { UIUtils } from \"./UIUtils\"\nimport { HideFlags } from \"../Const\";\nimport { SerializeUtil } from \"../loaders/SerializeUtil\";\nimport { LayaEnv } from \"../../LayaEnv\";\n\nexport type LabelFitContent = \"no\" | \"yes\" | \"height\";\n\n/**\n * 文本内容发生改变后调度。\n * @eventType laya.events.Event\n */\n/*[Event(name = \"change\", type = \"laya.events.Event\")]*/\n\n/**\n * <p> <code>Label</code> 类用于创建显示对象以显示文本。</p>\n *\n * @example <caption>以下示例代码，创建了一个 <code>Label</code> 实例。</caption>\n * package\n *\t{\n *\t\timport laya.ui.Label;\n *\t\tpublic class Label_Example\n *\t\t{\n *\t\t\tpublic function Label_Example()\n *\t\t\t{\n *\t\t\t\tLaya.init(640, 800);//设置游戏画布宽高、渲染模式。\n *\t\t\t\tLaya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\n *\t\t\t\tonInit();\n *\t\t\t}\n *\t\t\tprivate function onInit():void\n *\t\t\t{\n *\t\t\t\tvar label:Label = new Label();//创建一个 Label 类的实例对象 label 。\n *\t\t\t\tlabel.font = \"Arial\";//设置 label 的字体。\n *\t\t\t\tlabel.bold = true;//设置 label 显示为粗体。\n *\t\t\t\tlabel.leading = 4;//设置 label 的行间距。\n *\t\t\t\tlabel.wordWrap = true;//设置 label 自动换行。\n *\t\t\t\tlabel.padding = \"10,10,10,10\";//设置 label 的边距。\n *\t\t\t\tlabel.color = \"#ff00ff\";//设置 label 的颜色。\n *\t\t\t\tlabel.text = \"Hello everyone,我是一个可爱的文本！\";//设置 label 的文本内容。\n *\t\t\t\tlabel.x = 100;//设置 label 对象的属性 x 的值，用于控制 label 对象的显示位置。\n *\t\t\t\tlabel.y = 100;//设置 label 对象的属性 y 的值，用于控制 label 对象的显示位置。\n *\t\t\t\tlabel.width = 300;//设置 label 的宽度。\n *\t\t\t\tlabel.height = 200;//设置 label 的高度。\n *\t\t\t\tLaya.stage.addChild(label);//将 label 添加到显示列表。\n *\t\t\t\tvar passwordLabel:Label = new Label(\"请原谅我，我不想被人看到我心里话。\");//创建一个 Label 类的实例对象 passwordLabel 。\n *\t\t\t\tpasswordLabel.asPassword = true;//设置 passwordLabel 的显示反式为密码显示。\n *\t\t\t\tpasswordLabel.x = 100;//设置 passwordLabel 对象的属性 x 的值，用于控制 passwordLabel 对象的显示位置。\n *\t\t\t\tpasswordLabel.y = 350;//设置 passwordLabel 对象的属性 y 的值，用于控制 passwordLabel 对象的显示位置。\n *\t\t\t\tpasswordLabel.width = 300;//设置 passwordLabel 的宽度。\n *\t\t\t\tpasswordLabel.color = \"#000000\";//设置 passwordLabel 的文本颜色。\n *\t\t\t\tpasswordLabel.bgColor = \"#ccffff\";//设置 passwordLabel 的背景颜色。\n *\t\t\t\tpasswordLabel.fontSize = 20;//设置 passwordLabel 的文本字体大小。\n *\t\t\t\tLaya.stage.addChild(passwordLabel);//将 passwordLabel 添加到显示列表。\n *\t\t\t}\n *\t\t}\n *\t}\n * @example\n * Laya.init(640, 800);//设置游戏画布宽高\n * Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色\n * onInit();\n * function onInit(){\n *     var label = new laya.ui.Label();//创建一个 Label 类的实例对象 label 。\n *     label.font = \"Arial\";//设置 label 的字体。\n *     label.bold = true;//设置 label 显示为粗体。\n *     label.leading = 4;//设置 label 的行间距。\n *     label.wordWrap = true;//设置 label 自动换行。\n *     label.padding = \"10,10,10,10\";//设置 label 的边距。\n *     label.color = \"#ff00ff\";//设置 label 的颜色。\n *     label.text = \"Hello everyone,我是一个可爱的文本！\";//设置 label 的文本内容。\n *     label.x = 100;//设置 label 对象的属性 x 的值，用于控制 label 对象的显示位置。\n *     label.y = 100;//设置 label 对象的属性 y 的值，用于控制 label 对象的显示位置。\n *     label.width = 300;//设置 label 的宽度。\n *     label.height = 200;//设置 label 的高度。\n *     Laya.stage.addChild(label);//将 label 添加到显示列表。\n *     var passwordLabel = new laya.ui.Label(\"请原谅我，我不想被人看到我心里话。\");//创建一个 Label 类的实例对象 passwordLabel 。\n *     passwordLabel.asPassword = true;//设置 passwordLabel 的显示反式为密码显示。\n *     passwordLabel.x = 100;//设置 passwordLabel 对象的属性 x 的值，用于控制 passwordLabel 对象的显示位置。\n *     passwordLabel.y = 350;//设置 passwordLabel 对象的属性 y 的值，用于控制 passwordLabel 对象的显示位置。\n *     passwordLabel.width = 300;//设置 passwordLabel 的宽度。\n *     passwordLabel.color = \"#000000\";//设置 passwordLabel 的文本颜色。\n *     passwordLabel.bgColor = \"#ccffff\";//设置 passwordLabel 的背景颜色。\n *     passwordLabel.fontSize = 20;//设置 passwordLabel 的文本字体大小。\n *     Laya.stage.addChild(passwordLabel);//将 passwordLabel 添加到显示列表。\n * }\n * @example\n * import Label = laya.ui.Label;\n * class Label_Example {\n *     constructor() {\n *         Laya.init(640, 800);//设置游戏画布宽高。\n *         Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\n *         this.onInit();\n *     }\n *     private onInit(): void {\n *         var label: Label = new Label();//创建一个 Label 类的实例对象 label 。\n *         label.font = \"Arial\";//设置 label 的字体。\n *         label.bold = true;//设置 label 显示为粗体。\n *         label.leading = 4;//设置 label 的行间距。\n *         label.wordWrap = true;//设置 label 自动换行。\n *         label.padding = \"10,10,10,10\";//设置 label 的边距。\n *         label.color = \"#ff00ff\";//设置 label 的颜色。\n *         label.text = \"Hello everyone,我是一个可爱的文本！\";//设置 label 的文本内容。\n *         label.x = 100;//设置 label 对象的属性 x 的值，用于控制 label 对象的显示位置。\n *         label.y = 100;//设置 label 对象的属性 y 的值，用于控制 label 对象的显示位置。\n *         label.width = 300;//设置 label 的宽度。\n *         label.height = 200;//设置 label 的高度。\n *         Laya.stage.addChild(label);//将 label 添加到显示列表。\n *         var passwordLabel: Label = new Label(\"请原谅我，我不想被人看到我心里话。\");//创建一个 Label 类的实例对象 passwordLabel 。\n *         passwordLabel.asPassword = true;//设置 passwordLabel 的显示反式为密码显示。\n *         passwordLabel.x = 100;//设置 passwordLabel 对象的属性 x 的值，用于控制 passwordLabel 对象的显示位置。\n *         passwordLabel.y = 350;//设置 passwordLabel 对象的属性 y 的值，用于控制 passwordLabel 对象的显示位置。\n *         passwordLabel.width = 300;//设置 passwordLabel 的宽度。\n *         passwordLabel.color = \"#000000\";//设置 passwordLabel 的文本颜色。\n *         passwordLabel.bgColor = \"#ccffff\";//设置 passwordLabel 的背景颜色。\n *         passwordLabel.fontSize = 20;//设置 passwordLabel 的文本字体大小。\n *         Laya.stage.addChild(passwordLabel);//将 passwordLabel 添加到显示列表。\n *     }\n * }\n * @see laya.display.Text\n */\nexport class Label extends UIComponent {\n\n    /**\n     * @private\n     * 文本 <code>Text</code> 实例。\n     */\n    protected _tf: Text;\n    protected _fitContent: LabelFitContent;\n    /** @internal */\n    private _fitFlag: boolean;\n\n    /**\n     * 创建一个新的 <code>Label</code> 实例。\n     * @param text 文本内容字符串。\n     */\n    constructor(text?: string) {\n        super();\n        this._fitContent = \"no\";\n        if (text != null)\n            this.text = text;\n    }\n\n    /**\n     * @override\n     * @inheritDoc \n    */\n    protected createChildren(): void {\n        this._tf = new Text();\n        this._tf.hideFlags = HideFlags.HideAndDontSave;\n        this._tf._parseEscapeChars = true;\n        this._tf._onPostLayout = () => this._onPostLayout();\n        this._tf.on(Event.CHANGE, () => {\n            this.event(Event.CHANGE);\n            if (!this._isWidthSet || !this._isHeightSet)\n                this.onCompResize();\n        });\n        this.addChild(this._tf);\n    }\n\n    protected _onPostLayout() {\n        if ((this._fitContent == \"yes\" || this._fitContent == \"height\") && (LayaEnv.isPlaying || this._tf.textWidth > 0 && this._tf.textHeight > 0)) {\n            this._fitFlag = true;\n            if (this._fitContent == \"height\")\n                this.height = this._tf.textHeight;\n            else\n                this.size(this._tf.textWidth, this._tf.textHeight);\n            this._fitFlag = false;\n        }\n    }\n\n    /**\n     * 当前文本内容字符串。\n     * @see laya.display.Text.text\n     */\n    get text(): string {\n        return this._tf.text;\n    }\n\n    set text(value: string) {\n        this._tf.text = value;\n    }\n\n    /**\n     * @copy laya.display.Text#wordWrap\n     */\n    get wordWrap(): boolean {\n        return this._tf.wordWrap;\n    }\n\n    /**\n     * @copy laya.display.Text#wordWrap\n     */\n    set wordWrap(value: boolean) {\n        this._tf.wordWrap = value;\n    }\n\n    /**\n     * @copy laya.display.Text#color\n     */\n    get color(): string {\n        return this._tf.color;\n    }\n\n    set color(value: string) {\n        this._tf.color = value;\n    }\n\n    /**\n     * @copy laya.display.Text#font\n     */\n    get font(): string {\n        return this._tf.font;\n    }\n\n    set font(value: string) {\n        this._tf.font = value;\n    }\n\n    /**\n     * @copy laya.display.Text#align\n     */\n    get align(): string {\n        return this._tf.align;\n    }\n\n    set align(value: string) {\n        this._tf.align = value;\n    }\n\n    /**\n     * @copy laya.display.Text#valign\n     */\n    get valign(): string {\n        return this._tf.valign;\n    }\n\n    set valign(value: string) {\n        this._tf.valign = value;\n    }\n\n    /**\n     * @copy laya.display.Text#alignItems\n     */\n    get alignItems(): string {\n        return this._tf.alignItems;\n    }\n\n    set alignItems(value: string) {\n        this._tf.alignItems = value;\n    }\n\n    /**\n     * @copy laya.display.Text#bold\n     */\n    get bold(): boolean {\n        return this._tf.bold;\n    }\n\n    set bold(value: boolean) {\n        this._tf.bold = value;\n    }\n\n    /**\n     * @copy laya.display.Text#italic\n     */\n    get italic(): boolean {\n        return this._tf.italic;\n    }\n\n    set italic(value: boolean) {\n        this._tf.italic = value;\n    }\n\n    /**\n     * @copy laya.display.Text#leading\n     */\n    get leading(): number {\n        return this._tf.leading;\n    }\n\n    set leading(value: number) {\n        this._tf.leading = value;\n    }\n\n    /**\n     * @copy laya.display.Text#fontSize\n     */\n    get fontSize(): number {\n        return this._tf.fontSize;\n    }\n\n    set fontSize(value: number) {\n        this._tf.fontSize = value;\n    }\n\n    /**\n     * <p>边距信息</p>\n     * <p>\"上边距，右边距，下边距 , 左边距（边距以像素为单位）\"</p>\n     */\n    get padding(): string {\n        return this._tf.padding.join(\",\");\n    }\n\n    set padding(value: string) {\n        this._tf.padding = UIUtils.fillArray(Styles.labelPadding, value, Number);\n    }\n\n    /**\n     * @copy laya.display.Text#bgColor\n     */\n    get bgColor(): string {\n        return this._tf.bgColor\n    }\n\n    set bgColor(value: string) {\n        this._tf.bgColor = value;\n    }\n\n    /**\n     * @copy laya.display.Text#borderColor\n     */\n    get borderColor(): string {\n        return this._tf.borderColor\n    }\n\n    set borderColor(value: string) {\n        this._tf.borderColor = value;\n    }\n\n    /**\n     * @copy laya.display.Text#stroke\n     */\n    get stroke(): number {\n        return this._tf.stroke;\n    }\n\n    set stroke(value: number) {\n        this._tf.stroke = value;\n    }\n\n    /**\n     * @copy laya.display.Text#strokeColor\n     */\n    get strokeColor(): string {\n        return this._tf.strokeColor;\n    }\n\n    set strokeColor(value: string) {\n        this._tf.strokeColor = value;\n    }\n\n    get html(): boolean {\n        return this._tf.html;\n    }\n\n    /** 设置是否富文本，支持html语法 */\n    set html(value: boolean) {\n        this._tf.html = value;\n    }\n\n    get ubb(): boolean {\n        return this._tf.ubb;\n    }\n\n    /** 设置是否使用UBB语法解析文本 */\n    set ubb(value: boolean) {\n        this._tf.ubb = value;\n    }\n\n    get maxWidth(): number {\n        return this._tf.maxWidth;\n    }\n\n    /** 设置当文本达到最大允许的宽度时，自定换行，设置为0则此限制不生效。*/\n    set maxWidth(value: number) {\n        this._tf.maxWidth = value;\n    }\n\n    get fitContent(): LabelFitContent {\n        return this._fitContent;\n    }\n\n    /** 设置文本框大小是否自动适应文本内容的大小。可取值为both或者height */\n    set fitContent(value: LabelFitContent) {\n        if (typeof (value) === \"boolean\")\n            value = value ? \"yes\" : \"no\";\n        if (this._fitContent != value) {\n            if ((value == \"yes\" || value == \"height\") && !SerializeUtil.isDeserializing && (LayaEnv.isPlaying || this._tf.textWidth > 0 && this._tf.textHeight > 0)) {\n                if (value == \"height\")\n                    this.height = this._tf.textHeight;\n                else\n                    this.size(this._tf.textWidth, this._tf.textHeight);\n            }\n            this._fitContent = value;\n        }\n    }\n\n    /**\n     * 文本控件实体 <code>Text</code> 实例。\n     */\n    get textField(): Text {\n        return this._tf;\n    }\n\n    /**\n     * @inheritDoc\n     * @override\n     */\n    protected measureWidth(): number {\n        return this._tf.width;\n    }\n\n    /**\n     * @inheritDoc\n     * @override\n     */\n    protected measureHeight(): number {\n        return this._tf.height;\n    }\n\n    /**\n     * @inheritDoc\n     * @override\n     */\n    get_width(): number {\n        if (this._isWidthSet || this._tf.text) return super.get_width();\n        return 0;\n    }\n\n    set_width(value: number): void {\n        if (this._fitContent == \"yes\" && !this._fitFlag)\n            return;\n        super.set_width(value);\n    }\n\n    /**\n     * @inheritDoc\n     * @override\n     */\n    _setWidth(value: number): void {\n        super._setWidth(value);\n        this._tf.width = value;\n    }\n\n    /**\n     * @inheritDoc\n     * @override\n     */\n    get_height(): number {\n        if (this._isHeightSet || this._tf.text) return super.get_height();\n        return 0;\n    }\n\n    set_height(value: number): void {\n        if ((this._fitContent == \"yes\" || this._fitContent == \"height\") && !this._fitFlag)\n            return;\n        super.set_height(value);\n    }\n\n    /**\n     * @inheritDoc\n     * @override\n     */\n    _setHeight(value: number) {\n        super._setHeight(value);\n        this._tf.height = value;\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n     */\n    set_dataSource(value: any) {\n        this._dataSource = value;\n        if (typeof (value) == 'number' || typeof (value) == 'string')\n            this.text = value + \"\";\n        else\n            super.set_dataSource(value);\n    }\n\n    /**\n     * @copy laya.display.Text#overflow\n     */\n    get overflow(): string {\n        return this._tf.overflow;\n    }\n\n    /**\n     * @copy laya.display.Text#overflow\n     */\n    set overflow(value: string) {\n        this._tf.overflow = value;\n    }\n\n    /**\n     * @copy laya.display.Text#underline\n     */\n    get underline(): boolean {\n        return this._tf.underline;\n    }\n\n    /**\n     * @copy laya.display.Text#underline\n     */\n    set underline(value: boolean) {\n        this._tf.underline = value;\n    }\n\n    /**\n     * @copy laya.display.Text#underlineColor\n     */\n    get underlineColor(): string {\n        return this._tf.underlineColor;\n    }\n\n    /**\n     * @copy laya.display.Text#underlineColor\n     */\n    set underlineColor(value: string) {\n        this._tf.underlineColor = value;\n    }\n\n    /**\n     * @copy laya.display.Text#ignoreLang\n     */\n    get ignoreLang(): boolean {\n        return this._tf.ignoreLang;\n    }\n\n    /**\n     * @copy laya.display.Text#ignoreLang\n     */\n    set ignoreLang(value: boolean) {\n        this._tf.ignoreLang = value;\n    }\n\n    public get templateVars(): Record<string, any> {\n        return this._tf.templateVars;\n    }\n\n    public set templateVars(value: Record<string, any> | boolean) {\n        this._tf.templateVars = value;\n    }\n\n    public setVar(name: string, value: any): Label {\n        this._tf.setVar(name, value);\n\n        return this;\n    }\n}","import { Styles } from \"./Styles\";\nimport { Event } from \"../events/Event\"\nimport { Loader } from \"../net/Loader\"\nimport { Texture } from \"../resource/Texture\"\nimport { AutoBitmap } from \"./AutoBitmap\"\nimport { UIComponent } from \"./UIComponent\"\nimport { UIUtils } from \"./UIUtils\"\nimport { Handler } from \"../utils/Handler\"\nimport { ILaya } from \"../../ILaya\";\nimport { URL } from \"../net/URL\";\nimport { SerializeUtil } from \"../loaders/SerializeUtil\";\n\n/**\n * 资源加载完成后调度。\n * @eventType Event.LOADED\n */\n/*[Event(name = \"loaded\", type = \"laya.events.Event\")]*/\n\n/**\n * <code>Image</code> 类是用于表示位图图像或绘制图形的显示对象。\n * Image和Clip组件是唯一支持异步加载的两个组件，比如img.skin = \"abc/xxx.png\"，其他UI组件均不支持异步加载。\n * \n * @example <caption>以下示例代码，创建了一个新的 <code>Image</code> 实例，设置了它的皮肤、位置信息，并添加到舞台上。</caption>\n *\tpackage\n *\t {\n *\t\timport laya.ui.Image;\n *\t\tpublic class Image_Example\n *\t\t{\n *\t\t\tpublic function Image_Example()\n *\t\t\t{\n *\t\t\t\tLaya.init(640, 800);//设置游戏画布宽高。\n *\t\t\t\tLaya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\n *\t\t\t\tonInit();\n *\t\t\t}\n *\t\t\tprivate function onInit():void\n *\t \t\t{\n *\t\t\t\tvar bg:Image = new Image(\"resource/ui/bg.png\");//创建一个 Image 类的实例对象 bg ,并传入它的皮肤。\n *\t\t\t\tbg.x = 100;//设置 bg 对象的属性 x 的值，用于控制 bg 对象的显示位置。\n *\t\t\t\tbg.y = 100;//设置 bg 对象的属性 y 的值，用于控制 bg 对象的显示位置。\n *\t\t\t\tbg.sizeGrid = \"40,10,5,10\";//设置 bg 对象的网格信息。\n *\t\t\t\tbg.width = 150;//设置 bg 对象的宽度。\n *\t\t\t\tbg.height = 250;//设置 bg 对象的高度。\n *\t\t\t\tLaya.stage.addChild(bg);//将此 bg 对象添加到显示列表。\n *\t\t\t\tvar image:Image = new Image(\"resource/ui/image.png\");//创建一个 Image 类的实例对象 image ,并传入它的皮肤。\n *\t\t\t\timage.x = 100;//设置 image 对象的属性 x 的值，用于控制 image 对象的显示位置。\n *\t\t\t\timage.y = 100;//设置 image 对象的属性 y 的值，用于控制 image 对象的显示位置。\n *\t\t\t\tLaya.stage.addChild(image);//将此 image 对象添加到显示列表。\n *\t\t\t}\n *\t\t}\n *\t }\n * @example\n * Laya.init(640, 800);//设置游戏画布宽高\n * Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色\n * onInit();\n * function onInit() {\n *     var bg = new laya.ui.Image(\"resource/ui/bg.png\");//创建一个 Image 类的实例对象 bg ,并传入它的皮肤。\n *     bg.x = 100;//设置 bg 对象的属性 x 的值，用于控制 bg 对象的显示位置。\n *     bg.y = 100;//设置 bg 对象的属性 y 的值，用于控制 bg 对象的显示位置。\n *     bg.sizeGrid = \"40,10,5,10\";//设置 bg 对象的网格信息。\n *     bg.width = 150;//设置 bg 对象的宽度。\n *     bg.height = 250;//设置 bg 对象的高度。\n *     Laya.stage.addChild(bg);//将此 bg 对象添加到显示列表。\n *     var image = new laya.ui.Image(\"resource/ui/image.png\");//创建一个 Image 类的实例对象 image ,并传入它的皮肤。\n *     image.x = 100;//设置 image 对象的属性 x 的值，用于控制 image 对象的显示位置。\n *     image.y = 100;//设置 image 对象的属性 y 的值，用于控制 image 对象的显示位置。\n *     Laya.stage.addChild(image);//将此 image 对象添加到显示列表。\n * }\n * @example\n * class Image_Example {\n *     constructor() {\n *         Laya.init(640, 800);//设置游戏画布宽高。\n *         Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\n *         this.onInit();\n *     }\n *     private onInit(): void {\n *         var bg: laya.ui.Image = new laya.ui.Image(\"resource/ui/bg.png\");//创建一个 Image 类的实例对象 bg ,并传入它的皮肤。\n *         bg.x = 100;//设置 bg 对象的属性 x 的值，用于控制 bg 对象的显示位置。\n *         bg.y = 100;//设置 bg 对象的属性 y 的值，用于控制 bg 对象的显示位置。\n *         bg.sizeGrid = \"40,10,5,10\";//设置 bg 对象的网格信息。\n *         bg.width = 150;//设置 bg 对象的宽度。\n *         bg.height = 250;//设置 bg 对象的高度。\n *         Laya.stage.addChild(bg);//将此 bg 对象添加到显示列表。\n *         var image: laya.ui.Image = new laya.ui.Image(\"resource/ui/image.png\");//创建一个 Image 类的实例对象 image ,并传入它的皮肤。\n *         image.x = 100;//设置 image 对象的属性 x 的值，用于控制 image 对象的显示位置。\n *         image.y = 100;//设置 image 对象的属性 y 的值，用于控制 image 对象的显示位置。\n *         Laya.stage.addChild(image);//将此 image 对象添加到显示列表。\n *     }\n * }\n * @see AutoBitmap\n */\nexport class Image extends UIComponent {\n    /**@private */\n    protected _skin: string;\n    /**@private */\n    protected _group: string;\n    protected _useSourceSize: boolean;\n\n    declare _graphics: AutoBitmap;\n\n    /**\n     * 创建一个 <code>Image</code> 实例。\n     * @param skin 皮肤资源地址。\n     */\n    constructor(skin: string | null = null) {\n        super();\n        this.skin = skin;\n    }\n\n    /**\n     * 销毁对象并释放加载的皮肤资源。\n     */\n    dispose(): void {\n        this.destroy(true);\n        ILaya.loader.clearRes(this._skin);\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n     */\n    protected createChildren(): void {\n        this.setGraphics(new AutoBitmap(), true);\n    }\n\n    /**\n     * <p>对象的皮肤地址，以字符串表示。</p>\n     * <p>如果资源未加载，则先加载资源，加载完成后应用于此对象。</p>\n     * <b>注意：</b>资源加载完成后，会自动缓存至资源库中。\n     */\n    get skin(): string {\n        return this._skin;\n    }\n\n    set skin(value: string) {\n        if (value == \"\")\n            value = null;\n        if (this._skin == value)\n            return;\n\n        this._setSkin(value);\n    }\n\n    _setSkin(url: string): Promise<void> {\n        this._skin = url;\n        if (url) {\n            if (this._skinBaseUrl)\n                url = URL.formatURL(url, this._skinBaseUrl);\n            let source = Loader.getRes(url);\n            if (source) {\n                this.source = source;\n                return Promise.resolve();\n            }\n            else {\n                let sk = this._skin;\n                return ILaya.loader.load(url, { type: Loader.IMAGE, group: this._group }).then(tex => {\n                    if (sk == this._skin)\n                        this.source = tex;\n                });\n            }\n        }\n        else {\n            this.source = null;\n            return Promise.resolve();\n        }\n    }\n\n    get source(): Texture {\n        return this._graphics.source;\n    }\n\n    set source(value: Texture) {\n        if (!this._graphics) return;\n        this._graphics.source = value;\n        this.event(Event.LOADED);\n        this.repaint();\n\n        if (this._useSourceSize && value) {\n            this.size(value.sourceWidth, value.sourceHeight);\n            this._useSourceSize = true; //重置，因为size会改变\n        }\n        else\n            this.onCompResize();\n    }\n\n    get color() {\n        return this._graphics.color;\n    }\n\n    set color(value: string) {\n        this._graphics.color = value;\n    }\n\n    /**\n     * 资源分组。\n     */\n    get group(): string {\n        return this._group;\n    }\n\n    set group(value: string) {\n        if (value && this._skin) Loader.setGroup(this._skin, value);\n        this._group = value;\n    }\n\n    get useSourceSize(): boolean {\n        return this._useSourceSize;\n    }\n\n    set useSourceSize(value: boolean) {\n        if (this._useSourceSize != value) {\n            if (value && this._graphics.source)\n                this.size(this._graphics.source.sourceWidth, this._graphics.source.sourceHeight);\n            this._useSourceSize = value; //放最后，因为size会改变autoSize的值\n        }\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n     */\n    protected measureWidth(): number {\n        return this._graphics.width;\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n     */\n    protected measureHeight(): number {\n        return this._graphics.height;\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n     */\n    _setWidth(value: number) {\n        super._setWidth(value);\n        this._graphics.width = value;\n        if (!SerializeUtil.isDeserializing)\n            this._useSourceSize = false;\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n     */\n    _setHeight(value: number) {\n        super._setHeight(value);\n        this._graphics.height = value;\n        if (!SerializeUtil.isDeserializing)\n            this._useSourceSize = false;\n    }\n\n    /**\n     * <p>当前实例的位图 <code>AutoImage</code> 实例的有效缩放网格数据。</p>\n     * <p>数据格式：\"上边距,右边距,下边距,左边距,是否重复填充(值为0：不重复填充，1：重复填充)\"，以逗号分隔。\n     * <ul><li>例如：\"4,4,4,4,1\"。</li></ul></p>\n     * @see laya.ui.AutoBitmap#sizeGrid\n     */\n    get sizeGrid(): string {\n        if (this._graphics.sizeGrid) return this._graphics.sizeGrid.join(\",\");\n        return null;\n    }\n\n    set sizeGrid(value: string) {\n        if (value)\n            this._graphics.sizeGrid = UIUtils.fillArray(Styles.defaultSizeGrid, value, Number);\n        else\n            this._graphics.sizeGrid = null;\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n     */\n    set_dataSource(value: any): void {\n        this._dataSource = value;\n        if (typeof (value) == 'string')\n            this.skin = value as string;\n        else\n            super.set_dataSource(value);\n    }\n}","import { UIComponent } from \"./UIComponent\";\nimport { Label } from \"./Label\";\nimport { Image } from \"./Image\";\nimport { Button } from \"./Button\";\nimport { Event } from \"../events/Event\"\nimport { Point } from \"../maths/Point\"\nimport { Loader } from \"../net/Loader\"\nimport { Handler } from \"../utils/Handler\"\nimport { ILaya } from \"../../ILaya\";\nimport { HideFlags } from \"../Const\";\nimport { URL } from \"../net/URL\";\nimport { Utils } from \"../utils/Utils\";\nimport { AssetDb } from \"../resource/AssetDb\";\nimport { SerializeUtil } from \"../loaders/SerializeUtil\";\n\n/**\n * 移动滑块位置时调度。\n * @eventType laya.events.Event\n */\n/*[Event(name = \"change\", type = \"laya.events.Event\")]*/\n\n/**\n * 移动滑块位置完成（用户鼠标抬起）后调度。\n * @eventType @eventType laya.events.EventD\n *\n */\n/*[Event(name = \"changed\", type = \"laya.events.Event\")]*/\n\n/**\n * 使用 <code>Slider</code> 控件，用户可以通过在滑块轨道的终点之间移动滑块来选择值。\n * <p>滑块的当前值由滑块端点（对应于滑块的最小值和最大值）之间滑块的相对位置确定。</p>\n * <p>滑块允许最小值和最大值之间特定间隔内的值。滑块还可以使用数据提示显示其当前值。</p>\n *\n * @see laya.ui.HSlider\n * @see laya.ui.VSlider\n */\nexport class Slider extends UIComponent {\n\n    /** @private 获取对 <code>Slider</code> 组件所包含的 <code>Label</code> 组件的引用。*/\n    static label: Label = null;// new Label(); 静态的可能还没有初始化\n\n    /**\n     * 数据变化处理器。\n     * <p>默认回调参数为滑块位置属性 <code>value</code>属性值：Number 。</p>\n     */\n    changeHandler: Handler;\n\n    /**\n     * 一个布尔值，指示是否为垂直滚动。如果值为true，则为垂直方向，否则为水平方向。\n     * <p>默认值为：true。</p>\n     * @default true\n     */\n    isVertical: boolean = true;\n\n    /**\n     * 一个布尔值，指示是否显示标签。\n     * @default true\n     */\n    showLabel: boolean = true;\n\n    /**\n     * 一个布尔值，指示是否显示进度条。\n     */\n    protected _showProgress: boolean = false;\n\n    /**@private */\n    protected _allowClickBack: boolean;\n    /**@private */\n    protected _max: number = 100;\n    /**@private */\n    protected _min: number = 0;\n    /**@private */\n    protected _tick: number = 1;\n    /**@private */\n    protected _value: number = 0;\n    /**@private */\n    protected _skin: string;\n    /**@private */\n    protected _bg: Image;\n    /**@private */\n    protected _progress: Image;\n    /**@private */\n    protected _bar: Button;\n    /**@private */\n    protected _tx: number;\n    /**@private */\n    protected _ty: number;\n    /**@private */\n    protected _maxMove: number;\n    /**@private */\n    protected _globalSacle: Point;\n\n    /**\n     * 创建一个新的 <code>Slider</code> 类示例。\n     * @param skin 皮肤。\n     */\n    constructor(skin: string = null) {\n        super();\n        if (!Slider.label) {\n            Slider.label = new Label();\n            Slider.label.hideFlags = HideFlags.HideAndDontSave;\n        }\n        this.skin = skin;\n    }\n\n    /**\n     *@inheritDoc\n     @override\n     */\n    destroy(destroyChild: boolean = true): void {\n        super.destroy(destroyChild);\n        this._bg && this._bg.destroy(destroyChild);\n        this._bar && this._bar.destroy(destroyChild);\n        this._progress && this._progress.destroy(destroyChild);\n        this._bg = null;\n        this._bar = null;\n        this._progress = null;\n        this.changeHandler = null;\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n    */\n    protected createChildren(): void {\n        this._bg = new Image();\n        this._bg.hideFlags = HideFlags.HideAndDontSave;\n        this.addChild(this._bg);\n\n        this._progress = new Image();\n        this._progress.hideFlags = HideFlags.HideAndDontSave;\n        this.addChildAt(this._progress, 1);\n\n        this._bar = new Button();\n        this._bar.hideFlags = HideFlags.HideAndDontSave;\n        this.addChild(this._bar);\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n    */\n    protected initialize(): void {\n        this._bar.on(Event.MOUSE_DOWN, this, this.onBarMouseDown);\n        this.allowClickBack = true;\n    }\n\n    /**\n     * @private\n     * 滑块的的 <code>Event.MOUSE_DOWN</code> 事件侦听处理函数。\n     */\n    protected onBarMouseDown(e: Event): void {\n        let stage = ILaya.stage;\n        this._globalSacle || (this._globalSacle = new Point());\n        this._globalSacle.setTo(this.globalScaleX || 0.01, this.globalScaleY || 0.01);\n\n        this._maxMove = this.isVertical ? (this.height - this._bar.height) : (this.width - this._bar.width);\n        this._tx = stage.mouseX;\n        this._ty = stage.mouseY;\n        stage.on(Event.MOUSE_MOVE, this, this.mouseMove);\n        stage.once(Event.MOUSE_UP, this, this.mouseUp);\n        stage.once(Event.MOUSE_OUT, this, this.mouseUp);\n        //显示提示\n        this.showValueText();\n    }\n\n    /**\n     * @private\n     * 显示标签。\n     */\n    protected showValueText(): void {\n        if (this.showLabel) {\n            var label: Label = Slider.label;\n            this.addChild(label);\n            label.textField.text = this._value + \"\";\n            if (this.isVertical) {\n                label.x = this._bar._x + 20;\n                label.y = (this._bar.height - label.height) * 0.5 + this._bar._y;\n            } else {\n                label.y = this._bar._y - 20;\n                label.x = (this._bar.width - label.width) * 0.5 + this._bar._x;\n            }\n        }\n    }\n\n    /**\n     * @private\n     * 隐藏标签。\n     */\n    protected hideValueText(): void {\n        Slider.label && Slider.label.removeSelf();\n    }\n\n    /**\n     * @private\n     */\n    private mouseUp(e: Event): void {\n        let stage = ILaya.stage;\n        stage.off(Event.MOUSE_MOVE, this, this.mouseMove);\n        stage.off(Event.MOUSE_UP, this, this.mouseUp);\n        stage.off(Event.MOUSE_OUT, this, this.mouseUp);\n        this.sendChangeEvent(Event.CHANGED);\n        this.hideValueText();\n    }\n\n    /**\n     * @private\n     */\n    private mouseMove(e: Event): void {\n        let stage = ILaya.stage;\n        var oldValue: number = this._value;\n        if (this.isVertical) {\n            this._bar.y += (stage.mouseY - this._ty) / this._globalSacle.y;\n            if (this._bar._y > this._maxMove) this._bar.y = this._maxMove;\n            else if (this._bar._y < 0) this._bar.y = 0;\n            this._value = this._bar._y / this._maxMove * (this._max - this._min) + this._min;\n            this._progress.height = this._bar._y + 0.5 * this._bar.height;\n        } else {\n            this._bar.x += (stage.mouseX - this._tx) / this._globalSacle.x;\n            if (this._bar._x > this._maxMove) this._bar.x = this._maxMove;\n            else if (this._bar._x < 0) this._bar.x = 0;\n            this._value = this._bar._x / this._maxMove * (this._max - this._min) + this._min;\n            this._progress.width = this._bar._x + 0.5 * this._bar.width;\n        }\n\n        this._tx = stage.mouseX;\n        this._ty = stage.mouseY;\n\n        if (this._tick != 0) {\n            var pow: number = Math.pow(10, (this._tick + \"\").length - 1);\n            this._value = Math.round(Math.round(this._value / this._tick) * this._tick * pow) / pow;\n        }\n\n        if (this._value != oldValue) {\n            this.sendChangeEvent();\n        }\n        this.showValueText();\n    }\n\n    /**\n     * @private\n     */\n    protected sendChangeEvent(type: string = Event.CHANGE): void {\n        this.event(type);\n        this.changeHandler && this.changeHandler.runWith(this._value);\n    }\n\n    /**\n     * @copy laya.ui.Image#skin\n     */\n    get skin(): string {\n        return this._skin;\n    }\n\n    set skin(value: string) {\n        if (value == \"\")\n            value = null;\n        if (this._skin == value)\n            return;\n\n        this._setSkin(value);\n    }\n\n    get showProgress(): boolean {\n        return this._showProgress;\n    }\n\n    set showProgress(value: boolean) {\n        this._showProgress = value;\n        if (value) {\n            if (this._skin && !SerializeUtil.isDeserializing)\n                this._setSkin(this._skin);\n        }\n        else\n            this._progress.skin = null;\n    }\n\n    _setSkin(url: string): Promise<void> {\n        this._skin = url;\n\n        if (url) {\n            return AssetDb.inst.resolveURL(url).then(url => {\n                if (this._destroyed)\n                    return null;\n\n                if (this._skinBaseUrl)\n                    url = URL.formatURL(url, this._skinBaseUrl);\n                let tasks = [\n                    this._bg._setSkin(url),\n                    this._bar._setSkin(Utils.replaceFileExtension(url, \"$bar.png\", true))\n                ];\n                if (this._showProgress)\n                    tasks.push(this._progress._setSkin(Utils.replaceFileExtension(url, \"$progress.png\", true)));\n                else\n                    this._progress.skin = null;\n\n                return Promise.all(tasks).then(() => this._skinLoaded());\n            });\n        }\n        else {\n            this._bg.skin = null;\n            this._bar.skin = null;\n            this._progress.skin = null;\n            this._skinLoaded();\n            return Promise.resolve();\n        }\n    }\n\n    protected _skinLoaded(): void {\n        if (this._destroyed)\n            return;\n\n        this.setBarPoint();\n        this.callLater(this.changeValue);\n        this._sizeChanged();\n        this.event(Event.LOADED);\n    }\n\n    /**\n     * @private\n     * 设置滑块的位置信息。\n     */\n    protected setBarPoint(): void {\n        if (this.isVertical) this._bar.x = Math.round((this._bg.width - this._bar.width) * 0.5);\n        else this._bar.y = Math.round((this._bg.height - this._bar.height) * 0.5);\n    }\n\n    /**@inheritDoc @override*/\n    protected measureWidth(): number {\n        return Math.max(this._bg.width, this._bar.width);\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n    */\n    protected measureHeight(): number {\n        return Math.max(this._bg.height, this._bar.height);\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n    */\n    protected _sizeChanged(): void {\n        super._sizeChanged();\n        if (this.isVertical) this._bg.height = this.height;\n        else this._bg.width = this.width;\n        this.setBarPoint();\n        this.changeValue();\n    }\n\n    /**\n     * <p>当前实例的背景图（ <code>Image</code> ）和滑块按钮（ <code>Button</code> ）实例的有效缩放网格数据。</p>\n     * <p>数据格式：\"上边距,右边距,下边距,左边距,是否重复填充(值为0：不重复填充，1：重复填充)\"，以逗号分隔。\n     * <ul><li>例如：\"4,4,4,4,1\"</li></ul></p>\n     */\n    get sizeGrid(): string {\n        return this._bg.sizeGrid;\n    }\n\n    set sizeGrid(value: string) {\n        this._bg.sizeGrid = value;\n        this._bar.sizeGrid = value;\n        this._progress.sizeGrid = this._bar.sizeGrid;\n    }\n\n    /**\n     * 设置滑动条的信息。\n     * @param min 滑块的最小值。\n     * @param max 滑块的最小值。\n     * @param value 滑块的当前值。\n     */\n    setSlider(min: number, max: number, value?: number): void {\n        let scaleValue: number;\n        if (null == value) {\n            if (min >= max) {\n                value = this.value;\n            } else {\n                if (this._max == this._min) {\n                    scaleValue = 0;\n                } else {\n                    scaleValue = this._value / (this._max - this._min);\n                }\n            }\n        }\n        this._value = -1;\n        this._min = min;\n        this._max = max > min ? max : min;\n        if (null == scaleValue) {\n            this.value = value < min ? min : value > max ? max : value;\n        } else {\n            this.value = (this._max - this._min) * scaleValue;\n        }\n    }\n\n    /**\n     * 滑动的刻度值，滑动数值为tick的整数倍。默认值为1。\n     */\n    get tick(): number {\n        return this._tick;\n    }\n\n    set tick(value: number) {\n        if (this._tick != value) {\n            this._tick = value;\n            this.callLater(this.changeValue);\n        }\n    }\n\n    /**\n     * @private\n     * 改变滑块的位置值。\n     */\n    changeValue(): void {\n        if (this.tick != 0) {\n            var pow: number = Math.pow(10, (this._tick + \"\").length - 1);\n            this._value = Math.round(Math.round(this._value / this._tick) * this._tick * pow) / pow;\n        }\n\n        if (this._max >= this._min) {\n            this._value = this._value > this._max ? this._max : this._value < this._min ? this._min : this._value;\n        } else {\n            //当设置的最小值大于最大值的时候，滑动条会反向处理，滑动条限制也应反向处理。\n            this._value = this._value > this._min ? this._min : this._value < this._max ? this._max : this._value;\n        }\n\n        var num: number = this._max - this._min;\n        if (num === 0) num = 1;\n        if (this.isVertical) {\n            this._bar.y = (this._value - this._min) / num * (this.height - this._bar.height);\n            this._progress.height = this._bar._y + 0.5 * this._bar.height;\n        }\n        else {\n            this._bar.x = (this._value - this._min) / num * (this.width - this._bar.width);\n            this._progress.width = this._bar._x + 0.5 * this._bar.width;\n        }\n\n    }\n\n    /**\n     * 获取或设置表示最高位置的数字。 默认值为100。\n     */\n    get max(): number {\n        return this._max;\n    }\n\n    set max(value: number) {\n        if (this._max != value) {\n            this._max = value;\n            this.callLater(this.changeValue);\n        }\n    }\n\n    /**\n     * 获取或设置表示最低位置的数字。 默认值为0。\n     */\n    get min(): number {\n        return this._min;\n    }\n\n    set min(value: number) {\n        if (this._min != value) {\n            this._min = value;\n            this.callLater(this.changeValue);\n        }\n    }\n\n    /**\n     * 获取或设置表示当前滑块位置的数字。\n     */\n    get value(): number {\n        return this._value;\n    }\n\n    set value(num: number) {\n        if (this._value != num) {\n            var oldValue: number = this._value;\n            this._value = num;\n            this.changeValue();\n            if (this._value != oldValue) {\n                this.sendChangeEvent();\n            }\n        }\n    }\n\n    /**\n     * 一个布尔值，指定是否允许通过点击滑动条改变 <code>Slider</code> 的 <code>value</code> 属性值。\n     */\n    get allowClickBack(): boolean {\n        return this._allowClickBack;\n    }\n\n    set allowClickBack(value: boolean) {\n        if (this._allowClickBack != value) {\n            this._allowClickBack = value;\n            if (value) this._bg.on(Event.MOUSE_DOWN, this, this.onBgMouseDown);\n            else this._bg.off(Event.MOUSE_DOWN, this, this.onBgMouseDown);\n        }\n    }\n\n    /**\n     * @private\n     * 滑动条的 <code>Event.MOUSE_DOWN</code> 事件侦听处理函数。\n     */\n    protected onBgMouseDown(e: Event): void {\n        var point: Point = this._bg.getMousePoint();\n        if (this.isVertical) this.value = point.y / (this.height - this._bar.height) * (this._max - this._min) + this._min;\n        else this.value = point.x / (this.width - this._bar.width) * (this._max - this._min) + this._min;\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n     */\n    set_dataSource(value: any) {\n        this._dataSource = value;\n        if (typeof (value) == 'number' || typeof (value) == 'string')\n            this.value = Number(value);\n        else\n            super.set_dataSource(value);\n    }\n\n    /**\n     * 表示滑块按钮的引用。\n     */\n    get bar(): Button {\n        return this._bar;\n    }\n}","import { UIComponent } from \"./UIComponent\";\nimport { Button } from \"./Button\";\nimport { Slider } from \"./Slider\";\nimport { UIConfig } from \"./../../UIConfig\";\nimport { Styles } from \"./Styles\";\nimport { Sprite } from \"../display/Sprite\"\nimport { Event } from \"../events/Event\"\nimport { Point } from \"../maths/Point\"\nimport { Ease } from \"../utils/Ease\"\nimport { Handler } from \"../utils/Handler\"\nimport { Tween } from \"../utils/Tween\"\nimport { ILaya } from \"../../ILaya\";\nimport { HideFlags } from \"../Const\";\nimport { URL } from \"../net/URL\";\nimport { Utils } from \"../utils/Utils\";\nimport { AssetDb } from \"../resource/AssetDb\";\n\n/**\n * 滚动条滑块位置发生变化后调度。\n * @eventType laya.events.Event\n */\n/*[Event(name = \"change\", type = \"laya.events.Event\")]*/\n/**\n * 开始滑动。\n * @eventType laya.events.Event\n */\n/*[Event(name = \"start\", type = \"laya.events.Event\")]*/\n/**\n * 结束滑动。\n * @eventType laya.events.Event\n */\n/*[Event(name = \"end\", type = \"laya.events.Event\")]*/\n\n/**\n * <code>ScrollBar</code> 组件是一个滚动条组件。\n * <p>当数据太多以至于显示区域无法容纳时，最终用户可以使用 <code>ScrollBar</code> 组件控制所显示的数据部分。</p>\n * <p> 滚动条由四部分组成：两个箭头按钮、一个轨道和一个滑块。 </p>\t *\n *\n * @see laya.ui.VScrollBar\n * @see laya.ui.HScrollBar\n */\nexport class ScrollBar extends UIComponent {\n    /**滚动衰减系数*/\n    rollRatio: number = 0.97;\n    /**滚动变化时回调，回传value参数。*/\n    changeHandler: Handler;\n    /**是否缩放滑动条，默认值为true。 */\n    scaleBar: boolean = true;\n    /**一个布尔值，指定是否自动隐藏滚动条(无需滚动时)，默认值为false。*/\n    autoHide: boolean = false;\n    /**橡皮筋效果极限距离，0为没有橡皮筋效果。*/\n    elasticDistance: number = 0;\n    /**橡皮筋回弹时间，单位为毫秒。*/\n    elasticBackTime: number = 500;\n    /**上按钮 */\n    upButton: Button;\n    /**下按钮 */\n    downButton: Button;\n    /**滑条 */\n    slider: Slider;\n    /**顶部移动限制（达到限制后，会抛出dragTopLimit事件，配合stopMoveLimit()，可让开发者做一些动态数据更新的操作）*/\n    topMoveLimit: number = 0;\n    /**底部移动限制（达到限制后，会抛出dragTopLimit事件，配合stopMoveLimit()，可让开发者做一些动态数据更新的操作）*/\n    bottomMoveLimit: number = 0;\n    /** 调用滚动停止接口stopMoveLimit时，是否禁止内容的拖拽 */\n    disableDrag: boolean = false;\n\n    /**@private */\n    protected _showButtons: boolean;\n    /**@private */\n    protected _scrollSize: number = 1;\n    /**@private */\n    protected _skin: string;\n    /**@private */\n    protected _thumbPercent: number = 1;\n    /**@private */\n    protected _target: Sprite;\n    /**@private */\n    protected _lastPoint: Point;\n    /**@private */\n    protected _lastOffset: number = 0;\n    /**@private */\n    protected _checkElastic: boolean = false;\n    /**@private */\n    protected _isElastic: boolean = false;\n    /**@private */\n    protected _value: number;\n    /**@private */\n    protected _hide: boolean = false;\n    /**@private */\n    protected _clickOnly: boolean = true;\n    /**@private */\n    protected _offsets: any[];\n    /**@private */\n    protected _touchScrollEnable: boolean;\n    /**@private */\n    protected _mouseWheelEnable: boolean;\n\n    /**\n     * 创建一个新的 <code>ScrollBar</code> 实例。\n     * @param skin 皮肤资源地址。\n     */\n    constructor(skin: string = null) {\n        super();\n\n        this._showButtons = UIConfig.showButtons;\n        this._touchScrollEnable = UIConfig.touchScrollEnable;\n        this._mouseWheelEnable = UIConfig.mouseWheelEnable;\n\n        this.skin = skin;\n        this.max = 1;\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n    */\n    destroy(destroyChild: boolean = true): void {\n        this.stopScroll();\n        this.target = null;\n        super.destroy(destroyChild);\n        this.upButton && this.upButton.destroy(destroyChild);\n        this.downButton && this.downButton.destroy(destroyChild);\n        this.slider && this.slider.destroy(destroyChild);\n        this.upButton = this.downButton = null;\n        this.slider = null;\n        this.changeHandler = null;\n        this._offsets = null;\n    }\n\n    /**\n     * @override\n     */\n    protected createChildren(): void {\n        this.slider = new Slider();\n        this.slider.hideFlags = HideFlags.HideAndDontSave;\n        this.addChild(this.slider);\n\n        this.upButton = new Button();\n        this.upButton.hideFlags = HideFlags.HideAndDontSave;\n        this.addChild(this.upButton);\n\n        this.downButton = new Button();\n        this.downButton.hideFlags = HideFlags.HideAndDontSave;\n        this.addChild(this.downButton);\n    }\n\n    /**\n     * @override\n     */\n    protected initialize(): void {\n        this.slider.showLabel = false;\n        this.slider.tick = 0;\n        this.slider.on(Event.CHANGE, this, this.onSliderChange);\n        this.slider.setSlider(0, 0, 0);\n\n        this.upButton.on(Event.MOUSE_DOWN, this, this.onButtonMouseDown);\n        this.downButton.on(Event.MOUSE_DOWN, this, this.onButtonMouseDown);\n    }\n\n    /**\n     * @private\n     * 滑块位置发生改变的处理函数。\n     */\n    protected onSliderChange(): void {\n        if (this._value != this.slider.value) this.value = this.slider.value;\n    }\n\n    /**\n     * @private\n     * 向上和向下按钮的 <code>Event.MOUSE_DOWN</code> 事件侦听处理函数。\n     */\n    protected onButtonMouseDown(e: Event): void {\n        var isUp: boolean = e.currentTarget === this.upButton;\n        this.slide(isUp);\n        ILaya.timer.once(Styles.scrollBarDelayTime, this, this.startLoop, [isUp]);\n        ILaya.stage.once(Event.MOUSE_UP, this, this.onStageMouseUp);\n    }\n\n    /**@private */\n    protected startLoop(isUp: boolean): void {\n        ILaya.timer.frameLoop(1, this, this.slide, [isUp]);\n    }\n\n    /**@private */\n    protected slide(isUp: boolean): void {\n        if (isUp) this.value -= this._scrollSize;\n        else this.value += this._scrollSize;\n    }\n\n    /**\n     * @private\n     * 舞台的 <code>Event.MOUSE_DOWN</code> 事件侦听处理函数。\n     */\n    protected onStageMouseUp(e: Event): void {\n        ILaya.timer.clear(this, this.startLoop);\n        ILaya.timer.clear(this, this.slide);\n    }\n\n    /**\n     * @copy laya.ui.Image#skin\n     */\n    get skin(): string {\n        return this._skin;\n    }\n\n    set skin(value: string) {\n        if (value == \"\")\n            value = null;\n        if (this._skin == value)\n            return;\n\n        this._setSkin(value);\n    }\n\n    _setSkin(url: string): Promise<void> {\n        this._skin = url;\n\n        if (url) {\n            return AssetDb.inst.resolveURL(url).then(url => {\n                if (this._destroyed)\n                    return null;\n\n                if (this._skinBaseUrl)\n                    url = URL.formatURL(url, this._skinBaseUrl);\n                return Promise.all([\n                    this.slider._setSkin(url),\n                    this.upButton._setSkin(Utils.replaceFileExtension(url, \"$up.png\", true)),\n                    this.downButton._setSkin(Utils.replaceFileExtension(url, \"$down.png\", true))\n                ]).then(() => this._skinLoaded());\n            });\n        }\n        else {\n            this.slider.skin = null;\n            this.upButton.skin = null;\n            this.downButton.skin = null;\n            this._skinLoaded();\n            return Promise.resolve();\n        }\n    }\n\n    protected _skinLoaded(): void {\n        if (this._destroyed)\n            return;\n\n        this.callLater(this.changeScrollBar);\n        this._sizeChanged();\n        this.event(Event.LOADED);\n    }\n\n    /**\n     * @private\n     * 更改对象的皮肤及位置。\n     */\n    protected changeScrollBar(): void {\n        this.upButton.visible = this._showButtons;\n        this.downButton.visible = this._showButtons;\n        if (this.slider.isVertical)\n            this.slider.y = this._showButtons ? this.upButton.height : 0;\n        else\n            this.slider.x = this._showButtons ? this.upButton.width : 0;\n        this.resetPositions();\n        this.repaint();\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n    */\n    protected _sizeChanged(): void {\n        super._sizeChanged();\n        this.repaint();\n        this.resetPositions();\n        this.event(Event.CHANGE);\n        this.changeHandler && this.changeHandler.runWith(this.value);\n    }\n\n    /**@private */\n    private resetPositions(): void {\n        if (this.slider.isVertical) this.slider.height = this.height - (this._showButtons ? (this.upButton.height + this.downButton.height) : 0);\n        else this.slider.width = this.width - (this._showButtons ? (this.upButton.width + this.downButton.width) : 0);\n        this.resetButtonPosition();\n\n    }\n\n    /**@private */\n    protected resetButtonPosition(): void {\n        if (this.slider.isVertical) this.downButton.y = this.slider._y + this.slider.height;\n        else this.downButton.x = this.slider._x + this.slider.width;\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n    */\n    protected measureWidth(): number {\n        if (this.slider.isVertical) return this.slider.width;\n        return 100;\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n    */\n    protected measureHeight(): number {\n        if (this.slider.isVertical) return 100;\n        return this.slider.height;\n    }\n\n    /**\n     * 设置滚动条信息。\n     * @param min 滚动条最小位置值。\n     * @param max 滚动条最大位置值。\n     * @param value 滚动条当前位置值。\n     */\n    setScroll(min: number, max: number, value?: number): void {\n        this.runCallLater(this._sizeChanged);\n        this.slider.setSlider(min, max, value);\n        //_upButton.disabled = max <= 0;\n        //_downButton.disabled = max <= 0;\n        this.slider.bar.visible = max > 0;\n        if (!this._hide && this.autoHide) this.visible = false;\n    }\n\n    /**\n     * 获取或设置表示最高滚动位置的数字。\n     */\n    get max(): number {\n        return this.slider.max;\n    }\n\n    set max(value: number) {\n        this.slider.max = value;\n    }\n\n    /**\n     * 获取或设置表示最低滚动位置的数字。\n     */\n    get min(): number {\n        return this.slider.min;\n    }\n\n    set min(value: number) {\n        this.slider.min = value;\n    }\n\n    /**\n     * 获取或设置表示当前滚动位置的数字。\n     */\n    get value(): number {\n        return this._value;\n    }\n\n    set value(v: number) {\n        if (v !== this._value) {\n            this._value = v;\n            if (!this._isElastic) {\n                if (this.slider[\"_value\"] != v) {\n                    this.slider[\"_value\"] = v;\n                    this.slider.changeValue();\n                }\n                this._value = this.slider[\"_value\"];\n            }\n            this.event(Event.CHANGE);\n            this.changeHandler && this.changeHandler.runWith(this._value);\n        }\n    }\n\n    /**\n     * 一个布尔值，指示滚动条是否为垂直滚动。如果值为true，则为垂直滚动，否则为水平滚动。\n     * <p>默认值为：true。</p>\n     */\n    get isVertical(): boolean {\n        return this.slider.isVertical;\n    }\n\n    set isVertical(value: boolean) {\n        this.slider.isVertical = value;\n    }\n\n    /**\n     * <p>当前实例的 <code>Slider</code> 实例的有效缩放网格数据。</p>\n     * <p>数据格式：\"上边距,右边距,下边距,左边距,是否重复填充(值为0：不重复填充，1：重复填充)\"，以逗号分隔。\n     * <ul><li>例如：\"4,4,4,4,1\"</li></ul></p>\n     */\n    get sizeGrid(): string {\n        return this.slider.sizeGrid;\n    }\n\n    set sizeGrid(value: string) {\n        this.slider.sizeGrid = value;\n    }\n\n    /**获取或设置一个值，该值表示按下滚动条轨道时页面滚动的增量。 */\n    get scrollSize(): number {\n        return this._scrollSize;\n    }\n\n    set scrollSize(value: number) {\n        this._scrollSize = value;\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n     */\n    set_dataSource(value: any) {\n        this._dataSource = value;\n        if (typeof (value) == 'number' || typeof (value) == 'string')\n            this.value = Number(value);\n        else\n            super.set_dataSource(value);\n    }\n\n    /**获取或设置一个值，该值表示滑条长度比例，值为：（0-1）。 */\n    get thumbPercent(): number {\n        return this._thumbPercent;\n    }\n\n    set thumbPercent(value: number) {\n        this.runCallLater(this.changeScrollBar);\n        this.runCallLater(this._sizeChanged);\n        value = value >= 1 ? 0.99 : value;\n        this._thumbPercent = value;\n        if (this.scaleBar) {\n            if (this.slider.isVertical) this.slider.bar.height = Math.max(this.slider.height * value, Styles.scrollBarMinNum);\n            else this.slider.bar.width = Math.max(this.slider.width * value, Styles.scrollBarMinNum);\n        }\n    }\n\n    /**\n     * 设置滚动对象。\n     * @see laya.ui.TouchScroll#target\n     */\n    get target(): Sprite {\n        return this._target;\n    }\n\n    set target(value: Sprite) {\n        if (this._target) {\n            this._target.off(Event.MOUSE_WHEEL, this, this.onTargetMouseWheel);\n            this._target.off(Event.MOUSE_DOWN, this, this.onTargetMouseDown);\n        }\n        this._target = value;\n        if (value) {\n            this._mouseWheelEnable && this._target.on(Event.MOUSE_WHEEL, this, this.onTargetMouseWheel);\n            this._touchScrollEnable && this._target.on(Event.MOUSE_DOWN, this, this.onTargetMouseDown);\n        }\n    }\n\n    /**是否隐藏滚动条，不显示滚动条，但是可以正常滚动，默认为false。*/\n    get hide(): boolean {\n        return this._hide;\n    }\n\n    set hide(value: boolean) {\n        this._hide = value;\n        this.visible = !value;\n    }\n\n    /**一个布尔值，指定是否显示向上、向下按钮，默认值为true。*/\n    get showButtons(): boolean {\n        return this._showButtons;\n    }\n\n    set showButtons(value: boolean) {\n        this._showButtons = value;\n        this.callLater(this.changeScrollBar);\n    }\n\n    /**一个布尔值，指定是否开启触摸，默认值为true。*/\n    get touchScrollEnable(): boolean {\n        return this._touchScrollEnable;\n    }\n\n    set touchScrollEnable(value: boolean) {\n        this._touchScrollEnable = value;\n        this.target = this._target;\n    }\n\n    /** 一个布尔值，指定是否滑轮滚动，默认值为true。*/\n    get mouseWheelEnable(): boolean {\n        return this._mouseWheelEnable;\n    }\n\n    set mouseWheelEnable(value: boolean) {\n        this._mouseWheelEnable = value;\n        this.target = this._target;\n    }\n\n    /**@private */\n    protected onTargetMouseWheel(e: Event): void {\n        this.value += e.delta * this._scrollSize;\n        this.target = this._target;\n    }\n\n    isLockedFun: Function;\n\n    /**@private */\n    protected onTargetMouseDown(e: Event): void {\n        if ((this.isLockedFun) && !this.isLockedFun(e)) return;\n        this.event(Event.END);\n        this._clickOnly = true;\n        this._lastOffset = 0;\n        this._checkElastic = false;\n        this._lastPoint || (this._lastPoint = new Point());\n        this._lastPoint.setTo(ILaya.stage.mouseX, ILaya.stage.mouseY);\n        ILaya.timer.clear(this, this.tweenMove);\n        Tween.clearTween(this);\n        ILaya.stage.once(Event.MOUSE_UP, this, this.onStageMouseUp2);\n        ILaya.stage.once(Event.MOUSE_OUT, this, this.onStageMouseUp2);\n        ILaya.timer.frameLoop(1, this, this.loop);\n    }\n\n    startDragForce(): void {\n        this._clickOnly = true;\n        this._lastOffset = 0;\n        this._checkElastic = false;\n        this._lastPoint || (this._lastPoint = new Point());\n        this._lastPoint.setTo(ILaya.stage.mouseX, ILaya.stage.mouseY);\n        ILaya.timer.clear(this, this.tweenMove);\n        Tween.clearTween(this);\n        ILaya.stage.once(Event.MOUSE_UP, this, this.onStageMouseUp2);\n        ILaya.stage.once(Event.MOUSE_OUT, this, this.onStageMouseUp2);\n        ILaya.timer.frameLoop(1, this, this.loop);\n    }\n\n    private cancelDragOp(): void {\n        ILaya.stage.off(Event.MOUSE_UP, this, this.onStageMouseUp2);\n        ILaya.stage.off(Event.MOUSE_OUT, this, this.onStageMouseUp2);\n        ILaya.timer.clear(this, this.tweenMove);\n        ILaya.timer.clear(this, this.loop);\n        this._target.mouseEnabled = true;\n    }\n\n\n    triggerDownDragLimit: Function;\n    triggerUpDragLimit: Function;\n    /** 暂停滚动的重载方法-add:xiaosong */\n    stopMoveLimit: Function;\n    private checkTriggers(isTweenMove: boolean = false): boolean {\n        if (this.value >= 0 && this.value - this._lastOffset <= 0) {\n            if ((this.triggerDownDragLimit) && this.triggerDownDragLimit(isTweenMove)) {\n                this.cancelDragOp();\n                this.value = 0;\n                return true;\n            }\n        }\n        if (this.value <= this.max && (this.value - this._lastOffset >= this.max)) {\n            if ((this.triggerUpDragLimit) && this.triggerUpDragLimit(isTweenMove)) {\n                this.cancelDragOp();\n                this.value = this.max;\n                return true;\n            }\n        }\n        return false;\n    }\n\n    get lastOffset(): number {\n        return this._lastOffset;\n    }\n\n    startTweenMoveForce(lastOffset: number): void {\n        this._lastOffset = lastOffset;\n        ILaya.timer.frameLoop(1, this, this.tweenMove, [200]);\n    }\n    /**@private */\n    protected loop(): void {\n        if (this.disableDrag) return;\n        var mouseY: number = ILaya.stage.mouseY;\n        var mouseX: number = ILaya.stage.mouseX;\n        this._lastOffset = this.isVertical ? (mouseY - this._lastPoint.y) : (mouseX - this._lastPoint.x);\n\n        if (this._clickOnly) {\n            if (Math.abs(this._lastOffset * (this.isVertical ? ILaya.stage._canvasTransform.getScaleY() : ILaya.stage._canvasTransform.getScaleX())) > 1) {\n                this._clickOnly = false;\n                if (this.checkTriggers()) return;\n                this._offsets || (this._offsets = []);\n                this._offsets.length = 0;\n                this._target.mouseEnabled = false;\n                if (!this.hide && this.autoHide) {\n                    this.alpha = 1;\n                    this.visible = true;\n                }\n                this.event(Event.START);\n            } else return;\n        } else {\n            if (this.checkTriggers()) return;\n        }\n        this._offsets.push(this._lastOffset);\n\n        this._lastPoint.x = mouseX;\n        this._lastPoint.y = mouseY;\n\n        if (this._lastOffset === 0) return;\n\n        if (!this._checkElastic) {\n            if (this.elasticDistance > 0) {\n                if (!this._checkElastic && this._lastOffset != 0) {\n                    if ((this._lastOffset > 0 && this._value <= this.min) || (this._lastOffset < 0 && this._value >= this.max)) {\n                        this._isElastic = true;\n                        this._checkElastic = true;\n                    } else {\n                        this._isElastic = false;\n                    }\n                }\n            } else {\n                this._checkElastic = true;\n            }\n        }\n\n        if (this._isElastic) {\n            if (this._value <= this.min) {\n                if (this._lastOffset > 0) {\n                    this.value -= this._lastOffset * Math.max(0, (1 - ((this.min - this._value) / this.elasticDistance)));\n                } else {\n                    this.value -= this._lastOffset * 0.5;\n                    if (this._value >= this.min)\n                        this._checkElastic = false;\n                }\n            } else if (this._value >= this.max) {\n                if (this._lastOffset < 0) {\n                    this.value -= this._lastOffset * Math.max(0, (1 - ((this._value - this.max) / this.elasticDistance)));\n                } else {\n                    this.value -= this._lastOffset * 0.5;\n                    if (this._value <= this.max)\n                        this._checkElastic = false;\n                }\n\n            }\n        } else {\n            this.value -= this._lastOffset;\n        }\n    }\n\n    /**@private */\n    protected onStageMouseUp2(e: Event): void {\n        ILaya.stage.off(Event.MOUSE_UP, this, this.onStageMouseUp2);\n        ILaya.stage.off(Event.MOUSE_OUT, this, this.onStageMouseUp2);\n        ILaya.timer.clear(this, this.loop);\n\n        if (this._clickOnly) {\n            if (this._value >= this.min && this._value <= this.max)\n                return;\n        }\n        this._target.mouseEnabled = true;\n\n        if (this._isElastic) {\n            if (this._value < this.min) {\n                if (this.min - this._value >= this.topMoveLimit) {\n                    this.event(\"dragTopLimit\");\n                }\n                var moveValue: number = (this.stopMoveLimit && this.stopMoveLimit()) ? (this.min - this.topMoveLimit) : this.min;\n                Tween.to(this, { value: moveValue }, this.elasticBackTime, Ease.sineOut, Handler.create(this, this.elasticOver));\n            } else if (this._value > this.max) {\n                if (this._value - this.max >= this.bottomMoveLimit) {\n                    this.event(\"dragBottomLimit\");\n                }\n                var moveValue: number = (this.stopMoveLimit && this.stopMoveLimit()) ? (this.max + this.bottomMoveLimit) : this.max;\n                Tween.to(this, { value: moveValue }, this.elasticBackTime, Ease.sineOut, Handler.create(this, this.elasticOver));\n            }\n        } else {\n            if (!this._offsets) return;\n            //计算平均值\n            if (this._offsets.length < 1) {\n                this._offsets[0] = this.isVertical ? ILaya.stage.mouseY - this._lastPoint.y : ILaya.stage.mouseX - this._lastPoint.x;\n            }\n            var offset: number = 0;\n            var n: number = Math.min(this._offsets.length, 3);\n            for (var i: number = 0; i < n; i++) {\n                offset += this._offsets[this._offsets.length - 1 - i];\n            }\n            this._lastOffset = offset / n;\n\n            offset = Math.abs(this._lastOffset);\n            if (offset < 2) {\n                this.event(Event.END);\n                return;\n            }\n            if (offset > 250) this._lastOffset = this._lastOffset > 0 ? 250 : -250;\n            var dis: number = Math.round(Math.abs(this.elasticDistance * (this._lastOffset / 150)));\n            ILaya.timer.frameLoop(1, this, this.tweenMove, [dis]);\n        }\n    }\n\n    /**@private */\n    private elasticOver(): void {\n        this._isElastic = false;\n        if (!this.hide && this.autoHide) {\n            Tween.to(this, { alpha: 0 }, 500);\n        }\n        this.event(Event.END);\n    }\n\n    /**@private */\n    protected tweenMove(maxDistance: number): void {\n        this._lastOffset *= this.rollRatio;\n        if (this.checkTriggers(true)) {\n            return;\n        }\n        var tarSpeed: number;\n        if (maxDistance > 0) {\n            if (this._lastOffset > 0 && this.value <= this.min) {\n                this._isElastic = true;\n                tarSpeed = -(this.min - maxDistance - this.value) * 0.5;\n                if (this._lastOffset > tarSpeed) this._lastOffset = tarSpeed;\n            } else if (this._lastOffset < 0 && this.value >= this.max) {\n                this._isElastic = true;\n                tarSpeed = -(this.max + maxDistance - this.value) * 0.5;\n                if (this._lastOffset < tarSpeed) this._lastOffset = tarSpeed;\n            }\n        }\n\n        this.value -= this._lastOffset;\n        //if (Math.abs(_lastOffset) < 1 || value == max || value == min) \n        if (Math.abs(this._lastOffset) < 0.1) {\n            ILaya.timer.clear(this, this.tweenMove);\n            if (this._isElastic) {\n                if (this._value < this.min) {\n                    Tween.to(this, { value: this.min }, this.elasticBackTime, Ease.sineOut, Handler.create(this, this.elasticOver));\n                } else if (this._value > this.max) {\n                    Tween.to(this, { value: this.max }, this.elasticBackTime, Ease.sineOut, Handler.create(this, this.elasticOver));\n                } else {\n                    this.elasticOver();\n                }\n                return;\n            }\n            this.event(Event.END);\n            if (!this.hide && this.autoHide) {\n                Tween.to(this, { alpha: 0 }, 500);\n            }\n        }\n    }\n\n    /**\n     * 停止滑动。\n     */\n    stopScroll(): void {\n        this.onStageMouseUp2(null);\n        ILaya.timer.clear(this, this.tweenMove);\n        Tween.clearTween(this);\n    }\n\n    /**\n     * 滚动的刻度值，滑动数值为tick的整数倍。默认值为1。\n     */\n    get tick(): number {\n        return this.slider.tick;\n    }\n\n    set tick(value: number) {\n        this.slider.tick = value;\n    }\n\n    /** 恢复到正常的弹性缓动效果 */\n    backToNormal(): void {\n        if (this._value < this.min) {\n            this._backToNormal(this.min);\n        } else if (this._value > this.max) {\n            this._backToNormal(this.max);\n        }\n    }\n\n    private _backToNormal(value: number) {\n        Tween.to(this, { value: value }, this.elasticBackTime, Ease.sineOut, Handler.create(this, this.elasticOver));\n    }\n}","import { ScrollBar } from \"./ScrollBar\";\n\n/**\n *\n * 使用 <code>VScrollBar</code> （垂直 <code>ScrollBar</code> ）控件，可以在因数据太多而不能在显示区域完全显示时控制显示的数据部分。\n *\n * @example <caption>以下示例代码，创建了一个 <code>VScrollBar</code> 实例。</caption>\n * package\n *\t{\n *\t\timport laya.ui.vScrollBar;\n *\t\timport laya.ui.VScrollBar;\n *\t\timport laya.utils.Handler;\n *\t\tpublic class VScrollBar_Example\n *\t\t{\n *\t\t\tprivate var vScrollBar:VScrollBar;\n *\t\t\tpublic function VScrollBar_Example()\n *\t\t\t{\n *\t\t\t\tLaya.init(640, 800);//设置游戏画布宽高、渲染模式。\n *\t\t\t\tLaya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\n *\t\t\t\tLaya.loader.load([\"resource/ui/vscroll.png\", \"resource/ui/vscroll$bar.png\", \"resource/ui/vscroll$down.png\", \"resource/ui/vscroll$up.png\"], Handler.create(this, onLoadComplete));\n *\t\t\t}\n *\t\t\tprivate function onLoadComplete():void\n *\t\t\t{\n *\t\t\t\tvScrollBar = new VScrollBar();//创建一个 vScrollBar 类的实例对象 hScrollBar 。\n *\t\t\t\tvScrollBar.skin = \"resource/ui/vscroll.png\";//设置 vScrollBar 的皮肤。\n *\t\t\t\tvScrollBar.x = 100;//设置 vScrollBar 对象的属性 x 的值，用于控制 vScrollBar 对象的显示位置。\n *\t\t\t\tvScrollBar.y = 100;//设置 vScrollBar 对象的属性 y 的值，用于控制 vScrollBar 对象的显示位置。\n *\t\t\t\tvScrollBar.changeHandler = new Handler(this, onChange);//设置 vScrollBar 的滚动变化处理器。\n *\t\t\t\tLaya.stage.addChild(vScrollBar);//将此 vScrollBar 对象添加到显示列表。\n *\t\t\t}\n *\t\t\tprivate function onChange(value:Number):void\n *\t\t\t{\n *\t\t\t\ttrace(\"滚动条的位置： value=\" + value);\n *\t\t\t}\n *\t\t}\n *\t}\n * @example\n * Laya.init(640, 800);//设置游戏画布宽高\n * Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色\n * var vScrollBar;\n * var res = [\"resource/ui/vscroll.png\", \"resource/ui/vscroll$bar.png\", \"resource/ui/vscroll$down.png\", \"resource/ui/vscroll$up.png\"];\n * Laya.loader.load(res, laya.utils.Handler.create(this, onLoadComplete));//加载资源。\n * function onLoadComplete() {\n *     vScrollBar = new laya.ui.VScrollBar();//创建一个 vScrollBar 类的实例对象 hScrollBar 。\n *     vScrollBar.skin = \"resource/ui/vscroll.png\";//设置 vScrollBar 的皮肤。\n *     vScrollBar.x = 100;//设置 vScrollBar 对象的属性 x 的值，用于控制 vScrollBar 对象的显示位置。\n *     vScrollBar.y = 100;//设置 vScrollBar 对象的属性 y 的值，用于控制 vScrollBar 对象的显示位置。\n *     vScrollBar.changeHandler = new laya.utils.Handler(this, onChange);//设置 vScrollBar 的滚动变化处理器。\n *     Laya.stage.addChild(vScrollBar);//将此 vScrollBar 对象添加到显示列表。\n * }\n * function onChange(value) {\n *     console.log(\"滚动条的位置： value=\" + value);\n * }\n * @example\n * import VScrollBar = laya.ui.VScrollBar;\n * import Handler = laya.utils.Handler;\n * class VScrollBar_Example {\n *     private vScrollBar: VScrollBar;\n *     constructor() {\n *         Laya.init(640, 800);//设置游戏画布宽高、渲染模式。\n *         Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\n *         Laya.loader.load([\"resource/ui/vscroll.png\", \"resource/ui/vscroll$bar.png\", \"resource/ui/vscroll$down.png\", \"resource/ui/vscroll$up.png\"], Handler.create(this, this.onLoadComplete));\n *     }\n *     private onLoadComplete(): void {\n *         this.vScrollBar = new VScrollBar();//创建一个 vScrollBar 类的实例对象 hScrollBar 。\n *         this.vScrollBar.skin = \"resource/ui/vscroll.png\";//设置 vScrollBar 的皮肤。\n *         this.vScrollBar.x = 100;//设置 vScrollBar 对象的属性 x 的值，用于控制 vScrollBar 对象的显示位置。\n *         this.vScrollBar.y = 100;//设置 vScrollBar 对象的属性 y 的值，用于控制 vScrollBar 对象的显示位置。\n *         this.vScrollBar.changeHandler = new Handler(this, this.onChange);//设置 vScrollBar 的滚动变化处理器。\n *         Laya.stage.addChild(this.vScrollBar);//将此 vScrollBar 对象添加到显示列表。\n *     }\n *     private onChange(value: number): void {\n *         console.log(\"滚动条的位置： value=\" + value);\n *     }\n * }\n */\nexport class VScrollBar extends ScrollBar {\n\n}","import { ScrollBar } from \"./ScrollBar\";\n\n/**\n * 使用 <code>HScrollBar</code> （水平 <code>ScrollBar</code> ）控件，可以在因数据太多而不能在显示区域完全显示时控制显示的数据部分。\n * @example <caption>以下示例代码，创建了一个 <code>HScrollBar</code> 实例。</caption>\n * package\n *\t{\n *\t\timport laya.ui.HScrollBar;\n *\t\timport laya.utils.Handler;\n *\t\tpublic class HScrollBar_Example\n *\t\t{\n *\t\t\tprivate var hScrollBar:HScrollBar;\n *\t\t\tpublic function HScrollBar_Example()\n *\t\t\t{\n *\t\t\t\tLaya.init(640, 800);//设置游戏画布宽高。\n *\t\t\t\tLaya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\n *\t\t\t\tLaya.loader.load([\"resource/ui/hscroll.png\", \"resource/ui/hscroll$bar.png\", \"resource/ui/hscroll$down.png\", \"resource/ui/hscroll$up.png\"], Handler.create(this, onLoadComplete));//加载资源。\n *\t\t\t}\n *\t\t\tprivate function onLoadComplete():void\n *\t\t\t{\n *\t\t\t\thScrollBar = new HScrollBar();//创建一个 HScrollBar 类的实例对象 hScrollBar 。\n *\t\t\t\thScrollBar.skin = \"resource/ui/hscroll.png\";//设置 hScrollBar 的皮肤。\n *\t\t\t\thScrollBar.x = 100;//设置 hScrollBar 对象的属性 x 的值，用于控制 hScrollBar 对象的显示位置。\n *\t\t\t\thScrollBar.y = 100;//设置 hScrollBar 对象的属性 y 的值，用于控制 hScrollBar 对象的显示位置。\n *\t\t\t\thScrollBar.changeHandler = new Handler(this, onChange);//设置 hScrollBar 的滚动变化处理器。\n *\t\t\t\tLaya.stage.addChild(hScrollBar);//将此 hScrollBar 对象添加到显示列表。\n *\t\t\t}\n *\t\t\tprivate function onChange(value:Number):void\n *\t\t\t{\n *\t\t\t\ttrace(\"滚动条的位置： value=\" + value);\n *\t\t\t}\n *\t\t}\n *\t}\n * @example\n * Laya.init(640, 800);//设置游戏画布宽高\n * Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色\n * var hScrollBar;\n * var res  = [\"resource/ui/hscroll.png\", \"resource/ui/hscroll$bar.png\", \"resource/ui/hscroll$down.png\", \"resource/ui/hscroll$up.png\"];\n * Laya.loader.load(res,laya.utils.Handler.create(this, onLoadComplete));//加载资源。\n * function onLoadComplete() {\n *     console.log(\"资源加载完成！\");\n *     hScrollBar = new laya.ui.HScrollBar();//创建一个 HScrollBar 类的实例对象 hScrollBar 。\n *     hScrollBar.skin = \"resource/ui/hscroll.png\";//设置 hScrollBar 的皮肤。\n *     hScrollBar.x = 100;//设置 hScrollBar 对象的属性 x 的值，用于控制 hScrollBar 对象的显示位置。\n *     hScrollBar.y = 100;//设置 hScrollBar 对象的属性 y 的值，用于控制 hScrollBar 对象的显示位置。\n *     hScrollBar.changeHandler = new laya.utils.Handler(this, onChange);//设置 hScrollBar 的滚动变化处理器。\n *     Laya.stage.addChild(hScrollBar);//将此 hScrollBar 对象添加到显示列表。\n * }\n * function onChange(value)\n * {\n *     console.log(\"滚动条的位置： value=\" + value);\n * }\n * @example\n * import HScrollBar = laya.ui.HScrollBar;\n * import Handler = laya.utils.Handler;\n * class HScrollBar_Example {\n *     private hScrollBar: HScrollBar;\n *     constructor() {\n *         Laya.init(640, 800);//设置游戏画布宽高。\n *         Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\n *         Laya.loader.load([\"resource/ui/hscroll.png\", \"resource/ui/hscroll$bar.png\", \"resource/ui/hscroll$down.png\", \"resource/ui/hscroll$up.png\"], Handler.create(this, this.onLoadComplete));//加载资源。\n *     }\n *     private onLoadComplete(): void {\n *         this.hScrollBar = new HScrollBar();//创建一个 HScrollBar 类的实例对象 hScrollBar 。\n *         this.hScrollBar.skin = \"resource/ui/hscroll.png\";//设置 hScrollBar 的皮肤。\n *         this.hScrollBar.x = 100;//设置 hScrollBar 对象的属性 x 的值，用于控制 hScrollBar 对象的显示位置。\n *         this.hScrollBar.y = 100;//设置 hScrollBar 对象的属性 y 的值，用于控制 hScrollBar 对象的显示位置。\n *         this.hScrollBar.changeHandler = new Handler(this, this.onChange);//设置 hScrollBar 的滚动变化处理器。\n *         Laya.stage.addChild(this.hScrollBar);//将此 hScrollBar 对象添加到显示列表。\n *     }\n *     private onChange(value: number): void {\n *         console.log(\"滚动条的位置： value=\" + value);\n *     }\n * }\n*/\nexport class HScrollBar extends ScrollBar {\n\n    /**\n     * @override\n     * @inheritDoc \n     */\n    protected initialize(): void {\n        super.initialize();\n        this.slider.isVertical = false;\n    }\n}","import { Box } from \"./Box\";\nimport { ScrollBar } from \"./ScrollBar\";\nimport { VScrollBar } from \"./VScrollBar\";\nimport { HScrollBar } from \"./HScrollBar\";\nimport { Clip } from \"./Clip\";\nimport { UIUtils } from \"./UIUtils\";\nimport { Event } from \"../events/Event\"\nimport { Point } from \"../maths/Point\"\nimport { Rectangle } from \"../maths/Rectangle\"\nimport { Handler } from \"../utils/Handler\"\nimport { Tween } from \"../utils/Tween\"\nimport { LegacyUIParser } from \"../loaders/LegacyUIParser\";\nimport { HideFlags } from \"../Const\";\nimport { HierarchyParser } from \"../loaders/HierarchyParser\";\nimport { UIComponent } from \"./UIComponent\";\nimport { ScrollType } from \"./Styles\";\n\n/**\n * 当对象的 <code>selectedIndex</code> 属性发生变化时调度。\n * @eventType laya.events.Event\n */\n/*[Event(name = \"change\", type = \"laya.events.Event\")]*/\n\n/**\n * 渲染列表的单元项对象时调度。\n * @eventType Event.RENDER\n */\n/*[Event(name = \"render\", type = \"laya.events.Event\")]*/\n\n/**\n * <code>List</code> 控件可显示项目列表。默认为垂直方向列表。可通过UI编辑器自定义列表。\n *\n * @example <caption>以下示例代码，创建了一个 <code>List</code> 实例。</caption>\n * package\n *\t{\n *\t\timport laya.ui.List;\n *\t\timport laya.utils.Handler;\n *\t\tpublic class List_Example\n *\t\t{\n *\t\t\tpublic function List_Example()\n *\t\t\t{\n *\t\t\t\tLaya.init(640, 800, \"false\");//设置游戏画布宽高、渲染模式。\n *\t\t\t\tLaya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\n *\t\t\t\tLaya.loader.load([\"resource/ui/vscroll.png\", \"resource/ui/vscroll$bar.png\", \"resource/ui/vscroll$down.png\", \"resource/ui/vscroll$up.png\"], Handler.create(this, onLoadComplete));\n *\t\t\t}\n *\t\t\tprivate function onLoadComplete():void\n *\t\t\t{\n *\t\t\t\tvar arr:Array = [];//创建一个数组，用于存贮列表的数据信息。\n *\t\t\t\tfor (var i:int = 0; i &lt; 20; i++)\n *\t\t\t\t{\n *\t\t\t\t\tarr.push({label: \"item\" + i});\n *\t\t\t\t}\n *\t\t\t\tvar list:List = new List();//创建一个 List 类的实例对象 list 。\n *\t\t\t\tlist.itemRender = Item;//设置 list 的单元格渲染器。\n *\t\t\t\tlist.repeatX = 1;//设置 list 的水平方向单元格数量。\n *\t\t\t\tlist.repeatY = 10;//设置 list 的垂直方向单元格数量。\n *\t\t\t\tlist.vScrollBarSkin = \"resource/ui/vscroll.png\";//设置 list 的垂直方向滚动条皮肤。\n *\t\t\t\tlist.array = arr;//设置 list 的列表数据源。\n *\t\t\t\tlist.pos(100, 100);//设置 list 的位置。\n *\t\t\t\tlist.selectEnable = true;//设置 list 可选。\n *\t\t\t\tlist.selectHandler = new Handler(this, onSelect);//设置 list 改变选择项执行的处理器。\n *\t\t\t\tLaya.stage.addChild(list);//将 list 添加到显示列表。\n *\t\t\t}\n *\t\t\tprivate function onSelect(index:int):void\n *\t\t\t{\n *\t\t\t\ttrace(\"当前选择的项目索引： index= \", index);\n *\t\t\t}\n *\t\t}\n *\t}\n *\timport laya.ui.Box;\n *\timport laya.ui.Label;\n *\tclass Item extends Box\n *\t{\n *\t\tpublic function Item()\n *\t\t{\n *\t\t\tgraphics.drawRect(0, 0, 100, 20,null, \"#ff0000\");\n *\t\t\tvar label:Label = new Label();\n *\t\t\tlabel.text = \"100000\";\n *\t\t\tlabel.name = \"label\";//设置 label 的name属性值。\n *\t\t\tlabel.size(100, 20);\n *\t\t\taddChild(label);\n *\t\t}\n *\t}\n * @example\n * (function (_super){\n *     function Item(){\n *         Item.__super.call(this);//初始化父类\n *         this.graphics.drawRect(0, 0, 100, 20, \"#ff0000\");\n *         var label = new laya.ui.Label();//创建一个 Label 类的实例对象 label 。\n *         label.text = \"100000\";//设置 label 的文本内容。\n *         label.name = \"label\";//设置 label 的name属性值。\n *         label.size(100, 20);//设置 label 的宽度、高度。\n *         this.addChild(label);//将 label 添加到显示列表。\n *     };\n *     Laya.class(Item,\"mypackage.listExample.Item\",_super);//注册类 Item 。\n * })(laya.ui.Box);\n    \n * Laya.init(640, 800);//设置游戏画布宽高、渲染模式。\n * Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\n * var res = [\"resource/ui/vscroll.png\", \"resource/ui/vscroll$bar.png\", \"resource/ui/vscroll$down.png\", \"resource/ui/vscroll$up.png\"];\n * Laya.loader.load(res, new laya.utils.Handler(this, onLoadComplete));//加载资源。\n    \n * function onLoadComplete() {\n *     var arr = [];//创建一个数组，用于存贮列表的数据信息。\n *     for (var i = 0; i &lt; 20; i++) {\n *         arr.push({label: \"item\" + i});\n *     }\n    \n *     var list = new laya.ui.List();//创建一个 List 类的实例对象 list 。\n *     list.itemRender = mypackage.listExample.Item;//设置 list 的单元格渲染器。\n *     list.repeatX = 1;//设置 list 的水平方向单元格数量。\n *     list.repeatY = 10;//设置 list 的垂直方向单元格数量。\n *     list.vScrollBarSkin = \"resource/ui/vscroll.png\";//设置 list 的垂直方向滚动条皮肤。\n *     list.array = arr;//设置 list 的列表数据源。\n *     list.pos(100, 100);//设置 list 的位置。\n *     list.selectEnable = true;//设置 list 可选。\n *     list.selectHandler = new laya.utils.Handler(this, onSelect);//设置 list 改变选择项执行的处理器。\n *     Laya.stage.addChild(list);//将 list 添加到显示列表。\n * }\n    \n * function onSelect(index)\n * {\n *     console.log(\"当前选择的项目索引： index= \", index);\n * }\n *\n * @example\n * import List = laya.ui.List;\n * import Handler = laya.utils.Handler;\n * public class List_Example {\n *     public List_Example() {\n *         Laya.init(640, 800);//设置游戏画布宽高。\n *         Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\n *         Laya.loader.load([\"resource/ui/vscroll.png\", \"resource/ui/vscroll$bar.png\", \"resource/ui/vscroll$down.png\", \"resource/ui/vscroll$up.png\"], Handler.create(this, this.onLoadComplete));\n *     }\n *     private onLoadComplete(): void {\n *         var arr= [];//创建一个数组，用于存贮列表的数据信息。\n *         for (var i: number = 0; i &lt; 20; i++)\n *         {\n *             arr.push({ label: \"item\" + i });\n *         }\n *         var list: List = new List();//创建一个 List 类的实例对象 list 。\n *         list.itemRender = Item;//设置 list 的单元格渲染器。\n *         list.repeatX = 1;//设置 list 的水平方向单元格数量。\n *         list.repeatY = 10;//设置 list 的垂直方向单元格数量。\n *         list.vScrollBarSkin = \"resource/ui/vscroll.png\";//设置 list 的垂直方向滚动条皮肤。\n *         list.array = arr;//设置 list 的列表数据源。\n *         list.pos(100, 100);//设置 list 的位置。\n *         list.selectEnable = true;//设置 list 可选。\n *         list.selectHandler = new Handler(this, this.onSelect);//设置 list 改变选择项执行的处理器。\n *         Laya.stage.addChild(list);//将 list 添加到显示列表。\n *     }\n *     private onSelect(index: number): void {\n *         console.log(\"当前选择的项目索引： index= \", index);\n *     }\n * }\n * import Box = laya.ui.Box;\n * import Label = laya.ui.Label;\n * class Item extends Box {\n *     constructor() {\n *         this.graphics.drawRect(0, 0, 100, 20, null, \"#ff0000\");\n *         var label: Label = new Label();\n *         label.text = \"100000\";\n *         label.name = \"label\";//设置 label 的name属性值。\n *         label.size(100, 20);\n *         this.addChild(label);\n *     }\n * }\n */\nexport class List extends Box {\n\n    /**改变 <code>List</code> 的选择项时执行的处理器，(默认返回参数： 项索引（index:int）)。*/\n    selectHandler: Handler | null;\n    /**单元格渲染处理器(默认返回参数cell:UIComponent,index:int)。*/\n    renderHandler: Handler | null;\n    /**单元格鼠标事件处理器(默认返回参数e:Event,index:int)。*/\n    mouseHandler: Handler | null;\n    /**指定是否可以选择，若值为true则可以选择，否则不可以选择。 @default false*/\n    selectEnable: boolean = false;\n    /**最大分页数。*/\n    totalPage: number = 0;\n    /**禁用滚动条停止 */\n    disableStopScroll: boolean = false;\n\n    /**@private */\n    protected _content!: Box;\n    /**@private */\n    protected _scrollBar: ScrollBar | null;\n    /**@private */\n    protected _itemRender: any;\n    /**@private */\n    protected _repeatX: number = 0;\n    /**@private */\n    protected _repeatY: number = 0;\n    /**@private */\n    protected _repeatX2: number = 0;\n    /**@private */\n    protected _repeatY2: number = 0;\n    /**@private */\n    protected _spaceX: number = 0;\n    /**@private */\n    protected _spaceY: number = 0;\n    /**@private */\n    protected _cells: UIComponent[] = [];\n    /**@private */\n    protected _array: any[] | null;\n    /**@private */\n    protected _startIndex: number = 0;\n    /**@private */\n    protected _selectedIndex: number = -1;\n    /**@private */\n    protected _page: number = 0;\n    /**@private */\n    protected _isVertical: boolean = true;\n    /**@private */\n    protected _cellSize: number = 20;\n    /**@private */\n    protected _cellOffset: number = 0;\n    /**@private */\n    protected _isMoved: boolean;\n    /**是否缓存内容，如果数据源较少，并且list内无动画，设置此属性为true能大大提高性能 */\n    cacheContent: boolean;\n    /**@private */\n    protected _createdLine: number = 0;\n    /**@private */\n    protected _cellChanged: boolean;\n    /**@private */\n    protected _offset: Point = new Point();\n    /**@private */\n    protected _usedCache: string | null = null;\n    /**@private */\n    protected _elasticEnabled: boolean = false;\n\n    protected _scrollType: ScrollType = 0;\n    protected _vScrollBarSkin: string;\n    protected _hScrollBarSkin: string;\n\n    /**\n     * @inheritDoc \n     * @override\n     */\n    destroy(destroyChild: boolean = true): void {\n        this._content && this._content.destroy(destroyChild);\n        this._scrollBar && this._scrollBar.destroy(destroyChild);\n        super.destroy(destroyChild);\n        this._content = null;\n        this._scrollBar = null;\n        this._itemRender = null;\n        this._cells = null;\n        this._array = null;\n        this.selectHandler = this.renderHandler = this.mouseHandler = null;\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n     */\n    protected createChildren(): void {\n        this._content = new Box();\n        this._content.hideFlags = HideFlags.HideAndDontSave;\n        this.addChild(this._content);\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n     */\n    set cacheAs(value: string) {\n        super.cacheAs = value;\n        if (this._scrollBar) {\n            this._usedCache = null;\n            if (value !== \"none\") this._scrollBar.on(Event.START, this, this.onScrollStart);\n            else this._scrollBar.off(Event.START, this, this.onScrollStart);\n        }\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n     */\n    get cacheAs() {\n        return super.cacheAs;\n    }\n\n    private onScrollStart(): void {\n        this._usedCache || (this._usedCache = super.cacheAs);\n        super.cacheAs = \"none\";\n        this._scrollBar!.once(Event.END, this, this.onScrollEnd);\n    }\n\n    private onScrollEnd(): void {\n        super.cacheAs = this._usedCache || 'none';\n    }\n\n    /**\n     * 获取对 <code>List</code> 组件所包含的内容容器 <code>Box</code> 组件的引用。\n     */\n    get content() {\n        return this._content;\n    }\n\n    /**\n     * 滚动类型\n     */\n    get scrollType() {\n        return this._scrollType;\n    }\n\n    set scrollType(value: ScrollType) {\n        this._scrollType = value;\n\n        if (this._scrollType == ScrollType.None) {\n            if (this._scrollBar) {\n                this._scrollBar.destroy();\n                this._scrollBar = null;\n                this._content.scrollRect = null;\n            }\n        }\n        else if (this._scrollType == ScrollType.Horizontal) {\n            if (this._scrollBar && !this._scrollBar.isVertical) {\n                this._scrollBar.skin = this._hScrollBarSkin;\n                return;\n            }\n\n            if (this._scrollBar) {\n                this._scrollBar.destroy();\n                this._scrollBar = null;\n            }\n\n            let scrollBar = new HScrollBar();\n            scrollBar.name = \"scrollBar\";\n            scrollBar.bottom = 0;\n            scrollBar._skinBaseUrl = this._skinBaseUrl;\n            scrollBar.skin = this._hScrollBarSkin;\n            scrollBar.elasticDistance = this._elasticEnabled ? 200 : 0;\n            scrollBar.hideFlags = HideFlags.HideAndDontSave;\n            this.scrollBar = scrollBar;\n            this._setCellChanged();\n        }\n        else {\n            if (this._scrollBar && this._scrollBar.isVertical) {\n                this._scrollBar.skin = this._vScrollBarSkin;\n                return;\n            }\n\n            if (this._scrollBar) {\n                this._scrollBar.destroy();\n                this._scrollBar = null;\n            }\n\n            let scrollBar = new VScrollBar();\n            scrollBar.name = \"scrollBar\";\n            scrollBar.right = 0;\n            scrollBar._skinBaseUrl = this._skinBaseUrl;\n            scrollBar.skin = this._vScrollBarSkin;\n            scrollBar.elasticDistance = this._elasticEnabled ? 200 : 0;\n            scrollBar.hideFlags = HideFlags.HideAndDontSave;\n            this.scrollBar = scrollBar;\n            this._setCellChanged();\n        }\n    }\n\n    /**\n     * 垂直方向滚动条皮肤。\n     */\n    get vScrollBarSkin(): string {\n        return this._vScrollBarSkin;\n    }\n\n    set vScrollBarSkin(value: string) {\n        if (value == \"\") value = null;\n        if (this._vScrollBarSkin != value) {\n            this._vScrollBarSkin = value;\n            if (this._scrollType == 0)\n                this.scrollType = ScrollType.Vertical;\n            else\n                this.scrollType = this._scrollType;\n        }\n\n    }\n\n    /**\n     * 水平方向滚动条皮肤。\n     */\n    get hScrollBarSkin(): string {\n        return this._hScrollBarSkin;\n    }\n\n    set hScrollBarSkin(value: string) {\n        if (value == \"\") value = null;\n        if (this._hScrollBarSkin != value) {\n            this._hScrollBarSkin = value;\n            if (this._scrollType == 0)\n                this.scrollType = ScrollType.Horizontal;\n            else\n                this.scrollType = this._scrollType;\n        }\n    }\n\n    /**\n     * 获取对 <code>List</code> 组件所包含的滚动条 <code>ScrollBar</code> 组件的引用。\n     */\n    get scrollBar(): ScrollBar | null {\n        return this._scrollBar;\n    }\n\n    set scrollBar(value: ScrollBar | null) {\n        if (this._scrollBar != value) {\n            this._scrollBar = value;\n            if (value) {\n                this._isVertical = this._scrollBar.isVertical;\n                this._scrollBar.target = this._content;\n                this._scrollBar.on(Event.CHANGE, this, this.onScrollBarChange);\n                this.addChild(this._scrollBar);\n                this._content.scrollRect = Rectangle.create();\n            }\n        }\n    }\n\n    /**\n     * 单元格渲染器。\n     * <p><b>取值：</b>\n     * <ol>\n     * <li>单元格类对象。</li>\n     * <li> UI 的 JSON 描述。</li>\n     * </ol></p>\n     * @implements\n     */\n    get itemRender(): any {\n        return this._itemRender;\n    }\n\n    set itemRender(value: any) {\n        if (this._itemRender != value) {\n            this._itemRender = value;\n            //销毁老单元格\n            for (let i = this._cells!.length - 1; i > -1; i--) {\n                this._cells![i].destroy();\n            }\n            this._cells!.length = 0;\n            this._setCellChanged();\n        }\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n    */\n    _setWidth(value: number) {\n        super._setWidth(value);\n        this._setCellChanged();\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n    */\n    _setHeight(value: number) {\n        super._setHeight(value);\n        this._setCellChanged();\n    }\n\n\n    /**\n     * 水平方向显示的单元格数量。\n     */\n    get repeatX(): number {\n        return this._repeatX > 0 ? this._repeatX : this._repeatX2 > 0 ? this._repeatX2 : 1;\n    }\n\n    set repeatX(value: number) {\n        this._repeatX = value;\n        this._setCellChanged();\n    }\n\n    /**\n     * 垂直方向显示的单元格数量。\n     */\n    get repeatY(): number {\n        return this._repeatY > 0 ? this._repeatY : this._repeatY2 > 0 ? this._repeatY2 : 1;\n    }\n\n    set repeatY(value: number) {\n        this._repeatY = value;\n        this._setCellChanged();\n    }\n\n    /**\n     * 水平方向显示的单元格之间的间距（以像素为单位）。\n     */\n    get spaceX(): number {\n        return this._spaceX;\n    }\n\n    set spaceX(value: number) {\n        this._spaceX = value;\n        this._setCellChanged();\n    }\n\n    /**\n     * 垂直方向显示的单元格之间的间距（以像素为单位）。\n     */\n    get spaceY(): number {\n        return this._spaceY;\n    }\n\n    set spaceY(value: number) {\n        this._spaceY = value;\n        this._setCellChanged();\n    }\n\n    /**\n     * @private\n     * 更改单元格的信息。\n     * 在此销毁、创建单元格，并设置单元格的位置等属性。相当于此列表内容发送改变时调用此函数。\n     */\n    protected changeCells(): void {\n        this._cellChanged = false;\n        if (this._itemRender) {\n            //获取滚动条\n            this.scrollBar = (<ScrollBar>this.getChildByName(\"scrollBar\"));\n\n            //自适应宽高\n            let cell = this._getOneCell();\n\n            let cellWidth = (cell.width + this._spaceX) || 1;\n            let cellHeight = (cell.height + this._spaceY) || 1;\n            if (this._width > 0) this._repeatX2 = this._isVertical ? Math.round(this._width / cellWidth) : Math.ceil(this._width / cellWidth);\n            if (this._height > 0) this._repeatY2 = this._isVertical ? Math.ceil(this._height / cellHeight) : Math.round(this._height / cellHeight);\n\n            let listWidth = this._isWidthSet ? this._width : (cellWidth * this.repeatX - this._spaceX);\n            let listHeight = this._isHeightSet ? this._height : (cellHeight * this.repeatY - this._spaceY);\n            this._cellSize = this._isVertical ? cellHeight : cellWidth;\n            this._cellOffset = this._isVertical ? (cellHeight * Math.max(this._repeatY2, this._repeatY) - listHeight - this._spaceY) : (cellWidth * Math.max(this._repeatX2, this._repeatX) - listWidth - this._spaceX);\n\n            if (this._scrollBar) {\n                if (this._isVertical)\n                    this._scrollBar.height = listHeight;\n                else\n                    this._scrollBar.width = listWidth;\n            }\n            this.setContentSize(listWidth, listHeight);\n\n            //创建新单元格\n            let numX = this._isVertical ? this.repeatX : this.repeatY;\n            let numY = (this._isVertical ? this.repeatY : this.repeatX) + (this._scrollBar ? 1 : 0);\n            this._createItems(0, numX, numY);\n            this._createdLine = numY;\n\n            if (this._array) {\n                this.array = this._array;\n                this.runCallLater(this.renderItems);\n            }\n            else\n                this.changeSelectStatus();\n        }\n    }\n\n    private _getOneCell(): UIComponent {\n        if (this._cells.length === 0) {\n            let item = this.createItem();\n            this._offset.setTo(item._x, item._y);\n            if (this.cacheContent) return item;\n            this._cells.push(item);\n        }\n        return this._cells[0];\n    }\n\n    private _createItems(startY: number, numX: number, numY: number): void {\n        let box = this._content;\n        let cell = this._getOneCell();\n        let cellWidth = cell.width + this._spaceX;\n        let cellHeight = cell.height + this._spaceY;\n        let arr: Array<UIComponent>;\n\n        if (this.cacheContent) {\n            let cacheBox = new Box();\n            cacheBox.hideFlags = HideFlags.HideAndDontSave;\n            cacheBox.cacheAs = \"normal\";\n            cacheBox.pos((this._isVertical ? 0 : startY) * cellWidth, (this._isVertical ? startY : 0) * cellHeight);\n            this._content.addChild(cacheBox);\n            box = cacheBox;\n        } else {\n            arr = [];\n            for (let i = this._cells.length - 1; i > -1; i--) {\n                let item = this._cells[i];\n                item.removeSelf();\n                arr.push(item);\n            }\n            this._cells.length = 0;\n        }\n\n        for (let k = startY; k < numY; k++) {\n            for (let l = 0; l < numX; l++) {\n                if (arr && arr.length) {\n                    cell = arr.pop();\n                } else {\n                    cell = this.createItem();\n                    cell.hideFlags = HideFlags.HideAndDontSave;\n                }\n                cell.x = (this._isVertical ? l : k) * cellWidth - box._x;\n                cell.y = (this._isVertical ? k : l) * cellHeight - box._y;\n                cell.name = \"item\" + (k * numX + l);\n                box.addChild(cell);\n                this.addCell(cell);\n            }\n        }\n    }\n\n    protected createItem(): UIComponent {\n        let arr: any[] = [];\n        let box: UIComponent;\n        if (typeof (this._itemRender) == \"function\") {//TODO:\n            box = new this._itemRender();\n            box._skinBaseUrl = this._skinBaseUrl;\n        } else {\n            if (this._itemRender._$type || this._itemRender._$prefab)\n                box = <UIComponent>HierarchyParser.parse(this._itemRender, { skinBaseUrl: this._skinBaseUrl })[0];\n            else\n                box = LegacyUIParser.createComp(this._itemRender, null, null, arr);\n            if (!box) {\n                console.warn(\"cannot create item\");\n                box = new Box();\n            }\n        }\n        box.hideFlags = HideFlags.HideAndDontSave;\n\n        if (arr.length == 0 && (<any>box)[\"_watchMap\"]) {\n            let watchMap = (<any>box)[\"_watchMap\"];\n            for (let name in watchMap) {\n                let a: any[] = watchMap[name];\n                for (let i = 0; i < a.length; i++) {\n                    let watcher = a[i];\n                    arr.push(watcher.comp, watcher.prop, watcher.value)\n                }\n            }\n        }\n        if (arr.length) (<any>box)[\"_$bindData\"] = arr;\n\n        return box;\n    }\n\n    /**\n     * @private\n     * 添加单元格。\n     * @param cell 需要添加的单元格对象。\n     */\n    protected addCell(cell: UIComponent): void {\n        cell.on(Event.CLICK, this, this.onCellMouse);\n        cell.on(Event.RIGHT_CLICK, this, this.onCellMouse);\n        cell.on(Event.MOUSE_OVER, this, this.onCellMouse);\n        cell.on(Event.MOUSE_OUT, this, this.onCellMouse);\n        cell.on(Event.MOUSE_DOWN, this, this.onCellMouse);\n        cell.on(Event.MOUSE_UP, this, this.onCellMouse);\n        this._cells.push(cell);\n    }\n\n    onAfterDeserialize() {\n        super.onAfterDeserialize();\n        this.initItems();\n    }\n\n    /**@internal */\n    _afterInited(): void {\n        this.initItems();\n    }\n\n    /**\n     * 初始化单元格信息。\n     */\n    initItems(): void {\n        if (!this._itemRender && this.getChildByName(\"item0\") != null) {\n            this.repeatX = 1;\n            let count: number;\n            count = 0;\n            for (let i = 0; i < 10000; i++) {\n                let cell = <UIComponent>this.getChildByName(\"item\" + i);\n                if (cell) {\n                    this.addCell(cell);\n                    count++;\n                    continue;\n                }\n                break;\n            }\n            this.repeatY = count;\n        }\n    }\n\n    /**\n     * 设置可视区域大小。\n     * <p>以（0，0，width参数，height参数）组成的矩形区域为可视区域。</p>\n     * @param width 可视区域宽度。\n     * @param height 可视区域高度。\n     */\n    setContentSize(width: number, height: number): void {\n        this._content.width = width;\n        this._content.height = height;\n        if (this._scrollBar) {\n            let r = this._content.scrollRect;\n            if (!r)\n                r = Rectangle.create();\n            r.setTo(-this._offset.x, -this._offset.y, width, height);\n            this._content.scrollRect = r;\n        }\n        this.event(Event.RESIZE);\n    }\n\n    /**\n     * @private\n     * 单元格的鼠标事件侦听处理函数。\n     */\n    protected onCellMouse(e: Event): void {\n        if (e.type === Event.MOUSE_DOWN) this._isMoved = false;\n        let cell = (<UIComponent>e.currentTarget);\n        let index = this._startIndex + this._cells.indexOf(cell);\n        if (index < 0) return;\n        if (e.type === Event.CLICK || e.type === Event.RIGHT_CLICK) {\n            if (this.selectEnable && !this._isMoved) this.selectedIndex = index;\n            else this.changeCellState(cell, true, 0);\n        } else if ((e.type === Event.MOUSE_OVER || e.type === Event.MOUSE_OUT) && this._selectedIndex !== index) {\n            this.changeCellState(cell, e.type === Event.MOUSE_OVER, 0);\n        }\n        this.mouseHandler && this.mouseHandler.runWith([e, index]);\n    }\n\n    /**\n     * @private\n     * 改变单元格的可视状态。\n     * @param cell 单元格对象。\n     * @param visable 是否显示。\n     * @param index 单元格的属性 <code>index</code> 值。\n     */\n    protected changeCellState(cell: UIComponent, visible: boolean, index: number): void {\n        let selectBox = (<Clip>cell.getChildByName(\"selectBox\"));\n        if (selectBox) {\n            this.selectEnable = true;\n            selectBox.visible = visible;\n            selectBox.index = index;\n        }\n    }\n\n    /** \n     * @inheritDoc \n     * @override\n    */\n    protected _sizeChanged(): void {\n        super._sizeChanged();\n        this.setContentSize(this.width, this.height);\n        if (this._scrollBar) this.callLater(this.onScrollBarChange);\n    }\n\n    /**\n     * @private\n     * 滚动条的 <code>Event.CHANGE</code> 事件侦听处理函数。\n     */\n    protected onScrollBarChange(e: Event | null = null): void {\n        this.runCallLater(this.changeCells);\n        let scrollValue = this._scrollBar!.value;\n        let lineX = (this._isVertical ? this.repeatX : this.repeatY);\n        let lineY = (this._isVertical ? this.repeatY : this.repeatX);\n        let scrollLine = Math.floor(scrollValue / this._cellSize);\n\n        if (!this.cacheContent) {\n            let index = scrollLine * lineX;\n            let num = 0;\n            let down = true;\n            let toIndex = 0;\n            if (index > this._startIndex) {\n                num = index - this._startIndex;\n                //let down = true;\n                toIndex = this._startIndex + lineX * (lineY + 1);\n                this._isMoved = true;\n            } else if (index < this._startIndex) {\n                num = this._startIndex - index;\n                down = false;\n                toIndex = this._startIndex - 1;\n                this._isMoved = true;\n            }\n\n            let cell: UIComponent;\n            let cellIndex: number;\n            for (let i = 0; i < num; i++) {\n                if (down) {\n                    cell = this._cells.shift();\n                    this._cells[this._cells.length] = cell;\n                    cellIndex = toIndex + i;\n                } else {\n                    cell = this._cells.pop();\n                    this._cells.unshift(cell);\n                    cellIndex = toIndex - i;\n                }\n                let pos = Math.floor(cellIndex / lineX) * this._cellSize;\n                this._isVertical ? cell.y = pos : cell.x = pos;\n                this.renderItem(cell, cellIndex);\n            }\n            this._startIndex = index;\n            this.changeSelectStatus();\n        } else {\n            let num = (lineY + 1);\n            if (this._createdLine - scrollLine < num) {\n                this._createItems(this._createdLine, lineX, this._createdLine + num);\n                this.renderItems(this._createdLine * lineX, 0);\n                this._createdLine += num;\n            }\n        }\n\n        let r = this._content._style.scrollRect;\n        if (this._isVertical) {\n            r.y = scrollValue - this._offset.y;\n            r.x = -this._offset.x;\n        } else {\n            r.y = -this._offset.y;\n            r.x = scrollValue - this._offset.x;\n        }\n        this._content.scrollRect = r;\n    }\n\n    private posCell(cell: UIComponent, cellIndex: number): void {\n        if (!this._scrollBar) return;\n        let lineX = (this._isVertical ? this.repeatX : this.repeatY);\n        //let lineY = (this._isVertical ? this.repeatY : this.repeatX);\n        let pos = Math.floor(cellIndex / lineX) * this._cellSize;\n        this._isVertical ? cell._y = pos : cell.x = pos;\n    }\n\n    /**\n     * 表示当前选择的项索引。selectedIndex值更改会引起list重新渲染\n     */\n    get selectedIndex(): number {\n        return this._selectedIndex;\n    }\n\n    set selectedIndex(value: number) {\n        if (this._selectedIndex != value) {\n            this._selectedIndex = value;\n            this.changeSelectStatus();\n            this.event(Event.CHANGE);\n            this.selectHandler && this.selectHandler.runWith(value);\n            //选择发生变化，自动渲染一次\n            this.startIndex = this._startIndex;\n        }\n    }\n\n    /**\n     * @private\n     * 改变单元格的选择状态。\n     */\n    protected changeSelectStatus(): void {\n        for (let i: number = 0, n: number = this._cells.length; i < n; i++) {\n            this.changeCellState(this._cells[i], this._selectedIndex === this._startIndex + i, 1);\n        }\n    }\n\n    /**\n     * 当前选中的单元格数据源。\n     */\n    get selectedItem(): any {\n        if (!this._array) return null;\n        return this._selectedIndex != -1 ? this._array[this._selectedIndex] : null;\n    }\n\n    set selectedItem(value: any) {\n        this._array && (this.selectedIndex = this._array.indexOf(value));\n    }\n\n    /**\n     * 获取或设置当前选择的单元格对象。\n     */\n    get selection(): UIComponent {\n        return this.getCell(this._selectedIndex);\n    }\n\n    set selection(value: UIComponent) {\n        this.selectedIndex = this._startIndex + this._cells.indexOf(value);\n    }\n\n    /**\n     * 当前显示的单元格列表的开始索引。\n     */\n    get startIndex(): number {\n        return this._startIndex;\n    }\n\n    set startIndex(value: number) {\n        this._startIndex = value > 0 ? value : 0;\n        this.callLater(this.renderItems);\n    }\n\n    /**\n     * @private\n     * 渲染单元格列表。\n     */\n    protected renderItems(from: number = 0, to: number = 0): void {\n        for (let i = from, n = to || this._cells.length; i < n; i++) {\n            this.renderItem(this._cells[i], this._startIndex + i);\n        }\n        this.changeSelectStatus();\n    }\n\n    /**\n     * 渲染一个单元格。\n     * @param cell 需要渲染的单元格对象。\n     * @param index 单元格索引。\n     */\n    protected renderItem(cell: UIComponent, index: number): void {\n        if (!this._array || index >= 0 && index < this._array.length) {\n            cell.visible = true;\n\n            if (this._array) {\n                if ((cell as any)[\"_$bindData\"]) {\n                    cell[\"_dataSource\"] = this._array[index];\n                    this._bindData(cell, this._array[index]);\n                } else\n                    cell.dataSource = this._array[index];\n            }\n\n            if (!this.cacheContent) {\n                //TODO:\n                this.posCell(cell, index);\n            }\n            if (this.hasListener(Event.RENDER)) this.event(Event.RENDER, [cell, index]);\n            if (this.renderHandler) this.renderHandler.runWith([cell, index]);\n        } else {\n            cell.visible = false;\n            cell.dataSource = null;\n        }\n    }\n\n    private _bindData(cell: any, data: any): void {\n        let arr: any[] = cell._$bindData;\n        for (let i = 0, n = arr.length; i < n; i++) {\n            let ele: any = arr[i++];\n            let prop: string = arr[i++];\n            let value: string = arr[i];\n            let fun = UIUtils.getBindFun(value);\n            ele[prop] = fun.call(this, data);\n        }\n    }\n\n    /**\n     * 列表数据源。\n     */\n    get array(): any[] {\n        return this._array as any[];\n    }\n\n    private _preLen = 0;\n\n    set array(value: any[]) {\n        this.runCallLater(this.changeCells);\n        this._array = value || [];\n        this._preLen = this._array.length;\n        let length = this._array.length;\n        this.totalPage = Math.ceil(length / (this.repeatX * this.repeatY));\n        //重设selectedIndex\n        this._selectedIndex = this._selectedIndex < length ? this._selectedIndex : length - 1;\n        //重设startIndex\n        this.startIndex = this._startIndex;\n        //重设滚动条\n        if (this._scrollBar) {\n            //根据开关决定滚动条是否停止，默认在重设的时候会停止滚动\n            (!this.disableStopScroll && this._scrollBar.stopScroll());\n            let numX = this._isVertical ? this.repeatX : this.repeatY;\n            let numY = this._isVertical ? this.repeatY : this.repeatX;\n            let lineCount = Math.ceil(length / numX);\n            let total = this._cellOffset > 0 ? this.totalPage + 1 : this.totalPage;\n            if (total > 1 && lineCount >= numY) {\n                this._scrollBar.scrollSize = this._cellSize;\n                this._scrollBar.thumbPercent = numY / lineCount;\n                this._scrollBar.setScroll(0, (lineCount - numY) * this._cellSize + this._cellOffset, this._scrollBar.value);\n            } else {\n                this._scrollBar.setScroll(0, 0, 0);\n            }\n        }\n    }\n\n    /**\n     * 更新数据源，不刷新list，只增加滚动长度\n     * @param\tarray 数据源\n     */\n    updateArray(array: any[]): void {\n        this._array = array;\n        if (this._array) {\n            let freshStart = this._preLen - this._startIndex;\n            if (freshStart >= 0)\n                this.renderItems(freshStart);\n            this._preLen = this._array.length;\n        }\n        if (this._scrollBar) {\n            let length = array.length;\n            let numX = this._isVertical ? this.repeatX : this.repeatY;\n            let numY = this._isVertical ? this.repeatY : this.repeatX;\n            let lineCount = Math.ceil(length / numX);\n            if (lineCount >= numY) {\n                this._scrollBar.thumbPercent = numY / lineCount;\n                this._scrollBar.slider[\"_max\"] = (lineCount - numY) * this._cellSize + this._cellOffset;\n            }\n\n        }\n    }\n\n    /**\n     * 列表的当前页码。\n     */\n    get page(): number {\n        return this._page;\n    }\n\n    set page(value: number) {\n        this._page = value\n        if (this._array) {\n            this._page = value > 0 ? value : 0;\n            this._page = this._page < this.totalPage ? this._page : this.totalPage - 1;\n            this.startIndex = this._page * this.repeatX * this.repeatY;\n        }\n    }\n\n    /**\n     * 列表的数据总个数。\n     */\n    get length(): number {\n        return this._array ? this._array.length : 0;\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n    */\n    set_dataSource(value: any) {\n        this._dataSource = value;\n        if (typeof (value) == 'number' || typeof (value) == 'string')\n            this.selectedIndex = parseInt(value as string);\n        else if (value instanceof Array)\n            this.array = (<any[]>value)\n        else\n            super.set_dataSource(value);\n    }\n\n\n    /**\n     * 单元格集合。\n     */\n    get cells(): UIComponent[] {\n        this.runCallLater(this.changeCells);\n        return this._cells;\n    }\n\n    /**是否开启橡皮筋效果*/\n    get elasticEnabled(): boolean {\n        return this._elasticEnabled;\n    }\n\n    set elasticEnabled(value: boolean) {\n        this._elasticEnabled = value;\n        if (this._scrollBar) {\n            this._scrollBar.elasticDistance = value ? 200 : 0;\n        }\n    }\n\n    /**\n     * 刷新列表数据源。\n     */\n    refresh(): void {\n        this.array = this._array as any[];\n        //startIndex = _startIndex;\n    }\n\n    /**\n     * 获取单元格数据源。\n     * @param index 单元格索引。\n     */\n    getItem(index: number): any {\n        if (!this._array)\n            return null;\n        if (index > -1 && index < this._array.length) {\n            return this._array[index];\n        }\n        return null;\n    }\n\n    /**\n     * 修改单元格数据源。\n     * @param index 单元格索引。\n     * @param source 单元格数据源。\n     */\n    changeItem(index: number, source: any): void {\n        if (index > -1 && this._array && index < this._array.length) {\n            this._array[index] = source;\n            //如果是可视范围，则重新渲染\n            if (index >= this._startIndex && index < this._startIndex + this._cells.length) {\n                this.renderItem(this.getCell(index)!, index);\n            }\n        }\n    }\n\n    /**\n     * 设置单元格数据源。\n     * @param index 单元格索引。\n     * @param source 单元格数据源。\n     */\n    setItem(index: number, source: any): void {\n        this.changeItem(index, source);\n    }\n\n    /**\n     * 添加单元格数据源。\n     * @param source 数据源。\n     */\n    addItem(source: any): void {\n        if (!this.array) {\n            this.array = [source];\n        } else {\n            this._array!.push(source);\n        }\n        this.array = this._array as any[];\n    }\n\n    /**\n     * 添加单元格数据源到对应的数据索引处。\n     * @param souce 单元格数据源。\n     * @param index 索引。\n     */\n    addItemAt(souce: any, index: number): void {\n        this._array!.splice(index, 0, souce);\n        this.array = this._array!;\n    }\n\n    /**\n     * 通过数据源索引删除单元格数据源。\n     * @param index 需要删除的数据源索引值。\n     */\n    deleteItem(index: number): void {\n        if (this._array) {\n            this._array.splice(index, 1);\n            this.array = this._array;\n        }\n    }\n\n    /**\n     * 通过可视单元格索引，获取单元格。\n     * @param index 可视单元格索引。\n     * @return 单元格对象。\n     */\n    getCell(index: number): UIComponent | null {\n        this.runCallLater(this.changeCells);\n        if (index > -1 && this._cells) {\n            return this._cells[(index - this._startIndex) % this._cells.length];\n        }\n        return null;\n    }\n\n    /**\n     * <p>滚动列表，以设定的数据索引对应的单元格为当前可视列表的第一项。</p>\n     * @param index 单元格在数据列表中的索引。\n     */\n    scrollTo(index: number): void {\n        if (this._scrollBar) {\n            let numX = this._isVertical ? this.repeatX : this.repeatY;\n            this._scrollBar.value = Math.floor(index / numX) * this._cellSize;\n        } else {\n            this.startIndex = index;\n        }\n    }\n\n    /**\n     * <p>缓动滚动列表，以设定的数据索引对应的单元格为当前可视列表的第一项。</p>\n     * @param index 单元格在数据列表中的索引。\n     * @param time\t缓动时间。\n     * @param complete\t缓动结束回掉\n     */\n    tweenTo(index: number, time: number = 200, complete: Handler | null = null): void {\n        if (this._scrollBar) {\n            this._scrollBar.stopScroll();\n            let numX = this._isVertical ? this.repeatX : this.repeatY;\n            Tween.to(this._scrollBar, { value: Math.floor(index / numX) * this._cellSize }, time, null, complete, 0, true);\n        } else {\n            this.startIndex = index;\n            if (complete) complete.run();\n        }\n    }\n\n    /**@private */\n    protected _setCellChanged(): void {\n        if (!this._cellChanged) {\n            this._cellChanged = true;\n            this.callLater(this.changeCells);\n        }\n    }\n    /**@override */\n    protected commitMeasure(): void {\n        this.runCallLater(this.changeCells);\n    }\n}","import { UIComponent } from \"./UIComponent\";\nimport { Button } from \"./Button\";\nimport { List } from \"./List\";\nimport { ScrollType, Styles } from \"./Styles\";\nimport { Label } from \"./Label\";\nimport { UIUtils } from \"./UIUtils\";\nimport { VScrollBar } from \"./VScrollBar\";\nimport { Graphics } from \"../display/Graphics\"\nimport { Event } from \"../events/Event\"\nimport { Point } from \"../maths/Point\"\nimport { Handler } from \"../utils/Handler\"\nimport { ILaya } from \"../../ILaya\";\nimport { HideFlags } from \"../Const\";\n\n/**\n * 当用户更改 <code>ComboBox</code> 组件中的选定内容时调度。\n * @eventType laya.events.Event\n * selectedIndex属性变化时调度。\n */\n/*[Event(name = \"change\", type = \"laya.events.Event\")]*/\n\n/**\n * <code>ComboBox</code> 组件包含一个下拉列表，用户可以从该列表中选择单个值。\n *\n * @example <caption>以下示例代码，创建了一个 <code>ComboBox</code> 实例。</caption>\n * package\n *\t{\n *\t\timport laya.ui.ComboBox;\n *\t\timport laya.utils.Handler;\n *\t\tpublic class ComboBox_Example\n *\t\t{\n *\t\t\tpublic function ComboBox_Example()\n *\t\t\t{\n *\t\t\t\tLaya.init(640, 800);//设置游戏画布宽高。\n *\t\t\t\tLaya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\n *\t\t\t\tLaya.loader.load(\"resource/ui/button.png\", Handler.create(this,onLoadComplete));//加载资源。\n *\t\t\t}\n *\t\t\tprivate function onLoadComplete():void\n *\t\t\t{\n *\t\t\t\ttrace(\"资源加载完成！\");\n *\t\t\t\tvar comboBox:ComboBox = new ComboBox(\"resource/ui/button.png\", \"item0,item1,item2,item3,item4,item5\");//创建一个 ComboBox 类的实例对象 comboBox ,传入它的皮肤和标签集。\n *\t\t\t\tcomboBox.x = 100;//设置 comboBox 对象的属性 x 的值，用于控制 comboBox 对象的显示位置。\n *\t\t\t\tcomboBox.y = 100;//设置 comboBox 对象的属性 x 的值，用于控制 comboBox 对象的显示位置。\n *\t\t\t\tcomboBox.selectHandler = new Handler(this, onSelect);//设置 comboBox 选择项改变时执行的处理器。\n *\t\t\t\tLaya.stage.addChild(comboBox);//将此 comboBox 对象添加到显示列表。\n *\t\t\t}\n *\t\t\tprivate function onSelect(index:int):void\n *\t\t\t{\n *\t\t\t\ttrace(\"当前选中的项对象索引： \",index);\n *\t\t\t}\n *\t\t}\n *\t}\n * @example\n * Laya.init(640, 800);//设置游戏画布宽高。\n * Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\n * Laya.loader.load(\"resource/ui/button.png\",laya.utils.Handler.create(this,loadComplete));//加载资源\n * function loadComplete() {\n *     console.log(\"资源加载完成！\");\n *     var comboBox = new laya.ui.ComboBox(\"resource/ui/button.png\", \"item0,item1,item2,item3,item4,item5\");//创建一个 ComboBox 类的实例对象 comboBox ,传入它的皮肤和标签集。\n *     comboBox.x = 100;//设置 comboBox 对象的属性 x 的值，用于控制 comboBox 对象的显示位置。\n *     comboBox.y = 100;//设置 comboBox 对象的属性 x 的值，用于控制 comboBox 对象的显示位置。\n *     comboBox.selectHandler = new laya.utils.Handler(this, onSelect);//设置 comboBox 选择项改变时执行的处理器。\n *     Laya.stage.addChild(comboBox);//将此 comboBox 对象添加到显示列表。\n * }\n * function onSelect(index)\n * {\n *     console.log(\"当前选中的项对象索引： \",index);\n * }\n * @example\n * import ComboBox = laya.ui.ComboBox;\n * import Handler = laya.utils.Handler;\n * class ComboBox_Example {\n *     constructor() {\n *         Laya.init(640, 800);//设置游戏画布宽高。\n *         Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\n *         Laya.loader.load(\"resource/ui/button.png\", Handler.create(this, this.onLoadComplete));//加载资源。\n *     }\n *     private onLoadComplete(): void {\n *         console.log(\"资源加载完成！\");\n *         var comboBox: ComboBox = new ComboBox(\"resource/ui/button.png\", \"item0,item1,item2,item3,item4,item5\");//创建一个 ComboBox 类的实例对象 comboBox ,传入它的皮肤和标签集。\n *         comboBox.x = 100;//设置 comboBox 对象的属性 x 的值，用于控制 comboBox 对象的显示位置。\n *         comboBox.y = 100;//设置 comboBox 对象的属性 x 的值，用于控制 comboBox 对象的显示位置。\n *         comboBox.selectHandler = new Handler(this, this.onSelect);//设置 comboBox 选择项改变时执行的处理器。\n *         Laya.stage.addChild(comboBox);//将此 comboBox 对象添加到显示列表。\n *     }\n *     private onSelect(index: number): void {\n *         console.log(\"当前选中的项对象索引： \", index);\n *     }\n * }\n *\n */\nexport class ComboBox extends UIComponent {\n    /**@private */\n    protected _visibleNum: number = 6;\n    /**\n     * @private\n     */\n    protected _button: Button;\n    /**\n     * @private\n     */\n    protected _list: List;\n    /**\n     * @private\n     */\n    protected _isOpen: boolean;\n    /**\n     * @private\n     */\n    protected _itemColors: string[];\n    /**\n     * @private\n     */\n    protected _itemPadding: number[];\n    /**\n     * @private\n     */\n    protected _itemSize: number = 12;\n    /**\n     * @private\n     */\n    protected _labels: string[] = [];\n    /**\n     * @private\n     * 下拉提示文本\n     */\n    protected _defaultLabel: string = '';\n    /**\n     * @private\n     */\n    protected _selectedIndex: number = -1;\n    /**\n     * @private\n     */\n    protected _selectHandler: Handler;\n    /**\n     * @private 下拉框列表单元的高度\n     */\n    protected _itemHeight: number;\n    /**\n     * @private\n     */\n    protected _listHeight: number;\n    /**\n     * @private\n     */\n    protected _listChanged: boolean;\n    /**\n     * @private\n     */\n    protected _itemChanged: boolean;\n    /**\n     * @private\n     */\n    protected _scrollBarSkin: string;\n    protected _scrollType: ScrollType = 0;\n    /**\n     * @private\n     */\n    protected _isCustomList: boolean;\n    /**\n     * 渲染项，用来显示下拉列表展示对象\n     */\n    itemRender: any = null;\n\n    /**\n     * 创建一个新的 <code>ComboBox</code> 组件实例。\n     * @param skin 皮肤资源地址。\n     * @param labels 下拉列表的标签集字符串。以逗号做分割，如\"item0,item1,item2,item3,item4,item5\"。\n     */\n    constructor(skin: string = null, labels: string = null) {\n        super();\n\n        this._itemColors = Styles.comboBoxItemColors;\n        this._itemPadding = [3, 3, 3, 3];\n\n        this.skin = skin;\n        this.labels = labels;\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n    */\n    destroy(destroyChild: boolean = true): void {\n        ILaya.stage.off(Event.MOUSE_DOWN, this, this.removeList);\n        ILaya.stage.off(Event.MOUSE_WHEEL, this, this._onStageMouseWheel);\n        super.destroy(destroyChild);\n        this._button && this._button.destroy(destroyChild);\n        this._list && this._list.destroy(destroyChild);\n        this._button = null;\n        this._list = null;\n        this._itemColors = null;\n        this._itemPadding = null;\n        this._itemHeight = null;\n        this._labels = null;\n        this._selectHandler = null;\n        this._defaultLabel = null;\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n    */\n    protected createChildren(): void {\n        this._button = new Button();\n        this._button.hideFlags = HideFlags.HideAndDontSave;\n        this._button.text.align = \"left\";\n        this._button.labelPadding = \"0,0,0,5\";\n        this._button.on(Event.MOUSE_DOWN, this, this.onButtonMouseDown);\n        this.addChild(this._button);\n    }\n\n    private _createList(): void {\n        this._list = new List();\n        this._list.hideFlags = HideFlags.HideAndDontSave;\n        this._list.scrollType = this._scrollType;\n        if (this._scrollBarSkin)\n            this._list.vScrollBarSkin = this._scrollBarSkin;\n        this._setListEvent(this._list);\n    }\n\n    private _setListEvent(list: List): void {\n        this._list.selectEnable = true;\n        this._list.on(Event.MOUSE_DOWN, this, this.onListDown);\n        this._list.mouseHandler = Handler.create(this, this.onlistItemMouse, null, false);\n        if (this._list.scrollBar) this._list.scrollBar.on(Event.MOUSE_DOWN, this, this.onScrollBarDown);\n    }\n\n    /**\n     * @private\n     */\n    private onListDown(e: Event): void {\n        e.stopPropagation();\n    }\n\n    private onScrollBarDown(e: Event): void {\n        e.stopPropagation();\n    }\n\n    private onButtonMouseDown(e: Event): void {\n        this.callLater(this.switchTo, [!this._isOpen]);\n    }\n\n    get skin(): string {\n        return this._button.skin;\n    }\n\n    set skin(value: string) {\n        if (this._button.skin != value) {\n            this._button.skin = value;\n            this._listChanged = true;\n        }\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n    */\n    protected measureWidth(): number {\n        return this._button.width;\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n    */\n    protected measureHeight(): number {\n        return this._button.height;\n    }\n\n    /**\n     * @private\n     */\n    protected changeList(): void {\n        this._listChanged = false;\n        var labelWidth: number = this.width - 2;\n        var labelColor: string = this._itemColors[2];\n        this._itemHeight = (this._itemHeight) ? this._itemHeight : this._itemSize + 6;\n        let _padding: string = (this.itemPadding) ? this.itemPadding : \"3,3,3,3\";\n        this._list.itemRender = this.itemRender || { type: \"Box\", child: [{ type: \"Label\", props: { name: \"label\", x: 1, padding: _padding, width: labelWidth, height: this._itemHeight, fontSize: this._itemSize, color: labelColor } }] };\n        this._list.repeatY = this._visibleNum;\n        this._list.refresh();\n    }\n\n    /**\n     * @private\n     * 下拉列表的鼠标事件响应函数。\n     */\n    protected onlistItemMouse(e: Event, index: number): void {\n        let type: string = e.type;\n        if (type === Event.MOUSE_OVER || type === Event.MOUSE_OUT) {\n            if (this._isCustomList) return;\n            let box = this._list.getCell(index);\n            if (!box) return;\n            let label: Label = (<Label>box.getChildByName(\"label\"));\n            if (label) {\n                if (type === Event.ROLL_OVER) {\n                    label.bgColor = this._itemColors[0];\n                    label.color = this._itemColors[1];\n                } else {\n                    label.bgColor = null;\n                    label.color = this._itemColors[2];\n                }\n            }\n        } else if (type === Event.CLICK) {\n            this.selectedIndex = index;\n            this.isOpen = false;\n        }\n    }\n\n    /**\n     * @private\n     */\n    private switchTo(value: boolean): void {\n        this.isOpen = value;\n    }\n\n    /**\n     * 更改下拉列表的打开状态。\n     */\n    protected changeOpen(): void {\n        this.isOpen = !this._isOpen;\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n     */\n    _setWidth(value: number) {\n        super._setWidth(value);\n        this._button.width = this._width;\n        this._itemChanged = true;\n        this._listChanged = true;\n    }\n\n    /**\n     * 下拉列表文本的边距Padding\n     * @readme <p><b>格式：</b>上边距,右边距,下边距,左边距</p>\n     */\n    get itemPadding(): string {\n        return this._itemPadding.join(\",\");\n    }\n\n    set itemPadding(value: string) {\n        this._itemPadding = UIUtils.fillArray(this._itemPadding, value, Number);\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n     */\n    _setHeight(value: number) {\n        super._setHeight(value);\n        this._button.height = this._height;\n    }\n\n    /**\n     * 标签集合字符串。\n     */\n    get labels(): string {\n        return this._labels.join(\",\");\n    }\n\n    set labels(value: string) {\n        if (this._labels.length > 0)\n            this.selectedIndex = -1;\n        if (value)\n            this._labels = value.split(\",\");\n        else\n            this._labels.length = 0;\n        this._itemChanged = true;\n    }\n\n    /**\n     * 更改下拉列表。\n     */\n    protected changeItem(): void {\n        this._itemChanged = false;\n        //显示边框\n        this._listHeight = this._labels.length > 0 ? Math.min(this._visibleNum, this._labels.length) * this._itemHeight : this._itemHeight;\n        if (!this._isCustomList) {\n            //填充背景\n            var g: Graphics = this._list.graphics;\n            g.clear();\n            g.drawRect(0, 0, this.width - 1, this._listHeight, this._itemColors[4], this._itemColors[3]);\n        }\n\n        //填充数据\n        let a: any[] = this._list.array || [];\n        a.length = 0;\n        for (let i = 0, n = this._labels.length; i < n; i++) {\n            a.push({ label: this._labels[i] });\n        }\n        this._list.size(this.width, this._listHeight);\n        this._list.array = a;\n\n        //if (_visibleNum > a.length) {\n        //_list.height = _listHeight;\n        //} else {\n        //_list.height = 0;\n        //}\n    }\n\n    /**\n     * 表示选择的下拉列表项的索引。\n     */\n    get selectedIndex(): number {\n        return this._selectedIndex;\n    }\n\n    set selectedIndex(value: number) {\n        if (this._selectedIndex != value) {\n            this._selectedIndex = value;\n\n            if (this._labels.length > 0)\n                this.changeSelected();\n            else\n                this.callLater(this.changeSelected);\n\n            this.event(Event.CHANGE, Event.EMPTY);\n            this._selectHandler && this._selectHandler.runWith(this._selectedIndex);\n        }\n    }\n\n    private changeSelected(): void {\n        this._button.label = this.selectedLabel;\n    }\n\n    /**\n    * 默认的下拉提示文本。\n    */\n    get defaultLabel(): string {\n        return this._defaultLabel;\n    }\n\n    set defaultLabel(value: string) {\n        this._defaultLabel = value;\n        this._selectedIndex < 0 && (this._button.label = value);\n    }\n\n    /**\n     * 改变下拉列表的选择项时执行的处理器(默认返回参数index:int)。\n     */\n    get selectHandler(): Handler {\n        return this._selectHandler;\n    }\n\n    set selectHandler(value: Handler) {\n        this._selectHandler = value;\n    }\n\n    /**\n     * 表示选择的下拉列表项的的标签。\n     */\n    get selectedLabel(): string {\n        return this._selectedIndex > -1 && this._selectedIndex < this._labels.length ? this._labels[this._selectedIndex] : this.defaultLabel;\n    }\n\n    set selectedLabel(value: string) {\n        this.selectedIndex = this._labels.indexOf(value);\n    }\n\n    /**\n     * 获取或设置没有滚动条的下拉列表中可显示的最大行数。\n     */\n    get visibleNum(): number {\n        return this._visibleNum;\n    }\n\n    set visibleNum(value: number) {\n        this._visibleNum = value;\n        this._listChanged = true;\n    }\n\n\n    /**\n     * 下拉列表项的高度\n     */\n    get itemHeight(): number {\n        return this._itemHeight;\n    }\n    set itemHeight(value: number) {\n        this._itemHeight = value;\n        this._listChanged = true;\n    }\n\n    /**\n     * 下拉列表项颜色。\n     * <p><b>格式：</b>\"悬停或被选中时背景颜色,悬停或被选中时标签颜色,标签颜色,边框颜色,背景颜色\"</p>\n     */\n    get itemColors(): string {\n        return this._itemColors.join(\",\");\n    }\n\n    set itemColors(value: string) {\n        this._itemColors = UIUtils.fillArray(this._itemColors, value, String);\n        this._listChanged = true;\n    }\n\n    /**\n     * 下拉列表项标签的字体大小。\n     */\n    get itemSize(): number {\n        return this._itemSize;\n    }\n\n    set itemSize(value: number) {\n        this._itemSize = value;\n        this._listChanged = true;\n    }\n\n    /**\n     * 表示下拉列表的打开状态。\n     */\n    get isOpen(): boolean {\n        return this._isOpen;\n    }\n\n    set isOpen(value: boolean) {\n        //var Laya = ILaya.Laya;\n        if (this._isOpen != value) {\n            this._isOpen = value;\n            this._button.selected = this._isOpen;\n            if (this._isOpen) {\n                this._list || this._createList();\n                this._listChanged && !this._isCustomList && this.changeList();\n                this._itemChanged && this.changeItem();\n\n                var p: Point = this.localToGlobal(Point.TEMP.setTo(0, 0));\n                var py: number = p.y + this._button.height;\n                py = py + this._listHeight <= ILaya.stage.height ? py : p.y - this._listHeight < 0 ? py : p.y - this._listHeight;\n\n                this._list.pos(p.x, py);\n                this._list.zOrder = 1001;\n\n                ILaya.stage.addChild(this._list);\n                //Laya.stage.once(Event.MOUSE_DOWN, this, removeList);\n                //Laya.stage.on(Event.MOUSE_WHEEL, this, _onStageMouseWheel);\n                //parent.addChild(_list);\n                ILaya.stage.once(Event.MOUSE_DOWN, this, this.removeList);\n                ILaya.stage.on(Event.MOUSE_WHEEL, this, this._onStageMouseWheel);\n                this._list.selectedIndex = this._selectedIndex;\n            } else {\n                this._list && this._list.removeSelf();\n            }\n        }\n    }\n\n    private _onStageMouseWheel(e: Event): void {\n        if (!this._list || this._list.contains(e.target)) return;\n        this.removeList(null);\n    }\n\n    /**\n     * 关闭下拉列表。\n     */\n    protected removeList(e: Event): void {\n        ILaya.stage.off(Event.MOUSE_DOWN, this, this.removeList);\n        ILaya.stage.off(Event.MOUSE_WHEEL, this, this._onStageMouseWheel);\n        this.isOpen = false;\n    }\n\n    /**\n     * 滚动类型\n     */\n    get scrollType() {\n        return this._scrollType;\n    }\n\n    set scrollType(value: ScrollType) {\n        this._scrollType = value;\n    }\n\n    /**\n     * 滚动条皮肤。\n     */\n    get scrollBarSkin(): string {\n        return this._scrollBarSkin;\n    }\n\n    set scrollBarSkin(value: string) {\n        this._scrollBarSkin = value;\n    }\n\n    /**\n     * <p>当前实例的位图 <code>AutoImage</code> 实例的有效缩放网格数据。</p>\n     * <p>数据格式：\"上边距,右边距,下边距,左边距,是否重复填充(值为0：不重复填充，1：重复填充)\"，以逗号分隔。\n     * <ul><li>例如：\"4,4,4,4,1\"</li></ul></p>\n     */\n    get sizeGrid(): string {\n        return this._button.sizeGrid;\n    }\n\n    set sizeGrid(value: string) {\n        this._button.sizeGrid = value;\n    }\n\n    /**\n     * 获取对 <code>ComboBox</code> 组件所包含的 <code>VScrollBar</code> 滚动条组件的引用。\n     */\n    get scrollBar(): VScrollBar {\n        return (<VScrollBar>this.list.scrollBar);\n    }\n\n    /**\n     * 获取对 <code>ComboBox</code> 组件所包含的 <code>Button</code> 组件的引用。\n     */\n    get button(): Button {\n        return this._button;\n    }\n\n    /**\n     * 获取对 <code>ComboBox</code> 组件所包含的 <code>List</code> 列表组件的引用。\n     */\n    get list(): List {\n        this._list || this._createList();\n        return this._list;\n    }\n\n    set list(value: List) {\n        if (value) {\n            value.removeSelf();\n            this._isCustomList = true;\n            this._list = value;\n            this._setListEvent(value);\n            this._itemHeight = value.getCell(0).height + value.spaceY;\n        }\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n    */\n    set_dataSource(value: any): void {\n        this._dataSource = value;\n        if (typeof (value) == 'number' || typeof (value) == 'string')\n            this.selectedIndex = parseInt(value as string);\n        else if (value instanceof Array)\n            this.labels = ((<any[]>value)).join(\",\");\n        else\n            super.set_dataSource(value);\n    }\n\n    /**\n     * 获取或设置对 <code>ComboBox</code> 组件所包含的 <code>Button</code> 组件的文本标签颜色。\n     * <p><b>格式：</b>upColor,overColor,downColor</p>\n     */\n    get labelColors(): string {\n        return this._button.labelColors;\n    }\n\n    set labelColors(value: string) {\n        if (this._button.labelColors != value) {\n            this._button.labelColors = value;\n        }\n    }\n\n    /**\n     * 获取或设置对 <code>ComboBox</code> 组件所包含的 <code>Button</code> 组件的文本边距。\n     * <p><b>格式：</b>上边距,右边距,下边距,左边距</p>\n     */\n    get labelPadding(): string {\n        return this._button.text.padding.join(\",\");\n    }\n\n    set labelPadding(value: string) {\n        this._button.text.padding = UIUtils.fillArray(Styles.labelPadding, value, Number);\n    }\n\n    /**\n     * 获取或设置对 <code>ComboBox</code> 组件所包含的 <code>Button</code> 组件的标签字体大小。\n     */\n    get labelSize(): number {\n        return this._button.text.fontSize;\n    }\n\n    set labelSize(value: number) {\n        this._button.text.fontSize = value\n    }\n\n    /**\n     * 表示按钮文本标签是否为粗体字。\n     * @see laya.display.Text#bold\n     */\n    get labelBold(): boolean {\n        return this._button.text.bold;\n    }\n\n    set labelBold(value: boolean) {\n        this._button.text.bold = value\n    }\n\n    /**\n     * 表示按钮文本标签的字体名称，以字符串形式表示。\n     * @see laya.display.Text#font\n     */\n    get labelFont(): string {\n        return this._button.text.font;\n    }\n\n    set labelFont(value: string) {\n        this._button.text.font = value\n    }\n\n    /**\n     * 表示按钮的状态值。\n     * @see laya.ui.Button#stateNum\n     */\n    get stateNum(): number {\n        return this._button.stateNum;\n    }\n\n    set stateNum(value: number) {\n        this._button.stateNum = value\n    }\n}","import { Scene } from \"../display/Scene\"\nimport { UIComponent } from \"./UIComponent\"\nimport { ILaya } from \"../../ILaya\";\n\n/**\n * <code>View</code> 是一个视图类\n * 在2.0里，View继承自Scene类，但这是不合理的，Scene是一个2D+3D的大概念。所以在3.0里请忽略这个继承。\n */\nexport class View extends Scene {\n    /**@private 兼容老版本*/\n    static uiMap: any = {};\n    /**@internal */\n    _watchMap: any = {};\n    /**@private 控件的数据源。 */\n    protected _dataSource: any;\n\n    constructor() {\n        super(false);   // 先不要createChildren 因为 this._widget还没有赋值\n\n        //3.0里View并不是Scene\n        this._scene = null;\n\n        this.createChildren();\n    }\n\n    /**\n     * @private 兼容老版本\n     * 注册UI配置信息，比如注册一个路径为\"test/TestPage\"的页面，UI内容是IDE生成的json\n     * @param\turl\t\tUI的路径\n     * @param\tjson\tUI内容\n     */\n    static regUI(url: string, json: any): void {\n        ILaya.loader.cacheRes(url, json);\n    }\n\n\n    /**@private */\n    changeData(key: string): void {\n        let arr: any[] = this._watchMap[key];\n        if (!arr) return;\n        for (let i = 0, n = arr.length; i < n; i++) {\n            let watcher: any = arr[i];\n            watcher.exe(this);\n        }\n    }\n\n    set_dataSource(value: any) {\n        this._dataSource = value;\n        for (let name in value) {\n            let comp = this.getChildByName(name);\n            if (comp instanceof UIComponent)\n                comp.dataSource = value[name];\n            else if (name in this && !((this as any)[name] instanceof Function))\n                (this as any)[name] = value[name];\n        }\n    }\n}","import { UIConfig } from \"./../../UIConfig\";\nimport { NodeFlags } from \"../Const\"\nimport { Sprite } from \"../display/Sprite\"\nimport { Event } from \"../events/Event\"\nimport { Box } from \"./Box\"\nimport { Dialog } from \"./Dialog\"\nimport { UIComponent } from \"./UIComponent\"\nimport { Ease } from \"../utils/Ease\"\nimport { Handler } from \"../utils/Handler\"\nimport { Tween } from \"../utils/Tween\"\nimport { ILaya } from \"../../ILaya\";\n\n/**打开任意窗口后调度。\n * @eventType Event.OPEN\n */\n/*[Event(name = \"open\", type = \"laya.events.Event\")]*/\n/**关闭任意窗口后调度。\n * @eventType Event.CLOSE\n */\n/*[Event(name = \"close\", type = \"laya.events.Event\")]*/\n\n/**\n * <code>DialogManager</code> 对话框管理容器，所有的对话框都在该容器内，并且受管理器管理。\n * 任意对话框打开和关闭，都会出发管理类的open和close事件\n * 可以通过UIConfig设置弹出框背景透明度，模式窗口点击边缘是否关闭，点击窗口是否切换层次等\n * 通过设置对话框的zOrder属性，可以更改弹出的层次\n */\nexport class DialogManager extends Sprite {\n    /**遮罩层*/\n    maskLayer: Sprite = new Sprite();\n    /**锁屏层*/\n    lockLayer: Sprite;\n\n    /**@private 全局默认弹出对话框效果，可以设置一个效果代替默认的弹出效果，如果不想有任何效果，可以赋值为null*/\n    popupEffect = (dialog: Dialog) => {\n        dialog.scale(1, 1);\n        dialog._effectTween = Tween.from(dialog, { x: ILaya.stage.width / 2, y: ILaya.stage.height / 2, scaleX: 0, scaleY: 0 }, 300, Ease.backOut, Handler.create(this, this.doOpen, [dialog]), 0, false, false);\n    }\n\n    /**@private 全局默认关闭对话框效果，可以设置一个效果代替默认的关闭效果，如果不想有任何效果，可以赋值为null*/\n    closeEffect = (dialog: Dialog) => {\n        dialog._effectTween = Tween.to(dialog, { x: ILaya.stage.width / 2, y: ILaya.stage.height / 2, scaleX: 0, scaleY: 0 }, 300, Ease.strongOut, Handler.create(this, this.doClose, [dialog]), 0, false, false);\n    }\n\n    /**全局默认关闭对话框效果，可以设置一个效果代替默认的关闭效果，如果不想有任何效果，可以赋值为null*/\n    popupEffectHandler: Handler = new Handler(this, this.popupEffect);\n    /**全局默认弹出对话框效果，可以设置一个效果代替默认的弹出效果，如果不想有任何效果，可以赋值为null*/\n    closeEffectHandler: Handler = new Handler(this, this.closeEffect);\n\n    /**\n     * 创建一个新的 <code>DialogManager</code> 类实例。\n     */\n    constructor() {\n        super();\n        this.mouseEnabled = this.maskLayer.mouseEnabled = true;\n        this.zOrder = 1000;\n        ILaya.stage.addChild(this);\n        ILaya.stage.on(Event.RESIZE, this, this._onResize);\n        if (UIConfig.closeDialogOnSide) this.maskLayer.on(\"click\", this, this._closeOnSide);\n        this._onResize(null);\n    }\n\n    private _closeOnSide(): void {\n        var dialog: Dialog = (<Dialog>this.getChildAt(this.numChildren - 1));\n        if (dialog instanceof Dialog) dialog.close(\"side\");\n    }\n\n    /**设置锁定界面，如果为空则什么都不显示*/\n    setLockView(value: UIComponent): void {\n        if (!this.lockLayer) {\n            this.lockLayer = new Box();\n            this.lockLayer.mouseEnabled = true;\n            this.lockLayer.size(ILaya.stage.width, ILaya.stage.height);\n        }\n        this.lockLayer.removeChildren();\n        if (value) {\n            value.centerX = value.centerY = 0;\n            this.lockLayer.addChild(value);\n        }\n    }\n\n    /**@private */\n    private _onResize(e: Event = null): void {\n        var width: number = this.maskLayer.width = ILaya.stage.width;\n        var height: number = this.maskLayer.height = ILaya.stage.height;\n        if (this.lockLayer) this.lockLayer.size(width, height);\n\n        this.maskLayer.graphics.clear(true);\n        this.maskLayer.graphics.drawRect(0, 0, width, height, UIConfig.popupBgColor);\n        this.maskLayer.alpha = UIConfig.popupBgAlpha;\n\n        for (var i: number = this.numChildren - 1; i > -1; i--) {\n            var item: Dialog = (<Dialog>this.getChildAt(i));\n            if (item.isPopupCenter) this._centerDialog(item);\n        }\n    }\n\n    private _centerDialog(dialog: Dialog): void {\n        dialog.x = Math.round(((ILaya.stage.width - dialog.width) >> 1) + dialog.pivotX);\n        dialog.y = Math.round(((ILaya.stage.height - dialog.height) >> 1) + dialog.pivotY);\n    }\n\n    /**\n     * 显示对话框\n     * @param dialog 需要显示的对象框 <code>Dialog</code> 实例。\n     * @param closeOther 是否关闭其它对话框，若值为ture，则关闭其它的对话框。\n     * @param showEffect 是否显示弹出效果\n     */\n    open(dialog: Dialog, closeOther: boolean = false, showEffect: boolean = false): void {\n        if (closeOther) this._closeAll();\n        this._clearDialogEffect(dialog);\n        if (dialog.isPopupCenter) this._centerDialog(dialog);\n        this.addChild(dialog);\n        if (dialog.isModal || this._getBit(NodeFlags.HAS_ZORDER)) ILaya.timer.callLater(this, this._checkMask);\n        if (showEffect && dialog.popupEffect != null) dialog.popupEffect.runWith(dialog);\n        else this.doOpen(dialog);\n        this.event(Event.OPEN);\n    }\n\n    /**@private */\n    private _clearDialogEffect(dialog: Dialog): void {\n        if (dialog._effectTween) {\n            Tween.clear(dialog._effectTween);\n            dialog._effectTween = null;\n        }\n    }\n\n    /**\n     * 执行打开对话框。\n     * @param dialog 需要关闭的对象框 <code>Dialog</code> 实例。\n     */\n    doOpen(dialog: Dialog): void {\n        dialog.onOpened(dialog._param);\n    }\n\n    /**\n     * 锁定所有层，显示加载条信息，防止双击\n     */\n    lock(value: boolean): void {\n        if (this.lockLayer) {\n            if (value) this.addChild(this.lockLayer);\n            else this.lockLayer.removeSelf();\n        }\n    }\n\n    /**\n     * 关闭对话框。\n     * @param dialog 需要关闭的对象框 <code>Dialog</code> 实例。\n     */\n    close(dialog: Dialog): void {\n        this._clearDialogEffect(dialog);\n        if (dialog.isShowEffect && dialog.closeEffect != null) dialog.closeEffect.runWith([dialog]);\n        else this.doClose(dialog);\n        this.event(Event.CLOSE);\n    }\n\n    /**\n     * 执行关闭对话框。\n     * @param dialog 需要关闭的对象框 <code>Dialog</code> 实例。\n     */\n    doClose(dialog: Dialog): void {\n        dialog.removeSelf();\n        dialog.isModal && this._checkMask();\n        dialog.closeHandler && dialog.closeHandler.runWith(dialog.closeType);\n        dialog.onClosed(dialog.closeType);\n        if (dialog.autoDestroyAtClosed) dialog.destroy();\n    }\n\n    /**\n     * 关闭所有的对话框。\n     */\n    closeAll(): void {\n        this._closeAll();\n        this.event(Event.CLOSE);\n    }\n\n    /**@private */\n    private _closeAll(): void {\n        for (var i: number = this.numChildren - 1; i > -1; i--) {\n            var item: Dialog = (<Dialog>this.getChildAt(i));\n            if (item && item.close != null) {\n                this.doClose(item);\n            }\n        }\n    }\n\n    /**\n     * 根据组获取所有对话框\n     * @param\tgroup 组名称\n     * @return\t对话框数组\n     */\n    getDialogsByGroup(group: string): any[] {\n        var arr: any[] = [];\n        for (var i: number = this.numChildren - 1; i > -1; i--) {\n            var item: Dialog = (<Dialog>this.getChildAt(i));\n            if (item && item.group === group) {\n                arr.push(item);\n            }\n        }\n        return arr;\n    }\n\n    /**\n     * 根据组关闭所有弹出框\n     * @param\tgroup 需要关闭的组名称\n     * @return\t需要关闭的对话框数组\n     */\n    closeByGroup(group: string): any[] {\n        var arr: any[] = [];\n        for (var i: number = this.numChildren - 1; i > -1; i--) {\n            var item: Dialog = (<Dialog>this.getChildAt(i));\n            if (item && item.group === group) {\n                item.close();\n                arr.push(item);\n            }\n        }\n        return arr;\n    }\n\n    /**@internal 发生层次改变后，重新检查遮罩层是否正确*/\n    _checkMask(): void {\n        if (this._destroyed) return;\n        this.maskLayer.removeSelf();\n        for (var i: number = this.numChildren - 1; i > -1; i--) {\n            var dialog: Dialog = (<Dialog>this.getChildAt(i));\n            if (dialog && dialog.isModal) {\n                //trace(numChildren,i);\n                this.addChildAt(this.maskLayer, i);\n                return;\n            }\n        }\n    }\n}","import { View } from \"./View\";\nimport { DialogManager } from \"./DialogManager\";\nimport { UIUtils } from \"./UIUtils\";\nimport { Button } from \"./Button\";\nimport { UIComponent } from \"./UIComponent\";\nimport { Sprite } from \"../display/Sprite\"\nimport { Event } from \"../events/Event\"\nimport { Point } from \"../maths/Point\"\nimport { Rectangle } from \"../maths/Rectangle\"\nimport { Handler } from \"../utils/Handler\"\nimport { Tween } from \"../utils/Tween\"\n\n/**\n * <code>Dialog</code> 组件是一个弹出对话框，实现对话框弹出，拖动，模式窗口功能。\n * 可以通过UIConfig设置弹出框背景透明度，模式窗口点击边缘是否关闭等\n * 通过设置zOrder属性，可以更改弹出的层次\n * 通过设置popupEffect和closeEffect可以设置弹出效果和关闭效果，如果不想有任何弹出关闭效果，可以设置前述属性为空\n *\n * @example <caption>以下示例代码，创建了一个 <code>Dialog</code> 实例。</caption>\n * package\n *\t{\n *\t\timport laya.ui.Dialog;\n *\t\timport laya.utils.Handler;\n *\t\tpublic class Dialog_Example\n *\t\t{\n *\t\t\tprivate var dialog:Dialog_Instance;\n *\t\t\tpublic function Dialog_Example()\n *\t\t\t{\n *\t\t\t\tLaya.init(640, 800);//设置游戏画布宽高、渲染模式。\n *\t\t\t\tLaya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\n *\t\t\t\tLaya.loader.load(\"resource/ui/btn_close.png\", Handler.create(this, onLoadComplete));//加载资源。\n *\t\t\t}\n *\t\t\tprivate function onLoadComplete():void\n *\t\t\t{\n *\t\t\t\tdialog = new Dialog_Instance();//创建一个 Dialog_Instance 类的实例对象 dialog。\n *\t\t\t\tdialog.dragArea = \"0,0,150,50\";//设置 dialog 的拖拽区域。\n *\t\t\t\tdialog.show();//显示 dialog。\n *\t\t\t\tdialog.closeHandler = new Handler(this, onClose);//设置 dialog 的关闭函数处理器。\n *\t\t\t}\n *\t\t\tprivate function onClose(name:String):void\n *\t\t\t{\n *\t\t\t\tif (name == Dialog.CLOSE)\n *\t\t\t\t{\n *\t\t\t\t\ttrace(\"通过点击 name 为\" + name +\"的组件，关闭了dialog。\");\n *\t\t\t\t}\n *\t\t\t}\n *\t\t}\n *\t}\n *\timport laya.ui.Button;\n *\timport laya.ui.Dialog;\n *\timport laya.ui.Image;\n *\tclass Dialog_Instance extends Dialog\n *\t{\n *\t\tfunction Dialog_Instance():void\n *\t\t{\n *\t\t\tvar bg:Image = new Image(\"resource/ui/bg.png\");\n *\t\t\tbg.sizeGrid = \"40,10,5,10\";\n *\t\t\tbg.width = 150;\n *\t\t\tbg.height = 250;\n *\t\t\taddChild(bg);\n *\t\t\tvar image:Image = new Image(\"resource/ui/image.png\");\n *\t\t\taddChild(image);\n *\t\t\tvar button:Button = new Button(\"resource/ui/btn_close.png\");\n *\t\t\tbutton.name = Dialog.CLOSE;//设置button的name属性值。\n *\t\t\tbutton.x = 0;\n *\t\t\tbutton.y = 0;\n *\t\t\taddChild(button);\n *\t\t}\n *\t}\n * @example\n * Laya.init(640, 800);//设置游戏画布宽高、渲染模式\n * Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色\n * var dialog;\n * Laya.loader.load(\"resource/ui/btn_close.png\", laya.utils.Handler.create(this, loadComplete));//加载资源\n * (function (_super) {//新建一个类Dialog_Instance继承自laya.ui.Dialog。\n *     function Dialog_Instance() {\n *         Dialog_Instance.__super.call(this);//初始化父类\n *         var bg = new laya.ui.Image(\"resource/ui/bg.png\");//新建一个 Image 类的实例 bg 。\n *         bg.sizeGrid = \"10,40,10,5\";//设置 bg 的网格信息。\n *         bg.width = 150;//设置 bg 的宽度。\n *         bg.height = 250;//设置 bg 的高度。\n *         this.addChild(bg);//将 bg 添加到显示列表。\n *         var image = new laya.ui.Image(\"resource/ui/image.png\");//新建一个 Image 类的实例 image 。\n *         this.addChild(image);//将 image 添加到显示列表。\n *         var button = new laya.ui.Button(\"resource/ui/btn_close.png\");//新建一个 Button 类的实例 bg 。\n *         button.name = laya.ui.Dialog.CLOSE;//设置 button 的 name 属性值。\n *         button.x = 0;//设置 button 对象的属性 x 的值，用于控制 button 对象的显示位置。\n *         button.y = 0;//设置 button 对象的属性 y 的值，用于控制 button 对象的显示位置。\n *         this.addChild(button);//将 button 添加到显示列表。\n *     };\n *     Laya.class(Dialog_Instance,\"mypackage.dialogExample.Dialog_Instance\",_super);//注册类Dialog_Instance。\n * })(laya.ui.Dialog);\n * function loadComplete() {\n *     console.log(\"资源加载完成！\");\n *     dialog = new mypackage.dialogExample.Dialog_Instance();//创建一个 Dialog_Instance 类的实例对象 dialog。\n *     dialog.dragArea = \"0,0,150,50\";//设置 dialog 的拖拽区域。\n *     dialog.show();//显示 dialog。\n *     dialog.closeHandler = new laya.utils.Handler(this, onClose);//设置 dialog 的关闭函数处理器。\n * }\n * function onClose(name) {\n *     if (name == laya.ui.Dialog.CLOSE) {\n *         console.log(\"通过点击 name 为\" + name + \"的组件，关闭了dialog。\");\n *     }\n * }\n * @example\n * import Dialog = laya.ui.Dialog;\n * import Handler = laya.utils.Handler;\n * class Dialog_Example {\n *     private dialog: Dialog_Instance;\n *     constructor() {\n *         Laya.init(640, 800);//设置游戏画布宽高。\n *         Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\n *         Laya.loader.load(\"resource/ui/btn_close.png\", Handler.create(this, this.onLoadComplete));//加载资源。\n *     }\n *     private onLoadComplete(): void {\n *         this.dialog = new Dialog_Instance();//创建一个 Dialog_Instance 类的实例对象 dialog。\n *         this.dialog.dragArea = \"0,0,150,50\";//设置 dialog 的拖拽区域。\n *         this.dialog.show();//显示 dialog。\n *         this.dialog.closeHandler = new Handler(this, this.onClose);//设置 dialog 的关闭函数处理器。\n *     }\n *     private onClose(name: string): void {\n *         if (name == Dialog.CLOSE) {\n *             console.log(\"通过点击 name 为\" + name + \"的组件，关闭了dialog。\");\n *         }\n *     }\n * }\n * import Button = laya.ui.Button;\n * class Dialog_Instance extends Dialog {\n *     Dialog_Instance(): void {\n *         var bg: laya.ui.Image = new laya.ui.Image(\"resource/ui/bg.png\");\n *         bg.sizeGrid = \"40,10,5,10\";\n *         bg.width = 150;\n *         bg.height = 250;\n *         this.addChild(bg);\n *         var image: laya.ui.Image = new laya.ui.Image(\"resource/ui/image.png\");\n *         this.addChild(image);\n *         var button: Button = new Button(\"resource/ui/btn_close.png\");\n *         button.name = Dialog.CLOSE;//设置button的name属性值。\n *         button.x = 0;\n *         button.y = 0;\n *         this.addChild(button);\n *     }\n * }\n */\nexport class Dialog extends View {\n    /**对话框内的某个按钮命名为close，点击此按钮则会关闭*/\n    static CLOSE: string = \"close\";\n    /**对话框内的某个按钮命名为cancel，点击此按钮则会关闭*/\n    static CANCEL: string = \"cancel\";\n    /**对话框内的某个按钮命名为sure，点击此按钮则会关闭*/\n    static SURE: string = \"sure\";\n    /**对话框内的某个按钮命名为no，点击此按钮则会关闭*/\n    static NO: string = \"no\";\n    /**对话框内的某个按钮命名为yes，点击此按钮则会关闭*/\n    static YES: string = \"yes\";\n    /**对话框内的某个按钮命名为ok，点击此按钮则会关闭*/\n    static OK: string = \"ok\";\n\n    /**@private 表示对话框管理器。*/\n    private static _manager: DialogManager;\n\n    /**对话框管理容器，所有的对话框都在该容器内，并且受管理器管理，可以自定义自己的管理器，来更改窗口管理的流程。\n     * 任意对话框打开和关闭，都会触发管理类的open和close事件*/\n    static get manager(): DialogManager {\n        return Dialog._manager = Dialog._manager || new DialogManager();\n    }\n\n    static set manager(value: DialogManager) {\n        Dialog._manager = value;\n    }\n\n    /**\n     * 对话框被关闭时会触发的回调函数处理器。\n     * <p>回调函数参数为用户点击的按钮名字name:String。</p>\n     */\n    closeHandler: Handler;\n    /**\n     * 弹出对话框效果，可以设置一个效果代替默认的弹出效果，如果不想有任何效果，可以赋值为null\n     * 全局默认弹出效果可以通过manager.popupEffect修改\n     */\n    popupEffect: Handler;\n    /**\n     * 关闭对话框效果，可以设置一个效果代替默认的关闭效果，如果不想有任何效果，可以赋值为null\n     * 全局默认关闭效果可以通过manager.closeEffect修改\n     */\n    closeEffect: Handler;\n    /**组名称*/\n    group: string;\n    /**是否是模式窗口*/\n    isModal: boolean;\n    /**是否显示弹出效果*/\n    isShowEffect: boolean = true;\n    /**指定对话框是否居中弹。<p>如果值为true，则居中弹出，否则，则根据对象坐标显示，默认为true。</p>*/\n    isPopupCenter: boolean = true;\n    /**关闭类型，点击name为\"close\"，\"cancel\"，\"sure\"，\"no\"，\"yes\"，\"no\"的按钮时，会自动记录点击按钮的名称*/\n    closeType: string;\n    /**@private */\n    private _dragArea: Rectangle;\n    /**@internal */\n    _param: any;\n    /**@internal */\n    _effectTween: Tween;\n\n    constructor() {\n        super();\n        this.popupEffect = Dialog.manager.popupEffectHandler;\n        this.closeEffect = Dialog.manager.closeEffectHandler;\n        this._dealDragArea();\n        this.on(Event.CLICK, this, this._onClick);\n    }\n\n    /**@private 提取拖拽区域*/\n    protected _dealDragArea(): void {\n        var dragTarget: Sprite = (<Sprite>this.getChildByName(\"drag\"));\n        if (dragTarget) {\n            this.dragArea = dragTarget._x + \",\" + dragTarget._y + \",\" + dragTarget.width + \",\" + dragTarget.height;\n            dragTarget.removeSelf();\n        }\n    }\n\n    /**\n     * 用来指定对话框的拖拽区域。默认值为\"0,0,0,0\"。\n     * <p><b>格式：</b>构成一个矩形所需的 x,y,width,heith 值，用逗号连接为字符串。\n     * 例如：\"0,0,100,200\"。</p>\n     * @see #includeExamplesSummary 请参考示例\n     */\n    get dragArea(): string {\n        if (this._dragArea) return this._dragArea.toString();\n        return null;\n    }\n\n    set dragArea(value: string) {\n        if (value) {\n            var a: any[] = UIUtils.fillArray([0, 0, 0, 0], value, Number);\n            this._dragArea = new Rectangle(a[0], a[1], a[2], a[3]);\n            this.on(Event.MOUSE_DOWN, this, this._onMouseDown);\n        } else {\n            this._dragArea = null;\n            this.off(Event.MOUSE_DOWN, this, this._onMouseDown);\n        }\n    }\n\n    /**@private */\n    private _onMouseDown(e: Event): void {\n        var point: Point = this.getMousePoint();\n        if (this._dragArea.contains(point.x, point.y)) this.startDrag();\n        else this.stopDrag();\n    }\n\n    /**@private 处理默认点击事件*/\n    protected _onClick(e: Event): void {\n        var btn: Button = (<Button>e.target);\n        if (btn) {\n            switch (btn.name) {\n                case Dialog.CLOSE:\n                case Dialog.CANCEL:\n                case Dialog.SURE:\n                case Dialog.NO:\n                case Dialog.OK:\n                case Dialog.YES:\n                    this.close(btn.name);\n                    return;\n            }\n        }\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n    */\n    open(closeOther: boolean = true, param: any = null): void {\n        this._dealDragArea();\n        this._param = param;\n        Dialog.manager.open(this, closeOther, this.isShowEffect);\n        Dialog.manager.lock(false);\n    }\n\n    /**\n     * 关闭对话框。\n     * @param type 关闭的原因，会传递给onClosed函数\n     * @override\n     */\n    close(type: string = null): void {\n        this.closeType = type;\n        Dialog.manager.close(this);\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n     */\n    destroy(destroyChild: boolean = true): void {\n        this.closeHandler = null;\n        this.popupEffect = null;\n        this.closeEffect = null;\n        this._dragArea = null;\n        super.destroy(destroyChild);\n        Dialog.manager._checkMask();\n    }\n\n    /**\n     * 显示对话框（以非模式窗口方式显示）。\n     * @param closeOther 是否关闭其它的对话框。若值为true则关闭其它对话框。\n     * @param showEffect 是否显示弹出效果\n     */\n    show(closeOther: boolean = false, showEffect: boolean = true): void {\n        this._open(false, closeOther, showEffect);\n    }\n\n    /**\n     * 显示对话框（以模式窗口方式显示）。\n     * @param closeOther 是否关闭其它的对话框。若值为true则关闭其它对话框。\n     * @param showEffect 是否显示弹出效果\n     */\n    popup(closeOther: boolean = false, showEffect: boolean = true): void {\n        this._open(true, closeOther, showEffect);\n    }\n\n    /**@private */\n    protected _open(modal: boolean, closeOther: boolean, showEffect: boolean): void {\n        this.isModal = modal;\n        this.isShowEffect = showEffect;\n        Dialog.manager.lock(true);\n        this.open(closeOther);\n    }\n\n    /**弹出框的显示状态；如果弹框处于显示中，则为true，否则为false;*/\n    get isPopup(): boolean {\n        return this.parent != null;\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n     */\n    set zOrder(value: number) {\n        super.zOrder = value;\n        Dialog.manager._checkMask();\n    }\n    /**\n     * @inheritDoc \n     * @override\n     */\n    get zOrder() {\n        return super.zOrder;\n    }\n\n    /**\n     * 设置锁定界面，在界面未准备好前显示锁定界面，准备完毕后则移除锁定层，如果为空则什么都不显示\n     * @param\tview 锁定界面内容\n     */\n    static setLockView(view: UIComponent): void {\n        Dialog.manager.setLockView(view);\n    }\n\n    /**\n     * 锁定所有层，显示加载条信息，防止下面内容被点击\n     */\n    static lock(value: boolean): void {\n        Dialog.manager.lock(value);\n    }\n\n    /**关闭所有对话框。*/\n    static closeAll(): void {\n        Dialog.manager.closeAll();\n    }\n\n    /**\n     * 根据组获取对话框集合\n     * @param\tgroup 组名称\n     * @return\t对话框数组\n     */\n    static getDialogsByGroup(group: string): any[] {\n        return Dialog.manager.getDialogsByGroup(group);\n    }\n\n    /**\n     * 根据组关闭所有弹出框\n     * @param\tgroup 需要关闭的组名称\n     */\n    static closeByGroup(group: string): any[] {\n        return Dialog.manager.closeByGroup(group);\n    }\n}","import { Event } from \"../events/Event\"\nimport { Texture } from \"../resource/Texture\"\nimport { Clip } from \"./Clip\"\n\n/**\n * 字体切片，简化版的位图字体，只需设置一个切片图片和文字内容即可使用，效果同位图字体\n * 使用方式：设置位图字体皮肤skin，设置皮肤对应的字体内容sheet（如果多行，可以使用空格换行），示例：\n * fontClip.skin = \"font1.png\";//设置皮肤\n * fontClip.sheet = \"abc123 456\";//设置皮肤对应的内容，空格换行。此皮肤为2行5列（显示时skin会被等分为2行5列），第一行对应的文字为\"abc123\"，第二行为\"456\"\n * fontClip.value = \"a1326\";//显示\"a1326\"文字\n */\nexport class FontClip extends Clip {\n    /**数值*/\n    protected _valueArr: string = '';\n    /**文字内容数组**/\n    protected _indexMap: Record<string, number> = null;\n    /**位图字体内容**/\n    protected _sheet: string = null;\n    /**@private */\n    protected _direction: string = \"horizontal\";\n    /**X方向间隙*/\n    protected _spaceX: number = 0;\n    /**Y方向间隙*/\n    protected _spaceY: number = 0;\n    /**@private 水平对齐方式*/\n    private _align: string = \"left\";\n    /**@private 显示文字宽*/\n    private _wordsW: number = 0;\n    /**@private 显示文字高*/\n    private _wordsH: number = 0;\n\n    /**\n     * @param skin 位图字体皮肤\n     * @param sheet 位图字体内容，空格代表换行\n     */\n    constructor(skin: string = null, sheet: string = null) {\n        super();\n        if (skin) this.skin = skin;\n        if (sheet) this.sheet = sheet;\n    }\n\n    /**\n     * 资源加载完毕\n     */\n    protected loadComplete(url: string, img: Texture): void {\n        super.loadComplete(url, img);\n        this.callLater(this.changeValue);\n    }\n\n\n    get index(): number {\n        return this._index;\n    }\n\n    set index(value: number) {\n        this._index = value;\n        ////屏蔽Clip类操作\n    }\n\n    /**\n     * 设置位图字体内容，空格代表换行。比如\"abc123 456\"，代表第一行对应的文字为\"abc123\"，第二行为\"456\"\n     */\n    get sheet(): string {\n        return this._sheet;\n    }\n\n    set sheet(value: string) {\n        value += \"\";\n        this._sheet = value;\n        //根据空格换行\n        var arr: any[] = value.split(\" \");\n        this._clipX = String(arr[0]).length;\n        this.clipY = arr.length;\n\n        this._indexMap = {};\n        for (var i: number = 0; i < this._clipY; i++) {\n            var line: any[] = arr[i].split(\"\");\n            for (var j: number = 0, n: number = line.length; j < n; j++) {\n                this._indexMap[line[j]] = i * this._clipX + j;\n            }\n        }\n    }\n\n    /**\n     * 设置位图字体的显示内容\n     */\n    get value(): string {\n        if (!this._valueArr) return \"\";\n        return this._valueArr;\n    }\n\n    set value(value: string) {\n        value += \"\";\n        this._valueArr = value;\n        this.callLater(this.changeValue);\n    }\n\n    /**\n     * 布局方向。\n     * <p>默认值为\"horizontal\"。</p>\n     * <p><b>取值：</b>\n     * <li>\"horizontal\"：表示水平布局。</li>\n     * <li>\"vertical\"：表示垂直布局。</li>\n     * </p>\n     */\n    get direction(): string {\n        return this._direction;\n    }\n\n    set direction(value: string) {\n        this._direction = value;\n        this.callLater(this.changeValue);\n    }\n\n    /**X方向文字间隙*/\n    get spaceX(): number {\n        return this._spaceX;\n    }\n\n    set spaceX(value: number) {\n        this._spaceX = value;\n        if (this._direction === \"horizontal\") this.callLater(this.changeValue);\n    }\n\n    /**Y方向文字间隙*/\n    get spaceY(): number {\n        return this._spaceY;\n    }\n\n    set spaceY(value: number) {\n        this._spaceY = value;\n        if (!(this._direction === \"horizontal\")) this.callLater(this.changeValue);\n    }\n\n\n    set align(v: string) {\n        this._align = v;\n        this.callLater(this.changeValue);\n    }\n\n    /**水平对齐方式*/\n    get align(): string {\n        return this._align;\n    }\n\n    /**渲染数值*/\n    protected changeValue(): void {\n        if (!this._sources) return;\n        if (!this._valueArr) return;\n        this.graphics.clear(true);\n        let texture: Texture;\n        texture = this._sources[0];\n        if (!texture) return;\n        var isHorizontal: boolean = (this._direction === \"horizontal\");\n        if (isHorizontal) {\n            this._wordsW = this._valueArr.length * (texture.sourceWidth + this.spaceX);\n            this._wordsH = texture.sourceHeight;\n        } else {\n            this._wordsW = texture.sourceWidth;\n            this._wordsH = (texture.sourceHeight + this.spaceY) * this._valueArr.length;\n        }\n        let dX: number = 0;\n        if (this._isWidthSet) {\n            switch (this._align) {\n                case \"center\":\n                    dX = 0.5 * (this._width - this._wordsW);\n                    break;\n                case \"right\":\n                    dX = this._width - this._wordsW;\n                    break;\n                default:\n                    dX = 0;\n            }\n        }\n\n        for (let i = 0, sz = this._valueArr.length; i < sz; i++) {\n            let index = this._indexMap[this._valueArr.charAt(i)];\n            texture = this._sources[index];\n            if (!texture)\n                continue;\n\n            if (isHorizontal)\n                this.graphics.drawImage(texture, dX + i * (texture.sourceWidth + this.spaceX), 0, texture.sourceWidth, texture.sourceHeight);\n            else\n                this.graphics.drawImage(texture, 0 + dX, i * (texture.sourceHeight + this.spaceY), texture.sourceWidth, texture.sourceHeight);\n        }\n\n        if (!this._isWidthSet) {\n            this._widget.resetLayoutX();\n            this.callLater(this._sizeChanged);\n        }\n        if (!this._isHeightSet) {\n            this._widget.resetLayoutY();\n            this.callLater(this._sizeChanged);\n        }\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n     */\n    _setWidth(value: number) {\n        super._setWidth(value);\n        this.callLater(this.changeValue);\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n     */\n    _setHeight(value: number) {\n        super._setHeight(value);\n        this.callLater(this.changeValue);\n    }\n\n    /**\n     * @override\n     */\n    protected measureWidth(): number {\n        return this._wordsW;\n    }\n    /**\n     * @override\n     */\n    protected measureHeight(): number {\n        return this._wordsH;\n    }\n    /**\n     * \n     * @param destroyChild \n     * @override\n     */\n    destroy(destroyChild: boolean = true): void {\n        this._valueArr = null;\n        this._indexMap = null;\n        this.graphics.clear(true);\n\n        super.destroy(destroyChild);\n    }\n}","import { Box } from \"./Box\";\nimport { Node } from \"../display/Node\"\nimport { Event } from \"../events/Event\"\n\n/**\n * <code>LayoutBox</code> 是一个布局容器类。\n */\nexport class LayoutBox extends Box {\n    /**@private */\n    protected _space: number = 0;\n    /**@private */\n    protected _align: string = \"none\";\n    /**@private */\n    protected _itemChanged: boolean = false;\n\n    /** \n     * @inheritDoc\t\n     * @override\n    */\n    addChild<T extends Node>(child: T): T {\n        child.on(Event.RESIZE, this, this.onResize);\n        this._setItemChanged();\n        return super.addChild(child);\n    }\n\n    private onResize(e: Event): void {\n        this._setItemChanged();\n    }\n\n    /** \n     * @inheritDoc\t\n     * @override\n    */\n    addChildAt(child: Node, index: number): Node {\n        child.on(Event.RESIZE, this, this.onResize);\n        this._setItemChanged();\n        return super.addChildAt(child, index);\n    }\n\n    /**\n     *  @inheritDoc\t\n     * @override\n    */\n    removeChildAt(index: number): Node {\n        this.getChildAt(index).off(Event.RESIZE, this, this.onResize);\n        this._setItemChanged();\n        return super.removeChildAt(index);\n    }\n\n    /** 刷新。*/\n    refresh(): void {\n        this._setItemChanged();\n    }\n\n    /**\n     * 改变子对象的布局。\n     */\n    protected changeItems(): void {\n        this._itemChanged = false;\n    }\n\n    /** 子对象的间隔。*/\n    get space(): number {\n        return this._space;\n    }\n\n    set space(value: number) {\n        this._space = value;\n        this._setItemChanged();\n    }\n\n    /** 子对象对齐方式。*/\n    get align(): string {\n        return this._align;\n    }\n\n    set align(value: string) {\n        this._align = value;\n        this._setItemChanged();\n    }\n\n    /**\n     * 排序项目列表。可通过重写改变默认排序规则。\n     * @param items  项目列表。\n     */\n    protected sortItem(items: any[]): void {\n        if (items) items.sort(function (a: any, b: any): number { return a.y - b.y; });\n    }\n\n    protected _setItemChanged(): void {\n        if (!this._itemChanged) {\n            this._itemChanged = true;\n            this.callLater(this.changeItems);\n        }\n    }\n}","import { LayoutBox } from \"./LayoutBox\";\nimport { UIComponent } from \"./UIComponent\";\n\n/**\n * <code>HBox</code> 是一个水平布局容器类。\n */\nexport class HBox extends LayoutBox {\n    /**\n     * 无对齐。\n     */\n    static NONE: string = \"none\";\n    /**\n     * 居顶部对齐。\n     */\n    static TOP: string = \"top\";\n    /**\n     * 居中对齐。\n     */\n    static MIDDLE: string = \"middle\";\n    /**\n     * 居底部对齐。\n     */\n    static BOTTOM: string = \"bottom\";\n\n    /** \n     * @inheritDoc\t\n     * @override\n     */\n    protected sortItem(items: any[]): void {\n        if (items) items.sort(function (a: any, b: any): number { return a.x - b.x; });\n    }\n    /**\n     * @inheritDoc\t\n     * @override\n     */\n    _setHeight(value: number) {\n        super._setHeight(value);\n        this.callLater(this.changeItems);\n    }\n\n    /** \n     * @inheritDoc\t\n     * @override\n     */\n    protected changeItems(): void {\n        this._itemChanged = false;\n        var items: any[] = [];\n        var maxHeight = 0;\n        for (let i = 0, n = this.numChildren; i < n; i++) {\n            let item = (<UIComponent>this.getChildAt(i));\n            if (item) {\n                item.x = 0;\n                items.push(item);\n                maxHeight = this._isHeightSet ? this._height : Math.max(maxHeight, item.height * item.scaleY);\n            }\n        }\n        this.sortItem(items);\n        let left = 0;\n        for (let i = 0, n = items.length; i < n; i++) {\n            let item = items[i];\n            item.x = left;\n            left += item.width * item.scaleX + this._space;\n            if (this._align == HBox.TOP) {\n                item.y = 0;\n            } else if (this._align == HBox.MIDDLE) {\n                item.y = (maxHeight - item.height * item.scaleY) * 0.5;\n            } else if (this._align == HBox.BOTTOM) {\n                item.y = maxHeight - item.height * item.scaleY;\n            }\n        }\n        this._sizeChanged();\n    }\n}","import { Slider } from \"./Slider\";\n\n/**\n * 使用 <code>HSlider</code> 控件，用户可以通过在滑块轨道的终点之间移动滑块来选择值。\n * <p> <code>HSlider</code> 控件采用水平方向。滑块轨道从左向右扩展，而标签位于轨道的顶部或底部。</p>\n *\n * @example <caption>以下示例代码，创建了一个 <code>HSlider</code> 实例。</caption>\n * package\n *\t{\n *\t\timport laya.ui.HSlider;\n *\t\timport laya.utils.Handler;\n *\t\tpublic class HSlider_Example\n *\t\t{\n *\t\t\tprivate var hSlider:HSlider;\n *\t\t\tpublic function HSlider_Example()\n *\t\t\t{\n *\t\t\t\tLaya.init(640, 800);//设置游戏画布宽高。\n *\t\t\t\tLaya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\n *\t\t\t\tLaya.loader.load([\"resource/ui/hslider.png\", \"resource/ui/hslider$bar.png\"], Handler.create(this, onLoadComplete));//加载资源。\n *\t\t\t}\n *\t\t\tprivate function onLoadComplete():void\n *\t\t\t{\n *\t\t\t\thSlider = new HSlider();//创建一个 HSlider 类的实例对象 hSlider 。\n *\t\t\t\thSlider.skin = \"resource/ui/hslider.png\";//设置 hSlider 的皮肤。\n *\t\t\t\thSlider.min = 0;//设置 hSlider 最低位置值。\n *\t\t\t\thSlider.max = 10;//设置 hSlider 最高位置值。\n *\t\t\t\thSlider.value = 2;//设置 hSlider 当前位置值。\n *\t\t\t\thSlider.tick = 1;//设置 hSlider 刻度值。\n *\t\t\t\thSlider.x = 100;//设置 hSlider 对象的属性 x 的值，用于控制 hSlider 对象的显示位置。\n *\t\t\t\thSlider.y = 100;//设置 hSlider 对象的属性 y 的值，用于控制 hSlider 对象的显示位置。\n *\t\t\t\thSlider.changeHandler = new Handler(this, onChange);//设置 hSlider 位置变化处理器。\n *\t\t\t\tLaya.stage.addChild(hSlider);//把 hSlider 添加到显示列表。\n *\t\t\t}\n *\t\t\tprivate function onChange(value:Number):void\n *\t\t\t{\n *\t\t\t\ttrace(\"滑块的位置： value=\" + value);\n *\t\t\t}\n *\t\t}\n *\t}\n * @example\n * Laya.init(640, 800, \"canvas\");//设置游戏画布宽高、渲染模式\n * Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色\n * var hSlider;\n * var res = [\"resource/ui/hslider.png\", \"resource/ui/hslider$bar.png\"];\n * Laya.loader.load(res, laya.utils.Handler.create(this, onLoadComplete));\n * function onLoadComplete() {\n *     console.log(\"资源加载完成！\");\n *     hSlider = new laya.ui.HSlider();//创建一个 HSlider 类的实例对象 hSlider 。\n *     hSlider.skin = \"resource/ui/hslider.png\";//设置 hSlider 的皮肤。\n *     hSlider.min = 0;//设置 hSlider 最低位置值。\n *     hSlider.max = 10;//设置 hSlider 最高位置值。\n *     hSlider.value = 2;//设置 hSlider 当前位置值。\n *     hSlider.tick = 1;//设置 hSlider 刻度值。\n *     hSlider.x = 100;//设置 hSlider 对象的属性 x 的值，用于控制 hSlider 对象的显示位置。\n *     hSlider.y = 100;//设置 hSlider 对象的属性 y 的值，用于控制 hSlider 对象的显示位置。\n *     hSlider.changeHandler = new laya.utils.Handler(this, onChange);//设置 hSlider 位置变化处理器。\n *     Laya.stage.addChild(hSlider);//把 hSlider 添加到显示列表。\n * }\n * function onChange(value)\n * {\n *     console.log(\"滑块的位置： value=\" + value);\n * }\n * @example\n * import Handler = laya.utils.Handler;\n * import HSlider = laya.ui.HSlider;\n * class HSlider_Example {\n *     private hSlider: HSlider;\n *     constructor() {\n *         Laya.init(640, 800);//设置游戏画布宽高。\n *         Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\n *         Laya.loader.load([\"resource/ui/hslider.png\", \"resource/ui/hslider$bar.png\"], Handler.create(this, this.onLoadComplete));//加载资源。\n *     }\n *     private onLoadComplete(): void {\n *         this.hSlider = new HSlider();//创建一个 HSlider 类的实例对象 hSlider 。\n *         this.hSlider.skin = \"resource/ui/hslider.png\";//设置 hSlider 的皮肤。\n *         this.hSlider.min = 0;//设置 hSlider 最低位置值。\n *         this.hSlider.max = 10;//设置 hSlider 最高位置值。\n *         this.hSlider.value = 2;//设置 hSlider 当前位置值。\n *         this.hSlider.tick = 1;//设置 hSlider 刻度值。\n *         this.hSlider.x = 100;//设置 hSlider 对象的属性 x 的值，用于控制 hSlider 对象的显示位置。\n *         this.hSlider.y = 100;//设置 hSlider 对象的属性 y 的值，用于控制 hSlider 对象的显示位置。\n *         this.hSlider.changeHandler = new Handler(this, this.onChange);//设置 hSlider 位置变化处理器。\n *         Laya.stage.addChild(this.hSlider);//把 hSlider 添加到显示列表。\n *     }\n *     private onChange(value: number): void {\n *         console.log(\"滑块的位置： value=\" + value);\n *     }\n * }\n *\n * @see laya.ui.Slider\n*/\nexport class HSlider extends Slider {\n\n    /**\n     * 创建一个 <code>HSlider</code> 类实例。\n     * @param skin 皮肤。\n     */\n    constructor(skin: string = null) {\n        super(skin);\n        this.isVertical = false;\n    }\n}","import { Box } from \"./Box\";\nimport { VScrollBar } from \"./VScrollBar\";\nimport { HScrollBar } from \"./HScrollBar\";\nimport { ScrollBar } from \"./ScrollBar\";\nimport { Node } from \"../display/Node\"\nimport { Sprite } from \"../display/Sprite\"\nimport { Event } from \"../events/Event\"\nimport { Rectangle } from \"../maths/Rectangle\"\nimport { HideFlags } from \"../Const\";\nimport { ScrollType } from \"./Styles\";\n\n/**\n * <code>Panel</code> 是一个面板容器类。\n */\nexport class Panel extends Box {\n    /**@private */\n    protected _content: Box;\n    /**@private */\n    protected _vScrollBar: VScrollBar;\n    /**@private */\n    protected _hScrollBar: HScrollBar;\n    /**@private */\n    protected _scrollChanged: boolean;\n    /**@private */\n    protected _usedCache: string = null;\n    /**@private */\n    protected _elasticEnabled: boolean = false;\n\n    protected _scrollType: ScrollType = 0;\n    protected _vScrollBarSkin: string;\n    protected _hScrollBarSkin: string;\n\n    /**\n     * 创建一个新的 <code>Panel</code> 类实例。\n     * <p>在 <code>Panel</code> 构造函数中设置属性width、height的值都为100。</p>\n     */\n    constructor() {\n        super();\n        this.width = this.height = 100;\n        //子对象缩放的情况下，优化会有问题，先屏蔽掉\n        //_content.optimizeScrollRect = true;\n    }\n\n    /**@inheritDoc @override*/\n    destroy(destroyChild: boolean = true): void {\n        super.destroy(destroyChild);\n        this._content && this._content.destroy(destroyChild);\n        this._vScrollBar && this._vScrollBar.destroy(destroyChild);\n        this._hScrollBar && this._hScrollBar.destroy(destroyChild);\n        this._vScrollBar = null;\n        this._hScrollBar = null;\n        this._content = null;\n    }\n\n    /**@inheritDoc @override*/\n    destroyChildren(): void {\n        this._content.destroyChildren();\n    }\n\n    /**@inheritDoc @override*/\n    protected createChildren(): void {\n        this._content = new Box();\n        this._content.hideFlags = HideFlags.HideAndDontSave;\n        super.addChild(this._content);\n    }\n\n    /**@inheritDoc @override*/\n    addChild<T extends Node>(child: T): T {\n        child.on(Event.RESIZE, this, this.onResize);\n        this._setScrollChanged();\n        return this._content.addChild(child);\n    }\n\n    /**\n     * @private\n     * 子对象的 <code>Event.RESIZE</code> 事件侦听处理函数。\n     */\n    private onResize(): void {\n        this._setScrollChanged();\n    }\n\n    /**@inheritDoc @override*/\n    addChildAt(child: Node, index: number): Node {\n        child.on(Event.RESIZE, this, this.onResize);\n        this._setScrollChanged();\n        return this._content.addChildAt(child, index);\n    }\n\n    /**@inheritDoc @override*/\n    removeChild(child: Node): Node {\n        child.off(Event.RESIZE, this, this.onResize);\n        this._setScrollChanged();\n        if (child._parent == this && this._children) {\n            let index = this._children.indexOf(child);\n            if (index != -1) {\n                this._children.splice(index, 1);\n                (<any>child)._setParent(null);\n            }\n            return child;\n        }\n        else\n            return this._content.removeChild(child);\n    }\n\n    /**@inheritDoc @override*/\n    removeChildAt(index: number): Node {\n        this.getChildAt(index).off(Event.RESIZE, this, this.onResize);\n        this._setScrollChanged();\n        return this._content.removeChildAt(index);\n    }\n\n    /**@inheritDoc @override*/\n    removeChildren(beginIndex: number = 0, endIndex: number = 0x7fffffff): Node {\n        this._content.removeChildren(beginIndex, endIndex);\n        this._setScrollChanged();\n        return this;\n    }\n\n    /**@inheritDoc @override*/\n    getChildAt(index: number): Node {\n        return this._content.getChildAt(index);\n    }\n\n    /**@inheritDoc @override*/\n    getChildByName(name: string): Node {\n        return this._content.getChildByName(name);\n    }\n\n    /**@inheritDoc @override*/\n    getChildIndex(child: Node): number {\n        return this._content.getChildIndex(child);\n    }\n\n    /**@inheritDoc @override*/\n    get numChildren(): number {\n        return this._content.numChildren;\n    }\n\n    /**@private */\n    private changeScroll(): void {\n        this._scrollChanged = false;\n        var contentW = this.contentWidth || 1;\n        var contentH = this.contentHeight || 1;\n\n        var vscroll = this._vScrollBar;\n        var hscroll = this._hScrollBar;\n\n        var vShow = vscroll && contentH > this._height;\n        var hShow = hscroll && contentW > this._width;\n        var showWidth = vShow ? this._width - vscroll.width : this._width;\n        var showHeight = hShow ? this._height - hscroll.height : this._height;\n\n        if (vscroll) {\n            vscroll.height = this._height - (hShow ? hscroll.height : 0);\n            vscroll.scrollSize = Math.max(this._height * 0.033, 1);\n            vscroll.thumbPercent = showHeight / contentH;\n            vscroll.setScroll(0, contentH - showHeight);\n        }\n        if (hscroll) {\n            hscroll.width = this._width - (vShow ? vscroll.width : 0);\n            hscroll.scrollSize = Math.max(this._width * 0.033, 1);\n            hscroll.thumbPercent = showWidth / contentW;\n            hscroll.setScroll(0, contentW - showWidth);\n        }\n    }\n\n    /**@inheritDoc @override*/\n    protected _sizeChanged(): void {\n        super._sizeChanged();\n        this.setContentSize(this._width, this._height);\n    }\n\n    /**\n     * @private\n     * 获取内容宽度（以像素为单位）。\n     */\n    get contentWidth(): number {\n        var max = 0;\n        for (var i = this._content.numChildren - 1; i > -1; i--) {\n            var comp = <Sprite>this._content.getChildAt(i);\n            max = Math.max(comp._x + comp.width * comp.scaleX - comp.pivotX, max);\n        }\n        return max;\n    }\n\n    /**\n     * @private\n     * 获取内容高度（以像素为单位）。\n     */\n    get contentHeight(): number {\n        let max = 0;\n        for (let i = this._content.numChildren - 1; i > -1; i--) {\n            let comp = <Sprite>this._content.getChildAt(i);\n            max = Math.max(comp._y + comp.height * comp.scaleY - comp.pivotY, max);\n        }\n        return max;\n    }\n\n    /**\n     * @private\n     * 设置内容的宽度、高度（以像素为单位）。\n     * @param width 宽度。\n     * @param height 高度。\n     */\n    private setContentSize(width: number, height: number): void {\n        let content = this._content;\n        content.width = width;\n        content.height = height;\n        content._style.scrollRect || (content.scrollRect = Rectangle.create());\n        content._style.scrollRect.setTo(0, 0, width, height);\n        content.scrollRect = content.scrollRect;\n    }\n\n    /**\n     * @inheritDoc\n     * @override\n     */\n    _setWidth(value: number) {\n        super._setWidth(value);\n        this._setScrollChanged();\n    }\n\n    /**@inheritDoc @override*/\n    _setHeight(value: number) {\n        super._setHeight(value);\n        this._setScrollChanged();\n    }\n\n\n    get scrollType() {\n        return this._scrollType;\n    }\n\n    set scrollType(value: ScrollType) {\n        this._scrollType = value;\n\n        if (this._scrollType == ScrollType.None) {\n            if (this._hScrollBar) {\n                this._hScrollBar.destroy();\n                this._hScrollBar = null;\n            }\n            if (this._vScrollBar) {\n                this._vScrollBar.destroy();\n                this._vScrollBar = null;\n            }\n        }\n        else if (this._scrollType == ScrollType.Horizontal) {\n            if (this._vScrollBar) {\n                this._vScrollBar.destroy();\n                this._vScrollBar = null;\n            }\n\n            if (this._hScrollBar)\n                this._hScrollBar.skin = this._hScrollBarSkin;\n            else\n                this.createHScrollBar();\n        }\n        else if (this._scrollType == ScrollType.Vertical) {\n            if (this._hScrollBar) {\n                this._hScrollBar.destroy();\n                this._hScrollBar = null;\n            }\n\n            if (this._vScrollBar)\n                this._vScrollBar.skin = this._vScrollBarSkin;\n            else\n                this.createVScrollBar();\n        }\n        else { //both\n            if (this._hScrollBar)\n                this._hScrollBar.skin = this._hScrollBarSkin;\n            else\n                this.createHScrollBar();\n            if (this._vScrollBar)\n                this._vScrollBar.skin = this._vScrollBarSkin;\n            else\n                this.createVScrollBar();\n        }\n    }\n\n    private createHScrollBar() {\n        let scrollBar = this._hScrollBar = new HScrollBar();\n        scrollBar.hideFlags = HideFlags.HideAndDontSave;\n        scrollBar.on(Event.CHANGE, this, this.onScrollBarChange, [scrollBar]);\n        scrollBar.target = this._content;\n        scrollBar.elasticDistance = this._elasticEnabled ? 200 : 0;\n        scrollBar.bottom = 0;\n        scrollBar._skinBaseUrl = this._skinBaseUrl;\n        scrollBar.skin = this._hScrollBarSkin;\n        scrollBar.on(Event.LOADED, this, this._setScrollChanged);\n        super.addChild(scrollBar);\n        this._setScrollChanged();\n    }\n\n    private createVScrollBar() {\n        let scrollBar = this._vScrollBar = new VScrollBar();\n        scrollBar.hideFlags = HideFlags.HideAndDontSave;\n        scrollBar.on(Event.CHANGE, this, this.onScrollBarChange, [scrollBar]);\n        scrollBar.target = this._content;\n        scrollBar.elasticDistance = this._elasticEnabled ? 200 : 0;\n        scrollBar.right = 0;\n        scrollBar._skinBaseUrl = this._skinBaseUrl;\n        scrollBar.skin = this._vScrollBarSkin;\n        scrollBar.on(Event.LOADED, this, this._setScrollChanged);\n        super.addChild(scrollBar);\n        this._setScrollChanged();\n    }\n\n    /**\n     * 垂直方向滚动条皮肤。\n     */\n    get vScrollBarSkin(): string {\n        return this._vScrollBarSkin;\n    }\n\n    set vScrollBarSkin(value: string) {\n        if (value == \"\") value = null;\n        if (this._vScrollBarSkin != value) {\n            this._vScrollBarSkin = value;\n            if (this._scrollType == 0)\n                this.scrollType = ScrollType.Vertical;\n            else if (this._scrollType == ScrollType.Horizontal)\n                this.scrollType = ScrollType.Both;\n            else\n                this.scrollType = this._scrollType;\n        }\n\n    }\n\n    /**\n     * 水平方向滚动条皮肤。\n     */\n    get hScrollBarSkin(): string {\n        return this._hScrollBarSkin;\n    }\n\n    set hScrollBarSkin(value: string) {\n        if (value == \"\") value = null;\n        if (this._hScrollBarSkin != value) {\n            this._hScrollBarSkin = value;\n            if (this._scrollType == 0)\n                this.scrollType = ScrollType.Horizontal;\n            else if (this._scrollType == ScrollType.Vertical)\n                this.scrollType = ScrollType.Both;\n            this.scrollType = this._scrollType;\n        }\n    }\n\n    /**\n     * 垂直方向滚动条对象。\n     */\n    get vScrollBar(): ScrollBar {\n        return this._vScrollBar;\n    }\n\n    /**\n     * 水平方向滚动条对象。\n     */\n    get hScrollBar(): ScrollBar {\n        return this._hScrollBar;\n    }\n\n    /**\n     * 获取内容容器对象。\n     */\n    get content(): Sprite {\n        return this._content;\n    }\n\n    /**\n     * @private\n     * 滚动条的<code><code>Event.MOUSE_DOWN</code>事件侦听处理函数。</code>事件侦听处理函数。\n     * @param scrollBar 滚动条对象。\n     * @param e Event 对象。\n     */\n    protected onScrollBarChange(scrollBar: ScrollBar): void {\n        var rect = this._content._style.scrollRect;\n        if (rect) {\n            var start = Math.round(scrollBar.value);\n            scrollBar.isVertical ? rect.y = start : rect.x = start;\n            this._content.scrollRect = rect;\n        }\n    }\n\n    /**\n     * <p>滚动内容容器至设定的垂直、水平方向滚动条位置。</p>\n     * @param x 水平方向滚动条属性value值。滚动条位置数字。\n     * @param y 垂直方向滚动条属性value值。滚动条位置数字。\n     */\n    scrollTo(x: number = 0, y: number = 0): void {\n        if (this.vScrollBar) this.vScrollBar.value = y;\n        if (this.hScrollBar) this.hScrollBar.value = x;\n    }\n\n    /**\n     * 刷新滚动内容。\n     */\n    refresh(): void {\n        this.changeScroll();\n    }\n\n    /**@inheritDoc @override*/\n    set cacheAs(value: string) {\n        super.cacheAs = value;\n        this._usedCache = null;\n        if (value !== \"none\") {\n            this._hScrollBar && this._hScrollBar.on(Event.START, this, this.onScrollStart);\n            this._vScrollBar && this._vScrollBar.on(Event.START, this, this.onScrollStart);\n        } else {\n            this._hScrollBar && this._hScrollBar.off(Event.START, this, this.onScrollStart);\n            this._vScrollBar && this._vScrollBar.off(Event.START, this, this.onScrollStart);\n        }\n    }\n    /**\n     * @inheritDoc\n     * @override\n     */\n    get cacheAs() {\n        return super.cacheAs;\n    }\n\n    /**是否开启橡皮筋效果*/\n    get elasticEnabled(): boolean {\n        return this._elasticEnabled;\n    }\n\n    set elasticEnabled(value: boolean) {\n        this._elasticEnabled = value;\n        if (this._vScrollBar) {\n            this._vScrollBar.elasticDistance = value ? 200 : 0;\n        }\n        if (this._hScrollBar) {\n            this._hScrollBar.elasticDistance = value ? 200 : 0;\n        }\n    }\n\n    private onScrollStart(): void {\n        this._usedCache || (this._usedCache = super.cacheAs);\n        super.cacheAs = \"none\";\n        this._hScrollBar && this._hScrollBar.once(Event.END, this, this.onScrollEnd);\n        this._vScrollBar && this._vScrollBar.once(Event.END, this, this.onScrollEnd);\n    }\n\n    private onScrollEnd(): void {\n        super.cacheAs = this._usedCache;\n    }\n\n    /**@private */\n    protected _setScrollChanged(): void {\n        if (!this._scrollChanged) {\n            this._scrollChanged = true;\n            this.callLater(this.changeScroll);\n        }\n    }\n}","import { Event } from \"../events/Event\"\nimport { UIComponent } from \"./UIComponent\"\nimport { Image } from \"./Image\"\nimport { Handler } from \"../utils/Handler\"\nimport { HideFlags } from \"../Const\"\nimport { URL } from \"../net/URL\"\nimport { Utils } from \"../utils/Utils\"\nimport { AssetDb } from \"../resource/AssetDb\"\n\n/**\n * 值发生改变后调度。\n * @eventType laya.events.Event\n */\n/*[Event(name = \"change\", type = \"laya.events.Event\")]*/\n\n/**\n * <code>ProgressBar</code> 组件显示内容的加载进度。\n * @example <caption>以下示例代码，创建了一个新的 <code>ProgressBar</code> 实例，设置了它的皮肤、位置、宽高、网格等信息，并添加到舞台上。</caption>\n * package\n *\t{\n *\t\timport laya.ui.ProgressBar;\n *\t\timport laya.utils.Handler;\n *\t\tpublic class ProgressBar_Example\n *\t\t{\n *\t\t\tprivate var progressBar:ProgressBar;\n *\t\t\tpublic function ProgressBar_Example()\n *\t\t\t{\n *\t\t\t\tLaya.init(640, 800);//设置游戏画布宽高。\n *\t\t\t\tLaya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\n *\t\t\t\tLaya.loader.load([\"resource/ui/progress.png\", \"resource/ui/progress$bar.png\"], Handler.create(this, onLoadComplete));//加载资源。\n *\t\t\t}\n *\t\t\tprivate function onLoadComplete():void\n *\t\t\t{\n *\t\t\t\tprogressBar = new ProgressBar(\"resource/ui/progress.png\");//创建一个 ProgressBar 类的实例对象 progressBar 。\n *\t\t\t\tprogressBar.x = 100;//设置 progressBar 对象的属性 x 的值，用于控制 progressBar 对象的显示位置。\n *\t\t\t\tprogressBar.y = 100;//设置 progressBar 对象的属性 y 的值，用于控制 progressBar 对象的显示位置。\n *\t\t\t\tprogressBar.value = 0.3;//设置 progressBar 的进度值。\n *\t\t\t\tprogressBar.width = 200;//设置 progressBar 的宽度。\n *\t\t\t\tprogressBar.height = 50;//设置 progressBar 的高度。\n *\t\t\t\tprogressBar.sizeGrid = \"5,10,5,10\";//设置 progressBar 的网格信息。\n *\t\t\t\tprogressBar.changeHandler = new Handler(this, onChange);//设置 progressBar 的value值改变时执行的处理器。\n *\t\t\t\tLaya.stage.addChild(progressBar);//将 progressBar 添加到显示列表。\n *\t\t\t\tLaya.timer.once(3000, this, changeValue);//设定 3000ms（毫秒）后，执行函数changeValue。\n *\t\t\t}\n *\t\t\tprivate function changeValue():void\n *\t\t\t{\n *\t\t\t\ttrace(\"改变进度条的进度值。\");\n *\t\t\t\tprogressBar.value = 0.6;\n *\t\t\t}\n *\t\t\tprivate function onChange(value:Number):void\n *\t\t\t{\n *\t\t\t\ttrace(\"进度发生改变： value=\" ,value);\n *\t\t\t}\n *\t\t}\n *\t}\n * @example\n * Laya.init(640, 800);//设置游戏画布宽高\n * Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色\n * var res = [\"resource/ui/progress.png\", \"resource/ui/progress$bar.png\"];\n * Laya.loader.load(res, laya.utils.Handler.create(this, onLoadComplete));//加载资源。\n * function onLoadComplete()\n * {\n *     progressBar = new laya.ui.ProgressBar(\"resource/ui/progress.png\");//创建一个 ProgressBar 类的实例对象 progressBar 。\n *     progressBar.x = 100;//设置 progressBar 对象的属性 x 的值，用于控制 progressBar 对象的显示位置。\n *     progressBar.y = 100;//设置 progressBar 对象的属性 y 的值，用于控制 progressBar 对象的显示位置。\n *     progressBar.value = 0.3;//设置 progressBar 的进度值。\n *     progressBar.width = 200;//设置 progressBar 的宽度。\n *     progressBar.height = 50;//设置 progressBar 的高度。\n *     progressBar.sizeGrid = \"10,5,10,5\";//设置 progressBar 的网格信息。\n *     progressBar.changeHandler = new laya.utils.Handler(this, onChange);//设置 progressBar 的value值改变时执行的处理器。\n *     Laya.stage.addChild(progressBar);//将 progressBar 添加到显示列表。\n *     Laya.timer.once(3000, this, changeValue);//设定 3000ms（毫秒）后，执行函数changeValue。\n * }\n * function changeValue()\n * {\n *     console.log(\"改变进度条的进度值。\");\n *     progressBar.value = 0.6;\n * }\n * function onChange(value)\n * {\n *     console.log(\"进度发生改变： value=\" ,value);\n * }\n * @example\n * import ProgressBar = laya.ui.ProgressBar;\n * import Handler = laya.utils.Handler;\n * class ProgressBar_Example {\n *     private progressBar: ProgressBar;\n *     public ProgressBar_Example() {\n *         Laya.init(640, 800);//设置游戏画布宽高。\n *         Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\n *         Laya.loader.load([\"resource/ui/progress.png\", \"resource/ui/progress$bar.png\"], Handler.create(this, this.onLoadComplete));//加载资源。\n *     }\n *     private onLoadComplete(): void {\n *         this.progressBar = new ProgressBar(\"resource/ui/progress.png\");//创建一个 ProgressBar 类的实例对象 progressBar 。\n *         this.progressBar.x = 100;//设置 progressBar 对象的属性 x 的值，用于控制 progressBar 对象的显示位置。\n *         this.progressBar.y = 100;//设置 progressBar 对象的属性 y 的值，用于控制 progressBar 对象的显示位置。\n *         this.progressBar.value = 0.3;//设置 progressBar 的进度值。\n *         this.progressBar.width = 200;//设置 progressBar 的宽度。\n *         this.progressBar.height = 50;//设置 progressBar 的高度。\n *         this.progressBar.sizeGrid = \"5,10,5,10\";//设置 progressBar 的网格信息。\n *         this.progressBar.changeHandler = new Handler(this, this.onChange);//设置 progressBar 的value值改变时执行的处理器。\n *         Laya.stage.addChild(this.progressBar);//将 progressBar 添加到显示列表。\n *         Laya.timer.once(3000, this, this.changeValue);//设定 3000ms（毫秒）后，执行函数changeValue。\n *     }\n *     private changeValue(): void {\n *         console.log(\"改变进度条的进度值。\");\n *         this.progressBar.value = 0.6;\n *     }\n *     private onChange(value: number): void {\n *         console.log(\"进度发生改变： value=\", value);\n *     }\n * }\n */\nexport class ProgressBar extends UIComponent {\n    /**\n     * 当 <code>ProgressBar</code> 实例的 <code>value</code> 属性发生变化时的函数处理器。\n     * <p>默认返回参数<code>value</code> 属性（进度值）。</p>\n     */\n    changeHandler: Handler;\n    /**@private */\n    protected _bg: Image;\n    /**@private */\n    protected _bar: Image;\n    /**@private */\n    protected _skin: string;\n    /**@private */\n    protected _value: number = 0.5;\n\n    /**\n     * 创建一个新的 <code>ProgressBar</code> 类实例。\n     * @param skin 皮肤地址。\n     */\n    constructor(skin: string = null) {\n        super();\n        this.skin = skin;\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n    */\n    destroy(destroyChild: boolean = true): void {\n        super.destroy(destroyChild);\n        this._bg && this._bg.destroy(destroyChild);\n        this._bar && this._bar.destroy(destroyChild);\n        this._bg = this._bar = null;\n        this.changeHandler = null;\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n    */\n    protected createChildren(): void {\n        this._bg = new Image();\n        this._bg.left = 0;\n        this._bg.right = 0;\n        this._bg.top = 0;\n        this._bg.bottom = 0;\n        this._bg.hideFlags = HideFlags.HideAndDontSave;\n        this.addChild(this._bg);\n\n        this._bar = new Image();\n        this._bar.hideFlags = HideFlags.HideAndDontSave;\n        this._bar.top = 0;\n        this._bar.bottom = 0;\n        this.addChild(this._bar);\n    }\n\n    /**\n     * @copy laya.ui.Image#skin\n     */\n    get skin(): string {\n        return this._skin;\n    }\n\n    set skin(value: string) {\n        if (this._skin == value)\n            return;\n\n        this._setSkin(value);\n    }\n\n    _setSkin(url: string): Promise<void> {\n        this._skin = url;\n\n        if (url) {\n            return AssetDb.inst.resolveURL(url).then(url => {\n                if (this._destroyed)\n                    return null;\n\n                if (this._skinBaseUrl)\n                    url = URL.formatURL(url, this._skinBaseUrl);\n\n                return Promise.all([\n                    this._bg._setSkin(url),\n                    this._bar._setSkin(Utils.replaceFileExtension(url, \"$bar.png\", true))\n                ]).then(() => this._skinLoaded());\n            });\n        }\n        else {\n            this._bg.skin = null;\n            this._bar.skin = null;\n            this._skinLoaded();\n            return Promise.resolve();\n        }\n    }\n\n    protected _skinLoaded(): void {\n        if (this._destroyed)\n            return;\n\n        this.callLater(this.changeValue);\n        this._sizeChanged();\n        this.event(Event.LOADED);\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n    */\n    protected measureWidth(): number {\n        return this._bg.width;\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n    */\n    protected measureHeight(): number {\n        return this._bg.height;\n    }\n\n    /**\n     * 当前的进度量。\n     * <p><b>取值：</b>介于0和1之间。</p>\n     */\n    get value(): number {\n        return this._value;\n    }\n\n    set value(num: number) {\n        if (this._value != num) {\n            num = num > 1 ? 1 : num < 0 ? 0 : num;\n            this._value = num;\n            this.callLater(this.changeValue);\n            this.event(Event.CHANGE);\n            this.changeHandler && this.changeHandler.runWith(num);\n        }\n    }\n\n    /**\n     * @private\n     * 更改进度值的显示。\n     */\n    protected changeValue(): void {\n        if (this.sizeGrid) {\n            let grid = this.sizeGrid.split(\",\");\n            let left = parseInt(grid[3]);\n            if (isNaN(left))\n                left = 0;\n            let right = parseInt(grid[1]);\n            if (isNaN(right))\n                right = 0;\n            let max = this.width - left - right;\n            let sw = max * this._value;\n            this._bar.width = left + right + sw;\n            this._bar.visible = this._bar.width > left + right;\n        } else {\n            this._bar.width = this.width * this._value;\n        }\n    }\n\n    /**\n     * 获取进度条对象。\n     */\n    get bar(): Image {\n        return this._bar;\n    }\n\n    /**\n     * 获取背景条对象。\n     */\n    get bg(): Image {\n        return this._bg;\n    }\n\n    /**\n     * <p>当前 <code>ProgressBar</code> 实例的进度条背景位图（ <code>Image</code> 实例）的有效缩放网格数据。</p>\n     * <p>数据格式：\"上边距,右边距,下边距,左边距,是否重复填充(值为0：不重复填充，1：重复填充)\"，以逗号分隔。\n     * <ul><li>例如：\"4,4,4,4,1\"</li></ul></p>\n     */\n    get sizeGrid(): string {\n        return this._bg.sizeGrid;\n    }\n\n    set sizeGrid(value: string) {\n        this._bg.sizeGrid = this._bar.sizeGrid = value;\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n    */\n    set_width(value: number): void {\n        super.set_width(value);\n        this.callLater(this.changeValue);\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n    */\n    set_dataSource(value: any): void {\n        this._dataSource = value;\n        if (typeof (value) == 'number' || typeof (value) == 'string')\n            this.value = Number(value);\n        else\n            super.set_dataSource(value);\n    }\n}","import { Event } from \"../events/Event\"\nimport { Button } from \"./Button\"\n\n/**\n * <code>Radio</code> 控件使用户可在一组互相排斥的选择中做出一种选择。\n * 用户一次只能选择 <code>Radio</code> 组中的一个成员。选择未选中的组成员将取消选择该组中当前所选的 <code>Radio</code> 控件。 \n * @see laya.ui.RadioGroup\n */\nexport class Radio extends Button {\n\n    /**@private */\n    protected _value: any;\n\n    /**\n     * 创建一个新的 <code>Radio</code> 类实例。 \n     * @param skin 皮肤。\n     * @param label 标签。\n     */\n    constructor(skin: string = null, label: string = \"\") {\n        super(skin, label);\n        // preinitialize 放到这里了，因为不知道什么时候调用\n        this.toggle = false;\n        this._autoSize = false;\n    }\n\n    /**\n     * @override\n     */\n    protected preinitialize(): void {\n        super.preinitialize();\n        this.toggle = false;\n        this._autoSize = false;\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n     * */\n    protected initialize(): void {\n        super.initialize();\n        this.createText();\n        this._text.align = \"left\";\n        this._text.valign = \"top\";\n        this._text.width = null;\n        this.on(Event.CLICK, this, this.onClick);\n    }\n\n    /**\n     * @private\n     * 对象的<code>Event.CLICK</code>事件侦听处理函数。 \n     */\n    protected onClick(e: Event): void {\n        this.selected = true;\n    }\n\n    /**\n     * 获取或设置 <code>Radio</code> 关联的可选用户定义值。\n     */\n    get value(): any {\n        return this._value != null ? this._value : this.label;\n    }\n\n    set value(obj: any) {\n        this._value = obj;\n    }\n    protected changeClips(): void {\n        super.changeClips();\n        this._setWidth(this._width);\n    }\n    _setWidth(value: number): void {\n        if (!this._autoSize) {\n            this._text.width = this.width - this._text.x;\n        }\n    }\n}","import { Box } from \"./Box\";\nimport { ISelect } from \"./ISelect\";\nimport { Sprite } from \"../display/Sprite\"\nimport { Event } from \"../events/Event\"\nimport { Loader } from \"../net/Loader\"\nimport { Button } from \"./Button\"\nimport { Handler } from \"../utils/Handler\"\nimport { ILaya } from \"../../ILaya\";\nimport { HideFlags } from \"../Const\";\nimport { URL } from \"../net/URL\";\n\n/**\n * 当 <code>Group</code> 实例的 <code>selectedIndex</code> 属性发生变化时调度。\n * @eventType laya.events.Event\n */\n/*[Event(name = \"change\", type = \"laya.events.Event\")]*/\n\n/**\n * <code>Group</code> 是一个可以自动布局的项集合控件。\n * <p> <code>Group</code> 的默认项对象为 <code>Button</code> 类实例。\n * <code>Group</code> 是 <code>Tab</code> 和 <code>RadioGroup</code> 的基类。</p>\n */\nexport class UIGroup extends Box {\n\n    /**\n     * 改变 <code>Group</code> 的选择项时执行的处理器，(默认返回参数： 项索引（index:int）)。\n     */\n    selectHandler: Handler;\n\n    /**@private */\n    protected _items: ISelect[];\n    /**@private */\n    protected _selectedIndex: number = -1;\n    /**@private */\n    protected _skin: string;\n    /**@private */\n    protected _direction: string = \"horizontal\";\n    /**@private */\n    protected _space: number = 0;\n    /**@private */\n    protected _labels: string;\n    /**@private */\n    protected _labelColors: string;\n    /**@private */\n    private _labelFont: string;\n    /**@private */\n    protected _labelStrokeColor: string;\n    /**@private */\n    protected _strokeColors: string;\n    /**@private */\n    protected _labelStroke: number;\n    /**@private */\n    protected _labelSize: number;\n    /**@private */\n    protected _labelBold: boolean;\n    /**@private */\n    protected _labelPadding: string;\n    /**@private */\n    protected _labelAlign: string;\n    /**@private */\n    protected _stateNum: number;\n    /**@private */\n    protected _labelChanged: boolean;\n\n    /**\n     * 创建一个新的 <code>Group</code> 类实例。\n     * @param labels 标签集字符串。以逗号做分割，如\"item0,item1,item2,item3,item4,item5\"。\n     * @param skin 皮肤。\n     */\n    constructor(labels: string = null, skin: string = null) {\n        super();\n        this._items = [];\n        this.skin = skin;\n        this.labels = labels;\n    }\n    /**\n     * @override\n     */\n    protected preinitialize(): void {\n        this.mouseEnabled = true;\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n    */\n    destroy(destroyChild: boolean = true): void {\n        super.destroy(destroyChild);\n        this._items && (this._items.length = 0);\n        this._items = null;\n        this.selectHandler = null;\n    }\n\n    /**\n     * 添加一个项对象，返回此项对象的索引id。\n     *\n     * @param item 需要添加的项对象。\n     * @param autoLayout 是否自动布局，如果为true，会根据 <code>direction</code> 和 <code>space</code> 属性计算item的位置。\n     * @return\n     */\n    addItem(item: ISelect, autoLayout: boolean = true): number {\n        let display = (<Sprite>(item as any));\n        let index = this._items.length;\n        display.name = \"item\" + index;\n        this.addChild(display);\n        this.initItems();\n\n        if (autoLayout && index > 0) {\n            let preItem = (<Sprite>(this._items[index - 1] as any));\n            if (this._direction == \"horizontal\") {\n                display.x = preItem._x + preItem.width + this._space;\n            } else {\n                display.y = preItem._y + preItem.height + this._space;\n            }\n        } else {\n            if (autoLayout) {\n                display.x = 0;\n                display.y = 0;\n            }\n        }\n        return index;\n    }\n\n    /**\n     * 删除一个项对象。\n     * @param item 需要删除的项对象。\n     * @param autoLayout 是否自动布局，如果为true，会根据 <code>direction</code> 和 <code>space</code> 属性计算item的位置。\n     */\n    delItem(item: ISelect, autoLayout: boolean = true): void {\n        var index: number = this._items.indexOf(item);\n        if (index != -1) {\n            let display: Sprite = (<Sprite>(item as any));\n            this.removeChild(display);\n            for (let i = index + 1, n = this._items.length; i < n; i++) {\n                let child = (<Sprite>(this._items[i] as any));\n                child.name = \"item\" + (i - 1);\n                if (autoLayout) {\n                    if (this._direction == \"horizontal\") {\n                        child.x -= display.width + this._space;\n                    } else {\n                        child.y -= display.height + this._space;\n                    }\n                }\n            }\n            this.initItems();\n            if (this._selectedIndex > -1) {\n                let newIndex = this._selectedIndex < this._items.length ? this._selectedIndex : (this._selectedIndex - 1);\n                this._selectedIndex = -1;\n                this.selectedIndex = newIndex;\n            }\n        }\n    }\n\n    onAfterDeserialize() {\n        super.onAfterDeserialize();\n        if (!this._labels)\n            this.initItems();\n    }\n\n    /**@internal 2.0解析会调用 */\n    _afterInited(): void {\n        this.initItems();\n    }\n\n    /**\n     * 初始化项对象们。\n     */\n    initItems(): void {\n        this._items.length = 0;\n        for (let i = 0; i < 10000; i++) {\n            let item = <ISelect>this.getChildByName(\"item\" + i);\n            if (item == null)\n                break;\n            this._items.push(item);\n            item.selected = (i === this._selectedIndex);\n            item.clickHandler = Handler.create(this, this.itemClick, [i], false);\n        }\n    }\n\n    /**\n     * @private\n     * 项对象的点击事件侦听处理函数。\n     * @param index 项索引。\n     */\n    protected itemClick(index: number): void {\n        this.selectedIndex = index;\n    }\n\n    /**\n     * 表示当前选择的项索引。默认值为-1。\n     */\n    get selectedIndex(): number {\n        return this._selectedIndex;\n    }\n\n    set selectedIndex(value: number) {\n        if (this._selectedIndex != value) {\n            this.setSelect(this._selectedIndex, false);\n            this._selectedIndex = value;\n            this.setSelect(value, true);\n            this.event(Event.CHANGE);\n            this.selectHandler && this.selectHandler.runWith(this._selectedIndex);\n        }\n    }\n\n    /**\n     * @private\n     * 通过对象的索引设置项对象的 <code>selected</code> 属性值。\n     * @param index 需要设置的项对象的索引。\n     * @param selected 表示项对象的选中状态。\n     */\n    protected setSelect(index: number, selected: boolean): void {\n        if (this._items && index > -1 && index < this._items.length) this._items[index].selected = selected;\n    }\n\n    /**\n     * @copy laya.ui.Image#skin\n     */\n    get skin(): string {\n        return this._skin;\n    }\n\n    set skin(value: string) {\n        if (value == \"\")\n            value = null;\n        if (this._skin == value)\n            return;\n\n        this._setSkin(value);\n    }\n\n    _setSkin(url: string): Promise<void> {\n        this._skin = url;\n        if (url) {\n            if (this._skinBaseUrl)\n                url = URL.formatURL(url, this._skinBaseUrl);\n            if (Loader.getRes(url)) {\n                this._skinLoaded();\n                return Promise.resolve();\n            }\n            else\n                return ILaya.loader.load(url, Loader.IMAGE).then(tex => this._skinLoaded());\n        }\n        else {\n            this._skinLoaded();\n            return Promise.resolve();\n        }\n    }\n\n    protected _skinLoaded(): void {\n        if (this._destroyed)\n            return;\n\n        this._setLabelChanged();\n        this.event(Event.LOADED);\n    }\n\n    /**\n     * 标签集合字符串。以逗号做分割，如\"item0,item1,item2,item3,item4,item5\"。\n     */\n    get labels(): string {\n        return this._labels;\n    }\n\n    set labels(value: string) {\n        if (value == \"\")\n            value = null;\n        if (this._labels != value) {\n            this._labels = value;\n            let i = 0;\n            let n = this.numChildren;\n            while (i < n) {\n                let item = this.getChildAt(i);\n                if (item.hasHideFlag(HideFlags.HideAndDontSave) && item.name && item.name.startsWith(\"item\")) {\n                    this.removeChildAt(i);\n                    n--;\n                }\n                else\n                    i++;\n            }\n            this._setLabelChanged();\n            if (this._labels) {\n                let a = this._labels.split(\",\");\n                for (let i = 0, n = a.length; i < n; i++) {\n                    let item = this.createItem(this._skin, a[i]);\n                    item.name = \"item\" + i;\n                    item.hideFlags = HideFlags.HideAndDontSave;\n                    this.addChild(item);\n                }\n            }\n            this.initItems();\n        }\n    }\n\n    /**\n     * @private\n     * 创建一个项显示对象。\n     * @param skin 项对象的皮肤。\n     * @param label 项对象标签。\n     */\n    protected createItem(skin: string, label: string): Sprite {\n        return null;\n    }\n\n    /**\n     * @copy laya.ui.Button#labelColors()\n     */\n    get labelColors(): string {\n        return this._labelColors;\n    }\n\n    set labelColors(value: string) {\n        if (this._labelColors != value) {\n            this._labelColors = value;\n            this._setLabelChanged();\n        }\n    }\n\n    /**\n     * <p>描边宽度（以像素为单位）。</p>\n     * 默认值0，表示不描边。\n     * @see laya.display.Text.stroke()\n     */\n    get labelStroke(): number {\n        return this._labelStroke;\n    }\n\n    set labelStroke(value: number) {\n        if (this._labelStroke != value) {\n            this._labelStroke = value;\n            this._setLabelChanged();\n        }\n    }\n\n    /**\n     * <p>描边颜色，以字符串表示。</p>\n     * 默认值为 \"#000000\"（黑色）;\n     * @see laya.display.Text.strokeColor()\n     */\n    get labelStrokeColor(): string {\n        return this._labelStrokeColor;\n    }\n\n    set labelStrokeColor(value: string) {\n        if (this._labelStrokeColor != value) {\n            this._labelStrokeColor = value;\n            this._setLabelChanged();\n        }\n    }\n\n    /**\n     * <p>表示各个状态下的描边颜色。</p>\n     * @see laya.display.Text.strokeColor()\n     */\n    get strokeColors(): string {\n        return this._strokeColors;\n    }\n\n    set strokeColors(value: string) {\n        if (this._strokeColors != value) {\n            this._strokeColors = value;\n            this._setLabelChanged();\n        }\n    }\n\n    /**\n     * 表示按钮文本标签的字体大小。\n     */\n    get labelSize(): number {\n        return this._labelSize;\n    }\n\n    set labelSize(value: number) {\n        if (this._labelSize != value) {\n            this._labelSize = value;\n            this._setLabelChanged();\n        }\n    }\n\n    /**\n     * 表示按钮的状态值，以数字表示，默认为3态。\n     * @see laya.ui.Button#stateNum\n     */\n    get stateNum(): number {\n        return this._stateNum;\n    }\n\n    set stateNum(value: number) {\n        if (this._stateNum != value) {\n            this._stateNum = value;\n            this._setLabelChanged();\n        }\n    }\n\n    /**\n     * 表示按钮文本标签是否为粗体字。\n     */\n    get labelBold(): boolean {\n        return this._labelBold;\n    }\n\n    set labelBold(value: boolean) {\n        if (this._labelBold != value) {\n            this._labelBold = value;\n            this._setLabelChanged();\n        }\n    }\n\n    /**\n     * 表示按钮文本标签的字体名称，以字符串形式表示。\n     * @see laya.display.Text.font()\n     */\n    get labelFont(): string {\n        return this._labelFont;\n    }\n\n    set labelFont(value: string) {\n        if (this._labelFont != value) {\n            this._labelFont = value;\n            this._setLabelChanged();\n        }\n    }\n    /**\n     * 表示按钮文本标签的边距。\n     * <p><b>格式：</b>\"上边距,右边距,下边距,左边距\"。</p>\n     */\n    get labelPadding(): string {\n        return this._labelPadding;\n    }\n\n    set labelPadding(value: string) {\n        if (this._labelPadding != value) {\n            this._labelPadding = value;\n            this._setLabelChanged();\n        }\n    }\n\n    /**\n     * 布局方向。\n     * <p>默认值为\"horizontal\"。</p>\n     * <p><b>取值：</b>\n     * <li>\"horizontal\"：表示水平布局。</li>\n     * <li>\"vertical\"：表示垂直布局。</li>\n     * </p>\n     */\n    get direction(): string {\n        return this._direction;\n    }\n\n    set direction(value: string) {\n        this._direction = value;\n        this._setLabelChanged();\n    }\n\n    /**\n     * 项对象们之间的间隔（以像素为单位）。\n     */\n    get space(): number {\n        return this._space;\n    }\n\n    set space(value: number) {\n        this._space = value;\n        this._setLabelChanged();\n    }\n\n    /**\n     * @private\n     * 更改项对象的属性值。\n     */\n    protected changeLabels(): void {\n        this._labelChanged = false;\n        if (this._items) {\n            var left: number = 0\n            for (var i: number = 0, n: number = this._items.length; i < n; i++) {\n                var btn: Button = (<Button>this._items[i]);\n                this._skin && (btn.skin = this._skin);\n                this._labelColors && (btn.labelColors = this._labelColors);\n                this._labelSize != null && (btn.labelSize = this._labelSize);\n                this._labelStroke != null && (btn.labelStroke = this._labelStroke);\n                this._labelStrokeColor && (btn.labelStrokeColor = this._labelStrokeColor);\n                this._strokeColors && (btn.strokeColors = this._strokeColors);\n                this._labelBold && (btn.labelBold = this._labelBold);\n                this._labelPadding && (btn.labelPadding = this._labelPadding);\n                this._labelAlign && (btn.labelAlign = this._labelAlign);\n                this._stateNum != null && (btn.stateNum = this._stateNum);\n                this._labelFont && (btn.labelFont = this._labelFont);\n                if (this._direction === \"horizontal\") {\n                    btn.y = 0;\n                    btn.x = left;\n                    left += btn.width + this._space;\n                } else {\n                    btn.x = 0;\n                    btn.y = left;\n                    left += btn.height + this._space;\n                }\n            }\n        }\n        this._sizeChanged();\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n    */\n    protected commitMeasure(): void {\n        this.runCallLater(this.changeLabels);\n    }\n\n    /**\n     * 项对象们的存放数组。\n     */\n    get items(): ISelect[] {\n        return this._items;\n    }\n\n    /**\n     * 获取或设置当前选择的项对象。\n     */\n    get selection(): ISelect {\n        return this._selectedIndex > -1 && this._selectedIndex < this._items.length ? this._items[this._selectedIndex] : null;\n    }\n\n    set selection(value: ISelect) {\n        this.selectedIndex = this._items.indexOf(value);\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n     */\n    set_dataSource(value: any) {\n        this._dataSource = value;\n        if (typeof (value) == 'number' || typeof (value) == 'string')\n            this.selectedIndex = parseInt(value as string);\n        else if (value instanceof Array)\n            this.labels = ((<any[]>value)).join(\",\");\n        else\n            super.set_dataSource(value);\n    }\n\n    /**@private */\n    protected _setLabelChanged(): void {\n        if (!this._labelChanged) {\n            this._labelChanged = true;\n            this.callLater(this.changeLabels);\n        }\n    }\n}","import { UIGroup } from \"./UIGroup\";\nimport { Sprite } from \"../display/Sprite\"\nimport { Radio } from \"./Radio\"\n\n/**\n * 当 <code>Group</code> 实例的 <code>selectedIndex</code> 属性发生变化时调度。\n * @eventType laya.events.Event\n */\n/*[Event(name = \"change\", type = \"laya.events.Event\")]*/\n\n/**\n * <code>RadioGroup</code> 控件定义一组 <code>Radio</code> 控件，这些控件相互排斥；\n * 因此，用户每次只能选择一个 <code>Radio</code> 控件。\n *\n * @example <caption>以下示例代码，创建了一个 <code>RadioGroup</code> 实例。</caption>\n * package\n *\t{\n *\t\timport laya.ui.Radio;\n *\t\timport laya.ui.RadioGroup;\n *\t\timport laya.utils.Handler;\n *\t\tpublic class RadioGroup_Example\n *\t\t{\n *\t\t\tpublic function RadioGroup_Example()\n *\t\t\t{\n *\t\t\t\tLaya.init(640, 800);//设置游戏画布宽高。\n *\t\t\t\tLaya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\n *\t\t\t\tLaya.loader.load([\"resource/ui/radio.png\"], Handler.create(this, onLoadComplete));//加载资源。\n *\t\t\t}\n *\t\t\tprivate function onLoadComplete():void\n *\t\t\t{\n *\t\t\t\tvar radioGroup:RadioGroup = new RadioGroup();//创建一个 RadioGroup 类的实例对象 radioGroup 。\n *\t\t\t\tradioGroup.pos(100, 100);//设置 radioGroup 的位置信息。\n *\t\t\t\tradioGroup.labels = \"item0,item1,item2\";//设置 radioGroup 的标签集。\n *\t\t\t\tradioGroup.skin = \"resource/ui/radio.png\";//设置 radioGroup 的皮肤。\n *\t\t\t\tradioGroup.space = 10;//设置 radioGroup 的项间隔距离。\n *\t\t\t\tradioGroup.selectHandler = new Handler(this, onSelect);//设置 radioGroup 的选择项发生改变时执行的处理器。\n *\t\t\t\tLaya.stage.addChild(radioGroup);//将 radioGroup 添加到显示列表。\n *\t\t\t}\n *\t\t\tprivate function onSelect(index:int):void\n *\t\t\t{\n *\t\t\t\ttrace(\"当前选择的单选按钮索引: index= \", index);\n *\t\t\t}\n *\t\t}\n *\t}\n * @example\n * Laya.init(640, 800);//设置游戏画布宽高、渲染模式\n * Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色\n * Laya.loader.load([\"resource/ui/radio.png\"], laya.utils.Handler.create(this, onLoadComplete));\n * function onLoadComplete() {\n *     var radioGroup= new laya.ui.RadioGroup();//创建一个 RadioGroup 类的实例对象 radioGroup 。\n *     radioGroup.pos(100, 100);//设置 radioGroup 的位置信息。\n *     radioGroup.labels = \"item0,item1,item2\";//设置 radioGroup 的标签集。\n *     radioGroup.skin = \"resource/ui/radio.png\";//设置 radioGroup 的皮肤。\n *     radioGroup.space = 10;//设置 radioGroup 的项间隔距离。\n *     radioGroup.selectHandler = new laya.utils.Handler(this, onSelect);//设置 radioGroup 的选择项发生改变时执行的处理器。\n *     Laya.stage.addChild(radioGroup);//将 radioGroup 添加到显示列表。\n * }\n * function onSelect(index) {\n *     console.log(\"当前选择的单选按钮索引: index= \", index);\n * }\n * @example\n * import Radio = laya.ui.Radio;\n * import RadioGroup = laya.ui.RadioGroup;\n * import Handler = laya.utils.Handler;\n * class RadioGroup_Example {\n *     constructor() {\n *         Laya.init(640, 800);//设置游戏画布宽高。\n *         Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\n *         Laya.loader.load([\"resource/ui/radio.png\"], Handler.create(this, this.onLoadComplete));//加载资源。\n *     }\n *     private onLoadComplete(): void {\n *         var radioGroup: RadioGroup = new RadioGroup();//创建一个 RadioGroup 类的实例对象 radioGroup 。\n *         radioGroup.pos(100, 100);//设置 radioGroup 的位置信息。\n *         radioGroup.labels = \"item0,item1,item2\";//设置 radioGroup 的标签集。\n *         radioGroup.skin = \"resource/ui/radio.png\";//设置 radioGroup 的皮肤。\n *         radioGroup.space = 10;//设置 radioGroup 的项间隔距离。\n *         radioGroup.selectHandler = new Handler(this, this.onSelect);//设置 radioGroup 的选择项发生改变时执行的处理器。\n *         Laya.stage.addChild(radioGroup);//将 radioGroup 添加到显示列表。\n *     }\n *     private onSelect(index: number): void {\n *         console.log(\"当前选择的单选按钮索引: index= \", index);\n *     }\n * }\n */\nexport class RadioGroup extends UIGroup {\n    /**@inheritDoc \n     * @override\n    */\n    protected createItem(skin: string, label: string): Sprite {\n        let btn = new Radio();\n        btn._skinBaseUrl = this._skinBaseUrl;\n        if (skin)\n            btn.skin = skin;\n        btn.label = label;\n        return btn;\n    }\n}","import { Box } from \"./Box\"\nimport { ILaya } from \"../../ILaya\";\n\n/**\n * 自适应缩放容器，容器设置大小后，容器大小始终保持stage大小，子内容按照原始最小宽高比缩放\n */\nexport class ScaleBox extends Box {\n    private _oldW: number = 0;\n    private _oldH: number = 0;\n\n    /**\n     * @override\n     */\n    onEnable(): void {\n        ILaya.stage.on(\"resize\", this, this.onResize);\n        this.onResize();\n    }\n    /**\n     * @override\n     */\n    onDisable(): void {\n        ILaya.stage.off(\"resize\", this, this.onResize);\n    }\n\n    private onResize(): void {\n        if (this.width > 0 && this.height > 0) {\n            let stage = ILaya.stage;\n            let scale = Math.min(stage.width / this._oldW, stage.height / this._oldH);\n            super.width = stage.width;\n            super.height = stage.height;\n            this.scale(scale, scale);\n        }\n    }\n    /**\n     * @override\n     */\n    set_width(value: number): void {\n        super.set_width(value);\n        this._oldW = value;\n    }\n\n    /**\n     * @override\n     */\n    set_height(value: number) {\n        super.set_height(value);\n        this._oldH = value;\n    }\n}","import { Sprite } from \"../display/Sprite\"\nimport { Button } from \"./Button\"\nimport { Styles } from \"./Styles\";\nimport { UIGroup } from \"./UIGroup\"\n\n/**\n * 当 <code>Group</code> 实例的 <code>selectedIndex</code> 属性发生变化时调度。\n * @eventType laya.events.Event\n */\n/*[Event(name = \"change\", type = \"laya.events.Event\")]*/\n\n/**\n * <code>Tab</code> 组件用来定义选项卡按钮组。\t *\n * <p>属性：<code>selectedIndex</code> 的默认值为-1。</p>\n *\n * @example <caption>以下示例代码，创建了一个 <code>Tab</code> 实例。</caption>\n * package\n *\t{\n *\t\timport laya.ui.Tab;\n *\t\timport laya.utils.Handler;\n *\t\tpublic class Tab_Example\n *\t\t{\n *\t\t\tpublic function Tab_Example()\n *\t\t\t{\n *\t\t\t\tLaya.init(640, 800);//设置游戏画布宽高。\n *\t\t\t\tLaya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\n *\t\t\t\tLaya.loader.load([\"resource/ui/tab.png\"], Handler.create(this, onLoadComplete));//加载资源。\n *\t\t\t}\n *\t\t\tprivate function onLoadComplete():void\n *\t\t\t{\n *\t\t\t\tvar tab:Tab = new Tab();//创建一个 Tab 类的实例对象 tab 。\n *\t\t\t\ttab.skin = \"resource/ui/tab.png\";//设置 tab 的皮肤。\n *\t\t\t\ttab.labels = \"item0,item1,item2\";//设置 tab 的标签集。\n *\t\t\t\ttab.x = 100;//设置 tab 对象的属性 x 的值，用于控制 tab 对象的显示位置。\n *\t\t\t\ttab.y = 100;//设置 tab 对象的属性 y 的值，用于控制 tab 对象的显示位置。\n *\t\t\t\ttab.selectHandler = new Handler(this, onSelect);//设置 tab 的选择项发生改变时执行的处理器。\n *\t\t\t\tLaya.stage.addChild(tab);//将 tab 添到显示列表。\n *\t\t\t}\n *\t\t\tprivate function onSelect(index:int):void\n *\t\t\t{\n *\t\t\t\ttrace(\"当前选择的表情页索引: index= \", index);\n *\t\t\t}\n *\t\t}\n *\t}\n * @example\n * Laya.init(640, 800);//设置游戏画布宽高\n * Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色\n * Laya.loader.load([\"resource/ui/tab.png\"], laya.utils.Handler.create(this, onLoadComplete));\n * function onLoadComplete() {\n *     var tab = new laya.ui.Tab();//创建一个 Tab 类的实例对象 tab 。\n *     tab.skin = \"resource/ui/tab.png\";//设置 tab 的皮肤。\n *     tab.labels = \"item0,item1,item2\";//设置 tab 的标签集。\n *     tab.x = 100;//设置 tab 对象的属性 x 的值，用于控制 tab 对象的显示位置。\n *     tab.y = 100;//设置 tab 对象的属性 y 的值，用于控制 tab 对象的显示位置。\n *     tab.selectHandler = new laya.utils.Handler(this, onSelect);//设置 tab 的选择项发生改变时执行的处理器。\n *     Laya.stage.addChild(tab);//将 tab 添到显示列表。\n * }\n * function onSelect(index) {\n *     console.log(\"当前选择的标签页索引: index= \", index);\n * }\n * @example\n * import Tab = laya.ui.Tab;\n * import Handler = laya.utils.Handler;\n * class Tab_Example {\n *     constructor() {\n *         Laya.init(640, 800);//设置游戏画布宽高。\n *         Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\n *         Laya.loader.load([\"resource/ui/tab.png\"], Handler.create(this, this.onLoadComplete));//加载资源。\n *     }\n *     private onLoadComplete(): void {\n *         var tab: Tab = new Tab();//创建一个 Tab 类的实例对象 tab 。\n *         tab.skin = \"resource/ui/tab.png\";//设置 tab 的皮肤。\n *         tab.labels = \"item0,item1,item2\";//设置 tab 的标签集。\n *         tab.x = 100;//设置 tab 对象的属性 x 的值，用于控制 tab 对象的显示位置。\n *         tab.y = 100;//设置 tab 对象的属性 y 的值，用于控制 tab 对象的显示位置。\n *         tab.selectHandler = new Handler(this, this.onSelect);//设置 tab 的选择项发生改变时执行的处理器。\n *         Laya.stage.addChild(tab);//将 tab 添到显示列表。\n *     }\n *     private onSelect(index: number): void {\n *         console.log(\"当前选择的表情页索引: index= \", index);\n *     }\n * }\n */\nexport class Tab extends UIGroup {\n    constructor() {\n        super();\n        this._stateNum = Styles.buttonStateNum;\n    }\n\n    /**\n     * @private\n     * @inheritDoc\n     * @override\n     */\n    protected createItem(skin: string, label: string): Sprite {\n        let btn = new Button();\n        btn._skinBaseUrl = this._skinBaseUrl;\n        if (skin)\n            btn.skin = skin;\n        btn.label = label;\n        return btn;\n    }\n}","import { Label } from \"./Label\";\nimport { Input } from \"../display/Input\"\nimport { Event } from \"../events/Event\"\nimport { Loader } from \"../net/Loader\"\nimport { AutoBitmap } from \"./AutoBitmap\"\nimport { Styles } from \"./Styles\"\nimport { UIUtils } from \"./UIUtils\"\nimport { ILaya } from \"../../ILaya\";\nimport { HideFlags } from \"../Const\";\nimport { URL } from \"../net/URL\";\n\n/**\n * 输入文本后调度。\n * @eventType Event.INPUT\n */\n/*[Event(name = \"input\", type = \"laya.events.Event\")]*/\n/**\n * 在输入框内敲回车键后调度。\n * @eventType Event.ENTER\n */\n/*[Event(name = \"enter\", type = \"laya.events.Event\")]*/\n/**\n * 当获得输入焦点后调度。\n * @eventType Event.FOCUS\n */\n/*[Event(name = \"focus\", type = \"laya.events.Event\")]*/\n/**\n * 当失去输入焦点后调度。\n * @eventType Event.BLUR\n */\n/*[Event(name = \"blur\", type = \"laya.events.Event\")]*/\n\n/**\n * <code>TextInput</code> 类用于创建显示对象以显示和输入文本。\n *\n * @example <caption>以下示例代码，创建了一个 <code>TextInput</code> 实例。</caption>\n * package\n *\t{\n *\t\timport laya.display.Stage;\n *\t\timport laya.ui.TextInput;\n *\t\timport laya.utils.Handler;\n *\t\tpublic class TextInput_Example\n *\t\t{\n *\t\t\tpublic function TextInput_Example()\n *\t\t\t{\n *\t\t\t\tLaya.init(640, 800);//设置游戏画布宽高、渲染模式。\n *\t\t\t\tLaya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\n *\t\t\t\tLaya.loader.load([\"resource/ui/input.png\"], Handler.create(this, onLoadComplete));//加载资源。\n *\t\t\t}\n *\t\t\tprivate function onLoadComplete():void\n *\t\t\t{\n *\t\t\t\tvar textInput:TextInput = new TextInput(\"这是一个TextInput实例。\");//创建一个 TextInput 类的实例对象 textInput 。\n *\t\t\t\ttextInput.skin = \"resource/ui/input.png\";//设置 textInput 的皮肤。\n *\t\t\t\ttextInput.sizeGrid = \"4,4,4,4\";//设置 textInput 的网格信息。\n *\t\t\t\ttextInput.color = \"#008fff\";//设置 textInput 的文本颜色。\n *\t\t\t\ttextInput.font = \"Arial\";//设置 textInput 的文本字体。\n *\t\t\t\ttextInput.bold = true;//设置 textInput 的文本显示为粗体。\n *\t\t\t\ttextInput.fontSize = 30;//设置 textInput 的字体大小。\n *\t\t\t\ttextInput.wordWrap = true;//设置 textInput 的文本自动换行。\n *\t\t\t\ttextInput.x = 100;//设置 textInput 对象的属性 x 的值，用于控制 textInput 对象的显示位置。\n *\t\t\t\ttextInput.y = 100;//设置 textInput 对象的属性 y 的值，用于控制 textInput 对象的显示位置。\n *\t\t\t\ttextInput.width = 300;//设置 textInput 的宽度。\n *\t\t\t\ttextInput.height = 200;//设置 textInput 的高度。\n *\t\t\t\tLaya.stage.addChild(textInput);//将 textInput 添加到显示列表。\n *\t\t\t}\n *\t\t}\n *\t}\n * @example\n * Laya.init(640, 800);//设置游戏画布宽高\n * Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色\n * Laya.loader.load([\"resource/ui/input.png\"], laya.utils.Handler.create(this, onLoadComplete));//加载资源。\n * function onLoadComplete() {\n *     var textInput = new laya.ui.TextInput(\"这是一个TextInput实例。\");//创建一个 TextInput 类的实例对象 textInput 。\n *     textInput.skin = \"resource/ui/input.png\";//设置 textInput 的皮肤。\n *     textInput.sizeGrid = \"4,4,4,4\";//设置 textInput 的网格信息。\n *     textInput.color = \"#008fff\";//设置 textInput 的文本颜色。\n *     textInput.font = \"Arial\";//设置 textInput 的文本字体。\n *     textInput.bold = true;//设置 textInput 的文本显示为粗体。\n *     textInput.fontSize = 30;//设置 textInput 的字体大小。\n *     textInput.wordWrap = true;//设置 textInput 的文本自动换行。\n *     textInput.x = 100;//设置 textInput 对象的属性 x 的值，用于控制 textInput 对象的显示位置。\n *     textInput.y = 100;//设置 textInput 对象的属性 y 的值，用于控制 textInput 对象的显示位置。\n *     textInput.width = 300;//设置 textInput 的宽度。\n *     textInput.height = 200;//设置 textInput 的高度。\n *     Laya.stage.addChild(textInput);//将 textInput 添加到显示列表。\n * }\n * @example\n * import Stage = laya.display.Stage;\n * import TextInput = laya.ui.TextInput;\n * import Handler = laya.utils.Handler;\n * class TextInput_Example {\n *     constructor() {\n *         Laya.init(640, 800);//设置游戏画布宽高、渲染模式。\n *         Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\n *         Laya.loader.load([\"resource/ui/input.png\"], Handler.create(this, this.onLoadComplete));//加载资源。\n *     }\n *     private onLoadComplete(): void {\n *         var textInput: TextInput = new TextInput(\"这是一个TextInput实例。\");//创建一个 TextInput 类的实例对象 textInput 。\n *         textInput.skin = \"resource/ui/input.png\";//设置 textInput 的皮肤。\n *         textInput.sizeGrid = \"4,4,4,4\";//设置 textInput 的网格信息。\n *         textInput.color = \"#008fff\";//设置 textInput 的文本颜色。\n *         textInput.font = \"Arial\";//设置 textInput 的文本字体。\n *         textInput.bold = true;//设置 textInput 的文本显示为粗体。\n *         textInput.fontSize = 30;//设置 textInput 的字体大小。\n *         textInput.wordWrap = true;//设置 textInput 的文本自动换行。\n *         textInput.x = 100;//设置 textInput 对象的属性 x 的值，用于控制 textInput 对象的显示位置。\n *         textInput.y = 100;//设置 textInput 对象的属性 y 的值，用于控制 textInput 对象的显示位置。\n *         textInput.width = 300;//设置 textInput 的宽度。\n *         textInput.height = 200;//设置 textInput 的高度。\n *         Laya.stage.addChild(textInput);//将 textInput 添加到显示列表。\n *     }\n * }\n */\nexport class TextInput extends Label {\n    /** @private */\n    protected _skin: string;\n\n    declare _graphics: AutoBitmap;\n    declare _tf: Input;\n\n    /**\n     * 创建一个新的 <code>TextInput</code> 类实例。\n     * @param text 文本内容。\n     */\n    constructor(text?: string) {\n        super();\n        if (text != null)\n            this.text = text;\n        this.skin = this.skin;\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n    */\n    protected preinitialize(): void {\n        this.mouseEnabled = true;\n    }\n\n    /**\n     * @inheritDoc\n     * @override \n    */\n    protected createChildren(): void {\n        this.setGraphics(new AutoBitmap(), true);\n\n        this._tf = new Input();\n        this._tf.hideFlags = HideFlags.HideAndDontSave;\n        this._tf.padding = Styles.inputLabelPadding;\n        this._tf._onPostLayout = () => this._onPostLayout();\n        this._tf.on(Event.INPUT, () => this.event(Event.INPUT));\n        this._tf.on(Event.ENTER, () => this.event(Event.ENTER));\n        this._tf.on(Event.BLUR, () => this.event(Event.BLUR));\n        this._tf.on(Event.FOCUS, () => this.event(Event.FOCUS));\n        this.addChild(this._tf);\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n    */\n    protected initialize(): void {\n        this.width = 128;\n        this.height = 22;\n    }\n\n    /**\n     * @copy laya.ui.Image#skin\n     */\n    get skin(): string {\n        return this._skin;\n    }\n\n    set skin(value: string) {\n        if (value == \"\")\n            value = null;\n        if (this._skin == value)\n            return;\n\n        this._setSkin(value);\n    }\n\n    _setSkin(url: string): Promise<void> {\n        this._skin = url;\n        if (url) {\n            if (this._skinBaseUrl)\n                url = URL.formatURL(url, this._skinBaseUrl);\n            let source = Loader.getRes(url);\n            if (source) {\n                this._skinLoaded(source);\n                return Promise.resolve();\n            }\n            else\n                return ILaya.loader.load(url, Loader.IMAGE).then(tex => this._skinLoaded(tex));\n        }\n        else {\n            this._skinLoaded(null);\n            return Promise.resolve();\n        }\n    }\n\n    protected _skinLoaded(source: any): void {\n        if (this._destroyed)\n            return;\n\n        this._graphics.source = source;\n        this._sizeChanged();\n        this.event(Event.LOADED);\n    }\n\n    /**\n     * <p>当前实例的背景图（ <code>AutoBitmap</code> ）实例的有效缩放网格数据。</p>\n     * <p>数据格式：\"上边距,右边距,下边距,左边距,是否重复填充(值为0：不重复填充，1：重复填充)\"，以逗号分隔。\n     * <ul><li>例如：\"4,4,4,4,1\"</li></ul></p>\n     */\n    get sizeGrid(): string {\n        return this._graphics && this._graphics.sizeGrid ? this._graphics.sizeGrid.join(\",\") : null;\n    }\n\n    set sizeGrid(value: string) {\n        if (value)\n            this._graphics.sizeGrid = UIUtils.fillArray(Styles.defaultSizeGrid, value, Number);\n        else\n            this._graphics.sizeGrid = null;\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n     */\n    _setWidth(value: number) {\n        super._setWidth(value);\n        this._graphics && (this._graphics.width = value);\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n     */\n    _setHeight(value: number) {\n        super._setHeight(value);\n        this._graphics && (this._graphics.height = value);\n    }\n\n    /**\n     * <p>指示当前是否是文本域。</p>\n     * 值为true表示当前是文本域，否则不是文本域。\n     */\n    get multiline(): boolean {\n        return this._tf.multiline;\n    }\n\n    set multiline(value: boolean) {\n        this._tf.multiline = value;\n    }\n\n    /**\n     * 设置可编辑状态。\n     */\n    set editable(value: boolean) {\n        this._tf.editable = value;\n    }\n\n    get editable(): boolean {\n        return this._tf.editable;\n    }\n\n    /**选中输入框内的文本。*/\n    select(): void {\n        this._tf.select();\n    }\n\n    /**限制输入的字符。*/\n    get restrict(): string {\n        return this._tf.restrict;\n    }\n\n    set restrict(pattern: string) {\n        this._tf.restrict = pattern;\n    }\n\n    /**\n     * @copy laya.display.Input#prompt\n     */\n    get prompt(): string {\n        return this._tf.prompt;\n    }\n\n    set prompt(value: string) {\n        this._tf.prompt = value;\n    }\n\n    /**\n     * @copy laya.display.Input#promptColor\n     */\n    get promptColor(): string {\n        return this._tf.promptColor;\n    }\n\n    set promptColor(value: string) {\n        this._tf.promptColor = value;\n    }\n\n    /**\n     * @copy laya.display.Input#maxChars\n     */\n    get maxChars(): number {\n        return this._tf.maxChars;\n    }\n\n    set maxChars(value: number) {\n        this._tf.maxChars = value;\n    }\n\n    /**\n     * @copy laya.display.Input#focus\n     */\n    get focus(): boolean {\n        return this._tf.focus;\n    }\n\n    set focus(value: boolean) {\n        this._tf.focus = value;\n    }\n\n    /**\n     * @copy laya.display.Input#type\n     */\n    get type(): string {\n        return this._tf.type;\n    }\n\n    set type(value: string) {\n        this._tf.type = value;\n    }\n\n    setSelection(startIndex: number, endIndex: number): void {\n        this._tf.setSelection(startIndex, endIndex);\n    }\n}","import { TextInput } from \"./TextInput\";\nimport { VScrollBar } from \"./VScrollBar\";\nimport { HScrollBar } from \"./HScrollBar\";\nimport { ScrollType, Styles } from \"./Styles\";\nimport { Event } from \"../events/Event\"\nimport { HideFlags } from \"../Const\";\n\n/**\n * <code>TextArea</code> 类用于创建显示对象以显示和输入文本。\n * @example <caption>以下示例代码，创建了一个 <code>TextArea</code> 实例。</caption>\n * package\n *\t{\n *\t\timport laya.ui.TextArea;\n *\t\timport laya.utils.Handler;\n *\t\tpublic class TextArea_Example\n *\t\t{\n *\t\t\tpublic function TextArea_Example()\n *\t\t\t{\n *\t\t\t\tLaya.init(640, 800);//设置游戏画布宽高。\n *\t\t\t\tLaya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\n *\t\t\t\tLaya.loader.load([\"resource/ui/input.png\"], Handler.create(this, onLoadComplete));//加载资源。\n *\t\t\t}\n *\t\t\tprivate function onLoadComplete():void\n *\t\t\t{\n *\t\t\t\tvar textArea:TextArea = new TextArea(\"这个一个TextArea实例。\");//创建一个 TextArea 类的实例对象 textArea 。\n *\t\t\t\ttextArea.skin = \"resource/ui/input.png\";//设置 textArea 的皮肤。\n *\t\t\t\ttextArea.sizeGrid = \"4,4,4,4\";//设置 textArea 的网格信息。\n *\t\t\t\ttextArea.color = \"#008fff\";//设置 textArea 的文本颜色。\n *\t\t\t\ttextArea.font = \"Arial\";//设置 textArea 的字体。\n *\t\t\t\ttextArea.bold = true;//设置 textArea 的文本显示为粗体。\n *\t\t\t\ttextArea.fontSize = 20;//设置 textArea 的文本字体大小。\n *\t\t\t\ttextArea.wordWrap = true;//设置 textArea 的文本自动换行。\n *\t\t\t\ttextArea.x = 100;//设置 textArea 对象的属性 x 的值，用于控制 textArea 对象的显示位置。\n *\t\t\t\ttextArea.y = 100;//设置 textArea 对象的属性 y 的值，用于控制 textArea 对象的显示位置。\n *\t\t\t\ttextArea.width = 300;//设置 textArea 的宽度。\n *\t\t\t\ttextArea.height = 200;//设置 textArea 的高度。\n *\t\t\t\tLaya.stage.addChild(textArea);//将 textArea 添加到显示列表。\n *\t\t\t}\n *\t\t}\n *\t}\n * @example\n * Laya.init(640, 800);//设置游戏画布宽高、渲染模式\n * Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色\n * Laya.loader.load([\"resource/ui/input.png\"], laya.utils.Handler.create(this, onLoadComplete));//加载资源。\n * function onLoadComplete() {\n *     var textArea = new laya.ui.TextArea(\"这个一个TextArea实例。\");//创建一个 TextArea 类的实例对象 textArea 。\n *     textArea.skin = \"resource/ui/input.png\";//设置 textArea 的皮肤。\n *     textArea.sizeGrid = \"4,4,4,4\";//设置 textArea 的网格信息。\n *     textArea.color = \"#008fff\";//设置 textArea 的文本颜色。\n *     textArea.font = \"Arial\";//设置 textArea 的字体。\n *     textArea.bold = true;//设置 textArea 的文本显示为粗体。\n *     textArea.fontSize = 20;//设置 textArea 的文本字体大小。\n *     textArea.wordWrap = true;//设置 textArea 的文本自动换行。\n *     textArea.x = 100;//设置 textArea 对象的属性 x 的值，用于控制 textArea 对象的显示位置。\n *     textArea.y = 100;//设置 textArea 对象的属性 y 的值，用于控制 textArea 对象的显示位置。\n *     textArea.width = 300;//设置 textArea 的宽度。\n *     textArea.height = 200;//设置 textArea 的高度。\n *     Laya.stage.addChild(textArea);//将 textArea 添加到显示列表。\n * }\n * @example\n * import TextArea = laya.ui.TextArea;\n * import Handler = laya.utils.Handler;\n * class TextArea_Example {\n *     constructor() {\n *         Laya.init(640, 800);//设置游戏画布宽高、渲染模式。\n *         Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\n *         Laya.loader.load([\"resource/ui/input.png\"], Handler.create(this, this.onLoadComplete));//加载资源。\n *     }\n\t\n *     private onLoadComplete(): void {\n *         var textArea: TextArea = new TextArea(\"这个一个TextArea实例。\");//创建一个 TextArea 类的实例对象 textArea 。\n *         textArea.skin = \"resource/ui/input.png\";//设置 textArea 的皮肤。\n *         textArea.sizeGrid = \"4,4,4,4\";//设置 textArea 的网格信息。\n *         textArea.color = \"#008fff\";//设置 textArea 的文本颜色。\n *         textArea.font = \"Arial\";//设置 textArea 的字体。\n *         textArea.bold = true;//设置 textArea 的文本显示为粗体。\n *         textArea.fontSize = 20;//设置 textArea 的文本字体大小。\n *         textArea.wordWrap = true;//设置 textArea 的文本自动换行。\n *         textArea.x = 100;//设置 textArea 对象的属性 x 的值，用于控制 textArea 对象的显示位置。\n *         textArea.y = 100;//设置 textArea 对象的属性 y 的值，用于控制 textArea 对象的显示位置。\n *         textArea.width = 300;//设置 textArea 的宽度。\n *         textArea.height = 200;//设置 textArea 的高度。\n *         Laya.stage.addChild(textArea);//将 textArea 添加到显示列表。\n *     }\n * }\n */\nexport class TextArea extends TextInput {\n    protected _scrollType: ScrollType = 0;\n    protected _vScrollBarSkin: string;\n    protected _hScrollBarSkin: string;\n    /**@private */\n    protected _vScrollBar: VScrollBar;\n    /**@private */\n    protected _hScrollBar: HScrollBar;\n\n    /**\n     * <p>创建一个新的 <code>TextArea</code> 示例。</p>\n     * @param text 文本内容字符串。\n     */\n    constructor(text?: string) {\n        super(text);\n    }\n\n    protected _onPostLayout(): void {\n        super._onPostLayout();\n        this.callLater(this.changeScroll);\n    }\n    /**\n     * \n     * @param destroyChild \n     * @override\n     */\n    destroy(destroyChild: boolean = true): void {\n        this._vScrollBar && this._vScrollBar.destroy();\n        this._hScrollBar && this._hScrollBar.destroy();\n        this._vScrollBar = null;\n        this._hScrollBar = null;\n        super.destroy(destroyChild);\n    }\n    /**\n     * @override\n     */\n    protected initialize(): void {\n        this.width = 180;\n        this.height = 150;\n        this._tf.wordWrap = true;\n        this.multiline = true;\n    }\n    /**\n     * @override\n     */\n    _setWidth(value: number) {\n        super._setWidth(value);\n        this.callLater(this.changeScroll);\n    }\n    /**\n\n    /**\n     * @override\n     */\n    _setHeight(value: number) {\n        super._setHeight(value);\n        this.callLater(this.changeScroll);\n    }\n\n    get scrollType() {\n        return this._scrollType;\n    }\n\n    set scrollType(value: ScrollType) {\n        this._scrollType = value;\n\n        if (this._scrollType == ScrollType.None) {\n            if (this._hScrollBar) {\n                this._hScrollBar.destroy();\n                this._hScrollBar = null;\n            }\n            if (this._vScrollBar) {\n                this._vScrollBar.destroy();\n                this._vScrollBar = null;\n            }\n        }\n        else if (this._scrollType == ScrollType.Horizontal) {\n            if (this._vScrollBar) {\n                this._vScrollBar.destroy();\n                this._vScrollBar = null;\n            }\n\n            if (this._hScrollBar)\n                this._hScrollBar.skin = this._hScrollBarSkin;\n            else\n                this.createHScrollBar();\n        }\n        else if (this._scrollType == ScrollType.Vertical) {\n            if (this._hScrollBar) {\n                this._hScrollBar.destroy();\n                this._hScrollBar = null;\n            }\n\n            if (this._vScrollBar)\n                this._vScrollBar.skin = this._vScrollBarSkin;\n            else\n                this.createVScrollBar();\n        }\n        else { //both\n            if (this._hScrollBar)\n                this._hScrollBar.skin = this._hScrollBarSkin;\n            else\n                this.createHScrollBar();\n            if (this._vScrollBar)\n                this._vScrollBar.skin = this._vScrollBarSkin;\n            else\n                this.createVScrollBar();\n        }\n    }\n\n    private createHScrollBar() {\n        this._hScrollBar = new HScrollBar();\n        this._hScrollBar.hideFlags = HideFlags.HideAndDontSave;\n        this._hScrollBar._skinBaseUrl = this._skinBaseUrl;\n        this._hScrollBar.skin = this._hScrollBarSkin;\n        this.addChild(this._hScrollBar);\n        this._hScrollBar.on(Event.CHANGE, this, this.onHBarChanged);\n        this._hScrollBar.on(Event.LOADED, this, this.changeScroll);\n        this._hScrollBar.mouseWheelEnable = false;\n        this._hScrollBar.touchScrollEnable = false;\n        this._hScrollBar.target = this._tf;\n        this.callLater(this.changeScroll);\n    }\n\n    private createVScrollBar() {\n        this._vScrollBar = new VScrollBar();\n        this._vScrollBar.hideFlags = HideFlags.HideAndDontSave;\n        this._vScrollBar._skinBaseUrl = this._skinBaseUrl;\n        this._vScrollBar.skin = this._vScrollBarSkin;\n        this.addChild(this._vScrollBar);\n        this._vScrollBar.on(Event.CHANGE, this, this.onVBarChanged);\n        this._vScrollBar.on(Event.LOADED, this, this.changeScroll);\n        this._vScrollBar.touchScrollEnable = false;\n        this._vScrollBar.target = this._tf;\n        this.callLater(this.changeScroll);\n    }\n\n    /**\n     * 垂直方向滚动条皮肤。\n     */\n    get vScrollBarSkin(): string {\n        return this._vScrollBarSkin;\n    }\n\n    set vScrollBarSkin(value: string) {\n        if (value == \"\") value = null;\n        if (this._vScrollBarSkin != value) {\n            this._vScrollBarSkin = value;\n            if (this._scrollType == 0)\n                this.scrollType = ScrollType.Vertical;\n            else if (this._scrollType == ScrollType.Horizontal)\n                this.scrollType = ScrollType.Both;\n            else\n                this.scrollType = this._scrollType;\n        }\n\n    }\n\n    /**\n     * 水平方向滚动条皮肤。\n     */\n    get hScrollBarSkin(): string {\n        return this._hScrollBarSkin;\n    }\n\n    set hScrollBarSkin(value: string) {\n        if (value == \"\") value = null;\n        if (this._hScrollBarSkin != value) {\n            this._hScrollBarSkin = value;\n            if (this._scrollType == 0)\n                this.scrollType = ScrollType.Horizontal;\n            else if (this._scrollType == ScrollType.Vertical)\n                this.scrollType = ScrollType.Both;\n            this.scrollType = this._scrollType;\n        }\n    }\n\n    protected onVBarChanged(e: Event): void {\n        if (this._tf.scrollY != this._vScrollBar.value) {\n            this._tf.scrollY = this._vScrollBar.value;\n        }\n    }\n\n    protected onHBarChanged(e: Event): void {\n        if (this._tf.scrollX != this._hScrollBar.value) {\n            this._tf.scrollX = this._hScrollBar.value;\n        }\n    }\n\n    /**垂直滚动条实体*/\n    get vScrollBar(): VScrollBar {\n        return this._vScrollBar;\n    }\n\n    /**水平滚动条实体*/\n    get hScrollBar(): HScrollBar {\n        return this._hScrollBar;\n    }\n\n    /**垂直滚动最大值*/\n    get maxScrollY(): number {\n        return this._tf.maxScrollY;\n    }\n\n    /**垂直滚动值*/\n    get scrollY(): number {\n        return this._tf.scrollY;\n    }\n\n    /**水平滚动最大值*/\n    get maxScrollX(): number {\n        return this._tf.maxScrollX;\n    }\n\n    /**水平滚动值*/\n    get scrollX(): number {\n        return this._tf.scrollX;\n    }\n\n    private changeScroll(): void {\n        let vShow = this._vScrollBar && this._tf.maxScrollY > 0;\n        let hShow = this._hScrollBar && this._tf.maxScrollX > 0;\n        let padding = this._tf.padding;\n        let showWidth = vShow ? this._width - this._vScrollBar.width - padding[2] : this._width;\n        let showHeight = hShow ? this._height - this._hScrollBar.height - padding[3] : this._height;\n\n        this._tf.size(showWidth, showHeight);\n\n        if (this._vScrollBar) {\n            this._vScrollBar.x = this._width - this._vScrollBar.width - padding[2];\n            this._vScrollBar.y = padding[1];\n            this._vScrollBar.height = this._height - (hShow ? this._hScrollBar.height : 0) - padding[1] - padding[3];\n            this._vScrollBar.scrollSize = 1;\n            this._vScrollBar.thumbPercent = showHeight / Math.max(this._tf.textHeight, showHeight);\n            this._vScrollBar.setScroll(1, this._tf.maxScrollY, this._tf.scrollY);\n            this._vScrollBar.visible = vShow;\n        }\n        if (this._hScrollBar) {\n            this._hScrollBar.x = padding[0];\n            this._hScrollBar.y = this._height - this._hScrollBar.height - padding[3];\n            this._hScrollBar.width = this._width - (vShow ? this._vScrollBar.width : 0) - padding[0] - padding[2];\n            this._hScrollBar.scrollSize = Math.max(showWidth * 0.033, 1);\n            this._hScrollBar.thumbPercent = showWidth / Math.max(this._tf.textWidth, showWidth);\n            this._hScrollBar.setScroll(0, this.maxScrollX, this.scrollX);\n            this._hScrollBar.visible = hShow;\n        }\n    }\n\n    /**滚动到某个位置*/\n    scrollTo(y: number): void {\n        this.commitMeasure();\n        this._tf.scrollY = y;\n    }\n}","import { Graphics } from \"../display/Graphics\"\nimport { Sprite } from \"../display/Sprite\"\nimport { Text } from \"../display/Text\"\nimport { Event } from \"../events/Event\"\nimport { Rectangle } from \"../maths/Rectangle\"\nimport { UIComponent } from \"./UIComponent\"\nimport { UIEvent } from \"./UIEvent\"\nimport { Handler } from \"../utils/Handler\"\nimport { ILaya } from \"../../ILaya\";\n\n/**鼠标提示管理类*/\nexport class TipManager extends UIComponent {\n    static offsetX: number = 10;\n    static offsetY: number = 15;\n    static tipTextColor: string = \"#ffffff\";\n    static tipBackColor: string = \"#111111\";\n    static tipDelay: number = 200;\n    private _tipBox: UIComponent;\n    private _tipText: Text;\n    private _defaultTipHandler: Function;\n\n    constructor() {\n        super();\n        this._tipBox = new UIComponent();\n        this._tipBox.addChild(this._tipText = new Text());\n        this._tipText.x = this._tipText.y = 5;\n        this._tipText.color = TipManager.tipTextColor;\n        this._defaultTipHandler = this._showDefaultTip;\n        ILaya.stage.on(UIEvent.SHOW_TIP, this, this._onStageShowTip);\n        ILaya.stage.on(UIEvent.HIDE_TIP, this, this._onStageHideTip);\n        this.zOrder = 1100\n    }\n\n    /**\n     * @private\n     */\n    private _onStageHideTip(e: any): void {\n        ILaya.timer.clear(this, this._showTip);\n        this.closeAll();\n        this.removeSelf();\n    }\n\n    /**\n     * @private\n     */\n    private _onStageShowTip(data: any): void {\n        ILaya.timer.once(TipManager.tipDelay, this, this._showTip, [data], true);\n    }\n\n    /**\n     * @private\n     */\n    private _showTip(tip: any): void {\n        if (typeof (tip) == 'string') {\n            var text: string = String(tip);\n            if (Boolean(text)) {\n                this._defaultTipHandler(text);\n            }\n        } else if (tip instanceof Handler) {\n            ((<Handler>tip)).run();\n        } else if (tip instanceof Function) {\n            tip.apply();\n        }\n        if (true) {\n            ILaya.stage.on(Event.MOUSE_MOVE, this, this._onStageMouseMove);\n            ILaya.stage.on(Event.MOUSE_DOWN, this, this._onStageMouseDown);\n        }\n\n        this._onStageMouseMove(null);\n    }\n\n    /**\n     * @private\n     */\n    private _onStageMouseDown(e: Event): void {\n        this.closeAll();\n    }\n\n    /**\n     * @private\n     */\n    private _onStageMouseMove(e: Event): void {\n        this._showToStage(this, TipManager.offsetX, TipManager.offsetY);\n    }\n\n    /**\n     * @private\n     */\n    private _showToStage(dis: Sprite, offX: number = 0, offY: number = 0): void {\n        var rec: Rectangle = dis.getBounds();\n        dis.x = ILaya.stage.mouseX + offX;\n        dis.y = ILaya.stage.mouseY + offY;\n        if (dis._x + rec.width > ILaya.stage.width) {\n            dis.x -= rec.width + offX;\n        }\n        if (dis._y + rec.height > ILaya.stage.height) {\n            dis.y -= rec.height + offY;\n        }\n    }\n\n    /**关闭所有鼠标提示*/\n    closeAll(): void {\n        ILaya.timer.clear(this, this._showTip);\n        ILaya.stage.off(Event.MOUSE_MOVE, this, this._onStageMouseMove);\n        ILaya.stage.off(Event.MOUSE_DOWN, this, this._onStageMouseDown);\n        this.removeChildren();\n    }\n\n    /**\n     * 显示显示对象类型的tip\n     */\n    showDislayTip(tip: Sprite): void {\n        this.addChild(tip);\n        this._showToStage(this);\n        ILaya.stage.addChild(this);\n    }\n\n    /**\n     * @private\n     */\n    private _showDefaultTip(text: string): void {\n        this._tipText.text = text;\n        var g: Graphics = this._tipBox.graphics;\n        g.clear(true);\n        g.drawRect(0, 0, this._tipText.width + 10, this._tipText.height + 10, TipManager.tipBackColor);\n        this.addChild(this._tipBox);\n        this._showToStage(this);\n        ILaya.stage.addChild(this);\n    }\n\n    /**默认鼠标提示函数*/\n    get defaultTipHandler(): Function {\n        return this._defaultTipHandler;\n    }\n\n    set defaultTipHandler(value: Function) {\n        this._defaultTipHandler = value;\n    }\n}","import { Box } from \"./Box\";\nimport { List } from \"./List\";\nimport { ScrollBar } from \"./ScrollBar\";\nimport { Clip } from \"./Clip\";\nimport { Event } from \"../events/Event\"\nimport { Handler } from \"../utils/Handler\"\nimport { HideFlags } from \"../Const\";\nimport { XML } from \"../html/XML\";\n\n/**@private */\ninterface ITreeDataSource {\n    x: number;\n    hasChild: boolean;\n    isOpen: boolean;\n    isDirectory: boolean;\n}\n\n/**\n * 实例的 <code>selectedIndex</code> 属性发生变化时调度。\n * @eventType laya.events.Event\n */\n/*[Event(name = \"change\", type = \"laya.events.Event\")]*/\n/**\n * 节点打开关闭时触发。\n * @eventType laya.events.Event\n */\n/*[Event(name = \"open\", type = \"laya.events.Event\")]*/\n\n/**\n * <code>Tree</code> 控件使用户可以查看排列为可扩展树的层次结构数据。\n *\n * @example\n * package\n *\t{\n *\t\timport laya.ui.Tree;\n *\t\timport laya.utils.Browser;\n *\t\timport laya.utils.Handler;\n\t\n *\t\tpublic class Tree_Example\n *\t\t{\n\t\n *\t\t\tpublic function Tree_Example()\n *\t\t\t{\n *\t\t\t\tLaya.init(640, 800);\n *\t\t\t\tLaya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\n *\t\t\t\tLaya.loader.load([\"resource/ui/vscroll.png\", \"resource/ui/vscroll$bar.png\", \"resource/ui/vscroll$down.png\", \"resource/ui/vscroll$up.png\", \"resource/ui/clip_selectBox.png\", \"resource/ui/clip_tree_folder.png\", \"resource/ui/clip_tree_arrow.png\"], Handler.create(this, onLoadComplete));\n *\t\t\t}\n\t\n *\t\t\tprivate function onLoadComplete():void\n *\t\t\t{\n *\t\t\t\tvar xmlString:String;//创建一个xml字符串，用于存储树结构数据。\n *\t\t\t\txmlString = \"&lt;root&gt;&lt;item label='box1'&gt;&lt;abc label='child1'/&gt;&lt;abc label='child2'/&gt;&lt;abc label='child3'/&gt;&lt;abc label='child4'/&gt;&lt;abc label='child5'/&gt;&lt;/item&gt;&lt;item label='box2'&gt;&lt;abc label='child1'/&gt;&lt;abc label='child2'/&gt;&lt;abc label='child3'/&gt;&lt;abc label='child4'/&gt;&lt;/item&gt;&lt;/root&gt;\";\n *\t\t\t\tvar domParser:* = new Browser.window.DOMParser();//创建一个DOMParser实例domParser。\n *\t\t\t\tvar xml:* = domParser.parseFromString(xmlString, \"text/xml\");//解析xml字符。\n\t\n *\t\t\t\tvar tree:Tree = new Tree();//创建一个 Tree 类的实例对象 tree 。\n *\t\t\t\ttree.scrollBarSkin = \"resource/ui/vscroll.png\";//设置 tree 的皮肤。\n *\t\t\t\ttree.itemRender = Item;//设置 tree 的项渲染器。\n *\t\t\t\ttree.xml = xml;//设置 tree 的树结构数据。\n *\t\t\t\ttree.x = 100;//设置 tree 对象的属性 x 的值，用于控制 tree 对象的显示位置。\n *\t\t\t\ttree.y = 100;//设置 tree 对象的属性 y 的值，用于控制 tree 对象的显示位置。\n *\t\t\t\ttree.width = 200;//设置 tree 的宽度。\n *\t\t\t\ttree.height = 100;//设置 tree 的高度。\n *\t\t\t\tLaya.stage.addChild(tree);//将 tree 添加到显示列表。\n *\t\t\t}\n *\t\t}\n *\t}\n\t\n * import laya.ui.Box;\n * import laya.ui.Clip;\n * import laya.ui.Label;\n *\tclass Item extends Box\n *\t{\n *\t\tpublic function Item()\n *\t\t{\n *\t\t\tthis.name = \"render\";\n *\t\t\tthis.right = 0;\n *\t\t\tthis.left = 0;\n\t\n *\t\t\tvar selectBox:Clip = new Clip(\"resource/ui/clip_selectBox.png\", 1, 2);\n *\t\t\tselectBox.name = \"selectBox\";\n *\t\t\tselectBox.height = 24;\n *\t\t\tselectBox.x = 13;\n *\t\t\tselectBox.y = 0;\n *\t\t\tselectBox.left = 12;\n *\t\t\taddChild(selectBox);\n\t\n *\t\t\tvar folder:Clip = new Clip(\"resource/ui/clip_tree_folder.png\", 1, 3);\n *\t\t\tfolder.name = \"folder\";\n *\t\t\tfolder.x = 14;\n *\t\t\tfolder.y = 4;\n *\t\t\taddChild(folder);\n\t\n *\t\t\tvar label:Label = new Label(\"treeItem\");\n *\t\t\tlabel.name = \"label\";\n *\t\t\tlabel.color = \"#ffff00\";\n *\t\t\tlabel.width = 150;\n *\t\t\tlabel.height = 22;\n *\t\t\tlabel.x = 33;\n *\t\t\tlabel.y = 1;\n *\t\t\tlabel.left = 33;\n *\t\t\tlabel.right = 0;\n *\t\t\taddChild(label);\n\t\n *\t\t\tvar arrow:Clip = new Clip(\"resource/ui/clip_tree_arrow.png\", 1, 2);\n *\t\t\tarrow.name = \"arrow\";\n *\t\t\tarrow.x = 0;\n *\t\t\tarrow.y = 5;\n *\t\t\taddChild(arrow);\n *\t\t}\n *\t }\n * @example\n * Laya.init(640, 800);//设置游戏画布宽高、渲染模式\n * Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色\n * var res = [\"resource/ui/vscroll.png\", \"resource/ui/vscroll$bar.png\", \"resource/ui/vscroll$down.png\", \"resource/ui/vscroll$up.png\", \"resource/ui/clip_selectBox.png\", \"resource/ui/clip_tree_folder.png\", \"resource/ui/clip_tree_arrow.png\"];\n * Laya.loader.load(res, new laya.utils.Handler(this, onLoadComplete));\n * function onLoadComplete() {\n *     var xmlString;//创建一个xml字符串，用于存储树结构数据。\n *     xmlString = \"&lt;root&gt;&lt;item label='box1'&gt;&lt;abc label='child1'/&gt;&lt;abc label='child2'/&gt;&lt;abc label='child3'/&gt;&lt;abc label='child4'/&gt;&lt;abc label='child5'/&gt;&lt;/item&gt;&lt;item label='box2'&gt;&lt;abc label='child1'/&gt;&lt;abc label='child2'/&gt;&lt;abc label='child3'/&gt;&lt;abc label='child4'/&gt;&lt;/item&gt;&lt;/root&gt;\";\n *     var domParser = new laya.utils.Browser.window.DOMParser();//创建一个DOMParser实例domParser。\n *     var xml = domParser.parseFromString(xmlString, \"text/xml\");//解析xml字符。\n\t\n *     var tree = new laya.ui.Tree();//创建一个 Tree 类的实例对象 tree 。\n *     tree.scrollBarSkin = \"resource/ui/vscroll.png\";//设置 tree 的皮肤。\n *     tree.itemRender = mypackage.treeExample.Item;//设置 tree 的项渲染器。\n *     tree.xml = xml;//设置 tree 的树结构数据。\n *     tree.x = 100;//设置 tree 对象的属性 x 的值，用于控制 tree 对象的显示位置。\n *     tree.y = 100;//设置 tree 对象的属性 y 的值，用于控制 tree 对象的显示位置。\n *     tree.width = 200;//设置 tree 的宽度。\n *     tree.height = 100;//设置 tree 的高度。\n *     Laya.stage.addChild(tree);//将 tree 添加到显示列表。\n * }\n * (function (_super) {\n *     function Item() {\n *         Item.__super.call(this);//初始化父类。\n *         this.right = 0;\n *         this.left = 0;\n\t\n *         var selectBox = new laya.ui.Clip(\"resource/ui/clip_selectBox.png\", 1, 2);\n *         selectBox.name = \"selectBox\";//设置 selectBox 的name 为“selectBox”时，将被识别为树结构的项的背景。2帧：悬停时背景、选中时背景。\n *         selectBox.height = 24;\n *         selectBox.x = 13;\n *         selectBox.y = 0;\n *         selectBox.left = 12;\n *         this.addChild(selectBox);//需要使用this.访问父类的属性或方法。\n\t\n *         var folder = new laya.ui.Clip(\"resource/ui/clip_tree_folder.png\", 1, 3);\n *         folder.name = \"folder\";//设置 folder 的name 为“folder”时，将被识别为树结构的文件夹开启状态图表。2帧：折叠状态、打开状态。\n *         folder.x = 14;\n *         folder.y = 4;\n *         this.addChild(folder);\n\t\n *         var label = new laya.ui.Label(\"treeItem\");\n *         label.name = \"label\";//设置 label 的name 为“label”时，此值将用于树结构数据赋值。\n *         label.color = \"#ffff00\";\n *         label.width = 150;\n *         label.height = 22;\n *         label.x = 33;\n *         label.y = 1;\n *         label.left = 33;\n *         label.right = 0;\n *         this.addChild(label);\n\t\n *         var arrow = new laya.ui.Clip(\"resource/ui/clip_tree_arrow.png\", 1, 2);\n *         arrow.name = \"arrow\";//设置 arrow 的name 为“arrow”时，将被识别为树结构的文件夹开启状态图表。2帧：折叠状态、打开状态。\n *         arrow.x = 0;\n *         arrow.y = 5;\n *         this.addChild(arrow);\n *     };\n *     Laya.class(Item,\"mypackage.treeExample.Item\",_super);//注册类 Item 。\n * })(laya.ui.Box);\n * @example\n * import Tree = laya.ui.Tree;\n * import Browser = laya.utils.Browser;\n * import Handler = laya.utils.Handler;\n * class Tree_Example {\n\t\n *     constructor() {\n *         Laya.init(640, 800);\n *         Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\n *         Laya.loader.load([\"resource/ui/vscroll.png\", \"resource/ui/vscroll$bar.png\", \"resource/ui/vscroll$down.png\", \"resource/ui/vscroll$up.png\", \"resource/ui/vscroll$up.png\", \"resource/ui/clip_selectBox.png\", \"resource/ui/clip_tree_folder * . * png\", \"resource/ui/clip_tree_arrow.png\"], Handler.create(this, this.onLoadComplete));\n *     }\n *     private onLoadComplete(): void {\n *         var xmlString: String;//创建一个xml字符串，用于存储树结构数据。\n *         xmlString = \"&lt;root&gt;&lt;item label='box1'&gt;&lt;abc label='child1'/&gt;&lt;abc label='child2'/&gt;&lt;abc label='child3'/&gt;&lt;abc label='child4'/&gt;&lt;abc label='child5'/&gt;&lt;/item&gt;&lt;item label='box2'&gt;&lt;abc  * label='child1'/&gt;&lt;abc label='child2'/&gt;&lt;abc label='child3'/&gt;&lt;abc label='child4'/&gt;&lt;/item&gt;&lt;/root&gt;\";\n *         var domParser: any = new Browser.window.DOMParser();//创建一个DOMParser实例domParser。\n *         var xml: any = domParser.parseFromString(xmlString, \"text/xml\");//解析xml字符。\n\t\n *         var tree: Tree = new Tree();//创建一个 Tree 类的实例对象 tree 。\n *         tree.scrollBarSkin = \"resource/ui/vscroll.png\";//设置 tree 的皮肤。\n *         tree.itemRender = Item;//设置 tree 的项渲染器。\n *         tree.xml = xml;//设置 tree 的树结构数据。\n *         tree.x = 100;//设置 tree 对象的属性 x 的值，用于控制 tree 对象的显示位置。\n *         tree.y = 100;//设置 tree 对象的属性 y 的值，用于控制 tree 对象的显示位置。\n *         tree.width = 200;//设置 tree 的宽度。\n *         tree.height = 100;//设置 tree 的高度。\n *         Laya.stage.addChild(tree);//将 tree 添加到显示列表。\n *     }\n * }\n * import Box = laya.ui.Box;\n * import Clip = laya.ui.Clip;\n * import Label = laya.ui.Label;\n * class Item extends Box {\n *     constructor() {\n *         super();\n *         this.name = \"render\";\n *         this.right = 0;\n *         this.left = 0;\n *         var selectBox: Clip = new Clip(\"resource/ui/clip_selectBox.png\", 1, 2);\n *         selectBox.name = \"selectBox\";\n *         selectBox.height = 24;\n *         selectBox.x = 13;\n *         selectBox.y = 0;\n *         selectBox.left = 12;\n *         this.addChild(selectBox);\n\t\n *         var folder: Clip = new Clip(\"resource/ui/clip_tree_folder.png\", 1, 3);\n *         folder.name = \"folder\";\n *         folder.x = 14;\n *         folder.y = 4;\n *         this.addChild(folder);\n\t\n *         var label: Label = new Label(\"treeItem\");\n *         label.name = \"label\";\n *         label.color = \"#ffff00\";\n *         label.width = 150;\n *         label.height = 22;\n *         label.x = 33;\n *         label.y = 1;\n *         label.left = 33;\n *         label.right = 0;\n *         this.addChild(label);\n\t\n *         var arrow: Clip = new Clip(\"resource/ui/clip_tree_arrow.png\", 1, 2);\n *         arrow.name = \"arrow\";\n *         arrow.x = 0;\n *         arrow.y = 5;\n *         this.addChild(arrow);\n *     }\n * }\n */\nexport class Tree extends Box {\n    /**@private */\n    protected _list: List;\n    /**@private */\n    protected _source: any[];\n    /**@private */\n    protected _renderHandler: Handler;\n    /**@private */\n    protected _spaceLeft: number = 10;\n    /**@private */\n    protected _spaceBottom: number = 0;\n    /**@private */\n    protected _keepStatus: boolean = true;\n\n    /**\n     * 创建一个新的 <code>Tree</code> 类实例。\n     * <p>在 <code>Tree</code> 构造函数中设置属性width、height的值都为200。</p>\n     */\n    constructor() {\n        super();\n        this.width = this.height = 200;\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n    */\n    destroy(destroyChild: boolean = true): void {\n        super.destroy(destroyChild);\n        this._list && this._list.destroy(destroyChild);\n        this._list = null;\n        this._source = null;\n        this._renderHandler = null;\n    }\n    /**\n     * @override\n     */\n    protected createChildren(): void {\n        this._list = new List();\n        this._list.hideFlags = HideFlags.HideAndDontSave;\n        this._list.left = 0;\n        this._list.right = 0;\n        this._list.top = 0;\n        this._list.bottom = 0;\n        this._list._skinBaseUrl = this._skinBaseUrl;\n        this.addChild(this._list);\n        this._list.renderHandler = Handler.create(this, this.renderItem, null, false);\n        this._list.repeatX = 1;\n        this._list.on(Event.CHANGE, this, this.onListChange);\n    }\n\n    /**\n     * @private\n     * 此对象包含的<code>List</code>实例的<code>Event.CHANGE</code>事件侦听处理函数。\n     */\n    protected onListChange(e: Event = null): void {\n        this.event(Event.CHANGE);\n    }\n\n    /**\n     * 数据源发生变化后，是否保持之前打开状态，默认为true。\n     * <p><b>取值：</b>\n     * <li>true：保持之前打开状态。</li>\n     * <li>false：不保持之前打开状态。</li>\n     * </p>\n     */\n    get keepStatus(): boolean {\n        return this._keepStatus;\n    }\n\n    set keepStatus(value: boolean) {\n        this._keepStatus = value;\n    }\n\n    /**\n     * 列表数据源，只包含当前可视节点数据。\n     */\n    get array(): any[] {\n        return this._list.array;\n    }\n\n    set array(value: any[]) {\n        if (this._keepStatus && this._list.array && value) {\n            this.parseOpenStatus(this._list.array, value);\n        }\n        this._source = value;\n        this._list.array = this.getArray();\n    }\n\n    /**\n     * 数据源，全部节点数据。\n     */\n    get source(): any[] {\n        return this._source;\n    }\n\n    /**\n     * 此对象包含的<code>List</code>实例对象。\n     */\n    get list(): List {\n        return this._list;\n    }\n\n    /**\n     * 此对象包含的<code>List</code>实例的单元格渲染器。\n     * <p><b>取值：</b>\n     * <ol>\n     * <li>单元格类对象。</li>\n     * <li> UI 的 JSON 描述。</li>\n     * </ol></p>\n     * @implements\n     */\n    get itemRender(): any {\n        return this._list.itemRender;\n    }\n\n    set itemRender(value: any) {\n        this._list.itemRender = value;\n    }\n\n    /**\n     * 滚动条皮肤。\n     */\n    get scrollBarSkin(): string {\n        return this._list.vScrollBarSkin;\n    }\n\n    set scrollBarSkin(value: string) {\n        this._list.vScrollBarSkin = value;\n    }\n\n    /**滚动条*/\n    get scrollBar(): ScrollBar {\n        return this._list.scrollBar;\n    }\n\n    /**\n     * 单元格鼠标事件处理器。\n     * <p>默认返回参数（e:Event,index:int）。</p>\n     */\n    get mouseHandler(): Handler {\n        return this._list.mouseHandler;\n    }\n\n    set mouseHandler(value: Handler) {\n        this._list.mouseHandler = value;\n    }\n\n    /**\n     * <code>Tree</code> 实例的渲染处理器。\n     */\n    get renderHandler(): Handler {\n        return this._renderHandler;\n    }\n\n    set renderHandler(value: Handler) {\n        this._renderHandler = value;\n    }\n\n    /**\n     * 左侧缩进距离（以像素为单位）。\n     */\n    get spaceLeft(): number {\n        return this._spaceLeft;\n    }\n\n    set spaceLeft(value: number) {\n        this._spaceLeft = value;\n    }\n\n    /**\n     * 每一项之间的间隔距离（以像素为单位）。\n     */\n    get spaceBottom(): number {\n        return this._list.spaceY;\n    }\n\n    set spaceBottom(value: number) {\n        this._list.spaceY = value;\n    }\n\n    /**\n     * 表示当前选择的项索引。\n     */\n    get selectedIndex(): number {\n        return this._list.selectedIndex;\n    }\n\n    set selectedIndex(value: number) {\n        this._list.selectedIndex = value;\n    }\n\n    /**\n     * 当前选中的项对象的数据源。\n     */\n    get selectedItem(): any {\n        return this._list.selectedItem;\n    }\n\n    set selectedItem(value: any) {\n        this._list.selectedItem = value;\n    }\n\n    /**\n     * @private\n     * 获取数据源集合。\n     */\n    protected getArray(): any[] {\n        var arr: any[] = [];\n        for (let key in this._source) {//TODO TS\n            let item = this._source[key];\n            if (this.getParentOpenStatus(item)) {\n                item.x = this._spaceLeft * this.getDepth(item);\n                arr.push(item);\n            }\n        }\n        return arr;\n    }\n\n    /**\n     * @private\n     * 获取项对象的深度。\n     */\n    protected getDepth(item: any, num: number = 0): number {\n        if (item.nodeParent == null) return num;\n        else return this.getDepth(item.nodeParent, num + 1);\n    }\n\n    /**\n     * @private\n     * 获取项对象的上一级的打开状态。\n     */\n    protected getParentOpenStatus(item: any): boolean {\n        var parent: any = item.nodeParent;\n        if (parent == null) {\n            return true;\n        } else {\n            if (parent.isOpen) {\n                if (parent.nodeParent != null) return this.getParentOpenStatus(parent);\n                else return true;\n            } else {\n                return false;\n            }\n        }\n    }\n\n    /**\n     * @private\n     * 渲染一个项对象。\n     * @param cell 一个项对象。\n     * @param index 项的索引。\n     */\n    protected renderItem(cell: Box, index: number): void {\n        var item: ITreeDataSource = cell.dataSource;\n        if (item) {\n            cell.left = item.x;\n            var arrow = cell.getChildByName(\"arrow\") as Clip;\n            if (arrow) {\n                if (item.hasChild) {\n                    arrow.visible = true;\n                    arrow.index = item.isOpen ? 1 : 0;\n                    (<any>arrow).__cellIndex = index;\n                    arrow.off(Event.CLICK, this, this.onArrowClick);\n                    arrow.on(Event.CLICK, this, this.onArrowClick);\n                } else {\n                    arrow.visible = false;\n                }\n            }\n            var folder = cell.getChildByName(\"folder\") as Clip;\n            if (folder) {\n                if (folder.clipY == 2) {\n                    folder.index = item.isDirectory ? 0 : 1;\n                } else {\n                    folder.index = item.isDirectory ? item.isOpen ? 1 : 0 : 2;\n                }\n            }\n            this._renderHandler && this._renderHandler.runWith([cell, index]);\n        }\n    }\n\n    /**\n     * @private\n     */\n    private onArrowClick(e: Event): void {\n        var arrow = e.currentTarget;\n        var index = arrow.__cellIndex;\n        this._list.array[index].isOpen = !this._list.array[index].isOpen;\n        this.event(Event.OPEN);\n        this._list.array = this.getArray();\n    }\n\n    /**\n     * 设置指定项索引的项对象的打开状态。\n     * @param index 项索引。\n     * @param isOpen 是否处于打开状态。\n     */\n    setItemState(index: number, isOpen: boolean): void {\n        if (!this._list.array[index]) return;\n        this._list.array[index].isOpen = isOpen;\n        this._list.array = this.getArray();\n    }\n\n    /**\n     * 刷新项列表。\n     */\n    fresh(): void {\n        this._list.array = this.getArray();\n        this.repaint();\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n     */\n    set_dataSource(value: any) {\n        this._dataSource = value;\n        //if (value is XmlDom) xml = value as XmlDom;\n        super.set_dataSource(value);\n    }\n\n    /**\n     *  xml结构的数据源。\n     */\n    set xml(value: XML) {\n        var arr: any[] = [];\n        this.parseXml(value, arr, null, true);\n\n        this.array = arr;\n    }\n\n    /**\n     * @private\n     * 解析并处理XML类型的数据源。\n     */\n    protected parseXml(xml: XML, source: any[], nodeParent: any, isRoot: boolean): void {\n        var obj: any;\n        var list = xml.elements();\n        var childCount = list.length;\n        if (!isRoot) {\n            obj = {};\n            var list2 = xml.attributes;\n            for (let key in list2) {\n                var value = list2[key];\n                obj[key] = value == \"true\" ? true : value == \"false\" ? false : value;\n            }\n            obj.nodeParent = nodeParent;\n            if (childCount > 0) obj.isDirectory = true;\n            obj.hasChild = childCount > 0;\n            source.push(obj);\n        }\n        for (var i = 0; i < childCount; i++) {\n            var node = list[i];\n            this.parseXml(node, source, obj, false);\n        }\n    }\n\n    /**\n     * @private\n     * 处理数据项的打开状态。\n     */\n    protected parseOpenStatus(oldSource: any[], newSource: any[]): void {\n        for (var i = 0, n = newSource.length; i < n; i++) {\n            var newItem = newSource[i];\n            if (newItem.isDirectory) {\n                for (var j = 0, m = oldSource.length; j < m; j++) {\n                    var oldItem = oldSource[j];\n                    if (oldItem.isDirectory && this.isSameParent(oldItem, newItem) && newItem.label == oldItem.label) {\n                        newItem.isOpen = oldItem.isOpen;\n                        break;\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @private\n     * 判断两个项对象在树结构中的父节点是否相同。\n     * @param item1 项对象。\n     * @param item2 项对象。\n     * @return 如果父节点相同值为true，否则值为false。\n     */\n    protected isSameParent(item1: any, item2: any): boolean {\n        if (item1.nodeParent == null && item2.nodeParent == null) return true;\n        else if (item1.nodeParent == null || item2.nodeParent == null) return false\n        else {\n            if (item1.nodeParent.label == item2.nodeParent.label) return this.isSameParent(item1.nodeParent, item2.nodeParent);\n            else return false;\n        }\n    }\n\n    /**\n     * 表示选择的树节点项的<code>path</code>属性值。\n     */\n    get selectedPath(): string {\n        if (this._list.selectedItem) {\n            return this._list.selectedItem.path;\n        }\n        return null;\n    }\n\n    /**\n     * 更新项列表，显示指定键名的数据项。\n     * @param\tkey 键名。\n     */\n    filter(key: string): void {\n        if (Boolean(key)) {\n            var result: any[] = [];\n            this.getFilterSource(this._source, result, key);\n            this._list.array = result;\n        } else {\n            this._list.array = this.getArray();\n        }\n    }\n\n    /**\n     * @private\n     * 获取数据源中指定键名的值。\n     */\n    private getFilterSource(array: any[], result: any[], key: string): void {\n        key = key.toLocaleLowerCase();\n        for (let item of array) {\n            if (!item.isDirectory && String(item.label).toLowerCase().indexOf(key) > -1) {\n                item.x = 0;\n                result.push(item);\n            }\n            if (item.child && item.child.length > 0) {\n                this.getFilterSource(item.child, result, key);\n            }\n        }\n    }\n}\n","import { LayoutBox } from \"./LayoutBox\";\nimport { UIComponent } from \"./UIComponent\";\n\n/**\n     * <code>VBox</code> 是一个垂直布局容器类。\n     */\nexport class VBox extends LayoutBox {\n    /**\n     * 无对齐。\n     */\n    static NONE: string = \"none\";\n    /**\n     * 左对齐。\n     */\n    static LEFT: string = \"left\";\n    /**\n     * 居中对齐。\n     */\n    static CENTER: string = \"center\";\n    /**\n     * 右对齐。\n     */\n    static RIGHT: string = \"right\";\n\n    /** 兼容以前的changeItems逻辑，是否在发生变动时，使用 sortItem 排序所有item */\n    public isSortItem: boolean = false;\n\n    /**\n     * @override\n     */\n    _setWidth(value: number) {\n        super._setWidth(value);\n        this.callLater(this.changeItems);\n    }\n\n\n    /** \n     * @inheritDoc\t\n     * @override\n    */\n    protected changeItems(): void {\n        this._itemChanged = false;\n        let items: any[] = [];\n        let maxWidth = 0;\n\n        for (let i = 0, n = this.numChildren; i < n; i++) {\n            let item = (<UIComponent>this.getChildAt(i));\n            if (item) {\n                item.y = 0;\n                items.push(item);\n                maxWidth = this._isWidthSet ? this._width : Math.max(maxWidth, item.width * item.scaleX);\n            }\n        }\n        if (this.isSortItem) {\n            this.sortItem(items);\n        }\n        let top = 0;\n        for (let i = 0, n = items.length; i < n; i++) {\n            let item = items[i];\n            item.y = top;\n            top += item.height * item.scaleY + this._space;\n            if (this._align == VBox.LEFT) {\n                item.x = 0;\n            } else if (this._align == VBox.CENTER) {\n                item.x = (maxWidth - item.width * item.scaleX) * 0.5;\n            } else if (this._align == VBox.RIGHT) {\n                item.x = maxWidth - item.width * item.scaleX;\n            }\n        }\n        this._sizeChanged();\n    }\n}","/**\n * Morn UI Version 3.0 http://www.mornui.com/\n * Feedback yung http://weibo.com/newyung\n */\nimport { Node } from \"../display/Node\"\nimport { Sprite } from \"../display/Sprite\"\nimport { Box } from \"./Box\"\nimport { Handler } from \"../utils/Handler\"\n\n/**\n * <code>ViewStack</code> 类用于视图堆栈类，用于视图的显示等设置处理。\n */\nexport class ViewStack extends Box {\n    /**@private */\n    protected _items: any[];\n    /**@private */\n    protected _setIndexHandler: Handler = Handler.create(this, this.setIndex, null, false);\n    /**@private */\n    protected _selectedIndex: number;\n\n    constructor() {\n        super();\n\n        this._items = [];\n    }\n\n    /**\n     * 批量设置视图对象。\n     * @param views 视图对象数组。\n     */\n    setItems(views: any[]): void {\n        this.removeChildren();\n        var index: number = 0;\n        for (var i: number = 0, n: number = views.length; i < n; i++) {\n            var item: Node = views[i];\n            if (item) {\n                item.name = \"item\" + index;\n                this.addChild(item);\n                index++;\n            }\n        }\n        this.initItems();\n    }\n\n    /**\n     * 添加视图。\n     * 添加视图对象，并设置此视图对象的<code>name</code> 属性。\n     * @param view 需要添加的视图对象。\n     */\n    addItem(view: Node): void {\n        view.name = \"item\" + this._items.length;\n        this.addChild(view);\n        this.initItems();\n    }\n\n    onAfterDeserialize() {\n        super.onAfterDeserialize();\n        this.initItems();\n    }\n\n    /**@internal */\n    _afterInited(): void {\n        this.initItems();\n    }\n\n    /**\n     * 初始化视图对象集合。\n     */\n    initItems(): void {\n        this._items.length = 0;\n        for (var i: number = 0; i < 10000; i++) {\n            var item: Sprite = (<Sprite>this.getChildByName(\"item\" + i));\n            if (item == null) {\n                break;\n            }\n            this._items.push(item);\n            item.visible = (i == this._selectedIndex);\n        }\n    }\n\n    /**\n     * 表示当前视图索引。\n     */\n    get selectedIndex(): number {\n        return this._selectedIndex;\n    }\n\n    set selectedIndex(value: number) {\n        if (this._selectedIndex != value) {\n            this.setSelect(this._selectedIndex, false);\n            this._selectedIndex = value;\n            this.setSelect(this._selectedIndex, true);\n        }\n    }\n\n    /**\n     * @private\n     * 通过对象的索引设置项对象的 <code>selected</code> 属性值。\n     * @param index 需要设置的对象的索引。\n     * @param selected 表示对象的选中状态。\n     */\n    protected setSelect(index: number, selected: boolean): void {\n        if (this._items && index > -1 && index < this._items.length) {\n            this._items[index].visible = selected;\n        }\n    }\n\n    /**\n     * 获取或设置当前选择的项对象。\n     */\n    get selection(): Node {\n        return this._selectedIndex > -1 && this._selectedIndex < this._items.length ? this._items[this._selectedIndex] : null;\n    }\n\n    set selection(value: Node) {\n        this.selectedIndex = this._items.indexOf(value);\n    }\n\n    /**\n     *  索引设置处理器。\n     * <p>默认回调参数：index:int</p>\n     */\n    get setIndexHandler(): Handler {\n        return this._setIndexHandler;\n    }\n\n    set setIndexHandler(value: Handler) {\n        this._setIndexHandler = value;\n    }\n\n    /**\n     * @private\n     * 设置属性<code>selectedIndex</code>的值。\n     * @param index 选中项索引值。\n     */\n    protected setIndex(index: number): void {\n        this.selectedIndex = index;\n    }\n\n    /**\n     * 视图集合数组。\n     */\n    get items(): any[] {\n        return this._items;\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n    */\n    set_dataSource(value: any) {\n        this._dataSource = value;\n        if (typeof (value) == 'number' || typeof (value) == 'string') {\n            this.selectedIndex = parseInt(value as string);\n        } else {\n            for (var prop in this._dataSource) {\n                if (prop in this) {\n                    (this as any)[prop] = this._dataSource[prop];\n                }\n            }\n        }\n    }\n}","import { Slider } from \"./Slider\";\n\n/**\n * 使用 <code>VSlider</code> 控件，用户可以通过在滑块轨道的终点之间移动滑块来选择值。\n * <p> <code>VSlider</code> 控件采用垂直方向。滑块轨道从下往上扩展，而标签位于轨道的左右两侧。</p>\n *\n * @example <caption>以下示例代码，创建了一个 <code>VSlider</code> 实例。</caption>\n * package\n *\t{\n *\t\timport laya.ui.HSlider;\n *\t\timport laya.ui.VSlider;\n *\t\timport laya.utils.Handler;\n *\t\tpublic class VSlider_Example\n *\t\t{\n *\t\t\tprivate var vSlider:VSlider;\n *\t\t\tpublic function VSlider_Example()\n *\t\t\t{\n *\t\t\t\tLaya.init(640, 800);//设置游戏画布宽高。\n *\t\t\t\tLaya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\n *\t\t\t\tLaya.loader.load([\"resource/ui/vslider.png\", \"resource/ui/vslider$bar.png\"], Handler.create(this, onLoadComplete));//加载资源。\n *\t\t\t}\n *\t\t\tprivate function onLoadComplete():void\n *\t\t\t{\n *\t\t\t\tvSlider = new VSlider();//创建一个 VSlider 类的实例对象 vSlider 。\n *\t\t\t\tvSlider.skin = \"resource/ui/vslider.png\";//设置 vSlider 的皮肤。\n *\t\t\t\tvSlider.min = 0;//设置 vSlider 最低位置值。\n *\t\t\t\tvSlider.max = 10;//设置 vSlider 最高位置值。\n *\t\t\t\tvSlider.value = 2;//设置 vSlider 当前位置值。\n *\t\t\t\tvSlider.tick = 1;//设置 vSlider 刻度值。\n *\t\t\t\tvSlider.x = 100;//设置 vSlider 对象的属性 x 的值，用于控制 vSlider 对象的显示位置。\n *\t\t\t\tvSlider.y = 100;//设置 vSlider 对象的属性 y 的值，用于控制 vSlider 对象的显示位置。\n *\t\t\t\tvSlider.changeHandler = new Handler(this, onChange);//设置 vSlider 位置变化处理器。\n *\t\t\t\tLaya.stage.addChild(vSlider);//把 vSlider 添加到显示列表。\n *\t\t\t}\n *\t\t\tprivate function onChange(value:Number):void\n *\t\t\t{\n *\t\t\t\ttrace(\"滑块的位置： value=\" + value);\n *\t\t\t}\n *\t\t}\n *\t}\n * @example\n * Laya.init(640, 800);//设置游戏画布宽高\n * Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色\n * var vSlider;\n * Laya.loader.load([\"resource/ui/vslider.png\", \"resource/ui/vslider$bar.png\"], laya.utils.Handler.create(this, onLoadComplete));//加载资源。\n * function onLoadComplete() {\n *     vSlider = new laya.ui.VSlider();//创建一个 VSlider 类的实例对象 vSlider 。\n *     vSlider.skin = \"resource/ui/vslider.png\";//设置 vSlider 的皮肤。\n *     vSlider.min = 0;//设置 vSlider 最低位置值。\n *     vSlider.max = 10;//设置 vSlider 最高位置值。\n *     vSlider.value = 2;//设置 vSlider 当前位置值。\n *     vSlider.tick = 1;//设置 vSlider 刻度值。\n *     vSlider.x = 100;//设置 vSlider 对象的属性 x 的值，用于控制 vSlider 对象的显示位置。\n *     vSlider.y = 100;//设置 vSlider 对象的属性 y 的值，用于控制 vSlider 对象的显示位置。\n *     vSlider.changeHandler = new laya.utils.Handler(this, onChange);//设置 vSlider 位置变化处理器。\n *     Laya.stage.addChild(vSlider);//把 vSlider 添加到显示列表。\n * }\n * function onChange(value) {\n *     console.log(\"滑块的位置： value=\" + value);\n * }\n * @example\n * import HSlider = laya.ui.HSlider;\n * import VSlider = laya.ui.VSlider;\n * import Handler = laya.utils.Handler;\n * class VSlider_Example {\n *     private vSlider: VSlider;\n *     constructor() {\n *         Laya.init(640, 800);//设置游戏画布宽高。\n *         Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\n *         Laya.loader.load([\"resource/ui/vslider.png\", \"resource/ui/vslider$bar.png\"], Handler.create(this, this.onLoadComplete));//加载资源。\n *     }\n *     private onLoadComplete(): void {\n *         this.vSlider = new VSlider();//创建一个 VSlider 类的实例对象 vSlider 。\n *         this.vSlider.skin = \"resource/ui/vslider.png\";//设置 vSlider 的皮肤。\n *         this.vSlider.min = 0;//设置 vSlider 最低位置值。\n *         this.vSlider.max = 10;//设置 vSlider 最高位置值。\n *         this.vSlider.value = 2;//设置 vSlider 当前位置值。\n *         this.vSlider.tick = 1;//设置 vSlider 刻度值。\n *         this.vSlider.x = 100;//设置 vSlider 对象的属性 x 的值，用于控制 vSlider 对象的显示位置。\n *         this.vSlider.y = 100;//设置 vSlider 对象的属性 y 的值，用于控制 vSlider 对象的显示位置。\n *         this.vSlider.changeHandler = new Handler(this, this.onChange);//设置 vSlider 位置变化处理器。\n *         Laya.stage.addChild(this.vSlider);//把 vSlider 添加到显示列表。\n *     }\n *     private onChange(value: number): void {\n *         console.log(\"滑块的位置： value=\" + value);\n *     }\n * }\n * @see laya.ui.Slider\n */\nexport class VSlider extends Slider {\n\n}","import { UIComponent } from \"./UIComponent\";\nimport { Stage } from \"../display/Stage\";\nimport { Texture } from \"../resource/Texture\";\nimport { Texture2D } from \"../resource/Texture2D\";\nimport { TextureFormat } from \"../RenderEngine/RenderEnum/TextureFormat\";\nimport { ILaya } from \"../../ILaya\";\nimport { LayaEnv } from \"../../LayaEnv\";\nimport { Browser } from \"../utils/Browser\";\n\n/**\n * 微信开放数据展示组件，直接实例本组件，即可根据组件宽高，位置，以最优的方式显示开放域数据\n */\nexport class OpenDataContextView extends UIComponent {\n    private _fps: number = 30;\n\n    constructor() {\n        super();\n        this._width = this._height = 200;\n        let tex: Texture = new Texture(new Texture2D(this._width, this._height, TextureFormat.R8G8B8A8, false, false, true));\n        tex.bitmap.lock = true;\n        this.texture = tex;\n    }\n\n    get fps() {\n        return this._fps;\n    }\n\n    set fps(value: number) {\n        if (this._fps != value) {\n            this._fps = value;\n            if (LayaEnv.isPlaying && this.activeInHierarchy\n                && (window as any).wx && (window as any).sharedCanvas) {\n                ILaya.timer.clear(this, this._onLoop);\n                ILaya.timer.loop(1000 / value, this, this._onLoop);\n            }\n        }\n    }\n\n    /**\n     * @override\n     */\n    _onActive(): void {\n        if (!LayaEnv.isPlaying)\n            return;\n\n        if ((window as any).wx && (window as any).sharedCanvas)\n            ILaya.timer.loop(1000 / this._fps, this, this._onLoop);\n    }\n    /**\n     * @override\n     */\n    _onInActive(): void {\n        if (!LayaEnv.isPlaying)\n            return;\n\n        this.postMsg({ type: \"close\" });\n        ILaya.timer.clear(this, this._onLoop);\n    }\n\n    private _onLoop(): void {\n        let tex = this.texture;\n        let canvas: HTMLCanvasElement = (window as any).sharedCanvas;\n        if (tex.width != canvas.width || tex.height != canvas.height) {\n            tex.bitmap.destroy();\n            tex.bitmap = new Texture2D(canvas.width, canvas.height, TextureFormat.R8G8B8A8, false, false, true, true);\n            tex.bitmap.lock = true;\n        }\n\n        if (Browser.onMiniGame) {//小游戏保护\n            if ((canvas as any).toTempFilePath) {\n                (<Texture2D>tex.bitmap).setImageData(canvas, true, false);\n            }\n        }else\n            (<Texture2D>tex.bitmap).setImageData(canvas, true, false);\n    }\n\n    /**\n     * @override\n     */\n    _setWidth(value: number) {\n        super._setWidth(value);\n        if ((window as any).sharedCanvas) (window as any).sharedCanvas.width = value;\n        this.callLater(this.updateViewPort);\n    }\n\n    /**\n     * @override\n     */\n    _setHeight(value: number) {\n        super._setHeight(value);\n        if ((window as any).sharedCanvas) (window as any).sharedCanvas.height = value;\n        this.callLater(this.updateViewPort);\n    }\n\n    /**\n     * @override\n     */\n    set x(value: number) {\n        super.x = value;\n        this.callLater(this.updateViewPort);\n    }\n\n    /**\n     * @override\n     */\n    get x() {\n        return super.x;\n    }\n\n    /**\n     * @override\n     */\n    set y(value: number) {\n        super.y = value;\n        this.callLater(this.updateViewPort);\n    }\n\n    /**\n     * @override\n     */\n    get y() {\n        return super.y;\n    }\n\n    private updateViewPort(): void {\n        let stage: Stage = ILaya.stage;\n        let sx = stage._canvasTransform.getScaleX() * this.globalScaleX * stage.transform.getScaleX();\n        let sy = stage._canvasTransform.getScaleY() * this.globalScaleY * stage.transform.getScaleY();\n\n        this.postMsg({\n            type: \"updateViewPort\",\n            box: {\n                x: this.x * sx,\n                y: this.y * sy,\n                width: this.width * sx,\n                height: this.height * sy,\n            }\n        });\n    }\n\n    /**向开放数据域发送消息*/\n    postMsg(msg: any): void {\n        if ((window as any).wx && (window as any).wx.getOpenDataContext) {\n            var openDataContext: any = (window as any).wx.getOpenDataContext();\n            openDataContext.postMessage(msg);\n        }\n    }\n}","\nimport { Laya } from \"../../Laya\";\nimport { TextureFormat } from \"../RenderEngine/RenderEnum/TextureFormat\";\nimport { Sprite } from \"../display/Sprite\";\nimport { Text } from \"../display/Text\";\nimport { Event } from \"../events/Event\";\nimport { Loader } from \"../net/Loader\";\nimport { Texture2D } from \"../resource/Texture2D\";\nimport { CheckBox } from \"../ui/CheckBox\";\nimport { IStatUI, StatToggleUIParams, StatUIParams } from \"../utils/IStatUI\";\nimport { Stat } from \"../utils/Stat\";\n\nexport class StatUI implements IStatUI {\n    private _txt: Text;\n    private _sp: Sprite;\n    private _view: Array<StatUIParams>;\n    private _toggleView: Array<StatToggleUIParams>;\n    private _toggleSprite: Sprite;\n    private _checkBoxArray: Array<CheckBox>;\n    private _show = false;\n    private _showToggle = false;\n\n    /**\n     * @override\n     * 显示性能统计信息。\n     * @param\tx X轴显示位置。\n     * @param\ty Y轴显示位置。\n     */\n    show(x?: number, y?: number, views?: Array<StatUIParams>): void {\n        x = x || 0;\n        y = y || 0;\n        views = views || Stat.AllShow;\n\n        this._view = views;\n        this._show = true;\n\n        if (!this._sp)\n            this.createUI();\n        this._sp.pos(x, y);\n    }\n\n    showToggle(x?: number, y?: number, views?: Array<StatToggleUIParams>) {\n        x = x || 0;\n        y = y || 0;\n        views = views || Stat.AllToggle;\n\n        this._toggleView = views;\n        this._showToggle = true;\n\n        if (!this._toggleSprite)\n            this.createToggleUI();\n\n        Laya.stage.addChild(this._toggleSprite);\n        this._toggleSprite.pos(x, y);\n    }\n\n    /**\n    * @override\n    * 隐藏性能统计信息。\n    */\n    hide(): void {\n        this._show = false;\n        this._showToggle = false;\n        if (this._toggleSprite)\n            this._toggleSprite.removeSelf();\n    }\n\n    update(): void {\n        if (this._show) {\n            strArray.length = 0;\n            for (let i = 0; i < this._view.length; i++) {\n                let item: StatUIParams = this._view[i];\n                let isAverage: boolean = item.mode == \"average\";\n\n                let value: any = (Stat as any)[item.value];\n                (item.units == \"M\") && (value = Math.floor(value / (1024 * 1024) * 100) / 100);\n                (item.units == \"K\") && (value = Math.floor(value / (1024) * 100) / 100);\n\n                if (isAverage) {\n                    value /= Stat._count;\n                    value = Math.floor(value);\n                }\n\n                (item.units == \"M\") && (value += \"M\");\n                (item.units == \"K\") && (value += \"K\");\n\n                strArray.push(value);\n            }\n            this._txt.text = strArray.join(\"\\n\");\n        }\n\n        if (this._showToggle) {\n            for (let i = 0; i < this._toggleView.length; i++) {\n                let one = this._toggleView[i];\n                (Stat as any)[one.value] = this._checkBoxArray[i].selected;\n            }\n        }\n    }\n\n    private createUI(): void {\n        let sp: Sprite = this._sp = new Sprite();\n        sp.scale(Math.max(Laya.stage.clientScaleX, 1), Math.max(Laya.stage.clientScaleY, 1));\n        Laya.stage.on(Event.RESIZE, this, () => {\n            this._sp.scale(Math.max(Laya.stage.clientScaleX, 1), Math.max(Laya.stage.clientScaleY, 1));\n        });\n\n        let leftText = new Text();\n        leftText.pos(5, 5);\n        leftText.color = \"#ffffff\";\n        leftText.fontSize = fontSize;\n        sp.addChild(leftText);\n\n        strArray.length = 0;\n        for (let one of this._view)\n            strArray.push(one.title);\n        leftText.text = strArray.join(\"\\n\");\n\n        this._txt = new Text();\n        this._txt.pos(leftText.textWidth + 10, 5);\n        this._txt.color = \"#ffffff\";\n        this._txt.fontSize = fontSize;\n        sp.addChild(this._txt);\n\n        sp.size(leftText.textWidth + 100, leftText.textHeight + 10);\n        sp.graphics.clear();\n        sp.graphics.alpha(0.5);\n        sp.graphics.drawRect(0, 0, sp.width, sp.height, \"#999999\");\n        sp.graphics.alpha(2);\n    }\n\n    private createToggleUI(): void {\n        if (!checkBoxTex) {\n            let pixels = new Uint8Array(9);\n            pixels[0] = 255;\n            pixels[1] = 255;\n            pixels[2] = 255;\n            pixels[3] = 255;\n            pixels[4] = 255;\n            pixels[5] = 128;\n            pixels[6] = 128;\n            pixels[7] = 128;\n            pixels[8] = 0;\n            checkBoxTex = new Texture2D(1, 3, TextureFormat.R8G8B8, false, false);\n            checkBoxTex.setPixelsData(pixels, false, false);\n            checkBoxTex.lock = true;//锁住资源防止被资源管理释放\n            checkBoxTex.name = \"StatUICheckBox\";\n            Loader.cacheRes(checkBoxTex.name, checkBoxTex, Loader.TEXTURE2D);\n        }\n\n        let sp = this._toggleSprite = new Sprite();\n        sp.zOrder = 1000000;\n        let leftText = new Text();\n        leftText.pos(5, 5);\n        leftText.color = \"#ffffff\";\n        leftText.fontSize = fontSize;\n        sp.addChild(leftText);\n\n        leftText.text = Text._testWord;\n        let h = leftText.textHeight + leftText.leading;\n\n        strArray.length = 0;\n        for (let one of this._toggleView)\n            strArray.push(one.title);\n        leftText.text = strArray.join(\"\\n\");\n\n        let toggles = new Sprite();\n        toggles.pos(leftText.textWidth + 15, 5);\n        sp.addChild(toggles);\n\n        this._checkBoxArray = [];\n        for (let i = 0; i < this._toggleView.length; i++) {\n            let one = this._toggleView[i];\n\n            let cb = new CheckBox(checkBoxTex.name);\n            cb.selected = (Stat as any)[one.value];\n            cb.scale(12, 12);\n            cb.pos(0, i * h + 2);\n            cb.size(12, 12);\n            toggles.addChild(cb);\n            this._checkBoxArray.push(cb);\n        }\n\n        sp.size(leftText.textWidth + 40, leftText.textHeight + 10);\n        sp.graphics.clear();\n        sp.graphics.alpha(0.5);\n        sp.graphics.drawRect(0, 0, sp.width, sp.height, \"#999999\");\n        sp.graphics.alpha(2);\n    }\n\n    render(ctx: any, x: number, y: number) {\n        this._show && this._sp && this._sp.render(ctx, 0, 0);\n    }\n}\n\nconst fontSize: number = 16;\nconst strArray: Array<string> = [];\nvar checkBoxTex: Texture2D;","import { ClassUtils } from \"../utils/ClassUtils\";\nimport { AutoBitmap } from \"./AutoBitmap\";\nimport { Box } from \"./Box\";\nimport { Button } from \"./Button\";\nimport { CheckBox } from \"./CheckBox\";\nimport { Clip } from \"./Clip\";\nimport { ColorPicker } from \"./ColorPicker\";\nimport { ComboBox } from \"./ComboBox\";\nimport { Dialog } from \"./Dialog\";\nimport { DialogManager } from \"./DialogManager\";\nimport { FontClip } from \"./FontClip\";\nimport { HBox } from \"./HBox\";\nimport { HScrollBar } from \"./HScrollBar\";\nimport { HSlider } from \"./HSlider\";\nimport { Image } from \"./Image\";\nimport { Label } from \"./Label\";\nimport { LayoutBox } from \"./LayoutBox\";\nimport { List } from \"./List\";\nimport { Panel } from \"./Panel\";\nimport { ProgressBar } from \"./ProgressBar\";\nimport { Radio } from \"./Radio\";\nimport { RadioGroup } from \"./RadioGroup\";\nimport { ScaleBox } from \"./ScaleBox\";\nimport { ScrollBar } from \"./ScrollBar\";\nimport { Slider } from \"./Slider\";\nimport { Tab } from \"./Tab\";\nimport { TextArea } from \"./TextArea\";\nimport { TextInput } from \"./TextInput\";\nimport { TipManager } from \"./TipManager\";\nimport { Tree } from \"./Tree\";\nimport { UIComponent } from \"./UIComponent\";\nimport { UIGroup } from \"./UIGroup\";\nimport { UIUtils } from \"./UIUtils\";\nimport { VBox } from \"./VBox\";\nimport { View } from \"./View\";\nimport { ViewStack } from \"./ViewStack\";\nimport { VScrollBar } from \"./VScrollBar\";\nimport { VSlider } from \"./VSlider\";\nimport { OpenDataContextView } from \"./OpenDataContextView\";\nimport { StatUI } from \"./StatUI\";\nimport { Sprite } from \"../display/Sprite\";\nlet c = ClassUtils.regClass;\nc(\"AutoBitmap\", AutoBitmap);\nc(\"Box\", Box);\nc(\"Button\", Button);\nc(\"CheckBox\", CheckBox);\nc(\"Clip\", Clip);\nc(\"ColorPicker\", ColorPicker);\nc(\"ComboBox\", ComboBox);\nc(\"Dialog\", Dialog);\nc(\"DialogManager\", DialogManager);\nc(\"FontClip\", FontClip);\nc(\"HBox\", HBox);\nc(\"HScrollBar\", HScrollBar);\nc(\"HSlider\", HSlider);\nc(\"Image\", Image);\nc(\"Label\", Label);\nc(\"LayoutBox\", LayoutBox);\nc(\"List\", List);\nc(\"Panel\", Panel);\nc(\"ProgressBar\", ProgressBar);\nc(\"Radio\", Radio);\nc(\"RadioGroup\", RadioGroup);\nc(\"ScaleBox\", ScaleBox);\nc(\"ScrollBar\", ScrollBar);\nc(\"Slider\", Slider);\nc(\"Tab\", Tab);\nc(\"TextArea\", TextArea);\nc(\"TextInput\", TextInput);\nc(\"TipManager\", TipManager);\nc(\"Tree\", Tree);\nc(\"UIGroup\", UIGroup);\nc(\"UIUtils\", UIUtils);\nc(\"VBox\", VBox);\nc(\"View\", View);\nc(\"ViewStack\", ViewStack);\nc(\"VScrollBar\", VScrollBar);\nc(\"VSlider\", VSlider);\nc(\"UIComponent\", UIComponent);\n\nc(\"OpenDataContextView\", OpenDataContextView);\nc(\"StatUI\", StatUI);"],"mappings":"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"}