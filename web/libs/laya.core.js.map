{"version":3,"names":["ClassUtils","static","className","classDef","_classMap","compClass","getClass","console","warn","dummy","Config","isAntialias","useWebGL2","FPS","useRetinalCanvas","animationInterval","webGL2D_MeshAllocMaxMem","defaultFontSize","defaultFont","isAlpha","isDepth","isfailIfMajorPerformanceCaveat","powerPreference","premultipliedAlpha","isStencil","preserveDrawingBuffer","printWebglOrder","fontFamilyMap","fixedFrames","destroyResourceImmediatelyDefault","Const","ENUM_TEXTALIGN_DEFAULT","ENUM_TEXTALIGN_CENTER","ENUM_TEXTALIGN_RIGHT","BYTES_PE","BYTES_PIDX","MAX_CLIP_SIZE","NodeFlags","NOT_ACTIVE","ACTIVE_INHIERARCHY","AWAKED","NOT_READY","DISPLAY","HAS_ZORDER","HAS_MOUSE","DISPLAYED_INSTAGE","DRAWCALL_OPTIMIZE","PROCESS_COLLISIONS","PROCESS_TRIGGERS","HAS_SCRIPT","ESCAPE_DRAWING_TO_TEXTURE","DISABLE_INNER_CLIPPING","DISABLE_OUTER_CLIPPING","DISABLE_VISIBILITY","EDITING_NODE","HIDE_BY_EDITOR","LOCK_BY_EDITOR","HideFlags","HideInHierarchy","HideInInspector","DontSave","HideAndDontSave","ILaya","Loader","Context","Browser","Laya","loader","timer","systemTimer","physicsTimer","stage","LayaEnv","version","isPlaying","isPreview","isConch","window","conch","Pool","sign","_poolDic","length","item","POOLSIGN","getPoolBySign","push","instance","constructor","_$gid","recover","cla","_CLSID","cls","getItemByClass","_getClassSign","rst","pool","pop","createFun","caller","call","_gid","_pi","Math","PI","_pi2","Utils","angle","radian","color","isNaN","str","toString","value","indexOf","p1","p2","arr","substring","split","len","i","parseFloat","round","charAt","temp","parseInt","source","array","points","x","y","radix","result","path","lastIndexOf","ext","toLowerCase","j","k","ext2","newExt","excludeDot","Component","this","_hideFlags","_status","_enabled","_singleton","_id","getGID","_initialize","hideFlags","_extra","hasHideFlag","flag","id","enabled","owner","_setActive","activeInHierarchy","awaked","destroyed","_isScript","_resetComp","_enableState","_setOwner","node","_setBit","_onAdded","onAdded","_onAwake","_onEnable","onEnable","_onDisable","onDisable","_onDestroy","_parse","data","interactMap","_parseInteractive","spriteMap","_cloneTo","dest","runInEditor","onAwake","_a","_is3D","_scene","_componentDriver","add","setupScript","_b","remove","offAllCaller","destroy","_destroyComponent","_destroy","second","onDestroy","onReset","recoverByClass","_toDestroys","Matrix","a","b","c","d","tx","ty","nums","_bTransform","_createFun","_checkTransform","identity","setTranslate","translate","scale","rotate","cos","sin","a1","c1","tx1","skew","tanX","tan","tanY","b1","invertTransformPoint","out","d1","n","a2","b2","c2","d2","tx2","ty2","setTo","transformPoint","transformPointN","getScaleX","sqrt","getScaleY","invert","concat","matrix","m1","m2","aa","ab","ac","ad","atx","aty","ba","bb","bc","bd","btx","bty","scaleEx","rotateEx","clone","dec","create","copyTo","EMPTY","TEMP","Point","reset","distance","normalize","copy","point","Rectangle","width","height","right","bottom","copyFrom","contains","intersects","rect","intersection","max","min","union","addPoint","equals","_getBoundPoints","_temB","sp","_temA","pointList","minX","maxX","minY","maxY","tPoint","isEmpty","HDREncodeFormat","TextureFormat","LayaGL","Delegate","_flag","_items","callback","target","args","index","findIndex","once","splice","clear","forEach","clearForTarget","count","invoke","cnt","fixedArgs","err","error","Event","touchId","delta","button","touchPos","type","MOUSE_EVENTS","has","currentTarget","stopPropagation","_stopped","touches","_touches","altKey","nativeEvent","ctrlKey","shiftKey","metaKey","key","keyCode","charCode","code","keyLocation","location","stageX","stageY","MOUSE_DOWN","MOUSE_UP","RIGHT_MOUSE_DOWN","RIGHT_MOUSE_UP","CLICK","RIGHT_CLICK","MOUSE_MOVE","MOUSE_OVER","MOUSE_OUT","MOUSE_WHEEL","ROLL_OVER","ROLL_OUT","DOUBLE_CLICK","MOUSE_DRAG","MOUSE_DRAG_END","DRAG_START","DRAG_MOVE","DRAG_END","KEY_DOWN","KEY_PRESS","KEY_UP","CHANGE","CHANGED","WILL_RESIZE","RESIZE","ADDED","REMOVED","UNDISPLAY","ERROR","COMPLETE","LOADED","READY","PROGRESS","INPUT","RENDER","OPEN","MESSAGE","CLOSE","FRAME","ENTER","SELECT","BLUR","FOCUS","VISIBILITY_CHANGE","FOCUS_CHANGE","PLAYED","PAUSED","STOPPED","START","END","LINK","LABEL","FULL_SCREEN_CHANGE","DEVICE_LOST","TRANSFORM_CHANGED","LAYERCHANGE","staticMask","TRIGGER_ENTER","TRIGGER_STAY","TRIGGER_EXIT","COLLISION_ENTER","COLLISION_STAY","COLLISION_EXIT","JOINT_BREAK","_Add_Script","Set","eventPool","EventDispatcher","onStartListeningToType","hasListener","listeners","_events","event","ret","Array","isArray","undefined","ev","on","listener","arguments","off","offAll","FilterMode","RenderCapable","_idCounter","_disposingCounter","_clearRetry","Resource","managed","super","_cpuMemory","_gpuMemory","_referenceCount","_destroyed","_idResourcesMap","lock","destroyedImmediately","cpuMemory","gpuMemory","size","cpuSize","gpuSize","loading","frameLoop","_destroyUnusedResources","force","destroyCnt","res","DEBUG","debug","obsolute","_obsolute","referenceCount","_setCPUMemory","offsetValue","_addCPUMemory","_setGPUMemory","_addGPUMemory","_setCreateURL","url","uuid","isCreateFromURL","endsWith","_addReference","_removeReference","_clearReference","_recoverResource","_disposeResource","_activeResource","Object","getPrototypeOf","name","clearRes","BaseTexture","format","_gammaSpace","_width","_height","_format","hdrEncodeFormat","NONE","dimension","_dimension","mipmap","_texture","mipmapCount","anisoLevel","filterMode","wrapModeU","wrapU","wrapModeV","wrapV","wrapModeW","wrapW","compareMode","textureContext","setTextureCompareMode","gammaCorrection","baseMipmapLevel","maxMipmapLevel","gammaSpace","useSRGBLoad","gpuCompressFormat","R8G8B8","R8G8B8A8","R16G16B16","R16G16B16A16","R32G32B32","R32G32B32A32","R5G6B5","Alpha8","DXT1","DXT3","DXT5","ETC1RGB","ETC2RGB","ETC2RGBA","ETC2SRGB_Alpha8","ETC2SRGB","PVRTCRGB_2BPPV","PVRTCRGBA_2BPPV","PVRTCRGB_4BPPV","PVRTCRGBA_4BPPV","ASTC4x4","ASTC4x4SRGB","ASTC6x6","ASTC6x6SRGB","ASTC8x8","ASTC8x8SRGB","ASTC10x10","ASTC10x10SRGB","ASTC12x12","ASTC12x12SRGB","_getFormatByteCount","_getSource","resource","defaultTexture","dispose","Byte","_xd_","_allocated_","_pos_","_length","_u8d_","Uint8Array","_d_","DataView","buffer","byteLength","_resizeBuffer","_sysEndian","ArrayBuffer","setInt16","Int16Array","LITTLE_ENDIAN","BIG_ENDIAN","rstBuffer","slice","endian","floor","newByteView","set","subarray","getString","readString","_rUTF","getUint16","getFloat32Array","start","readFloat32Array","end","v","Float32Array","getUint8Array","readUint8Array","getInt16Array","readInt16Array","getFloat32","readFloat32","getFloat64","readFloat64","writeFloat32","_ensureWrite","setFloat32","writeFloat64","setFloat64","getInt32","readInt32","float","getUint32","readUint32","writeInt32","setInt32","writeUint32","setUint32","getInt16","readInt16","us","readUint16","writeUint16","setUint16","writeInt16","getUint8","readUint8","writeUint8","setUint8","_getUInt8","pos","_readUInt8","_getUint16","_readUint16","_getMatrix","_readMatrix","f","String","fromCharCode","u","strs","_code","_offset","_lead","_trail","join","getCustomString","readCustomString","ulen","bytesAvailable","__getBuffer","writeUTFBytes","sz","charCodeAt","writeByte","Number","_p1","_p2","_b1","_b2","_b3","_b4","writeUTFString","tPos","dPos","writeUTFString32","readUTFString","readUTFBytes","readUTFString32","getUTFString","lastBytes","getUTFBytes","setInt8","readByte","getInt8","getByte","lengthToEnsure","writeArrayBuffer","arraybuffer","offset","uint8array","readArrayBuffer","HalfFloatUtils","e","_baseTable","_shiftTable","_mantissaTable","m","_exponentTable","_offsetTable","num","_floatView","_uint32View","float16bits","_buffer","Uint32Array","FOURCC_DXT1","FOURCC_DXT3","FOURCC_DXT5","DDPF_LUMINANCE","DDSTextureInfo","isCube","bpp","blockBytes","dataOffset","compressed","sourceData","header","Int32Array","fourCC","isFourCC","isRGB","isLuminance","isCompressed","layaTexFormat","renderEngine","getCapable","COMPRESS_TEXTURE_S3TC","COMPRESS_TEXTURE_S3TC_SRGB","TextureDimension","GL_FORMAT_RGBA","GL_FORMAT_RGB","GL_DATATYPE_UNSIGNED_BYTE","KTXTextureInfo","compress","sRGB","bytesOfKeyValueData","headerOffset","glFormat","glInternalFormat","glType","glTypeSize","FileIdentifier","createKTX1Info","dataSize","BYTES_PER_ELEMENT","headerDataView","littleEndian","pixelWidth","pixelHeight","numberOfArrayElements","numberOfFaces","numberOfMipmapLevels","formatInfo","getLayaFormat","layaFormat","sRGBData","layaDemision","Tex2D","CubeArray","Cube","Texture2DArray","IdentifierByteSize","Texture2D","canRead","premultiplyAlpha","_canRead","createTextureInternal","pixels","grayTexture","setPixelsData","whiteTexture","blackTexture","TextureFormat_R16G16B16A16","floatPixle","Uint16Array","normalTexture","errorTexture","propertyParams","constructParams","pixelDataArrays","usePixelData","byte","texture","textureWidth","pixelDataLength","log","TextureFormat_R32G32B32A32","convertToNumber","imageSource","canread","srgb","pma","setImageData","setProperties","_nativeObj","_pixels","getImageData","canvas","context","drawImage","ddsInfo","getDDSTextureInfo","setDDSData","ktxInfo","getKTXTextureInfo","setKTXData","complete","load","TEXTURE2D","invertY","setTextureImageData","setTexturePixelsData","setSubPixelsData","xOffset","yOffset","mipmapLevel","generateMipmap","setTextureSubPixelsData","setTextureDDSData","setTextureKTXData","setHDRData","hdrInfo","setTextureHDRData","getPixels","Error","BaseShader","RenderState2D","mat","matArray","m4","EMPTYMAT4_ARRAY","TEMPMAT4_ARRAY","worldScissorTest","worldAlpha","RenderTargetFormat","RenderClearFlag","BlendFactor","_MAXSIZE","worldMatrix4","worldMatrix","matWVP","InvertY","Color","r","g","pow","equal","toFIxed","toLinear","gammaToLinearSpace","toGamma","linearToGammaSpace","cloneTo","destObject","destColor","setValue","fromArray","toArray","RED","GREEN","BLUE","CYAN","YELLOW","MAGENTA","GRAY","WHITE","BLACK","CLEAR","NativeRenderTexture2D","depthStencilFormat","DEPTH_16","_mgrKey","_colorFormat","_depthStencilFormat","_create","currentActive","_currentActive","getIsReady","sourceWidth","sourceHeight","offsetX","offsetY","samples","_start","_end","conchRenderTexture2D","_renderTarget","_textures","restore","getData","recycle","_clearColor","rtStack","defuv","flipyuv","RenderTexture2D","None","_invertY","_isCube","_samples","_generateMipmap","createRenderTargetInternal","rt","w","h","top","bindRenderTarget","bindoutScreenTarget","viewport","scissor","_lastRT","_lastWidth","_lastHeight","activeShader","unbindRenderTarget","clearRenderTexture","Depth","getRenderTextureData","_clearLinearColor","conchConfig","conchWebGL","WebGLRTMgr","dict","RenderStateContext","DepthTestCMD","createRenderStateComand","DepthMaskCMD","DepthFuncCMD","StencilTestCMD","StencilMaskCMD","StencilFuncCMD","stencilOpCMD","BlendCMD","BlendEquationCMD","BlendEquationSeparateCMD","BlendFuncCMD","BlendFuncSeperateCMD","CullFaceCMD","FrontFaceCMD","_GLRenderState","setDepthTest","setDepthMask","setDepthFunc","setStencilTest","setStencilMask","fun","ref","setStencilFunc","fail","zfail","zpass","setstencilOp","setBlend","blendEquation","setBlendEquation","blendEquationRGB","blendEquationAlpha","setBlendEquationSeparate","sFactor","dFactor","setBlendFunc","srcRGB","dstRGB","srcAlpha","dstAlpha","setBlendFuncSeperate","setCullFace","setFrontFace","stencilFuncArray","blendEquationSeparateArray","blenfunArray","blendFuncSeperateArray","stencilOpArray","BlendMode","fns","BlendNormal","BlendAdd","BlendMultiply","BlendScreen","BlendOverlay","BlendLight","BlendMask","BlendDestinationOut","BlendAddOld","BlendSourceAlpha","targetFns","BlendNormalTarget","BlendAddTarget","BlendMultiplyTarget","BlendScreenTarget","BlendOverlayTarget","BlendLightTarget","BlendAddTargetOld","One","OneMinusSourceAlpha","DestinationAlpha","DestinationColor","OneMinusSourceColor","Zero","SourceAlpha","activeBlendFunction","NAMES","TOINT","normal","multiply","screen","overlay","light","mask","lighter","lighter_old","add_old","NORMAL","MASK","LIGHTER","_rect1","_rect2","Texture","uv","uvrect","_w","_h","scaleRate","bitmap","outTexture","tex","btex","DEF_UV","dwidth","dheight","u1","v1","u2","v2","inAltasUVWidth","inAltasUVHeight","oriUV","moveUV","bitmapScale","texScaleRate","_uv","_bitmap","cb","recoverBitmap","Promise","resolve","then","bit","run","getTexturePixels","st","dst","tex2d","texw","texh","tex2dw","tex2dh","draww","drawh","marginL","marginT","rePosX","rePosY","wstride","pix","atlasPosX","atlasPosY","ctx","asBitmap","stu","stv","uk","vk","_drawTextureM","_targets","flush","dt","disposeBitmap","valid","getCachedClip","_clipCache","Map","get","createFromTexture","_sizeGrid","BlendEquationSeparate","BlendType","CompareFunction","CullMode","StencilOperation","NO_UV","INV_UV","AssetDb","uuidMap","shaderNameMap","metaMap","UUID_to_URL","UUID_to_URL_async","URL_to_UUID_async","resolveURL","onResolve","startsWith","inst","shaderName_to_URL","shaderName","shaderName_to_URL_async","getMeta","getSubAssetURL","subAssetName","subAssetExt","replaceFileExtension","URL","_url","formatURL","_path","getPath","rootPath","basePath","protocol","host","pathname","overrideExtension","base","url2","char1","customFormat","ver","basePaths","hasExtOverrides","extold","getFileExtension","overrideFileExts","parts","ofs","originalExts","targetExt","IncludeFile","txt","codes","funs","curUseID","funnames","script","begin","words","splitToWords","substr","block","word","ofs2","useFuns","getWith","getFunsScript","funsdef","ShaderNode","includefiles","childs","text","z","setParent","parent","setCondition","condition","conditionType","replace","__condition","toscript","def","_toscript","__id","ifdef","__noCompileEnable","noCompile","o","funsCode","file","_clearCR","RegExp","_splitToWordExps3","CullStateMap","Back","Front","Off","BlendStateMap","Disable","BLEND_DISABLE","All","BLEND_ENABLE_ALL","Seperate","BLEND_ENABLE_SEPERATE","BlendFactorMap","SourceColor","OneMinusDestinationColor","OneMinusDestinationAlpha","SourceAlphaSaturate","BlendColor","OneMinusBlendColor","BlendEquationMap","Add","ADD","Subtract","SUBTRACT","Reverse_substract","REVERSE_SUBTRACT","Min","MIN","Max","MAX","CompareFunctionMap","Never","Less","Equal","LessEqual","Greater","NotEqual","GreaterEqual","Always","StencilOperationMap","Keep","Replace","IncrementSaturate","DecrementSaturate","Invert","IncrementWrap","DecrementWrap","ShaderCompile","fileName","allowReplace","includes","vs","ps","vsNode","psNode","includeNames","defs","_compileToTree","inc","_loadIncludesDeep","toLoad","includesCnt","map","tc","files","codeName","preNode","fname","lines","src","match","IFDEF_YES","IFDEF_ELSE","includeFile","includeName","loadIncludeFileSync","obj","renderState","cull","blend","srcBlend","dstBlend","srcBlendRGB","dstBlendRGB","srcBlendAlpha","dstBlendAlpha","depthTest","depthWrite","stencilRef","stencilTest","stencilWrite","stencilOp","stencilFail","stencilZFail","stencilZPass","IFDEF_NO","IFDEF_PARENT","DefineDatas","_mask","_intersectionDefineDatas","define","unionMask","_index","maskStart","_value","endIndex","newValue","addDefineDatas","addMask","removeDefineDatas","removeMask","destDefineData","destMask","ShaderDefine","_texGammaDefine","ShaderVariant","shader","subShaderIndex","passIndex","defines","_subShaderIndex","_passIndex","_shader","defineNames","_defineNames","subShader","getSubShaderAt","pass","_passes","validDefine","_validDefine","defname","Shader3D","getDefineByName","_name","other","otherDefines","ShaderVariantCollection","_allCompiled","_variants","allCompiled","variantCount","variant","contatins","getByIndex","compile","variants","compileShaderByDefineNames","MathUtils3D","abs","zeroTolerance","n1","n2","isZero","MaxValue","MinValue","Deg2Rad","Vector2","nearEqual","writeTo","destVector2","s","forNativeElement","nativeElements","elements","rewriteNumProperty","proto","ZERO","ONE","TempVector2","Vector4","destVector4","t","ax","ay","az","aw","vector4","m4x4","vx","vy","vz","vw","me","lengthSquared","inverse","mineX","mineY","mineZ","mineW","maxeX","maxeY","maxeZ","maxeW","value1","value2","UnitX","UnitY","UnitZ","UnitW","tempVec4","Vector3","rotation","qx","qy","qz","qw","ix","iy","iz","iw","vector","transform","intermediate","_tempVector4","transformV3ToV4","vectorX","vectorY","vectorZ","transformElem","normalX","normalY","normalZ","coordinate","coordinateX","coordinateY","coordinateZ","bx","by","bz","vsub","vadd","dot","cross","destVector3","toDefault","_tempVector3","NegativeUnitX","ForwardRH","ForwardLH","Up","_DEFAULTELEMENTS","_tempV30","_tempV31","_tempV32","Matrix3x3","createElement","rotX","rotY","rotZ","rotW","xx","yy","zz","xy","zw","zx","yw","yz","xw","resultE","trans","rad","sou","souE","outE","left","l","l11","l12","l13","l21","l22","l23","l31","l32","l33","r11","r12","r13","r21","r22","r23","r31","r32","r33","cloneByArray","determinant","a00","a01","a02","a10","a11","a12","a20","a21","a22","b01","b11","b21","det","transpose","eye","up","subtract","v0","DEFAULT","Temp","TEMPVector30","TEMPVector31","TEMPVector32","TEMPVector33","_tempMatrix3x3","Quaternion","yaw","pitch","roll","halfRoll","halfPitch","halfYaw","sinRoll","cosRoll","sinPitch","cosPitch","sinYaw","cosYaw","lx","ly","lz","lw","rx","ry","rz","rw","axis","normalAxis","atan","from","asin","arcTanAngle","half","omega","cosom","sinom","scale0","scale1","bw","acos","amount","scaling","rotateX","rotateY","rotateZ","getYawPitchRoll","transformQuat","upe","angleTo","Matrix4x4","createRotationY","TEMPMatrix0","createRotationX","TEMPMatrix1","transformCoordinate","oe","a0","a3","invDot","forward","lookAt","rotationMatrix","forwardLookAt","lengthSq","matrix3x3","m11","m12","m13","m21","m22","m23","m31","m32","m33","NAN","NaN","_tempVector0","_tempVector1","_tempVector2","DEFAULTARRAY","m14","m24","m34","m41","m42","m43","m44","createFromYawPitchRoll","createRotationQuaternion","xz","rotationX","rotationY","rotationZ","rotationW","l14","l24","l34","l41","l42","l43","l44","r14","r24","r34","r41","r42","r43","r44","x2","y2","z2","yx","zy","wx","wy","wz","rot","sx","sy","oE","xaxis","yaxis","zaxis","fov","aspect","znear","zfar","yScale","halfWidth","halfHeight","createPerspectiveOffCenter","zRange","getElementByRowColumn","row","column","setElementByRowColumn","setRotation","setPosition","position","equalsOtherMatrix","decomposeTransRotScale","translation","_tempMatrix4x4","decomposeTransRotMatScale","createFromMatrix4x4","te","re","se","sX","sY","sZ","at","tempRight","decomposeYawPitchRoll","yawPitchRoll","atan2","ae","a03","a13","a23","a30","a31","a32","a33","b00","b02","b03","b04","b05","b06","b07","b08","b09","b10","objectPosition","cameraPosition","cameraUp","cameraForward","scalarLengthSquared","crosse","finale","diffee","obpose","mate","isIdentity","defined","num0","num1","v3","getTranslationVector","setTranslationVector","ve","getForward","setForward","getInvertFront","isInvert","DEFAULTINVERT","depth","createTexture3DInternal","_defaultTexture","Texture3D","sources","setTexture3DImageData","setTexture3DPixelsData","zOffset","setTexture3DSubPixelsData","ShaderDataType","UniformBufferParamsType","RenderParams","WrapMode","ShaderDataDefaultValue","Int","Bool","Float","ShaderData","ownerResource","_ownerResource","applyUBO","_data","_defineDatas","_initData","_uniformBufferDatas","_uniformBuffersMap","uniformBufferDatas","uniformBuffersMap","_addCheckUBO","ubo","uboData","uboBuffer","_uniformParamsState","setDataByUniformBufferData","_gammaColorMap","applyUBOData","addDefine","removeDefine","hasDefine","clearDefine","getBool","setBool","getInt","setInt","_setData","getNumber","setNumber","getVector2","setVector2","getVector3","setVector3","getVector","setVector","getColor","setColor","gammaColor","linearColor","getLinearColor","getMatrix4x4","setMatrix4x4","getMatrix3x3","setMatrix3x3","getBuffer","setBuffer","setTexture","lastValue","shaderDefine","getTexture","getSourceIndex","setValueData","getValueData","setUniformBuffer","getUniformBuffer","setShaderData","uniformIndex","TextureCube","Buffer","getShaderData","destData","clonecolor","v4","_cloneUBO","uboDatas","UnifromBufferData","uniformParamsStat","_createBuffer","_updateFlag","_resetUpdateFlag","dataPos","_layoutMap","_addUniformParams","_bytelength","ceil","_getArraySize","uniformID","offsetadd","posAdd","posG","Vector4Array","propertyIDToName","MatrixArray","paramsInfo","_getParamsInfo","_setUpdateFlag","_has","setNumberbyIndex","setVector2byIndex","setVector3byIndex","setVector4byIndex","setMatrixbyIndex","setVector4ArraybyIndex","setMatrixArraybyIndex","getbyteLength","setVector4Array","propertyNameToID","info","vec","setMatrixArray","setVector4","setColorbyIndex","setMatrix","ubd","ShaderProcessInfo","ShaderCompileDefineBase","compiledObj","_cacheShaderHierarchy","_cacheSharders","_owner","_VS","_PS","_defs","_resizeCacheShaderMap","cacheMap","hierarchy","resizeLength","withCompile","compileDefine","debugMaskLength","debugDefineString","_debugDefineString","debugDefineMask","_debugDefineMask","debugMode","cacheShaders","maskLength","maxEndIndex","subMask","subCacheShaders","cacheKey","defineString","_defineString","_getNamesByDefineData","shaderProcessInfo","is2D","attributeMap","_attributeMap","uniformMap","_uniformMap","renderOBJCreate","createShaderInstance","defStr","defMask","ShaderPass","_tags","statefirst","_renderState","createRenderState","setNull","_addDebugShaderVariantCollection","outDebugDefines","outDebugDefineMask","dbugShaderVariantInfo","_debugShaderVariantInfo","debugSubShader","debugShader","_subShaders","debugShaderVariantCollection","IS2d","_debugDefineStrings","_debugDefineMasks","_defineStrings","defCommonStr","spriteCommonNode","_configDefineValues","nodeCommonMap","VertexElement","elementFormat","elementUsage","_elementFormat","_elementUsage","VertexElementFormat","_elementInfos","single","getParams","FLOAT","vector2","vector3","byte4","UNSIGNED_BYTE","byte3","byte2","short2","UNSIGNED_SHORT","short4","normalizedshort2","normalizedshort4","halfvector2","halfvector4","nbyte4","BYTE","element","Single","Byte4","Byte3","Byte2","ByteOne","Short2","Short4","NormalizedShort2","NormalizedShort4","HalfVector2","HalfVector4","NorByte4","VertexDeclaration","vertexStride","vertexElements","_uniqueIDCounter","_vertexElementsDic","_vertexStride","_vertexElements","_VAElements","_shaderValues","vertexElement","elmentInfo","getElementInfos","stride","shaderLocation","vertexElementCount","getVertexElementByIndex","getVertexElementByUsage","usage","VertexMesh","instanceWorldMatrixDeclaration","MESH_WORLDMATRIX_ROW0","MESH_WORLDMATRIX_ROW1","MESH_WORLDMATRIX_ROW2","MESH_WORLDMATRIX_ROW3","instanceSimpleAnimatorDeclaration","MESH_SIMPLEANIMATOR","instanceLightMapScaleOffsetDeclaration","MESH_LIGHTMAPSCALEOFFSET","vertexFlag","compatible","verDec","_vertexDeclarationMap","subFlags","MESH_POSITION0","MESH_NORMAL0","MESH_COLOR0","MESH_TEXTURECOORDINATE0","MESH_TEXTURECOORDINATE1","MESH_BLENDWEIGHT0","MESH_BLENDINDICES0","MESH_TANGENT0","MESH_CUSTOME0","MESH_CUSTOME1","MESH_CUSTOME2","MESH_CUSTOME3","SubShader","DefaultAttributeMap","uniformDefaultValue","_uniformBufferDataMap","_flags","_uniformDefaultValue","_uniformTypeMap","blockUniformMap","uniformName","uniformType","ShaderDataTypeToUniformBufferType","blockUniformIndexMap","blockData","unifromType","textureGammaDefine","defaultValue","assign","IncludeUniformMap","setFlag","getFlag","addShaderPass","pipelineMode","_addShaderPass","shaderPass","_pipelineMode","_addIncludeUniform","includemap","ele","includeBindInfo","bindtypeMap","bindDefaultValue","shaderDataType","a_Position","a_Normal","a_Tangent0","a_Texcoord0","a_Texcoord1","a_Color","a_BoneWeights","a_BoneIndices","a_WorldMat","a_SimpleTextureParams","a_LightmapScaleOffset","enableInstancing","supportReflectionProbe","_enableInstancing","_supportReflectionProbe","_surportVolumetricGI","defineData","maskMap","_maskMap","subMaskMap","_defineMap","counter","_defineCounter","addInclude","find","compileDefineDatas","_compileDefineDatas","_preCompileShader","surportVolumetricGI","subshader","addSubShader","passDataArray","passData","VS","FS","pipeline","getRenderState","PERIOD_CUSTOM","PERIOD_MATERIAL","PERIOD_SPRITE","PERIOD_CAMERA","PERIOD_SCENE","_propertyNameMap","_propertyNameCounter","ShaderDefines2D","PRIMITIVE","FILTERGLOW","FILTERBLUR","FILTERCOLOR","COLORADD","WORLDMAT","FILLTEXTURE","MVP3D","GAMMASPACE","INVERTY","GAMMATEXTURE","TEXTURESHADER","PRIMITIVESHADER","initSprite2DCommandEncoder","UNIFORM_MMAT","UNIFORM_CLIPMATDIR","UNIFORM_CLIPMATPOS","UNIFORM_MMAT2","UNIFORM_SIZE","UNIFORM_CLIPOFF","UNIFORM_MVPMatrix","UNIFORM_SPRITETEXTURE","UNIFORM_STRENGTH_SIG2_2SIG2_GAUSS1","UNIFORM_BLURINFO","UNIFORM_COLORALPHA","UNIFORM_COLORMAT","UNIFORM_COLOR","UNIFORM_BLURINFO1","UNIFORM_BLURINFO2","UNIFORM_COLORADD","UNIFORM_TEXRANGE","commandUniform","createGlobalUniformMap","addShaderUniform","RenderInfo","loopStTm","loopCount","AtlasGrid","atlasID","_texCount","_rowInfo","_cells","_used","_init","addRect","pt","_get","_fill","_release","_clear","nWidth","nHeight","pCellBox","tm","nHeghit","_check","FontInfo","font","_family","_size","_italic","_bold","setFont","_lastFont","_lastFontInfo","_cache","_font","szpos","fpos","familys","RenderSpriteData","WordText","pagecharsCtx","_conchWordText","pageChars","scalex","scaley","setText","_text","cleanCache","chars","p","ri","splitRender","_splitRender","CharRenderInfo","char","deleted","orix","oriy","touchTick","isSpace","touch","curLoop","touchRect","ICharRender","fontsz","getWidth","canvasWidth","getCharBmp","lineWidth","colStr","strokeColStr","margin_left","margin_top","margin_right","margin_bottom","_window","win","doc","_document","document","userAgent","navigator","maxTouchPoints","platform","wxMiniGame","enable","tbMiniGame","aliPayMiniGame","isWXMiMi","ttMiniGame","biliMiniGame","qqMiniGame","hwMiniGame","bdMiniGame","miMiniGame","qgMiniGame","vvMiniGame","trace","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","bodyStyle","body","style","margin","overflow","metas","getElementsByTagName","viewportContent","meta","content","arr2","trim","appendChild","keys","onMobile","onIOS","onIPhone","onMac","onIPad","onAndroid","onWP","onQQBrowser","onMQQBrowser","onIE","ActiveXObject","onWeiXin","onSafari","onChrome","onPC","onFirefox","onEdge","onMiniGame","onBDMiniGame","onLayaRuntime","onQGMiniGame","onQQMiniGame","onBLMiniGame","onTTMiniGame","onHWMiniGame","onVVMiniGame","onKGMiniGame","onAlipayMiniGame","onTBMiniGame","PLATFORM_ANDROID","PLATFORM_IOS","PLATFORM_PC","_isMiniGame","__init__","getElementById","parentNode","removeChild","Date","now","clientWidth","_clientWidth","innerWidth","clientHeight","_clientHeight","innerHeight","documentElement","canvasRotation","pixelRatio","_pixelRatio","devicePixelRatio","container","_container","search","reg","unescape","__innerHeight","mainCanvas","hanzi","fontMap","measureText","isChinese","test","CharRender_Canvas","maxw","maxh","scalefont","useImageData","showdbg","lastScaleX","lastScaleY","maxTexW","maxTexH","scaleFontSize","showDbgInfo","supportImageData","getContext","willReadFrequently","setTransform","cri","getCharCanvas","clearW","clearH","clearRect","save","textBaseline","lineJoin","strokeStyle","strokeText","fillStyle","fillText","strokeRect","imgdt","bmpWidth","bmpHeight","textAlign","fillAndStrokeText","TextRender","fontSizeInfo","mapFont","fontID","fontScaleX","fontScaleY","_curStrPos","textAtlases","isoTextures","lastFont","fontSizeW","fontSizeH","fontSizeOffX","fontSizeOffY","renderPerChar","tmpAtlasPos","textureMem","bugIOS","miniadp","systemInfo","system","isWan1Wan","charRender","scaleFontWithCtx","textRenderInst","atlasWidth2","atlasWidth","getFontSizeInfo","offx","offy","fw","fh","standardFontSize","fontStr","getNextChar","state","filltext","strokeColor","parse","nTextAlign","_fast_filltext","getMatScaleX","getMatScaleY","maxFontScale","_italicDeg","wt","isWT","sameTexData","strWidth","hasFreedText","splitTex","forceSplitRender","curstr","stx","getCharRenderInfo","o1","texgen","genID","isotex","noAtlas","_drawResortedWords","startx","starty","samePagesData","isLastRender","_charSubmitCache","_enable","_curMat","pri","pisz","riSaved","drawTexAlign","_inner_drawTexture","txts","isoTexture","fid","atlas","charMaps","w1","TextTexture","getTextTexture","addChar","lineExt","imgdtRect","addBmpData","getAEmpty","TextAtlas","cleanAtlases","GC","destroyDt","destroyAtlasDt","totalUsedRateAtlas","curloop","maxWasteRateID","maxWasteRate","curatlas","curUsedCovRate","curUsedCovRateAtlas","waste","usedRate","lastTouchTm","showLog","destroyUnusedTextureDt","needGC","cleanMem","simClean","clean","checkBmpLine","ex","bmpData32","stpos","updateBbx","curbbx","onlyH","ey","minx","maxx","finfo","fontstr","szinfo","pixelBBX","tmpRI","bmpdt","sizeinfo","printDbgInfo","totalUsedRate","dtstr","_texW","_texH","showAtlas","bgcolor","Sprite","texttex","graphics","drawRect","drawTexture","addChild","filltext_native","useOldCharBook","forceWholeRender","checkCleanTextureDt","debugUV","texWidth","texHeight","atlasGridW","atlasgrid","setProtecteDist","discard","printDebugInfo","textureW","textureH","_discardTm","_glTexture","_render2DContext","render2DContext","recreateResource","_source","glTex","Bilinear","Clamp","fillWhite","addCharCanvas","u0","Uint8ClampedArray","canv","setTextureSubImageData","fill","setGlobalRepaint","curtm","cleanTm","poolLen","texw2","gridw2","drawOnScreen","Value2D","mainID","alpha","ALPHA","_cacheID","_mmat","_clipMatDir","_clipMatpos","_clipOff","textureHost","clipMatDir","clipMatPos","clipOff","_inClassCache","classT","_typeClass","globalShaderData","mainType","types","mmat","u_MvpMatrix","_textureHost","colorAdd","updateShaderData","renderstate2d","returnGamma","textrueReadGamma","Primitive","upload","material","_compileDefine","shaderIns","bind","uploadUniforms","_sprite2DUniformParamsMap","_sceneUniformParamsMap","_materialUniformParamsMap","shaderData","_defaultShader","setFilters","filters","typeDefine","action","release","SubmitKey","submitType","blendShader","copyFrom2","equal3_2","next","equal4_2","equal_3","SubmitCMD","_ref","_key","renderSubmit","apply","_this","getRenderType","releaseRender","POOL","thisobj","Filter","COLOR","GLOW","_filter","sprite","webglctx","_next","setColorFilter","_fun","svCP","tMatrix","tPadding","tHalfPadding","_cacheStyle","filterCache","getRepaint","_isHaveGlowFilter","getBounds","pivotX","pivotY","getSelfBounds","tSX","tSY","releaseRT","getRT","outRT","_getCacheStyle","pushRT","useRT","tX","tY","drawTarget","fil","_glRender","render","popRT","_drawRenderTexture","submit","addRenderObject","_COLOR_MAP","purple","orange","white","red","green","blue","black","yellow","gray","ColorUtils","arrColor","strColor","numColor","fromStringColor","toHexColor","_DEFAULT","_SAVE","_SAVE_SIZE","_initSaveMap","_initDefault","DELTA_INDEX","GRAY_MATRIX","IDENTITY_MATRIX","ColorFilter","_copyMatrix","_mat","_alpha","setByMatrix","mt","_matrix","adjustColor","brightness","contrast","saturation","hue","adjustHue","adjustContrast","adjustBrightness","adjustSaturation","_clampValue","_multiplyMatrix","x1","dx","col","_fixMatrix","val","limit","onAfterDeserialize","_color","_brightness","_contrast","_saturation","_hue","GrahamScan","p0","tempUse","_mPointList","getFrom","getFromR","pList","_getPoints","_tempPointList","_temPList","copyArray","pointListToPlist","scan","pListToPointList","PointSet","tmp","ch","_tmpDic","_temArr","dis","SpriteConst","RenderStatisticsInfo","BufferTargetType","BufferUsage","IndexFormat","TRANSFORM","BLEND","CANVAS","FILTERS","CLIP","STYLE","TEXTURE","GRAPHICS","LAYAGL3D","CUSTOM","ONECHILD","HITAREA","CHILDS","REPAINT_NONE","REPAINT_NODE","REPAINT_CACHE","REPAINT_ALL","Stat","views","checkUI","hide","_show","_currentShowArray","AllShow","_statUI","show","loop","_currentToggleArray","showToggle","_count","_timer","updateEngineData","delay","_fpsStr","renderSlow","update","trianglesFaces","getStatisticsInfo","Triangle","drawCall","DrawCall","instanceDrawCall","InstanceDrawCall","GPUMemory","textureMemory","TextureMemeory","renderTextureMemory","RenderTextureMemory","bufferMemory","BufferMemory","mode","clearStatisticsInfo","FPSStatUIParams","title","units","NodeStatUIParams","Sprite3DStatUIParams","TriangleFace","RenderNode","SkinRenderNode","ParticleRenderNode","FrustumCulling","UniformUpload","OpaqueDrawCall","TransDrawCall","DepthCastDrawCall","CMDDrawCall","BlitDrawCall","uploadUniformNum","memoryShow","renderShow","toogle_Shadow","toogle_MulLight","toogle_Light","toogle_Postprocess","toogle_AnimatorUpdate","toogle_PhysicsUpdate","toogle_Skin","toogle_Transparent","toogle_Particle","toogle_msaa","toogle_CameraCMD","toogle_Opaque","AllToggle","RenderModeToggle","RenderFuncToggle","spriteRenderUseCacheCount","canvasNormal","canvasBitmap","canvasReCache","spriteCount","sprite3DCount","renderNode","skinRenderNode","particleRenderNode","frustumCulling","uniformUpload","opaqueDrawCall","transDrawCall","depthCastDrawCall","cmdDrawCall","blitDrawCall","uploadUniform","enableShadow","enableMulLight","enableLight","enableCameraCMD","enablePostprocess","enableSkin","enableTransparent","enableParticle","enableAnimatorUpdate","enablePhysicsUpdate","enablemsaa","enableOpaque","SubmitBase","renderType","TYPE_2D","clipInfoID","_mesh","_blendFn","_renderType","_parent","_startIdx","_numEle","shaderValue","ID","RENDERBASE","getID","TYPE_CANVAS","TYPE_CMDSETRT","TYPE_CUSTOM","TYPE_BLURRT","TYPE_CMDDESTORYPRERT","TYPE_DISABLESTENCIL","TYPE_OTHERIBVB","TYPE_PRIMITIVE","TYPE_RT","TYPE_BLUR_RT","TYPE_TARGET","TYPE_CHANGE_VALUE","TYPE_SHAPE","TYPE_TEXTURE","TYPE_FILLTEXTURE","KEY_ONCE","KEY_FILLRECT","KEY_DRAWTEXTURE","KEY_VG","KEY_TRIANGLES","preRender","VertexAttributeLayout","vertexs","VAElements","attributeByteSize","instanceMode","vaelements","oneAttributeSize","vertexDeclaration","vdec","instanceBuffer","IPoint","_pool","layout","deepthEqaul","vaelemets","_vertexDeclaration","thisVaeEs","ii","nn","BufferState","_nativeVertexArrayObject","createVertexState","applyVertexBuffers","applyVertexBuffer","_vertexBuffers","applyIndexBuffers","applyIndexBuffer","_bindedIndexBuffer","applyState","vertexBuffers","indexBuffer","vertexlayout","getVertexLayoutByPool","unbind","unBind","bindVertexArray","_curBindedBufferState","unbindVertexArray","isbind","unbindVertexState","targetType","bufferUsageType","_byteLength","_glBuffer","createBuffer","_bufferType","_bufferUsage","bufferUsage","bindBuffer","unbindBuffer","IndexBuffer","_indexType","UInt16","_setIndexData","bufferOffset","curBufSta","setDataLength","setData","Buffer2D","_maxsize","_upload","_uploadSize","_bufferSize","_u8Array","constBuffer","bufferLength","setByteLength","needSize","old","needsz","_floatArray32","_bufferData","_checkArrayUse","buff","_uint32Array","_uint16Array","_bufferSubData","dataStart","dataLength","subBuffer","_bind_upload","_bind_subUpload","nsz","oldU8Arr","newbuffer","append","byteLen","appendU16Array","setNeedUpload","subUpload","scuess","FLOAT32","SHORT","IndexBuffer2D","Static","ELEMENT_ARRAY_BUFFER","buffer2D","_bindForVAO","destory","disposeResource","VertexBuffer","_instanceBuffer","VertexBuffer2D","ARRAY_BUFFER","appendArray","oldoff","deleteBuffer","Dynamic","Mesh2D","vballoc","iballoc","_stride","vertNum","indexNum","_applied","_quadNum","canReuse","_vb","_ib","createQuadIB","QuadNum","idx","curvert","setAttributes","attribs","_attribInfo","configVAO","_vao","useMesh","releaseMesh","clearVB","_gvaoid","MeshQuadTexture","const_stride","_fixattriInfo","_fixib","_maxIB","VertexDeclarition","mainctx","_POOL","addQuad","useTex","vb","vpos","vbdata","vbu32Arr","cpos","useTexVal","MeshTexture","addData","vertices","uvs","rgba","ib","vertsz","f32pos","ci","m00","m01","m10","vertN","stib","cidx","stibid","si","MeshVG","addVertAndIBToMesh","NativeWebGLCacheAsNormalCanvas","_context","_conchWebGLCacheAsNormalCanvas","startRec","endRec","isCacheValid","isTextNeedRestore","WebGLCacheAsNormalCanvas","submitStartPos","submitEndPos","submits","meshlist","cachedClipInfo","oldTx","oldTy","invMat","_globalClipMatrix","_incache","_submits","curm","getAMesh","_pathMesh","_triangleMesh","_curSubmit","_oldMesh","_oldPathMesh","_oldTriMesh","_oldMeshList","parsubmits","curclip","textNeedRestore","charRIs","flushsubmit","curSubmit","subm","releaseMem","matI","LayaGLQuickRunner","alpha_transform_drawLayaGL","alpha_drawLayaGL","transform_drawLayaGL","transform_drawNodes","alpha_transform_drawTexture","alpha_drawTexture","transform_drawTexture","drawLayaGL_drawNodes","_style","saveTransform","curMat","transformByMatrix","_isWidthSet","_isHeightSet","wRate","hRate","px","py","_getBit","restoreTransform","_needRepaint","globalAlpha","_graphics","_render","textLastRender","drawCallOptimize","drawingToTexture","_drawingToTexture","_children","_x","_y","visFlag","_visible","NativeFilter","drawTargetBlurFilter","strength","drawFilter","RenderSprite","NORENDER","_no","_transform","_blend","_canvas","_maskNative","_clip","_custom","_hitarea","_initRenderFun","onCreate","initRender","renders","_getTypeRender","tType","customRender","scrollRect","clipRect","hitArea","_hit","_unHit","enableCanvasRender","cacheAs","cacheNeedRebuild","isGlobalRepaint","_canvas_webgl_normal_repaint","_canvas_repaint","tRec","cacheRect","drawCanvas","scaleX","scaleY","scaleInfo","tCacheType","_calculateCacheRect","releaseContext","createContext","_applyFilters","staticCache","reCache","blendMode","globalCompositeOperation","preBlendMode","tRect","tmpRT","breakNextMerge","tmpTarget","shrink","getStyle","setBlendMode","recycleTarget","drawMask","drawMasked","drawMaskComposite","Bezier","_controlPoints","_calFun","getPoint2","_switchPoint","shift","p3","lineX","lineY","getPoint3","p4","insertPoints","dLen","getBezierPoints","inSertCount","RenderStateType","I","DrawStyle","_drawStyle","toInt","toColorStr","Path","_lastOriX","_lastOriY","paths","_curPath","beginPath","convex","renderPath","closePath","newPath","pointX","pointY","rp","SaveBase","namemap","_namemap","TYPE_ALPHA","TYPE_FILESTYLE","TYPE_FONT","TYPE_LINEWIDTH","TYPE_STROKESTYLE","TYPE_ENABLEMERGE","TYPE_MARK","TYPE_TRANSFORM","TYPE_TRANSLATE","TYPE_TEXTBASELINE","TYPE_TEXTALIGN","TYPE_GLOBALCOMPOSITEOPERATION","TYPE_SHADER","TYPE_FILTERS","TYPE_COLORFILTER","isSaveMark","_dataObj","_valueName","_newSubmit","dataObj","newSubmit","_saveMark","_saveuse","cache","_save","TYPE_CLIPRECT","TYPE_CLIPRECT_STENCIL","TYPE_IBVB","TYPE_FILTERS_TYPE","_createArray","SaveClipRect","_clipInfoID","_clipRect","incache","_clipInCache","SaveMark","_preSaveMark","no","SaveTransform","_savematrix","SaveTranslate","MeshTopology","CONTEXT2D_FUNCTION_ID","Shader2D","shaderType","textureShader","textureAttribute","primitiveShader","primitiveAttribute","a_position","a_attribColor","a_posuv","a_attribFlags","SkinMeshBuffer","addSkinMesh","skinMesh","getData2","BasePoly","indices","indexBase","outVertex","tempData","newlen","p1x","p1y","p2x","p2y","p3x","p3y","startIndex","vec2","getNormal","_setMiddleVertexs","y1","x3","y3","perpx","perpy","perp2x","perp2y","denom","dist","outvb","vbstride","outib","ptlen","dy","pointnum","tmpData","realPtNum","EarcutNode","prev","prevZ","nextZ","steiner","Earcut","holeIndices","dim","invSize","hasHoles","outerLen","outerNode","linkedList","triangles","eliminateHoles","earcutLinked","clockwise","last","signedArea","insertNode","removeNode","again","area","ear","indexCurve","stop","isEarHashed","isEar","cureLocalIntersections","splitEarcut","filterPoints","pointInTriangle","minTX","minTY","maxTX","maxTY","minZ","zOrder","maxZ","locallyInside","isValidDiagonal","splitPolygon","list","queue","getLeftmost","sort","compareX","eliminateHole","hole","findHoleBridge","hx","hy","Infinity","mx","my","tanMin","sortLinked","q","tail","numMerges","pSize","qSize","inSize","leftmost","cx","cy","intersectsPolygon","middleInside","q1","q2","inside","an","bp","sum","Submit","_tex","renderDrawContext","drawElements2DTemp","Triangles","_poolSize","mesh","sv","blendType","_nBlendType","_shader2D","numEle","SubmitCanvas","_matrix4","preAlpha","preMatrix4","preMatrix","preFilters","worldFilters","preWorldShaderDefines","worldShaderDefines","mout","mul","SubmitTarget","srcRT","_colorFiler","ft","colorMat","colorAlpha","SubmitTexture","CharSubmitCache","_ndata","_clipid","_clipMatrix","_imgId","imgid","getPos","__nPosPool","__posPool","colorFiler","_copyClipInfo","_drawCount","Config3D","customResolution","_resoluWidth","_resoluHeight","enableDynamicBatch","enableStaticBatch","enableUniformBufferObject","defaultCacheRTMemory","defaultPhysicsMemory","enableMultiLight","maxLightCount","lightClusterCount","maxMorphTargetCount","useBVHCull","BVH_max_SpatialCount","BVH_limit_size","BVH_Min_Build_nums","debugFrustumCulling","RenderTexture","colorFormat","depthFormat","multiSamples","generateDepthTexture","_inPool","_isCameraTarget","_generateDepthTexture","_multiSamples","_createRenderTarget","_configInstance","depthTexture","_poolMemory","bindCanvasRender","_bindCanvasRender","_depthStencilTexture","createRenderTextureInternal","setupRendertargetTextureAttachment","depthStencilTexture","recreate","readRenderTargetPixelData","NativeContext","_byteLen","_renderObject3DList","_tmpMatrix","_conchContext","_tempRenderTexture2D","isSyncToRenderThread","_idata","_fdata","_byteArray","bufferConchRef","webglPlus","createArrayBufferRef","ARRAY_BUFFER_TYPE_CMD","ARRAY_BUFFER_REF_REFERENCE","setSharedCommandBuffer","_need","flushCommand","lineCap","miterLimit","isMain","_target","add_i","keepRT","_deleteRT","const2DRenderCMD","cmd","addCMD","BlendEquation","BlendFunc","DepthTest","DepthMask","CullFace","FrontFace","applyCMD","set2DRenderConfig","add_i_String","SET_GLOBAL_COMPOSITE_OPERTAION","add_ii","FILL_STYLE","add_if","SAVE","RESTORE","add_iffffff","add_iffff","CLIP_RECT","add_iff","SCALE","checkTexture","add_iiffffffffffffi","DRAW_TEXTURE","drawTextureWithTransform","drawTextureWithSizeGrid","sizeGrid","gx","gy","repeat","add_iiffffffffiffffffffffi","DRAW_TEXTURE_SIZE_GRID","TRANSLATE","_rotate","ROTATE","_scale","_drawLine","fromX","fromY","toX","toY","lineColor","vid","add_iffffffif","DRAW_LINE","_drawLines","add_iffif_ab","DRAW_LINES","_drawCircle","radius","fillColor","add_ifffiiiif","DRAW_CIRCLE","_drawPie","startAngle","endAngle","add_ifffffiiiif","DRAW_PIE","_drawPoly","isConvexPolygon","add_iffiiiifi_ab","DRAW_POLY","fillRect","FILL_RECT","fillTexture","typeValue","add_iiffffiffi","FILL_TEXTURE","STROKE_STYLE","LINE_WIDTH","STROKE_RECT","_drawPath","brush","pen","BEGIN_PATH","MOVE_TO","LINE_TO","add_ifffff","ARC_TO","CLOSE_PATH","FILL","STROKE","drawCurves","DRAW_CURVES","drawCanvasNormal","drawCanvasBitmap","align","borderColor","add_iiiifff_String_String","FILL_WORDS","add_iiffiifi_String","FILL_WORD_TEXT","drawText","strokeWord","fillBorderText","filltext11","fontObj","underLine","drawTriangles","colorNum","add_iiifffffffff_ab_ab_ab","DRAW_TRANGLES","DRAW_MASKED","SET_AS_BITMAP","add_iii","SIZE","filter","addRenderObject3D","scene3D","cs","repaint","add_iffif","fdata","idata","add_iiffff","add_String","add_iffiiiifi","add_iiffiifi","strTobufer","add_iiiifff","str0","str1","ab0","ab1","add_iiifffffffff","arraybuffer0","arraybuffer1","arraybuffer2","nAlignLength0","getAlignLength","nAlignLength1","nAlignLength2","wab","nAlignLength","byteOffset","add_iif_ab","ARRAY_BUFFER_TYPE_DATA","ARRAY_BUFFER_REF_COPY","defaultClipMatrix","_drawTexToDrawTri_Vert","_drawTexToDrawTri_Index","_tempUV","_drawTriUseAbsMatrix","_COUNT","_other","_renderNextSubmitIndex","_renderCount","_submitKey","_transedPoints","_temp4Points","MAXCLIPRECT","_clipID_Gen","_lastMatScaleX","_lastMatScaleY","_lastMat_a","_lastMat_b","_lastMat_c","_lastMat_d","_lastTex","_fillColor","_flushCnt","defTexture","clearColor","_contextcount","_textRender","defTex2d","ContextParams","$transform","_drawRect","drawTexture2","args2","moveTo","lineTo","stroke","addPath","quadraticCurveTo","_fillAndStroke","arc","PI2","_drawEllipse","_drawRoundRect","lt","lb","rb","tPath","_getPath","HPI","startX","startY","arcTo","scissorTest","clearBG","_getSubmits","_releaseMem","Create","getFillColor","make","lastBlend","_fillRect","sameKey","isSameClipInfo","_MAXVERTNUM","transformQuad","clipedOff","drawstyle","mixRGBandAlpha","_fillTexture","callLater","_repaintSprite","texuvRect","offsetx","offsety","repeatx","repeaty","sty","edx","edy","edu","edv","_mixRGBandAlpha","arry","u_TexRange","drawTextures","colors","ipos","bmpid","submitDebugger","clipInfo","cm","cmp","_useNewTex2DSubmit","minVertNum","_drawTexRect","ops","lastRender","preKey","tv","tuv","transform4Points","ma","mb","mc","md","a4","a5","a6","a7","italicDeg","xoff","maxy","RTRestore","oldcomp","tmpMat","_flushToTarget","restoreTempArray","triMesh","webGLImg","_transformByMatrix","setTransformByMatrix","escape","miny","cmaxx","cmaxy","submitElement","renderList","getInstance","close","addVGSubmit","curEleNum","xp","yp","cpath","pi","faceNum","idxpos","fi","earcut","createShape","vertex","maxVertexNum","createLine2","ptnum","len1","ndx","ndy","dx2","dy2","len22","len2","ndx2","ndy2","odx","ody","olen","nOdx","nOdy","halfAng","ptx1","pty1","orilen","sinx","cosx","fda","SEGNUM","lastx","lasty","_x1","_y1","cvx","cvy","counterclockwise","minNum","ndivs","da","sr","cl","cpx","cpy","tArray","parameterLineWidth","hw","clip","drawParticle","_fillTexture_h","oriw","orih","du","uvr","tmpuv1","_fillTexture_v","dv","uvb","ox","oy","sw","sh","ow","oh","d_top","d_left","d_right","d_bottom","scale_x","scale_y","uvl","uvt","uvl_","uvt_","uvr_","uvb_","tuvr","tmpUVRect","_SUBMITVBSIZE","tmpUV","HTMLCanvas","createCanvas","_ctx","_setContext","contextID","getMemSize","toBase64","encoderOptions","conchToBase64FlipY","conchToBase64","toDataURL","toBase64Async","callBack","getDataAsync","base64","BoundsStyle","bounds","userBounds","temBM","CacheStyle","needBitmapCache","cacheForFilters","needEnableCanvasRender","userSetCache","getItem","releaseFilterCache","fc","maskParent","hasGlowFilter","CANVAS_EXTEND_EDGE","_scaleInfo","SpriteStyle","skewX","skewY","dragging","AlphaCmd","cmdID","DrawCircleCmd","percent","getBoundPoints","_getBoundPointS","regClass","DrawCurvesCmd","DrawImageCmd","DrawLineCmd","_tempPoints","DrawLinesCmd","DrawPathCmd","tCMD","DrawPieCmd","_startAngle","_endAngle","lineOffset","end1","ed","s1","s2","csr","DrawPolyCmd","DrawRectCmd","DrawTextureCmd","FillTextureCmd","RestoreCmd","RotateCmd","ScaleCmd","TransformCmd","TranslateCmd","DrawTrianglesCmd","vert","vnum","Draw9GridTextureCmd","EMPTY_SIZE_GRID","SaveCmd","_tempMatrix","_initMatrix","_tempMatrixArrays","GraphicsBounds","_cacheBoundsType","_temp","_rstBoundPoints","_bounds","realSize","_getWrapRec","_getCmdPoints","cmds","_sp","_affectBySize","matrixs","tempMatrix","_switchMatrix","addPointArrToRst","scanPList","tMatix","addPointToRst","_tempPoint","ClipRectCmd","DrawTexturesCmd","FillTextCmd","_strokeColor","_stroke","_align","_wordText","_fontObj","CacheManger","disposeFunction","getCacheListFunction","unRegCacheByFunction","tryDispose","getCacheList","_cacheList","waitTime","_checkLoop","cacheList","tTime","loopTimeLimit","VectorGraphManager","useDic","shapeDic","shapeLineDic","_checkKey","_freeIdArray","regCacheByFunction","startDispose","getId","addShape","shape","addLine","Line","getShape","deleteShape","endDispose","DrawEllipseCmd","DrawRoundRectCmd","Graphics","_renderEmpty","_cmds","_vectorgraphArray","_graphicBounds","_createData","propertyID","propertyKey","uniformtype","_clearData","_destroyData","recoverCmds","_repaint","_clearBoundsCache","onSizeChanged","_initGraphicBounds","_isOnlyOne","_renderOne","_renderAll","addCmd","removeCmd","_material","replaceTextColor","loadImage","getRes","drawLine","drawLines","drawRoundRect","drawCircle","drawEllipse","drawPie","toRadian","drawPoly","drawPath","draw9Grid","ARRAY_EMPTY","Node","_bits","is3D","_updateDisplayedInstage","_setUpNoticeChain","_setBitUp","bubbleEvent","_bubbleChainPool","destroyChild","destroyAllComponent","destroyChildren","removeChildren","_zOrder","getChildIndex","_childChanged","_setParent","addChildren","addChildAt","oldIndex","getChildByName","child","getChildAt","setChildIndex","removeChildAt","removeSelf","removeChildByName","beginIndex","replaceChild","newNode","oldNode","numChildren","isAncestorOf","displayedInStage","_displayChild","_onRemoved","_setDisplay","display","timerLoop","method","coverBefore","jumpFrame","timerOnce","frameOnce","clearTimer","runCallLater","scene","active","_activeChangeScripts","_processActive","_onActive","_onInActive","_onActiveInScene","EVENT_SET_ACTIVESCENE","_onInActiveInScene","EVENT_SET_IN_ACTIVESCENE","_setBelongScene","_setUnBelongScene","fromSetter","_activeHierarchy","_inActiveHierarchy","comp","activeChangeScripts","_components","parentScene","_addComponentInstance","_componentsChanged","srcRoot","dstRoot","destNode","destComponent","addComponent","addComponentInstance","component","getComponent","componentType","createByClass","components","getComponents","HALF_PI","Ease","bounceOut","bounceIn","Handler","runWith","unshift","Tween","gid","props","duration","ease","autoRecover","to","isTo","usePool","runNow","_duration","_ease","easeNone","_complete","_delay","_props","_usedTimer","_startTimer","_usedPool","_delayParam","$_GID","tweenMap","clearTween","firstStart","_initProps","_beginLoop","_doEase","_updateEase","time","usedTimer","ratio","prop","progress","uTime","runTimer","handler","restart","pause","dTime","setStartTime","startTime","tweens","tween","clearAll","_remove","resume","Dragging","maxOffset","_dragging","_clickOnly","hasInertia","elasticDistance","elasticBackTime","_elasticRateX","_elasticRateY","_lastX","mouseX","_lastY","mouseY","onStageMouseUp","tweenMove","_tween","backToArea","getMousePoint","_canvasTransform","_offsets","checkArea","_offsetX","_offsetY","checkElastic","sineOut","SpriteUtils","x0","y0","newLTPoint","newRBPoint","localToGlobal","getGlobalRecByPoints","coordinateSpace","globalTransform","getGlobalPosAndScale","canvasMatrix","canvasLeft","canvasTop","canvasDegree","clientScaleX","clientScaleY","domScaleX","domScaleY","perpendicular","dom","_fitLayaAirInitialized","transformOrigin","webKittransformOrigin","getTransformRelativeToWindow","webkitTransform","_anchorX","_anchorY","_mouseState","_tfChanged","_sizeFlag","_boundStyle","_ownGraphics","mouseThrough","autoSize","hitTestPrior","_globalDeltaFlages","_cacheGlobal","_globalPosx","_globalPosy","_globalRotate","_globalScalex","_globalScaley","updateZOrder","updateOrder","_getBoundsStyle","_setCustomRender","customRenderEnable","_setCacheAs","_checkCanvasEnable","tEnable","_setX","_setY","cacheGlobal","_setGlobalCacheFlag","Sprite_GlobalDeltaFlage_Position_X","Sprite_GlobalDeltaFlage_Matrix","_syncGlobalFlag","parentRepaint","Sprite_GlobalDeltaFlage_Position_Y","get_width","set_width","_setWidth","_setPivotX","_setTranformChange","_shouldRefreshLayout","get_height","set_height","_setHeight","_setPivotY","displayWidth","displayHeight","setSelfBounds","bound","_boundPointsToParent","_getBoundPointsM","ifRotate","pX","pY","transPointList","toParentPoint","getGraphicBounds","rec","chidren","cList","setStyle","set_scaleX","set_scaleY","Sprite_GlobalDeltaFlage_Scale_X","_setScaleX","get_scaleX","Sprite_GlobalDeltaFlage_Scale_Y","_setScaleY","get_scaleY","Sprite_GlobalDeltaFlage_Rotation","_setRotation","_setSkewX","_setSkewY","_createTransform","_adjustTransform","sskx","ssky","skx","sky","ssx","ssy","_setTransform","set_transform","get_transform","_getPivotX","_getPivotY","anchorX","get_anchorX","set_anchorX","anchorY","get_anchorY","set_anchorY","_setAlpha","_getAlpha","visible","get_visible","set_visible","setGraphics","transferOwnership","speedMode","pivot","drawToCanvas","canvasHeight","drawToTexture","drawToTexture3D","imgdata","ImageData","lineLen","srcoff","putImageData","drawtocanvCtx","texRT","rtex","createNewPoint","globalNode","globalToLocal","fromParentPoint","scroll","isMouseEvent","mouseEnabled","_onDisplay","_skinBaseUrl","_setMask","startDrag","stopDrag","hitTestPoint","_setTexture","recArr","_gcmds","_filters","getGlobalMatrix","_globalMatrix","_getGlobalCacheFlag","globalRotation","globalScaleX","globalScaleY","globalPosX","globalPosY","CustomMaterial","setGlobalPos","globalx","globaly","globalDeltaFlages","AnimationBase","wrapMode","_interval","_isReverse","_frameRateChanged","play","_isPlaying","_actionName","_getFrameByLabel","WRAP_REVERSE","interval","_frameLoop","label","_labels","_controlNode","WRAP_PINGPONG","_setControlNode","_resumePlay","addLabel","removeLabel","_removeLabelFromList","gotoAndStop","_displayToIndex","tArr","WRAP_POSITIVE","AtlasInfoManager","infoFile","fetch","addAtlases","dic","_fileLoadDic","prefix","frames","entry","atlasUrl","WorkerLoader","Worker","_worker","workerPath","onmessage","workerMessage","_dispatcher","options","postMessage","evt","imageBitmap","AtlasResource","dir","textures","BatchProgress","_callback","_weights","_progress","itemCount","createCallback","weight","np","ws","perc","ImgUtils","curVersion","needVersion","curVersionArr","needVersionArr","num2","isSupport","getSystemInfoSync","SDKVersion","compareVersion","Blob","arrayBuffer","newurl","createBufferURL","blob","createObjectURL","isSavaData","revokeBufferURL","revokeObjectURL","XMLUtils","aSource","sb","pos1","pos2","entity","attrs","attrName","defValue","XMLTagType","XMLIterator","lowerCaseName","sourceLen","parsePos","lastTagEnd","tagPos","tagLength","tagName","tagType","Start","attrParsed","lastTagName","CDATA","Comment","Instruction","End","singleQuoted","doubleQuoted","possibleEnd","Void","decodeString","trimEnd","attributes","_attrs","parseAttributes","valueStart","valueEnd","waitValue","quoted","attrEnd","prototype","XML","XmlString","getAttrString","getAttrInt","getAttrFloat","getFloat","getAttrBool","setAttribute","attrValue","getNode","selector","lastOpenNode","nodeStack","nextTag","childNode","getText","HttpRequest","_http","XMLHttpRequest","send","responseType","headers","_responseType","_urlEncode","http","open","setRequestHeader","JSON","stringify","restype","dataType","onerror","_onError","onabort","_onAbort","onprogress","_onProgress","onload","_onLoad","lengthComputable","loaded","total","status","statusText","responseURL","message","responseText","response","encodeURI","Downloader","httpRequestPool","common","originalUrl","contentType","onProgress","onComplete","getRequestInst","returnRequestInst","$ref","image","Image","crossOrigin","imageWithBlob","arrayBufferToURL","imageWithWorker","workerLoaderOptions","audio","oncanplaythrough","typeIdCounter","NullURLInfo","typeId","main","loaderType","retryNum","retryDelay","maxLoader","_loadings","_queue","_downloadings","exts","typeEntry","typeMap","extMap","arg1","arg2","arg3","priority","group","ignoreCache","useWorkerLoader","promise","dummyOptions","pd","promises","_load1","all","_load2","silent","warnFailed","getURLInfo","obsoluteRes","formattedUrl","groupMap","cacheRes","_getRes","loadingKey","task","initiator","atlasInfo","getFileLoadPath","ATLAS","baseUrl","loadTaskPool","LoadTask","obsoluteInst","assetLoader","_cacheRes","catch","delete","retryCnt","noRetry","queueToDownload","download","postFormatURL","preloadedContent","preLoadedMap","completeItem","downloader","extEntry","msg","resArr","loadedMap","urlInfo","checkObj","_clearRes","clearTextureRes","clearUnLoaded","cancelLoadByUrls","urls","cancelLoadByUrl","loadPackage","remoteUrl","tmpPath","_loadSubFileConfig","plat","tt","qg","_loadMiniPackage","mini","packName","reject","loadTask","loadSubpackage","success","onProgressUpdate","fileConfig","hash","indice","configs","config","addAtlas","TEXT","BUFFER","IMAGE","SOUND","VIDEO","FONT","TTF","HIERARCHY","MESH","MATERIAL","TEXTURECUBE","TEXTURE2DARRAY","ANIMATIONCLIP","TERRAINHEIGHTDATA","TERRAINRES","SPINE","MathUtil","Offset1","Offset2","Offset3","bigFirst","forceNum","_sortFun","sortNumBigFirst","sortBigFirst","sortNumSmallFirst","sortSmallFirst","FrameAnimation","_sortIndexFun","sortByKey","objpre","objnext","_setUp","targetDic","animationData","_targetDic","_animationData","frameRate","parsed","labels","_usedFrames","animationNewFrames","_calculateDatas","nodes","_displayNodeToFrame","frame","propFrames","funFrames","funkeys","tNode","_calculateKeyFrames","tKeyFrames","keyFrames","keyframes","initValues","isFun","_calculateNodePropFrames","resetNodes","_dealKeyFrame","_calculateFrameValues","keyFrame","startFrame","endFrame","easeFun","startValue","dValue","tweenMethod","linearNone","GraphicAnimation","_nodeIDAniDic","_parseNodeList","uiView","_nodeList","_nodeDefaultProps","compId","_calGraphicData","aniData","_createGraphicData","preGraphic","gList","animationDataNew","_createFrameGraphic","_gList","_rootMatrix","_updateNodeGraphic","_rootNode","parentTransfrom","tNodeG","tResultTransform","tTex","_nodeGDic","_getNodeGraphicData","resultTransform","tGraphicAlpha","skin","_getTextureByUrl","_updateNoChilds","tTransform","_updateNodeGraphic2","onlyTranslate","hasTrans","ifSave","getNodeDataByID","nodeID","_getParams","params","obj2","_temParam","_getObjVar","noValue","vArr","GraphicNode","frameData","_drawTextureCmd","aX","aY","_tempMt","setAniData","aniName","animations","tAniO","aniDic","anilist","frameO","animationList","animationDic","parseByData","rootNode","aniO","nodeRoot","setUpAniData","animationObject","_I","Animation","_autoPlay","_frames","_setFramesFromCache","showWarn","framesMap","parseAnimationByData","_copyLabels","loadAnimation","loadAtlas","loadImages","autoPlay","cacheName","createFrames","onLoaded","loadUrl","getAtlas","_loadAnimationData","parseAnimationData","defaultO","aniList","key2","images","BitmapFont","fontSize","autoScaleSize","tint","maxWidth","lineHeight","letterSpacing","parseFont","xml","paddingArray","padding","ct","advance","getTextWidth","getMaxWidth","getMaxHeight","EffectAnimation","EFFECT_BEGIN","_onOtherBegin","_addEvent","effect","playEvent","_playEvent","_onPlayAction","_recordInitData","_aniKeys","effectClass","classStr","_effectClass","uiData","effectData","tSecondFrame","secondFrames","TextStyle","bold","italic","underline","underlineColor","valign","alignItems","leading","HtmlElementType","HtmlElement","getAttr","setAttr","fetchAttributes","Text","HtmlImage","_element","objContainer","loadTexture","refreshLayout","HtmlLink","_shape","_rects","_rectCnt","resetArea","HtmlParseOptions","linkUnderline","defaultLinkUnderline","linkColor","defaultLinkColor","s_list1","s_list2","HtmlParser","_styleStack","_options","_elements","_styleStackTop","colorChanged","skipText","ignoreWhiteSpace","skipNextCR","appendText","pushStyle","popStyle","strikethrough","getAttribute","getFromPool","Link","LinkEnd","Input","Select","isNewLine","tf","equalStyle","defaultParser","classMap","UBBParser","_readPos","defaultImgWidth","defaultImgHeight","_handlers","onTag_URL","onTag_IMG","onTag_B","onTag_I","onTag_U","onTag_Simple","onTag_COLOR","onTag_FONT","onTag_SIZE","attr","getTagText","lastColor","lastSize","pos3","tag","repl","func","_overflow","VISIBLE","_singleCharRender","_prompt","_textWidth","_textHeight","_textStyle","_lines","_padding","_fontSizeScale","bitmapFont","_bitmapFonts","recoverLines","returnToPool","textWidth","_updatingLayout","drawBg","markChanged","textHeight","typeset","ignoreLang","langPacks","changeText","_realFont","_bitmapFont","family","set_color","_isChanged","wordWrap","_wordWrap","bgColor","_bgColor","_borderColor","singleCharRender","html","_html","ubb","_ubb","_maxWidth","htmlParseOptions","_htmlParseOptions","parseTemplate","template","_templateVars","templateVars","setVar","scrollX","_scrollPos","maxScrollX","renderText","scrollY","maxScrollY","_typeset","doLayout","_objContainer","_hideText","isPrompt","_onPostLayout","saveColor","normalizeCR","_parseEscapeChars","escapeCharsPattern","getReplaceStr","_asPassword","_passwordChar","_promptColor","rectWidth","ELLIPSIS","MAX_VALUE","curLine","lastCmd","charWidth","charHeight","rectHeight","bfont","buildLines","ctxFont","_ctxFont","mr","_testWord","line","wrapText","endLine","startLine","cmdPool","linkEnd","linePool","remainWidth","tw","maybeIndex","wordWidth","isEmoji","testEmoji","isEmojiChar","newLine","ccode","unicode","execResult","wordBoundaryTest","exec","calcTextSize","nw","nh","lastLine","htmlObj","SHRINK","low","high","cur","linesDeleted","done","ellipsisStr","SCROLL","HIDDEN","paddingLeft","paddingTop","scrollPos","clipped","curLink","linkStartX","lineCnt","lineClipped","thickness","_bgDrawCmd","RightToLeft","emojiTest","escapeSequence","_isFirstTouch","_tempRect","_rollOverChain","_rollOutChain","_inst","InputManager","_touchPool","_mouseTouch","TouchInfo","_pressKeys","_keyEvent","getTouch","touchTarget","_touchTarget","touchCount","clickCancelled","_stage","oncontextmenu","addEventListener","preventDefault","_touchInput","handleMouse","passive","isTextInputting","handleTouch","setPointerCapture","pointerId","releasePointerCapture","handleKeys","_eventType","_nativeEvent","pageX","clientX","pageY","clientY","mouseEventsEnabled","getNodeUnderPoint","_mouseMoveTime","move","downTargets","lastRollOver","handleRollOver","began","handleFocus","_c","_d","moved","clickTarget","clickTest","isDblClick","clickCount","deltaY","_e","changedTouches","uTouch","multiTouchEnabled","identifier","shouldCreate","focus","pre_input","new_input","nativeInput","multiline","keyEventsEnabled","getSpriteUnderPoint","getSprite3DUnderPoint","editing","hitTest","childEditing","isHit","clickTestThreshold","isiOSWKwebView","clickTrack","downPos","performance","lastClick","Render","mainCanv","_first","_startTm","_timeId","_Render","_mainCanvas","stamp","ifps","frm","lastFrm","_loop","_customRequestAnimationFrame","_loopFunction","fps","_onVisibilitychange","loopFun","customRenderEngine","engine","_customEngine","isVisibility","clearInterval","setInterval","_enterFrame","_rendercontex","_init_","TypedArrayClasses","Int8Array","Float64Array","_errors","_getNodeByRef","_getNodeData","SerializeUtil","outErrors","getNodeByRef","getNodeData","isDeserializing","_decodeObj","_$uuid","getResURLByUUID","getLoadTypeByEngineType","_$type","_$ref","typedArray","_$tmpl","childObj","overrideData","dataMap","od","_$override","_$parent","nodeData","overrideDataMap","_$id","children","_$child","cloneTree","comps","_$comp","visit","idPath","toWrite","arrayEquals","mergeData","compType","_$prefab","_$index","overrided","_multiline","_editable","_maxChars","_type","IOS_IFRAME","self","_onMouseDown","_onUnDisplay","_createInputElement","isTrue","_popupInputMethod","inputElement","_initInput","input","inputContainer","zIndex","setPos","cssText","resize","backgroundColor","border","outline","_processInputting","_stopEvent","setFontFace","fontFace","fontFamily","isAppUseNewInput","setFontSize","_restrictPattern","setSelection","selectionStart","selectionEnd","_syncInputTransform","inputWid","inputHei","setScale","setSize","select","_focus","_focusOut","_setInputMethod","_focusIn","scrollTop","blur","parentElement","direction","cssStyle","whiteSpace","_setPromptColor","readOnly","setType","setForbidEdit","maxLength","placeholder","_onKeyDown","setMultiAble","fontStyle","fontWeight","promptStyleDOM","head","innerText","miniGameTxt","setBgColor","restrict","_restrict","editable","maxChars","prompt","promptColor","TYPE_TEXT","TYPE_PASSWORD","TYPE_EMAIL","TYPE_URL","TYPE_NUMBER","TYPE_RANGE","TYPE_DATE","TYPE_MONTH","TYPE_WEEK","TYPE_TIME","TYPE_DATE_TIME","TYPE_DATE_TIME_LOCAL","TYPE_SEARCH","Widget","_top","_bottom","_left","_right","_centerX","_centerY","_onParentResize","resetLayoutX","resetLayoutY","flagX","flagY","resetLayout","centerX","centerY","_rect","_ptPoint","HitArea","_isHitGraphic","graphic","_isHitCmd","_ptInPolygon","areaPoints","nCross","hit","unHit","_hitCmds","_unHitCmds","WeakObject","_obj","_maps","supportWeakMap","delInterval","clearCache","del","Prefab","_deps","errors","json","LegacyUIParser","createByData","deps","addDep","onDepObsolute","addDeps","_listClass","_viewClass","HierarchyResource","PrefabImpl","api","root","runtime","clas","_viewCreated","_funMap","_runScript","tInitTool","InitTool","createComp","_idMap","tAni","_aniList","Scene","finish","view","initTool","getCompInstance","isList","_addGraphicsToSprite","_isDrawType","_addGraphicToSprite","tChild","addNodeRef","setCompValue","_afterInited","_sheet","one","watcher","DataWatcher","exe","_parseWatchData","key1","_parseKeyWord","_watchMap","notifer","changeData","pageData","_doAwake","innerUrls","addInnerUrl","loadList","loadList3D","check","customHandler","instanceHandler","createByJson","itemRender","Function","customProps","created","graphicO","_getGraphicsFromSprite","_addGraphicToGraphics","isChild","dataO","propsName","propsO","drawConfig","DrawTypeDic","_tM","_getPointListByStr","xPos","adptFun","_getTransformData","pointArr","Rect","Circle","Pie","FillTexture","FillText","Lines","Curves","Poly","getBindFun","_nodeRefList","_initList","tool","referStr","setNodeRef","tRefInfo","getReferData","tStr","list2","addInitItem","doInits","createChildren","autoDestroyAtClosed","_widget","uimap","loadScene","unDestroyedScenes","_loadPage","hideLoadingPage","createView","getNodeByID","closeOther","param","closeAll","_scene3D","onOpened","onClosed","_getWidget","_sizeChanged","freshLayout","_root","_scene2D","showLoadingPage","_onSceneLoaded","destroyUnusedResources","loadPage","_showLoading","_hideLoading","Timer","autoActive","currFrame","_delta","_map","gSysTimer","_update","currTimer","_getNowData","_lastTimer","awake","handlers","userFrame","exeTime","_clearHandlers","_recoverHandler","useFrame","_getHandler","TimerHandler","_indexHandler","cid","mid","$_TID","_mid","CallLater","clearCallLater","withClear","_laters","laters","LaterHandler","WebGL","isNativeRender_enable","RunDriver","changeWebGLSize","onStageResize","ComponentDriver","_onUpdates","_onLateUpdates","_onPreRenders","_onPostRenders","_toStarts","callStart","onStart","callUpdate","onUpdate","callLateUpdate","onLateUpdate","callPreRender","onPreRender","callPostRender","onPostRender","callDestroy","Stage","_frameRate","designWidth","designHeight","renderingEnabled","screenAdaptationEnabled","_screenMode","_scaleMode","_alignV","_alignH","_safariOffsetY","_frameStartTime","_previousOrientation","orientation","_wgColor","_scene3Ds","_globalRepaintSet","_globalRepaintGet","_needUpdateCanvasSize","_isFocused","_isVisibility","_isInputting","visibilityChange","hidden","mozHidden","msHidden","webkitHidden","getSafariToolbarOffset","updateCanvasSize","needUpdateCanvasSize","isFocused","setScreenSize","screenWidth","screenHeight","SCREEN_NONE","SCREEN_VERTICAL","SCREEN_HORIZONTAL","scaleMode","realWidth","realHeight","SCALE_NOSCALE","SCALE_SHOWALL","SCALE_NOBORDER","SCALE_FULL","SCALE_FIXED_WIDTH","SCALE_FIXED_HEIGHT","SCALE_FIXED_AUTO","SCALE_FIXED_AUTO_LAYAME","SCALE_FIXED_AUTO_LAYAVERSE","_formatData","ALIGN_LEFT","ALIGN_RIGHT","ALIGN_TOP","ALIGN_BOTTOM","_setStageStyle","canvasStyle","webkitTransformOrigin","msTransformOrigin","mozTransformOrigin","oTransformOrigin","msTransform","mozTransform","oTransform","setScreenSizeForScene","stageWidth","stageHeight","alignH","alignV","_setStyleBgColor","background","screenMode","getFrameTm","getTimeFromFrameStart","_setVisibleStyle","visibility","renderToNative","FRAME_SLEEP","_runComponents","_updateTimers","isFastMode","FRAME_MOUSE","FRAME_FAST","FRAME_SLOW","isDoubleLoop","fullScreenEnabled","requestFullscreen","fullScreenChanged","removeEventListener","exitFullscreen","mozCancelFullScreen","webkitExitFullscreen","_frameRateNative","setLimitFPS","setMouseFrame","setSlowFrame","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen","SCALE_EXACTFIT","ALIGN_CENTER","ALIGN_MIDDLE","BlurFilterGLRender","setShaderInfo","blurinfo","blurInfo","sigma","sigma2","strength_sig2_2sig2_gauss1","BlurFilter","getStrenth_sig2_2sig2_native","strength_sig2_native","GlowFilterGLRender","_sv_blurInfo1","u_blurInfo1","info2","_sv_blurInfo2","u_blurInfo2","svBlur","GlowFilter","offX","offY","getColorNative","_color_native","getBlurInfo1Native","_blurInof1_native","getBlurInfo2Native","_blurInof2_native","SoundChannel","isStopped","volume","completeHandler","__runComplete","AudioSoundChannel","_audio","_onEnd","__onEnd","__resumePlay","_src","loops","LayaEvent","currentTime","playbackRate","SoundManager","addChannel","removeChannel","AudioSound","_musicAudio","removeElement","autoReleaseSound","disposeSoundLater","readyState","_audioCache","clearBySign","_makeMusicOK","_bgMusic","_initMusicAudio","onErr","offs","tAd","cloneNode","channel","WebAudioSoundChannel","bufferSource","_currentTime","_volume","_startTime","_pauseTime","WebAudioSound","_onPlayEnd","__onPlayEnd","gain","_clearBufferSource","audioBuffer","createBufferSource","connect","disconnect","destination","onended","setTargetAtTime","SetTargetDelay","sourceNode","noteOff","_tryCleanFailed","_tryClearBuffer","_disposed","_miniBuffer","_unlocked","_playEmptySound","_unlock","_loaded","__playAfterLoaded","__toPlays","toPlays","tParams","supportWebAudio","initWebAudio","_soundClass","_musicClass","_channels","_lastSoundUsedTimeDic","_isCheckingDispose","_checkDisposeSound","hasCheck","disposeSoundIfNotUsed","destroySound","autoStopMusic","_stageOnBlur","_stageOnFocus","_visibilityChange","_autoStopMusic","_isActive","_musicChannel","_blurPaused","stopAllSound","_recoverWebAudio","muted","_muted","musicMuted","soundMuted","_soundMuted","_musicMuted","useAudioMusic","_useAudioMusic","soundClass","tSound","_soundCache","musicVolume","soundVolume","playSound","_setVolume","SoundNode","_onParentChange","_channel","isMusic","_isMusic","playMusic","_setPlayAction","tar","_setPlayActions","events","eventArr","_playEvents","_tar","_stopEvents","stopEvent","VideoTexture","videoWidth","videoHeight","_requestVideoFrame","_frameRender","_isLoaded","_needUpdate","immediatelyPlay","_listeningEvents","x5PlaysInline","playsInline","webkitPlaysInline","playsinline","autoplay","loadedmetadata","scope","updateVideo","requestVideoFrameCallback","isNeedUpdate","initVideoTextureData","childElementCount","firstChild","appendSource","sourceElement","extension","updateVideoTexture","frameRender","canPlayType","buffered","currentSrc","ended","paused","preload","seekable","seeking","videoEvents","VideoNode","_internalTex","_videoTexture","videoTexture","onVideoMetaLoaded","reload","detroyChildren","AnimatorPlayState2D","_currentState","_frontPlay","animatorState","_resetPlayState","clipDuration","_finish","_startPlayTime","_elapsedTime","_lastIsFront","_parentPlayTime","_playNum","_playAllTime","playTime","_normalizedPlayTime","AnimatorControllerLayer2D","_playStateInfo","_crossPlayStateInfo","_crossMark","_crossNodesOwnersCount","_crossNodesOwnersIndicesMap","_srcCrossClipNodeIndices","_destCrossClipNodeIndices","playOnWake","defaultWeight","blendingMode","BLENDINGMODE_OVERRIDE","_states","_playType","states","removeState","addState","defaultStateName","_defaultState","getStateByName","_defaultStateNameCatch","defaultState","_removeClip","clipStateInfos","_getReferenceCount","getCurrentPlayState","stateName","AniParmType","AniStateConditionType","AniStateConditionNumberCompressType","AnimatorUpdateMode","AniConditionType","TextResourceFormat","BLENDINGMODE_ADDTIVE","AnimatorControllerParse","layers","controllerLayers","clipsID","retobj","checkStates","enterName","clipState","enterState","checkNext","defName","checkDefault","nexts","soloTransitions","nState","getStateByID","conditions","checkConditions","animatorParams","parms","parm","checkValue","defState","Animator2D","_speed","_updateMode","Normal","_lowUpdateDelty","_controllerLayers","_parameters","controller","_controller","updateTo","parameters","speed","_updateStateFinish","playState","_eventExit","_setClipDatasToNode","stateInfo","additive","controllerLayer","realtimeDatas","_realtimeDatas","_nodes","getNodeByIndex","getOwner","_applyFloat","pro","ower","defVal","_ownerMap","property","ownerPathCount","ownPat","getOwnerPathByIndex","pobj","propertyCount","pname","getPropertyByIndex","classObj","_updateClipDatas","addtive","playStateInfo","curPlayTime","clipStart","currentFrameIndices","_currentFrameIndices","_evaluateClipDatasRealTime","_updatePlayer","elapsedTime","layerIndex","isReplay","clipEnd","lastElapsedTime","pAllTime","_lastElapsedTime","normalizedTime","yoyo","pTime","normalizedPlayTime","_eventStateUpdate","_applyTransition","_eventtransition","absTime","_eventLoop","_updateEventScript","_animationEvents","frontPlay","parentPlayTime","_eventScript","currPlayTime","scripts","eventName","layerindex","transition","crossFade","destState","transduration","transstartoffset","_applyUpdateMode","LowFrame","UnScaleTime","gotoAndStopByFrame","curPlayState","calclipduration","_eventStart","NEGATIVE_INFINITY","_checkEnterIndex","_enterTransition","defaultClip","getDefaultState","cycleOffset","islooping","addControllerLayer","controllderLayer","transitionDuration","layer","enterTransition","setParamsTrigger","Trigger","setParamsNumber","setParamsBool","getParamsvalue","AnimatorState2D","transitions","_scripts","_resetFrameIndices","EVENT_OnStateUpdate","onStateUpdate","animator","EVENT_OnStateEnter","setPlayScriptInfo","onStateEnter","EVENT_OnStateExit","onStateExit","EVENT_OnStateLoop","onStateLoop","normalizeTime","paramsMap","soloNums","transNums","addScript","getScript","getScripts","coms","KeyframeNode2D","_ownerPath","_propertys","_keyFrames","keyFramesCount","_setOwnerPathCount","_setOwnerPathByIndex","_setPropertyCount","_setPropertyByIndex","_setKeyframeCount","_joinOwnerPath","sep","_joinProperty","getKeyframeByIndex","Keyframe2D","Animation2DEvent","AnimationClip2DParse01","_DATA","_reader","_BLOCK","blockStarts","blockLengths","prePos","_strings","reader","_version","READ_DATA","READ_BLOCK","READ_STRINGS","blockName","fn","numList","numCount","nodeCount","nodesMap","_nodesMap","nodesDic","_nodesDic","setNodeByIndex","_indexInList","pathLength","nodePath","mapArray","propertyLength","fullPath","keyframeCount","timeToFrame","tweenType","tweenInfo","inTangent","outTangent","inWeight","outWeight","extend","eventCount","paramCount","addEvent","KeyframeNodeList2D","AnimationClip2D","playCurTime","realTimeCurrentFrameIndexes","outDatas","nextFrameIndex","frameIndex","isEnd","nextFarme","_getTweenVal","nextFrame","dur","tweenFun","poval","oval","hermiteInterpolate","hermiteCurveSplineWeight","_binarySearchEventIndex","midValue","frameValue","frametime","frameOutWeight","frameOutTangent","nextframeValue","nextframetime","nextframeInweight","nextframeIntangent","Eps","wt1","wt2","yp1","yp2","isFinite","wt2s","t2","fg","fpg","fppg","Linear","Quad_EaseIn","Quad_EaseOut","Quad_EaseInOut","Cubic_EaseIn","Cubic_EaseOut","Cubic_EaseInOut","Quart_EaseIn","Quart_EaseOut","Quart_EaseInOut","Quint_EaseIn","Quint_EaseOut","Quint_EaseInOut","Sine_EaseIn","Sine_EaseOut","Sine_EaseInOut","Expo_EaseIn","Expo_EaseOut","Expo_EaseInOut","Circ_EaseIn","Circ_EaseOut","Circ_EaseInOut","Elastic_EaseIn","Elastic_EaseOut","Elastic_EaseInOut","Back_EaseIn","Back_EaseOut","Back_EaseInOut","Bounce_EaseIn","Bounce_EaseOut","Bounce_EaseInOut","endValue","t3","Animation2DParm","Animation2DCondition","AnimatorStateCondition","conditionNameToID","_conditionNameMap","checkState","AnimatorStateNumberCondition","_numberValue","_numberCompareFlag","numberValue","compareFlag","AnimatorStateBoolCondition","_compareFlag","AnimatorStateTriggerCondition","AnimatorTransition2D","exitByTime","exitTime","mute","addCondition","removeCondition","con","AnimatorController2D","getLayers","lArr","acl","getState","createState","idCatch","defID","childStates","groupRet","setTransitions","setExitTransition","exitRet","pExitRet","ats","sts","linArr","ato","addConditions","solo","_getAnimatorTransition2D","pState","exitTransition","idk","Boolean","currLayer","setParm","Script","onTriggerEnter","onTriggerStay","onTriggerExit","onCollisionEnter","onCollisionStay","onCollisionExit","onJointBreak","onMouseDown","onMouseUp","onRightMouseDown","onRightMouseUp","onMouseMove","onMouseDrag","onMouseDragEnd","onMouseOver","onMouseOut","onMouseClick","onMouseDoubleClick","onMouseRightClick","onKeyDown","onKeyPress","onKeyUp","TextResource","registerLoader","Plain","toloadPics","folderPath","query","pics","pic","directory","subTextures","tPic","filename","spriteSourceSize","sourceSize","_stateNum","stateNum","errorList","HierarchyParser","inPrefab","prefabNodeDict","skinBaseUrl","bakedOverrideData","nodeMap","dataList","allNodes","outNodes","prefab","createNode","pstr","overrideData2","testId","findNodeInPrefab","_$runtime","outNodeData","nodeData2","topNode","compInitList","compData","decodeOptions","bakeOverrideData","applyOverrideData","decodeObj","_$var","_$preloads","HierarchyLoader","_$ver","_load","legacySceneOrPrefab","links","collectResourceLinks","resArray","HDRTextureInfo","decreaseX","decreaseY","getHDRInfo","readByteOffset","readLine","lineStr","getLineString","commandsMap","commands","resolutions","get_32_bit_rle_rgbe","dataIndex","rgbeBuffer","rgbeArray","pixelBuffer","pixelArray","scanlineLength","Ldexp","mantissa","exponent","readScanLine","scanlineArray","getc","wrong","readcolors","byter","byteg","byteb","bytee","pixelIndex","ldexp","setScanLineData","unnormalizedr","unnormalizedg","unnormalizedb","unnormalizede","olddreadcolors","rshift","scanIndex","lastIndex","color_color","clr","internalResources","HDRTEXTURE","propertyParams2d","constructParams2d","compressedFormats","videoFormats","wrapTex2D","tex2D","getBaseName","load2","fileIndex","platforms","fileInfo","readWrite","_parseDDS","_parseKTX","_parsePVR","_parseHDRTexture","_SimpleAnimatorTextureParse","img","needBitmap","ImageBitmap","createImageBitmap","bitmapimage","_parseImage","loadStates","NullLoader","picUrl","testString","fontName","registerFont","FontFace","fonts","fontTxt","txtWidth","textContent","checkComplete","RenderState","CULL_BACK","BLENDPARAM_ONE","BLENDPARAM_ZERO","BLENDEQUATION_ADD","DEPTHTEST_LEQUAL","STENCILTEST_OFF","STENCILOP_KEEP","STENCILOP_REPLACE","CULL_NONE","CULL_FRONT","BLENDPARAM_SRC_COLOR","BLENDPARAM_ONE_MINUS_SRC_COLOR","BLENDPARAM_DST_COLOR","BLENDPARAM_ONE_MINUS_DST_COLOR","BLENDPARAM_SRC_ALPHA","BLENDPARAM_ONE_MINUS_SRC_ALPHA","BLENDPARAM_DST_ALPHA","BLENDPARAM_ONE_MINUS_DST_ALPHA","BLENDPARAM_SRC_ALPHA_SATURATE","BLENDPARAM_BLENDCOLOR","BLENDPARAM_BLEND_ONEMINUS_COLOR","BLENDEQUATION_SUBTRACT","BLENDEQUATION_REVERSE_SUBTRACT","BLENDEQUATION_MIN","BLENDEQUATION_MAX","DEPTHTEST_OFF","DEPTHTEST_NEVER","DEPTHTEST_LESS","DEPTHTEST_EQUAL","DEPTHTEST_GREATER","DEPTHTEST_NOTEQUAL","DEPTHTEST_GEQUAL","DEPTHTEST_ALWAYS","STENCILTEST_NEVER","STENCILTEST_LESS","STENCILTEST_EQUAL","STENCILTEST_LEQUAL","STENCILTEST_GREATER","STENCILTEST_NOTEQUAL","STENCILTEST_GEQUAL","STENCILTEST_ALWAYS","STENCILOP_ZERO","STENCILOP_INCR","STENCILOP_INCR_WRAP","STENCILOP_DECR","STENCILOP_DECR_WRAP","STENCILOP_INVERT","Default","UniformBufferBase","pointer","_mapArray","_blockName","_singgle","_glPointerID","splitBuffer","UniformBufferObject","glPointer","isSingle","UNIFORM_BUFFER","_isSingle","_glPointer","_bindUniformBufferBase","bytelength","_Map","getUBOPointer","bufferBase","createUniformBufferObject","bindBufferBase","_bindBufferRange","byteCount","bindBufferRange","_reset","MAX_SAFE_INTEGER","subData","setDataEx","bufferData","_updateDataInfo","setDataByByUniformBufferDataOffset","datalength","reallength","_realByte","MaterialRenderMode","TextureCubeFace","UBONAME_SCENE","UBONAME_CAMERA","UBONAME_SPRITE3D","UBONAME_SHADOW","commonMap","Material","createShaderData","renderQueue","RENDERQUEUE_OPAQUE","alphaTest","blendSrc","blendDst","blendSrcRGB","blendDstRGB","blendSrcAlpha","blendDstAlpha","SHADERDEFINE_ALPHATEST","SHADERDEFINE_MAINTEXTURE","SHADERDEFINE_ADDTIVEFOG","ALPHATESTVALUE","CULL","BLEND_SRC","BLEND_DST","BLEND_SRC_RGB","BLEND_DST_RGB","BLEND_SRC_ALPHA","BLEND_DST_ALPHA","BLEND_EQUATION","BLEND_EQUATION_RGB","BLEND_EQUATION_ALPHA","DEPTH_TEST","DEPTH_WRITE","STENCIL_Ref","STENCIL_TEST","STENCIL_WRITE","STENCIL_Op","alphaTestValue","setDefine","MaterialProperty","propertyMap","shaderValues","MaterialDefine","shaderDefineArray","materialRenderMode","_matRenderNode","RENDERMODE_OPAQUE","RENDERMODE_CUTOUT","RENDERQUEUE_ALPHATEST","RENDERMODE_TRANSPARENT","RENDERQUEUE_TRANSPARENT","RENDERMODE_ADDTIVE","RENDERMODE_ALPHABLENDED","RENDERMODE_CUSTOME","_bindShaderInfo","shaderUBODatas","_releaseUBOData","values","effectiveProperty","setShaderName","_uniformBlock","applyUniformDefaultValue","getBoolByIndex","setBoolByIndex","getFloatByIndex","setFloatByIndex","setFloat","getIntByIndex","setIntByIndex","getVector2ByIndex","setVector2ByIndex","getVector3ByIndex","setVector3ByIndex","setVector4ByIndex","getVector4ByIndex","getVector4","getColorByIndex","setColorByIndex","getMatrix4x4ByIndex","setMatrix4x4ByIndex","getMatrix3x3ByIndex","setMatrix3x3ByIndex","setTextureByIndex","reSetTexture","getTextureByIndex","getBufferByIndex","setBufferByIndex","setShaderDataByIndex","getShaderDataByIndex","destBaseMaterial","setShaderPropertyValue","getShaderPropertyValue","oldparseEndEvent","MaterialParser","parseLegacy","getBaseTexture","uniName","vectorValue","matrix3","matrix4","tex2DPath","jsonData","classType","vectors","renderStateData","_getRenderStateParams","collectLinks","shaderPath","ParseJSON","parseStart","fstr","cobj","currArr","numVal","currStr","formatVal","finCurrObj","cNext","cstr","finCurrStr","pcobj","DEFAULT_PIXELS","_blackTexture","_grayTexture","_whiteTexture","_errorTexture","writeTexture","every","setCubePixelsData","setCubeImageData","updateSubPixelsData","setCubeSubPixelData","setCubeDDSData","setCubeKTXData","CGBlock","shaderBlock","shaderDataOBJ","ShaderParser","getShaderBlock","cgmap","getCGBlock","bindCG","sliceFlag","sliceIndex","slicedata","splitmap","compileToTree","shaderObj","i1","i2","cgdata","datavalue","getMapKey","passArray","attributemap","indexofAttribute","dataArray","getShaderDataType","defaultmap","newUniformMap","serializable","default","getDefaultData","mat3","texcube","compileAsync","compiledObjs","decodeAudioData","LocalStorage","_baseClass","Storage","init","items","support","setItem","setJSON","getJSON","removeItem","localStorage","PrimitiveSV","TextureSV","_blurInfo","_u_blurInfo1","_u_blurInfo2","_u_TexRange","_colorMat","_colorAlpha","_strength_sig2_2sig2_gauss1","Mouse","cursor","cursorStr","_preCursor","MeshParticle2D","maxNum","glfloat","setMaxParticleNum","_inited","stageConfig","laya3D","_changeWebGLSize","is3DMode","_setStyleInfo","supportLocalStorage","enableNative","beginCheck","steps","beforeInit","_beforeInitCallbacks","createEngine","initRender2D","_initCallbacks","_afterInitCallbacks","afterInit","step","__int__","createRender","__initDefine__","_initone","erralert","detail","alert","stack","_evcode","debugJsPath","DrawType","RenderDrawMode","RenderIndexMode","TextureCompareMode","TextureDecodeFormat","alertGlobalError","enableDebugPanel","addInitCallback","addBeforeInitCallback","addAfterInitCallback","BlendState","colorBlendhash","alphaBlendComponent","_blend_All_pool","_blend_seperate_pool","BlendComponent","blendOperationGLData","sourceBlendFactor","destinationFactor","hashindex","_hashIndex","_blendOperationGLData","_sourceBlendFactor","_destinationFactor","getHash","CommandUniformMap","_stateName","hasPtrID","getMap","propertyName","addShaderBlockUniform","blockname","blockProperty","RenderStateCommand","cmdArray","renderstate","applyRenderStateCMD","EffectBase","autoDestroyAtComplete","_comlete","_exeTween","_doTween","KeyLocation","STANDARD","LEFT","RIGHT","NUM_PAD","Keyboard","NUMBER_0","NUMBER_1","NUMBER_2","NUMBER_3","NUMBER_4","NUMBER_5","NUMBER_6","NUMBER_7","NUMBER_8","NUMBER_9","A","B","C","D","E","F","G","H","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","F1","F2","F3","F4","F5","F6","F7","F8","F9","F10","F11","F12","F13","F14","F15","NUMPAD","NUMPAD_0","NUMPAD_1","NUMPAD_2","NUMPAD_3","NUMPAD_4","NUMPAD_5","NUMPAD_6","NUMPAD_7","NUMPAD_8","NUMPAD_9","NUMPAD_ADD","NUMPAD_DECIMAL","NUMPAD_DIVIDE","NUMPAD_ENTER","NUMPAD_MULTIPLY","NUMPAD_SUBTRACT","SEMICOLON","EQUAL","COMMA","MINUS","PERIOD","SLASH","BACKQUOTE","LEFTBRACKET","BACKSLASH","RIGHTBRACKET","QUOTE","ALTERNATE","BACKSPACE","CAPS_LOCK","COMMAND","CONTROL","DELETE","ESCAPE","PAGE_UP","PAGE_DOWN","HOME","UP","DOWN","SHIFT","SPACE","TAB","INSERT","CommandEncoder","getArrayData","getCount","variable","QuickTestTool","_typeToNameDic","showedDic","_rendertypeToStrDic","getMCDName","_addType","showRenderTypeInfo","_stageRender","_countStart","_PreStageRender","_countEnd","_countDic","_i","showCountInfo","Socket","port","byteClass","protocols","isSecure","disableInput","_byteClass","_input","output","_output","connected","_connected","_endian","connectByUrl","_socket","cleanSocket","WebSocket","binaryType","_addInputPosition","onopen","_onOpen","_onMessage","onclose","_onClose","pre","GLSLCodeGenerator","getAttributeType","uniformsMap","useUniformBlock","blocksStr","uniformsStr","blockUniforms","typeStr","ShaderInstance","_customUniformParamsMap","_uploadMark","_uploadRenderType","_webGLShaderLanguageProcess3D","_renderShaderInstance","_shaderPass","_create2D","vertexHead","fragmentHead","clusterSlices","defMap","defineStr","attributeglsl","glslAttributeString","uniformglsl","glslUniformString","isWebGL2","_maxAreaLightCountPerClusterAverage","SHADER_CAPAILITY_LEVEL","vsVersion","psVersion","dstVS","detFS","_webGLShaderLanguageProcess2D","_cameraUniformParamsMap","_spriteUniformParamsMap","sceneParams","cameraParams","customParams","getUniformMap","hasSpritePtrID","sprite2DParms","sceneParms","commap","_uploadMaterial","_uploadRender","_uploadCameraShaderValue","_uploadScene","shaderUniform","shaderDatas","uploadUnTexture","uploadRenderStateBlendDepth","uploadRenderStateBlendDepthByShader","uploadRenderStateBlendDepthByMaterial","datas","_f","_g","_k","_j","_m","_l","_p","_o","_r","_q","_t","_s","_v","_u","_z","_1","_0","_3","_2","_5","_4","_7","_6","uploadRenderStateFrontFace","isTarget","invertFront","forntFace","uploadCustomUniform","uploadCustomUniforms","ShaderVariable","onID","pointID","textureID","Tex3D","Base64Tool","lookup","bytes","encoded1","encoded2","encoded3","encoded4","reghead","arrU8List","newU8List","arg","Log","_logdiv","_btn","onclick","toggle","maxCount","autoScrollToBottom","scrollHeight","PerfData","datapos","PerfHUD","xdata","DATANUM","ydata","hud_width","hud_height","gMinV","gMaxV","textSpace","sttm","addDataDef","_now","updateValue","v2y","drawHLine","_lastTm","di","cd","dtlen","_cx","dtsz","drawTexTm","PoolCache","SingletonList","_add","indexof","TimeLine","_tweenDic","_tweenDataList","_currTime","_lastTime","_gidIndex","_firstTweenDic","_startTimeSort","_endTimeSort","_loopKey","_frameIndex","_total","tTweenData","tweenData","endTime","_labelDic","tIndex","gotoTime","tTween","tObject","tTweenDataCopyList","tDataP","diyTarget","_endTweenDataList","Compare","paraA","paraB","tP","_animComplete","gotoLabel","Label","tLabelData","timeOrLabel","tTarget","tSrcData","tNow","tFrameTime","tCurrTime","DrawParticleCmd","_templ","NativeCommandUniformMap","NativeGLObject","_engine","_gl","gl","_IDCounter","setResourceManager","NativeGLTextureContext","native","_native","conchImgId","setTexture3DPixlesData","renderTarget","faceIndex","createRenderTargetCubeInternal","createRenderTextureCubeInternal","video","internalTex","NativeGL2TextureContext","NativeGLRenderDrawContext","conchGLRenderDrawContext","drawElementsInstanced","instanceCount","drawArraysInstanced","first","drawArrays","drawElements","drawGeometryElement","geometryElement","NativeRenderStateCommand","conchRenderStateCommand","DepthFunc","StencilTest","StencilMask","addCMDInt1","StencilFunc","addCMDInt2","StencilOp","addCMDInt3","BlendFuncSeperate","addCMDInt4","NativeRenderState","conchRenderState","setStencilOp","MemoryDataType","NativeShaderDataType","WebGLMode","WebGLExtension","CommonMemoryAllocater","NativeMemory","shared","_sharedBuffer","creatBlock","_f64data","float32Array","float64Array","uint8Array","int32Array","freeMemoryBlock","NativeSourceID","UploadMemory","_currentOffsetInByte","addBlockCell","dataSizeInByte","uploadDataTOShareMemory","UploadMemoryManager","_dataNodeList","_commandNums","_currentBlock","UploadMemorySize","_conchUploadMemoryManager","conchUploadMemoryManager","_instance","_addNodeCommand","sizeInByte","_serialiseData","getUploadMemoryLength","uploadData","NativeShaderData","inUploadList","payload32bitNum","conchShaderData","setApplyUBOData","nativeObjID","nativeID","_dataType","updateMap","updataSizeMap","memoryBlock","strideInByte","strideFloat","clearUpload","compressNumber","Number32","compressVector2","compressVector3","compressVector4","compressMatrix4x4","compressNumberArray","Number32Array","compressTexture","compressUBO","UBO","_conchUniformBufferObject","configMotionProperty","NativeUniformBufferObject","conchUniformBufferObject","setGLBuffer","NativeGLVertexState","conchGLVertexState","_nativeVertexBuffers","vertexBuffer","_conchVertexBuffer3D","_conchIndexBuffer3D","GLObject","WebGLInternalTex","useSRGBLoader","_baseMipmapLevel","_maxMipmapLevel","createTexture","isPot","isPotSize","_mipmap","_mipmapCount","log2","Repeat","_addStatisticsInfo","_filterMode","getFilteMinrParam","_setTexParameteri","TEXTURE_MIN_FILTER","mag","getFilterMagParam","TEXTURE_MAG_FILTER","_warpU","warpParam","getWrapParam","_setWrapMode","TEXTURE_WRAP_S","_warpV","TEXTURE_WRAP_T","_warpW","TEXTURE_WRAP_R","_anisoLevel","anisoExt","_supportCapatable","getExtension","EXT_texture_filter_anisotropic","maxAnisoLevel","Max_AnisoLevel_Count","level","_setTexParametexf","TEXTURE_MAX_ANISOTROPY_EXT","TEXTURE_BASE_LEVEL","TEXTURE_MAX_LEVEL","_compareMode","_bindTexture","texParameteri","texParameterf","NEAREST_MIPMAP_NEAREST","NEAREST","LINEAR_MIPMAP_NEAREST","LINEAR","Trilinear","LINEAR_MIPMAP_LINEAR","REPEAT","CLAMP_TO_EDGE","Mirrored","MIRRORED_REPEAT","deleteTexture","WebGLInternalRT","_depthTexture","_framebuffer","createFramebuffer","_msaaFramebuffer","deleteFramebuffer","_depthbuffer","deleteRenderbuffer","_msaaRenderbuffer","GLTextureContext","_glParam","internalFormat","_sRGB","EXT_sRGB","_oesTextureHalfFloat","OES_texture_half_float","_compressdTextureS3tc_srgb","WEBGL_compressed_texture_s3tc_srgb","_compressedTextureEtc1","WEBGL_compressed_texture_etc1","_compressedTextureS3tc","WEBGL_compressed_texture_s3tc","_compressedTextureETC","WEBGL_compressed_texture_etc","_compressedTextureASTC","WEBGL_compressed_texture_astc","_webgl_depth_texture","WEBGL_depth_texture","glTextureParam","useSRGB","SRGB_EXT","RGB","SRGB_ALPHA_EXT","RGBA","UNSIGNED_SHORT_5_6_5","HALF_FLOAT_OES","COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_ETC1_WEBGL","COMPRESSED_RGBA8_ETC2_EAC","COMPRESSED_RGB8_ETC2","COMPRESSED_SRGB8_ETC2","COMPRESSED_SRGB8_ALPHA8_ETC2_EAC","COMPRESSED_RGBA_ASTC_4x4_KHR","COMPRESSED_RGBA_ASTC_6x6_KHR","COMPRESSED_RGBA_ASTC_8x8_KHR","COMPRESSED_RGBA_ASTC_10x10_KHR","COMPRESSED_RGBA_ASTC_12x12_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR","glRenderTextureParam","DEPTH_COMPONENT","DEPTHSTENCIL_24_8","DEPTH_STENCIL","UNSIGNED_INT_24_8_WEBGL","DEPTH_32","UNSIGNED_INT","STENCIL_8","glRenderBufferParam","DEPTH_COMPONENT16","attachment","DEPTH_ATTACHMENT","DEPTH_STENCIL_ATTACHMENT","STENCIL_INDEX8","STENCIL_ATTACHMENT","glRenderTargetAttachment","COLOR_ATTACHMENT0","getTarget","TEXTURE_2D","TEXTURE_CUBE_MAP","getFormatPixelsParams","formatParams","channels","bytesPerPixel","dataTypedCons","typedSize","getGLtexMemory","singlebyte","srgb_alpha","getGLRTTexMemory","cube","getpixelbyte","rtFormat","pixelByte","colorPixelbyte","supportSRGB","Texture_SRGB","supportGenerateMipmap","isSRGBFormat","useSRGBExt","glParam","pixelStorei","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_FLIP_Y_WEBGL","texImage2D","texSubImage2D","fourSize","UNPACK_ALIGNMENT","mipmapWidth","mipmapHeight","memory","compressedTexImage2D","imageSize","pixelParams","hdrPixelData","cubeFace","TEXTURE_CUBE_MAP_POSITIVE_Z","TEXTURE_CUBE_MAP_NEGATIVE_Z","TEXTURE_CUBE_MAP_POSITIVE_X","TEXTURE_CUBE_MAP_NEGATIVE_X","TEXTURE_CUBE_MAP_POSITIVE_Y","TEXTURE_CUBE_MAP_NEGATIVE_Y","channelsByte","dataTypeConstur","face","framebuffer","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","colorAttachment","depthBufferParam","depthbuffer","createRenderbuffer","framebufferRenderbuffer","RENDERBUFFER","renderbuffer","bindRenderbuffer","renderbufferStorage","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","readPixels","UNSIGNED_SHORT_4_4_4_4","GL2TextureContext","TEXTURE_2D_ARRAY","TEXTURE_3D","SRGB8","RGB8","SRGB8_ALPHA8","RGBA8","RGB565","RGBA32F","RGB32F","RGB16F","HALF_FLOAT","RGBA16F","DEPTH24_STENCIL8","DEPTH_COMPONENT32F","UNSIGNED_INT_24_8","texStorage2D","texStorage3D","texSubImage3D","getCubeKTXRGBMData","LEQUAL","TEXTURE_COMPARE_FUNC","TEXTURE_COMPARE_MODE","COMPARE_REF_TO_TEXTURE","GEQUAL","LESS","GREATER","NOTEQUAL","ALWAYS","NEVER","renderbufferStorageMultisample","msaaFramebuffer","renderbufferParam","msaaRenderbuffer","isSRGB","READ_FRAMEBUFFER","DRAW_FRAMEBUFFER","biltMask","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","blitFramebuffer","GLBuffer","_glTargetType","_glBufferUsageType","_getGLTarget","_getGLUsage","_glUsage","STATIC_DRAW","DYNAMIC_DRAW","Stream","STREAM_DRAW","_glTarget","_memorychange","_getbindBuffer","_setbindBuffer","orphanStorage","srcData","bufferSubData","_getBindUBOBuffer","_setBindUBOBuffer","resizeBuffer","GLParams","_initParams","_glParamsData","Max_Active_Texture_Count","getParameter","MAX_VERTEX_TEXTURE_IMAGE_UNITS","maxVertexUniform","MAX_VERTEX_UNIFORM_VECTORS","maxFragUniform","MAX_FRAGMENT_UNIFORM_VECTORS","Max_Uniform_Count","MAX_Texture_Size","MAX_TEXTURE_SIZE","MAX_Texture_Image_Uint","MAX_TEXTURE_IMAGE_UNITS","Texture_anisotropic","MAX_TEXTURE_MAX_ANISOTROPY_EXT","GLRender2DContext","activeTexture","_activedTextureID","bindTexture","bindUseProgram","webglProgram","cacheShaderProgram","useProgram","_glUseProgram","GLRenderDrawContext","_angleInstancedArrays","ANGLE_instanced_arrays","getMeshTopology","Points","POINTS","LINES","LineLoop","LINE_LOOP","LineStrip","LINE_STRIP","TRIANGLES","TriangleStrip","TRIANGLE_STRIP","TriangleFan","TRIANGLE_FAN","getIndexType","UInt8","UInt32","drawElementsInstancedANGLE","drawArraysInstancedANGLE","bufferState","drawParams","drawType","DrawArray","_glmode","DrawElement","_glindexFormat","DrawArrayInstance","DrawElementInstance","GLRenderState","_depthTest","_depthMask","_stencilTest","_cullFace","_initState","_blendEquation","_sFactor","_dFactor","_sFactorAlpha","_dFactorAlpha","_getBlendFactor","factor","SRC_COLOR","ONE_MINUS_SRC_COLOR","DST_COLOR","ONE_MINUS_DST_COLOR","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","DST_ALPHA","ONE_MINUS_DST_ALPHA","SRC_ALPHA_SATURATE","CONSTANT_COLOR","ONE_MINUS_CONSTANT_COLOR","_getBlendOperation","FUNC_ADD","FUNC_SUBTRACT","FUNC_REVERSE_SUBTRACT","_getGLCompareFunction","compareFunction","_getGLStencilOperation","KEEP","REPLACE","INCR","DECR","INVERT","INCR_WRAP","DECR_WRAP","_getGLFrontfaceFactor","cullmode","CCW","CW","disable","depthMask","_depthFunc","depthFunc","_stencilMask","stencilMask","_stencilFunc","_stencilRef","stencilFunc","_stencilOp_fail","_stencilOp_zfail","_stencilOp_zpass","_blendEquationRGB","_blendEquationAlpha","blendEquationSeparate","_sFactorRGB","_dFactorRGB","blendFunc","blendFuncSeparate","CULL_FACE","_frontFace","frontFace","applyRenderStateCommand","GLShaderInstance","_vs","_ps","_program","createProgram","_vshader","_createShader","VERTEX_SHADER","_pshader","FRAGMENT_SHADER","attachShader","bindAttribLocation","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","nUniformNum","ACTIVE_UNIFORMS","_curActTexIndex","uniformData","getActiveUniform","getUniformLocation","_addShaderUnifiormFun","_uniformObjectMap","nUniformBlock","ACTIVE_UNIFORM_BLOCKS","gl2","uniformBlockName","getActiveUniformBlockName","getUniformBlockIndex","uniformBlockBinding","_legalUBObyteLength","createShader","shaderSource","compileShader","_isShaderDebugMode","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","BOOL","_uniform1i","uploadedValue","INT","_uniform1iv","_uniform1fv","_uniform1f","FLOAT_VEC2","_uniform_vec2v","_uniform_vec2","FLOAT_VEC3","_uniform_vec3v","_uniform_vec3","FLOAT_VEC4","_uniform_vec4v","_uniform_vec4","FLOAT_MAT2","_uniformMatrix2fv","FLOAT_MAT3","_uniformMatrix3fv","FLOAT_MAT4","_uniformMatrix4fv","_uniformMatrix4f","SAMPLER_2D","SAMPLER_2D_SHADOW","uniform1i","_glTextureIDParams","_uniform_sampler2D","SAMPLER_2D_ARRAY","_uniform_sampler2DArray","_uniform_sampler3D","SAMPLER_CUBE","_uniform_samplerCube","_uniform_UniformBuffer","uniform1f","uniform1fv","uniform2f","uniform2fv","uniform3f","uniform3fv","uniform4f","uniform4fv","uniformMatrix2fv","uniformMatrix3fv","uniformMatrix4fv","uniform1iv","_uniform_ivec2","uniform2i","_uniform_ivec2v","uniform2iv","_uniform_vec3i","uniform3i","_uniform_vec3vi","uniform3iv","_uniform_vec4i","uniform4i","_uniform_vec4vi","uniform4iv","texID","TEXTURE0","_activeTextures","deleteShader","deleteProgram","GLVertexState","_vaoExt","OES_vertex_array_object","createVertexArray","createVertexArrayOES","deleteVertexArray","deleteVertexArrayOES","_GLBindVertexArray","bindVertexArrayOES","isVertexArray","isVertexArrayOES","clearVAO","valueData","loc","attribute","enableVertexAttribArray","vertexAttribPointer","vertexAttribDivisor","disableVertexAttribArray","divisor","vertexAttribDivisorANGLE","glErrorShadow","synthesizeGLError","opt_msg","WebGLVertexArrayObjectOES","isAlive","hasBeenBound","elementArrayBuffer","maxVertexAttribs","attrib","VertexAttrib","maxAttrib","normalized","cached","recache","OESVertexArrayObject","getError","NO_ERROR","err1","wrapGLError","original","getVertexAttrib","VERTEX_ARRAY_BINDING_OES","currentVertexArrayObject","defaultVertexArrayObject","vao","currentArrayBuffer","VERTEX_ATTRIB_ARRAY_BUFFER_BINDING","VERTEX_ATTRIB_ARRAY_ENABLED","VERTEX_ATTRIB_ARRAY_SIZE","VERTEX_ATTRIB_ARRAY_STRIDE","VERTEX_ATTRIB_ARRAY_TYPE","VERTEX_ATTRIB_ARRAY_NORMALIZED","indx","instrumentExtension","reset_","vertexArrayObjects","MAX_VERTEX_ATTRIBS","arrayObject","oldVAO","newVAO","currentBinding","oldAttrib","bufferChanged","INVALID_OPERATION","_setupVertexArrayObject","original_getSupportedExtensions","getSupportedExtensions","original_getExtension","__OESVertexArrayObject","GlCapable","glEngine","_extentionVendorPrefixes","initExtension","initCapable","isWebgl2","_capabilityMap","OES_element_index_uint","Element_Index_Uint32","OES_texture_float","EXT_color_buffer_float","EXT_color_buffer_half_float","OES_texture_half_float_linear","RenderTextureFormat_R16G16B16A16","OES_texture_float_linear","RenderTextureFormat_R32G32B32A32","RenderTextureFormat_Depth","RenderTextureFormat_ShadowMap","Vertex_VAO","DrawElement_Instance","EXT_shader_texture_lod","Shader_TextureLod","WEBGL_compressed_texture_pvrtc","COMPRESS_TEXTURE_PVRTC","COMPRESS_TEXTURE_ETC1","COMPRESS_TEXTURE_ETC","COMPRESS_TEXTURE_ASTC","Texture_FloatLinearFiltering","Texture_HalfFloatLinearFiltering","MSAA","UnifromBufferObject","_extensionMap","setExtensionMap","_extTextureFilterAnisotropic","_getExtension","_compressedTexturePvrtc","_oesTextureFloatLinear","_extColorBufferHalfFloat","_extColorBufferFloat","_oesTextureHalfFloatLinear","_oesTextureFloat","_oes_element_index_uint","_extShaderTextureLod","OES_standard_derivatives","prefixes","WebGLEngine","webglMode","Auto","_curUBOPointer","_GLUBOPointerMap","_GLBindPointerUBOMap","_lastClearColor","_lastClearDepth","_GLStatisticsInfo","_config","_isWebGL2","_lastViewport","_lastScissor","_webglMode","_initStatisticsInfo","webglConfig","initRenderEngine","names","WebGL1","WebGL2","_initBindBufferMap","_GLParams","TEXTURE1","TEXTURE2","TEXTURE3","TEXTURE4","TEXTURE5","TEXTURE6","TEXTURE7","TEXTURE8","TEXTURE9","TEXTURE10","TEXTURE11","TEXTURE12","TEXTURE13","TEXTURE14","TEXTURE15","TEXTURE16","TEXTURE17","TEXTURE18","TEXTURE19","TEXTURE20","TEXTURE21","TEXTURE22","TEXTURE23","TEXTURE24","TEXTURE25","TEXTURE26","TEXTURE27","TEXTURE28","TEXTURE29","TEXTURE30","TEXTURE31","_GLTextureContext","_GLRenderDrawContext","_GL2DRenderContext","_GLBufferBindMap","capatableType","lv","SCISSOR_TEST","clearFlag","clearcolor","clearDepth","Stencil","clearStencil","STENCIL_BUFFER_BIT","copySubFrameBuffertoTex","xoffset","yoffset","copyTexSubImage2D","colorMask","getTextureContext","getDrawContext","get2DRenderContext","getCreateRenderOBJContext","_renderOBJCreateContext","commandEncoder","shaderCall","custom","ArabicReshaper","characterMapContains","charsMap","getCharRep","getCombCharRep","combCharsMap","isTransparent","transChars","getOriginalCharsFromCode","convertArabic","crep","combcrep","shaped","current","prevID","nextID","convertArabicBack","apfb","selectedChar","toReturn","MatirxArray","ai0","ai1","ai2","ai3","_curState","effectScale","tweenTime","toChangedState","toInitState","_curTween","effectEase","tweenComplete","backEase","conchCommandUniformMap","conchWebGLEngine","addStatisticsInfo","conchGL2TextureContext","conchGLTextureContext","conchGLBuffer","_strsToID","_idToStrs","getName","_isInPool","globalBlockMap","comMap","glConfig","stencil","antialias","failIfMajorPerformanceCaveat","_replaceWebglcall","tempgl","assetId"],"sources":["../../src/layaAir/laya/utils/ClassUtils.ts","../../src/layaAir/Decorators.ts","../../src/layaAir/Config.ts","../../src/layaAir/laya/Const.ts","../../src/layaAir/ILaya.ts","../../src/layaAir/LayaEnv.ts","../../src/layaAir/laya/utils/Pool.ts","../../src/layaAir/laya/utils/Utils.ts","../../src/layaAir/laya/components/Component.ts","../../src/layaAir/laya/maths/Matrix.ts","../../src/layaAir/laya/maths/Point.ts","../../src/layaAir/laya/maths/Rectangle.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/HDREncodeFormat.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/TextureFormat.ts","../../src/layaAir/laya/layagl/LayaGL.ts","../../src/layaAir/laya/utils/Delegate.ts","../../src/layaAir/laya/events/Event.ts","../../src/layaAir/laya/events/EventDispatcher.ts","../../src/layaAir/laya/resource/Resource.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/FilterMode.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/RenderCapable.ts","../../src/layaAir/laya/resource/BaseTexture.ts","../../src/layaAir/laya/utils/Byte.ts","../../src/layaAir/laya/utils/HalfFloatUtils.ts","../../src/layaAir/laya/RenderEngine/DDSTextureInfo.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/TextureDimension.ts","../../src/layaAir/laya/RenderEngine/KTXTextureInfo.ts","../../src/layaAir/laya/resource/Texture2D.ts","../../src/layaAir/laya/webgl/shader/BaseShader.ts","../../src/layaAir/laya/webgl/utils/RenderState2D.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/RenderTargetFormat.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/RenderClearFlag.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/BlendFactor.ts","../../src/layaAir/laya/maths/Color.ts","../../src/layaAir/laya/resource/NativeRenderTexture2D.ts","../../src/layaAir/laya/resource/RenderTexture2D.ts","../../src/layaAir/laya/resource/WebGLRTMgr.ts","../../src/layaAir/laya/RenderEngine/RenderStateContext.ts","../../src/layaAir/laya/webgl/canvas/BlendMode.ts","../../src/layaAir/laya/resource/Texture.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/BlendEquationSeparate.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/BlendType.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/CompareFunction.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/CullMode.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/StencilOperation.ts","../../src/layaAir/laya/resource/AssetDb.ts","../../src/layaAir/laya/net/URL.ts","../../src/layaAir/laya/webgl/utils/IncludeFile.ts","../../src/layaAir/laya/webgl/utils/ShaderNode.ts","../../src/layaAir/laya/webgl/utils/ShaderCompile.ts","../../src/layaAir/laya/RenderEngine/RenderShader/DefineDatas.ts","../../src/layaAir/laya/RenderEngine/RenderShader/ShaderDefine.ts","../../src/layaAir/laya/RenderEngine/RenderShader/ShaderVariantCollection.ts","../../src/layaAir/laya/maths/MathUtils3D.ts","../../src/layaAir/laya/maths/Vector2.ts","../../src/layaAir/laya/maths/Vector4.ts","../../src/layaAir/laya/maths/Vector3.ts","../../src/layaAir/laya/maths/Matrix3x3.ts","../../src/layaAir/laya/maths/Quaternion.ts","../../src/layaAir/laya/maths/Matrix4x4.ts","../../src/layaAir/laya/resource/Texture2DArray.ts","../../src/layaAir/laya/RenderEngine/RenderShader/ShaderData.ts","../../src/layaAir/laya/RenderEngine/UniformBufferData.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/RenderParams.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/WrapMode.ts","../../src/layaAir/laya/webgl/utils/ShaderCompileDefineBase.ts","../../src/layaAir/laya/RenderEngine/RenderShader/ShaderPass.ts","../../src/layaAir/laya/renders/VertexElement.ts","../../src/layaAir/laya/renders/VertexElementFormat.ts","../../src/layaAir/laya/RenderEngine/VertexDeclaration.ts","../../src/layaAir/laya/RenderEngine/RenderShader/VertexMesh.ts","../../src/layaAir/laya/RenderEngine/RenderShader/SubShader.ts","../../src/layaAir/laya/RenderEngine/RenderShader/Shader3D.ts","../../src/layaAir/laya/webgl/shader/d2/ShaderDefines2D.ts","../../src/layaAir/laya/renders/RenderInfo.ts","../../src/layaAir/laya/webgl/text/AtlasGrid.ts","../../src/layaAir/laya/utils/FontInfo.ts","../../src/layaAir/laya/webgl/shader/d2/value/Value2D.ts","../../src/layaAir/laya/utils/WordText.ts","../../src/layaAir/laya/webgl/text/CharRenderInfo.ts","../../src/layaAir/laya/webgl/text/ICharRender.ts","../../src/layaAir/laya/utils/Browser.ts","../../src/layaAir/laya/webgl/text/CharRender_Canvas.ts","../../src/layaAir/laya/webgl/text/TextRender.ts","../../src/layaAir/laya/webgl/text/TextAtlas.ts","../../src/layaAir/laya/webgl/text/TextTexture.ts","../../src/layaAir/laya/webgl/submit/SubmitKey.ts","../../src/layaAir/laya/webgl/submit/SubmitCMD.ts","../../src/layaAir/laya/filters/Filter.ts","../../src/layaAir/laya/utils/ColorUtils.ts","../../src/layaAir/laya/filters/ColorFilter.ts","../../src/layaAir/laya/maths/GrahamScan.ts","../../src/layaAir/laya/display/SpriteConst.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/RenderStatInfo.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/BufferTargetType.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/IndexFormat.ts","../../src/layaAir/laya/utils/Stat.ts","../../src/layaAir/laya/webgl/submit/SubmitBase.ts","../../src/layaAir/laya/RenderEngine/VertexAttributeLayout.ts","../../src/layaAir/laya/webgl/utils/BufferState.ts","../../src/layaAir/laya/RenderEngine/Buffer.ts","../../src/layaAir/laya/RenderEngine/IndexBuffer.ts","../../src/layaAir/laya/webgl/utils/Buffer2D.ts","../../src/layaAir/laya/webgl/utils/IndexBuffer2D.ts","../../src/layaAir/laya/RenderEngine/VertexBuffer.ts","../../src/layaAir/laya/webgl/utils/VertexBuffer2D.ts","../../src/layaAir/laya/webgl/utils/Mesh2D.ts","../../src/layaAir/laya/webgl/utils/MeshQuadTexture.ts","../../src/layaAir/laya/webgl/utils/MeshTexture.ts","../../src/layaAir/laya/webgl/utils/MeshVG.ts","../../src/layaAir/laya/webgl/canvas/NativeWebGLCacheAsNormalCanvas.ts","../../src/layaAir/laya/webgl/canvas/WebGLCacheAsNormalCanvas.ts","../../src/layaAir/laya/renders/LayaGLQuickRunner.ts","../../src/layaAir/laya/filters/NativeFilter.ts","../../src/layaAir/laya/renders/RenderSprite.ts","../../src/layaAir/laya/maths/Bezier.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/RenderStateType.ts","../../src/layaAir/laya/webgl/canvas/DrawStyle.ts","../../src/layaAir/laya/webgl/canvas/Path.ts","../../src/layaAir/laya/webgl/canvas/save/SaveBase.ts","../../src/layaAir/laya/webgl/canvas/save/SaveClipRect.ts","../../src/layaAir/laya/webgl/canvas/save/SaveMark.ts","../../src/layaAir/laya/webgl/canvas/save/SaveTransform.ts","../../src/layaAir/laya/webgl/canvas/save/SaveTranslate.ts","../../bin/tsc/layaAir/laya/webgl/shader/d2/files/texture.vs.glsl","../../src/layaAir/laya/RenderEngine/RenderEnum/RenderPologyMode.ts","../../src/layaAir/laya/resource/NativeContext.ts","../../src/layaAir/laya/webgl/shader/d2/Shader2D.ts","../../bin/tsc/layaAir/laya/webgl/shader/d2/NewShader/Sprite2DFrag.glsl","../../bin/tsc/layaAir/laya/webgl/shader/d2/NewShader/Sprite2DVertex.glsl","../../bin/tsc/layaAir/laya/webgl/shader/d2/NewShader/Sprite2DShaderInfo.glsl","../../bin/tsc/layaAir/laya/webgl/shader/d2/files/texture.ps.glsl","../../bin/tsc/layaAir/laya/webgl/shader/d2/files/primitive.vs.glsl","../../bin/tsc/layaAir/laya/webgl/shader/d2/files/primitive.ps.glsl","../../src/layaAir/laya/webgl/shader/d2/skinAnishader/SkinMeshBuffer.ts","../../src/layaAir/laya/webgl/shapes/BasePoly.ts","../../src/layaAir/laya/webgl/shapes/EarcutNode.ts","../../src/layaAir/laya/webgl/shapes/Earcut.ts","../../src/layaAir/laya/webgl/submit/Submit.ts","../../src/layaAir/laya/webgl/submit/SubmitCanvas.ts","../../src/layaAir/laya/webgl/submit/SubmitTarget.ts","../../src/layaAir/laya/webgl/submit/SubmitTexture.ts","../../src/layaAir/laya/webgl/text/CharSubmitCache.ts","../../src/layaAir/Config3D.ts","../../src/layaAir/laya/resource/RenderTexture.ts","../../src/layaAir/laya/resource/Context.ts","../../src/layaAir/laya/resource/HTMLCanvas.ts","../../src/layaAir/laya/display/css/BoundsStyle.ts","../../src/layaAir/laya/display/css/CacheStyle.ts","../../src/layaAir/laya/display/css/SpriteStyle.ts","../../src/layaAir/laya/display/cmd/AlphaCmd.ts","../../src/layaAir/laya/display/cmd/DrawCircleCmd.ts","../../src/layaAir/laya/display/cmd/DrawCurvesCmd.ts","../../src/layaAir/laya/display/cmd/DrawImageCmd.ts","../../src/layaAir/laya/display/cmd/DrawLineCmd.ts","../../src/layaAir/laya/display/cmd/DrawLinesCmd.ts","../../src/layaAir/laya/display/cmd/DrawPathCmd.ts","../../src/layaAir/laya/display/cmd/DrawPieCmd.ts","../../src/layaAir/laya/display/cmd/DrawPolyCmd.ts","../../src/layaAir/laya/display/cmd/DrawRectCmd.ts","../../src/layaAir/laya/display/cmd/DrawTextureCmd.ts","../../src/layaAir/laya/display/cmd/FillTextureCmd.ts","../../src/layaAir/laya/display/cmd/RestoreCmd.ts","../../src/layaAir/laya/display/cmd/RotateCmd.ts","../../src/layaAir/laya/display/cmd/ScaleCmd.ts","../../src/layaAir/laya/display/cmd/TransformCmd.ts","../../src/layaAir/laya/display/cmd/TranslateCmd.ts","../../src/layaAir/laya/display/cmd/DrawTrianglesCmd.ts","../../src/layaAir/laya/display/cmd/Draw9GridTextureCmd.ts","../../src/layaAir/laya/display/cmd/SaveCmd.ts","../../src/layaAir/laya/display/GraphicsBounds.ts","../../src/layaAir/laya/display/cmd/ClipRectCmd.ts","../../src/layaAir/laya/display/cmd/DrawTexturesCmd.ts","../../src/layaAir/laya/display/cmd/FillTextCmd.ts","../../src/layaAir/laya/utils/CacheManger.ts","../../src/layaAir/laya/utils/VectorGraphManager.ts","../../src/layaAir/laya/display/cmd/DrawEllipseCmd.ts","../../src/layaAir/laya/display/cmd/DrawRoundRectCmd.ts","../../src/layaAir/laya/display/Graphics.ts","../../src/layaAir/laya/display/Node.ts","../../src/layaAir/laya/utils/Ease.ts","../../src/layaAir/laya/utils/Handler.ts","../../src/layaAir/laya/utils/Tween.ts","../../src/layaAir/laya/utils/Dragging.ts","../../src/layaAir/laya/utils/SpriteUtils.ts","../../src/layaAir/laya/display/Sprite.ts","../../src/layaAir/laya/display/AnimationBase.ts","../../src/layaAir/laya/net/AtlasInfoManager.ts","../../src/layaAir/laya/net/WorkerLoader.ts","../../src/layaAir/laya/resource/AtlasResource.ts","../../src/layaAir/laya/net/BatchProgress.ts","../../src/layaAir/laya/utils/ImgUtils.ts","../../src/layaAir/laya/html/XMLUtils.ts","../../src/layaAir/laya/html/XMLIterator.ts","../../src/layaAir/laya/html/XML.ts","../../src/layaAir/laya/net/HttpRequest.ts","../../src/layaAir/laya/net/Downloader.ts","../../src/layaAir/laya/net/Loader.ts","../../src/layaAir/laya/maths/MathUtil.ts","../../src/layaAir/laya/display/FrameAnimation.ts","../../src/layaAir/laya/display/GraphicAnimation.ts","../../src/layaAir/laya/display/Animation.ts","../../src/layaAir/laya/display/BitmapFont.ts","../../src/layaAir/laya/display/EffectAnimation.ts","../../src/layaAir/laya/display/css/TextStyle.ts","../../src/layaAir/laya/html/HtmlElement.ts","../../src/layaAir/laya/html/HtmlImage.ts","../../src/layaAir/laya/html/HtmlLink.ts","../../src/layaAir/laya/html/HtmlParseOptions.ts","../../src/layaAir/laya/html/HtmlParser.ts","../../src/layaAir/laya/html/UBBParser.ts","../../src/layaAir/laya/display/Text.ts","../../src/layaAir/laya/events/InputManager.ts","../../src/layaAir/laya/renders/Render.ts","../../src/layaAir/laya/loaders/SerializeUtil.ts","../../src/layaAir/laya/display/Input.ts","../../src/layaAir/laya/components/Widget.ts","../../src/layaAir/laya/utils/HitArea.ts","../../src/layaAir/laya/utils/WeakObject.ts","../../src/layaAir/laya/resource/HierarchyResource.ts","../../src/layaAir/laya/loaders/LegacyUIParser.ts","../../src/layaAir/laya/resource/PrefabImpl.ts","../../src/layaAir/laya/display/Scene.ts","../../src/layaAir/laya/utils/Timer.ts","../../src/layaAir/laya/utils/CallLater.ts","../../src/layaAir/laya/webgl/WebGL.ts","../../src/layaAir/laya/utils/RunDriver.ts","../../src/layaAir/laya/components/ComponentDriver.ts","../../src/layaAir/laya/display/Stage.ts","../../src/layaAir/laya/filters/BlurFilterGLRender.ts","../../src/layaAir/laya/filters/BlurFilter.ts","../../src/layaAir/laya/filters/GlowFilterGLRender.ts","../../src/layaAir/laya/filters/GlowFilter.ts","../../src/layaAir/laya/media/SoundChannel.ts","../../src/layaAir/laya/media/h5audio/AudioSoundChannel.ts","../../src/layaAir/laya/media/h5audio/AudioSound.ts","../../src/layaAir/laya/media/webaudio/WebAudioSoundChannel.ts","../../src/layaAir/laya/media/webaudio/WebAudioSound.ts","../../src/layaAir/laya/media/SoundManager.ts","../../src/layaAir/laya/media/SoundNode.ts","../../src/layaAir/laya/media/VideoTexture.ts","../../src/layaAir/laya/media/VideoNode.ts","../../src/layaAir/laya/components/AnimatorPlayState2D.ts","../../src/layaAir/laya/components/AnimatorControllerLayer2D.ts","../../src/layaAir/laya/components/AnimatorControllerParse.ts","../../src/layaAir/laya/components/AnimatorUpdateMode.ts","../../src/layaAir/laya/components/Animation2DCondition.ts","../../src/layaAir/laya/resource/TextResource.ts","../../src/layaAir/laya/components/Animator2D.ts","../../src/layaAir/laya/components/AnimatorState2D.ts","../../src/layaAir/laya/components/KeyframeNode2D.ts","../../src/layaAir/laya/components/KeyFrame2D.ts","../../src/layaAir/laya/components/Animation2DEvent.ts","../../src/layaAir/laya/components/AnimationClip2DParser01.ts","../../src/layaAir/laya/components/KeyframeNodeList2D.ts","../../src/layaAir/laya/components/AnimationClip2D.ts","../../src/layaAir/laya/components/Animation2DParm.ts","../../src/layaAir/laya/components/AnimatorStateCondition.ts","../../src/layaAir/laya/components/AnimatorTransition2D.ts","../../src/layaAir/laya/components/AnimatorController2D.ts","../../src/layaAir/laya/components/Script.ts","../../src/layaAir/laya/loaders/TextResourceLoader.ts","../../src/layaAir/laya/loaders/AtlasLoader.ts","../../src/layaAir/laya/loaders/HierarchyParser.ts","../../src/layaAir/laya/loaders/HierarchyLoader.ts","../../src/layaAir/laya/RenderEngine/HDRTextureInfo.ts","../../src/layaAir/laya/loaders/TextureLoader.ts","../../src/layaAir/laya/loaders/AnimationClip2DLoader.ts","../../src/layaAir/laya/loaders/AnimationController2DLoader.ts","../../src/layaAir/laya/loaders/NullLoader.ts","../../src/layaAir/laya/loaders/BitmapFontLoader.ts","../../src/layaAir/laya/loaders/TTFFontLoader.ts","../../src/layaAir/laya/RenderEngine/RenderShader/RenderState.ts","../../src/layaAir/laya/RenderEngine/UniformBufferBase.ts","../../src/layaAir/laya/RenderEngine/UniformBufferObject.ts","../../src/layaAir/laya/resource/Material.ts","../../src/layaAir/laya/resource/TextureCube.ts","../../src/layaAir/laya/loaders/MaterialParser.ts","../../src/layaAir/laya/loaders/MaterialLoader.ts","../../src/layaAir/laya/utils/ParseJSON.ts","../../src/layaAir/laya/loaders/ShaderParser.ts","../../src/layaAir/laya/loaders/ShaderLoader.ts","../../src/layaAir/laya/media/webaudio/WebAudioLoader.ts","../../src/layaAir/laya/ModuleDef.ts","../../src/layaAir/laya/net/LocalStorage.ts","../../src/layaAir/laya/webgl/shader/d2/value/PrimitiveSV.ts","../../src/layaAir/laya/webgl/shader/d2/value/TextureSV.ts","../../src/layaAir/laya/utils/Mouse.ts","../../src/layaAir/laya/webgl/utils/MeshParticle2D.ts","../../src/layaAir/Laya.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/DrawType.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/RenderDrawMode.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/RenderIndexMode.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/TextureCompareMode.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/TextureDecodeFormat.ts","../../src/layaAir/laya/RenderEngine/BlendState.ts","../../src/layaAir/laya/RenderEngine/CommandUniformMap.ts","../../src/layaAir/laya/RenderEngine/RenderStateCommand.ts","../../src/layaAir/laya/effect/EffectBase.ts","../../src/layaAir/laya/events/KeyLocation.ts","../../src/layaAir/laya/events/Keyboard.ts","../../src/layaAir/laya/layagl/CommandEncoder.ts","../../src/layaAir/laya/layagl/QuickTestTool.ts","../../src/layaAir/laya/net/Socket.ts","../../src/layaAir/laya/RenderEngine/RenderShader/GLSLCodeGenerator.ts","../../src/layaAir/laya/RenderEngine/RenderShader/ShaderInstance.ts","../../src/layaAir/laya/RenderEngine/RenderShader/ShaderVariable.ts","../../src/layaAir/laya/resource/Texture3D.ts","../../src/layaAir/laya/utils/Base64Tool.ts","../../src/layaAir/laya/utils/BufferSliceUtils.ts","../../src/layaAir/laya/utils/Log.ts","../../src/layaAir/laya/utils/PerfData.ts","../../src/layaAir/laya/utils/PerfHUD.ts","../../src/layaAir/laya/utils/PoolCache.ts","../../src/layaAir/laya/utils/SingletonList.ts","../../src/layaAir/laya/utils/TimeLine.ts","../../src/layaAir/laya/display/cmd/DrawParticleCmd.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/NativeGLEngine/NativeCommandUniformMap.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/NativeGLEngine/NativeGLObject.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/NativeGLEngine/NativeGLTextureContext.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/NativeGLEngine/NativeGL2TextureContext.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/NativeGLEngine/NativeGLRenderDrawContext.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/NativeGLEngine/NativeRenderStateCommand.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/NativeGLEngine/NativeRenderState.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/NativeGLEngine/CommonMemory/MemoryDataType.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/NativeGLEngine/NativeShaderData.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/WebGLEngine/GLEnum/WebGLMode.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/WebGLEngine/GLEnum/WebGLExtension.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/NativeGLEngine/CommonMemory/CommonMemoryAllocater.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/NativeGLEngine/CommonMemory/NativeMemory.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/NativeGLEngine/CommonMemory/UploadMemory.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/NativeGLEngine/CommonMemory/UploadMemoryManager.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/NativeGLEngine/NativeUniformBufferObject.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/NativeGLEngine/NativeGLVertexState.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/WebGLEngine/GLObject.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/WebGLEngine/WebGLInternalTex.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/WebGLEngine/WebGLInternalRT.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/WebGLEngine/GLTextureContext.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/WebGLEngine/GL2TextureContext.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/WebGLEngine/GLBuffer.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/WebGLEngine/GLParams.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/WebGLEngine/GLRender2DContext.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/WebGLEngine/GLRenderDrawContext.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/WebGLEngine/GLRenderState.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/WebGLEngine/GLShaderInstance.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/WebGLEngine/GLVertexState.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/WebGLEngine/VertexArrayObject.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/WebGLEngine/GlCapable.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/WebGLEngine/WebGLEngine.ts","../../src/layaAir/laya/webgl/text/ArabicReshaper.ts","../../src/layaAir/laya/webgl/utils/MatirxArray.ts","../../src/layaAir/laya/components/AnimatorState2DScript.ts","../../src/layaAir/laya/effect/ButtonEffect.ts","../../src/layaAir/laya/effect/FadeIn.ts","../../src/layaAir/laya/effect/FadeOut.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/NativeGLEngine/NativeGLRender2DContext.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/NativeGLEngine/NativeGLRenderEngineFactory.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/NativeGLEngine/NativeWebGLEngine.ts","../../src/layaAir/laya/resource/RenderTextureCube.ts","../../src/layaAir/laya/media/Sound.ts","../../src/layaAir/laya/utils/StringKey.ts","../../src/layaAir/laya/RenderEngine/SubUniformBufferData.ts","../../src/layaAir/laya/system/System.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/WebGLEngine/WebGLRenderEngineFactory.ts"],"sourcesContent":["/**\n * <code>ClassUtils</code> 是一个类工具类。\n */\nexport class ClassUtils {\n    static _classMap: Record<string, any> = {};\n\n    /**\n     * 注册 Class 映射，方便在class反射时获取。\n     * @param\tclassName 映射的名字或者别名。\n     * @param\tclassDef 类的全名或者类的引用，全名比如:\"laya.Sprite\"。\n     */\n    static regClass(className: string, classDef: any): void {\n        ClassUtils._classMap[className] = classDef;\n    }\n\n    /**\n     * 根据名字返回类对象。\n     * @param\tclassName 类名(比如laya.display.Sprite)或者注册的别名(比如Sprite)。\n     * @return 类对象\n     */\n    static getClass(className: string): any {\n        return ClassUtils._classMap[className];\n    }\n\n    /**\n     * 根据名称创建 Class 实例。\n     * @param\tclassName 类名(比如laya.display.Sprite)或者注册的别名(比如Sprite)。\n     * @return\t返回类的实例。\n     */\n    static getInstance(className: string): any {\n        var compClass: any = ClassUtils.getClass(className);\n        if (compClass) return new compClass();\n        else console.warn(\"[error] Undefined class:\", className);\n        return null;\n    }\n}\n\n","import { ClassUtils } from \"./laya/utils/ClassUtils\";\n\nexport type FEnumDescriptor = {\n    name: string,\n    value: any,\n    extend?: FEnumDescriptor,\n    [index: string]: any,\n}[] | any[] | Object | string;\n\nexport type FPropertyType = string | Function | Object | [FPropertyType] | [\"Record\", FPropertyType];\n\nexport interface FPropertyDescriptor {\n    /** 属性名称。一般不需要设定。 */\n    name: string;\n    /** \n     * 属性类型。\n     * 基础类型有：number,string,boolean,any，注意是使用字符串，不是类型。\n     * 复合类型有：数组，使用类似[\"number\"]这样的方式表达；字典，使用类似[\"Record\", \"number\"]这样的方式表达，第一个元素固定为Record，第二个元素为实际类型。\n     * 其他对象类型可以直接使用类名，但要注意该类必须有使用regClass装饰器。也支持枚举类型。枚举类型不需要regClass。\n     * 如果不提供type，表示只用于ui样式，没有实际对应数据，和不会序列化\n     */\n    type: FPropertyType;\n    /** 标题。如果不提供，则使用name。 */\n    caption: string;\n    /** 提示文字 */\n    tips: string;\n\n    /** 属性栏目。为多个属性设置相同的值，可以将它们显示在同一个Inspector栏目内。 */\n    catalog: string;\n    /* 栏目标题。不提供则直接使用栏目名称。 */\n    catalogCaption: string;\n    /* 栏目的显示顺序，数值越小显示在前面。不提供则按属性出现的顺序。*/\n    catalogOrder: number;\n\n    /**\n     * 编辑这个属性的控件。内置有：number,string,boolean,color,vec2,vec3,vec4,asset\n     * \n     *      number : 数字输入。\n     *      string : 字符串输入。默认为单行输入，如果是多行，需要激活multiline选项。\n     *      boolean : 布尔值输入，用于单选框或多选框。\n     *      color : 一个颜色框+调色盘+拾色器\n     *      vec2 : XY输入的组合\n     *      vec3 : XYZ输入的组合\n     *      vec4 : XYZW输入的组合\n     *      asset : 选择资源\n     * \n     * 一般来说，不需要设置这个选项，编辑器会自动根据属性类型选择适合的控件，但在某些情况下可以需要强制指定。\n     * 例如，如果数据类型是Vector4，但其实它表达的是颜色，用默认编辑Vector4的控件不适合，需要在这里设置为“color”。\n     * \n     * 显式设置inspector为null，则不会为属性构造inspector。这与hidden设置为true不同。hidden为true是创建但不可见，\n     * inspector为null的话则是完全不创建。\n     */\n    inspector: string;\n\n    /** 隐藏控制:true隐藏，false显示。常用于关联属性的情况。\n     * 1. 可以用表达式，通过将条件表达式放到字符串里，获得布尔类型的运算结果，例如\"!data.a && !data.b\"，表示属性a和属性b均为空时，条件成立（true），隐藏这个属性。\n     * 2. 这里的data为当前组件的对象数据，data.a与data.b属性字段的a与b就是指当前组件中的a与b属性值，通过这种方法取到组件对象数据中的属性值，用于条件判断，作用于当前属性是否隐藏。\n     */\n    hidden: boolean | string;\n\n    /** 只读控制。\n     * 1. 可以用表达式，通过将条件表达式放到字符串里，获得布尔类型的运算结果，例如\"!data.a && !data.b\"，表示属性a和属性b均为空时，条件成立（true），该属性只读。\n     * 2. 这里的data为当前组件的对象数据，data.a与data.b属性字段的a与b就是指当前组件中的a与b属性值，通过这种方法取到组件对象数据中的属性值，用于条件判断，作用于当前属性是否隐藏。\n     */\n    readonly: boolean | string;\n\n    /** 数据检查机制。\n     * 1. 将包括表达式的字符串传入，用于判断检查是否符合表达式的条件。符合条件，需要返回报错信息。\n     * 2. 使用示例为：\"if(value == data.a) return '不能与a的值相同'\"\n     * 其中的value为当前用户在该属性输入的值，data为当前组件的对象数据，data.a是当前组件中的a属性值\n     */\n    validator: string;\n    /** 是否允许数据为空值。\n     * 可以用表达式，返回true或者false的结果。\n     */\n    required: boolean | string;\n\n    /** 是否序列化 */\n    serializable: boolean;\n    /** 属性在不参与序列化时，如果它的数据可能受其他可序列化的属性影响，在这里填写其他属性名称。这通常用于判断预制体属性是否覆盖。*/\n    affectBy: string;\n    /** 默认值。这个值只在面板中使用，它指从界面上创建对象时赋予属性的初始值。*/\n    init: any;\n\n    /** 是否多行文本输入 */\n    multiline: boolean;\n    /** 是否密码输入 */\n    password: boolean;\n    /** 如果true或者缺省，文本输入每次输入都提交；否则只有在失焦时才提交 */\n    submitOnTyping: boolean;\n    /** 如果是文本类型，是输入文本的提示信息；如果是布尔类型，是多选框的标题。 */\n    prompt: string;\n\n    /** 定义枚举 */\n    enumSource: FEnumDescriptor;\n    /** 当数据源为空时，隐藏这个属性 */\n    hideIfEnumSourceEmpty: boolean;\n\n    /** 是否反转布尔值。例如当属性值为true时，多选框显示为不勾选。 */\n    reverseBool: boolean;\n\n    /** 是否允许null值。默认为true。*/\n    nullable: boolean;\n\n    /** 数字的最小值 */\n    min: number,\n    /** 数字的最大值 */\n    max: number,\n    /** 数值范围，等同于一次性设置min和max。 */\n    range: [number, number];\n    /** 拖动方式改变数值时，每次数值改变的幅度。 */\n    step: number;\n    /** 小数点后的位数 */\n    fractionDigits: number;\n    /** 显示为百分比 */\n    percentage: boolean;\n\n    /** 对数组类型属性适用。表示数组是固定长度，不允许修改。*/\n    fixedLength: boolean;\n    /** 对数组类型属性适用。如果不提供，则表示数组允许所有操作，如果提供，则只允许列出的操作。*/\n    arrayActions: Array<\"append\" | \"insert\" | \"delete\" | \"move\">;\n    /** 对数组类型属性适用。这里可以定义数组元素的属性 */\n    elementProps: Partial<FPropertyDescriptor>;\n\n    /** 对颜色类型属性适用。表示是否提供透明度a值的修改。 */\n    showAlpha: boolean;\n    /** 对颜色类型属性适用。它与default值不同的是，当default是null时，可以用defaultColor定义一个非null时的默认值。*/\n    defaultColor: any;\n    /** 对颜色类型属性适用。允许显示一个checkbox决定颜色是否为null。 */\n    colorNullable: boolean;\n\n    /** 对对象类型属性适用。如果为true，隐藏对象的标题，同时对象下的属性的显示缩进会减少一级。*/\n    hideHeader: boolean;\n    /** 对对象类型属性适用。对象创建时可以下拉选择一个类型。如果显示设置为null，则禁止菜单。默认是显示一个创建基类的菜单。*/\n    createObjectMenu: Array<string>;\n    /** 对对象类型属性适用。表示这个属性类型有类似结构体的行为特性，即总是作为一个整体使用。\n     * 例如，obj对象的某个属性b的值是a1，a1是T类型的实例，且T类型的structLike为true，那么当a1的属性改变时，编辑器将同时调用obj.b = a1。\n     * 默认为false。\n     */\n    structLike: boolean;\n\n    /** 说明此属性是引用一个资源 */\n    isAsset: boolean;\n    /** 对资源类型的属性适用。多个资源类型用逗号分隔，例如“Image,Audio\"。*/\n    assetTypeFilter: string;\n    /** 如果属性类型是string，并且进行资源选择时，这个选项决定属性值是资源原始路径还是res://uuid这样的格式。如果是true，则是资源原始路径。默认false。*/\n    useAssetPath: boolean;\n    /** 对资源类型的属性适用。选择资源时是否允许选择内部资源 */\n    allowInternalAssets: boolean;\n    /** 对资源类型的属性适用。可以设置一个自定义的过滤器。过滤器需要先通过EditorEnv.assetMgr.customAssetFilters注册。 */\n    customAssetFilter: string;\n\n    /** 对类型是Node或者Component的属性适用。如果不为null，当在实际运行环境里执行反序列化时，引用对象不再实例化，而是将它的序列化数据原样保存到指定的属性中。*/\n    toTemplate: string;\n\n    /** 显示位置。语法：before xxx/after xxx/first/last。 */\n    position: string;\n\n    /** 表示属性是私有属性。私有属性不会显示在Inspector里，但会序列化保存。 */\n    \"private\": boolean;\n\n    /** 增加缩进，单位是层级，不是像素。 */\n    addIndent: number;\n\n    /** 表示属性是否允许多选情况下编辑。默认true。 */\n    allowMultipleObjects: boolean;\n\n    /** 表示属性不显示在派生类的属性表中 */\n    hideInDeriveType: boolean;\n\n    /** 属性改变时额外调用对象的一个函数，这里是函数名称。\n     * 函数原型是func(key?:string)。其中key在改变成员内部属性时会传递。\n     * 例如改变数据某个元素的内部属性，则key是这个元素的索引。 \n     */\n    onChange: string;\n\n    /** 额外的选项 */\n    options: Record<string, any>;\n}\n\nexport interface FTypeDescriptor {\n    /** 标题。如果不提供，则使用name。 */\n    caption: string;\n    /**帮助文档url地址 */\n    help: string;\n    /** 添加到组件菜单。 */\n    menu: string;\n    /** 图标。*/\n    icon: string;\n    /** 是否资源类型 */\n    isAsset: boolean;\n    /** 对资源类型的属性适用。多个资源类型用逗号分隔，例如“Image,Audio\"。可用值参考editor/public/IAssetInfo.ts。 */\n    assetTypeFilter: string;\n    /** 表示这个类型有类似结构体的行为特性，即总是作为一个整体使用。\n     * 例如，obj对象的某个属性b的值是a1，a1是T类型的实例，且T类型的structLike为true，那么当a1的属性改变时，编辑器将同时调用obj.b = a1。\n     * 默认为false。\n     */\n    structLike: boolean;\n    /** 属性列表 */\n    properties: Array<Partial<FPropertyDescriptor>>;\n    /** 编辑这个类实例的控件 */\n    inspector: string;\n    /** 对Component使用，表示这个组件允许挂载的节点类型。默认null */\n    worldType: \"2d\" | \"3d\" | null;\n    /** 对Component使用，如果为true，并且定义了menu属性，则这个组件还会显示在层级面板的新建对象菜单上。 */\n    inHierarchyMenu: boolean;\n    /** 额外的选项 */\n    options: Record<string, any>;\n}\n\nfunction dummy() { }\n\n/**\n * 注册一个类型，注册后才能被序列化系统自动保存和载入。\n */\nexport function regClass(assetId?: string): any {\n    return function (constructor: Function) {\n        ClassUtils.regClass(assetId, constructor);\n    };\n}\n\n/**\n * 设置类型的额外信息。\n * @param info 类型的额外信息\n */\nexport function classInfo(info?: Partial<FTypeDescriptor>): any { return dummy; }\n\n/**\n * 设置组件可以在编辑器环境中执行完整声明周期。\n */\nexport function runInEditor(constructor: Function): void { }\n\n/**\n * 使用这个装饰器，可以使属性显示在编辑器属性设置面板上，并且能序列化保存。\n * @param info 属性的类型，如: Number,\"number\",[Number],[\"Record\", Number]等。或传递对象描述详细信息，例如{ type: \"string\", multiline: true }。\n */\nexport function property(info: FPropertyType | Partial<FPropertyDescriptor>): any { return dummy; }\n","/**\n *  Config 用于配置一些全局参数。如需更改，请在初始化引擎之前设置。\n */\nexport class Config {\n    /**\n    * 画布设置是否抗锯齿，只对2D(WebGL)有效,3D抗锯齿在camera或RT上面控制。\n    */\n    static isAntialias: boolean = true;\n    /**\n     * 是否使用webgl2\n     */\n    static useWebGL2: boolean = true;\n    /*\n     * 限制fps \n     */\n    static FPS = 60;\n    /**\n     * 是否使用视网膜模式，在iOS上面可能会创建更大的RT，来达到更佳的效果\n     */\n    static useRetinalCanvas: boolean = false;\n\n    //-------------2D设置---------------------\n    /**\n     * 2D动画 Animation 的默认播放时间间隔，单位为毫秒。\n     */\n    static animationInterval: number = 50;\n\n    /**\n       * 当使用webGL渲染2d的时候，每次创建vb是否直接分配足够64k个顶点的缓存。这样可以提高效率。\n       */\n    static webGL2D_MeshAllocMaxMem: boolean = true;\n\n    /*\n     *默认文本大小，默认为12\n     */\n    static defaultFontSize: number = 12;\n    /*\n     *默认文本字体，默认为Arial\n     */\n    static defaultFont: string = \"Arial\";\n\n    //-------------引擎内部使用-------------\n    /**\n     * 设置画布是否透明，只对2D(WebGL)、3D有效。\n     */\n    static isAlpha: boolean = false;\n    /**\n     * 设置画布是否包含深度\n     */\n    static isDepth: boolean = false;\n    /**\n     * 表明在一个系统性能低的环境是否创建该上下文的boolean值\n     */\n    static isfailIfMajorPerformanceCaveat: boolean = false;\n\n    static powerPreference: WebGLPowerPreference = \"default\";\n    /**\n     * 设置画布是否预乘，只对2D(WebGL)、3D有效。\n     */\n    static premultipliedAlpha: boolean = true;\n    /**\n     * 设置画布的是否开启模板缓冲，只对2D(WebGL)、3D有效。\n     */\n    static isStencil: boolean = false;\n    /**\n     * 是否保留渲染缓冲区。\n     */\n    static preserveDrawingBuffer: boolean = false;\n    /**\n     * 是否打印Webgl指令，同时定位webgl报错\n     */\n    static printWebglOrder: boolean = false;\n    \n    /**在IOS下，一些字体会找不到，引擎提供了字体映射功能，比如默认会把 \"黑体\" 映射为 \"黑体-简\"，更多映射，可以自己添加*/\n    static fontFamilyMap: any = { \"报隶\": \"报隶-简\", \"黑体\": \"黑体-简\", \"楷体\": \"楷体-简\", \"兰亭黑\": \"兰亭黑-简\", \"隶变\": \"隶变-简\", \"凌慧体\": \"凌慧体-简\", \"翩翩体\": \"翩翩体-简\", \"苹方\": \"苹方-简\", \"手札体\": \"手札体-简\", \"宋体\": \"宋体-简\", \"娃娃体\": \"娃娃体-简\", \"魏碑\": \"魏碑-简\", \"行楷\": \"行楷-简\", \"雅痞\": \"雅痞-简\", \"圆体\": \"圆体-简\" };\n\n    /**tempConfig Fixed number of frames */\n    static fixedFrames: boolean = true;\n\t/*资源引用参数为0是否立即删除资源，如果不立即删除请调用DestrotyUnUse*/\n    static destroyResourceImmediatelyDefault = true;\n\n}\n\n","/**\n * @private\n * 静态常量集合\n */\nexport class Const {\n    static ENUM_TEXTALIGN_DEFAULT: number = 0;\n    static ENUM_TEXTALIGN_CENTER: number = 1;\n    static ENUM_TEXTALIGN_RIGHT: number = 2;\n\n    static BYTES_PE: number = 4;\n    static BYTES_PIDX: number = 2;\n\n    static MAX_CLIP_SIZE: number = 99999999;\n}\n\n/**\n * 节点标志\n */\nexport class NodeFlags {\n    static NOT_ACTIVE = 0x01;\n    static ACTIVE_INHIERARCHY = 0x02;\n    static AWAKED = 0x04;\n    static NOT_READY = 0x08;\n    static DISPLAY = 0x10;\n    static HAS_ZORDER = 0x20;\n    static HAS_MOUSE = 0x40;\n    static DISPLAYED_INSTAGE = 0x80;\n    static DRAWCALL_OPTIMIZE = 0x100;\n    static PROCESS_COLLISIONS = 0x200;\n    static PROCESS_TRIGGERS = 0x400;\n    static HAS_SCRIPT = 0x800;\n    static ESCAPE_DRAWING_TO_TEXTURE = 0x1000;\n    static DISABLE_INNER_CLIPPING = 0x2000;\n    static DISABLE_OUTER_CLIPPING = 0x4000;\n    static DISABLE_VISIBILITY = 0x8000;\n    static EDITING_NODE = 0x10000;\n    static HIDE_BY_EDITOR = 0x20000;\n    static LOCK_BY_EDITOR = 0x40000;\n}\n\nexport class HideFlags {\n    static HideInHierarchy = 0x1;\n    static HideInInspector = 0x2;\n    static DontSave = 0x4;\n    static HideAndDontSave = 0x7;\n}","import { Timer } from \"./laya/utils/Timer\";\nimport { Loader } from \"./laya/net/Loader\";\nimport { Context } from \"./laya/resource/Context\";\nimport { Browser } from \"./laya/utils/Browser\";\nimport { Stage } from \"./laya/display/Stage\";\n\n/**\n * @internal\n * 使用全局类的时候，避免引用其他模块\n */\nexport class ILaya {\n    static Loader: typeof Loader = null;\n    static Context: typeof Context = null;\n    static Browser: typeof Browser = null;\n\n    static Laya: any = null;\n    static loader: Loader = null;\n    static timer: Timer = null;\n    static systemTimer: Timer = null;\n    static physicsTimer: Timer = null;\n    static stage: Stage = null;\n}\n","export class LayaEnv {\n    static version: string = \"3.1.2\";\n    static isPlaying: boolean = true;\n    static isPreview: boolean = false;\n    static isConch: boolean = (<any>window).conch != null;\n\n    /** @deprecated Uses Laya.addBeforeInitCallback */\n    static beforeInit: (stageConfig: IStageConfig) => void;\n    /** @deprecated Use Laya.addAfterInitCallback */\n    static afterInit: () => void;\n}\n\nexport interface IStageConfig {\n    designWidth?: number;\n    designHeight?: number;\n    scaleMode?: string;\n    screenMode?: string;\n    alignV?: string;\n    alignH?: string;\n    backgroundColor?: string;\n}","/**\n * <p> <code>Pool</code> 是对象池类，用于对象的存储、重复使用。</p>\n * <p>合理使用对象池，可以有效减少对象创建的开销，避免频繁的垃圾回收，从而优化游戏流畅度。</p>\n */\nexport class Pool {\n    /**@private */\n    private static _CLSID: number = 0;\n    /**@private */\n    private static POOLSIGN: string = \"__InPool\";\n    /**@private  对象存放池。*/\n    private static _poolDic: any = {};\n\n    /**\n     * 根据对象类型标识字符，获取对象池。\n     * @param sign 对象类型标识字符。\n     * @return 对象池。\n     */\n    static getPoolBySign(sign: string): any[] {\n        return Pool._poolDic[sign] || (Pool._poolDic[sign] = []);\n    }\n\n    /**\n     * 清除对象池的对象。\n     * @param sign 对象类型标识字符。\n     */\n    static clearBySign(sign: string): void {\n        if (Pool._poolDic[sign]) Pool._poolDic[sign].length = 0;\n    }\n\n    /**\n     * 将对象放到对应类型标识的对象池中。\n     * @param sign 对象类型标识字符。\n     * @param item 对象。\n     */\n    static recover(sign: string, item: any): void {\n        if (item[Pool.POOLSIGN] !== false) //有这个标志，才表明对象是从Pool里获取的，允许recover\n            return;\n        item[Pool.POOLSIGN] = true;\n        Pool.getPoolBySign(sign).push(item);\n    }\n\n    /**\n     * 根据类名进行回收，如果类有类名才进行回收，没有则不回收\n     * @param\tinstance 类的具体实例\n     */\n    static recoverByClass(instance: any): void {\n        if (instance) {\n            var className: string = instance[\"__className\"] || instance.constructor._$gid;\n            if (className) Pool.recover(className, instance);\n        }\n    }\n\n    /**\n     * 返回类的唯一标识\n     */\n    private static _getClassSign(cla: any): string {\n        var className = cla[\"__className\"] || cla[\"_$gid\"];\n        if (!className) {\n            cla[\"_$gid\"] = className = Pool._CLSID + \"\";\n            Pool._CLSID++;\n        }\n        return className;\n    }\n\n    /**\n     * 根据类型创建对象\n     * @param\tcls 类型\n     */\n    static createByClass<T>(cls: new () => T): T {\n        return Pool.getItemByClass(Pool._getClassSign(cls), cls);\n    }\n\n    /**\n     * <p>根据传入的对象类型标识字符，获取对象池中此类型标识的一个对象实例。</p>\n     * <p>当对象池中无此类型标识的对象时，则根据传入的类型，创建一个新的对象返回。</p>\n     * @param sign 对象类型标识字符。\n     * @param cls 用于创建该类型对象的类。\n     * @return 此类型标识的一个对象。\n     */\n    static getItemByClass<T>(sign: string, cls: new () => T): T {\n        let rst: any;\n        let pool = Pool.getPoolBySign(sign);\n        if (pool.length)\n            rst = pool.pop();\n        else\n            rst = new cls();\n        rst[Pool.POOLSIGN] = false;\n        return rst;\n    }\n\n    /**\n     * <p>根据传入的对象类型标识字符，获取对象池中此类型标识的一个对象实例。</p>\n     * <p>当对象池中无此类型标识的对象时，则使用传入的创建此类型对象的函数，新建一个对象返回。</p>\n     * @param sign 对象类型标识字符。\n     * @param createFun 用于创建该类型对象的方法。\n     * @param caller this对象\n     * @return 此类型标识的一个对象。\n     */\n    static getItemByCreateFun(sign: string, createFun: Function, caller: any = null): any {\n        var pool: any[] = Pool.getPoolBySign(sign);\n        var rst: any = pool.length ? pool.pop() : createFun.call(caller);\n        rst[Pool.POOLSIGN] = false;\n        return rst;\n    }\n\n    /**\n     * 根据传入的对象类型标识字符，获取对象池中已存储的此类型的一个对象，如果对象池中无此类型的对象，则返回 null 。\n     * @param sign 对象类型标识字符。\n     * @return 对象池中此类型的一个对象，如果对象池中无此类型的对象，则返回 null 。\n     */\n    static getItem(sign: string): any {\n        var pool: any[] = Pool.getPoolBySign(sign);\n        var rst: any = pool.length ? pool.pop() : null;\n        if (rst) {\n            rst[Pool.POOLSIGN] = false;\n        }\n        return rst;\n    }\n\n}\n\n\n","var _gid: number = 1;\nconst _pi: number = 180 / Math.PI;\nconst _pi2: number = Math.PI / 180;\n\n/**\n * <code>Utils</code> 是工具类。\n */\nexport class Utils {\n\n    /**\n     * 角度转弧度。\n     * @param\tangle 角度值。\n     * @return\t返回弧度值。\n     */\n    static toRadian(angle: number): number {\n        return angle * _pi2;\n    }\n\n    /**\n     * 弧度转换为角度。\n     * @param\tradian 弧度值。\n     * @return\t返回角度值。\n     */\n    static toAngle(radian: number): number {\n        return radian * _pi;\n    }\n\n    /**\n     * 将传入的 uint 类型颜色值转换为字符串型颜色值。\n     * @param color 颜色值。\n     * @return 字符串型颜色值。\n     */\n    static toHexColor(color: number): string {\n        if (color < 0 || isNaN(color)) return null;\n        var str: string = color.toString(16);\n        while (str.length < 6) str = \"0\" + str;\n        return \"#\" + str;\n    }\n\n    static fromStringColor(value: string): number {\n        if (!value)\n            return 0;\n\n        if (value.indexOf(\"rgba(\") >= 0 || value.indexOf(\"rgb(\") >= 0) {\n            let p1 = value.indexOf(\"(\");\n            let p2 = value.indexOf(\")\");\n            if (p1 == -1 || p2 == -1)\n                return 0;\n\n            value = value.substring(p1 + 1, p2);\n            let arr: any[] = value.split(\",\");\n            let len = arr.length;\n            for (let i = 0; i < len; i++) {\n                arr[i] = parseFloat(arr[i]);\n                if (isNaN(arr[i]))\n                    arr[i] = 0;\n            }\n            if (arr.length == 4)\n                return (arr[0] << 24) + (arr[1] << 16) + (arr[2] << 8) + Math.round(arr[3] * 255);\n            else\n                return (arr[0] << 16) + (arr[1] << 8) + arr[2];\n        } else {\n            value.charAt(0) === '#' && (value = value.substring(1));\n            let len = value.length;\n            if (len === 3 || len === 4) {\n                let temp: string = \"\";\n                for (let i = 0; i < len; i++) {\n                    temp += (value[i] + value[i]);\n                }\n                value = temp;\n            }\n            return parseInt(value, 16);\n        }\n    }\n\n    /**获取一个全局唯一ID。*/\n    static getGID(): number {\n        return _gid++;\n    }\n\n    /**\n     * @private\n     * 清空source数组，复制array数组的值。\n     * @param\tsource 需要赋值的数组。\n     * @param\tarray 新的数组值。\n     * @return \t复制后的数据 source 。\n     */\n    static copyArray(source: any[], array: any[]): any[] {\n        source || (source = []);\n        if (!array) return source;\n        source.length = array.length;\n        var len: number = array.length;\n        for (let i = 0; i < len; i++) {\n            source[i] = array[i];\n        }\n        return source;\n    }\n\n    /**\n     * @private\n     * 批量移动点坐标。\n     * @param points 坐标列表。\n     * @param x x轴偏移量。\n     * @param y y轴偏移量。\n     */\n    static transPointList(points: any[], x: number, y: number): void {\n        var i: number, len: number = points.length;\n        for (i = 0; i < len; i += 2) {\n            points[i] += x;\n            points[i + 1] += y;\n        }\n    }\n\n    /**\n     * 解析一个字符串，并返回一个整数。和JS原生的parseInt不同：如果str为空或者非数字，原生返回NaN，这里返回0。\n     * @param\tstr\t\t要被解析的字符串。\n     * @param\tradix\t表示要解析的数字的基数。默认值为0，表示10进制，其他值介于 2 ~ 36 之间。如果它以 “0x” 或 “0X” 开头，将以 16 为基数。如果该参数不在上述范围内，则此方法返回 0。\n     * @return\t返回解析后的数字。\n     */\n    static parseInt(str: string, radix: number = 0): number {\n        var result: any = parseInt(str, radix);\n        if (isNaN(result)) return 0;\n        return result;\n    }\n\n    /**\n     * 获得路径中的文件名（包含扩展名）\n     */\n    static getBaseName(path: string): string {\n        let i = path.lastIndexOf(\"/\");\n        if (i != -1)\n            path = path.substring(i + 1);\n        i = path.indexOf(\"?\");\n        if (i != -1)\n            path = path.substring(0, i);\n        return path;\n    }\n\n    /**\n     * 获取文件名的扩展名，并转换为小写字母。例如\"1.abc\"将返回abc。\n     */\n    static getFileExtension(path: string): string {\n        let i = path.lastIndexOf(\".\");\n\n        if (i != -1) {\n            let ext = path.substring(i + 1).toLowerCase();\n            let j = ext.indexOf(\"?\");\n            if (j != -1)\n                ext = ext.substring(0, j);\n            if (ext === \"ls\") { //lanit.ls ltcb.ls 这类特殊扩展名的支持\n                let k = path.lastIndexOf(\".\", i - 1);\n                if (k != -1) {\n                    let ext2 = path.substring(k + 1, i + 1) + ext;\n                    if (ext2 === \"lanit.ls\" || ext2 === \"ltcb.ls\")\n                        return ext2;\n                }\n            }\n            return ext;\n        }\n        else\n            return \"\";\n    }\n\n    /**\n     * 更改文件名的扩展名。\n     */\n    static replaceFileExtension(path: string, newExt: string, excludeDot?: boolean): string {\n        if (!path)\n            return path;\n        let i = path.lastIndexOf(\".\");\n        if (newExt.length > 0 && !excludeDot)\n            newExt = \".\" + newExt;\n        if (i != -1) {\n            let j = path.indexOf(\"?\", i);\n            if (j != -1)\n                return path.substring(0, i) + newExt + path.substring(j);\n            else\n                return path.substring(0, i) + newExt;\n        }\n        else\n            return path + newExt;\n    }\n}\n\n","import { ILaya } from \"../../ILaya\";\nimport { LayaEnv } from \"../../LayaEnv\";\nimport { NodeFlags } from \"../Const\";\nimport { Node } from \"../display/Node\"\nimport { Pool } from \"../utils/Pool\"\nimport { Utils } from \"../utils/Utils\";\n\n/**\n * <code>Component</code> 类用于创建组件的基类。\n */\nexport class Component {\n    /** @private */\n    _id: number;\n    /**@private */\n    private _hideFlags: number = 0;\n    /**@private */\n    private _enableState: boolean;\n    /** @internal */\n    _status: number = 0; //1-awaked,2-starting,3-started,4-destroyed\n\n    /**\n     * 获取所属Node节点。\n     */\n    owner: Node;\n    /** @internal */\n    _enabled: boolean = true;\n    /**\n     * 是否单例，即同一个节点只能添加此类型的脚本一次\n     */\n    _singleton?: boolean = true;\n    /**\n     * 是否可以在IDE环境中运行\n     */\n    runInEditor: boolean;\n    scriptPath: string;\n    _extra: IComponentExtra;\n\n    get hideFlags(): number {\n        return this._hideFlags;\n    }\n\n    set hideFlags(value: number) {\n        this._hideFlags = value;\n    }\n\n    /**\n     * 创建一个新的 <code>Component</code> 实例。\n     */\n    constructor() {\n        this._id = Utils.getGID();\n\n        this._initialize();\n    }\n\n    //@internal\n    _initialize(): void {\n        this._extra = {};\n    }\n\n    hasHideFlag(flag: number): boolean {\n        return (this._hideFlags & flag) != 0;\n    }\n\n    /**\n     * 唯一标识ID。\n     */\n    get id(): number {\n        return this._id;\n    }\n\n    /**\n     * 是否启用组件。\n     */\n    get enabled(): boolean {\n        return this._enabled;\n    }\n\n    set enabled(value: boolean) {\n        if (this._enabled != value) {\n            this._enabled = value;\n            if (this.owner)\n                this._setActive(value && this.owner.activeInHierarchy);\n        }\n    }\n\n    get awaked(): boolean {\n        return this._status > 0;\n    }\n\n    /**\n     * 是否已经销毁 。\n     */\n    get destroyed(): boolean {\n        return this._status == 4;\n    }\n    /**\n     * @internal\n     */\n    _isScript(): boolean {\n        return false;\n    }\n    /**\n     * @internal\n     */\n    protected _resetComp(): void {\n        this._enabled = true;\n        this._status = 0;\n        this._enableState = false;\n        this.owner = null;\n    }\n\n    _setOwner(node: Node) {\n        if (this._status != 0) {\n            throw 'reuse a destroyed component';\n        }\n        this.owner = node;\n\n        if (this._isScript())\n            node._setBit(NodeFlags.HAS_SCRIPT, true);\n\n        this._onAdded();\n        this.onAdded();\n    }\n\n    /**\n     * 被添加到节点后调用，可根据需要重写此方法\n     * @internal\n     */\n    protected _onAdded(): void {\n    }\n\n    /**\n   * 被激活后调用，可根据需要重写此方法\n   * @internal\n   */\n    protected _onAwake(): void {\n    }\n\n    /**\n     * 被激活后调用，可根据需要重写此方法\n     * @internal\n     */\n    protected _onEnable(): void {\n        this.onEnable();\n    }\n\n    /**\n    * 被禁用时调用，可根据需要重写此方法\n    * @internal\n    * 销毁组件\n    */\n    protected _onDisable(): void {\n        this.onDisable();\n    }\n\n    /**\n     * 被销毁时调用，可根据需要重写此方法\n     * @internal\n     */\n    protected _onDestroy(): void {\n    }\n\n    /**\n     * @internal\n     */\n    _parse(data: any, interactMap: any = null): void {\n        //override it.\n    }\n\n    /**\n     * @internal\n     */\n    _parseInteractive(data: any = null, spriteMap: any = null) {\n        //override it.\n    }\n\n    /**\n     * @internal\n     */\n    _cloneTo(dest: Component): void {\n        //override it.\n    }\n\n    /**\n     * @internal\n     */\n    _setActive(value: boolean): void {\n        if (value) {\n            if (this._status == 0) {\n                this._status = 1;\n\n                if (LayaEnv.isPlaying || this.runInEditor) {\n                    this._onAwake();\n                    this.onAwake();\n                }\n            }\n            if (this._enabled && !this._enableState) {\n                this._enableState = true;\n\n                if (LayaEnv.isPlaying || this.runInEditor) {\n                    let driver = (this.owner._is3D && this.owner._scene)?._componentDriver || ILaya.stage._componentDriver;\n                    driver.add(this);\n\n                    if (LayaEnv.isPlaying && this._isScript())\n                        this.setupScript();\n\n                    this._onEnable();\n                }\n            }\n        } else if (this._enableState) {\n            this._enableState = false;\n            if (LayaEnv.isPlaying || this.runInEditor) {\n                let driver = (this.owner._is3D && this.owner._scene)?._componentDriver || ILaya.stage._componentDriver;\n                driver.remove(this);\n\n                ILaya.stage.offAllCaller(this);\n\n                this._onDisable();\n            }\n        }\n    }\n\n    protected setupScript() {\n    }\n\n    /**\n     * 销毁组件\n     */\n    destroy(): void {\n        if (this._status == 4)\n            return;\n\n        if (this.owner)\n            this.owner._destroyComponent(this);\n        else if(!this.destroyed)\n            this._destroy(true);\n    }\n\n    /**\n     * @internal\n     */\n    _destroy(second?: boolean): void {\n        if (second) {\n            this._onDestroy();\n            this.onDestroy();\n            if (this.onReset) {\n                this.onReset();\n                this._resetComp();\n                Pool.recoverByClass(this);\n            }\n            return;\n        }\n\n        this._setActive(false);\n        this._status = 4;\n\n        let driver = (this.owner._is3D && this.owner._scene)?._componentDriver || ILaya.stage._componentDriver;\n        driver._toDestroys.add(this);\n    }\n\n    /**\n     * 被添加到节点后调用，和Awake不同的是即使节点未激活onAdded也会调用。\n     */\n    onAdded(): void {\n    }\n\n    /**\n     * 重置组件参数到默认值，如果实现了这个函数，则组件会被重置并且自动回收到对象池，方便下次复用\n     * 如果没有重置，则不进行回收复用\n\n     */\n    onReset?(): void;\n\n    /**\n     * 组件被激活后执行，此时所有节点和组件均已创建完毕，次方法只执行一次\n     */\n    onAwake(): void {\n    }\n\n    /**\n     * 组件被启用后执行，比如节点被添加到舞台后\n     */\n    onEnable(): void {\n    }\n\n    /**\n     * 第一次执行update之前执行，只会执行一次\n     */\n    onStart?(): void;\n\n    /**\n     * 每帧更新时执行，尽量不要在这里写大循环逻辑或者使用getComponent方法\n     */\n    onUpdate?(): void;\n\n    /**\n     * 每帧更新时执行，在update之后执行，尽量不要在这里写大循环逻辑或者使用getComponent方法\n     */\n    onLateUpdate?(): void;\n\n    /**\n     * 渲染之前执行\n     */\n    onPreRender?(): void;\n\n    /**\n     * 渲染之后执行\n     */\n    onPostRender?(): void;\n\n    /**\n     * 组件被禁用时执行，比如从节点从舞台移除后\n     */\n    onDisable(): void {\n    }\n\n    /**\n     * 手动调用节点销毁时执行\n     */\n    onDestroy(): void {\n    }\n}\n\nexport interface IComponentExtra { }","import { Point } from \"./Point\";\nimport { Pool } from \"../utils/Pool\"\n\n/**\n * <p> <code>Matrix</code> 类表示一个转换矩阵，它确定如何将点从一个坐标空间映射到另一个坐标空间。</p>\n * <p>您可以对一个显示对象执行不同的图形转换，方法是设置 Matrix 对象的属性，将该 Matrix 对象应用于 Transform 对象的 matrix 属性，然后应用该 Transform 对象作为显示对象的 transform 属性。这些转换函数包括平移（x 和 y 重新定位）、旋转、缩放和倾斜。</p>\n */\nexport class Matrix {\n\n    /**@private 一个初始化的 <code>Matrix</code> 对象，不允许修改此对象内容。*/\n    static EMPTY: Matrix = new Matrix();\n    /**用于中转使用的 <code>Matrix</code> 对象。*/\n    static TEMP: Matrix = new Matrix();\n    /**@internal */\n    static _createFun: Function|null = null;\n\n    /**缩放或旋转图像时影响像素沿 x 轴定位的值。*/\n    a: number;\n    /**旋转或倾斜图像时影响像素沿 y 轴定位的值。*/\n    b: number;\n    /**旋转或倾斜图像时影响像素沿 x 轴定位的值。*/\n    c: number;\n    /**缩放或旋转图像时影响像素沿 y 轴定位的值。*/\n    d: number;\n    /**沿 x 轴平移每个点的距离。*/\n    tx: number;\n    /**沿 y 轴平移每个点的距离。*/\n    ty: number;\n    /**@internal 是否有旋转缩放操作*/\n    _bTransform: boolean = false;\n\n    /**\n     * 使用指定参数创建新的 <code>Matrix</code> 对象。\n     * @param a\t\t（可选）缩放或旋转图像时影响像素沿 x 轴定位的值。\n     * @param b\t\t（可选）旋转或倾斜图像时影响像素沿 y 轴定位的值。\n     * @param c\t\t（可选）旋转或倾斜图像时影响像素沿 x 轴定位的值。\n     * @param d\t\t（可选）缩放或旋转图像时影响像素沿 y 轴定位的值。\n     * @param tx\t（可选）沿 x 轴平移每个点的距离。\n     * @param ty\t（可选）沿 y 轴平移每个点的距离。\n     */\n    constructor(a: number = 1, b: number = 0, c: number = 0, d: number = 1, tx: number = 0, ty: number = 0, nums: number = 0) {\n        if (Matrix._createFun != null) {\n            return Matrix._createFun(a, b, c, d, tx, ty, nums);\n        }\n        this.a = a;\n        this.b = b;\n        this.c = c;\n        this.d = d;\n        this.tx = tx;\n        this.ty = ty;\n        this._checkTransform();\n    }\n\n    /**\n     * 将本矩阵设置为单位矩阵。\n     * @return 返回当前矩形。\n     */\n    identity(): Matrix {\n        this.a = this.d = 1;\n        this.b = this.tx = this.ty = this.c = 0;\n        this._bTransform = false;\n        return this;\n    }\n\n    /**@internal */\n    _checkTransform(): boolean {\n        return this._bTransform = (this.a !== 1 || this.b !== 0 || this.c !== 0 || this.d !== 1);\n    }\n\n    /**\n     * 设置沿 x 、y 轴平移每个点的距离。\n     * @param\tx 沿 x 轴平移每个点的距离。\n     * @param\ty 沿 y 轴平移每个点的距离。\n     * @return\t返回对象本身\n     */\n    setTranslate(x: number, y: number): Matrix {\n        this.tx = x;\n        this.ty = y;\n        return this;\n    }\n\n    /**\n     * 沿 x 和 y 轴平移矩阵，平移的变化量由 x 和 y 参数指定。\n     * @param\tx 沿 x 轴向右移动的量（以像素为单位）。\n     * @param\ty 沿 y 轴向下移动的量（以像素为单位）。\n     * @return 返回此矩形对象。\n     */\n    translate(x: number, y: number): Matrix {\n        this.tx += x;\n        this.ty += y;\n        return this;\n    }\n\n    /**\n     * 对矩阵应用缩放转换。\n     * @param\tx 用于沿 x 轴缩放对象的乘数。\n     * @param\ty 用于沿 y 轴缩放对象的乘数。\n     * @return\t返回矩阵对象本身\n     */\n    scale(x: number, y: number): Matrix {\n        this.a *= x;\n        this.d *= y;\n        this.c *= x;\n        this.b *= y;\n        this.tx *= x;\n        this.ty *= y;\n        this._bTransform = true;\n        return this;\n    }\n\n    /**\n     * 对 Matrix 对象应用旋转转换。\n     * @param\tangle 以弧度为单位的旋转角度。\n     * @return\t返回矩阵对象本身\n     */\n    rotate(angle: number): Matrix {\n        var cos: number = Math.cos(angle);\n        var sin: number = Math.sin(angle);\n        var a1: number = this.a;\n        var c1: number = this.c;\n        var tx1: number = this.tx;\n\n        this.a = a1 * cos - this.b * sin;\n        this.b = a1 * sin + this.b * cos;\n        this.c = c1 * cos - this.d * sin;\n        this.d = c1 * sin + this.d * cos;\n        this.tx = tx1 * cos - this.ty * sin;\n        this.ty = tx1 * sin + this.ty * cos;\n        this._bTransform = true;\n        return this;\n    }\n\n    /**\n     * 对 Matrix 对象应用倾斜转换。\n     * @param\tx 沿着 X 轴的 2D 倾斜弧度。\n     * @param\ty 沿着 Y 轴的 2D 倾斜弧度。\n     * @return 当前 Matrix 对象。\n     */\n    skew(x: number, y: number): Matrix {\n        var tanX: number = Math.tan(x);\n        var tanY: number = Math.tan(y);\n        var a1: number = this.a;\n        var b1: number = this.b;\n        this.a += tanY * this.c;\n        this.b += tanY * this.d;\n        this.c += tanX * a1;\n        this.d += tanX * b1;\n        return this;\n    }\n\n    /**\n     * 对指定的点应用当前矩阵的逆转化并返回此点。\n     * @param\tout 待转化的点 Point 对象。\n     * @return\t返回out\n     */\n    invertTransformPoint(out: Point): Point {\n        var a1: number = this.a;\n        var b1: number = this.b;\n        var c1: number = this.c;\n        var d1: number = this.d;\n        var tx1: number = this.tx;\n        var n: number = a1 * d1 - b1 * c1;\n\n        var a2: number = d1 / n;\n        var b2: number = -b1 / n;\n        var c2: number = -c1 / n;\n        var d2: number = a1 / n;\n        var tx2: number = (c1 * this.ty - d1 * tx1) / n;\n        var ty2: number = -(a1 * this.ty - b1 * tx1) / n;\n        return out.setTo(a2 * out.x + c2 * out.y + tx2, b2 * out.x + d2 * out.y + ty2);\n    }\n\n    /**\n     * 将 Matrix 对象表示的几何转换应用于指定点。\n     * @param\tout 用来设定输出结果的点。\n     * @return\t返回out\n     */\n    transformPoint(out: Point): Point {\n        return out.setTo(this.a * out.x + this.c * out.y + this.tx, this.b * out.x + this.d * out.y + this.ty);\n    }\n\n    /**\n     * 将 Matrix 对象表示的几何转换应用于指定点，忽略tx、ty。\n     * @param\tout 用来设定输出结果的点。\n     * @return\t返回out\n     */\n    transformPointN(out: Point): Point {\n        return out.setTo(this.a * out.x + this.c * out.y /*+ tx*/, this.b * out.x + this.d * out.y /*+ ty*/);\n    }\n\n    /**\n     * 获取 X 轴缩放值。\n     * @return  X 轴缩放值。\n     */\n    getScaleX(): number {\n        return this.b === 0 ? this.a : Math.sqrt(this.a * this.a + this.b * this.b);\n    }\n\n    /**\n     * 获取 Y 轴缩放值。\n     * @return Y 轴缩放值。\n     */\n    getScaleY(): number {\n        return this.c === 0 ? this.d : Math.sqrt(this.c * this.c + this.d * this.d);\n    }\n\n    /**\n     * 执行原始矩阵的逆转换。\n     * @return 当前矩阵对象。\n     */\n    invert(): Matrix {\n        var a1: number = this.a;\n        var b1: number = this.b;\n        var c1: number = this.c;\n        var d1: number = this.d;\n        var tx1: number = this.tx;\n        var n: number = a1 * d1 - b1 * c1;\n        this.a = d1 / n;\n        this.b = -b1 / n;\n        this.c = -c1 / n;\n        this.d = a1 / n;\n        this.tx = (c1 * this.ty - d1 * tx1) / n;\n        this.ty = -(a1 * this.ty - b1 * tx1) / n;\n        return this;\n    }\n\n    /**\n     *  将 Matrix 的成员设置为指定值。\n     * @param\ta 缩放或旋转图像时影响像素沿 x 轴定位的值。\n     * @param\tb 旋转或倾斜图像时影响像素沿 y 轴定位的值。\n     * @param\tc 旋转或倾斜图像时影响像素沿 x 轴定位的值。\n     * @param\td 缩放或旋转图像时影响像素沿 y 轴定位的值。\n     * @param\ttx 沿 x 轴平移每个点的距离。\n     * @param\tty 沿 y 轴平移每个点的距离。\n     * @return 当前矩阵对象。\n     */\n    setTo(a: number, b: number, c: number, d: number, tx: number, ty: number): Matrix {\n        this.a = a, this.b = b, this.c = c, this.d = d, this.tx = tx, this.ty = ty;\n        return this;\n    }\n\n    /**\n     * 将指定矩阵与当前矩阵连接，从而将这两个矩阵的几何效果有效地结合在一起。\n     * @param\tmatrix 要连接到源矩阵的矩阵。\n     * @return\t当前矩阵。\n     */\n    concat(matrix: Matrix): Matrix {\n        var a: number = this.a;\n        var c: number = this.c;\n        var tx: number = this.tx;\n        this.a = a * matrix.a + this.b * matrix.c;\n        this.b = a * matrix.b + this.b * matrix.d;\n        this.c = c * matrix.a + this.d * matrix.c;\n        this.d = c * matrix.b + this.d * matrix.d;\n        this.tx = tx * matrix.a + this.ty * matrix.c + matrix.tx;\n        this.ty = tx * matrix.b + this.ty * matrix.d + matrix.ty;\n        return this;\n    }\n\n    /**\n     * 将指定的两个矩阵相乘后的结果赋值给指定的输出对象。\n     * @param\tm1 矩阵一。\n     * @param\tm2 矩阵二。\n     * @param\tout 输出对象。\n     * @return\t结果输出对象 out。\n     */\n    static mul(m1: Matrix, m2: Matrix, out: Matrix): Matrix {\n        var aa: number = m1.a, ab: number = m1.b, ac: number = m1.c, ad: number = m1.d, atx: number = m1.tx, aty: number = m1.ty;\n        var ba: number = m2.a, bb: number = m2.b, bc: number = m2.c, bd: number = m2.d, btx: number = m2.tx, bty: number = m2.ty;\n        if (bb !== 0 || bc !== 0) {\n            out.a = aa * ba + ab * bc;\n            out.b = aa * bb + ab * bd;\n            out.c = ac * ba + ad * bc;\n            out.d = ac * bb + ad * bd;\n            out.tx = ba * atx + bc * aty + btx;\n            out.ty = bb * atx + bd * aty + bty;\n        } else {\n            out.a = aa * ba;\n            out.b = ab * bd;\n            out.c = ac * ba;\n            out.d = ad * bd;\n            out.tx = ba * atx + btx;\n            out.ty = bd * aty + bty;\n        }\n        return out;\n    }\n\n    /**\n     * 将指定的两个矩阵相乘，结果赋值给指定的输出数组，长度为16。\n     * @param m1\t矩阵一。\n     * @param m2\t矩阵二。\n     * @param out\t输出对象Array。\n     * @return 结果输出对象 out。\n     */\n    static mul16(m1: Matrix, m2: Matrix, out: any[]): any[] {\n        var aa: number = m1.a, ab: number = m1.b, ac: number = m1.c, ad: number = m1.d, atx: number = m1.tx, aty: number = m1.ty;\n        var ba: number = m2.a, bb: number = m2.b, bc: number = m2.c, bd: number = m2.d, btx: number = m2.tx, bty: number = m2.ty;\n        if (bb !== 0 || bc !== 0) {\n            out[0] = aa * ba + ab * bc;\n            out[1] = aa * bb + ab * bd;\n            out[4] = ac * ba + ad * bc;\n            out[5] = ac * bb + ad * bd;\n            out[12] = ba * atx + bc * aty + btx;\n            out[13] = bb * atx + bd * aty + bty;\n        } else {\n            out[0] = aa * ba;\n            out[1] = ab * bd;\n            out[4] = ac * ba;\n            out[5] = ad * bd;\n            out[12] = ba * atx + btx;\n            out[13] = bd * aty + bty;\n        }\n        return out;\n    }\n\n    /**\n     * @private\n     * 对矩阵应用缩放转换。反向相乘\n     * @param\tx 用于沿 x 轴缩放对象的乘数。\n     * @param\ty 用于沿 y 轴缩放对象的乘数。\n     */\n    scaleEx(x: number, y: number): void {\n        var ba: number = this.a, bb: number = this.b, bc: number = this.c, bd: number = this.d;\n        if (bb !== 0 || bc !== 0) {\n            this.a = x * ba;\n            this.b = x * bb;\n            this.c = y * bc;\n            this.d = y * bd;\n        } else {\n            this.a = x * ba;\n            this.b = 0 * bd;\n            this.c = 0 * ba;\n            this.d = y * bd;\n        }\n        this._bTransform = true;\n    }\n\n    /**\n     * @private\n     * 对 Matrix 对象应用旋转转换。反向相乘\n     * @param\tangle 以弧度为单位的旋转角度。\n     */\n    rotateEx(angle: number): void {\n        var cos: number = Math.cos(angle);\n        var sin: number = Math.sin(angle);\n        var ba: number = this.a, bb: number = this.b, bc: number = this.c, bd: number = this.d;\n        if (bb !== 0 || bc !== 0) {\n            this.a = cos * ba + sin * bc;\n            this.b = cos * bb + sin * bd;\n            this.c = -sin * ba + cos * bc;\n            this.d = -sin * bb + cos * bd;\n        } else {\n            this.a = cos * ba;\n            this.b = sin * bd;\n            this.c = -sin * ba;\n            this.d = cos * bd;\n        }\n        this._bTransform = true;\n    }\n\n    /**\n     * 返回此 Matrix 对象的副本。\n     * @return 与原始实例具有完全相同的属性的新 Matrix 实例。\n     */\n    clone(): Matrix {\n        var dec: Matrix = Matrix.create();\n        dec.a = this.a;\n        dec.b = this.b;\n        dec.c = this.c;\n        dec.d = this.d;\n        dec.tx = this.tx;\n        dec.ty = this.ty;\n        dec._bTransform = this._bTransform;\n        return dec;\n    }\n\n    /**\n     * 将当前 Matrix 对象中的所有矩阵数据复制到指定的 Matrix 对象中。\n     * @param\tdec 要复制当前矩阵数据的 Matrix 对象。\n     * @return\t已复制当前矩阵数据的 Matrix 对象。\n     */\n    copyTo(dec: Matrix): Matrix {\n        dec.a = this.a;\n        dec.b = this.b;\n        dec.c = this.c;\n        dec.d = this.d;\n        dec.tx = this.tx;\n        dec.ty = this.ty;\n        dec._bTransform = this._bTransform;\n        return dec;\n    }\n\n    /**\n     * 返回列出该 Matrix 对象属性的文本值。\n     * @return 一个字符串，它包含 Matrix 对象的属性值：a、b、c、d、tx 和 ty。\n     */\n    toString(): string {\n        return this.a + \",\" + this.b + \",\" + this.c + \",\" + this.d + \",\" + this.tx + \",\" + this.ty;\n    }\n\n    /**\n     * 销毁此对象。\n     */\n    destroy(): void {\n        this.recover();\n    }\n\n    /**\n     * 回收到对象池，方便复用\n     */\n    recover(): void {\n        Pool.recover(\"Matrix\", this.identity());\n    }\n\n    /**\n     * 从对象池中创建一个 <code>Matrix</code> 对象。\n     * @return <code>Matrix</code> 对象。\n     */\n    static create(): Matrix {\n        return Pool.getItemByClass(\"Matrix\", Matrix);\n    }\n}\n\n","import { Pool } from \"../utils/Pool\"\n\n/**\n * <code>Point</code> 对象表示二维坐标系统中的某个位置，其中 x 表示水平轴，y 表示垂直轴。\n */\nexport class Point {\n\n    /**临时使用的公用对象。*/\n    static TEMP: Point = new Point();\n    /**@private 全局空的point对象(x=0，y=0)，不允许修改此对象内容*/\n    static EMPTY: Point = new Point();\n\n    /**该点的水平坐标。*/\n    x: number;\n    /**该点的垂直坐标。*/\n    y: number;\n\n    /**\n     * 根据指定坐标，创建一个新的 <code>Point</code> 对象。\n     * @param x\t（可选）水平坐标。\n     * @param y\t（可选）垂直坐标。\n     */\n    constructor(x: number = 0, y: number = 0) {\n        this.x = x;\n        this.y = y;\n    }\n\n    /**\n     * 从对象池创建\n     */\n    static create(): Point {\n        return Pool.getItemByClass(\"Point\", Point);\n    }\n\n    /**\n     * 将 <code>Point</code> 的成员设置为指定值。\n     * @param\tx 水平坐标。\n     * @param\ty 垂直坐标。\n     * @return 当前 Point 对象。\n     */\n    setTo(x: number, y: number): Point {\n        this.x = x;\n        this.y = y;\n        return this;\n    }\n\n    /**\n     * 重置\n     */\n    reset(): Point {\n        this.x = this.y = 0;\n        return this;\n    }\n\n    /**\n     * 回收到对象池，方便复用\n     */\n    recover(): void {\n        Pool.recover(\"Point\", this.reset());\n    }\n\n    /**\n     * 计算当前点和目标点(x，y)的距离。\n     * @param\tx 水平坐标。\n     * @param\ty 垂直坐标。\n     * @return\t返回当前点和目标点之间的距离。\n     */\n    distance(x: number, y: number): number {\n        return Math.sqrt((this.x - x) * (this.x - x) + (this.y - y) * (this.y - y));\n    }\n\n    /**返回包含 x 和 y 坐标的值的字符串。*/\n    toString(): string {\n        return this.x + \",\" + this.y;\n    }\n\n    /**\n     * 标准化向量。\n     */\n    normalize(): void {\n        var d: number = Math.sqrt(this.x * this.x + this.y * this.y);\n        if (d > 0) {\n            var id: number = 1.0 / d;\n            this.x *= id;\n            this.y *= id;\n        }\n    }\n\n    /**\n     * copy point坐标\n     * @param\tpoint 需要被copy的point\n     */\n    copy(point: Point): Point {\n        return this.setTo(point.x, point.y);\n    }\n}\n\n","import { Pool } from \"../utils/Pool\";\nimport { Point } from \"./Point\";\n\n/**\n * <p><code>Rectangle</code> 对象是按其位置（由它左上角的点 (x, y) 确定）以及宽度和高度定义的区域。</p>\n * <p>Rectangle 类的 x、y、width 和 height 属性相互独立；更改一个属性的值不会影响其他属性。</p>\n */\nexport class Rectangle {\n\n    /**@private 全局空的矩形区域x=0,y=0,width=0,height=0，不允许修改此对象内容*/\n    static EMPTY: Rectangle = new Rectangle();\n    /**全局临时的矩形区域，此对象用于全局复用，以减少对象创建*/\n    static TEMP: Rectangle = new Rectangle();\n\n    /** @private */\n    private static _temB: number[] = [];\n    /** @private */\n    private static _temA: number[] = [];\n\n    /** 矩形左上角的 X 轴坐标。*/\n    x: number;\n    /** 矩形左上角的 Y 轴坐标。*/\n    y: number;\n    /** 矩形的宽度。*/\n    width: number;\n    /** 矩形的高度。*/\n    height: number;\n\n    /**\n     * 创建一个 <code>Rectangle</code> 对象。\n     * @param\tx 矩形左上角的 X 轴坐标。\n     * @param\ty 矩形左上角的 Y 轴坐标。\n     * @param\twidth 矩形的宽度。\n     * @param\theight 矩形的高度。\n     */\n    constructor(x: number = 0, y: number = 0, width: number = 0, height: number = 0) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n\n    /** 此矩形右侧的 X 轴坐标。 x 和 width 属性的和。*/\n    get right(): number {\n        return this.x + this.width;\n    }\n\n    /** 此矩形底端的 Y 轴坐标。y 和 height 属性的和。*/\n    get bottom(): number {\n        return this.y + this.height;\n    }\n\n    /**\n     * 将 Rectangle 的属性设置为指定值。\n     * @param\tx\tx 矩形左上角的 X 轴坐标。\n     * @param\ty\tx 矩形左上角的 Y 轴坐标。\n     * @param\twidth\t矩形的宽度。\n     * @param\theight\t矩形的高。\n     * @return\t返回属性值修改后的矩形对象本身。\n     */\n    setTo(x: number, y: number, width: number, height: number): Rectangle {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n        return this;\n    }\n\n    /**\n     * 重置\n     */\n    reset(): Rectangle {\n        this.x = this.y = this.width = this.height = 0;\n        return this;\n    }\n\n    /**\n     * 回收\n     */\n    recover(): void {\n        if (this == Rectangle.TEMP || this == Rectangle.EMPTY) {\n            //console.log(\"recover Temp or Empty:\", this);\n            return;\n        }\n        Pool.recover(\"Rectangle\", this.reset());\n    }\n\n    /**\n     * 创建\n     */\n    static create(): Rectangle {\n        return Pool.getItemByClass(\"Rectangle\", Rectangle);\n    }\n\n    /**\n     * 复制 source 对象的属性值到此矩形对象中。\n     * @param\tsourceRect\t源 Rectangle 对象。\n     * @return\t返回属性值修改后的矩形对象本身。\n     */\n    copyFrom(source: Rectangle): Rectangle {\n        this.x = source.x;\n        this.y = source.y;\n        this.width = source.width;\n        this.height = source.height;\n        return this;\n    }\n\n    /**\n     * 确定由此 Rectangle 对象定义的矩形区域内是否包含指定的点。\n     * @param x\t点的 X 轴坐标值（水平位置）。\n     * @param y\t点的 Y 轴坐标值（垂直位置）。\n     * @return\t如果 Rectangle 对象包含指定的点，则值为 true；否则为 false。\n     */\n    contains(x: number, y: number): boolean {\n        if (this.width <= 0 || this.height <= 0) return false;\n\n        if (x >= this.x && x < this.right) {\n            if (y >= this.y && y < this.bottom) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /**\n     * 确定在 rect 参数中指定的对象是否与此 Rectangle 对象相交。此方法检查指定的 Rectangle 对象的 x、y、width 和 height 属性，以查看它是否与此 Rectangle 对象相交。\n     * @param\trect Rectangle 对象。\n     * @return\t如果传入的矩形对象与此对象相交，则返回 true 值，否则返回 false。\n     */\n    intersects(rect: Rectangle): boolean {\n        return !(rect.x > (this.x + this.width) || (rect.x + rect.width) < this.x || rect.y > (this.y + this.height) || (rect.y + rect.height) < this.y);\n    }\n\n    /**\n     * 如果在 rect 参数中指定的 Rectangle 对象与此 Rectangle 对象相交，则返回交集区域作为 Rectangle 对象。如果矩形不相交，则此方法返回null。\n     * @param rect\t待比较的矩形区域。\n     * @param out\t（可选）待输出的矩形区域。如果为空则创建一个新的。建议：尽量复用对象，减少对象创建消耗。\n     * @return\t返回相交的矩形区域对象。\n     */\n    intersection(rect: Rectangle, out: Rectangle | null = null): Rectangle | null {\n        if (!this.intersects(rect)) return null;\n        out || (out = new Rectangle());\n        out.x = Math.max(this.x, rect.x);\n        out.y = Math.max(this.y, rect.y);\n        out.width = Math.min(this.right, rect.right) - out.x;\n        out.height = Math.min(this.bottom, rect.bottom) - out.y;\n        return out;\n    }\n\n    /**\n     * <p>矩形联合，通过填充两个矩形之间的水平和垂直空间，将这两个矩形组合在一起以创建一个新的 Rectangle 对象。</p>\n     * <p>注意：union() 方法忽略高度或宽度值为 0 的矩形，如：var rect2:Rectangle = new Rectangle(300,300,50,0);</p>\n     * @param\t要添加到此 Rectangle 对象的 Rectangle 对象。\n     * @param\tout\t用于存储输出结果的矩形对象。如果为空，则创建一个新的。建议：尽量复用对象，减少对象创建消耗。Rectangle.TEMP对象用于对象复用。\n     * @return\t充当两个矩形的联合的新 Rectangle 对象。\n     */\n    union(source: Rectangle, out: Rectangle | null = null): Rectangle {\n        out || (out = new Rectangle());\n        this.clone(out);\n        if (source.width <= 0 || source.height <= 0) return out;\n        out.addPoint(source.x, source.y);\n        out.addPoint(source.right, source.bottom);\n        return this;\n    }\n\n    /**\n     * 返回一个 Rectangle 对象，其 x、y、width 和 height 属性的值与当前 Rectangle 对象的对应值相同。\n     * @param out\t（可选）用于存储结果的矩形对象。如果为空，则创建一个新的。建议：尽量复用对象，减少对象创建消耗。。Rectangle.TEMP对象用于对象复用。\n     * @return Rectangle 对象，其 x、y、width 和 height 属性的值与当前 Rectangle 对象的对应值相同。\n     */\n    clone(out: Rectangle | null = null): Rectangle {\n        out || (out = new Rectangle());\n        out.x = this.x;\n        out.y = this.y;\n        out.width = this.width;\n        out.height = this.height;\n        return out;\n    }\n\n    /**\n     * 当前 Rectangle 对象的水平位置 x 和垂直位置 y 以及高度 width 和宽度 height 以逗号连接成的字符串。\n     */\n    toString(): string {\n        return this.x + \",\" + this.y + \",\" + this.width + \",\" + this.height;\n    }\n\n    /**\n     * 检测传入的 Rectangle 对象的属性是否与当前 Rectangle 对象的属性 x、y、width、height 属性值都相等。\n     * @param\trect 待比较的 Rectangle 对象。\n     * @return\t如果判断的属性都相等，则返回 true ,否则返回 false。\n     */\n    equals(rect: Rectangle): boolean {\n        if (!rect || rect.x !== this.x || rect.y !== this.y || rect.width !== this.width || rect.height !== this.height) return false;\n        return true;\n    }\n\n    /**\n     * <p>为当前矩形对象加一个点，以使当前矩形扩展为包含当前矩形和此点的最小矩形。</p>\n     * <p>此方法会修改本对象。</p>\n     * @param x\t点的 X 坐标。\n     * @param y\t点的 Y 坐标。\n     * @return 返回此 Rectangle 对象。\n     */\n    addPoint(x: number, y: number): Rectangle {\n        this.x > x && (this.width += this.x - x, this.x = x);//左边界比较\n        this.y > y && (this.height += this.y - y, this.y = y);//上边界比较\n        if (this.width < x - this.x) this.width = x - this.x;//右边界比较\n        if (this.height < y - this.y) this.height = y - this.y;//下边界比较\n        return this;\n    }\n\n    /**\n     * @internal\n     * 返回代表当前矩形的顶点数据。\n     * @return 顶点数据。\n     */\n    _getBoundPoints() {\n        var rst = Rectangle._temB;\n        rst.length = 0;\n        if (this.width == 0 || this.height == 0) return rst;\n        rst.push(this.x, this.y, this.x + this.width, this.y, this.x, this.y + this.height, this.x + this.width, this.y + this.height);\n        return rst;\n    }\n\n    /**\n     * @internal\n     * 返回矩形的顶点数据。\n     */\n    static _getBoundPointS(x: number, y: number, width: number, height: number, sp?: { width: number, height?: number }): number[] {\n        var rst: any[] = Rectangle._temA;\n        rst.length = 0;\n        if (width == 0 || height == 0) return rst;\n        if (sp) {\n            x *= sp.width;\n            y *= sp.height;\n            width *= sp.width;\n            height *= sp.height;\n        }\n        rst.push(x, y, x + width, y, x, y + height, x + width, y + height);\n        return rst;\n    }\n\n    /**\n     * @internal\n     * 返回包含所有点的最小矩形。\n     * @param pointList 点列表。\n     * @return 包含所有点的最小矩形矩形对象。\n     */\n    static _getWrapRec(pointList: ArrayLike<number>, rst: Rectangle | null = null): Rectangle {\n\n        if (!pointList || pointList.length < 1) return rst ? rst.setTo(0, 0, 0, 0) : Rectangle.TEMP.setTo(0, 0, 0, 0);\n        rst = rst ? rst : Rectangle.create();\n        var i: number, len: number = pointList.length, minX: number, maxX: number, minY: number, maxY: number, tPoint: Point = Point.TEMP;\n        minX = minY = 99999;\n        maxX = maxY = -minX;\n        for (i = 0; i < len; i += 2) {\n            tPoint.x = pointList[i];\n            tPoint.y = pointList[i + 1];\n            minX = minX < tPoint.x ? minX : tPoint.x;\n            minY = minY < tPoint.y ? minY : tPoint.y;\n            maxX = maxX > tPoint.x ? maxX : tPoint.x;\n            maxY = maxY > tPoint.y ? maxY : tPoint.y;\n        }\n        return rst.setTo(minX, minY, maxX - minX, maxY - minY);\n    }\n\n    /**\n     * 确定此 Rectangle 对象是否为空。\n     * @return 如果 Rectangle 对象的宽度或高度小于等于 0，则返回 true 值，否则返回 false。\n     */\n    isEmpty(): boolean {\n        if (this.width <= 0 || this.height <= 0) return true;\n        return false;\n    }\n}","export enum HDREncodeFormat{\n    NONE,\n    RGBM,\n    RGBD\n   \n}","/**\n * 纹理格式\n */\nexport enum TextureFormat {\n    /**纹理格式_R8G8B8。*/\n    R8G8B8 = 0,\n    /**纹理格式_R8G8B8A8。*/\n    R8G8B8A8 = 1,\n    /**RGB格式纹理,R通道5位，G通道6位，B通道5位。*/\n    R5G6B5 = 16,\n    /**纹理格式_ALPHA8。*/\n    Alpha8 = 2,\n    /**纹理格式_DXT1。*/\n    DXT1 = 3,\n    /**纹理格式_DXT3 */\n    DXT3 = 29,\n    /**纹理格式_DXT5。*/\n    DXT5 = 4,\n    /**纹理格式_ETC2RGB。*/\n    ETC1RGB = 5,\n    ///**纹理格式_ETC2RGB。*/\n    ETC2RGB = 6,\n    ///**纹理格式_ETC2RGBA。*/\n    ETC2RGBA = 7,\n    /**纹理格式_ETC2RGB_PUNCHTHROUGHALPHA。*/\n    //ETC2RGB_PUNCHTHROUGHALPHA:int = 8;\n    /**纹理格式_PVRTCRGB_2BPPV。*/\n    ETC2SRGB_Alpha8 = 8,\n    /** 纹理格式_ETC2SRGB*/\n    ETC2SRGB = 28,\n    /** 纹理格式_PVRTCRGB_2BPPV*/\n    PVRTCRGB_2BPPV = 9,\n    /**纹理格式_PVRTCRGBA_2BPPV。*/\n    PVRTCRGBA_2BPPV = 10,\n    /**纹理格式_PVRTCRGB_4BPPV。*/\n    PVRTCRGB_4BPPV = 11,\n    /**纹理格式_PVRTCRGBA_4BPPV。*/\n    PVRTCRGBA_4BPPV = 12,\n    /**RGBA格式纹理,每个通道32位浮点数。*/\n    R32G32B32A32 = 15,\n    /**R32G32B32 */\n    R32G32B32 = 30,\n    /**RGBA格式纹理，每个通道16位浮点数。 */\n    R16G16B16A16 = 17,\n    /**R16 G16 B6 */\n    R16G16B16 = 31,\n    /**ASTC 4x4*/\n    ASTC4x4 = 18,\n    /**ASTC sRGB 4x4 */\n    ASTC4x4SRGB = 23,\n    /**ASTC 6x6*/\n    ASTC6x6 = 19,\n    /**ASTC  6x6*/\n    ASTC6x6SRGB = 24,\n    /**ASTC 8x8 */\n    ASTC8x8 = 20,\n    /**ASTC srgb 8x8 */\n    ASTC8x8SRGB = 25,\n    /**ASTC 10x10 */\n    ASTC10x10 = 21,\n    /**ASTC srgb 10x10 */\n    ASTC10x10SRGB = 26,\n    /**ASTC 12x12 */\n    ASTC12x12 = 22,\n    /**ASTC srgb 12x12 */\n    ASTC12x12SRGB = 27,\n    /**ktx图片 */\n    KTXTEXTURE = -1,\n    /**pvr图片 */\n    PVRTEXTURE = -2\n}","import { IRender2DContext } from \"../RenderEngine/RenderInterface/IRender2DContext\";\nimport { IRenderDrawContext } from \"../RenderEngine/RenderInterface/IRenderDrawContext\";\nimport { IRenderEngine } from \"../RenderEngine/RenderInterface/IRenderEngine\";\nimport { IRenderEngineFactory } from \"../RenderEngine/RenderInterface/IRenderEngineFactory\";\nimport { ITextureContext } from \"../RenderEngine/RenderInterface/ITextureContext\";\n\n/**\n * 封装GL命令\n */\nexport class LayaGL {\n    static textureContext: ITextureContext;\n    static renderEngine: IRenderEngine;\n    static render2DContext: IRender2DContext;\n    static renderDrawContext: IRenderDrawContext;\n    static renderOBJCreate: IRenderEngineFactory;\n}","const ITEM_LAYOUT = 4; //callback,target,args,flag(0-deleted,1-normal,2-once) \n\nexport class Delegate {\n    private _flag: number;\n    private _items: Array<any>;\n\n    public constructor() {\n        this._flag = 0;\n        this._items = [];\n    }\n\n    public add(callback: Function, target?: any, args?: any[]): void {\n        let arr = this._items;\n        let index = arr.findIndex((value, index, arr) => value == callback && arr[index + 1] == target);\n        if (index != -1) {\n            arr[index + 2] = args;\n            arr[index + 3] = 1;\n        }\n        else\n            arr.push(callback, target, args, 1);\n    }\n\n    public once(callback: Function, target?: any, args?: any[]): void {\n        let arr = this._items;\n        let index = arr.findIndex((value, index, arr) => value == callback && arr[index + 1] == target);\n        if (index != -1) {\n            arr[index + 2] = args;\n            arr[index + 3] = 2;\n        }\n        else\n            arr.push(callback, target, args, 2);\n    }\n\n    public remove(callback: Function, target?: any): void {\n        let arr = this._items;\n        let index = arr.findIndex((value, index, arr) => value == callback && arr[index + 1] == target);\n        if (index != -1) {\n            if (this._flag != 0) {\n                arr[index + 3] = 0;\n                this._flag = 2;\n            }\n            else\n                arr.splice(index, ITEM_LAYOUT);\n        }\n    }\n\n    public clear(): void {\n        let arr = this._items;\n        if (this._flag != 0) {\n            arr.forEach((value, index, arr) => { if (index % ITEM_LAYOUT == 3) arr[index] = 0; });\n            this._flag = 2;\n        }\n        else {\n            arr.length = 0;\n        }\n    }\n\n    public clearForTarget(target: any): void {\n        if (!target)\n            return;\n\n        let arr = this._items;\n        if (this._flag != 0) {\n            arr.forEach((value, index, arr) => { if ((index % ITEM_LAYOUT == 1) && arr[index] == target) arr[index + 2] = 0; });\n            this._flag = 2;\n        }\n        else {\n            let i: number = arr.length - ITEM_LAYOUT;\n            while (i >= 0) {\n                if (arr[i + 1] == target)\n                    arr.splice(i, ITEM_LAYOUT);\n                i -= ITEM_LAYOUT;\n            }\n        }\n    }\n\n    public get count(): number {\n        return this._items.length / ITEM_LAYOUT;\n    }\n\n    public invoke(...args: any[]): void {\n        if (this._flag != 0)\n            return;\n\n        this._flag = 1;\n        let arr = this._items;\n        let cnt = arr.length;\n        for (let i = 0; i < cnt; i += ITEM_LAYOUT) {\n            if (0 == arr[i + 3]) continue;\n            let fixedArgs = arr[i + 2];\n            try {\n                if (fixedArgs != null)\n                    arr[i].call(arr[i + 1], ...fixedArgs, ...args);\n                else\n                    arr[i].call(arr[i + 1], ...args);\n            }\n            catch (err: any) {\n                console.error(err);\n            }\n            if (arr[i + 3] == 2) {\n                arr[i + 3] = 0;\n                this._flag = 2;\n            }\n        }\n\n        if (this._flag == 2) {\n            let cnt = arr.length;\n            let i = 0;\n            while (i < cnt) {\n                if (arr[i + 3] == 0) {\n                    arr.splice(i, ITEM_LAYOUT);\n                    cnt -= ITEM_LAYOUT;\n                    continue;\n                }\n                else\n                    i += ITEM_LAYOUT;\n            }\n        }\n        this._flag = 0;\n    }\n}","import { Point } from \"../maths/Point\"\n\nexport interface ITouchInfo {\n    touchId: number;\n    readonly pos: Point;\n}\n\n/**\n * <code>Event</code> 是事件类型的集合。一般当发生事件时，<code>Event</code> 对象将作为参数传递给事件侦听器。\n */\nexport class Event {\n\n    /** 一个空的 Event 对象。用于事件派发中转使用。*/\n    static readonly EMPTY: Readonly<Event> = new Event();\n\n    /** 定义 mousedown 事件对象的 type 属性值。*/\n    static MOUSE_DOWN = \"mousedown\";\n    /** 定义 mouseup 事件对象的 type 属性值。*/\n    static MOUSE_UP = \"mouseup\";\n    /** 定义 rightmousedown 事件对象的 type 属性值。*/\n    static RIGHT_MOUSE_DOWN: string = \"rightmousedown\";\n    /** 定义 rightmouseup 事件对象的 type 属性值。*/\n    static RIGHT_MOUSE_UP: string = \"rightmouseup\";\n    /** 定义 click 事件对象的 type 属性值。*/\n    static CLICK = \"click\";\n    /** 定义 rightclick 事件对象的 type 属性值。*/\n    static RIGHT_CLICK = \"rightclick\";\n    /** 定义 mousemove 事件对象的 type 属性值。*/\n    static MOUSE_MOVE = \"mousemove\";\n    /** 定义 mouseover 事件对象的 type 属性值。*/\n    static MOUSE_OVER = \"mouseover\";\n    /** 定义 mouseout 事件对象的 type 属性值。*/\n    static MOUSE_OUT = \"mouseout\";\n    /** 定义 mousewheel 事件对象的 type 属性值。*/\n    static MOUSE_WHEEL = \"mousewheel\";\n    /** 定义 mouseover 事件对象的 type 属性值。*/\n    static ROLL_OVER = \"mouseover\";\n    /** 定义 mouseout 事件对象的 type 属性值。*/\n    static ROLL_OUT = \"mouseout\";\n    /** 定义 doubleclick 事件对象的 type 属性值。*/\n    static DOUBLE_CLICK = \"doubleclick\";\n    /** 定义 mousemove 事件对象的 type 属性值。*/\n    static MOUSE_DRAG = \"mousedrag\";\n    /** 定义 mousemove 事件对象的 type 属性值。*/\n    static MOUSE_DRAG_END = \"mousedragend\";\n\n    /** 定义 dragstart 事件对象的 type 属性值。*/\n    static DRAG_START = \"dragstart\";\n    /** 定义 dragmove 事件对象的 type 属性值。*/\n    static DRAG_MOVE = \"dragmove\";\n    /** 定义 dragend 事件对象的 type 属性值。*/\n    static DRAG_END = \"dragend\";\n\n    /** 定义 keydown 事件对象的 type 属性值。*/\n    static KEY_DOWN = \"keydown\";\n    /** 定义 keypress 事件对象的 type 属性值。*/\n    static KEY_PRESS = \"keypress\";\n    /** 定义 keyup 事件对象的 type 属性值。*/\n    static KEY_UP = \"keyup\";\n\n    /** 定义 change 事件对象的 type 属性值。*/\n    static CHANGE = \"change\";\n    /** 定义 changed 事件对象的 type 属性值。*/\n    static CHANGED = \"changed\";\n    /** 定义 willResize 事件对象的 type 属性值。*/\n    static WILL_RESIZE = \"willResize\";\n    /** 定义 resize 事件对象的 type 属性值。*/\n    static RESIZE = \"resize\";\n\n    /** 定义 added 事件对象的 type 属性值。*/\n    static ADDED = \"added\";\n    /** 定义 removed 事件对象的 type 属性值。*/\n    static REMOVED = \"removed\";\n    /** 定义 display 事件对象的 type 属性值。*/\n    static DISPLAY = \"display\";\n    /** 定义 undisplay 事件对象的 type 属性值。*/\n    static UNDISPLAY = \"undisplay\";\n\n    /** 定义 error 事件对象的 type 属性值。*/\n    static ERROR = \"error\";\n    /** 定义 complete 事件对象的 type 属性值。*/\n    static COMPLETE = \"complete\";\n    /** 定义 loaded 事件对象的 type 属性值。*/\n    static LOADED = \"loaded\";\n    /** 定义 loaded 事件对象的 type 属性值。*/\n    static READY = \"ready\";\n    /** 定义 progress 事件对象的 type 属性值。*/\n    static PROGRESS = \"progress\";\n    /** 定义 input 事件对象的 type 属性值。*/\n    static INPUT = \"input\";\n    /** 定义 render 事件对象的 type 属性值。*/\n    static RENDER = \"render\";\n    /** 定义 open 事件对象的 type 属性值。*/\n    static OPEN = \"open\";\n    /** 定义 message 事件对象的 type 属性值。*/\n    static MESSAGE = \"message\";\n    /** 定义 close 事件对象的 type 属性值。*/\n    static CLOSE = \"close\";\n\n    /** 定义 frame 事件对象的 type 属性值。*/\n    static FRAME = \"enterframe\";\n    /** 定义 enter 事件对象的 type 属性值。*/\n    static ENTER = \"enter\";\n    /** 定义 select 事件对象的 type 属性值。*/\n    static SELECT = \"select\";\n    /** 定义 blur 事件对象的 type 属性值。*/\n    static BLUR = \"blur\";\n    /** 定义 focus 事件对象的 type 属性值。*/\n    static FOCUS = \"focus\";\n    /** 定义 visibilitychange 事件对象的 type 属性值。*/\n    static VISIBILITY_CHANGE = \"visibilitychange\";\n    /** 定义 focuschange 事件对象的 type 属性值。*/\n    static FOCUS_CHANGE = \"focuschange\";\n    /** 定义 played 事件对象的 type 属性值。*/\n    static PLAYED = \"played\";\n    /** 定义 paused 事件对象的 type 属性值。*/\n    static PAUSED = \"paused\";\n    /** 定义 stopped 事件对象的 type 属性值。*/\n    static STOPPED = \"stopped\";\n    /** 定义 start 事件对象的 type 属性值。*/\n    static START = \"start\";\n    /** 定义 end 事件对象的 type 属性值。*/\n    static END = \"end\";\n    /** 定义 link 事件对象的 type 属性值。*/\n    static LINK = \"link\";\n    /** 定义 label 事件对象的 type 属性值。*/\n    static LABEL = \"label\";\n    /**浏览器全屏更改时触发*/\n    static FULL_SCREEN_CHANGE = \"fullscreenchange\";\n    /**显卡设备丢失时触发*/\n    static DEVICE_LOST = \"devicelost\";\n    /**世界矩阵更新时触发。*/\n    static TRANSFORM_CHANGED = \"transformchanged\";\n    /**3D layer改变时触发。*/\n    static LAYERCHANGE = \"layerChange\";\n    /**3D Static改变时触发 */\n    static staticMask = \"staticMask\";\n\n    /**物理碰撞开始*/\n    static TRIGGER_ENTER = \"triggerenter\";\n    /**物理碰撞持续*/\n    static TRIGGER_STAY = \"triggerstay\";\n    /**物理碰撞结束*/\n    static TRIGGER_EXIT = \"triggerexit\";\n\n    /**物理碰撞开始*/\n    static COLLISION_ENTER = \"collisionenter\";\n    /**物理碰撞持续*/\n    static COLLISION_STAY = \"collisionstay\";\n    /**物理碰撞结束*/\n    static COLLISION_EXIT = \"collisionexit\";\n    /**关节破坏 */\n    static JOINT_BREAK = \"jointbreak\";\n\n    /**@internal */\n    static _Add_Script= \"addscript\";\n    /**\n     * 检测指定事件类型是否是鼠标事件。\n     * @param\ttype 事件的类型。\n     * @return\t如果是鼠标事件，则值为 true;否则，值为 false。\n     */\n    static isMouseEvent(type: string): boolean {\n        return MOUSE_EVENTS.has(type);\n    }\n\n    /** 事件类型。*/\n    type: string;\n    /** 事件目标触发对象。*/\n    target: any;\n    /** 事件当前冒泡对象。*/\n    currentTarget: any;\n\n    /** 分配给触摸点的唯一标识号（作为 int）。*/\n    touchId: number = 0;\n    /** 点击坐标 */\n    readonly touchPos: Point;\n    /** 是否双击 */\n    isDblClick: boolean;\n    /**滚轮滑动增量*/\n    delta: number = 0;\n    /** \n     * 鼠标按键，\n     * 0：主按键，通常指鼠标左键\n     * 1：辅助按键，通常指鼠标滚轮中键\n     * 2：次按键，通常指鼠标右键\n     * 3：第四个按钮，通常指浏览器后退按钮\n     * 4：第五个按钮，通常指浏览器的前进按钮\n     */\n    button: number = 0;\n\n    /** 原生浏览器事件。*/\n    nativeEvent: MouseEvent | TouchEvent | WheelEvent | KeyboardEvent;\n\n    /** @internal */\n    _stopped: boolean;\n    /** @internal */\n    _touches: ReadonlyArray<Readonly<ITouchInfo>>;\n\n    constructor() {\n        this.touchPos = new Point();\n    }\n\n    /**\n     * 设置事件数据。\n     * @param\ttype 事件类型。\n     * @param\tcurrentTarget 事件目标触发对象。\n     * @param\ttarget 事件当前冒泡对象。\n     * @return 返回当前 Event 对象。\n     */\n    setTo(type: string, currentTarget: any, target: any): Event {\n        this.type = type;\n        this.currentTarget = currentTarget;\n        this.target = target;\n        return this;\n    }\n\n    /**\n     * 阻止对事件流中当前节点的后续节点中的所有事件侦听器进行处理。此方法不会影响当前节点 (currentTarget) 中的任何事件侦听器。\n     */\n    stopPropagation(): void {\n        this._stopped = true;\n    }\n\n    /**\n     * 触摸点列表。\n     */\n    get touches(): ReadonlyArray<Readonly<ITouchInfo>> {\n        return this._touches;\n    }\n\n    /**\n     * 表示 Alt 键是处于活动状态 (true) 还是非活动状态 (false)。\n     */\n    get altKey(): boolean {\n        return this.nativeEvent?.altKey;\n    }\n\n    /**\n     * 表示 Ctrl 键是处于活动状态 (true) 还是非活动状态 (false)。\n     */\n    get ctrlKey(): boolean {\n        return this.nativeEvent?.ctrlKey;\n    }\n\n    /**\n     * 表示 Shift 键是处于活动状态 (true) 还是非活动状态 (false)。\n     */\n    get shiftKey(): boolean {\n        return this.nativeEvent?.shiftKey;\n    }\n\n    /**\n     * 表示 Shift 键是处于活动状态 (true) 还是非活动状态 (false)。\n     */\n    get metaKey(): boolean {\n        return this.nativeEvent?.metaKey;\n    }\n\n    get key(): string {\n        return (<KeyboardEvent>this.nativeEvent).key;\n    }\n\n    get keyCode(): number {\n        return (<KeyboardEvent>this.nativeEvent).keyCode;\n    }\n\n    /**\n     * 包含按下或释放的键的字符代码值。字符代码值为英文键盘值。\n     */\n    get charCode(): string {\n        return (<KeyboardEvent>this.nativeEvent)?.code;\n    }\n\n    /**\n     * 表示键在键盘上的位置。这对于区分在键盘上多次出现的键非常有用。<br>\n     * 例如，您可以根据此属性的值来区分左 Shift 键和右 Shift 键：左 Shift 键的值为 KeyLocation.LEFT，右 Shift 键的值为 KeyLocation.RIGHT。另一个示例是区分标准键盘 (KeyLocation.STANDARD) 与数字键盘 (KeyLocation.NUM_PAD) 上按下的数字键。\n     */\n    get keyLocation(): number {\n        if (this.nativeEvent)\n            return (<KeyboardEvent>this.nativeEvent).location || (<any>this.nativeEvent).keyLocation;\n        else\n            return 0;\n    }\n\n    /**鼠标在 Stage 上的 X 轴坐标*/\n    get stageX(): number {\n        return this.touchPos.x;\n    }\n\n    /**鼠标在 Stage 上的 Y 轴坐标*/\n    get stageY(): number {\n        return this.touchPos.y;\n    }\n}\n\nconst MOUSE_EVENTS = new Set<string>([\n    Event.MOUSE_DOWN, Event.MOUSE_UP, Event.MOUSE_MOVE, Event.CLICK, Event.DOUBLE_CLICK,\n    Event.RIGHT_CLICK, Event.RIGHT_MOUSE_DOWN, Event.RIGHT_MOUSE_UP,\n    Event.MOUSE_OVER, Event.MOUSE_OUT, Event.MOUSE_WHEEL, Event.MOUSE_DRAG, Event.MOUSE_DRAG_END\n]);","import { Delegate } from \"../utils/Delegate\";\nimport { Event } from \"./Event\";\n\nconst eventPool: Array<Event> = [];\n\n/**\n * <code>EventDispatcher</code> 类是可调度事件的所有类的基类。\n */\nexport class EventDispatcher {\n    /**@private */\n    private _events: Record<string, Delegate>;\n\n    protected onStartListeningToType(type: string) {\n    }\n\n    /**\n     * 检查 EventDispatcher 对象是否为特定事件类型注册了任何侦听器。\n     * @param\ttype 事件的类型。\n     * @return 如果指定类型的侦听器已注册，则值为 true；否则，值为 false。\n     */\n    hasListener(type: string): boolean {\n        let listeners = this._events && this._events[type];\n        return !!listeners && listeners.count > 0;\n    }\n\n    /**\n     * 派发事件。\n     * @param type\t事件类型。\n     * @param data\t（可选）回调数据。<b>注意：</b>如果是需要传递多个参数 p1,p2,p3,...可以使用数组结构如：[p1,p2,p3,...] ；如果需要回调单个参数 p ，且 p 是一个数组，则需要使用结构如：[p]，其他的单个参数 p ，可以直接传入参数 p。\n     * @return 此事件类型是否有侦听者，如果有侦听者则值为 true，否则值为 false。\n     */\n    event(type: string, data?: any): boolean {\n        let listeners = this._events && this._events[type];\n        if (!listeners) return false;\n        let ret = listeners.count > 0;\n\n        if (Array.isArray(data))\n            listeners.invoke(...data);\n        else if (data !== undefined)\n            listeners.invoke(data);\n        else if (data === Event.EMPTY) {\n            let ev = eventPool.length > 0 ? eventPool.pop() : new Event();\n            listeners.invoke(ev.setTo(type, this, this));\n            ev.target = ev.currentTarget = null;\n            eventPool.push(ev);\n        }\n        else\n            listeners.invoke();\n\n        return ret;\n    }\n\n    /**\n     * 使用 EventDispatcher 对象注册指定类型的事件侦听器对象，以使侦听器能够接收事件通知。\n     * @param type\t\t事件的类型。\n     * @param caller\t事件侦听函数的执行域。\n     * @param listener\t事件侦听函数。\n     * @param args\t\t（可选）事件侦听函数的回调参数。\n     * @return 此 EventDispatcher 对象。\n     */\n    on(type: string, listener: Function): EventDispatcher;\n    on(type: string, caller: any, listener: Function, args?: any[]): EventDispatcher;\n    on(type: string, caller: any, listener?: Function, args?: any[]): EventDispatcher {\n        if (arguments.length == 2) {\n            listener = caller;\n            caller = null;\n        }\n        if (!this._events) this._events = {};\n        let listeners = this._events[type];\n        if (!listeners) {\n            this.onStartListeningToType(type);\n            this._events[type] = listeners = new Delegate();\n        }\n\n        listeners.add(listener, caller, args);\n        return this;\n    }\n\n    /**\n     * 使用 EventDispatcher 对象注册指定类型的事件侦听器对象，以使侦听器能够接收事件通知，此侦听事件响应一次后自动移除。\n     * @param type\t\t事件的类型。\n     * @param caller\t事件侦听函数的执行域。\n     * @param listener\t事件侦听函数。\n     * @param args\t\t（可选）事件侦听函数的回调参数。\n     * @return 此 EventDispatcher 对象。\n     */\n    once(type: string, listener: Function): EventDispatcher;\n    once(type: string, caller: any, listener: Function, args?: any[]): EventDispatcher;\n    once(type: string, caller: any, listener?: Function, args?: any[]): EventDispatcher {\n        if (arguments.length == 2) {\n            listener = caller;\n            caller = null;\n        }\n        if (!this._events) this._events = {};\n        let listeners = this._events[type];\n        if (!listeners) {\n            this.onStartListeningToType(type);\n            this._events[type] = listeners = new Delegate();\n        }\n\n        listeners.once(listener, caller, args);\n        return this;\n    }\n\n    /**\n     * 从 EventDispatcher 对象中删除侦听器。\n     * @param type\t\t事件的类型。\n     * @param caller\t事件侦听函数的执行域。\n     * @param listener\t事件侦听函数。\n     * @return 此 EventDispatcher 对象。\n     */\n    off(type: string, listener: Function): EventDispatcher;\n    off(type: string, caller: any, listener?: Function, args?: any[]): EventDispatcher;\n    off(type: string, caller: any, listener?: Function): EventDispatcher {\n        if (arguments.length == 2) {\n            listener = caller;\n            caller = null;\n        }\n        let listeners = this._events && this._events[type];\n        if (listeners)\n            listeners.remove(listener, caller);\n\n        return this;\n    }\n\n    /**\n     * 从 EventDispatcher 对象中删除指定事件类型的所有侦听器。\n     * @param type\t（可选）事件类型，如果值为 null，则移除本对象所有类型的侦听器。\n     * @return 此 EventDispatcher 对象。\n     */\n    offAll(type?: string): EventDispatcher {\n        if (type == null)\n            this._events = null;\n        else {\n            let listeners = this._events && this._events[type];\n            if (listeners)\n                listeners.clear();\n        }\n        return this;\n    }\n\n    /**\n     * 移除caller为target的所有事件监听\n     * @param\tcaller caller对象\n     */\n    offAllCaller(caller: any): EventDispatcher {\n        if (caller && this._events) {\n            for (let type in this._events)\n                this._events[type].clearForTarget(caller);\n        }\n        return this;\n    }\n}\n","import { ILaya } from \"../../ILaya\";\nimport { EventDispatcher } from \"../events/EventDispatcher\";\n\nvar _idCounter: number = 0;\nvar _disposingCounter: number = 0;\nvar _clearRetry: number = 0;\n\n/**\n * <code>Resource</code> 资源存取类。\n */\nexport class Resource extends EventDispatcher {\n    /** @private */\n    static _idResourcesMap: any = {};\n    /** @private 以字节为单位。*/\n    private static _cpuMemory: number = 0;\n    /** @private 以字节为单位。*/\n    private static _gpuMemory: number = 0;\n    /**是否开启debug模式 */\n    static DEBUG: boolean = false;\n\n    /**\n     * 当前内存，以字节为单位。\n     */\n    static get cpuMemory(): number {\n        return Resource._cpuMemory;\n    }\n\n    /**\n     * 当前显存，以字节为单位。\n     */\n    static get gpuMemory(): number {\n        return Resource._gpuMemory;\n    }\n\n    /**\n     * @internal\n     */\n    static _addCPUMemory(size: number): void {\n        Resource._cpuMemory += size;\n    }\n\n    /**\n     * @internal\n     */\n    static _addGPUMemory(size: number): void {\n        Resource._gpuMemory += size;\n    }\n\n    /**\n     * @internal\n     */\n    static _addMemory(cpuSize: number, gpuSize: number): void {\n        Resource._cpuMemory += cpuSize;\n        Resource._gpuMemory += gpuSize;\n    }\n\n    /**\n     * 销毁当前没有被使用的资源,该函数会忽略lock=true的资源。\n     */\n    static destroyUnusedResources(): void {\n        _disposingCounter = 0; //复位一下，避免异常造成的标志错误\n        _clearRetry = 0;\n\n        if (!ILaya.loader.loading)\n            Resource._destroyUnusedResources(true);\n        else\n            ILaya.timer.frameLoop(1, Resource, Resource._destroyUnusedResources);\n    }\n\n    /** @private */\n    private static _destroyUnusedResources(force: boolean): void {\n        if (!force && ILaya.loader.loading)\n            return;\n\n        ILaya.timer.clear(Resource, Resource._destroyUnusedResources);\n        let destroyCnt = 0;\n\n        for (let k in Resource._idResourcesMap) {\n            let res: Resource = Resource._idResourcesMap[k];\n            if (!res.lock && res._referenceCount === 0) {\n                res.destroy();\n                destroyCnt++;\n            }\n        }\n\n        if (Resource.DEBUG && destroyCnt > 0)\n            console.debug(`destroyUnusedResources(${destroyCnt})`);\n\n        if (destroyCnt > 0 && _clearRetry < 5) {\n            _clearRetry++;\n            ILaya.timer.frameLoop(1, Resource, Resource._destroyUnusedResources);\n        }\n    }\n\n    private _cpuMemory: number = 0;\n    private _gpuMemory: number = 0;\n    _id: number = 0;\n    protected _destroyed?: boolean;\n    protected _referenceCount: number = 0;\n    protected _obsolute: boolean;\n\n    /**是否加锁，如果true为不能使用自动释放机制。*/\n    lock?: boolean;\n    /**名称。 */\n    name?: string;\n    /**获取资源的URL地址。 */\n    url: string;\n    /**获取资源的UUID。 */\n    uuid: string;\n\n    /**是否在引用计数为0的时候立马删除他 */\n    destroyedImmediately: boolean;\n\n    /**\n     * 获取唯一标识ID,通常用于识别。\n     */\n    get id(): number {\n        return this._id;\n    }\n\n    /**\n     * 内存大小。\n     */\n    get cpuMemory(): number {\n        return this._cpuMemory;\n    }\n\n    /**\n     * 显存大小。\n     */\n    get gpuMemory(): number {\n        return this._gpuMemory;\n    }\n\n    /**\n     * 是否已销毁。\n     */\n    get destroyed(): boolean {\n        return this._destroyed;\n    }\n\n\n    /** 如果设置一个已缓存的资源obsolute为true，则\n     * 1）getRes仍然可以返回这个资源；\n     * 2）下次加载时会忽略这个缓存而去重新加载。。\n     */\n    get obsolute(): boolean {\n        return this._obsolute;\n    }\n\n    set obsolute(value: boolean) {\n        this._obsolute = value;\n    }\n\n    /**\n     * 获取资源的引用计数。\n     */\n    get referenceCount(): number {\n        return this._referenceCount;\n    }\n\n    /**\n     * 创建一个 <code>Resource</code> 实例。\n     * @param managed 如果设置为true，则在destroyUnusedResources时会检测引用计数并自动释放如果计数为0。默认为true。\n     */\n    protected constructor(managed?: boolean) {\n        super();\n\n        this._id = ++_idCounter;\n        this._destroyed = false;\n        this._referenceCount = 0;\n        if (managed == null || managed)\n            Resource._idResourcesMap[this._id] = this;\n        this.lock = false;\n        this.destroyedImmediately = true;\n    }\n\n    _setCPUMemory(value: number): void {\n        var offsetValue: number = value - this._cpuMemory;\n        this._cpuMemory = value;\n        Resource._addCPUMemory(offsetValue);\n    }\n\n    _setGPUMemory(value: number): void {\n        var offsetValue: number = value - this._gpuMemory;\n        this._gpuMemory = value;\n        Resource._addGPUMemory(offsetValue);\n    }\n\n    _setCreateURL(url: string, uuid?: string): void {\n        this.url = url;\n        this.uuid = uuid;\n    }\n\n    /**\n     * 返回资源是否从指定url创建\n     */\n    isCreateFromURL(url: string): boolean {\n        return this.uuid && url.length === this.uuid.length + 6 && url.endsWith(this.uuid)\n            || this.url === url;\n    }\n\n    _addReference(count: number = 1): void {\n        this._referenceCount += count;\n    }\n\n    _removeReference(count: number = 1): void {\n        this._referenceCount -= count;\n        //如果_removeReference发生在destroy中，可能是在collect或者处理内嵌资源的释放\n        if (_disposingCounter > 0 && this._referenceCount <= 0 && !this.lock && this.destroyedImmediately) {\n            this.destroy();\n        }\n    }\n\n    /**\n     * 清除引用\n     */\n    _clearReference(): void {\n        this._referenceCount = 0;\n    }\n\n    protected _recoverResource(): void {\n    }\n\n    protected _disposeResource(): void {\n    }\n\n    protected _activeResource(): void {\n\n    }\n\n    /**\n     * 销毁资源,销毁后资源不能恢复。\n     */\n    destroy(): void {\n        if (this._destroyed)\n            return;\n\n        this._destroyed = true;\n        this.lock = false; //解锁资源，强制清理\n        _disposingCounter++;\n        this._disposeResource();\n        _disposingCounter--;\n        this.offAll();\n        delete Resource._idResourcesMap[this.id];\n        if (this.url) {\n            if (Resource.DEBUG)\n                console.debug(`destroy ${Object.getPrototypeOf(this).constructor.name} ${this.url}`);\n            ILaya.loader.clearRes(this.url, this);\n        }\n    }\n}","/**\n * 纹理的过滤模式。\n */\nexport enum FilterMode {\n    /**点过滤。*/\n    Point = 0,\n    /**双线性过滤。*/\n    Bilinear = 1,\n    /**三线性过滤。*/\n    Trilinear = 2,\n}","export enum RenderCapable {\n    Element_Index_Uint32,//Index Usage 32\n    TextureFormat_R32G32B32A32,//Texturefloat32\n    TextureFormat_R16G16B16A16,//TextureFloat16\n    Texture_anisotropic,//anisotropic function\n    RenderTextureFormat_R16G16B16A16,//Rendertexture Float16\n    RenderTextureFormat_R32G32B32A32, // rendertexture float32\n    RenderTextureFormat_Depth,//depthTexture\n    RenderTextureFormat_ShadowMap,//shadowMap Texture\n    Vertex_VAO,//VAO\n    DrawElement_Instance,//Instance\n    Shader_TextureLod,//Texture lod sampler\n    COMPRESS_TEXTURE_S3TC,//compress Texture dds\n    COMPRESS_TEXTURE_S3TC_SRGB,//Compress Texture dds srgb\n    COMPRESS_TEXTURE_PVRTC,//Compress Texture PVR\n    COMPRESS_TEXTURE_ETC1,//Compress Texture ktx\n    COMPRESS_TEXTURE_ETC,//Compress Texture ktx\n    COMPRESS_TEXTURE_ASTC,//Compress Texture astc\n    Texture_SRGB,//Textrue srgb   \n    MSAA,//MSAA\n    UnifromBufferObject,\n    Texture3D,\n    Texture_FloatLinearFiltering,\n    Texture_HalfFloatLinearFiltering,\n}","import { Config } from \"../../Config\";\nimport { FilterMode } from \"../RenderEngine/RenderEnum/FilterMode\";\nimport { HDREncodeFormat } from \"../RenderEngine/RenderEnum/HDREncodeFormat\";\nimport { TextureCompareMode } from \"../RenderEngine/RenderEnum/TextureCompareMode\";\nimport { TextureDimension } from \"../RenderEngine/RenderEnum/TextureDimension\";\nimport { TextureFormat } from \"../RenderEngine/RenderEnum/TextureFormat\";\nimport { WrapMode } from \"../RenderEngine/RenderEnum/WrapMode\";\nimport { InternalTexture } from \"../RenderEngine/RenderInterface/InternalTexture\";\nimport { LayaGL } from \"../layagl/LayaGL\";\nimport { Resource } from \"./Resource\";\n\n/**\n * <code>BaseTexture</code> 纹理的父类，抽象类，不允许实例。\n */\nexport class BaseTexture extends Resource {\n    /**\n     * @internal\n     */\n    _texture: InternalTexture;\n    /**@internal */\n    hdrEncodeFormat: HDREncodeFormat;\n    /**@private */\n    protected _width: number;\n    /**@private */\n    protected _height: number;\n\n    /**\n     * 获取宽度。\n     */\n    get width(): number {\n        return this._width;\n    }\n\n    set width(width: number) {\n        this._width = width;\n    }\n\n    /***\n     * 获取高度。\n     */\n    get height(): number {\n        return this._height;\n    }\n\n    set height(height: number) {\n        this._height = height;\n    }\n\n    protected _dimension: TextureDimension;\n\n    /**\n     * 纹理几何属性\n     */\n    public get dimension(): TextureDimension {\n        return this._dimension;\n    }\n\n    protected _format: TextureFormat;\n    /**\n     * 纹理格式\n     */\n    public get format(): TextureFormat {\n        return this._format;\n    }\n\n    /**\n     * 是否生成mipmap\n     */\n    public get mipmap(): boolean {\n        return this._texture.mipmap;\n    }\n\n    public get mipmapCount(): number {\n        return this._texture.mipmapCount;\n    }\n\n    /**\n     * 各向异性值\n     */\n    public get anisoLevel(): number {\n        return this._texture.anisoLevel;\n    }\n    public set anisoLevel(value: number) {\n        this._texture.anisoLevel = value;\n    }\n\n    /**\n     * 采样过滤模式\n     */\n    public get filterMode(): FilterMode {\n        return this._texture.filterMode;\n    }\n    public set filterMode(value: FilterMode) {\n        this._texture.filterMode = value;\n    }\n\n    /**\n     * U方向采样模式\n     */\n    public get wrapModeU(): WrapMode {\n        return this._texture.wrapU;\n    }\n    public set wrapModeU(value: WrapMode) {\n        this._texture.wrapU = value;\n    }\n\n    /**\n     * V方向采样模式\n     */\n    public get wrapModeV(): WrapMode {\n        return this._texture.wrapV;\n    }\n    public set wrapModeV(value: WrapMode) {\n        this._texture.wrapV = value;\n    }\n\n    /**\n     * W方向采样模式\n     */\n    public get wrapModeW(): WrapMode {\n        return this._texture.wrapW;\n    }\n    public set wrapModeW(value: WrapMode) {\n        this._texture.wrapW = value;\n    }\n\n    /**\n     * 贴图压缩格式\n     */\n    public get compareMode(): TextureCompareMode {\n        return this._texture.compareMode;\n    }\n\n    public set compareMode(value: TextureCompareMode) {\n        this._texture.compareMode = LayaGL.textureContext.setTextureCompareMode(this._texture, value);\n    }\n\n\n    /**\n     * gamma矫正值\n     * 如果是1.0  texture2D直接采样就是linear \n     */\n    public get gammaCorrection(): number {\n        return this._texture.gammaCorrection;\n    }\n\n    /**\n     * mipmap起始等级\n     */\n    public set baseMipmapLevel(value: number) {\n        this._texture.baseMipmapLevel = value;\n    }\n\n    public get baseMipmapLevel(): number {\n        return this._texture.baseMipmapLevel;\n    }\n\n    /**\n     * 最大Mipmap等级\n     */\n    public set maxMipmapLevel(value: number) {\n        this._texture.maxMipmapLevel = value;\n    }\n\n    public get maxMipmapLevel(): number {\n        return this._texture.maxMipmapLevel;\n    }\n\n    /**@internal */\n    _gammaSpace: boolean = false;\n    // todo\n    public get gammaSpace(): boolean {\n        // return this._gammaSpace;\n        return this._texture.useSRGBLoad || this._texture.gammaCorrection > 1;\n    }\n\n    /**\n     * 实例化一个纹理\n     * @param width 长\n     * @param height 宽\n     * @param format 格式\n     */\n    constructor(width: number, height: number, format: number) {\n        super();\n        this._width = width;\n        this._height = height;\n        this._format = format;\n        this.destroyedImmediately = Config.destroyResourceImmediatelyDefault;\n        this.hdrEncodeFormat = HDREncodeFormat.NONE;\n    }\n\n    /**\n     * 是否是gpu压缩纹理格式\n     * @returns \n     */\n    gpuCompressFormat(): boolean {\n        let format = this._format;\n        switch (format) {\n            case TextureFormat.R8G8B8:\n            case TextureFormat.R8G8B8A8:\n            case TextureFormat.R16G16B16:\n            case TextureFormat.R16G16B16A16:\n            case TextureFormat.R32G32B32:\n            case TextureFormat.R32G32B32A32:\n            case TextureFormat.R5G6B5:\n            case TextureFormat.Alpha8:\n                return false;\n            case TextureFormat.DXT1:\n            case TextureFormat.DXT3:\n            case TextureFormat.DXT5:\n            case TextureFormat.ETC1RGB:\n            case TextureFormat.ETC2RGB:\n            case TextureFormat.ETC2RGBA:\n            case TextureFormat.ETC2SRGB_Alpha8:\n            case TextureFormat.ETC2SRGB:\n            case TextureFormat.PVRTCRGB_2BPPV:\n            case TextureFormat.PVRTCRGBA_2BPPV:\n            case TextureFormat.PVRTCRGB_4BPPV:\n            case TextureFormat.PVRTCRGBA_4BPPV:\n            case TextureFormat.ASTC4x4:\n            case TextureFormat.ASTC4x4SRGB:\n            case TextureFormat.ASTC6x6:\n            case TextureFormat.ASTC6x6SRGB:\n            case TextureFormat.ASTC8x8:\n            case TextureFormat.ASTC8x8SRGB:\n            case TextureFormat.ASTC10x10:\n            case TextureFormat.ASTC10x10SRGB:\n            case TextureFormat.ASTC12x12:\n            case TextureFormat.ASTC12x12SRGB:\n                return true;\n            default:\n                return false;\n        }\n    }\n\n    /**\n     * 获取纹理格式的字节数\n     * @internal\n     */\n    _getFormatByteCount(): number {\n        switch (this._format) {\n            case TextureFormat.R8G8B8:\n                return 3;\n            case TextureFormat.R8G8B8A8:\n                return 4;\n            case TextureFormat.R5G6B5:\n                return 1;\n            case TextureFormat.Alpha8:\n                return 1;\n            case TextureFormat.R16G16B16A16:\n                return 2;\n            case TextureFormat.R32G32B32A32:\n                return 4;\n            default:\n                throw \"Texture2D: unknown format.\";\n        }\n    }\n\n    /**\n     * @internal\n     * @returns \n     */\n    _getSource() {\n        return this._texture.resource;\n    }\n\n    /**\n     * 默认贴图\n     */\n    get defaultTexture(): BaseTexture {\n        throw \"defaulte\"\n    }\n\n    protected _disposeResource(): void {\n        this._texture.dispose();\n    }\n}","import { Matrix } from \"../maths/Matrix\"\n\n/**\n * <p> <code>Byte</code> 类提供用于优化读取、写入以及处理二进制数据的方法和属性。</p>\n * <p> <code>Byte</code> 类适用于需要在字节层访问数据的高级开发人员。</p>\n */\nexport class Byte {\n\n    /**\n     * <p>主机字节序，是 CPU 存放数据的两种不同顺序，包括小端字节序和大端字节序。通过 <code>getSystemEndian</code> 可以获取当前系统的字节序。</p>\n     * <p> <code>BIG_ENDIAN</code> ：大端字节序，地址低位存储值的高位，地址高位存储值的低位。有时也称之为网络字节序。<br/>\n     * <code>LITTLE_ENDIAN</code> ：小端字节序，地址低位存储值的低位，地址高位存储值的高位。</p>\n     */\n    static BIG_ENDIAN: string = \"bigEndian\";\n    /**\n     * <p>主机字节序，是 CPU 存放数据的两种不同顺序，包括小端字节序和大端字节序。通过 <code>getSystemEndian</code> 可以获取当前系统的字节序。</p>\n     * <p> <code>LITTLE_ENDIAN</code> ：小端字节序，地址低位存储值的低位，地址高位存储值的高位。<br/>\n     * <code>BIG_ENDIAN</code> ：大端字节序，地址低位存储值的高位，地址高位存储值的低位。有时也称之为网络字节序。</p>\n     */\n    static LITTLE_ENDIAN: string = \"littleEndian\";\n    /**@private */\n    private static _sysEndian: string = null;\n    /**@private 是否为小端数据。*/\n    protected _xd_: boolean = true;\n    /**@private */\n    private _allocated_: number = 8;\n    /**@private 原始数据。*/\n    protected _d_: any\n    /**@private DataView*/\n    protected _u8d_: any;\n    /**@private */\n    protected _pos_: number = 0;\n    /**@private */\n    protected _length: number = 0;\n\n    /**\n     * <p>获取当前主机的字节序。</p>\n     * <p>主机字节序，是 CPU 存放数据的两种不同顺序，包括小端字节序和大端字节序。</p>\n     * <p> <code>BIG_ENDIAN</code> ：大端字节序，地址低位存储值的高位，地址高位存储值的低位。有时也称之为网络字节序。<br/>\n     * <code>LITTLE_ENDIAN</code> ：小端字节序，地址低位存储值的低位，地址高位存储值的高位。</p>\n     * @return 当前系统的字节序。\n     */\n    static getSystemEndian(): string {\n        if (!Byte._sysEndian) {\n            var buffer: any = new ArrayBuffer(2);\n            new DataView(buffer).setInt16(0, 256, true);\n            Byte._sysEndian = (new Int16Array(buffer))[0] === 256 ? Byte.LITTLE_ENDIAN : Byte.BIG_ENDIAN;\n        }\n        return Byte._sysEndian;\n    }\n\n    /**\n     * 创建一个 <code>Byte</code> 类的实例。\n     * @param\tdata\t用于指定初始化的元素数目，或者用于初始化的TypedArray对象、ArrayBuffer对象。如果为 null ，则预分配一定的内存空间，当可用空间不足时，优先使用这部分内存，如果还不够，则重新分配所需内存。\n     */\n    constructor(data: any = null) {\n        if (data) {\n            this._u8d_ = new Uint8Array(data);\n            this._d_ = new DataView(this._u8d_.buffer);\n            this._length = this._d_.byteLength;\n        } else {\n            this._resizeBuffer(this._allocated_);\n        }\n    }\n\n    /**\n     * 获取此对象的 ArrayBuffer 数据，数据只包含有效数据部分。\n     */\n    get buffer(): ArrayBuffer {\n        var rstBuffer: ArrayBuffer = this._d_.buffer;\n        if (rstBuffer.byteLength === this._length) return rstBuffer;\n        return rstBuffer.slice(0, this._length);\n    }\n\n    /**\n     * <p> <code>Byte</code> 实例的字节序。取值为：<code>BIG_ENDIAN</code> 或 <code>BIG_ENDIAN</code> 。</p>\n     * <p>主机字节序，是 CPU 存放数据的两种不同顺序，包括小端字节序和大端字节序。通过 <code>getSystemEndian</code> 可以获取当前系统的字节序。</p>\n     * <p> <code>BIG_ENDIAN</code> ：大端字节序，地址低位存储值的高位，地址高位存储值的低位。有时也称之为网络字节序。<br/>\n     *  <code>LITTLE_ENDIAN</code> ：小端字节序，地址低位存储值的低位，地址高位存储值的高位。</p>\n     */\n    get endian(): string {\n        return this._xd_ ? Byte.LITTLE_ENDIAN : Byte.BIG_ENDIAN;\n    }\n\n    set endian(value: string) {\n        this._xd_ = (value === Byte.LITTLE_ENDIAN);\n    }\n\n    /**\n     * <p> <code>Byte</code> 对象的长度（以字节为单位）。</p>\n     * <p>如果将长度设置为大于当前长度的值，则用零填充字节数组的右侧；如果将长度设置为小于当前长度的值，将会截断该字节数组。</p>\n     * <p>如果要设置的长度大于当前已分配的内存空间的字节长度，则重新分配内存空间，大小为以下两者较大者：要设置的长度、当前已分配的长度的2倍，并将原有数据拷贝到新的内存空间中；如果要设置的长度小于当前已分配的内存空间的字节长度，也会重新分配内存空间，大小为要设置的长度，并将原有数据从头截断为要设置的长度存入新的内存空间中。</p>\n     */\n    set length(value: number) {\n        if (this._allocated_ < value) this._resizeBuffer(this._allocated_ = Math.floor(Math.max(value, this._allocated_ * 2)));\n        else if (this._allocated_ > value) this._resizeBuffer(this._allocated_ = value);\n        this._length = value;\n    }\n\n    get length(): number {\n        return this._length;\n    }\n\n    /**@private */\n    private _resizeBuffer(len: number): void {\n        try {\n            var newByteView: any = new Uint8Array(len);\n            if (this._u8d_ != null) {\n                if (this._u8d_.length <= len) newByteView.set(this._u8d_);\n                else newByteView.set(this._u8d_.subarray(0, len));\n            }\n            this._u8d_ = newByteView;\n            this._d_ = new DataView(newByteView.buffer);\n        } catch (err) {\n            throw \"Invalid typed array length:\" + len;\n        }\n    }\n\n    /**\n     * @private\n     * <p>常用于解析固定格式的字节流。</p>\n     * <p>先从字节流的当前字节偏移位置处读取一个 <code>Uint16</code> 值，然后以此值为长度，读取此长度的字符串。</p>\n     * @return 读取的字符串。\n     */\n    getString(): string {\n        return this.readString();\n    }\n\n    /**\n     * <p>常用于解析固定格式的字节流。</p>\n     * <p>先从字节流的当前字节偏移位置处读取一个 <code>Uint16</code> 值，然后以此值为长度，读取此长度的字符串。</p>\n     * @return 读取的字符串。\n     */\n    readString(): string {\n        return this._rUTF(this.getUint16());\n    }\n\n    /**\n     * @private\n     * <p>从字节流中 <code>start</code> 参数指定的位置开始，读取 <code>len</code> 参数指定的字节数的数据，用于创建一个 <code>Float32Array</code> 对象并返回此对象。</p>\n     * <p><b>注意：</b>返回的 Float32Array 对象，在 JavaScript 环境下，是原生的 HTML5 Float32Array 对象，对此对象的读取操作都是基于运行此程序的当前主机字节序，此顺序可能与实际数据的字节序不同，如果使用此对象进行读取，需要用户知晓实际数据的字节序和当前主机字节序，如果相同，可正常读取，否则需要用户对实际数据(Float32Array.buffer)包装一层 DataView ，使用 DataView 对象可按照指定的字节序进行读取。</p>\n     * @param\tstart\t开始位置。\n     * @param\tlen\t\t需要读取的字节长度。如果要读取的长度超过可读取范围，则只返回可读范围内的值。\n     * @return  读取的 Float32Array 对象。\n     */\n    getFloat32Array(start: number, len: number): any {\n        return this.readFloat32Array(start, len);\n    }\n\n    /**\n     * 从字节流中 <code>start</code> 参数指定的位置开始，读取 <code>len</code> 参数指定的字节数的数据，用于创建一个 <code>Float32Array</code> 对象并返回此对象。\n     * @param\tstart\t开始位置。\n     * @param\tlen\t\t需要读取的字节长度。如果要读取的长度超过可读取范围，则只返回可读范围内的值。\n     * @return  读取的 Float32Array 对象。\n     */\n    readFloat32Array(start: number, len: number): any {\n        var end: number = start + len;\n        end = (end > this._length) ? this._length : end;\n        var v: any = new Float32Array(this._d_.buffer.slice(start, end));\n        this._pos_ = end;\n        return v;\n    }\n\n    /**\n     * @private\n     * 从字节流中 <code>start</code> 参数指定的位置开始，读取 <code>len</code> 参数指定的字节数的数据，用于创建一个 <code>Uint8Array</code> 对象并返回此对象。\n     * @param\tstart\t开始位置。\n     * @param\tlen\t\t需要读取的字节长度。如果要读取的长度超过可读取范围，则只返回可读范围内的值。\n     * @return  读取的 Uint8Array 对象。\n     */\n    getUint8Array(start: number, len: number): Uint8Array {\n        return this.readUint8Array(start, len);\n    }\n\n    /**\n     * 从字节流中 <code>start</code> 参数指定的位置开始，读取 <code>len</code> 参数指定的字节数的数据，用于创建一个 <code>Uint8Array</code> 对象并返回此对象。\n     * @param\tstart\t开始位置。\n     * @param\tlen\t\t需要读取的字节长度。如果要读取的长度超过可读取范围，则只返回可读范围内的值。\n     * @return  读取的 Uint8Array 对象。\n     */\n    readUint8Array(start: number, len: number): Uint8Array {\n        var end: number = start + len;\n        end = (end > this._length) ? this._length : end;\n        var v: any = new Uint8Array(this._d_.buffer.slice(start, end));\n        this._pos_ = end;\n        return v;\n    }\n\n    /**\n     * @private\n     * <p>从字节流中 <code>start</code> 参数指定的位置开始，读取 <code>len</code> 参数指定的字节数的数据，用于创建一个 <code>Int16Array</code> 对象并返回此对象。</p>\n     * <p><b>注意：</b>返回的 Int16Array 对象，在 JavaScript 环境下，是原生的 HTML5 Int16Array 对象，对此对象的读取操作都是基于运行此程序的当前主机字节序，此顺序可能与实际数据的字节序不同，如果使用此对象进行读取，需要用户知晓实际数据的字节序和当前主机字节序，如果相同，可正常读取，否则需要用户对实际数据(Int16Array.buffer)包装一层 DataView ，使用 DataView 对象可按照指定的字节序进行读取。</p>\n     * @param\tstart\t开始读取的字节偏移量位置。\n     * @param\tlen\t\t需要读取的字节长度。如果要读取的长度超过可读取范围，则只返回可读范围内的值。\n     * @return  读取的 Int16Array 对象。\n     */\n    getInt16Array(start: number, len: number): any {\n        return this.readInt16Array(start, len);\n    }\n\n    /**\n     * 从字节流中 <code>start</code> 参数指定的位置开始，读取 <code>len</code> 参数指定的字节数的数据，用于创建一个 <code>Int16Array</code> 对象并返回此对象。\n     * @param\tstart\t开始读取的字节偏移量位置。\n     * @param\tlen\t\t需要读取的字节长度。如果要读取的长度超过可读取范围，则只返回可读范围内的值。\n     * @return  读取的 Uint8Array 对象。\n     */\n    readInt16Array(start: number, len: number): any {\n        var end: number = start + len;\n        end = (end > this._length) ? this._length : end;\n        var v: any = new Int16Array(this._d_.buffer.slice(start, end));\n        this._pos_ = end;\n        return v;\n    }\n\n    /**\n     * @private\n     * 从字节流的当前字节偏移位置处读取一个 IEEE 754 单精度（32 位）浮点数。\n     * @return 单精度（32 位）浮点数。\n     */\n    getFloat32(): number {\n        return this.readFloat32();\n    }\n\n    /**\n     * 从字节流的当前字节偏移位置处读取一个 IEEE 754 单精度（32 位）浮点数。\n     * @return 单精度（32 位）浮点数。\n     */\n    readFloat32(): number {\n        if (this._pos_ + 4 > this._length) throw \"getFloat32 error - Out of bounds\";\n        var v: number = this._d_.getFloat32(this._pos_, this._xd_);\n        this._pos_ += 4;\n        return v;\n    }\n\n    /**\n     * @private\n     * 从字节流的当前字节偏移量位置处读取一个 IEEE 754 双精度（64 位）浮点数。\n     * @return 双精度（64 位）浮点数。\n     */\n    getFloat64(): number {\n        return this.readFloat64();\n    }\n\n    /**\n     * 从字节流的当前字节偏移量位置处读取一个 IEEE 754 双精度（64 位）浮点数。\n     * @return 双精度（64 位）浮点数。\n     */\n    readFloat64(): number {\n        if (this._pos_ + 8 > this._length) throw \"getFloat64 error - Out of bounds\";\n        var v: number = this._d_.getFloat64(this._pos_, this._xd_);\n        this._pos_ += 8;\n        return v;\n    }\n\n    /**\n     * 在字节流的当前字节偏移量位置处写入一个 IEEE 754 单精度（32 位）浮点数。\n     * @param\tvalue\t单精度（32 位）浮点数。\n     */\n    writeFloat32(value: number): void {\n        this._ensureWrite(this._pos_ + 4);\n        this._d_.setFloat32(this._pos_, value, this._xd_);\n        this._pos_ += 4;\n    }\n\n    /**\n     * 在字节流的当前字节偏移量位置处写入一个 IEEE 754 双精度（64 位）浮点数。\n     * @param\tvalue\t双精度（64 位）浮点数。\n     */\n    writeFloat64(value: number): void {\n        this._ensureWrite(this._pos_ + 8);\n        this._d_.setFloat64(this._pos_, value, this._xd_);\n        this._pos_ += 8;\n    }\n\n    /**\n     * @private\n     * 从字节流的当前字节偏移量位置处读取一个 Int32 值。\n     * @return Int32 值。\n     */\n    getInt32(): number {\n        return this.readInt32();\n    }\n\n    /**\n     * 从字节流的当前字节偏移量位置处读取一个 Int32 值。\n     * @return Int32 值。\n     */\n    readInt32(): number {\n        if (this._pos_ + 4 > this._length) throw \"getInt32 error - Out of bounds\";\n        var float: number = this._d_.getInt32(this._pos_, this._xd_);\n        this._pos_ += 4;\n        return float;\n    }\n\n    /**\n     * @private\n     * 从字节流的当前字节偏移量位置处读取一个 Uint32 值。\n     * @return Uint32 值。\n     */\n    getUint32(): number {\n        return this.readUint32();\n    }\n\n    /**\n     * 从字节流的当前字节偏移量位置处读取一个 Uint32 值。\n     * @return Uint32 值。\n     */\n    readUint32(): number {\n        if (this._pos_ + 4 > this._length) throw \"getUint32 error - Out of bounds\";\n        var v: number = this._d_.getUint32(this._pos_, this._xd_);\n        this._pos_ += 4;\n        return v;\n    }\n\n    /**\n     * 在字节流的当前字节偏移量位置处写入指定的 Int32 值。\n     * @param\tvalue\t需要写入的 Int32 值。\n     */\n    writeInt32(value: number): void {\n        this._ensureWrite(this._pos_ + 4);\n        this._d_.setInt32(this._pos_, value, this._xd_);\n        this._pos_ += 4;\n    }\n\n    /**\n     * 在字节流的当前字节偏移量位置处写入 Uint32 值。\n     * @param\tvalue\t需要写入的 Uint32 值。\n     */\n    writeUint32(value: number): void {\n        this._ensureWrite(this._pos_ + 4);\n        this._d_.setUint32(this._pos_, value, this._xd_);\n        this._pos_ += 4;\n    }\n\n    /**\n     * @private\n     * 从字节流的当前字节偏移量位置处读取一个 Int16 值。\n     * @return Int16 值。\n     */\n    getInt16(): number {\n        return this.readInt16();\n    }\n\n    /**\n     * 从字节流的当前字节偏移量位置处读取一个 Int16 值。\n     * @return Int16 值。\n     */\n    readInt16(): number {\n        if (this._pos_ + 2 > this._length) throw \"getInt16 error - Out of bounds\";\n        var us: number = this._d_.getInt16(this._pos_, this._xd_);\n        this._pos_ += 2;\n        return us;\n    }\n\n    /**\n     * @private\n     * 从字节流的当前字节偏移量位置处读取一个 Uint16 值。\n     * @return Uint16 值。\n     */\n    getUint16(): number {\n        return this.readUint16();\n    }\n\n    /**\n     * 从字节流的当前字节偏移量位置处读取一个 Uint16 值。\n     * @return Uint16 值。\n     */\n    readUint16(): number {\n        if (this._pos_ + 2 > this._length) throw \"getUint16 error - Out of bounds\";\n        var us: number = this._d_.getUint16(this._pos_, this._xd_);\n        this._pos_ += 2;\n        return us;\n    }\n\n    /**\n     * 在字节流的当前字节偏移量位置处写入指定的 Uint16 值。\n     * @param\tvalue\t需要写入的Uint16 值。\n     */\n    writeUint16(value: number): void {\n        this._ensureWrite(this._pos_ + 2);\n        this._d_.setUint16(this._pos_, value, this._xd_);\n        this._pos_ += 2;\n    }\n\n    /**\n     * 在字节流的当前字节偏移量位置处写入指定的 Int16 值。\n     * @param\tvalue\t需要写入的 Int16 值。\n     */\n    writeInt16(value: number): void {\n        this._ensureWrite(this._pos_ + 2);\n        this._d_.setInt16(this._pos_, value, this._xd_);\n        this._pos_ += 2;\n    }\n\n    /**\n     * @private\n     * 从字节流的当前字节偏移量位置处读取一个 Uint8 值。\n     * @return Uint8 值。\n     */\n    getUint8(): number {\n        return this.readUint8();\n    }\n\n    /**\n     * 从字节流的当前字节偏移量位置处读取一个 Uint8 值。\n     * @return Uint8 值。\n     */\n    readUint8(): number {\n        if (this._pos_ + 1 > this._length) throw \"getUint8 error - Out of bounds\";\n        return this._u8d_[this._pos_++];\n    }\n\n    /**\n     * 在字节流的当前字节偏移量位置处写入指定的 Uint8 值。\n     * @param\tvalue\t需要写入的 Uint8 值。\n     */\n    writeUint8(value: number): void {\n        this._ensureWrite(this._pos_ + 1);\n        this._d_.setUint8(this._pos_, value);\n        this._pos_++;\n    }\n\n    /**\n     * @internal\n     * 从字节流的指定字节偏移量位置处读取一个 Uint8 值。\n     * @param\tpos\t字节读取位置。\n     * @return Uint8 值。\n     */\n    //TODO:coverage\n    _getUInt8(pos: number): number {\n        return this._readUInt8(pos);\n    }\n\n    /**\n     * @internal\n     * 从字节流的指定字节偏移量位置处读取一个 Uint8 值。\n     * @param\tpos\t字节读取位置。\n     * @return Uint8 值。\n     */\n    //TODO:coverage\n    _readUInt8(pos: number): number {\n        return this._d_.getUint8(pos);\n    }\n\n    /**\n     * @internal\n     * 从字节流的指定字节偏移量位置处读取一个 Uint16 值。\n     * @param\tpos\t字节读取位置。\n     * @return Uint16 值。\n     */\n    //TODO:coverage\n    _getUint16(pos: number): number {\n        return this._readUint16(pos);\n    }\n\n    /**\n     * @internal\n     * 从字节流的指定字节偏移量位置处读取一个 Uint16 值。\n     * @param\tpos\t字节读取位置。\n     * @return Uint16 值。\n     */\n    //TODO:coverage\n    _readUint16(pos: number): number {\n        return this._d_.getUint16(pos, this._xd_);\n    }\n\n    /**\n     * @internal\n     * 使用 getFloat32() 读取6个值，用于创建并返回一个 Matrix 对象。\n     * @return  Matrix 对象。\n     */\n    //TODO:coverage\n    _getMatrix(): Matrix {\n        return this._readMatrix();\n    }\n\n    /**\n     * @internal\n     * 使用 getFloat32() 读取6个值，用于创建并返回一个 Matrix 对象。\n     * @return  Matrix 对象。\n     */\n    //TODO:coverage\n    _readMatrix(): Matrix {\n        var rst: Matrix = new Matrix(this.getFloat32(), this.getFloat32(), this.getFloat32(), this.getFloat32(), this.getFloat32(), this.getFloat32());\n        return rst;\n    }\n\n    /**\n     * @private\n     * 读取指定长度的 UTF 型字符串。\n     * @param\tlen 需要读取的长度。\n     * @return 读取的字符串。\n     */\n    private _rUTF(len: number): string {\n        var v: string = \"\", max: number = this._pos_ + len, c: number, c2: number, c3: number, f: Function = String.fromCharCode;\n        var u: any = this._u8d_, i: number = 0;\n        var strs: any[] = [];\n        var n: number = 0;\n        strs.length = 1000;\n        while (this._pos_ < max) {\n            c = u[this._pos_++];\n            if (c < 0x80) {\n                if (c != 0)\n                    //v += f(c);\\\n                    strs[n++] = f(c);\n            } else if (c < 0xE0) {\n                //v += f(((c & 0x3F) << 6) | (u[_pos_++] & 0x7F));\n                strs[n++] = f(((c & 0x3F) << 6) | (u[this._pos_++] & 0x7F));\n            } else if (c < 0xF0) {\n                c2 = u[this._pos_++];\n                //v += f(((c & 0x1F) << 12) | ((c2 & 0x7F) << 6) | (u[_pos_++] & 0x7F));\n                strs[n++] = f(((c & 0x1F) << 12) | ((c2 & 0x7F) << 6) | (u[this._pos_++] & 0x7F));\n            } else {\n                c2 = u[this._pos_++];\n                c3 = u[this._pos_++];\n                //v += f(((c & 0x0F) << 18) | ((c2 & 0x7F) << 12) | ((c3 << 6) & 0x7F) | (u[_pos_++] & 0x7F));\n                const _code = ((c & 0x0F) << 18) | ((c2 & 0x7F) << 12) | ((c3 & 0x7F) << 6) | (u[this._pos_++] & 0x7F);\n                if (_code >= 0x10000) {\n                    const _offset = _code - 0x10000;\n                    const _lead = 0xd800 | (_offset >> 10);\n                    const _trail = 0xdc00 | (_offset & 0x3ff);\n                    strs[n++] = f(_lead);\n                    strs[n++] = f(_trail);\n                }\n                else {\n                    strs[n++] = f(_code);\n                }\n            }\n            i++;\n        }\n        strs.length = n;\n        return strs.join('');\n        //return v;\n    }\n\n    /**\n     * @private\n     * 读取 <code>len</code> 参数指定的长度的字符串。\n     * @param\tlen\t要读取的字符串的长度。\n     * @return 指定长度的字符串。\n     */\n    //TODO:coverage\n    getCustomString(len: number): string {\n        return this.readCustomString(len);\n    }\n\n    /**\n     * @private\n     * 读取 <code>len</code> 参数指定的长度的字符串。\n     * @param\tlen\t要读取的字符串的长度。\n     * @return 指定长度的字符串。\n     */\n    //TODO:coverage\n    readCustomString(len: number): string {\n        var v: string = \"\", ulen: number = 0, c: number, c2: number, f: Function = String.fromCharCode;\n        var u: any = this._u8d_, i: number = 0;\n        while (len > 0) {\n            c = u[this._pos_];\n            if (c < 0x80) {\n                v += f(c);\n                this._pos_++;\n                len--;\n            } else {\n                ulen = c - 0x80;\n                this._pos_++;\n                len -= ulen;\n                while (ulen > 0) {\n                    c = u[this._pos_++];\n                    c2 = u[this._pos_++];\n                    v += f((c2 << 8) | c);\n                    ulen--;\n                }\n            }\n        }\n\n        return v;\n    }\n\n    /**\n     * 移动或返回 Byte 对象的读写指针的当前位置（以字节为单位）。下一次调用读取方法时将在此位置开始读取，或者下一次调用写入方法时将在此位置开始写入。\n     */\n    get pos(): number {\n        return this._pos_;\n    }\n\n    set pos(value: number) {\n        this._pos_ = value;\n        //$MOD byteOffset是只读的，这里进行赋值没有意义。\n        //_d_.byteOffset = value;\n    }\n\n    /**\n     * 可从字节流的当前位置到末尾读取的数据的字节数。\n     */\n    get bytesAvailable(): number {\n        return this._length - this._pos_;\n    }\n\n    /**\n     * 清除字节数组的内容，并将 length 和 pos 属性重置为 0。调用此方法将释放 Byte 实例占用的内存。\n     */\n    clear(): void {\n        this._pos_ = 0;\n        this.length = 0;\n    }\n\n    /**\n     * @internal\n     * 获取此对象的 ArrayBuffer 引用。\n     * @return\n     */\n    __getBuffer(): ArrayBuffer {\n        //this._d_.buffer.byteLength = this.length;\n        return this._d_.buffer;\n    }\n\n    /**\n     * <p>将 UTF-8 字符串写入字节流。类似于 writeUTF() 方法，但 writeUTFBytes() 不使用 16 位长度的字为字符串添加前缀。</p>\n     * <p>对应的读取方法为： getUTFBytes 。</p>\n     * @param value 要写入的字符串。\n     */\n    writeUTFBytes(value: string): void {\n        // utf8-decode\n        value = value + \"\";\n        for (var i: number = 0, sz: number = value.length; i < sz; i++) {\n            var c: number = value.charCodeAt(i);\n\n            if (c <= 0x7F) {\n                this.writeByte(c);\n            } else if (c <= 0x7FF) {\n                //优化为直接写入多个字节，而不必重复调用writeByte，免去额外的调用和逻辑开销。\n                this._ensureWrite(this._pos_ + 2);\n                this._u8d_.set([0xC0 | (c >> 6), 0x80 | (c & 0x3F)], this._pos_);\n                this._pos_ += 2;\n            } else if (c >= 0xD800 && c <= 0xDBFF) {\n                i++;\n                const c2 = value.charCodeAt(i);\n                if (!Number.isNaN(c2) && c2 >= 0xDC00 && c2 <= 0xDFFF) {\n                    const _p1 = (c & 0x3FF) + 0x40;\n                    const _p2 = c2 & 0x3FF;\n\n                    const _b1 = 0xF0 | ((_p1 >> 8) & 0x3F);\n                    const _b2 = 0x80 | ((_p1 >> 2) & 0x3F);\n                    const _b3 = 0x80 | ((_p1 & 0x3) << 4) | ((_p2 >> 6) & 0xF);\n                    const _b4 = 0x80 | (_p2 & 0x3F);\n\n                    this._ensureWrite(this._pos_ + 4);\n                    this._u8d_.set([_b1, _b2, _b3, _b4], this._pos_);\n                    this._pos_ += 4;\n                }\n            } else if (c <= 0xFFFF) {\n                this._ensureWrite(this._pos_ + 3);\n                this._u8d_.set([0xE0 | (c >> 12), 0x80 | ((c >> 6) & 0x3F), 0x80 | (c & 0x3F)], this._pos_);\n                this._pos_ += 3;\n            } else {\n                this._ensureWrite(this._pos_ + 4);\n                this._u8d_.set([0xF0 | (c >> 18), 0x80 | ((c >> 12) & 0x3F), 0x80 | ((c >> 6) & 0x3F), 0x80 | (c & 0x3F)], this._pos_);\n                this._pos_ += 4;\n            }\n        }\n    }\n\n    /**\n     * <p>将 UTF-8 字符串写入字节流。先写入以字节表示的 UTF-8 字符串长度（作为 16 位整数），然后写入表示字符串字符的字节。</p>\n     * <p>对应的读取方法为： getUTFString 。</p>\n     * @param\tvalue 要写入的字符串值。\n     */\n    writeUTFString(value: string): void {\n        var tPos: number = this.pos;\n        this.writeUint16(1);\n        this.writeUTFBytes(value);\n        var dPos: number = this.pos - tPos - 2;\n        //trace(\"writeLen:\",dPos,\"pos:\",tPos);\n        this._d_.setUint16(tPos, dPos, this._xd_);\n    }\n\n    /**\n     * <p>将 UTF-8 字符串写入字节流。先写入以字节表示的 UTF-8 字符串长度（作为 32 位整数），然后写入表示字符串字符的字节。</p>\n     * @param\tvalue 要写入的字符串值。\n     */\n    writeUTFString32(value: string): void {\n        var tPos = this.pos;\n        this.writeUint32(1);\n        this.writeUTFBytes(value);\n        var dPos = this.pos - tPos - 4;\n        //trace(\"writeLen:\",dPos,\"pos:\",tPos);\n        this._d_.setUint32(tPos, dPos, this._xd_);\n    }\n\n\n    /**\n     * @private\n     * 读取 UTF-8 字符串。\n     * @return 读取的字符串。\n     */\n    readUTFString(): string {\n        //var tPos:int = pos;\n        //var len:int = getUint16();\n        ////trace(\"readLen:\"+len,\"pos,\",tPos);\n        return this.readUTFBytes(this.getUint16());\n    }\n\n    /**\n     * @private\n     */\n    readUTFString32(): string {\n        return this.readUTFBytes(this.getUint32());\n    }\n\n    /**\n     * <p>从字节流中读取一个 UTF-8 字符串。假定字符串的前缀是一个无符号的短整型（以此字节表示要读取的长度）。</p>\n     * <p>对应的写入方法为： writeUTFString 。</p>\n     * @return 读取的字符串。\n     */\n    getUTFString(): string {\n        return this.readUTFString();\n    }\n\n    /**\n     * @private\n     * 读字符串，必须是 writeUTFBytes 方法写入的字符串。\n     * @param len\t要读的buffer长度，默认将读取缓冲区全部数据。\n     * @return 读取的字符串。\n     */\n    readUTFBytes(len: number = -1): string {\n        if (len === 0) return \"\";\n        var lastBytes: number = this.bytesAvailable;\n        if (len > lastBytes) throw \"readUTFBytes error - Out of bounds\";\n        len = len > 0 ? len : lastBytes;\n        return this._rUTF(len);\n    }\n\n    /**\n     * <p>从字节流中读取一个由 length 参数指定的长度的 UTF-8 字节序列，并返回一个字符串。</p>\n     * <p>一般读取的是由 writeUTFBytes 方法写入的字符串。</p>\n     * @param len\t要读的buffer长度，默认将读取缓冲区全部数据。\n     * @return 读取的字符串。\n     */\n    getUTFBytes(len: number = -1): string {\n        return this.readUTFBytes(len);\n    }\n\n    /**\n     * <p>在字节流中写入一个字节。</p>\n     * <p>使用参数的低 8 位。忽略高 24 位。</p>\n     * @param\tvalue\n     */\n    writeByte(value: number): void {\n        this._ensureWrite(this._pos_ + 1);\n        this._d_.setInt8(this._pos_, value);\n        this._pos_ += 1;\n    }\n\n    /**\n     * <p>从字节流中读取带符号的字节。</p>\n     * <p>返回值的范围是从 -128 到 127。</p>\n     * @return 介于 -128 和 127 之间的整数。\n     */\n    readByte(): number {\n        if (this._pos_ + 1 > this._length) throw \"readByte error - Out of bounds\";\n        return this._d_.getInt8(this._pos_++);\n    }\n\n    /**\n     * @private\n     * 从字节流中读取带符号的字节。\n     */\n    getByte(): number {\n        return this.readByte();\n    }\n\n    /**\n     * @internal\n     * <p>保证该字节流的可用长度不小于 <code>lengthToEnsure</code> 参数指定的值。</p>\n     * @param\tlengthToEnsure\t指定的长度。\n     */\n    _ensureWrite(lengthToEnsure: number): void {\n        if (this._length < lengthToEnsure) this._length = lengthToEnsure;\n        if (this._allocated_ < lengthToEnsure) this.length = lengthToEnsure;\n    }\n\n    /**\n     * <p>将指定 arraybuffer 对象中的以 offset 为起始偏移量， length 为长度的字节序列写入字节流。</p>\n     * <p>如果省略 length 参数，则使用默认长度 0，该方法将从 offset 开始写入整个缓冲区；如果还省略了 offset 参数，则写入整个缓冲区。</p>\n     * <p>如果 offset 或 length 小于0，本函数将抛出异常。</p>\n     * @param\tarraybuffer\t需要写入的 Arraybuffer 对象。\n     * @param\toffset\t\tArraybuffer 对象的索引的偏移量（以字节为单位）\n     * @param\tlength\t\t从 Arraybuffer 对象写入到 Byte 对象的长度（以字节为单位）\n     */\n    writeArrayBuffer(arraybuffer: any, offset: number = 0, length: number = 0): void {\n        if (offset < 0 || length < 0) throw \"writeArrayBuffer error - Out of bounds\";\n        if (length == 0) length = arraybuffer.byteLength - offset;\n        this._ensureWrite(this._pos_ + length);\n        var uint8array: any = new Uint8Array(arraybuffer);\n        this._u8d_.set(uint8array.subarray(offset, offset + length), this._pos_);\n        this._pos_ += length;\n    }\n\n    /**\n     * 读取ArrayBuffer数据\n     * @param\tlength\n     * @return\n     */\n    readArrayBuffer(length: number): ArrayBuffer {\n        var rst: ArrayBuffer;\n        rst = this._u8d_.buffer.slice(this._pos_, this._pos_ + length);\n        this._pos_ = this._pos_ + length\n        return rst;\n    }\n}\n\n","/**\n * <code>HalfFloatUtils</code> 类用于创建HalfFloat工具。\n */\nexport class HalfFloatUtils {\n    /**@internal */\n    private static _buffer: ArrayBuffer = new ArrayBuffer(4);\n    /**@internal */\n    private static _floatView: Float32Array = new Float32Array(HalfFloatUtils._buffer);\n    /**@internal */\n    private static _uint32View: Uint32Array = new Uint32Array(HalfFloatUtils._buffer);\n\n    /**@internal */\n    private static _baseTable: Uint32Array = new Uint32Array(512);\n    /**@internal */\n    private static _shiftTable: Uint32Array = new Uint32Array(512);\n\n    /**@internal */\n    private static _mantissaTable: Uint32Array = new Uint32Array(2048);\n    /**@internal */\n    private static _exponentTable: Uint32Array = new Uint32Array(64);\n    /**@internal */\n    private static _offsetTable: Uint32Array = new Uint32Array(64);\n\n    /**\n     * @internal\n     */\n    static __init__(): void {\n        for (var i: number = 0; i < 256; ++i) {\n            var e: number = i - 127;\n            // very small number (0, -0)\n            if (e < -27) {\n                HalfFloatUtils._baseTable[i | 0x000] = 0x0000;\n                HalfFloatUtils._baseTable[i | 0x100] = 0x8000;\n                HalfFloatUtils._shiftTable[i | 0x000] = 24;\n                HalfFloatUtils._shiftTable[i | 0x100] = 24;\n\n                // small number (denorm)\n            } else if (e < -14) {\n                HalfFloatUtils._baseTable[i | 0x000] = 0x0400 >> (-e - 14);\n                HalfFloatUtils._baseTable[i | 0x100] = (0x0400 >> (-e - 14)) | 0x8000;\n                HalfFloatUtils._shiftTable[i | 0x000] = -e - 1;\n                HalfFloatUtils._shiftTable[i | 0x100] = -e - 1;\n\n                // normal number\n            } else if (e <= 15) {\n                HalfFloatUtils._baseTable[i | 0x000] = (e + 15) << 10;\n                HalfFloatUtils._baseTable[i | 0x100] = ((e + 15) << 10) | 0x8000;\n                HalfFloatUtils._shiftTable[i | 0x000] = 13;\n                HalfFloatUtils._shiftTable[i | 0x100] = 13;\n\n                // large number (Infinity, -Infinity)\n            } else if (e < 128) {\n                HalfFloatUtils._baseTable[i | 0x000] = 0x7c00;\n                HalfFloatUtils._baseTable[i | 0x100] = 0xfc00;\n                HalfFloatUtils._shiftTable[i | 0x000] = 24;\n                HalfFloatUtils._shiftTable[i | 0x100] = 24;\n\n                // stay (NaN, Infinity, -Infinity)\n            } else {\n                HalfFloatUtils._baseTable[i | 0x000] = 0x7c00;\n                HalfFloatUtils._baseTable[i | 0x100] = 0xfc00;\n                HalfFloatUtils._shiftTable[i | 0x000] = 13;\n                HalfFloatUtils._shiftTable[i | 0x100] = 13;\n            }\n        }\n\n        HalfFloatUtils._mantissaTable[0] = 0;\n        for (i = 1; i < 1024; ++i) {\n            var m: number = i << 13;    // zero pad mantissa bits\n            e = 0;          // zero exponent\n\n            // normalized\n            while ((m & 0x00800000) === 0) {\n                e -= 0x00800000;    // decrement exponent\n                m <<= 1;\n            }\n\n            m &= ~0x00800000;   // clear leading 1 bit\n            e += 0x38800000;    // adjust bias\n\n            HalfFloatUtils._mantissaTable[i] = m | e;\n        }\n        for (i = 1024; i < 2048; ++i) {\n            HalfFloatUtils._mantissaTable[i] = 0x38000000 + ((i - 1024) << 13);\n        }\n\n        HalfFloatUtils._exponentTable[0] = 0;\n        for (i = 1; i < 31; ++i) {\n            HalfFloatUtils._exponentTable[i] = i << 23;\n        }\n        HalfFloatUtils._exponentTable[31] = 0x47800000;\n        HalfFloatUtils._exponentTable[32] = 0x80000000;\n        for (i = 33; i < 63; ++i) {\n            HalfFloatUtils._exponentTable[i] = 0x80000000 + ((i - 32) << 23);\n        }\n        HalfFloatUtils._exponentTable[63] = 0xc7800000;\n\n        HalfFloatUtils._offsetTable[0] = 0;\n        for (i = 1; i < 64; ++i) {\n            if (i === 32) {\n                HalfFloatUtils._offsetTable[i] = 0;\n            } else {\n                HalfFloatUtils._offsetTable[i] = 1024;\n            }\n        }\n    }\n\n    /**\n     * round a number to a half float number bits.\n     * @param {number} num\n     */\n    static roundToFloat16Bits(num: number): number {\n        HalfFloatUtils._floatView[0] = num;\n        var f: number = HalfFloatUtils._uint32View[0];\n        var e: number = (f >> 23) & 0x1ff;\n        return HalfFloatUtils._baseTable[e] + ((f & 0x007fffff) >> HalfFloatUtils._shiftTable[e]);\n    }\n\n    /**\n     * convert a half float number bits to a number.\n     * @param {number} float16bits - half float number bits\n     */\n    static convertToNumber(float16bits: number): number {\n        var m: number = float16bits >> 10;\n        HalfFloatUtils._uint32View[0] = HalfFloatUtils._mantissaTable[HalfFloatUtils._offsetTable[m] + (float16bits & 0x3ff)] + HalfFloatUtils._exponentTable[m];\n        return HalfFloatUtils._floatView[0];\n    }\n\n}\n\n\n","import { RenderCapable } from \"../RenderEngine/RenderEnum/RenderCapable\";\nimport { TextureFormat } from \"../RenderEngine/RenderEnum/TextureFormat\";\nimport { LayaGL } from \"../layagl/LayaGL\";\n\nconst FOURCC_DXT1: number = 827611204;\nconst FOURCC_DXT3 = 861165636;\nconst FOURCC_DXT4 = 877942852;\nconst FOURCC_DXT5: number = 894720068;\nconst FOURCC_DX10 = 808540228;\nconst DDPF_FOURCC: number = 0x4;\nconst DDPF_RGB = 0x40;\nconst DDSCAPS2_CUBEMAP = 0x200;\nconst DDPF_LUMINANCE = 0x20000;\nconst DDSD_MIPMAPCOUNT: number = 0x20000;\nconst DDS_MAGIC: number = 0x20534444;\nconst DDS_HEADER_LENGTH: number = 31;\nconst DDS_DXGI_FORMAT: number = 32;\nconst DDS_HEADER_MAGIC: number = 0;\nconst DDS_HEADER_SIZE: number = 1;\nconst DDS_HEADER_FLAGS: number = 2;\nconst DDS_HEADER_HEIGHT: number = 3;\nconst DDS_HEADER_WIDTH: number = 4;\nconst DDS_HEADER_MIPMAPCOUNT: number = 7;\nconst DDS_HEADER_PF_FLAGS: number = 20;\nconst DDS_HEADER_PF_FOURCC: number = 21;\nconst DDS_HEADER_PF_RGBBPP: number = 22;\nconst DDS_HEADER_PF_CAPS2: number = 28;\nconst FOURCC_D3DFMT_R16G16B16A16F = 113;\nconst FOURCC_D3DFMT_R32G32B32A32F = 116;\n\nconst Int32ToFourCC = (value: number) => {\n    return String.fromCharCode(\n        value & 0xff,\n        (value >> 8) & 0xff,\n        (value >> 16) & 0xff,\n        (value >> 24) & 0xff\n    );\n}\n\n/**\n * dds 未存储 color space 需要手动指定\n */\nexport class DDSTextureInfo {\n\n    width: number;\n    height: number;\n    mipmapCount: number;\n    isCube: boolean;\n    bpp: number;\n    blockBytes: number;\n    format: TextureFormat;\n    compressed: boolean;\n    dataOffset: number;\n    source: ArrayBuffer;\n\n    constructor(width: number, height: number, mipmapCount: number, isCube: boolean, bpp: number, blockBytes: number, dataOffset: number, format: TextureFormat, compressed: boolean, sourceData: ArrayBuffer) {\n        this.width = width;\n        this.height = height;\n        this.mipmapCount = mipmapCount;\n        this.isCube = isCube;\n        this.blockBytes = blockBytes;\n        this.dataOffset = dataOffset;\n        this.format = format;\n        this.source = sourceData;\n        this.bpp = bpp;\n        this.compressed = compressed;\n    }\n\n    static getDDSTextureInfo(source: ArrayBuffer): DDSTextureInfo {\n        let header = new Int32Array(source, 0, DDS_HEADER_LENGTH);\n\n        let width = header[DDS_HEADER_WIDTH];\n        let height = header[DDS_HEADER_HEIGHT];\n\n        let mipmapCount = 1;\n        if (header[DDS_HEADER_FLAGS] & DDSD_MIPMAPCOUNT) {\n            mipmapCount = Math.max(1, header[DDS_HEADER_MIPMAPCOUNT]);\n        }\n\n        let fourCC = header[DDS_HEADER_PF_FOURCC];\n\n        // let extendedHeader = new Int32Array(source, 0, DDS_HEADER_LENGTH + 4);\n        // let dxgiFormat = (fourCC == FOURCC_DX10) ? header[32] : 0;\n\n        let isFourCC = (header[DDS_HEADER_PF_FLAGS] & DDPF_FOURCC) === DDPF_FOURCC;\n\n        let isRGB = (header[DDS_HEADER_PF_FLAGS] & DDPF_RGB) === DDPF_RGB;\n        let isLuminance = (header[DDS_HEADER_PF_FLAGS] & DDPF_LUMINANCE) === DDPF_LUMINANCE;\n        let isCube = (header[DDS_HEADER_PF_CAPS2] & DDSCAPS2_CUBEMAP) === DDSCAPS2_CUBEMAP;\n        let isCompressed = (fourCC === FOURCC_DXT1 || fourCC === FOURCC_DXT3 || fourCC === FOURCC_DXT5);\n\n        let layaTexFormat = TextureFormat.DXT1;\n        let dataOffset = header[DDS_HEADER_SIZE] + 4;\n        let blockBytes = 1;\n        // todo  DXT10  unCompressed texture ?\n        switch (fourCC) {\n            case FOURCC_DXT1:\n                layaTexFormat = TextureFormat.DXT1;\n                blockBytes = 8;\n                break;\n            case FOURCC_DXT3:\n                layaTexFormat = TextureFormat.DXT3;\n                blockBytes = 16;\n                break;\n            case FOURCC_DXT4:\n            case FOURCC_DXT5:\n                layaTexFormat = TextureFormat.DXT5;\n                blockBytes = 16;\n                break;\n            case FOURCC_D3DFMT_R16G16B16A16F:\n                layaTexFormat = TextureFormat.R16G16B16A16;\n                blockBytes = 4;\n                break;\n            case FOURCC_D3DFMT_R32G32B32A32F:\n                layaTexFormat = TextureFormat.R32G32B32A32;\n                blockBytes = 4;\n                break;\n            default:\n                throw \"Unsupported format \" + Int32ToFourCC(fourCC)\n        }\n\n        if (header[DDS_HEADER_MAGIC] !== DDS_MAGIC) {\n            throw \"Invalid magic number in DDS header\";\n        }\n        if (!isFourCC && !isRGB && !isLuminance) {\n            throw \"Unsupported format, must contain a FourCC, RGB or LUMINANCE code\";\n        }\n\n        let ext = LayaGL.renderEngine.getCapable(RenderCapable.COMPRESS_TEXTURE_S3TC) || LayaGL.renderEngine.getCapable(RenderCapable.COMPRESS_TEXTURE_S3TC_SRGB);\n\n        if (isCompressed && !ext) {\n            throw \"Compressed textures are not supported on this platform.\";\n        }\n\n        return new DDSTextureInfo(width, height, mipmapCount, isCube, 0, blockBytes, dataOffset, layaTexFormat, isCompressed, source);\n    }\n\n}","\nexport enum TextureDimension {\n    Tex2D,\n    Cube,\n    Tex3D,\n    Texture2DArray,\n    CubeArray,\n    Unkonw,\n    None\n}","import { TextureDimension } from \"../RenderEngine/RenderEnum/TextureDimension\";\nimport { TextureFormat } from \"../RenderEngine/RenderEnum/TextureFormat\";\n\nconst KTX1FileIdentifier = [\n    0xAB, 0x4B, 0x54, 0x58, 0x20, 0x31, 0x31, 0xBB, 0x0D, 0x0A, 0x1A, 0x0A\n];\n\nconst KTX2FileIdentifier = [\n    0xAB, 0x4B, 0x54, 0x58, 0x20, 0x32, 0x30, 0xBB, 0x0D, 0x0A, 0x1A, 0x0A\n];\n\nconst IdentifierByteSize = 12;\nconst HeaderSize = 13;\n\n/** etc1 */\nconst COMPRESSED_RGB_ETC1_WEBGL = 36196;\n\n/** etc2 */\nconst COMPRESSED_R11_EAC = 37488;\nconst COMPRESSED_RG11_EAC = 37490;\nconst COMPRESSED_RGB8_ETC2 = 37492;\nconst COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2 = 37494;\nconst COMPRESSED_RGBA8_ETC2_EAC = 37496;\nconst COMPRESSED_SIGNED_R11_EAC = 37489;\nconst COMPRESSED_SIGNED_RG11_EAC = 37491;\nconst COMPRESSED_SRGB8_ALPHA8_ETC2_EAC = 37497;\nconst COMPRESSED_SRGB8_ETC2 = 37493;\nconst COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2 = 37495;\n\n/** astc */\nconst COMPRESSED_RGBA_ASTC_4x4_KHR = 37808;\nconst COMPRESSED_RGBA_ASTC_5x4_KHR = 37809;\nconst COMPRESSED_RGBA_ASTC_5x5_KHR = 37810;\nconst COMPRESSED_RGBA_ASTC_6x5_KHR = 37811;\nconst COMPRESSED_RGBA_ASTC_6x6_KHR = 37812;\nconst COMPRESSED_RGBA_ASTC_8x5_KHR = 37813;\nconst COMPRESSED_RGBA_ASTC_8x6_KHR = 37814;\nconst COMPRESSED_RGBA_ASTC_8x8_KHR = 37815;\nconst COMPRESSED_RGBA_ASTC_10x5_KHR = 37816;\nconst COMPRESSED_RGBA_ASTC_10x6_KHR = 37817;\nconst COMPRESSED_RGBA_ASTC_10x8_KHR = 37818;\nconst COMPRESSED_RGBA_ASTC_10x10_KHR = 37819;\nconst COMPRESSED_RGBA_ASTC_12x10_KHR = 37820;\nconst COMPRESSED_RGBA_ASTC_12x12_KHR = 37821;\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR = 37840;\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR = 37841;\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR = 37842;\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR = 37843;\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR = 37844;\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR = 37845;\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR = 37846;\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR = 37847;\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR = 37848;\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR = 37849;\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR = 37850;\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR = 37851;\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR = 37852;\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR = 37853;\n\n/** pvr */\n// todo\n\n\n/** gl param for unCompressed image data*/\nconst GL_FORMAT_RGBA = 6408;\nconst GL_FORMAT_RGB = 6407;\nconst GL_FORMAT_RGBA32F = 0x8814;\nconst GL_FORMAT_RGB32F = 0x8815;\nconst GL_FORMAT_RGBA16F = 0x881A;\nconst GL_FORMAT_RGB16F = 0x881B;\nconst GL_FORMAT_SRGB8 = 0x8C41;\n\nconst GL_INTERNALFORMAT_RGBA8 = 0x8058;\nconst GL_INTERNALFORMAT_RGB8 = 0x8051;\nconst GL_INTERNALFORMAT_SRGB8_ALPHA8 = 0x8C43;\nconst GL_INTERNALFORMAT_R11F_G11F_B10F = 0x8C3A;\n\n// gl data type\nconst GL_DATATYPE_BYTE = 0x1400;\nconst GL_DATATYPE_UNSIGNED_BYTE = 0x1401;\nconst GL_DATATYPE_SHORT = 0x1402;\nconst GL_DATATYPE_UNSIGNED_SHORT = 0x1403;\nconst GL_DATATYPE_INT = 0x1404;\nconst GL_DATATYPE_UNSIGNED_INT = 0x1405;\nconst GL_DATATYPE_FLOAT = 0x1406;\nconst GL_DATATYPE_HALF_FLOAT = 0x140b;\n\n/**\n * https://www.khronos.org/registry/KTX/specs/1.0/ktxspec_v1.html\n * https://www.khronos.org/registry/KTX/specs/2.0/ktxspec_v2.html\n */\nexport class KTXTextureInfo {\n\n    static getLayaFormat(glFormat: number, glInternalFormat: number, glType: number, glTypeSize: number): { format: TextureFormat, sRGB: boolean } {\n\n        if (glFormat == 0) {\n            switch (glInternalFormat) {\n                /** etc1 */\n                case COMPRESSED_RGB_ETC1_WEBGL:\n                    return { format: TextureFormat.ETC1RGB, sRGB: false };\n                /** etc2 */\n                // todo etc2 其他格式\n                case COMPRESSED_RGBA8_ETC2_EAC:\n                    return { format: TextureFormat.ETC2RGBA, sRGB: false };\n                case COMPRESSED_RGB8_ETC2:\n                    return { format: TextureFormat.ETC2RGB, sRGB: false };\n                case COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:\n                    return { format: TextureFormat.ETC2SRGB_Alpha8, sRGB: true };\n                case COMPRESSED_SRGB8_ETC2:\n                    return { format: TextureFormat.ETC2SRGB, sRGB: true };\n\n                /** astc */\n                // todo astc 其他格式\n                case COMPRESSED_RGBA_ASTC_4x4_KHR:\n                    return { format: TextureFormat.ASTC4x4, sRGB: false };\n                case COMPRESSED_RGBA_ASTC_6x6_KHR:\n                    return { format: TextureFormat.ASTC6x6, sRGB: false };\n                case COMPRESSED_RGBA_ASTC_8x8_KHR:\n                    return { format: TextureFormat.ASTC8x8, sRGB: false };\n                case COMPRESSED_RGBA_ASTC_10x10_KHR:\n                    return { format: TextureFormat.ASTC10x10, sRGB: false };\n                case COMPRESSED_RGBA_ASTC_12x12_KHR:\n                    return { format: TextureFormat.ASTC12x12, sRGB: false };\n                case COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:\n                    return { format: TextureFormat.ASTC4x4SRGB, sRGB: true };\n                case COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:\n                    return { format: TextureFormat.ASTC6x6SRGB, sRGB: true };\n                case COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:\n                    return { format: TextureFormat.ASTC8x8SRGB, sRGB: true };\n                case COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:\n                    return { format: TextureFormat.ASTC10x10SRGB, sRGB: true };\n                case COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:\n                    return { format: TextureFormat.ASTC12x12SRGB, sRGB: true };\n                default:\n                    throw \"KTX: UnSupported Compressed format.\";\n            }\n        }\n        else {\n            if (glFormat == GL_FORMAT_RGBA && glInternalFormat == GL_INTERNALFORMAT_RGBA8 && glType == GL_DATATYPE_UNSIGNED_BYTE) {\n                return { format: TextureFormat.R8G8B8A8, sRGB: false };\n            }\n            else if (glFormat == GL_FORMAT_RGBA && glInternalFormat == GL_INTERNALFORMAT_SRGB8_ALPHA8 && glType == GL_DATATYPE_UNSIGNED_BYTE) {\n                return { format: TextureFormat.R8G8B8A8, sRGB: true };\n            }\n            else if (glFormat == GL_FORMAT_RGBA && glInternalFormat == GL_FORMAT_RGBA32F && glType == GL_DATATYPE_FLOAT) {\n                return { format: TextureFormat.R32G32B32A32, sRGB: false };\n            }\n            else if (glFormat == GL_FORMAT_RGBA && glInternalFormat == GL_FORMAT_RGBA16F && glType == GL_DATATYPE_HALF_FLOAT) {\n                return { format: TextureFormat.R16G16B16A16, sRGB: false };\n            }\n            else if (glFormat == GL_FORMAT_RGB && glInternalFormat == GL_FORMAT_RGB32F && glType == GL_DATATYPE_FLOAT) {\n                return { format: TextureFormat.R32G32B32, sRGB: false };\n            }\n            else if (glFormat == GL_FORMAT_RGB && glInternalFormat == GL_FORMAT_RGB16F && glType == GL_DATATYPE_HALF_FLOAT) {\n                return { format: TextureFormat.R16G16B16, sRGB: false };\n            }\n            else if (glFormat == GL_FORMAT_RGB && glInternalFormat == GL_FORMAT_SRGB8 && glType == GL_DATATYPE_UNSIGNED_BYTE) {\n                return { format: TextureFormat.R8G8B8, sRGB: true };\n            }\n            else if (glFormat == GL_FORMAT_RGB && glInternalFormat == GL_INTERNALFORMAT_RGB8 && glType == GL_DATATYPE_UNSIGNED_BYTE) {\n                return { format: TextureFormat.R8G8B8, sRGB: false };\n            }\n            else {\n                throw \"ktx: Unsupported UnCompressed image data.\";\n            }\n        }\n    }\n\n    static getKTXTextureInfo(source: ArrayBuffer): KTXTextureInfo {\n\n\n        let FileIdentifier = new Uint8Array(source, 0, 12);\n\n        // ktx2\n        if (FileIdentifier[0] === 0xAB && FileIdentifier[1] === 0x4B && FileIdentifier[2] === 0x54 && FileIdentifier[3] === 0x58 && FileIdentifier[4] === 0x20 && FileIdentifier[5] === 0x32 && FileIdentifier[6] === 0x30 && FileIdentifier[7] === 0xBB && FileIdentifier[8] === 0x0D && FileIdentifier[9] === 0x0A && FileIdentifier[10] === 0x1A && FileIdentifier[11] === 0x0A) {\n            throw \"ktx2 !\"\n        }\n        // ktx1\n        else if (FileIdentifier[0] === 0xAB && FileIdentifier[1] === 0x4B && FileIdentifier[2] === 0x54 && FileIdentifier[3] === 0x58 && FileIdentifier[4] === 0x20 && FileIdentifier[5] === 0x31 && FileIdentifier[6] === 0x31 && FileIdentifier[7] === 0xBB && FileIdentifier[8] === 0x0D && FileIdentifier[9] === 0x0A && FileIdentifier[10] === 0x1A && FileIdentifier[11] === 0x0A) {\n            return KTXTextureInfo.createKTX1Info(source);\n        }\n        else {\n            throw \"ktx data wrong, not ktx1 or ktx2 buffer!\";\n        }\n    }\n\n    static createKTX1Info(source: ArrayBuffer): KTXTextureInfo {\n\n        let dataSize = Uint32Array.BYTES_PER_ELEMENT;\n\n        let headerDataView = new DataView(source, IdentifierByteSize, dataSize * HeaderSize);\n\n        let endianness = headerDataView.getUint32(0, true);\n        let littleEndian = endianness == 0x04030201;\n\n        // header\n        let glType = headerDataView.getUint32(1 * dataSize, littleEndian);\n        let glTypeSize = headerDataView.getUint32(2 * dataSize, littleEndian);\n        let glFormat = headerDataView.getUint32(3 * dataSize, littleEndian);\n        let glInternalFormat = headerDataView.getUint32(4 * dataSize, littleEndian);\n        let glBaseInternalFormat = headerDataView.getUint32(5 * dataSize, littleEndian);\n        let pixelWidth = headerDataView.getUint32(6 * dataSize, littleEndian);\n        let pixelHeight = headerDataView.getUint32(7 * dataSize, littleEndian);\n        let pixelDepth = headerDataView.getUint32(8 * dataSize, littleEndian);\n        let numberOfArrayElements = headerDataView.getUint32(9 * dataSize, littleEndian);\n        let numberOfFaces = headerDataView.getUint32(10 * dataSize, littleEndian);\n        let numberOfMipmapLevels = headerDataView.getUint32(11 * dataSize, littleEndian);\n        let bytesOfKeyValueData = headerDataView.getUint32(12 * dataSize, littleEndian);\n        let compressed = glType == 0;\n\n        let formatInfo = KTXTextureInfo.getLayaFormat(glFormat, glInternalFormat, glType, glTypeSize);\n        let layaFormat = formatInfo.format;\n        let sRGBData = formatInfo.sRGB;\n\n        // todo  3d texture\n        let layaDemision = TextureDimension.Tex2D;\n        if (numberOfFaces > 1 && numberOfArrayElements > 1) {\n            layaDemision = TextureDimension.CubeArray;\n        }\n        else if (numberOfFaces > 1 && numberOfArrayElements <= 1) {\n            layaDemision = TextureDimension.Cube;\n        }\n        else if (numberOfFaces <= 1 && numberOfArrayElements > 1) {\n            layaDemision = TextureDimension.Texture2DArray;\n        }\n\n        let headerOffset = IdentifierByteSize + HeaderSize * 4;\n\n        return new KTXTextureInfo(source, glFormat == 0, sRGBData, layaDemision, pixelWidth, pixelHeight, layaFormat, numberOfMipmapLevels || 1, bytesOfKeyValueData, headerOffset);\n\n    }\n\n\n    constructor(public source: ArrayBuffer, public compress: boolean, public sRGB: boolean, public dimension: TextureDimension, public width: number, public height: number, public format: TextureFormat, public mipmapCount: number, public bytesOfKeyValueData: number, public headerOffset: number) {\n\n    }\n\n}","import { ILaya } from \"../../ILaya\";\nimport { Handler } from \"../utils/Handler\";\nimport { BaseTexture } from \"./BaseTexture\";\nimport { Byte } from \"../utils/Byte\";\nimport { HalfFloatUtils } from \"../utils/HalfFloatUtils\";\nimport { FilterMode } from \"../RenderEngine/RenderEnum/FilterMode\";\nimport { DDSTextureInfo } from \"../RenderEngine/DDSTextureInfo\";\nimport { HDRTextureInfo } from \"../RenderEngine/HDRTextureInfo\";\nimport { KTXTextureInfo } from \"../RenderEngine/KTXTextureInfo\";\nimport { RenderCapable } from \"../RenderEngine/RenderEnum/RenderCapable\";\nimport { TextureDimension } from \"../RenderEngine/RenderEnum/TextureDimension\";\nimport { TextureFormat } from \"../RenderEngine/RenderEnum/TextureFormat\";\nimport { LayaEnv } from \"../../LayaEnv\";\nimport { HDREncodeFormat } from \"../RenderEngine/RenderEnum/HDREncodeFormat\";\nimport { LayaGL } from \"../layagl/LayaGL\";\n\nexport interface TexturePropertyParams {\n    wrapModeU?: number,\n    wrapModeV?: number,\n    filterMode?: FilterMode,\n    anisoLevel?: number,\n    premultiplyAlpha?: boolean,\n    hdrEncodeFormat?: HDREncodeFormat,\n}\n\nexport type TextureConstructParams = ConstructorParameters<typeof Texture2D>;\n\n/**\n * <code>Texture2D</code> 类用于生成2D纹理。\n */\nexport class Texture2D extends BaseTexture {\n    /**Texture2D资源。*/\n    static TEXTURE2D: string = \"TEXTURE2D\";\n\n    /**纯灰色纹理。*/\n    static grayTexture: Texture2D = null;\n    /**纯白色纹理。*/\n    static whiteTexture: Texture2D = null;\n    /**纯黑色纹理。*/\n    static blackTexture: Texture2D = null;\n    /**默认法线纹理 */\n    static normalTexture: Texture2D = null;\n    /**错误纹理 */\n    static errorTexture: Texture2D = null;\n\n    /**\n     * @internal\n     */\n    static __init__() {\n        var pixels: Uint8Array = new Uint8Array(4);\n        pixels[0] = 128;\n        pixels[1] = 128;\n        pixels[2] = 128;\n        pixels[3] = 255;\n        Texture2D.grayTexture = new Texture2D(1, 1, TextureFormat.R8G8B8A8, false, false);\n        Texture2D.grayTexture.setPixelsData(pixels, false, false);\n        Texture2D.grayTexture.lock = true;//锁住资源防止被资源管理释放\n        Texture2D.grayTexture.name = \"Default_Gray\";\n        pixels[0] = 255;\n        pixels[1] = 255;\n        pixels[2] = 255;\n        pixels[3] = 255;\n        Texture2D.whiteTexture = new Texture2D(1, 1, TextureFormat.R8G8B8A8, false, false);\n        Texture2D.whiteTexture.setPixelsData(pixels, false, false);\n        Texture2D.whiteTexture.lock = true;//锁住资源防止被资源管理释放\n        Texture2D.whiteTexture.name = \"Default_White\";\n        pixels[0] = 0;\n        pixels[1] = 0;\n        pixels[2] = 0;\n        pixels[3] = 255;\n        Texture2D.blackTexture = new Texture2D(1, 1, TextureFormat.R8G8B8A8, false, false);\n        Texture2D.blackTexture.setPixelsData(pixels, false, false);\n        Texture2D.blackTexture.lock = true;//锁住资源防止被资源管理释放\n        Texture2D.blackTexture.name = \"Default_Black\";\n        if (LayaGL.renderEngine.getCapable(RenderCapable.TextureFormat_R16G16B16A16)) {\n            let floatPixle = new Uint16Array(4);\n            floatPixle[0] = 14336;\n            floatPixle[1] = 14336;\n            floatPixle[2] = 15360;\n            floatPixle[3] = 15360;\n            Texture2D.normalTexture = new Texture2D(1, 1, TextureFormat.R16G16B16A16, false, false, false);\n            Texture2D.normalTexture.setPixelsData(floatPixle, false, false);\n        }\n        else {\n            pixels[0] = 128;\n            pixels[1] = 128;\n            pixels[2] = 255;\n            pixels[3] = 255;\n            Texture2D.normalTexture = new Texture2D(1, 1, TextureFormat.R8G8B8A8, false, false, false);\n            Texture2D.normalTexture.setPixelsData(pixels, false, false);\n        }\n\n        Texture2D.normalTexture.lock = true;\n        Texture2D.normalTexture.name = \"Default_Normal\";\n        Texture2D.errorTexture = Texture2D.whiteTexture;\n    }\n\n\n    /**\n     * @internal\n     * @param data \n     * @param propertyParams \n     * @param constructParams \n     * @returns \n     */\n    static _SimpleAnimatorTextureParse(data: ArrayBuffer, propertyParams: TexturePropertyParams = null, constructParams: TextureConstructParams = null) {\n        var byte: Byte = new Byte(data);\n        var version: String = byte.readUTFString();\n        var texture: Texture2D;\n        var pixelDataArrays: Float32Array | Uint16Array;\n        var usePixelData: Float32Array | Uint16Array;\n        switch (version) {\n            case \"LAYAANIMATORTEXTURE:0000\":\n                var textureWidth: number = byte.readInt32();\n                var pixelDataLength: number = byte.readInt32();\n                pixelDataArrays = new Float32Array(textureWidth * textureWidth * 4);\n                usePixelData = new Float32Array(byte.readArrayBuffer(pixelDataLength * 4));\n                pixelDataArrays.set(usePixelData, 0);\n                var texture: Texture2D = new Texture2D(textureWidth, textureWidth, TextureFormat.R32G32B32A32, false, false);\n                texture.setPixelsData(pixelDataArrays, false, false);\n                texture.filterMode = FilterMode.Point;\n                break;\n            case \"LAYACOMPRESSANIMATORTEXTURE:0000\":\n                var textureWidth: number = byte.readInt32();\n                var pixelDataLength: number = byte.readInt32();\n                pixelDataArrays = new Uint16Array(byte.readArrayBuffer(pixelDataLength * 2));\n                if (!LayaGL.renderEngine.getCapable(RenderCapable.TextureFormat_R16G16B16A16)) {\n                    console.log(\"The platform does not support 16-bit floating-point textures\");\n                    if (!LayaGL.renderEngine.getCapable(RenderCapable.TextureFormat_R32G32B32A32))\n                        console.error(\"The platform does not support 32-bit floating-point textures\");\n                    usePixelData = new Float32Array(textureWidth * textureWidth * 4);\n                    for (var i = 0, n = pixelDataArrays.length; i < n; i++) {\n                        usePixelData[i] = HalfFloatUtils.convertToNumber(pixelDataArrays[i]);\n                    }\n                    texture = new Texture2D(textureWidth, textureWidth, TextureFormat.R32G32B32A32, false, false);\n                    texture.setPixelsData(usePixelData, false, false);\n                    texture.filterMode = FilterMode.Point;\n\n                } else {\n                    usePixelData = new Uint16Array(textureWidth * textureWidth * 4);\n                    usePixelData.set(pixelDataArrays, 0);\n                    texture = new Texture2D(textureWidth, textureWidth, TextureFormat.R16G16B16A16, false, false);\n                    texture.setPixelsData(usePixelData, false, false);\n                    texture.filterMode = FilterMode.Point;\n                }\n                break;\n            default:\n                throw \"Laya3D:unknow version.\";\n        }\n\n        return texture;\n    }\n\n    /**\n     * @internal\n     * @param imageSource \n     * @param propertyParams \n     * @param constructParams \n     * @returns \n     */\n    static _parseImage(imageSource: any, propertyParams: TexturePropertyParams = null, constructParams: TextureConstructParams = null): Texture2D {\n\n        let format = constructParams ? constructParams[2] : TextureFormat.R8G8B8A8;\n        let mipmap = constructParams ? constructParams[3] : true;\n        let canread = constructParams ? constructParams[4] : false;\n        let srgb = constructParams ? constructParams[5] : false;\n        let pma = propertyParams ? propertyParams.premultiplyAlpha : false;\n        // todo  srgb\n        let texture = new Texture2D(imageSource.width, imageSource.height, format, mipmap, canread, srgb, pma);\n\n        if (propertyParams) {\n            texture.setImageData(imageSource, pma, false);\n            texture.setProperties(propertyParams);\n        }\n        else\n            texture.setImageData(imageSource, false, false);\n\n        if (canread) {\n            if (LayaEnv.isConch && imageSource._nativeObj) {\n                texture._pixels = new Uint8Array(imageSource._nativeObj.getImageData(0, 0, imageSource.width, imageSource.height));\n            } else {\n                ILaya.Browser.canvas.size(imageSource.width, imageSource.height);\n                ILaya.Browser.canvas.clear();\n                ILaya.Browser.context.drawImage(imageSource, 0, 0, imageSource.width, imageSource.height);\n                texture._pixels = new Uint8Array(ILaya.Browser.context.getImageData(0, 0, imageSource.width, imageSource.height).data.buffer);\n            }\n        }\n\n        return texture;\n    }\n\n    /**\n     * @internal\n     * @param data \n     * @param propertyParams \n     * @param constructParams \n     * @returns \n     */\n    static _parseDDS(data: ArrayBuffer, propertyParams: TexturePropertyParams = null, constructParams: TextureConstructParams = null) {\n\n        let ddsInfo = DDSTextureInfo.getDDSTextureInfo(data);\n\n        let texture = new Texture2D(ddsInfo.width, ddsInfo.height, ddsInfo.format, ddsInfo.mipmapCount > 1, false, false);\n\n        texture.setDDSData(ddsInfo);\n        if (propertyParams)\n            texture.setProperties(propertyParams);\n\n        return texture;\n    }\n\n    /**\n     * @internal\n     * @param data \n     * @param propertyParams \n     * @param constructParams \n     * @returns \n     */\n    static _parseKTX(data: ArrayBuffer, propertyParams: TexturePropertyParams = null, constructParams: TextureConstructParams = null) {\n        let ktxInfo = KTXTextureInfo.getKTXTextureInfo(data);\n\n        let texture = new Texture2D(ktxInfo.width, ktxInfo.height, ktxInfo.format, ktxInfo.mipmapCount > 1, false, ktxInfo.sRGB);\n\n        texture.setKTXData(ktxInfo);\n        if (propertyParams)\n            texture.setProperties(propertyParams);\n        return texture;\n    }\n\n    /**\n     * @internal\n     * @param data \n     * @param propertyParams \n     * @param constructParams \n     */\n    static _parsePVR(data: ArrayBuffer, propertyParams: TexturePropertyParams = null, constructParams: TextureConstructParams = null): Texture2D {\n        throw \"pvr !\";\n    }\n\n    /**\n     * 加载纹理\n     * @param url 路径\n     * @param complete 处理时间\n     */\n    static load(url: string, complete: Handler): void {\n        ILaya.loader.load(url, complete, null, ILaya.Loader.TEXTURE2D);\n    }\n\n    /**@internal */\n    _canRead: boolean = false;\n    /**@internal */\n    _pixels: Uint8Array;\n\n    /**\n     * 实例化2D纹理\n     * @param width \n     * @param height \n     * @param format \n     * @param mipmap \n     * @param canRead \n     * @param sRGB \n     * @returns \n     */\n    constructor(width: number, height: number, format: TextureFormat, mipmap: boolean = true, canRead: boolean, sRGB: boolean = false, premultiplyAlpha: boolean = false) {\n        super(width, height, format);\n        this._dimension = TextureDimension.Tex2D;\n        this._gammaSpace = sRGB;\n        this._canRead = canRead;\n        this._texture = LayaGL.textureContext.createTextureInternal(this._dimension, width, height, format, mipmap, sRGB, premultiplyAlpha);\n        return;\n    }\n\n    /**\n     * 设置Image数据\n     * @param source Image原始数据\n     * @param premultiplyAlpha 是否预乘 alpha\n     * @param invertY 是否反转图像 Y 轴\n     */\n    setImageData(source: HTMLImageElement | HTMLCanvasElement | ImageBitmap, premultiplyAlpha: boolean, invertY: boolean) {\n        let texture = this._texture;\n        LayaGL.textureContext.setTextureImageData(texture, source, premultiplyAlpha, invertY);\n    }\n\n    /**\n     * 设置像素数据\n     * @param source 像素数据\n     * @param premultiplyAlpha 是否预乘 alpha\n     * @param invertY 是否反转图像 Y 轴\n     */\n    setPixelsData(source: ArrayBufferView, premultiplyAlpha: boolean, invertY: boolean) {\n        let texture = this._texture;\n        LayaGL.textureContext.setTexturePixelsData(texture, source, premultiplyAlpha, invertY);\n    }\n\n    /**\n     * 设置像素值\n     * @param xOffset offset X\n     * @param yOffset offset Y\n     * @param width 宽\n     * @param height 高\n     * @param pixels 像素\n     * @param mipmapLevel mipmap等级\n     * @param generateMipmap 生成mipmap\n     * @param premultiplyAlpha 预乘\n     * @param invertY 翻转Y\n     */\n    setSubPixelsData(xOffset: number, yOffset: number, width: number, height: number, pixels: ArrayBufferView, mipmapLevel: number, generateMipmap: boolean, premultiplyAlpha: boolean, invertY: boolean) {\n        let texture = this._texture;\n        LayaGL.textureContext.setTextureSubPixelsData(texture, pixels, mipmapLevel, generateMipmap, xOffset, yOffset, width, height, premultiplyAlpha, invertY);\n    }\n\n    /**\n     * 设置dds数据\n     * @param ddsInfo \n     */\n    setDDSData(ddsInfo: DDSTextureInfo) {\n        let texture = this._texture;\n        LayaGL.textureContext.setTextureDDSData(texture, ddsInfo);\n    }\n\n    /**\n     * 设置ktx数据\n     * @param ktxInfo \n     */\n    setKTXData(ktxInfo: KTXTextureInfo) {\n        let texture = this._texture;\n        LayaGL.textureContext.setTextureKTXData(texture, ktxInfo);\n    }\n\n    /**\n     * 设置HDR数据\n     * @param hdrInfo \n     */\n    setHDRData(hdrInfo: HDRTextureInfo) {\n        let texture = this._texture;\n        LayaGL.textureContext.setTextureHDRData(texture, hdrInfo);\n    }\n\n    /**\n     * 默认贴图\n     */\n    get defaultTexture(): BaseTexture {\n        return Texture2D.grayTexture;\n    }\n\n    /**\n     * \n     * 获得像素\n     * @returns \n     */\n    getPixels() {\n        if (this._canRead && this._pixels) {\n            return this._pixels;\n        }\n        else {\n            throw new Error(\"Texture2D: must set texture canRead is true.\");\n        }\n    }\n\n    /**\n     * @internal\n     * @param propertyParams \n     */\n    private setProperties(propertyParams: TexturePropertyParams) {\n        if (propertyParams) {\n            if (propertyParams.wrapModeU != null) this.wrapModeU = propertyParams.wrapModeU;\n            if (propertyParams.wrapModeV != null) this.wrapModeV = propertyParams.wrapModeV;\n            if (propertyParams.filterMode != null) this.filterMode = propertyParams.filterMode;\n            if (propertyParams.anisoLevel != null) this.anisoLevel = propertyParams.anisoLevel;\n        }\n    }\n}","import { Resource } from \"../../resource/Resource\"\n\n/**\n * ...\n * @author ...\n */\nexport class BaseShader extends Resource {\n    static activeShader: BaseShader|null;\t\t\t//等于bindShader或者null\n    static bindShader: BaseShader;\t\t\t//当前绑定的shader\n\n    constructor() {\n        super();\n\n\n    }\n\n}\n\n\n","import { Matrix } from \"../../maths/Matrix\"\nimport { ShaderDefines2D } from \"../shader/d2/ShaderDefines2D\"\n\nexport class RenderState2D {\n    static _MAXSIZE: number = 99999999;\n    /**@private 一个初始化的 <code>Matrix</code> 对象，不允许修改此对象内容。*/\n    static EMPTYMAT4_ARRAY: number[] = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n    static TEMPMAT4_ARRAY: number[] = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n    static worldMatrix4: number[] = RenderState2D.TEMPMAT4_ARRAY;\n\n    static worldMatrix: Matrix = new Matrix();\n    static matWVP: any = null;// :Matrix4x4 = Matrix4x4.DEFAULT;\t\t// 3d矩阵\n    static worldAlpha: number = 1.0;\n\n    static worldScissorTest: boolean = false;\n\n    //public static var worldClipRect:Rectangle = new Rectangle(0, 0, _MAXSIZE, _MAXSIZE);\n    static worldShaderDefines: ShaderDefines2D;\n    static worldFilters: any[];\n\n    static width: number = 0;\n    static height: number = 0;\n\n    static InvertY:boolean = false;\n    /* 不知道 有什么用，删掉先\n    public static function getMatrArray():Array {\n        return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n    }\n    */\n    //TODO:coverage\n    static mat2MatArray(mat: Matrix, matArray: any[]): any[] {\n        var m: Matrix = mat;\n        var m4: any[] = matArray;\n        m4[0] = m.a;\n        m4[1] = m.b;\n        m4[2] = RenderState2D.EMPTYMAT4_ARRAY[2];\n        m4[3] = RenderState2D.EMPTYMAT4_ARRAY[3];\n        m4[4] = m.c;\n        m4[5] = m.d;\n        m4[6] = RenderState2D.EMPTYMAT4_ARRAY[6];\n        m4[7] = RenderState2D.EMPTYMAT4_ARRAY[7];\n        m4[8] = RenderState2D.EMPTYMAT4_ARRAY[8];\n        m4[9] = RenderState2D.EMPTYMAT4_ARRAY[9];\n        m4[10] = RenderState2D.EMPTYMAT4_ARRAY[10];\n        m4[11] = RenderState2D.EMPTYMAT4_ARRAY[11];\n        m4[12] = m.tx;\n        m4[13] = m.ty;\n        m4[14] = RenderState2D.EMPTYMAT4_ARRAY[14];\n        m4[15] = RenderState2D.EMPTYMAT4_ARRAY[15];\n        return matArray;\n    }\n\n    static restoreTempArray(): void {\n        RenderState2D.TEMPMAT4_ARRAY[0] = 1;\n        RenderState2D.TEMPMAT4_ARRAY[1] = 0;\n        RenderState2D.TEMPMAT4_ARRAY[4] = 0;\n        RenderState2D.TEMPMAT4_ARRAY[5] = 1;\n        RenderState2D.TEMPMAT4_ARRAY[12] = 0;\n        RenderState2D.TEMPMAT4_ARRAY[13] = 0;\n    }\n\n    static clear(): void {\n        RenderState2D.worldScissorTest = false;\n        //worldFilters = null;\n        RenderState2D.worldAlpha = 1;\n        //worldClipRect.x = worldClipRect.y = 0;\n        //worldClipRect.width = width;\n        //worldClipRect.height = height;\n    }\n\n}\n\n\n","import { TextureFormat } from \"./TextureFormat\";\n\nexport enum RenderTargetFormat {\n \n    None = -1,\n    /**使用RGB的纹理，不可设置SRGB参数 */\n    R8G8B8 = TextureFormat.R8G8B8,\n    R8G8B8A8 = TextureFormat.R8G8B8A8,\n    R16G16B16A16 = TextureFormat.R16G16B16A16,\n    R32G32B32 = TextureFormat.R32G32B32,\n    R32G32B32A32 = TextureFormat.R32G32B32A32,\n    R16G16B16 = TextureFormat.R16G16B16,\n    \n    DEPTH_16 = 35,\n    STENCIL_8 = 36,\n    DEPTHSTENCIL_24_8 = 37,\n    DEPTH_32 = 38,\n    DEPTHSTENCIL_24_Plus = 39\n}","export enum RenderClearFlag{\n    Nothing = 0,\n    Color = 1,\n    Depth = 2,\n    Stencil = 4,\n}","export enum BlendFactor {\n    /** (0, 0, 0, 0)*/\n    Zero,\n    /** (1, 1, 1, 1)*/\n    One,\n    /** (Rs, Gs, Bs, As) */\n    SourceColor,\n    /** (1 - Rs, 1 - Gs, 1 - Bs, 1 - As)*/\n    OneMinusSourceColor,\n    /** (Rd, Gd, Bd, Ad)*/\n    DestinationColor,\n    /** (1 - Rd, 1 - Gd, 1 - Bd, 1 - Ad)*/\n    OneMinusDestinationColor,\n    /** (As, As, As, As)*/\n    SourceAlpha,\n    /** (1 - As, 1 - As, 1 - As, 1 - As)*/\n    OneMinusSourceAlpha,\n    /** (Ad, Ad, Ad, Ad)*/\n    DestinationAlpha,\n    /** (1 - Ad, 1 - Ad, 1 - Ad, 1 - Ad)*/\n    OneMinusDestinationAlpha,\n    /** (min(As, 1 - Ad), min(As, 1 - Ad), min(As, 1 - Ad), 10)*/\n    SourceAlphaSaturate,\n    /** (Rc, Gc, Bc, Ac)*/\n    BlendColor,\n    /** (1 - Rc, 1 - Gc, 1 - Bc, 1 - Ac)*/\n    OneMinusBlendColor\n  }","import { IClone } from \"../utils/IClone\";\n\n/**\n * <code>Color</code> 类用于创建颜色实例。\n */\nexport class Color implements IClone {\n    /**\n     * 红色\n     */\n    static RED: Color = new Color(1, 0, 0, 1);\n    /**\n     * 绿色\n     */\n    static GREEN: Color = new Color(0, 1, 0, 1);\n    /**\n     * 蓝色\n     */\n    static BLUE: Color = new Color(0, 0, 1, 1);\n    /**\n     * 蓝绿色\n     */\n    static CYAN: Color = new Color(0, 1, 1, 1);\n    /**\n     * 黄色\n     */\n    static YELLOW: Color = new Color(1, 0.92, 0.016, 1);\n    /**\n     * 品红色\n     */\n    static MAGENTA: Color = new Color(1, 0, 1, 1);\n    /**\n     * 灰色\n     */\n    static GRAY: Color = new Color(0.5, 0.5, 0.5, 1);\n    /**\n     * 白色\n     */\n    static WHITE: Color = new Color(1, 1, 1, 1);\n    /**\n     * 黑色\n     */\n    static BLACK: Color = new Color(0, 0, 0, 1);\n    /**\n     * 全透明\n     */\n    static CLEAR: Color = new Color(0, 0, 0, 0);\n\n    /**\n     * Gamma空间值转换到线性空间。\n     * @param value gamma空间值。\n     */\n    static gammaToLinearSpace(value: number): number {\n        // http://www.opengl.org/registry/specs/EXT/framebuffer_sRGB.txt\n        // http://www.opengl.org/registry/specs/EXT/texture_sRGB_decode.txt\n        // {  cs / 12.92,                 cs <= 0.04045 }\n        // {  ((cs + 0.055)/1.055)^2.4,   cs >  0.04045 }\n        if (value <= 0.04045)\n            return value / 12.92;\n        else if (value < 1.0)\n            return Math.pow((value + 0.055) / 1.055, 2.4);\n        else\n            return Math.pow(value, 2.4);\n    }\n\n    /**\n     * 线性空间值转换到Gamma空间。\n     * @param value 线性空间值。\n     */\n    static linearToGammaSpace(value: number): number {\n        // http://www.opengl.org/registry/specs/EXT/framebuffer_sRGB.txt\n        // http://www.opengl.org/registry/specs/EXT/texture_sRGB_decode.txt\n        // {  0.0,                          0         <= cl\n        // {  12.92 * c,                    0         <  cl < 0.0031308\n        // {  1.055 * cl^0.41666 - 0.055,   0.0031308 <= cl < 1\n        // {  1.0,                                       cl >= 1  <- This has been adjusted since we want to maintain HDR colors\n        if (value <= 0.0)\n            return 0.0;\n        else if (value <= 0.0031308)\n            return 12.92 * value;\n        else if (value <= 1.0)\n            return 1.055 * Math.pow(value, 0.41666) - 0.055;\n        else\n            return Math.pow(value, 0.41666);\n    }\n\n\n    /**red分量*/\n    r: number;\n\n    /**green分量*/\n    g: number;\n\n    /**blue分量*/\n    b: number;\n\n    /**alpha分量*/\n    a: number;\n\n    /**\n     * 创建一个 <code>Color</code> 实例。\n     * @param\tr  颜色的red分量。\n     * @param\tg  颜色的green分量。\n     * @param\tb  颜色的blue分量。\n     * @param\ta  颜色的alpha分量。\n     */\n    constructor(r: number = 1, g: number = 1, b: number = 1, a: number = 1) {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n        this.a = a;\n    }\n\n    equal(c: Color): boolean {\n        if (!c) return false;\n        const toFIxed = (a: number, b: number) => {\n            var delta = 1e-5;\n            return -delta < a - b && a - b < delta;\n        }\n        return toFIxed(c.r, this.r) && toFIxed(c.g, this.g) && toFIxed(c.b, this.b) && toFIxed(c.a, this.a);\n    }\n\n    /**\n     * Gamma空间转换到线性空间。\n     * @param\tlinear 线性空间颜色。\n     */\n    toLinear(out: Color): void {\n        out.r = Color.gammaToLinearSpace(this.r);\n        out.g = Color.gammaToLinearSpace(this.g);\n        out.b = Color.gammaToLinearSpace(this.b);\n        out.a = this.a;\n    }\n\n    /**\n     * 线性空间转换到Gamma空间。\n     * @param\tgamma Gamma空间颜色。\n     */\n    toGamma(out: Color): void {\n        out.r = Color.linearToGammaSpace(this.r);\n        out.g = Color.linearToGammaSpace(this.g);\n        out.b = Color.linearToGammaSpace(this.b);\n        out.a = this.a;\n    }\n\n    /**\n     * 克隆。\n     * @param\tdestObject 克隆源。\n     */\n    cloneTo(destObject: any): void {\n        var destColor: Color = (<Color>destObject);\n        destColor.r = this.r;\n        destColor.g = this.g;\n        destColor.b = this.b;\n        destColor.a = this.a;\n    }\n\n    scale(value: number): Color {\n        this.r = this.r * value;\n        this.g = this.g * value;\n        this.b = this.b * value;\n        return this;\n    }\n\n    setValue(r: number, g: number, b: number, a: number) {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n        this.a = a;\n    }\n\n    /**\n     * 从Array数组拷贝值。\n     * @param  array 数组。\n     * @param  offset 数组偏移。\n     */\n    fromArray(array: any[], offset: number = 0): void {\n        this.r = array[offset + 0];\n        this.g = array[offset + 1];\n        this.b = array[offset + 2];\n        this.a = array[offset + 3];\n    }\n\n    /**\n     * 转换为Array数组\n     * @return\n     */\n    toArray(): Array<number> {\n        return [this.r, this.g, this.b, this.a];\n    }\n\n    /**\n     * 克隆。\n     * @return\t 克隆副本。\n     */\n    clone(): any {\n        var dest: Color = new Color();\n        this.cloneTo(dest);\n        return dest;\n    }\n}\n\n\n","import { Texture2D } from \"./Texture2D\";\nimport { BaseTexture } from \"./BaseTexture\"\nimport { RenderTargetFormat } from \"../RenderEngine/RenderEnum/RenderTargetFormat\";\nimport { InternalRenderTarget } from \"../RenderEngine/RenderInterface/InternalRenderTarget\";\nimport { IRenderTarget } from \"../RenderEngine/RenderInterface/IRenderTarget\";\nimport { Color } from \"../maths/Color\";\nimport { LayaGL } from \"../layagl/LayaGL\";\n\n/**\n * <code>RenderTexture</code> 类用于创建渲染目标。\n */\nexport class NativeRenderTexture2D extends BaseTexture implements IRenderTarget {\n    /** @private */\n    private static _currentActive: NativeRenderTexture2D;\n    private static _clearColor: Color = new Color(0, 0, 0, 0);\n    private _lastRT: NativeRenderTexture2D;\n    private _lastWidth: number;\n    private _lastHeight: number;\n\n    //为push,pop 用的。以后和上面只保留一份。\n    //由于可能递归，所以不能简单的用save，restore\n    private static rtStack: any[] = [];//rt:RenderTexture，w:int，h:int\n\n    static defuv: any[] = [0, 0, 1, 0, 1, 1, 0, 1];\n    static flipyuv: any[] = [0, 1, 1, 1, 1, 0, 0, 0];\n    /**\n     * 获取当前激活的Rendertexture\n     */\n    static get currentActive(): NativeRenderTexture2D {\n        return NativeRenderTexture2D._currentActive;\n    }\n\n    /** @private */\n    private _depthStencilFormat: number;\n\n    private _colorFormat: RenderTargetFormat;\n\n    /**@internal */\n    _mgrKey: number = 0;\t//给WebGLRTMgr用的\n\n    /**\n     * 获取深度格式。\n     *@return 深度格式。\n     */\n    get depthStencilFormat(): number {\n        return this._depthStencilFormat;\n    }\n\n    /**\n     * @inheritDoc\n     * @override\n     */\n    get defaultTexture(): BaseTexture {\n        return Texture2D.grayTexture;\n    }\n\n    getIsReady(): boolean {\n        return true;\n    }\n\n    /**\n     * 获取宽度。\n     */\n    get sourceWidth(): number {\n        return this._width;\n    }\n\n    /***\n     * 获取高度。\n     */\n    get sourceHeight(): number {\n        return this._height;\n    }\n\n    /**\n     * 获取offsetX。\n     */\n    get offsetX(): number {\n        return 0;\n    }\n\n    /***\n     * 获取offsetY\n     */\n    get offsetY(): number {\n        return 0;\n    }\n\n    depthStencilTexture: BaseTexture;\n\n    _renderTarget: InternalRenderTarget;\n    _isCameraTarget: boolean;\n\n    private _nativeObj: any;\n    /**\n     * @param width  宽度。\n     * @param height 高度。\n     * @param format 纹理格式。\n     * @param depthStencilFormat 深度格式。\n     * 创建一个 <code>RenderTexture</code> 实例。\n     */\n    constructor(width: number, height: number, format: number = RenderTargetFormat.R8G8B8, depthStencilFormat: number = RenderTargetFormat.DEPTH_16, create: boolean = true ) {//TODO:待老郭清理\n\n        super(width, height, format);\n        this._colorFormat = format;\n        this._depthStencilFormat = depthStencilFormat;\n        if (width != 0 && height != 0 && create) {\n            this._create();\n        }\n        this.lock = true;\n    }\n\n    get isCube(): boolean {\n        return this._nativeObj.isCube;\n    }\n\n    get samples(): number {\n        return this._nativeObj.samples;\n    }\n\n    get generateMipmap(): boolean {\n        return this._nativeObj.generateMipmap;\n    }\n\n    _start(): void {\n        throw new Error(\"Method not implemented.\");\n    }\n    _end(): void {\n        throw new Error(\"Method not implemented.\");\n    }\n    _create() {\n        // todo  mipmap\n        this._nativeObj = new (window as any).conchRenderTexture2D((LayaGL.renderEngine as any)._nativeObj, this.width, this.height, this._colorFormat, this.depthStencilFormat);\n        this._texture = this._nativeObj._renderTarget._textures[0];\n    }\n\n\n    /**\n     * 保存当前的RT信息。\n     */\n    static pushRT(): void {\n        throw new Error(\"Method not implemented.\");\n    }\n    /**\n     * 恢复上次保存的RT信息\n     */\n    static popRT(): void {\n        throw new Error(\"Method not implemented.\");\n    }\n    /**\n     * 开始绑定。\n     */\n    start(): void {\n        this._nativeObj.start();\n    }\n\n    /**\n     * 结束绑定。\n     */\n    end(): void {\n        this._nativeObj.end();\n    }\n\n    /**\n     * 恢复上一次的RenderTarge.由于使用自己保存的，所以如果被外面打断了的话，会出错。\n     */\n    restore(): void {\n        this._nativeObj.restore();\n    }\n\n\n    clear(r: number = 0.0, g: number = 0.0, b: number = 0.0, a: number = 1.0): void {\n        this._nativeObj.clear(r, g, b, a);\n    }\n\n\n    /**\n     * 获得像素数据。\n     * @param x X像素坐标。\n     * @param y Y像素坐标。\n     * @param width 宽度。\n     * @param height 高度。\n     * @return 像素数据。\n     */\n    getData(x: number, y: number, width: number, height: number): ArrayBufferView {\n        return this._nativeObj.getData(x, y, width, height);\n    }\n    recycle(): void {\n\n    }\n\n    /**\n     * @inheritDoc\n     * @internal\n     */\n    _disposeResource(): void {\n        this._nativeObj._disposeResource();\n    }\n\n}\n\n\n\n","import { Texture2D } from \"./Texture2D\"\nimport { BaseTexture } from \"./BaseTexture\"\nimport { BaseShader } from \"../webgl/shader/BaseShader\"\nimport { RenderState2D } from \"../webgl/utils/RenderState2D\"\nimport { RenderTargetFormat } from \"../RenderEngine/RenderEnum/RenderTargetFormat\";\nimport { InternalRenderTarget } from \"../RenderEngine/RenderInterface/InternalRenderTarget\";\nimport { IRenderTarget } from \"../RenderEngine/RenderInterface/IRenderTarget\";\nimport { RenderClearFlag } from \"../RenderEngine/RenderEnum/RenderClearFlag\";\nimport { NativeRenderTexture2D } from \"./NativeRenderTexture2D\";\nimport { Color } from \"../maths/Color\";\nimport { LayaGL } from \"../layagl/LayaGL\";\n/**\n * <code>RenderTexture</code> 类用于创建渲染目标。\n */\nexport class RenderTexture2D extends BaseTexture implements IRenderTarget {\n    /** @private */\n    private static _currentActive: RenderTexture2D;\n    static _clearColor: Color = new Color(0, 0, 0, 0);\n    static _clearLinearColor: Color = new Color();\n    private _lastRT: RenderTexture2D;\n    private _lastWidth: number;\n    private _lastHeight: number;\n\n    //为push,pop 用的。以后和上面只保留一份。\n    //由于可能递归，所以不能简单的用save，restore\n    private static rtStack: any[] = [];//rt:RenderTexture，w:int，h:int\n    /**\n     * 默认uv\n     */\n    static defuv: any[] = [0, 0, 1, 0, 1, 1, 0, 1];\n    /**\n     * 默认翻转uv\n     */\n    static flipyuv: any[] = [0, 1, 1, 1, 1, 0, 0, 0];\n    /**\n     * 获取当前激活的Rendertexture\n     */\n    static get currentActive(): RenderTexture2D {\n        return RenderTexture2D._currentActive;\n    }\n\n    /** @private */\n    private _depthStencilFormat: number;\n    /** @private */\n    private _colorFormat: RenderTargetFormat;\n\n    /**@internal */\n    _mgrKey: number = 0;\t//给WebGLRTMgr用的\n    /**@internal */\n    _invertY: boolean = false;\n    /**\n     * 获取深度格式。\n     *@return 深度格式。\n     */\n    get depthStencilFormat(): number {\n        return this._depthStencilFormat;\n    }\n\n    /**\n     * @inheritDoc\n     * @override\n     */\n    get defaultTexture(): BaseTexture {\n        return Texture2D.grayTexture;\n    }\n\n    /**\n     * RenderTexture2D是否准备好\n     * @returns \n     */\n    getIsReady(): boolean {\n        return true;\n    }\n\n    /**\n     * 获取宽度。\n     */\n    get sourceWidth(): number {\n        return this._width;\n    }\n\n    /***\n     * 获取高度。\n     */\n    get sourceHeight(): number {\n        return this._height;\n    }\n\n    /**\n     * 获取offsetX。\n     */\n    get offsetX(): number {\n        return 0;\n    }\n\n    /***\n     * 获取offsetY\n     */\n    get offsetY(): number {\n        return 0;\n    }\n    /**深度模板纹理 */\n    depthStencilTexture: BaseTexture;\n    \n    _renderTarget: InternalRenderTarget;\n    /**是否是CameraTarget */\n    _isCameraTarget: boolean;\n\n\n    /**\n     * @param width  宽度。\n     * @param height 高度。\n     * @param format 纹理格式。\n     * @param depthStencilFormat 深度格式。\n     * 创建一个 <code>RenderTexture</code> 实例。\n     */\n    constructor(width: number, height: number, format: RenderTargetFormat = RenderTargetFormat.R8G8B8, depthStencilFormat: RenderTargetFormat = RenderTargetFormat.None) {//TODO:待老郭清理\n\n        super(width, height, format);\n        this._colorFormat = format;\n        this._depthStencilFormat = depthStencilFormat;\n        if (width != 0 && height != 0) {\n            this._create();\n        }\n        this.lock = true;\n    }\n\n    /**是否是RTCube */\n    get isCube(): boolean {\n        return this._renderTarget._isCube;\n    }\n\n    /**采样 */\n    get samples(): number {\n        return this._renderTarget._samples;\n    }\n\n    /**\n     * 是否生成Mipmap\n     */\n    get generateMipmap(): boolean {\n        return this._renderTarget._generateMipmap;\n    }\n\n    /**\n     * @internal\n     */\n    _start(): void {\n        throw new Error(\"Method not implemented.\");\n    }\n\n    /**\n     * @internal\n     */\n    _end(): void {\n        throw new Error(\"Method not implemented.\");\n    }\n\n    /**\n     * @internal\n     */\n    _create() {\n        // todo  mipmap\n        this._renderTarget = LayaGL.textureContext.createRenderTargetInternal(this.width, this.height, this._colorFormat, this.depthStencilFormat, false, false, 1);\n        this._texture = this._renderTarget._textures[0];\n        this._texture.gammaCorrection = 2.2;\n    }\n\n\n    /**\n     * 保存当前的RT信息。\n     */\n    static pushRT(): void {\n        RenderTexture2D.rtStack.push({ rt: RenderTexture2D._currentActive, w: RenderState2D.width, h: RenderState2D.height });\n    }\n    /**\n     * 恢复上次保存的RT信息\n     */\n    static popRT(): void {\n        var top: any = RenderTexture2D.rtStack.pop();\n        if (top) {\n            if (RenderTexture2D._currentActive != top.rt) {\n                if (top.rt) {\n                    LayaGL.textureContext.bindRenderTarget(top.rt._renderTarget);\n                    RenderState2D.InvertY = top.rt._invertY;\n                } else {\n                    LayaGL.textureContext.bindoutScreenTarget();\n                    RenderState2D.InvertY = false;\n                }\n                RenderTexture2D._currentActive = top.rt;\n            }\n            LayaGL.renderEngine.viewport(0, 0, top.w, top.h);\n            LayaGL.renderEngine.scissor(0, 0, top.w, top.h);\n            RenderState2D.width = top.w;\n            RenderState2D.height = top.h;\n        }\n    }\n    /**\n     * 开始绑定。\n     */\n    start(): void {\n        //(memorySize == 0) && recreateResource();\n        LayaGL.textureContext.bindRenderTarget(this._renderTarget);\n        this._lastRT = RenderTexture2D._currentActive;\n        RenderTexture2D._currentActive = this;\n        RenderState2D.InvertY = this._invertY;\n        //var gl:LayaGL = LayaGL.instance;//TODO:这段代码影响2D、3D混合\n        ////(memorySize == 0) && recreateResource();\n        //LayaGL.instance.bindFramebuffer(WebGLContext.FRAMEBUFFER, _frameBuffer);\n        //_lastRT = _currentActive;\n        //_currentActive = this;\n        ////_readyed = false;  \n        //_readyed = true;\t//这个没什么用。还会影响流程，比如我有时候并不调用end。所以直接改成true\n        //\n        ////if (_type == TYPE2D) {\n        LayaGL.renderEngine.viewport(0, 0, this._width, this._height);//外部设置\n        LayaGL.renderEngine.scissor(0, 0, this._width, this._height);//外部设置\n        this._lastWidth = RenderState2D.width;\n        this._lastHeight = RenderState2D.height;\n        RenderState2D.width = this._width;\n        RenderState2D.height = this._height;\n        BaseShader.activeShader = null;\n        ////}\n    }\n\n    /**\n     * 结束绑定。\n     */\n    end(): void {\n        LayaGL.textureContext.unbindRenderTarget(this._renderTarget);\n        RenderTexture2D._currentActive = null;\n        RenderState2D.InvertY = false;\n    }\n\n    /**\n     * 恢复上一次的RenderTarge.由于使用自己保存的，所以如果被外面打断了的话，会出错。\n     */\n    restore(): void {\n        if (this._lastRT != RenderTexture2D._currentActive) {\n\n            if (this._lastRT) {\n                LayaGL.textureContext.bindRenderTarget(this._lastRT._renderTarget);\n                RenderState2D.InvertY = this._lastRT._invertY;\n            }\n            else {\n                LayaGL.textureContext.unbindRenderTarget(this._renderTarget);\n                RenderState2D.InvertY = false;\n            }\n\n            RenderTexture2D._currentActive = this._lastRT;\n        }\n        // this._readyed = true;\n        //if (_type == TYPE2D)//待调整\n        //{\n        LayaGL.renderEngine.viewport(0, 0, this._lastWidth, this._lastHeight);\n        LayaGL.renderEngine.scissor(0, 0, this._lastWidth, this._lastHeight);\n        RenderState2D.width = this._lastWidth;\n        RenderState2D.height = this._lastHeight;\n        BaseShader.activeShader = null;\n        //} else \n        //\tgl.viewport(0, 0, Laya.stage.width, Laya.stage.height);\n    }\n\n    /**\n     * 清理RT\n     * @param r \n     * @param g \n     * @param b \n     * @param a \n     */\n    clear(r: number = 0.0, g: number = 0.0, b: number = 0.0, a: number = 1.0): void {\n\n        RenderTexture2D._clearColor.r = r;\n        RenderTexture2D._clearColor.g = g;\n        RenderTexture2D._clearColor.b = b;\n        RenderTexture2D._clearColor.a = a;\n        //RenderTexture2D._clearColor.toLinear(RenderTexture2D._clearLinearColor);\n        //@ts-ignore\n        LayaGL.renderEngine.clearRenderTexture(RenderClearFlag.Color | RenderClearFlag.Depth, RenderTexture2D._clearColor, 1);\n    }\n\n    /**\n     * 获得像素数据。\n     * @param x X像素坐标。\n     * @param y Y像素坐标。\n     * @param width 宽度。\n     * @param height 高度。\n     * @return 像素数据。\n     */\n    getData(x: number, y: number, width: number, height: number): ArrayBufferView {\n        return LayaGL.textureContext.getRenderTextureData(this._renderTarget, x, y, width, height);\n    }\n\n    /**\n     * @internal\n     */\n    recycle(): void {\n\n    }\n\n    /**\n     * @inheritDoc\n     * @internal\n     */\n    _disposeResource(): void {\n        //width 和height为0的时候不会创建资源\n        this._renderTarget && this._renderTarget.dispose();\n    }\n\n}\n\n// native\nif ((window as any).conch && !(window as any).conchConfig.conchWebGL) {\n    //@ts-ignore\n    RenderTexture2D = NativeRenderTexture2D;\n}\n\n\n","import { RenderTargetFormat } from \"../RenderEngine/RenderEnum/RenderTargetFormat\";\nimport { RenderTexture2D } from \"./RenderTexture2D\";\n\n/**\n * WebGLRTMgr 管理WebGLRenderTarget的创建和回收\n * TODO 需求不大，管理成本高。先去掉。\n */\n\nexport class WebGLRTMgr {\n\n\tprivate static dict: any = {};\t\t//key=h*10000+w\n\t/**\n\t * 获得一个renderTarget\n\t * 暂时先按照严格大小判断。\n\t * \n\t * @param\tw\n\t * @param\th\n\t * @return\n\t */\n\tstatic getRT(w: number, h: number): RenderTexture2D {\n\t\tw = w | 0;\n\t\th = h | 0;\n\t\tif (w >= 10000) {\n\t\t\tconsole.error('getRT error! w too big');\n\t\t}\n\t\tvar ret: RenderTexture2D;\n\t\t/*\n\t\tvar key: number = h * 10000 + w;\n\t\tvar sw: any[] = WebGLRTMgr.dict[key];\n\t\tif (sw) {\n\t\t\tif (sw.length > 0) {\n\t\t\t\tret = sw.pop();\n\t\t\t\tret._mgrKey = key;\t//只有不再mgr中的才有key\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t}\n\t\t*/\n\t\tret = new RenderTexture2D(w, h, RenderTargetFormat.R8G8B8A8, RenderTargetFormat.None);\n\t\t//ret._mgrKey = key;\n\t\treturn ret;\n\t}\n\n\n\t/**\n\t * 回收一个renderTarget\n\t * @param\trt\n\t */\n\tstatic releaseRT(rt: RenderTexture2D): void {\n\t\trt.destroy();\n\t\t//rt._disposeResource();// 直接删除贴图。否则还要管理占用过多的时候的清理。  修改：去掉了，直接destroy，否则统计会以为没有释放掉。\n\t\treturn;\n\t\t/*\n\t\t//如果_mgrKey<=0表示已经加进来了。\n\t\tif (rt._mgrKey <= 0)\n\t\t\treturn;\n\t\tvar sw: any[] = WebGLRTMgr.dict[rt._mgrKey];\n\t\t!sw && (sw = [], WebGLRTMgr.dict[rt._mgrKey] = sw);\n\t\trt._mgrKey = 0;\n\t\tsw.push(rt);\n\t\t*/\n\t}\n}\n\n","import { BlendEquationSeparate } from \"../RenderEngine/RenderEnum/BlendEquationSeparate\";\nimport { BlendFactor } from \"../RenderEngine/RenderEnum/BlendFactor\";\nimport { CompareFunction } from \"../RenderEngine/RenderEnum/CompareFunction\";\nimport { StencilOperation } from \"../RenderEngine/RenderEnum/StencilOperation\";\nimport { RenderStateCommand } from \"../RenderEngine/RenderStateCommand\";\nimport { LayaGL } from \"../layagl/LayaGL\";\nimport { WebGLEngine } from \"./RenderEngine/WebGLEngine/WebGLEngine\";\n/**\n * @private\n */\nexport class RenderStateContext {\n    /**@internal */\n    static mainContext: any;\n    /**@internal */\n    static DepthTestCMD: RenderStateCommand;\n    /**@internal */\n    static DepthMaskCMD: RenderStateCommand;\n    /**@internal */\n    static DepthFuncCMD: RenderStateCommand;\n    /**@internal */\n    static StencilTestCMD: RenderStateCommand;\n    /**@internal */\n    static StencilMaskCMD: RenderStateCommand;\n    /**@internal */\n    static StencilFuncCMD: RenderStateCommand;\n    /**@internal */\n    static stencilOpCMD: RenderStateCommand;\n    /**@internal */\n    static BlendCMD: RenderStateCommand;\n    /**@internal */\n    static BlendEquationCMD: RenderStateCommand;\n    /**@internal */\n    static BlendEquationSeparateCMD: RenderStateCommand;\n    /**@internal */\n    static BlendFuncCMD: RenderStateCommand;\n    /**@internal */\n    static BlendFuncSeperateCMD: RenderStateCommand;\n    /**@internal */\n    static CullFaceCMD: RenderStateCommand;\n    /**@internal */\n    static FrontFaceCMD: RenderStateCommand;\n    /**@internal */\n    static stencilFuncArray = new Array<number>(2);\n    /**@internal */\n    static blendEquationSeparateArray = new Array<number>(2);\n    /**@internal */\n    static blenfunArray = new Array(2);\n    /**@internal */\n    static blendFuncSeperateArray = new Array(4);\n    /**@internal */\n    static stencilOpArray = new Array<number>(3);\n    \n    /**\n     * @internal\n     */\n    static __init__() {\n        RenderStateContext.DepthTestCMD = LayaGL.renderEngine.createRenderStateComand();\n        RenderStateContext.DepthMaskCMD = LayaGL.renderEngine.createRenderStateComand();\n        RenderStateContext.DepthFuncCMD = LayaGL.renderEngine.createRenderStateComand();\n        RenderStateContext.StencilTestCMD = LayaGL.renderEngine.createRenderStateComand();\n        RenderStateContext.StencilMaskCMD = LayaGL.renderEngine.createRenderStateComand();\n        RenderStateContext.StencilFuncCMD = LayaGL.renderEngine.createRenderStateComand();\n        RenderStateContext.stencilOpCMD = LayaGL.renderEngine.createRenderStateComand();\n        RenderStateContext.BlendCMD = LayaGL.renderEngine.createRenderStateComand();\n        RenderStateContext.BlendEquationCMD = LayaGL.renderEngine.createRenderStateComand();\n        RenderStateContext.BlendEquationSeparateCMD = LayaGL.renderEngine.createRenderStateComand();\n        RenderStateContext.BlendFuncCMD = LayaGL.renderEngine.createRenderStateComand();\n        RenderStateContext.BlendFuncSeperateCMD = LayaGL.renderEngine.createRenderStateComand();\n        RenderStateContext.CullFaceCMD = LayaGL.renderEngine.createRenderStateComand();\n        RenderStateContext.FrontFaceCMD = LayaGL.renderEngine.createRenderStateComand();\n    }\n    /**\n     * @internal\n     */\n    static setDepthTest(value: boolean): void {\n        (LayaGL.renderEngine as WebGLEngine)._GLRenderState.setDepthTest(value);\n    }\n\n    /**\n     * @internal\n     */\n    static setDepthMask(value: boolean): void {\n        (LayaGL.renderEngine as WebGLEngine)._GLRenderState.setDepthMask(value);\n    }\n\n    /**\n     * @internal\n     */\n    static setDepthFunc(value: CompareFunction): void {\n        (LayaGL.renderEngine as WebGLEngine)._GLRenderState.setDepthFunc(value);\n    }\n\n    /**\n     * @internal\n     */\n    static setStencilTest(value: boolean): void {\n        (LayaGL.renderEngine as WebGLEngine)._GLRenderState.setStencilTest(value);\n    }\n\n    /**\n     * 模板写入开关\n     * @param gl \n     * @param value \n     */\n    static setStencilMask(value: boolean): void {\n        (LayaGL.renderEngine as WebGLEngine)._GLRenderState.setStencilMask(value);\n    }\n\n\n    /**\n     * @internal\n     */\n    static setStencilFunc(fun: CompareFunction, ref: number): void {\n        (LayaGL.renderEngine as WebGLEngine)._GLRenderState.setStencilFunc(fun, ref);\n    }\n\n    /**\n    * @internal\n    */\n    static setstencilOp(fail: StencilOperation, zfail: StencilOperation, zpass: StencilOperation) {\n        (LayaGL.renderEngine as WebGLEngine)._GLRenderState.setstencilOp(fail, zfail, zpass);\n    }\n\n\n\n    /**\n     * @internal\n     */\n    static setBlend(value: boolean): void {\n        (LayaGL.renderEngine as WebGLEngine)._GLRenderState.setBlend(value);\n    }\n\n\n    /**\n     * @internal\n     */\n    static setBlendEquation(blendEquation: BlendEquationSeparate): void {\n        (LayaGL.renderEngine as WebGLEngine)._GLRenderState.setBlendEquation(blendEquation);\n    }\n\n\n    /**\n     * @internal\n     */\n    static setBlendEquationSeparate(blendEquationRGB: BlendEquationSeparate, blendEquationAlpha: BlendEquationSeparate): void {\n        (LayaGL.renderEngine as WebGLEngine)._GLRenderState.setBlendEquationSeparate(blendEquationRGB, blendEquationAlpha);\n    }\n\n\n    /**\n     * @internal\n     */\n    static setBlendFunc(sFactor: BlendFactor, dFactor: BlendFactor): void {\n        (LayaGL.renderEngine as WebGLEngine)._GLRenderState.setBlendFunc(sFactor, dFactor);\n    }\n\n    /**\n     * @internal\n     */\n    static setBlendFuncSeperate(srcRGB: BlendFactor, dstRGB: BlendFactor, srcAlpha: BlendFactor, dstAlpha: BlendFactor): void {\n        (LayaGL.renderEngine as WebGLEngine)._GLRenderState.setBlendFuncSeperate(srcRGB, dstRGB, srcAlpha, dstAlpha);\n    }\n\n    /**\n     * @internal\n     * @param value \n     */\n    static setCullFace(value: boolean): void {\n        (LayaGL.renderEngine as WebGLEngine)._GLRenderState.setCullFace(value);\n    }\n\n    /**\n     * @internal\n     * @param value \n     */\n    static setFrontFace(value: number): void {\n        (LayaGL.renderEngine as WebGLEngine)._GLRenderState.setFrontFace(value);\n    }\n}\n\n\n","import { BlendFactor } from \"../../RenderEngine/RenderEnum/BlendFactor\";\nimport { RenderStateContext } from \"../../RenderEngine/RenderStateContext\";\n\n//export type BlendFunc = (gl:WebGLRenderingContext)=>void\nexport class BlendMode {\n    static activeBlendFunction: Function = null;\n    /** @internal 这个不直接暴露给开发者*/\n    static NAMES = [\n        \"normal\",\n        \"add\",\n        \"multiply\",\n        \"screen\",\n        \"overlay\",\n        \"light\",\n        \"mask\",\n        \"destination-out\",\n        \"add_old\"];\n\n    /** @internal */\n    static TOINT: { [key: string]: number } = {\n        \"normal\": 0,\n        \"add\": 1,\n        \"multiply\": 2,\n        \"screen\": 3,\n        \"overlay\": 4,\n        \"light\": 5,\n        \"mask\": 6,\n        \"destination-out\": 7,\n        \"lighter\": 1,\n        \"lighter_old\": 8,\n        \"add_old\": 8\n    };\n\n    static NORMAL = \"normal\";\t\t\t\t\t//0\n    static MASK = \"mask\";\t\t\t\t\t//6\n    static LIGHTER = \"lighter\";\t\t\t\t\t//1  \n\n    static fns: any[];\n    static targetFns: any[];\n    /**@internal */\n    static _init_(): void {\n        BlendMode.fns = [\n            BlendMode.BlendNormal,      //0\n            BlendMode.BlendAdd,         //1\n            BlendMode.BlendMultiply,    //2\n            BlendMode.BlendScreen,      //3\n            BlendMode.BlendOverlay,     //4\n            BlendMode.BlendLight,       //5\n            BlendMode.BlendMask,        //6\n            BlendMode.BlendDestinationOut,   //7\n            BlendMode.BlendAddOld,         //8\n            BlendMode.BlendSourceAlpha,            //9\n        ];\n\n        BlendMode.targetFns = [\n            BlendMode.BlendNormalTarget,    //0\n            BlendMode.BlendAddTarget,       //1\n            BlendMode.BlendMultiplyTarget,  //2\n            BlendMode.BlendScreenTarget,    //3\n            BlendMode.BlendOverlayTarget,   //4\n            BlendMode.BlendLightTarget,     //5\n            BlendMode.BlendMask,            //6\n            BlendMode.BlendDestinationOut,  //7\n            BlendMode.BlendAddTargetOld,    //8\n            BlendMode.BlendSourceAlpha             //9\n        ];\n    }\n\n    static BlendNormal(): void {\n        //为了避免黑边，和canvas作为贴图的黑边\n        RenderStateContext.setBlendFunc(BlendFactor.One, BlendFactor.OneMinusSourceAlpha);\n\n    }\n\n    /**@internal 这个add感觉不合理，所以改成old了 */\n    static BlendAddOld(): void {\n        RenderStateContext.setBlendFunc(BlendFactor.One, BlendFactor.DestinationAlpha);\n    }\n\n    static BlendAdd(): void {\n        RenderStateContext.setBlendFunc(BlendFactor.One, BlendFactor.One);\n    }\n\n    static BlendMultiply(): void {\n        RenderStateContext.setBlendFunc(BlendFactor.DestinationColor, BlendFactor.OneMinusSourceAlpha);\n    }\n\n    static BlendScreen(): void {\n        RenderStateContext.setBlendFunc(BlendFactor.One, BlendFactor.One);\n    }\n\n    static BlendOverlay(): void {\n        RenderStateContext.setBlendFunc(BlendFactor.One, BlendFactor.OneMinusSourceAlpha);\n    }\n\n    static BlendLight(): void {\n        RenderStateContext.setBlendFunc(BlendFactor.One, BlendFactor.One);\n    }\n\n    static BlendNormalTarget(): void {\n        RenderStateContext.setBlendFunc(BlendFactor.One, BlendFactor.OneMinusSourceAlpha);\n    }\n\n    /**@internal add不应该是1+dst_α 所以改成old */\n    static BlendAddTargetOld(): void {\n        RenderStateContext.setBlendFunc(BlendFactor.One, BlendFactor.DestinationAlpha);\n    }\n    static BlendAddTarget(): void {\n        RenderStateContext.setBlendFunc(BlendFactor.One, BlendFactor.One);\n    }\n\n    static BlendMultiplyTarget(): void {\n        RenderStateContext.setBlendFunc(BlendFactor.DestinationColor, BlendFactor.OneMinusSourceAlpha);\n    }\n\n    static BlendScreenTarget(): void {\n        RenderStateContext.setBlendFunc(BlendFactor.One, BlendFactor.One);\n    }\n\n    static BlendOverlayTarget(): void {\n        RenderStateContext.setBlendFunc(BlendFactor.One, BlendFactor.OneMinusSourceColor);\n    }\n\n    static BlendLightTarget(): void {\n        RenderStateContext.setBlendFunc(BlendFactor.One, BlendFactor.One);\n    }\n\n    static BlendMask(): void {\n        RenderStateContext.setBlendFunc(BlendFactor.Zero, BlendFactor.SourceAlpha);\n    }\n\n    static BlendDestinationOut(): void {\n        RenderStateContext.setBlendFunc(BlendFactor.Zero, BlendFactor.Zero);\n    }\n    static BlendSourceAlpha(): void {\n        RenderStateContext.setBlendFunc(BlendFactor.SourceAlpha, BlendFactor.OneMinusSourceAlpha);\n    }\n}\n\n","import { Texture2D } from \"./Texture2D\";\nimport { Event } from \"../events/Event\"\nimport { Rectangle } from \"../maths/Rectangle\"\nimport { Handler } from \"../utils/Handler\"\nimport { ILaya } from \"../../ILaya\";\nimport { BaseTexture } from \"./BaseTexture\";\nimport { Resource } from \"./Resource\";\n\nconst _rect1 = new Rectangle();\nconst _rect2 = new Rectangle();\n\n/**\n * <code>Texture</code> 是一个纹理处理类。\n */\nexport class Texture extends Resource {\n    /**@private 默认 UV 信息。*/\n    static readonly DEF_UV = new Float32Array([0, 0, 1.0, 0, 1.0, 1.0, 0, 1.0]);\n    /**@private */\n    static readonly NO_UV = new Float32Array([0, 0, 0, 0, 0, 0, 0, 0]);\n    /**@private 反转 UV 信息。*/\n    static readonly INV_UV = new Float32Array([0, 1, 1.0, 1, 1.0, 0.0, 0, 0.0]);\n\n    /**@private uv的范围*/\n    uvrect: number[] = [0, 0, 1, 1]; //startu,startv, urange,vrange\n    /**@private */\n    private _bitmap: BaseTexture;\n    /**@internal */\n    public _uv: ArrayLike<number>;\n    /** @private */\n    private _w: number = 0;\n    /** @private */\n    private _h: number = 0;\n\n    /**沿 X 轴偏移量。*/\n    offsetX: number = 0;\n    /**沿 Y 轴偏移量。*/\n    offsetY: number = 0;\n    /**原始宽度（包括被裁剪的透明区域）。*/\n    sourceWidth: number = 0;\n    /**原始高度（包括被裁剪的透明区域）。*/\n    sourceHeight: number = 0;\n    /**图片地址*/\n    url: string;\n    /** UUID */\n    uuid: string;\n    /** @private */\n    scaleRate: number = 1;\n\n    /**九宫格*/\n    _sizeGrid?: Array<number>;\n    /**状态数量*/\n    _stateNum?: number;\n\n    /**@internal */\n    _clipCache: Map<string, Texture>;\n\n    /**\n     *  根据指定资源和坐标、宽高、偏移量等创建 <code>Texture</code> 对象。\n     * @param\tsource 绘图资源 Texture2D 或者 Texture对象。\n     * @param\tx 起始绝对坐标 x 。\n     * @param\ty 起始绝对坐标 y 。\n     * @param\twidth 宽绝对值。\n     * @param\theight 高绝对值。\n     * @param\toffsetX X 轴偏移量（可选）。\t就是[x,y]相对于原始小图片的位置。一般都是正的，表示裁掉了空白边的大小，如果是负的一般表示加了保护边\n     * @param\toffsetY Y 轴偏移量（可选）。\n     * @param\tsourceWidth 原始宽度，包括被裁剪的透明区域（可选）。\n     * @param\tsourceHeight 原始高度，包括被裁剪的透明区域（可选）。\n     * @return  <code>Texture</code> 对象。\n     */\n    static create(source: Texture | BaseTexture, x: number, y: number, width: number, height: number,\n        offsetX: number = 0, offsetY: number = 0,\n        sourceWidth: number = 0, sourceHeight: number = 0): Texture {\n        return Texture._create(source, x, y, width, height, offsetX, offsetY, sourceWidth, sourceHeight);\n    }\n\n    /**\n     * @internal\n     * 根据指定资源和坐标、宽高、偏移量等创建 <code>Texture</code> 对象。\n     * @param\tsource 绘图资源 Texture2D 或者 Texture 对象。\n     * @param\tx 起始绝对坐标 x 。\n     * @param\ty 起始绝对坐标 y 。\n     * @param\twidth 宽绝对值。\n     * @param\theight 高绝对值。\n     * @param\toffsetX X 轴偏移量（可选）。\n     * @param\toffsetY Y 轴偏移量（可选）。\n     * @param\tsourceWidth 原始宽度，包括被裁剪的透明区域（可选）。\n     * @param\tsourceHeight 原始高度，包括被裁剪的透明区域（可选）。\n     * @param\toutTexture 返回的Texture对象。\n     * @return  <code>Texture</code> 对象。\n     */\n    static _create(source: Texture | BaseTexture, x: number, y: number, width: number, height: number,\n        offsetX: number = 0, offsetY: number = 0,\n        sourceWidth: number = 0, sourceHeight: number = 0, outTexture: Texture = null): Texture {\n        var btex: boolean = source instanceof Texture;\n        var uv = btex ? ((<Texture>source)).uv : Texture.DEF_UV;\n        var bitmap = btex ? ((<Texture>source)).bitmap : <Texture2D>source;\n\n        if (bitmap.width && (x + width) > bitmap.width)\n            width = bitmap.width - x;\n        if (bitmap.height && (y + height) > bitmap.height)\n            height = bitmap.height - y;\n        var tex: Texture;\n        if (outTexture) {\n            tex = outTexture;\n            tex.setTo(bitmap, null, sourceWidth || width, sourceHeight || height);\n        } else {\n            tex = new Texture(bitmap, null, sourceWidth || width, sourceHeight || height)\n        }\n        tex.width = width;\n        tex.height = height;\n        tex.offsetX = offsetX;\n        tex.offsetY = offsetY;\n\n        var dwidth: number = 1 / bitmap.width;\n        var dheight: number = 1 / bitmap.height;\n        x *= dwidth;\n        y *= dheight;\n        width *= dwidth;\n        height *= dheight;\n\n        var u1: number = tex.uv[0], v1: number = tex.uv[1], u2: number = tex.uv[4], v2: number = tex.uv[5];\n        var inAltasUVWidth: number = (u2 - u1), inAltasUVHeight: number = (v2 - v1);\n        var oriUV: any[] = moveUV(uv[0], uv[1], [x, y, x + width, y, x + width, y + height, x, y + height]);\n        tex.uv = new Float32Array([u1 + oriUV[0] * inAltasUVWidth, v1 + oriUV[1] * inAltasUVHeight,\n        u2 - (1 - oriUV[2]) * inAltasUVWidth, v1 + oriUV[3] * inAltasUVHeight,\n        u2 - (1 - oriUV[4]) * inAltasUVWidth, v2 - (1 - oriUV[5]) * inAltasUVHeight,\n        u1 + oriUV[6] * inAltasUVWidth, v2 - (1 - oriUV[7]) * inAltasUVHeight]);\n\n        var bitmapScale: number = (<Texture>source).scaleRate;\n        if (bitmapScale && bitmapScale != 1) {\n            tex.sourceWidth /= bitmapScale;\n            tex.sourceHeight /= bitmapScale;\n            tex.width /= bitmapScale;\n            tex.height /= bitmapScale;\n            tex.scaleRate = bitmapScale;\n            tex.offsetX /= bitmapScale;\n            tex.offsetY /= bitmapScale;\n        } else {\n            tex.scaleRate = 1;\n        }\n        return tex;\n    }\n\n    /**\n     * 截取Texture的一部分区域，生成新的Texture，如果两个区域没有相交，则返回null。\n     * @param\ttexture\t目标Texture。\n     * @param\tx\t\t相对于目标Texture的x位置。\n     * @param\ty\t\t相对于目标Texture的y位置。\n     * @param\twidth\t截取的宽度。\n     * @param\theight\t截取的高度。\n     * @return 返回一个新的Texture。\n     */\n    static createFromTexture(texture: Texture, x: number, y: number, width: number, height: number): Texture {\n        var texScaleRate: number = texture.scaleRate;\n        if (texScaleRate != 1) {\n            x *= texScaleRate;\n            y *= texScaleRate;\n            width *= texScaleRate;\n            height *= texScaleRate;\n        }\n        var rect: Rectangle = Rectangle.TEMP.setTo(x - texture.offsetX, y - texture.offsetY, width, height);\n        var result = rect.intersection(_rect1.setTo(0, 0, texture.width, texture.height), _rect2);\n        if (result)\n            return Texture.create(texture, result.x, result.y, result.width, result.height, result.x - rect.x, result.y - rect.y, width, height);\n        else\n            return null;\n    }\n\n    /**\n     * uv\n     */\n    get uv(): ArrayLike<number> {\n        return this._uv;\n    }\n\n    set uv(value: ArrayLike<number>) {\n        this.uvrect[0] = Math.min(value[0], value[2], value[4], value[6]);\n        this.uvrect[1] = Math.min(value[1], value[3], value[5], value[7]);\n        this.uvrect[2] = Math.max(value[0], value[2], value[4], value[6]) - this.uvrect[0];\n        this.uvrect[3] = Math.max(value[1], value[3], value[5], value[7]) - this.uvrect[1];\n        this._uv = value;\n    }\n\n    /** 实际宽度。*/\n    get width(): number {\n        if (this._w)\n            return this._w;\n        if (!this.bitmap) return 0;\n        return (this.uv && this.uv !== Texture.DEF_UV) ? (this.uv[2] - this.uv[0]) * this.bitmap.width : this.bitmap.width;\n    }\n\n    set width(value: number) {\n        this._w = value;\n        this.sourceWidth || (this.sourceWidth = value);\n    }\n\n    /** 实际高度。*/\n    get height(): number {\n        if (this._h)\n            return this._h;\n        if (!this.bitmap) return 0;\n        return (this.uv && this.uv !== Texture.DEF_UV) ? (this.uv[5] - this.uv[1]) * this.bitmap.height : this.bitmap.height;\n    }\n\n    set height(value: number) {\n        this._h = value;\n        this.sourceHeight || (this.sourceHeight = value);\n    }\n\n    /**\n     * 获取位图。\n     * @return 位图。\n     */\n    get bitmap(): BaseTexture {\n        return this._bitmap;\n    }\n\n    /**\n     * 设置位图。\n     * @param 位图。\n     */\n    set bitmap(value: BaseTexture) {\n        if (this._bitmap == value)\n            return;\n        this._bitmap && this._bitmap._removeReference(this._referenceCount);\n        this._bitmap = value;\n        value && (value._addReference(this._referenceCount));\n    }\n\n    /**\n     * 创建一个 <code>Texture</code> 实例。\n     * @param bitmap 位图资源。\n     * @param uv UV 数据信息。\n     */\n    constructor(source: Texture | BaseTexture = null, uv: ArrayLike<number> = null,\n        sourceWidth: number = 0, sourceHeight: number = 0) {\n        super(false);\n        let bitmap = (source instanceof Texture) ? source.bitmap : source;\n        this.setTo(bitmap, uv, sourceWidth, sourceHeight);\n    }\n\n    /**\n     * @internal\n     */\n    _addReference(count: number = 1): void {\n        super._addReference(count);\n        this._bitmap && this._bitmap._addReference(count);\n    }\n\n    /**\n     * @internal\n     */\n    _removeReference(count: number = 1): void {\n        this._bitmap && this._bitmap._removeReference(count);\n        super._removeReference(count);\n    }\n\n    /**\n     * @internal\n     */\n    _getSource(cb: () => void = null): any {\n        if (this._destroyed || !this._bitmap)\n            return null;\n        this.recoverBitmap(cb);\n        return this._bitmap.destroyed ? null : this.bitmap._getSource();\n    }\n\n    /**\n     * 设置此对象的位图资源、UV数据信息。\n     * @param\tbitmap 位图资源\n     * @param\tuv UV数据信息\n     */\n    setTo(bitmap: BaseTexture = null, uv: ArrayLike<number> = null,\n        sourceWidth: number = 0, sourceHeight: number = 0): void {\n        this.bitmap = bitmap;\n        this.sourceWidth = sourceWidth;\n        this.sourceHeight = sourceHeight;\n\n        if (bitmap) {\n            this._w = bitmap.width;\n            this._h = bitmap.height;\n            this.sourceWidth = this.sourceWidth || bitmap.width;\n            this.sourceHeight = this.sourceHeight || bitmap.height\n        }\n        this.uv = uv || Texture.DEF_UV;\n    }\n\n    /**\n     * 加载指定地址的图片。\n     * @param\turl 图片地址。\n     * @param\tcomplete 加载完成回调\n     */\n    load(url: string, complete?: Handler): Promise<void> {\n        if (this._destroyed)\n            return Promise.resolve();\n\n        return ILaya.loader.load(url).then((tex: Texture) => {\n            let bit = tex.bitmap;\n            this.bitmap = bit;\n            this.sourceWidth = this._w = bit.width;\n            this.sourceHeight = this._h = bit.height;\n            complete && complete.run();\n            this.event(Event.READY, this);\n        });\n    }\n\n    /**\n     * 获得像素数据\n     * @param x x\n     * @param y y\n     * @param width 宽\n     * @param height 高\n     * @returns \n     */\n    getTexturePixels(x: number, y: number, width: number, height: number): Uint8Array {\n        var st: number, dst: number, i: number;\n        var tex2d = this.bitmap;\n        // 适配图集\n        var texw = this._w;\n        var texh = this._h;\n        var sourceWidth = this.sourceWidth;\n        var sourceHeight = this.sourceHeight;\n        var tex2dw = tex2d.width;\n        var tex2dh = tex2d.height;\n        var offsetX = this.offsetX;\n        var offsetY = this.offsetY;\n        let draww = width;\n        let drawh = height;\n        if (x + width > texw + offsetX) draww -= (x + width) - texw - offsetX;\n        if (x + width > sourceWidth) width -= (x + width) - sourceWidth;\n        if (y + height > texh + offsetY) drawh -= (y + height) - texh - offsetY;\n        if (y + height > sourceHeight) height -= (y + height) - sourceHeight;\n        if (width <= 0 || height <= 0) return null;\n        let marginL = offsetX > x ? offsetX - x : 0; // 考虑图集的情况，只渲染图集中的图片，左侧可能需要补充空白\n        let marginT = offsetY > y ? offsetY - y : 0;\n        let rePosX = x > offsetX ? x - offsetX : 0; // 考虑图集的情况，只渲染图集中的图片，不渲染 offset，需要重新定位 x 坐标\n        let rePosY = y > offsetY ? y - offsetY : 0;\n        draww -= marginL; // 考虑图集的情况，只渲染图集中的图片，其大小要减去空白\n        drawh -= marginT;\n\n        var wstride = width * 4;\n        var pix: Uint8Array = null;\n        try {\n            pix = <Uint8Array>(tex2d as Texture2D).getPixels();\n        } catch (e) {\n        }\n        if (pix) {\n            if (x == 0 && y == 0 && width == tex2dw && height == tex2dh)\n                return pix;\n            //否则只取一部分\n            let uv = (this._uv as Array<number>).slice();\n            let atlasPosX = Math.round(uv[0] * tex2dw); // 计算图片在图集中的位置\n            let atlasPosY = Math.round(uv[1] * tex2dh);\n            var ret: Uint8Array = new Uint8Array(width * height * 4);\n            wstride = tex2dw * 4;\n            dst = (atlasPosY + rePosY) * wstride;\n            st = atlasPosX * 4 + rePosX * 4 + dst;\n            for (i = 0; i < drawh; i++) {\n                ret.set(pix.slice(st, st + draww * 4), width * 4 * (i + marginT) + marginL * 4);\n                st += wstride;\n            }\n            return ret;\n        }\n\n        // 如果无法直接获取，只能先渲染出来\n        var ctx = new ILaya.Context();\n        ctx.size(width, height);\n        ctx.asBitmap = true;\n        var uv: number[] = null;\n        if (x != 0 || y != 0 || width != tex2dw || height != tex2dh) {\n            uv = (this._uv as number[]).slice();\t// 复制一份uv\n            var stu = uv[0];\n            var stv = uv[1];\n            var uvw = uv[2] - stu;\n            var uvh = uv[7] - stv;\n            var uk = uvw / texw;\n            var vk = uvh / texh;\n            uv = [stu + rePosX * uk, stv + rePosY * vk,\n            stu + (rePosX + draww) * uk, stv + rePosY * vk,\n            stu + (rePosX + draww) * uk, stv + (rePosY + drawh) * vk,\n            stu + rePosX * uk, stv + (rePosY + drawh) * vk];\n        }\n        ctx._drawTextureM(this, marginL, marginT, draww, drawh, null, 1.0, uv, 0xffffffff);\n        //ctx.drawTexture(value, -x, -y, x + width, y + height);\n        ctx._targets.start();\n        ctx.flush();\n        ctx._targets.end();\n        ctx._targets.restore();\n        var dt: Uint8Array = ctx._targets.getData(0, 0, width, height) as Uint8Array;\n        ctx.destroy();\n        // 上下颠倒一下\n        ret = new Uint8Array(width * height * 4);\n        st = 0;\n        dst = (height - 1) * wstride;\n        for (i = height - 1; i >= 0; i--) {\n            ret.set(dt.slice(dst, dst + wstride), st);\n            st += wstride;\n            dst -= wstride;\n        }\n        return ret;\n    }\n\n    /**\n     * 获取Texture上的某个区域的像素点\n     * @param\tx\n     * @param\ty\n     * @param\twidth\n     * @param\theight\n     * @return  返回像素点集合\n     */\n    getPixels(x: number, y: number, width: number, height: number): Uint8Array {\n        return this.getTexturePixels(x, y, width, height);\n        // canvas 不支持\n    }\n\n    /**\n     * 通过url强制恢复bitmap。\n     */\n    recoverBitmap(callback?: () => void): void {\n        var url = this._bitmap.url;\n        if (!this._destroyed && (!this._bitmap || this._bitmap.destroyed) && url) {\n            ILaya.loader.load(url).then((tex: Texture) => {\n                this.bitmap = tex.bitmap;\n                callback && callback();\n            });\n        }\n    }\n\n    /**\n     * 强制释放Bitmap,无论是否被引用。\n     */\n    disposeBitmap(): void {\n        if (!this._destroyed && this._bitmap) {\n            this._bitmap.destroy();\n        }\n    }\n\n    get valid(): boolean {\n        return !this._destroyed && this._bitmap && !this._bitmap.destroyed;\n    }\n\n    /**\n     * obsolute\n     */\n    public get obsolute(): boolean {\n        return this._obsolute || !this._bitmap || this._bitmap.destroyed || this._bitmap.obsolute;\n    }\n\n    public set obsolute(value: boolean) {\n        this._obsolute = value;\n    }\n\n    /**\n     * @private\n     */\n    protected _disposeResource(): void {\n        let bit = this._bitmap;\n        this._bitmap = null;\n        if (bit)\n            bit._removeReference(this._referenceCount);\n    }\n\n    /**\n     * 获得clip贴图\n     * @param x x\n     * @param y y\n     * @param width 宽\n     * @param height 高\n     * @returns \n     */\n    public getCachedClip(x: number, y: number, width: number, height: number): Texture {\n        let key = `${x}_${y}_${width}_${height}`;\n        if (!this._clipCache)\n            this._clipCache = new Map();\n\n        let tex = this._clipCache.get(key);\n        if (tex)\n            return tex;\n        tex = Texture.createFromTexture(this, x, y, width, height);\n        if (tex)\n            tex._sizeGrid = this._sizeGrid;\n\n        if (this._clipCache.size > 100)\n            this._clipCache.clear();\n\n        this._clipCache.set(key, tex);\n\n        return tex;\n    }\n}\n\n/**\n * 平移 UV。\n * @param offsetX 沿 X 轴偏移量。\n * @param offsetY 沿 Y 轴偏移量。\n * @param uv 需要平移操作的的 UV。\n * @return 平移后的UV。\n */\nfunction moveUV(offsetX: number, offsetY: number, uv: any[]): any[] {\n    for (var i: number = 0; i < 8; i += 2) {\n        uv[i] += offsetX;\n        uv[i + 1] += offsetY;\n    }\n    return uv;\n}\n","export enum BlendEquationSeparate{\n    ADD,//source + destination (default value)\n    SUBTRACT,// source - destination\n    REVERSE_SUBTRACT,//destination - source\n    //TODO:\n    MIN,//Minimum of source and destination\n    MAX,//Maximum of source and destination\n}","export enum BlendType{\n    /**混合枚举_禁用。*/\n\tBLEND_DISABLE = 0,\n\t/**混合枚举_启用_RGB和Alpha统一混合。*/\n\tBLEND_ENABLE_ALL = 1,\n\t/**混合枚举_启用_RGB和Alpha单独混合。*/\n\tBLEND_ENABLE_SEPERATE = 2\n}","export enum CompareFunction {\n    /** never pass. */\n    Never,\n    /** pass if the incoming value is less than the depth/stencil buffer value. */\n    Less,\n    /** pass if the incoming value equals the depth/stencil buffer value. */\n    Equal,\n    /** pass if the incoming value is less than or equal to the depth/stencil buffer value. */\n    LessEqual,\n    /** pass if the incoming value is greater than the depth/stencil buffer value. */\n    Greater,\n    /** pass if the incoming value is not equal to the depth/stencil buffer value. */\n    NotEqual,\n    /** pass if the incoming value is greater than or equal to the depth/stencil buffer value. */\n    GreaterEqual,\n    /** always pass. */\n    Always,\n    /** off */\n    Off,\n}\n","export enum CullMode {\n    /** Disable culling. */\n    Off = 0,\n    /** cut the front-face of the polygons. */\n    Front = 1,\n    /** cut the back-face of the polygons. */\n    Back = 2\n  }\n  ","export enum StencilOperation {\n    /** Keeps the current value. */\n    Keep,\n    /** Sets the stencil buffer value to 0. */\n    Zero,\n    /** Sets the stencil buffer value to the reference value. */\n    Replace,\n    /** Increments the current stencil buffer value. Clamps to the maximum representable unsigned value. */\n    IncrementSaturate,\n    /** Decrements the current stencil buffer value. Clamps to 0. */\n    DecrementSaturate,\n    /** Inverts the current stencil buffer value bitwise. */\n    Invert,\n    /** Increments the current stencil buffer value. Wraps stencil buffer value to zero when incrementing the maximum representable unsigned value. */\n    IncrementWrap,\n    /** Decrements the current stencil buffer value. Wraps stencil buffer value to the maximum representable unsigned value when decrementing a stencil buffer value of 0. */\n    DecrementWrap\n  }\n  ","import { Utils } from \"../utils/Utils\";\n/**\n * 此类用来描述资源\n */\nexport class AssetDb {\n    /**\n     * 默认资源实例\n     */\n    static inst: AssetDb = new AssetDb();\n\n    /**\n     * uuid 数据\n     */\n    uuidMap: Record<string, string> = {};\n\n    /**\n     * shaderName 数据\n     */\n    shaderNameMap: Record<string, string> = {};\n\n    /**\n     * 元资源 数据\n     */\n    metaMap: Record<string, any> = {};\n\n    /**\n     * uuid获得url\n     * @param uuid uuid\n     * @returns \n     */\n    UUID_to_URL(uuid: string): string {\n        return this.uuidMap[uuid];\n    }\n\n    /**\n     * 异步uuid获得Url\n     * @param uuid \n     * @returns \n     */\n    UUID_to_URL_async(uuid: string): Promise<string> {\n        return Promise.resolve(null);\n    }\n\n    /**\n     * Url获得uuid值\n     * @param url \n     * @returns \n     */\n    URL_to_UUID_async(url: string): Promise<string> {\n        return Promise.resolve(null);\n    }\n\n    /**\n     * 获取真实的Url\n     * @param url \n     * @param onResolve \n     * @returns \n     */\n    resolveURL(url: string, onResolve?: (url: string) => void): Promise<string> {\n        if (url.startsWith(\"res://\")) {\n            let uuid = url.substring(6);\n            return AssetDb.inst.UUID_to_URL_async(uuid).then(url => {\n                if (onResolve)\n                    onResolve(url);\n                return url;\n            });\n        }\n        else {\n            if (onResolve)\n                onResolve(url);\n            return Promise.resolve(url);\n        }\n    }\n\n    /**\n     * 查找shadername的地址\n     * @param shaderName \n     * @returns \n     */\n    shaderName_to_URL(shaderName: string): string {\n        return this.shaderNameMap[shaderName];\n    }\n\n    shaderName_to_URL_async(shaderName: string): Promise<string> {\n        return Promise.resolve(null);\n    }\n\n    /**\n     * 获得元数据\n     * @param url \n     * @param uuid \n     * @returns \n     */\n    getMeta(url: string, uuid: string): Promise<any> {\n        return Promise.resolve(null);\n    }\n\n    /**\n     * 获得子资源路径\n     * @param url \n     * @param uuid \n     * @param subAssetName \n     * @param subAssetExt \n     * @returns \n     */\n    getSubAssetURL(url: string, uuid: string, subAssetName: string, subAssetExt: string): string {\n        if (subAssetName)\n            return `${Utils.replaceFileExtension(url, \"\")}@${subAssetName}.${subAssetExt}`;\n        else\n            return url;\n    }\n}","import { LayaEnv } from \"../../LayaEnv\";\nimport { AssetDb } from \"../resource/AssetDb\";\nimport { Utils } from \"../utils/Utils\";\n\n/**\n * <p><code>URL</code> 提供URL格式化，URL版本管理的类。</p>\n * <p>引擎加载资源的时候，会自动调用formatURL函数格式化URL路径</p>\n * <p>通过basePath属性可以设置网络基础路径</p>\n * <p>通过设置customFormat函数，可以自定义URL格式化的方式</p>\n */\nexport class URL {\n    /**URL地址版本映射表，比如{\"aaa/bb.png\":\"edcba\",\"aaa/bb.png\":\"1342a\"}，默认情况下，通过formatURL格式化后，会自动生成为\"aaa/bb-1342a.png\"的一个地址*/\n    static version: Record<string, string> = {};\n\n    /**基础路径。如果不设置，默认为当前网页的路径。最终地址将被格式化为 basePath+相对URL地址，*/\n    static basePath: string = \"\";\n    /**扩展的基础路径映射表，比如{\"aa/\":\"http://abc.com/\"},则把路径以aa/开头的资源映射到http://abc.com/下*/\n    static basePaths: Record<string, string> = {};\n\n    /**root路径。只针对'~'类型的url路径有效*/\n    static rootPath: string = \"\";\n\n    /**@private */\n    private _url: string;\n    /**@private */\n    private _path: string;\n\n    private static overrideFileExts: Record<string, string> = {};\n    private static hasExtOverrides: boolean;\n\n    static __init__() {\n        //xiaomi 没有location\n        //Vivo location.protocol是\"\"\n        //微信真机 location.protocol是undefined\n        URL.rootPath = URL.basePath = (location && location.protocol != undefined && location.protocol != \"\") ? URL.getPath(location.protocol + \"//\" + location.host + location.pathname) : \"\";\n    }\n\n    static initMiniGameExtensionOverrides() {\n        if (LayaEnv.isPreview)\n            return;\n\n        URL.overrideExtension([\"rendertexture\", \"videotexture\"], \"rt.json\");\n        URL.overrideExtension([\"controller\"], \"controller.json\");\n        URL.overrideExtension([\"mc\"], \"mc.bin\");\n        URL.overrideExtension([\"mcc\"], \"mcc.json\");\n        URL.overrideExtension([\"shader\"], \"shader.json\");\n        URL.overrideExtension([\"scene3d\", \"scene\", \"taa\", \"prefab\"], \"json\");\n        URL.overrideExtension([\"fui\"], \"fui.json\");\n        URL.overrideExtension([\"glsl\"], \"glsl.txt\");\n        URL.overrideExtension([\"skel\"], \"skel.bin\");\n    }\n\n    /**创建一个新的 <code>URL</code> 实例。*/\n    constructor(url: string) {\n        this._url = URL.formatURL(url);\n        this._path = URL.getPath(url);\n    }\n\n    /**格式化后的地址。*/\n    get url(): string {\n        return this._url;\n    }\n\n    /**地址的文件夹路径（不包括文件名）。*/\n    get path(): string {\n        return this._path;\n    }\n\n    /** 自定义URL格式化的方式。例如： customFormat = function(url:String):String{} */\n    static customFormat: Function = function (url: string): string {\n        return url;\n    }\n\n    /**\n     * 包含normalizedURL功能，并且合并base，如果base没有提供，则使用URL.basePath或者URL.rootPath。\n     * @param url 地址。\n     * @param base 基础路径，如果没有，则使用URL.basePath或者URL.rootPath。\n     * @return 格式化处理后的地址。\n     */\n    static formatURL(url: string, base?: string): string {\n        if (!url)\n            return base || URL.basePath || \"\";\n\n        if (url.startsWith(\"res://\")) {\n            let uuid = url.substring(6);\n            let url2 = AssetDb.inst.UUID_to_URL(uuid);\n            if (!url2)\n                return url;\n\n            url = url2;\n        }\n\n        let char1 = url.charCodeAt(0);\n        if (url.indexOf(\":\") == -1 && char1 !== 47) { //已经format过\n            //自定义路径格式化\n            if (URL.customFormat != null)\n                url = URL.customFormat(url);\n\n            let ver = URL.version[url];\n            if (ver != null) {\n                let i = url.lastIndexOf(\".\");\n                url = url.substring(0, i) + \"-\" + ver + url.substring(i);\n            }\n\n            if (char1 === 126) // ~\n                url = URL.join(URL.rootPath, url.substring(2));\n            else {\n                if (base == null) {\n                    base = URL.basePath;\n                    for (let k in URL.basePaths) {\n                        if (url.startsWith(k)) {\n                            base = URL.basePaths[k];\n                            break;\n                        }\n                    }\n                }\n                url = URL.join(base, url);\n            }\n        }\n\n        return url;\n    }\n\n    /**\n     * 处理扩展名的自动转换\n     * @param url 地址。\n     * @return 格式化处理后的地址。\n     */\n    static postFormatURL(url: string): string {\n        if (URL.hasExtOverrides) {\n            let extold = Utils.getFileExtension(url);\n            let ext = URL.overrideFileExts[extold];\n            if (ext != null)\n                url = Utils.replaceFileExtension(url, ext);\n        }\n\n        return url;\n    }\n\n    /**\n     * 格式化相对路径。主要是处理.和..这些情况。\n     */\n    static normalize(url: string): string {\n        if (url.indexOf(\"./\") == -1)\n            return url;\n\n        let parts = url.split(\"/\");\n        let len = parts.length;\n        let i = 0;\n        while (i < len) {\n            if (parts[i] == \".\") {\n                parts.splice(i, 1);\n                len--;\n                continue;\n            }\n            else if (parts[i] == '..') {\n                let index: number = i - 1;\n                if (index >= 0 && parts[index] !== '..') {\n                    parts.splice(index, 2);\n                    len -= 2;\n                    i--;\n                    continue;\n                }\n            }\n\n            i++;\n        }\n        parts.length = len;\n        return parts.join('/');\n    }\n\n    static getResURLByUUID(url: string): string {\n        if (url.length >= 36 && url.charCodeAt(8) === 45 && url.charCodeAt(13) === 45) //uuid xxxxxxxx-xxxx-...\n            return \"res://\" + url;\n        else\n            return url;\n    }\n\n    /**\n    * 组合相对路径并格式化\n    * @param base\n    * @param path\n    */\n    static join(base: string, path: string): string {\n        if (!path) return \"\";\n\n        //如果是全路径，直接返回，提高性能\n        if (path.indexOf(\":\") > 0)\n            return path;\n\n        if (base) {\n            let char1 = path.charCodeAt(0);\n            if (char1 !== 126 && char1 !== 47) { // ~或者 /\n                if (base.charCodeAt(base.length - 1) !== 47)\n                    path = base + \"/\" + path;\n                else\n                    path = base + path;\n            }\n        }\n\n        return URL.normalize(path);\n    }\n\n    /**\n     * 获取指定 URL 的文件夹路径（不包括文件名）。\n     * <p><b>注意：</b>末尾有斜杠（/）。</p>\n     * @param url url地址。\n     * @return 返回文件夹路径。\n     */\n    static getPath(url: string): string {\n        var ofs: number = url.lastIndexOf('/');\n        return ofs > 0 ? url.substring(0, ofs + 1) : \"\";\n    }\n\n    /**\n     * 获取指定 URL 的文件名。\n     * @param url 地址。\n     * @return 返回文件名。\n     */\n    static getFileName(url: string): string {\n        var ofs: number = url.lastIndexOf('/');\n        return ofs > 0 ? url.substring(ofs + 1) : url;\n    }\n\n    /**\n     * 获取URL版本字符。\n     * @param url\n     * @return\n     */\n    static getURLVerion(url: string): string {\n        var index: number = url.indexOf(\"?\");\n        return index >= 0 ? url.substring(index) : null;\n    }\n\n    /**\n     * 下载时，转换URL的扩展名。\n     * @originalExts 原始扩展名。例如[\"scene\"]。\n     * @targetExt 要转换为的扩展名。例如\"json\"。\n     */\n    static overrideExtension(originalExts: Array<string>, targetExt: string) {\n        for (let ext of originalExts)\n            URL.overrideFileExts[ext] = targetExt;\n        URL.hasExtOverrides = true;\n    }\n}","import { ShaderCompile } from \"./ShaderCompile\";\nimport { ShaderNode } from \"./ShaderNode\";\n\nexport class IncludeFile {\n    static splitToWords(str: string, block: ShaderNode): any[] {//这里要修改\n        var out: any[] = [];\n        /*\n           var words:Array = str.split(_splitToWordExps);\n           trace(str);\n           trace(words);\n         */\n        var c: string;\n        var ofs: number = -1;\n        var word: string;\n        for (var i: number = 0, n: number = str.length; i < n; i++) {\n            c = str.charAt(i);\n            if (\" \\t=+-*/&%!<>()'\\\",;\".indexOf(c) >= 0) {\n                if (ofs >= 0 && (i - ofs) > 1) {\n                    word = str.substr(ofs, i - ofs);\n                    out.push(word);\n                }\n                if (c == '\"' || c == \"'\") {\n                    var ofs2: number = str.indexOf(c, i + 1);\n                    if (ofs2 < 0) {\n                        throw \"Sharder err:\" + str;\n                    }\n                    out.push(str.substr(i + 1, ofs2 - i - 1));\n                    i = ofs2;\n                    ofs = -1;\n                    continue;\n                }\n                if (c == '(' && block && out.length > 0) {\n                    word = out[out.length - 1] + \";\";\n                    if (\"vec4;main;\".indexOf(word) < 0)\n                        block.useFuns += word;\n                }\n                ofs = -1;\n                continue;\n            }\n            if (ofs < 0) ofs = i;\n        }\n        if (ofs < n && (n - ofs) > 1) {\n            word = str.substr(ofs, n - ofs);\n            out.push(word);\n        }\n        return out;\n    }\n\n\n    script: string;\n    codes: any = {};\n    funs: any = {};\n    curUseID: number = -1;\n    funnames: string = \"\";\n\n    constructor(txt: string) {\n        this.script = txt;\n        var begin: number = 0, ofs: number, end: number;\n        while (true) {\n            begin = txt.indexOf(\"#begin\", begin);\n            if (begin < 0) break;\n\n            end = begin + 5;\n            while (true) {\n                end = txt.indexOf(\"#end\", end);\n                if (end < 0) break;\n                if (txt.charAt(end + 4) === 'i')\n                    end += 5;\n                else break;\n            }\n\n            if (end < 0) {\n                throw \"add include err,no #end:\" + txt;\n            }\n\n            ofs = txt.indexOf('\\n', begin);\n            var words: any[] = IncludeFile.splitToWords(txt.substr(begin, ofs - begin), null);\n            if (words[1] == 'code') {\n                this.codes[words[2]] = txt.substr(ofs + 1, end - ofs - 1);\n            } else if (words[1] == 'function')//#begin function void test()\n            {\n                ofs = txt.indexOf(\"function\", begin);\n                ofs += \"function\".length;\n                this.funs[words[3]] = txt.substr(ofs + 1, end - ofs - 1);\n                this.funnames += words[3] + \";\";\n            }\n\n            begin = end + 1;\n        }\n    }\n\n    getWith(name: string | null = null): string {\n        var r: string = name ? this.codes[name] : this.script;\n        if (!r) {\n            throw \"get with error:\" + name;\n        }\n        return r;\n    }\n\n    getFunsScript(funsdef: string): string {\n        var r: string = \"\";\n        for (var i in this.funs) {\n            if (funsdef.indexOf(i + \";\") >= 0) {\n                r += this.funs[i];\n            }\n        }\n        return r;\n    }\n\n}\n\n\n","export class ShaderNode {\n    private static __id: number = 1;\n    //是否删除无用代码\n    private static __noCompileEnable = true;\n\n    childs: any[] = [];\n    text: string = \"\";\n    parent: ShaderNode;\n    name: string;\n    noCompile: boolean;\n    includefiles: any[];\n    condition: any;\n    conditionType: number;\n    useFuns: string = \"\";\n    z: number = 0;\n    src: string;\n\n    constructor(includefiles: any[]) {\n        this.includefiles = includefiles;\n    }\n\n    setParent(parent: ShaderNode): void {\n        parent.childs.push(this);\n        this.z = parent.z + 1;\n        this.parent = parent;\n    }\n\n    setCondition(condition: string, type: number): void {\n        if (condition) {\n            this.conditionType = type;\n            condition = condition.replace(/(\\s*$)/g, \"\");\n            this.condition = function (): boolean {\n                return (this as any)[condition];\n            }\n            this.condition.__condition = condition;\n        }\n    }\n\n    toscript(def: any, out: any[]): any[] {\n        return this._toscript(def, out, ++ShaderNode.__id);\n    }\n\n    private _toscript(def: any, out: any[], id: number): any[] {\n        if (this.childs.length < 1 && !this.text) return out;\n        var outIndex: number = out.length;\n        if (this.condition) {\n            var ifdef: boolean = !!this.condition.call(def);\n            this.conditionType === 2&&(ifdef = !ifdef); //2 is ShaderCompile.IFDEF_ELSE && (ifdef = !ifdef);\n            if (!ifdef&&ShaderNode.__noCompileEnable) return out;\n        }\n        if(this.noCompile||!ShaderNode.__noCompileEnable)\n        this.text && out.push(this.text);\n        this.childs.length > 0 && this.childs.forEach(function (o: ShaderNode, index: number, arr: ShaderNode[]): void {\n            o._toscript(def, out, id);\n        });\n\n        if (this.includefiles.length > 0 && this.useFuns.length > 0) {\n            var funsCode: string;\n            for (var i: number = 0, n: number = this.includefiles.length; i < n; i++) {\n                //如果已经加入了，就不要再加\n                if (this.includefiles[i].curUseID == id) {\n                    continue;\n                }\n                funsCode = this.includefiles[i].file.getFunsScript(this.useFuns);\n                if (funsCode.length > 0) {\n                    this.includefiles[i].curUseID = id;\n                    out[0] = funsCode + out[0];\n                }\n            }\n        }\n\n        return out;\n    }\n}\n\n\n","import { ILaya } from \"../../../ILaya\";\nimport { BlendEquationSeparate } from \"../../RenderEngine/RenderEnum/BlendEquationSeparate\";\nimport { BlendFactor } from \"../../RenderEngine/RenderEnum/BlendFactor\";\nimport { BlendType } from \"../../RenderEngine/RenderEnum/BlendType\";\nimport { CompareFunction } from \"../../RenderEngine/RenderEnum/CompareFunction\";\nimport { CullMode } from \"../../RenderEngine/RenderEnum/CullMode\";\nimport { StencilOperation } from \"../../RenderEngine/RenderEnum/StencilOperation\";\nimport { RenderState } from \"../../RenderEngine/RenderShader/RenderState\";\nimport { URL } from \"../../net/URL\";\nimport { IncludeFile } from \"./IncludeFile\";\nimport { ShaderNode } from \"./ShaderNode\";\n\nexport interface IShaderCompiledObj {\n    vsNode: ShaderNode;\n    psNode: ShaderNode;\n    includeNames: Set<string>;\n    defs: Set<string>;\n};\n\ntype IncludeItem = { name: string, node: ShaderNode, codeName: string, file: IncludeFile };\n\nconst _clearCR: RegExp = new RegExp(\"\\r\", \"g\");\nconst _removeAnnotation: RegExp = new RegExp(\"(/\\\\*([^*]|[\\\\r\\\\\\n]|(\\\\*+([^*/]|[\\\\r\\\\n])))*\\\\*+/)|(//.*)\", \"g\");\nconst _reg: RegExp = new RegExp(\"(\\\".*\\\")|('.*')|([#\\\\w\\\\*-\\\\.+/()=<>{}\\\\\\\\]+)|([,;:\\\\\\\\])\", \"g\");\nconst _splitToWordExps: RegExp = new RegExp(\"[(\\\".*\\\")]+|[('.*')]+|([ \\\\t=\\\\+\\\\-*/&%!<>!%\\(\\),;])\", \"g\");\nconst _splitToWordExps3: RegExp = new RegExp(\"[ \\\\t=\\\\+\\\\-*/&%!<>!%\\(\\),;\\\\|]\", \"g\");\n\nconst CullStateMap: Record<string, CullMode> = {\n    \"Back\": CullMode.Back,\n    \"Front\": CullMode.Front,\n    \"Off\": CullMode.Off\n}\nconst BlendStateMap: Record<string, BlendType> = {\n    \"Disable\": BlendType.BLEND_DISABLE,\n    \"All\": BlendType.BLEND_ENABLE_ALL,\n    \"Seperate\": BlendType.BLEND_ENABLE_SEPERATE\n}\nconst BlendFactorMap: Record<string, BlendFactor> = {\n    \"Zero\": BlendFactor.Zero,\n    \"One\": BlendFactor.One,\n    \"SourceColor\": BlendFactor.SourceColor,\n    \"OneMinusSourceColor\": BlendFactor.OneMinusSourceColor,\n    \"DestinationColor\": BlendFactor.DestinationColor,\n    \"OneMinusDestinationColor\": BlendFactor.OneMinusDestinationColor,\n    \"SourceAlpha\": BlendFactor.SourceAlpha,\n    \"OneMinusSourceAlpha\": BlendFactor.OneMinusSourceAlpha,\n    \"DestinationAlpha\": BlendFactor.DestinationAlpha,\n    \"OneMinusDestinationAlpha\": BlendFactor.OneMinusDestinationAlpha,\n    \"SourceAlphaSaturate\": BlendFactor.SourceAlphaSaturate,\n    \"BlendColor\": BlendFactor.BlendColor,\n    \"OneMinusBlendColor\": BlendFactor.OneMinusBlendColor,\n}\nconst BlendEquationMap: Record<string, BlendEquationSeparate> = {\n    \"Add\": BlendEquationSeparate.ADD,\n    \"Subtract\": BlendEquationSeparate.SUBTRACT,\n    \"Reverse_substract\": BlendEquationSeparate.REVERSE_SUBTRACT,\n    \"Min\": BlendEquationSeparate.MIN,\n    \"Max\": BlendEquationSeparate.MAX\n}\n\nconst CompareFunctionMap: Record<string, CompareFunction> = {\n    \"Never\": CompareFunction.Never,\n    \"Less\": CompareFunction.Less,\n    \"Equal\": CompareFunction.Equal,\n    \"LessEqual\": CompareFunction.LessEqual,\n    \"Greater\": CompareFunction.Greater,\n    \"NotEqual\": CompareFunction.NotEqual,\n    \"GreaterEqual\": CompareFunction.GreaterEqual,\n    \"Always\": CompareFunction.Always,\n    \"Off\": CompareFunction.Off,\n}\n\nconst StencilOperationMap: Record<string, StencilOperation> = {\n    \"Keep\": StencilOperation.Keep,\n    \"Zero\": StencilOperation.Zero,\n    \"Replace\": StencilOperation.Replace,\n    \"IncrementSaturate\": StencilOperation.IncrementSaturate,\n    \"DecrementSaturate\": StencilOperation.DecrementSaturate,\n    \"Invert\": StencilOperation.Invert,\n    \"IncrementWrap\": StencilOperation.IncrementWrap,\n    \"DecrementWrap\": StencilOperation.DecrementWrap,\n}\n\n/**\n * @private\n * <code>ShaderCompile</code> 类用于实现Shader编译。\n */\nexport class ShaderCompile {\n    static IFDEF_NO: number = 0;\n    static IFDEF_YES: number = 1;\n    static IFDEF_ELSE: number = 2;\n    static IFDEF_PARENT: number = 3;\n\n    static includes: Record<string, IncludeFile> = {};\n\n    static loadIncludeFileSync: (fileName: string) => void;\n\n    static addInclude(fileName: string, txt: string, allowReplace?: boolean): IncludeFile {\n        if (!txt || txt.length === 0) {\n            console.error(\"shader include file err:\" + fileName);\n            return null;\n        }\n\n        if (!allowReplace && ShaderCompile.includes[fileName]) {\n            console.warn(\"shader include file already exists:\" + fileName);\n            return ShaderCompile.includes[fileName];\n        }\n\n        txt = txt.replace(_clearCR, \"\");//CRLF风格需要先去掉“\\r\",否则切分字符会出错导致宏定义编译错误等\n        let file = new IncludeFile(txt);\n        ShaderCompile.includes[fileName] = file;\n        return file;\n    }\n\n    static compile(vs: string, ps: string, basePath?: string): IShaderCompiledObj {\n        let result: IShaderCompiledObj = {\n            vsNode: new ShaderNode([]),\n            psNode: new ShaderNode([]),\n            includeNames: new Set(),\n            defs: new Set()\n        };\n\n        let includes: Array<IncludeItem> = [];\n\n        vs = vs.replace(_clearCR, \"\");//CRLF风格需要先去掉“\\r\",否则切分字符会出错导致宏定义编译错误等\n        ps = ps.replace(_clearCR, \"\")\n\n        ShaderCompile._compileToTree(result.vsNode, vs, result.defs, includes, basePath);\n        ShaderCompile._compileToTree(result.psNode, ps, result.defs, includes, basePath);\n\n        for (let inc of includes) {\n            if (inc.file)\n                result.includeNames.add(inc.name);\n            else\n                console.warn(`ShaderCompile missing file ${inc.name}`);\n        }\n\n        return result;\n    }\n\n    static compileAsync(vs: string, ps: string, basePath: string): Promise<IShaderCompiledObj> {\n        let result: IShaderCompiledObj = {\n            vsNode: new ShaderNode([]),\n            psNode: new ShaderNode([]),\n            includeNames: new Set(),\n            defs: new Set()\n        };\n\n        let includes: Array<IncludeItem> = [];\n\n        vs = vs.replace(_clearCR, \"\");\n        ps = ps.replace(_clearCR, \"\")\n\n        ShaderCompile._compileToTree(result.vsNode, vs, result.defs, includes, basePath);\n        ShaderCompile._compileToTree(result.psNode, ps, result.defs, includes, basePath);\n\n        return this._loadIncludesDeep(result, includes, 0);\n    }\n\n    private static _loadIncludesDeep(result: IShaderCompiledObj, includes: Array<IncludeItem>, index: number): Promise<IShaderCompiledObj> {\n        let toLoad: Array<IncludeItem>;\n        let includesCnt = includes.length;\n        for (let i = index; i < includesCnt; i++) {\n            let inc = includes[i];\n            if (inc.file)\n                result.includeNames.add(inc.name);\n            else {\n                if (!toLoad) toLoad = [];\n                toLoad.push(inc);\n            }\n        }\n\n        if (!toLoad)\n            return Promise.resolve(result);\n\n        return ILaya.loader.load(toLoad.map(tc => tc.name)).then(files => {\n            let cnt = toLoad.length;\n            for (let i = 0; i < cnt; i++) {\n                let inc = toLoad[i];\n                let file = files[i];\n                if (!file) {\n                    let childs = inc.node.parent.childs;\n                    childs.splice(childs.indexOf(inc.node), 1);\n                }\n                else {\n                    result.includeNames.add(inc.name);\n\n                    let text = file.getWith(inc.codeName);\n                    if (inc.node.condition)\n                        inc.node.text = text;\n                    else {\n                        ShaderCompile._compileToTree(inc.node, text, result.defs, includes, URL.getPath(inc.name));\n                        inc.node.text = \"\";\n                    }\n                }\n            }\n            if (includes.length > includesCnt)\n                return ShaderCompile._loadIncludesDeep(result, includes, includesCnt);\n            else\n                return result;\n        });\n    }\n\n    /**\n     * @private\n     */\n    private static _compileToTree(parent: ShaderNode, script: string, defs: Set<string>, includes: Array<IncludeItem>, basePath: string): void {\n        let node: ShaderNode, preNode: ShaderNode;\n        let text: string, name: string, fname: string;\n        let ofs: number, words: any[];\n        let i: number, n: number, j: number;\n        let lines = script.split(\"\\n\");\n\n        for (i = 0; i < lines.length; i++) {\n            text = lines[i];\n            if (text.length < 1) continue;\n            ofs = text.indexOf(\"//\");\n            if (ofs === 0) continue;\n            if (ofs >= 0) text = text.substr(0, ofs);\n\n            if ((ofs = text.indexOf(\"#\")) < 0) {\n                preNode = parent.childs[parent.childs.length - 1];\n                let includefiles = parent.includefiles;\n                if (preNode && !preNode.name) {\n                    includefiles.length > 0 && IncludeFile.splitToWords(text, preNode);\n                    preNode.text += \"\\n\" + text;\n                    continue;\n                }\n\n                node = new ShaderNode(includefiles);\n                node.text = text;\n                node.noCompile = true;\n                includefiles.length > 0 && IncludeFile.splitToWords(text, node);\n                node.setParent(parent);\n                continue;\n            }\n\n            node = new ShaderNode(parent.includefiles);\n            node.text = text;\n            node.noCompile = true;\n\n            name = \"#\";\n            for (j = ofs + 1, n = text.length; j < n; j++) {\n                let c: string = text.charAt(j);\n                if (c === ' ' || c === '\\t' || c === '?') break;\n                name += c;\n            }\n            node.name = name;\n            switch (name) {\n                case \"#ifdef\":\n                case \"#ifndef\":\n                    node.src = text;\n                    node.noCompile = text.match(/[!&|()=<>]/) != null;\n                    if (!node.noCompile) {\n                        words = text.replace(/^\\s*/, '').split(/\\s+/);\n                        node.setCondition(words[1], name === \"#ifdef\" ? ShaderCompile.IFDEF_YES : ShaderCompile.IFDEF_ELSE);\n                        node.text = node.text;\n                    } else {\n                        console.log(\"function():Boolean{return \" + text.substr(ofs + node.name.length) + \"}\");\n                    }\n                    node.setParent(parent);\n                    parent = node;\n\n                    words = text.substr(j).split(_splitToWordExps3);\n                    for (j = 0; j < words.length; j++) {\n                        text = words[j];\n                        text.length && defs.add(text);\n                    }\n                    break;\n\n                case \"#if\":\n                case \"#elif\":\n                    node.src = text;\n                    node.noCompile = true;\n                    if (name == \"#elif\") {\n                        parent = parent.parent;\n                        preNode = parent.childs[parent.childs.length - 1];\n                        //匹配\"#ifdef\"\n                        preNode.text = preNode.src;\n                        preNode.noCompile = true;\n                        preNode.condition = null;\n                    }\n                    node.setParent(parent);\n                    parent = node;\n\n                    words = text.substr(j).split(_splitToWordExps3);\n                    for (j = 0; j < words.length; j++) {\n                        text = words[j];\n                        text.length && text != \"defined\" && defs.add(text);\n                    }\n                    break;\n\n                case \"#else\":\n                    node.src = text;\n                    parent = parent.parent;\n                    preNode = parent.childs[parent.childs.length - 1];\n                    node.noCompile = preNode.noCompile;\n                    if (!node.noCompile) {\n                        node.condition = preNode.condition;\n                        node.conditionType = preNode.conditionType == ShaderCompile.IFDEF_YES ? ShaderCompile.IFDEF_ELSE : ShaderCompile.IFDEF_YES;\n                        //node.text =  node.text + \" \" + preNode.text + \" \" + node.conditionType;\n                    }\n                    //递归节点树\n                    node.setParent(parent);\n                    parent = node;\n                    break;\n\n                case \"#endif\":\n                    parent = parent.parent;\n                    preNode = parent.childs[parent.childs.length - 1];\n                    node.noCompile = preNode.noCompile;\n                    if (!node.noCompile) {\n                        node.text = node.text;\n                    }\n                    node.setParent(parent);\n                    break;\n\n                case \"#include\"://这里有问题,主要是空格\n                    words = IncludeFile.splitToWords(text, null);\n                    let includeName: string = words[1];\n                    let includeFile: IncludeFile;\n                    if (includeName.startsWith(\".\"))\n                        includeName = URL.join(basePath, includeName);\n                    else if (includeName.startsWith(\"/\"))\n                        includeName = URL.formatURL(includeName.substring(1));\n                    else {\n                        //check if builtin\n                        includeFile = ShaderCompile.includes[includeName];\n                        if (!includeFile)\n                            includeName = \"internal/\" + includeName;\n                    }\n                    includeFile = ShaderCompile.includes[includeName];\n\n                    if (!includeFile && ShaderCompile.loadIncludeFileSync) {\n                        ShaderCompile.loadIncludeFileSync(includeName);\n                        includeFile = ShaderCompile.includes[includeName];\n                    }\n\n                    let codeName = words[2] == 'with' ? words[3] : null;\n                    includes.push({ name: includeName, codeName: codeName, node: node, file: includeFile });\n                    node.setParent(parent);\n\n                    if ((ofs = words[0].indexOf(\"?\")) < 0) {\n                        if (includeFile) {\n                            text = includeFile.getWith(codeName);\n                            this._compileToTree(node, text, defs, includes, URL.getPath(includeName));\n                        }\n                        node.text = \"\";\n                    }\n                    else {\n                        node.setCondition(words[0].substr(ofs + 1), ShaderCompile.IFDEF_YES);\n\n                        if (includeFile)\n                            node.text = includeFile.getWith(codeName);\n                    }\n                    break;\n\n                case \"#import\":\n                    words = IncludeFile.splitToWords(text, null);\n                    fname = words[1];\n                    node.includefiles.push({ node: node, file: ShaderCompile.includes[fname], ofs: node.text.length });\n                    break;\n\n                default:\n                    node.setParent(parent);\n                    break;\n            }\n        }\n    }\n\n    static getRenderState(obj: Record<string, string | boolean | number | string[]>, renderState: RenderState) {\n        if (!obj) {\n            return;\n        }\n\n        renderState.cull = CullStateMap[<string>obj.cull];\n        renderState.blend = BlendStateMap[<string>obj.blend];\n        renderState.srcBlend = BlendFactorMap[<string>obj.srcBlend];\n        renderState.dstBlend = BlendFactorMap[<string>obj.dstBlend];\n        renderState.srcBlendRGB = BlendFactorMap[<string>obj.srcBlendRGB];\n        renderState.dstBlendRGB = BlendFactorMap[<string>obj.dstBlendRGB];\n        renderState.srcBlendAlpha = BlendFactorMap[<string>obj.srcBlendAlpha];\n        renderState.dstBlendAlpha = BlendFactorMap[<string>obj.dstBlendAlpha];\n        renderState.blendEquation = BlendEquationMap[<string>obj.blendEquation];\n        renderState.blendEquationRGB = BlendEquationMap[<string>obj.blendEquationRGB];\n        renderState.blendEquationAlpha = BlendEquationMap[<string>obj.blendEquationAlpha];\n        renderState.depthTest = CompareFunctionMap[<string>obj.depthTest];\n        renderState.depthWrite = <boolean>obj.depthWrite;\n        renderState.stencilRef = <number>obj.stencilRef;\n        renderState.stencilTest = CompareFunctionMap[<string>obj.stencilTest];\n        renderState.stencilWrite = <boolean>obj.stencilWrite;\n        let stencilOp = <string[]>obj.stencilOp;\n        let stencilFail = stencilOp ? stencilOp[0] : null;\n        let stencilZFail = stencilOp ? stencilOp[1] : null;\n        let stencilZPass = stencilOp ? stencilOp[2] : null;\n        renderState.stencilOp.x = StencilOperationMap[stencilFail];\n        renderState.stencilOp.y = StencilOperationMap[stencilZFail];\n        renderState.stencilOp.z = StencilOperationMap[stencilZPass];\n\n        return;\n    }\n}\n\n\n\n","import { IClone } from \"../../utils/IClone\";\nimport { ShaderDefine } from \"./ShaderDefine\";\n\n/**\n * <code>DefineDatas</code> 类用于创建宏定义数据集合。\n */\nexport class DefineDatas implements IClone {\n\t/** @internal */\n\t_mask: Array<number> = [];\n\t/** @internal */\n\t_length: number = 0;\n\n\t/**\n\t * 创建一个 <code>DefineDatas</code> 实例。\n\t */\n\tconstructor() {\n\t}\n\n\t/**\n\t * @internal\n\t */\n\t_intersectionDefineDatas(define: DefineDatas): void {\n\t\tvar unionMask: Array<number> = define._mask;\n\t\tvar mask: Array<number> = this._mask;\n\t\tfor (var i: number = this._length - 1; i >= 0; i--) {\n\t\t\tvar value: number = mask[i] & unionMask[i];\n\t\t\tif (value == 0 && i == this._length - 1)\n\t\t\t\tthis._length--;\n\t\t\telse\n\t\t\t\tmask[i] = value;\n\t\t}\n\t}\n\n\t/**\n\t * 添加宏定义值。\n\t * @param define 宏定义值。\n\t */\n\tadd(define: ShaderDefine): void {\n\t\tvar index: number = define._index;\n\t\tvar size: number = index + 1;\n\t\tvar mask: Array<number> = this._mask;\n\t\tvar maskStart: number = this._length;//must from this._length because this._length maybe less than mask.length and have dirty data should clear.\n\t\tif (maskStart < size) {\n\t\t\t(mask.length < size) && (mask.length = size);//mask.length maybe small than size,maybe not.\n\t\t\tfor (; maskStart < index; maskStart++)\n\t\t\t\tmask[maskStart] = 0;\n\t\t\tmask[index] = define._value;\n\t\t\tthis._length = size;\n\t\t}\n\t\telse {\n\t\t\tmask[index] |= define._value;\n\t\t}\n\t}\n\n\t/**\n\t * 移除宏定义。\n\t * @param define 宏定义。\n\t */\n\tremove(define: ShaderDefine): void {\n\t\tvar index: number = define._index;\n\t\tvar mask: Array<number> = this._mask;\n\t\tvar endIndex: number = this._length - 1;\n\t\tif (index > endIndex)//不重置Length,避免经常扩充\n\t\t\treturn;\n\t\tvar newValue = mask[index] & ~define._value;\n\t\tif (index == endIndex && newValue === 0)\n\t\t\tthis._length--;\n\t\telse\n\t\t\tmask[index] = newValue;\n\t}\n\n\t/**\n\t * 添加宏定义集合。\n\t * @param define 宏定义集合。\n\t */\n\taddDefineDatas(define: DefineDatas): void {\n\t\tvar addMask: Array<number> = define._mask;\n\t\tvar size: number = define._length;\n\t\tvar mask: Array<number> = this._mask;\n\t\tvar maskStart: number = this._length;\n\t\tif (maskStart < size) {\n\t\t\tmask.length = size;\n\t\t\tfor (var i: number = 0; i < maskStart; i++)\n\t\t\t\tmask[i] |= addMask[i];\n\t\t\tfor (; i < size; i++)\n\t\t\t\tmask[i] = addMask[i];\n\t\t\tthis._length = size;\n\t\t} else {\n\t\t\tfor (var i: number = 0; i < size; i++) {\n\t\t\t\tmask[i] |= addMask[i];\n\t\t\t}\n\t\t}\n\t}\n\n\n\n\t/**\n\t * 移除宏定义集合。\n\t * @param define 宏定义集合。\n\t */\n\tremoveDefineDatas(define: DefineDatas): void {\n\t\tvar removeMask: Array<number> = define._mask;\n\t\tvar mask: Array<number> = this._mask;\n\t\tvar endIndex: number = this._length - 1;\n\t\tvar i = Math.min(define._length, endIndex);\n\t\tfor (; i >= 0; i--) {\n\t\t\tvar newValue = mask[i] & ~removeMask[i];\n\t\t\tif (i == endIndex && newValue === 0) {\n\t\t\t\tendIndex--;\n\t\t\t\tthis._length--;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmask[i] = newValue;\n\t\t\t}\n\t\t}\n\t}\n\n\n\t/**\n\t * 是否有宏定义。\n\t * @param define 宏定义。\n\t */\n\thas(define: ShaderDefine): boolean {\n\t\tvar index: number = define._index;\n\t\tif (index >= this._length)\n\t\t\treturn false;\n\t\treturn (this._mask[index] & define._value) !== 0;\n\t}\n\n\t/**\n\t * 清空宏定义。\n\t */\n\tclear(): void {\n\t\tthis._length = 0;\n\t}\n\n\t/**\n\t * 克隆。\n\t * @param\tdestObject 克隆源。\n\t */\n\tcloneTo(destObject: any): void {\n\t\tvar destDefineData: DefineDatas = (<DefineDatas>destObject);\n\t\tvar destMask: Array<number> = destDefineData._mask;\n\t\tvar mask: Array<number> = this._mask;\n\t\tvar count: number = this._length;\n\t\tdestMask.length = count;\n\t\tfor (var i: number = 0; i < count; i++)\n\t\t\tdestMask[i] = mask[i];\n\t\tdestDefineData._length = count;\n\t}\n\n\t/**\n\t * 克隆。\n\t * @return\t 克隆副本。\n\t */\n\tclone(): any {\n\t\tvar dest: DefineDatas = new DefineDatas();\n\t\tthis.cloneTo(dest);\n\t\treturn dest;\n\t}\n\n\tdestroy() {\n\t\tdelete this._mask;\n\t}\n}\n\n\n","/**\n * <code>ShaderDefine</code> 类用于定义宏数据。\n */\nexport class ShaderDefine {\n\n\t/**\n\t * @internal\n\t * 存储 texture uniform gamma define\n\t */\n\tstatic _texGammaDefine: { [key: string]: ShaderDefine } = {};\n\n\t/**@internal */\n\t_index: number;\n\t/**@internal */\n\t_value: number;\n\t/**\n\t * 创建一个宏定义的实例\n\t * @param index 宏索引\n\t * @param value 宏值\n\t */\n\tconstructor(index: number, value: number) {\n\t\tthis._index = index;\n\t\tthis._value = value;\n\t}\n}\n\n\n\n\n\n\n","import { DefineDatas } from \"./DefineDatas\";\nimport { Shader3D } from \"./Shader3D\";\nimport { ShaderPass } from \"./ShaderPass\";\nimport { SubShader } from \"./SubShader\";\n\n/**\n * 着色器变种。\n */\nexport class ShaderVariant {\n    /** @internal */\n    _shader: Shader3D;\n    /** @internal */\n    _subShaderIndex: number = 0;\n    /** @internal */\n    _passIndex: number = 0;\n    /** @internal */\n    _defineNames: string[];\n\n    /**\n     * 着色器。\n     */\n    public get shader(): Shader3D {\n        return this._shader;\n    }\n\n    /**\n     * 子着色器索引。\n     */\n    public get subShaderIndex(): number {\n        return this._subShaderIndex;\n    }\n\n    /**\n     * 通道索引。\n     */\n    public get passIndex(): number {\n        return this._passIndex;\n    }\n\n    /**\n     * 宏定义集合。\n     */\n    public get defineNames(): Readonly<string[]> {\n        return this._defineNames;\n    }\n\n    /**\n     * 创建着色器变种。\n     * @param shader 着色器\n     * @param subShaderIndex 子着色器索引 \n     * @param passIndex 通道索引\n     * @param defines 宏定义集合\n     */\n    constructor(shader: Shader3D, subShaderIndex: number, passIndex: number, defines: string[]) {\n        this.setValue(shader, subShaderIndex, passIndex, defines);\n    }\n\n    /**\n     * 给着色器变种赋值。\n     * @param shader 着色器\n     * @param subShaderIndex 子着色器索引 \n     * @param passIndex 通道索引\n     * @param defineNames 宏定义集合\n     */\n    setValue(shader: Shader3D, subShaderIndex: number, passIndex: number, defineNames: string[]): void {\n        if (shader) {\n            var subShader: SubShader = shader.getSubShaderAt(subShaderIndex);\n            if (subShader) {\n                var pass: ShaderPass = subShader._passes[passIndex];\n                if (pass) {\n                    var validDefine: DefineDatas = pass._validDefine;\n                    for (var i: number = 0, n: number = defineNames.length; i < n; i++) {\n                        var defname: string = defineNames[i];\n                        if (!validDefine.has(Shader3D.getDefineByName(defname)))\n                            throw `ShaderVariantInfo:Invalid defineName ${defname} in ${shader._name} subShaderIndex of ${subShaderIndex} passIndex of ${passIndex}.`;\n                    }\n                }\n                else {\n                    throw `ShaderVariantInfo:Shader don't have passIndex of ${passIndex}.`;\n                }\n            }\n            else {\n                throw `ShaderVariantInfo:Shader don't have subShaderIndex of ${subShaderIndex}.`;\n            }\n        }\n        else {\n            throw `ShaderVariantInfo:Shader can't be null.`;\n        }\n        this._shader = shader;\n        this._subShaderIndex = subShaderIndex;\n        this._passIndex = passIndex;\n        this._defineNames = defineNames;\n    }\n\n    /**\n     * 是否相等。\n     * @param other 其它着色器变种\n     * @return 是否相等。\n     */\n    equal(other: ShaderVariant): boolean {\n        if (this._shader !== other._shader || this._subShaderIndex !== other._subShaderIndex || this._passIndex !== other._passIndex)\n            return false;\n\n        var defines: string[] = this._defineNames;\n        var otherDefines: string[] = other._defineNames;\n        if (defines.length !== otherDefines.length)\n            return false;\n        for (var i: number = 0, n: number = this._defineNames.length; i < n; i++) {\n            if (defines[i] !== otherDefines[i])\n                return false;\n        }\n        return true;\n\n    }\n\n\n    /**\n     * 克隆。\n     * @return 着色器变种。 \n     */\n    clone(): ShaderVariant {\n        var dest: ShaderVariant = new ShaderVariant(this._shader, this._subShaderIndex, this._passIndex, this._defineNames.slice());\n        return dest;\n    }\n}\n\n/**\n * 着色器变种集合。\n */\nexport class ShaderVariantCollection {\n    /** @internal */\n    private _allCompiled: boolean = false;\n    /** @internal */\n    private _variants: ShaderVariant[] = [];\n\n    /**\n     * 是否已经全部编译。\n     */\n    get allCompiled(): boolean {\n        return this._allCompiled;\n    }\n\n    /**\n     * 包含的变种数量。\n     */\n    get variantCount(): number {\n        return this._variants.length;\n    }\n\n    /**\n     * 添加着色器变种。\n     * @param variant 着色器变种。\n     * @param 是否添加成功。\n     */\n    add(variant: ShaderVariant): boolean {\n        for (var i: number = 0, n: number = this._variants.length; i < n; i++) {\n            if (this._variants[i].equal(variant))\n                return false;\n        }\n        this._variants.push(variant.clone());\n        this._allCompiled = false;\n        return true;\n    }\n\n    /**\n     * 移除着色器变种。\n     * @param variant 着色器变种。\n     * @return 是否移除成功。\n     */\n    remove(variant: ShaderVariant): boolean {\n        for (var i: number = 0, n: number = this._variants.length; i < n; i++) {\n            if (this._variants[i].equal(variant)) {\n                this._variants.splice(i, 1);\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /**\n     * 是否包含着色器变种。\n     * @param variant 着色器变种。\n     */\n    contatins(variant: ShaderVariant): boolean {\n        for (var i: number = 0, n: number = this._variants.length; i < n; i++) {\n            if (this._variants[i].equal(variant))\n                return true;\n        }\n        return false;\n    }\n\n    /**\n     * 通过索引获取着色器变种。\n     * @param index 索引。\n     * @returns 着色器变种。\n     */\n    getByIndex(index: number): ShaderVariant {\n        return this._variants[index];\n    }\n\n    /**\n     * 清空。\n     */\n    clear(): void {\n        this._variants.length = 0;\n    }\n\n    /**\n     * 执行编译。\n     */\n    compile(): void {\n        if (!this._allCompiled) {\n            var variants: ShaderVariant[] = this._variants;\n            for (var i: number = 0, n: number = variants.length; i < n; i++) {\n                var variant: ShaderVariant = variants[i];\n                Shader3D.compileShaderByDefineNames(variant._shader._name, variant._subShaderIndex, variant._passIndex, variant._defineNames,[]);\n            }\n            this._allCompiled = true;\n        }\n    }\n}","/**\n * <code>MathUtils3D</code> 类用于创建数学工具。\n */\nexport class MathUtils3D {\n\t/**单精度浮点(float)零的容差*/\n\tstatic zeroTolerance: number = 1e-6;\n\t/**浮点数默认最大值*/\n\tstatic MaxValue: number = 3.40282347e+38;\n\t/**浮点数默认最小值*/\n\tstatic MinValue: number = -3.40282347e+38;\n\t/**角度转弧度系数*/\n\tstatic Deg2Rad: number = Math.PI / 180;\n\n\t/**\n\t * 创建一个 <code>MathUtils</code> 实例。\n\t */\n\tconstructor() {\n\n\t}\n\n\t/**\n\t * 是否在容差的范围内近似于0\n\t * @param  判断值\n\t * @return  是否近似于0\n\t */\n\tstatic isZero(v: number): boolean {\n\t\treturn Math.abs(v) < MathUtils3D.zeroTolerance;\n\t}\n\n\t/**\n\t * 两个值是否在容差的范围内近似相等Sqr Magnitude\n\t * @param  判断值\n\t * @return  是否近似于0\n\t */\n\tstatic nearEqual(n1: number, n2: number): boolean {\n\t\tif (MathUtils3D.isZero(n1 - n2))\n\t\t\treturn true;\n\t\treturn false;\n\t}\n\n\tstatic fastInvSqrt(value: number): number {\n\t\tif (MathUtils3D.isZero(value))\n\t\t\treturn value;\n\t\treturn 1.0 / Math.sqrt(value);\n\t}\n}\n\n\n","import { IClone } from \"../utils/IClone\";\nimport { MathUtils3D } from \"./MathUtils3D\";\n\nexport interface IV2 {\n    x: number;\n    y: number;\n}\n/**\n * <code>Vector2</code> 类用于创建二维向量。\n */\nexport class Vector2 implements IClone {\n    /**零向量,禁止修改*/\n    static readonly ZERO: Readonly<Vector2> = new Vector2(0.0, 0.0);\n    /**一向量,禁止修改*/\n    static readonly ONE: Readonly<Vector2> = new Vector2(1.0, 1.0);\n    static TempVector2 = new Vector2();\n    /**X轴坐标*/\n    x: number;\n    /**Y轴坐标*/\n    y: number;\n\n    /**\n     * 创建一个 <code>Vector2</code> 实例。\n     * @param\tx  X轴坐标。\n     * @param\ty  Y轴坐标。\n     */\n    constructor(x: number = 0, y: number = 0) {\n        this.x = x;\n        this.y = y;\n    }\n    /**\n     * 设置xy值。\n     * @param\tx X值。\n     * @param\ty Y值。\n     */\n    setValue(x: number, y: number): void {\n        this.x = x;\n        this.y = y;\n    }\n\n    /**\n     * 缩放二维向量。\n     * @param\ta 源二维向量。\n     * @param\tb 缩放值。\n     * @param\tout 输出二维向量。\n     */\n    static scale(a: Vector2, b: number, out: Vector2): void {\n        out.x = a.x * b;\n        out.y = a.y * b;\n    }\n\n    /**\n     * 判断两个二维向量是否相等。\n     * @param\ta 三维向量。\n     * @param\tb 三维向量。\n     * @return  是否相等。\n     */\n    static equals(a: Vector2, b: Vector2): boolean {\n        return MathUtils3D.nearEqual(a.x, b.x) && MathUtils3D.nearEqual(a.y, b.y);\n    }\n\n    /**\n     * 从Array数组拷贝值。\n     * @param  array 数组。\n     * @param  offset 数组偏移。\n     */\n    fromArray(array: ArrayLike<number>, offset: number = 0): void {\n        this.x = array[offset + 0];\n        this.y = array[offset + 1];\n    }\n\n    /**\n     * 转换为Array数组\n     * @return\n     */\n    toArray(): Array<number> {\n        return [this.x, this.y];\n    }\n\n    /**\n     * 写入Float32Array数组\n     * @param array 数组。\n     * @param offset 数组偏移。 \n     */\n    writeTo(array: Float32Array, offset: number = 0): void {\n        array[offset + 0] = this.x;\n        array[offset + 1] = this.y;\n    }\n\n    /**\n     * 克隆。\n     * @param\tdestObject 克隆源。\n     */\n    cloneTo(destObject: any): void {\n        var destVector2: Vector2 = (<Vector2>destObject);\n        destVector2.x = this.x;\n        destVector2.y = this.y;\n    }\n\n    /**\n     * 求两个二维向量的点积。\n     * @param\ta left向量。\n     * @param\tb right向量。\n     * @return   点积。\n     */\n    static dot(a: Vector2, b: Vector2): number {\n        return (a.x * b.x) + (a.y * b.y);\n    }\n\n    /**\n     * 归一化二维向量。\n     * @param\ts 源三维向量。\n     * @param\tout 输出三维向量。\n     */\n    static normalize(s: Vector2, out: Vector2): void {\n        var x: number = s.x, y: number = s.y;\n        var len: number = x * x + y * y;\n        if (len > 0) {\n            len = 1 / Math.sqrt(len);\n            out.x = x * len;\n            out.y = y * len;\n        }\n    }\n\n    /**\n     * 计算标量长度。\n     * @param\ta 源三维向量。\n     * @return 标量长度。\n     */\n    static scalarLength(a: Vector2): number {\n        var x: number = a.x, y: number = a.y;\n        return Math.sqrt(x * x + y * y);\n    }\n\n    /**\n     * 克隆。\n     * @return\t 克隆副本。\n     */\n    clone(): any {\n        var destVector2: Vector2 = new Vector2();\n        this.cloneTo(destVector2);\n        return destVector2;\n    }\n\n    forNativeElement(nativeElements: Float32Array | null = null): void//[NATIVE_TS]\n    {\n        if (nativeElements) {\n            (<any>this).elements = nativeElements;\n            (<any>this).elements[0] = this.x;\n            (<any>this).elements[1] = this.y;\n        }\n        else {\n            (<any>this).elements = new Float32Array([this.x, this.y]);\n        }\n        Vector2.rewriteNumProperty(this, \"x\", 0);\n        Vector2.rewriteNumProperty(this, \"y\", 1);\n    }\n\n    static rewriteNumProperty(proto: any, name: string, index: number): void {\n        Object[\"defineProperty\"](proto, name, {\n            \"get\": function (): any {\n                return this.elements[index];\n            },\n            \"set\": function (v: any): void {\n                this.elements[index] = v;\n            }\n        });\n    }\n\n}\n\n","import { Matrix4x4 } from \"./Matrix4x4\";\nimport { MathUtils3D } from \"./MathUtils3D\";\nimport { Vector2 } from \"./Vector2\";\nimport { IClone } from \"../utils/IClone\";\n\n/**\n * <code>Vector4</code> 类用于创建四维向量。\n */\nexport class Vector4 implements IClone {\n\n    /**零向量*/\n    static readonly ZERO: Readonly<Vector4> = new Vector4();\n\n    /*一向量*/\n    static readonly ONE: Readonly<Vector4> = new Vector4(1.0, 1.0, 1.0, 1.0);\n\n    /*X单位向量*/\n    static readonly UnitX: Readonly<Vector4> = new Vector4(1.0, 0.0, 0.0, 0.0);\n\n    /*Y单位向量*/\n    static readonly UnitY: Readonly<Vector4> = new Vector4(0.0, 1.0, 0.0, 0.0);\n\n    /*Z单位向量*/\n    static readonly UnitZ: Readonly<Vector4> = new Vector4(0.0, 0.0, 1.0, 0.0);\n\n    /*W单位向量*/\n    static readonly UnitW: Readonly<Vector4> = new Vector4(0.0, 0.0, 0.0, 1.0);\n\n    /** @internal */\n    static tempVec4: Vector4 = new Vector4(0.0, 0.0, 0.0, 0.0);\n\n    /**X轴坐标*/\n    x: number;\n    /**Y轴坐标*/\n    y: number;\n    /**Z轴坐标*/\n    z: number;\n    /**W轴坐标*/\n    w: number;\n\n    /**\n     * 创建一个 <code>Vector4</code> 实例。\n     * @param\tx  X轴坐标。\n     * @param\ty  Y轴坐标。\n     * @param\tz  Z轴坐标。\n     * @param\tw  W轴坐标。\n     */\n    constructor(x: number = 0, y: number = 0, z: number = 0, w: number = 0) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n        this.w = w;\n    }\n\n    /**\n     * 设置xyzw值。\n     * @param\tx X值。\n     * @param\ty Y值。\n     * @param\tz Z值。\n     * @param\tw W值。\n     */\n    setValue(x: number, y: number, z: number, w: number): void {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n        this.w = w;\n    }\n\n    /**\n     * 从Array数组拷贝值。\n     * @param  arr 数组。\n     * @param  offset 数组偏移。\n     */\n    fromArray(arr: ArrayLike<number>, offset: number = 0): void {\n        this.x = arr[offset + 0];\n        this.y = arr[offset + 1];\n        this.z = arr[offset + 2];\n        this.w = arr[offset + 3];\n    }\n\n    /**\n     * 转换为Array数组\n     * @return\n     */\n    toArray(): Array<number> {\n        return [this.x, this.y, this.z, this.w];\n    }\n\n    /**\n     * 写入Float32Array数组\n     * @param arr 数组。\n     * @param offset 数组偏移。 \n     */\n    writeTo(arr: Float32Array, offset: number = 0): void {\n        arr[offset + 0] = this.x;\n        arr[offset + 1] = this.y;\n        arr[offset + 2] = this.z;\n        arr[offset + 3] = this.w;\n    }\n\n    /**\n     * 克隆。\n     * @param\tdestObject 克隆源。\n     */\n    cloneTo(destObject: any): void {\n        var destVector4: Vector4 = (<Vector4>destObject);\n        destVector4.x = this.x;\n        destVector4.y = this.y;\n        destVector4.z = this.z;\n        destVector4.w = this.w;\n    }\n\n    /**\n     * 克隆。\n     * @return\t 克隆副本。\n     */\n    clone(): any {\n        var destVector4: Vector4 = new Vector4();\n        this.cloneTo(destVector4);\n        return destVector4;\n    }\n\n    /**\n     * 插值四维向量。\n     * @param\ta left向量。\n     * @param\tb right向量。\n     * @param\tt 插值比例。\n     * @param\tout 输出向量。\n     */\n    static lerp(a: Vector4, b: Vector4, t: number, out: Vector4): void {\n        var ax: number = a.x, ay: number = a.y, az: number = a.z, aw: number = a.w;\n        out.x = ax + t * (b.x - ax);\n        out.y = ay + t * (b.y - ay);\n        out.z = az + t * (b.z - az);\n        out.w = aw + t * (b.w - aw);\n    }\n\n    /**\n     * 通过4x4矩阵把一个四维向量转换为另一个四维向量\n     * @param\tvector4 带转换四维向量。\n     * @param\tM4x4    4x4矩阵。\n     * @param\tout     转换后四维向量。\n     */\n    static transformByM4x4(vector4: Vector4, m4x4: Matrix4x4, out: Vector4): void {\n        var vx: number = vector4.x;\n        var vy: number = vector4.y;\n        var vz: number = vector4.z;\n        var vw: number = vector4.w;\n\n        var me: Float32Array = m4x4.elements;\n\n        out.x = vx * me[0] + vy * me[4] + vz * me[8] + vw * me[12];\n        out.y = vx * me[1] + vy * me[5] + vz * me[9] + vw * me[13];\n        out.z = vx * me[2] + vy * me[6] + vz * me[10] + vw * me[14];\n        out.w = vx * me[3] + vy * me[7] + vz * me[11] + vw * me[15];\n    }\n\n    /**\n     * 判断两个四维向量是否相等。\n     * @param\ta 四维向量。\n     * @param\tb 四维向量。\n     * @return  是否相等。\n     */\n    static equals(a: Vector4, b: Vector4): boolean {\n        return MathUtils3D.nearEqual(Math.abs(a.x), Math.abs(b.x)) && MathUtils3D.nearEqual(Math.abs(a.y), Math.abs(b.y)) && MathUtils3D.nearEqual(Math.abs(a.z), Math.abs(b.z)) && MathUtils3D.nearEqual(Math.abs(a.w), Math.abs(b.w));\n    }\n\n    /**\n     * 求四维向量是否相等\n     * @param value \n     * @returns \n     */\n    equal(value: Vector4) {\n        return Vector4.equals(this, value);\n    }\n\n    /**\n     * 求四维向量的长度。\n     * @return  长度。\n     */\n    length(): number {\n        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);\n    }\n\n    /**\n     * 求四维向量长度的平方。\n     * @return  长度的平方。\n     */\n    lengthSquared(): number {\n\n        return this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n    }\n\n    /**\n     * 归一化四维向量。\n     * @param\ts   源四维向量。\n     * @param\tout 输出四维向量。\n     */\n    static normalize(s: Vector4, out: Vector4): void {\n        var len: number = s.length();\n        if (len > 0) {\n            var inverse: number = 1.0 / len;\n            out.x = s.x * inverse;\n            out.y = s.y * inverse;\n            out.z = s.z * inverse;\n            out.w = s.w * inverse;\n        }\n    }\n\n    /**\n     * 求两个四维向量的和。\n     * @param\ta   四维向量。\n     * @param\tb   四维向量。\n     * @param\tout 输出向量。\n     */\n    static add(a: Vector4, b: Vector4, out: Vector4): void {\n        out.x = a.x + b.x;\n        out.y = a.y + b.y;\n        out.z = a.z + b.z;\n        out.w = a.w + b.w;\n    }\n\n    /**\n     * 求两个四维向量的差。\n     * @param\ta   四维向量。\n     * @param\tb   四维向量。\n     * @param\tout 输出向量。\n     */\n    static subtract(a: Vector4, b: Vector4, out: Vector4): void {\n        out.x = a.x - b.x;\n        out.y = a.y - b.y;\n        out.z = a.z - b.z;\n        out.w = a.w - b.w;\n    }\n\n    /**\n     * 计算两个四维向量的乘积。\n     * @param\ta   四维向量。\n     * @param\tb   四维向量。\n     * @param\tout 输出向量。\n     */\n    static multiply(a: Vector4, b: Vector4, out: Vector4): void {\n        out.x = a.x * b.x;\n        out.y = a.y * b.y;\n        out.z = a.z * b.z;\n        out.w = a.w * b.w;\n    }\n\n    /**\n     * 缩放四维向量。\n     * @param\ta   源四维向量。\n     * @param\tb   缩放值。\n     * @param\tout 输出四维向量。\n     */\n    static scale(a: Vector4, b: number, out: Vector4): void {\n        out.x = a.x * b;\n        out.y = a.y * b;\n        out.z = a.z * b;\n        out.w = a.w * b;\n    }\n\n    /**\n     * 求一个指定范围的四维向量\n     * @param\tvalue clamp向量\n     * @param\tmin   最小\n     * @param\tmax   最大\n     * @param   out   输出向量\n     */\n    static Clamp(value: Vector4, min: Vector4, max: Vector4, out: Vector4): void {\n        var x: number = value.x;\n        var y: number = value.y;\n        var z: number = value.z;\n        var w: number = value.w;\n\n        var mineX: number = min.x;\n        var mineY: number = min.y;\n        var mineZ: number = min.z;\n        var mineW: number = min.w;\n\n        var maxeX: number = max.x;\n        var maxeY: number = max.y;\n        var maxeZ: number = max.z;\n        var maxeW: number = max.w;\n\n        x = (x > maxeX) ? maxeX : x;\n        x = (x < mineX) ? mineX : x;\n\n        y = (y > maxeY) ? maxeY : y;\n        y = (y < mineY) ? mineY : y;\n\n        z = (z > maxeZ) ? maxeZ : z;\n        z = (z < mineZ) ? mineZ : z;\n\n        w = (w > maxeW) ? maxeW : w;\n        w = (w < mineW) ? mineW : w;\n\n        out.x = x;\n        out.y = y;\n        out.z = z;\n        out.w = w;\n    }\n\n    /**\n     * 两个四维向量距离的平方。\n     * @param\tvalue1 向量1。\n     * @param\tvalue2 向量2。\n     * @return\t距离的平方。\n     */\n    static distanceSquared(value1: Vector4, value2: Vector4): number {\n        var x: number = value1.x - value2.x;\n        var y: number = value1.y - value2.y;\n        var z: number = value1.z - value2.z;\n        var w: number = value1.w - value2.w;\n\n        return (x * x) + (y * y) + (z * z) + (w * w);\n    }\n\n    /**\n     * 两个四维向量距离。\n     * @param\tvalue1 向量1。\n     * @param\tvalue2 向量2。\n     * @return\t距离。\n     */\n    static distance(value1: Vector4, value2: Vector4): number {\n        var x: number = value1.x - value2.x;\n        var y: number = value1.y - value2.y;\n        var z: number = value1.z - value2.z;\n        var w: number = value1.w - value2.w;\n\n        return Math.sqrt((x * x) + (y * y) + (z * z) + (w * w));\n    }\n\n    /**\n     * 求两个四维向量的点积。\n     * @param\ta 向量。\n     * @param\tb 向量。\n     * @return  点积。\n     */\n    static dot(a: Vector4, b: Vector4): number {\n        return (a.x * b.x) + (a.y * b.y) + (a.z * b.z) + (a.w * b.w);\n    }\n\n    /**\n     * 分别取两个四维向量x、y、z的最小值计算新的四维向量。\n     * @param\ta   四维向量。\n     * @param\tb   四维向量。\n     * @param\tout 结果三维向量。\n     */\n    static min(a: Vector4, b: Vector4, out: Vector4): void {\n        out.x = Math.min(a.x, b.x);\n        out.y = Math.min(a.y, b.y);\n        out.z = Math.min(a.z, b.z);\n        out.w = Math.min(a.w, b.w);\n    }\n\n    /**\n     * 分别取两个四维向量x、y、z的最大值计算新的四维向量。\n     * @param\ta   四维向量。\n     * @param\tb   四维向量。\n     * @param\tout 结果三维向量。\n     */\n    static max(a: Vector4, b: Vector4, out: Vector4): void {\n        out.x = Math.max(a.x, b.x);\n        out.y = Math.max(a.y, b.y);\n        out.z = Math.max(a.z, b.z);\n        out.w = Math.max(a.w, b.w);\n    }\n\n    forNativeElement(nativeElements: Float32Array = null): void {\n        if (nativeElements) {\n            (<any>this).elements = nativeElements;\n            (<any>this).elements[0] = this.x;\n            (<any>this).elements[1] = this.y;\n            (<any>this).elements[2] = this.z;\n            (<any>this).elements[3] = this.w;\n        }\n        else {\n            (<any>this).elements = new Float32Array([this.x, this.y, this.z, this.w]);\n        }\n        Vector2.rewriteNumProperty(this, \"x\", 0);\n        Vector2.rewriteNumProperty(this, \"y\", 1);\n        Vector2.rewriteNumProperty(this, \"z\", 2);\n        Vector2.rewriteNumProperty(this, \"w\", 3);\n\n    }\n\n}\n\n","import { Vector4 } from \"./Vector4\";\nimport { Matrix4x4 } from \"./Matrix4x4\";\nimport { MathUtils3D } from \"./MathUtils3D\";\nimport { IClone } from \"../utils/IClone\";\nimport { Quaternion } from \"./Quaternion\";\n\n/**\n * <code>Vector3</code> 类用于创建三维向量。\n */\nexport class Vector3 implements IClone {\n    /**@internal\t*/\n    static _tempVector4 = new Vector4();\n    static _tempVector3 = new Vector3();\n\n    static readonly ZERO: Readonly<Vector3> = new Vector3(0.0, 0.0, 0.0);\n    static readonly ONE: Readonly<Vector3> = new Vector3(1.0, 1.0, 1.0);\n    static readonly NegativeUnitX: Readonly<Vector3> = new Vector3(-1, 0, 0);\n    static readonly UnitX: Readonly<Vector3> = new Vector3(1, 0, 0);\n    static readonly UnitY: Readonly<Vector3> = new Vector3(0, 1, 0);\n    static readonly UnitZ: Readonly<Vector3> = new Vector3(0, 0, 1);\n    static readonly ForwardRH: Readonly<Vector3> = new Vector3(0, 0, -1);\n    static readonly ForwardLH: Readonly<Vector3> = new Vector3(0, 0, 1);\n    static readonly Up: Readonly<Vector3> = new Vector3(0, 1, 0);\n\n    /**\n     * 两个三维向量距离的平方。\n     * @param\tvalue1 向量1。\n     * @param\tvalue2 向量2。\n     * @return\t距离的平方。\n     */\n    static distanceSquared(value1: Vector3, value2: Vector3): number {\n        var x: number = value1.x - value2.x;\n        var y: number = value1.y - value2.y;\n        var z: number = value1.z - value2.z;\n        return (x * x) + (y * y) + (z * z);\n    }\n\n    /**\n     * 两个三维向量距离。\n     * @param\tvalue1 向量1。\n     * @param\tvalue2 向量2。\n     * @return\t距离。\n     */\n    static distance(value1: Vector3, value2: Vector3): number {\n        var x: number = value1.x - value2.x;\n        var y: number = value1.y - value2.y;\n        var z: number = value1.z - value2.z;\n        return Math.sqrt((x * x) + (y * y) + (z * z));\n    }\n\n    /**\n     * 分别取两个三维向量x、y、z的最小值计算新的三维向量。\n     * @param\ta。\n     * @param\tb。\n     * @param\tout。\n     */\n    static min(a: Vector3, b: Vector3, out: Vector3): void {\n        out.x = Math.min(a.x, b.x);\n        out.y = Math.min(a.y, b.y);\n        out.z = Math.min(a.z, b.z);\n    }\n\n    /**\n     * 分别取两个三维向量x、y、z的最大值计算新的三维向量。\n     * @param\ta a三维向量。\n     * @param\tb b三维向量。\n     * @param\tout 结果三维向量。\n     */\n    static max(a: Vector3, b: Vector3, out: Vector3): void {\n        out.x = Math.max(a.x, b.x);\n        out.y = Math.max(a.y, b.y);\n        out.z = Math.max(a.z, b.z);\n    }\n\n    /**\n     * 根据四元数旋转三维向量。\n     * @param\tsource 源三维向量。\n     * @param\trotation 旋转四元数。\n     * @param\tout 输出三维向量。\n     */\n    static transformQuat(source: Vector3, rotation: Quaternion, out: Vector3): void {\n        var x: number = source.x, y: number = source.y, z: number = source.z, qx: number = rotation.x, qy: number = rotation.y, qz: number = rotation.z, qw: number = rotation.w,\n\n            ix: number = qw * x + qy * z - qz * y, iy: number = qw * y + qz * x - qx * z, iz: number = qw * z + qx * y - qy * x, iw: number = -qx * x - qy * y - qz * z;\n\n        out.x = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n        out.y = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n        out.z = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n    }\n\n    /**\n     * 计算标量长度。\n     * @param\ta 源三维向量。\n     * @return 标量长度。\n     */\n    static scalarLength(a: Vector3): number {\n        var x: number = a.x, y: number = a.y, z: number = a.z;\n        return Math.sqrt(x * x + y * y + z * z);\n    }\n\n    /**\n     * 计算标量长度的平方。\n     * @param\ta 源三维向量。\n     * @return 标量长度的平方。\n     */\n    static scalarLengthSquared(a: Vector3): number {\n        var x: number = a.x, y: number = a.y, z: number = a.z;\n        return x * x + y * y + z * z;\n    }\n\n    /**\n     * 归一化三维向量。\n     * @param\ts 源三维向量。\n     * @param\tout 输出三维向量。\n     */\n    static normalize(s: Vector3, out: Vector3): void {\n        var x: number = s.x, y: number = s.y, z: number = s.z;\n        var len: number = x * x + y * y + z * z;\n        if (len > 0) {\n            len = 1 / Math.sqrt(len);\n            out.x = x * len;\n            out.y = y * len;\n            out.z = z * len;\n        }\n    }\n\n\n\n    /**\n     * 计算两个三维向量的乘积。\n     * @param\ta left三维向量。\n     * @param\tb right三维向量。\n     * @param\tout 输出三维向量。\n     */\n    static multiply(a: Vector3, b: Vector3, out: Vector3): void {\n        out.x = a.x * b.x;\n        out.y = a.y * b.y;\n        out.z = a.z * b.z;\n    }\n\n    /**\n     * 缩放三维向量。\n     * @param\ta 源三维向量。\n     * @param\tb 缩放值。\n     * @param\tout 输出三维向量。\n     */\n    static scale(a: Vector3, b: number, out: Vector3): void {\n        out.x = a.x * b;\n        out.y = a.y * b;\n        out.z = a.z * b;\n    }\n\n    /**\n     * 插值三维向量。\n     * @param\ta left向量。\n     * @param\tb right向量。\n     * @param\tt 插值比例。\n     * @param\tout 输出向量。\n     */\n    static lerp(a: Vector3, b: Vector3, t: number, out: Vector3): void {\n        var ax: number = a.x, ay: number = a.y, az: number = a.z;\n        out.x = ax + t * (b.x - ax);\n        out.y = ay + t * (b.y - ay);\n        out.z = az + t * (b.z - az);\n    }\n\n    /**\n     * 通过矩阵转换一个三维向量到另外一个三维向量。\n     * @param\tvector 源三维向量。\n     * @param\ttransform  变换矩阵。\n     * @param\tresult 输出三维向量。\n     */\n    static transformV3ToV3(vector: Vector3, transform: Matrix4x4, result: Vector3): void {\n        var intermediate: Vector4 = Vector3._tempVector4;\n        Vector3.transformV3ToV4(vector, transform, intermediate);\n        result.x = intermediate.x;\n        result.y = intermediate.y;\n        result.z = intermediate.z;\n    }\n\n    /**\n     * 通过矩阵转换一个三维向量到另外一个四维向量。\n     * @param\tvector 源三维向量。\n     * @param\ttransform  变换矩阵。\n     * @param\tresult 输出四维向量。\n     */\n    static transformV3ToV4(vector: Vector3, transform: Matrix4x4, result: Vector4): void {\n        var vectorX: number = vector.x;\n        var vectorY: number = vector.y;\n        var vectorZ: number = vector.z;\n\n        var transformElem: Float32Array = transform.elements;\n        result.x = (vectorX * transformElem[0]) + (vectorY * transformElem[4]) + (vectorZ * transformElem[8]) + transformElem[12];\n        result.y = (vectorX * transformElem[1]) + (vectorY * transformElem[5]) + (vectorZ * transformElem[9]) + transformElem[13];\n        result.z = (vectorX * transformElem[2]) + (vectorY * transformElem[6]) + (vectorZ * transformElem[10]) + transformElem[14];\n        result.w = (vectorX * transformElem[3]) + (vectorY * transformElem[7]) + (vectorZ * transformElem[11]) + transformElem[15];\n    }\n\n    /**\n     * 通过法线矩阵转换一个法线三维向量到另外一个三维向量。\n     * @param\tnormal 源法线三维向量。\n     * @param\ttransform  法线变换矩阵。\n     * @param\tresult 输出法线三维向量。\n     */\n    static TransformNormal(normal: Vector3, transform: Matrix4x4, result: Vector3): void {\n        var normalX: number = normal.x;\n        var normalY: number = normal.y;\n        var normalZ: number = normal.z;\n\n        var transformElem: Float32Array = transform.elements;\n        result.x = (normalX * transformElem[0]) + (normalY * transformElem[4]) + (normalZ * transformElem[8]);\n        result.y = (normalX * transformElem[1]) + (normalY * transformElem[5]) + (normalZ * transformElem[9]);\n        result.z = (normalX * transformElem[2]) + (normalY * transformElem[6]) + (normalZ * transformElem[10]);\n    }\n\n    /**\n     * 通过矩阵转换一个三维向量到另外一个归一化的三维向量。\n     * @param\tvector 源三维向量。\n     * @param\ttransform  变换矩阵。\n     * @param\tresult 输出三维向量。\n     */\n    static transformCoordinate(coordinate: Vector3, transform: Matrix4x4, result: Vector3): void {\n        var coordinateX: number = coordinate.x;\n        var coordinateY: number = coordinate.y;\n        var coordinateZ: number = coordinate.z;\n\n        var transformElem: Float32Array = transform.elements;\n        var w: number = coordinateX * transformElem[3] + coordinateY * transformElem[7] + coordinateZ * transformElem[11] + transformElem[15];\n        result.x = (coordinateX * transformElem[0] + coordinateY * transformElem[4] + coordinateZ * transformElem[8] + transformElem[12]) / w;\n        result.y = (coordinateX * transformElem[1] + coordinateY * transformElem[5] + coordinateZ * transformElem[9] + transformElem[13]) / w;\n        result.z = (coordinateX * transformElem[2] + coordinateY * transformElem[6] + coordinateZ * transformElem[10] + transformElem[14]) / w;\n    }\n\n    /**\n     * 求一个指定范围的向量\n     * @param\tvalue clamp向量\n     * @param\tmin  最小\n     * @param\tmax  最大\n     * @param   out 输出向量\n     */\n    static Clamp(value: Vector3, min: Vector3, max: Vector3, out: Vector3): void {\n        var x: number = value.x;\n        var y: number = value.y;\n        var z: number = value.z;\n\n        var mineX: number = min.x;\n        var mineY: number = min.y;\n        var mineZ: number = min.z;\n\n        var maxeX: number = max.x;\n        var maxeY: number = max.y;\n        var maxeZ: number = max.z;\n\n        x = (x > maxeX) ? maxeX : x;\n        x = (x < mineX) ? mineX : x;\n\n        y = (y > maxeY) ? maxeY : y;\n        y = (y < mineY) ? mineY : y;\n\n        z = (z > maxeZ) ? maxeZ : z;\n        z = (z < mineZ) ? mineZ : z;\n\n        out.x = x;\n        out.y = y;\n        out.z = z;\n    }\n\n    /**\n     * 求两个三维向量的和。\n     * @param\ta left三维向量。\n     * @param\tb right三维向量。\n     * @param\tout 输出向量。\n     */\n    static add(a: Vector3, b: Vector3, out: Vector3): void {\n        out.x = a.x + b.x;\n        out.y = a.y + b.y;\n        out.z = a.z + b.z;\n    }\n\n    /**\n     * 求两个三维向量的差。\n     * @param\ta  left三维向量。\n     * @param\tb  right三维向量。\n     * @param\to out 输出向量。\n     */\n    static subtract(a: Vector3, b: Vector3, o: Vector3): void {\n        o.x = a.x - b.x;\n        o.y = a.y - b.y;\n        o.z = a.z - b.z;\n    }\n\n    /**\n     * 求两个三维向量的叉乘。\n     * @param\ta left向量。\n     * @param\tb right向量。\n     * @param\to 输出向量。\n     */\n    static cross(a: Vector3, b: Vector3, o: Vector3): void {\n        var ax: number = a.x, ay: number = a.y, az: number = a.z, bx: number = b.x, by: number = b.y, bz: number = b.z;\n        o.x = ay * bz - az * by;\n        o.y = az * bx - ax * bz;\n        o.z = ax * by - ay * bx;\n    }\n\n    /**\n     * 求两个三维向量的点积。\n     * @param\ta left向量。\n     * @param\tb right向量。\n     * @return   点积。\n     */\n    static dot(a: Vector3, b: Vector3): number {\n        return (a.x * b.x) + (a.y * b.y) + (a.z * b.z);\n    }\n\n    /**\n     * 判断两个三维向量是否相等。\n     * @param\ta 三维向量。\n     * @param\tb 三维向量。\n     * @return  是否相等。\n     */\n    static equals(a: Vector3, b: Vector3): boolean {\n        return MathUtils3D.nearEqual(a.x, b.x) && MathUtils3D.nearEqual(a.y, b.y) && MathUtils3D.nearEqual(a.z, b.z);\n    }\n\n    /**X轴坐标*/\n    x: number;\n    /**Y轴坐标*/\n    y: number;\n    /**Z轴坐标*/\n    z: number;\n\n    /**\n     * 创建一个 <code>Vector3</code> 实例。\n     * @param\tx  X轴坐标。\n     * @param\ty  Y轴坐标。\n     * @param\tz  Z轴坐标。\n     */\n    constructor(x: number = 0, y: number = 0, z: number = 0) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n\n    /**\n     * 求四维向量是否相等\n     * @param value \n     * @returns \n     */\n    equal(value: Vector3) {\n        return Vector3.equals(this, value);\n    }\n\n    /**\n     * 设置xyz值。\n     * @param\tx X值。\n     * @param\ty Y值。\n     * @param\tz Z值。\n     */\n    setValue(x: number, y: number, z: number): Vector3 {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n        return this;\n    }\n\n    /**\n     * 设置xyz值。\n     * @param\tx X值。\n     * @param\ty Y值。\n     * @param\tz Z值。\n     * @return 返回Vector3\n     */\n    set(x: number, y: number, z: number) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n        return this;\n    }\n\n    /**\n     * 从Array数组拷贝值。\n     * @param  arr 数组。\n     * @param  offset 数组偏移。\n     */\n    fromArray(arr: ArrayLike<number>, offset: number = 0): void {\n        this.x = arr[offset + 0];\n        this.y = arr[offset + 1];\n        this.z = arr[offset + 2];\n    }\n\n    /**\n     * 转换为Array数组\n     * @return\n     */\n    toArray(): Array<number> {\n        return [this.x, this.y, this.z];\n    }\n\n    /**\n     * 写入Array数组\n     * @param arr 数组。\n     * @param offset 数组偏移。 \n     */\n    writeTo(arr: Float32Array, offset: number = 0): void {\n        arr[offset + 0] = this.x;\n        arr[offset + 1] = this.y;\n        arr[offset + 2] = this.z;\n    }\n\n    /**\n     * 计算长度。\n     * @return 长度。\n     */\n    length() {\n        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n    }\n\n    /**\n     * 计算平方。\n     * @return 返回向量长度的平方。\n     */\n    lengthSquared() {\n        return this.x * this.x + this.y * this.y + this.z * this.z;\n    }\n\n    /**\n     * 向量相减\n     * @param b 被减向量\n     * @param out \n     * @returns \n     */\n    vsub(b: Vector3, out: Vector3) {\n        out.x = this.x - b.x;\n        out.y = this.y - b.y;\n        out.z = this.z - b.z;\n        return out;\n    }\n\n    /**\n     * 向量相加\n     * @param b 加向量\n     * @param out \n     * @returns \n     */\n    vadd(b: Vector3, out: Vector3) {\n        out.x = this.x + b.x;\n        out.y = this.y + b.y;\n        out.z = this.z + b.z;\n        return out;\n    }\n\n    /**\n     * 缩放向量\n     * @param s 缩放值\n     * @param out\n     * @returns 返回缩放向量\n     */\n    scale(s: number, out: Vector3) {\n        out.x = this.x * s;\n        out.y = this.y * s;\n        out.z = this.z * s;\n        return out;\n    }\n\n    /**\n     * 归一化向量\n     * @returns \n     */\n    normalize() {\n        let x = this.x, y = this.y, z = this.z;\n        var len = x * x + y * y + z * z;\n        if (len > 0) {\n            len = 1 / Math.sqrt(len);\n            this.x = x * len;\n            this.y = y * len;\n            this.z = z * len;\n        }\n        return this;\n    }\n\n    /**\n     * 向量点乘\n     * @param b \n     * @returns \n     */\n    dot(b: Vector3): number {\n        return (this.x * b.x) + (this.y * b.y) + (this.z * b.z);\n    }\n\n    /**\n     * 向量叉乘\n     * @param b \n     * @param o \n     * @returns \n     */\n    cross(b: Vector3, o: Vector3): Vector3 {\n        var ax = this.x, ay = this.y, az = this.z, bx = b.x, by = b.y, bz = b.z;\n        o.x = ay * bz - az * by;\n        o.y = az * bx - ax * bz;\n        o.z = ax * by - ay * bx;\n        return o;\n    }\n\n    /**\n     * 克隆。\n     * @param\tdestObject 克隆源。\n     */\n    cloneTo(destObject: any): void {\n        var destVector3: Vector3 = (<Vector3>destObject);\n        destVector3.x = this.x;\n        destVector3.y = this.y;\n        destVector3.z = this.z;\n    }\n\n    /**\n     * 克隆。\n     * @return\t 克隆副本。\n     */\n    clone(): any {\n        var destVector3: Vector3 = new Vector3();\n        this.cloneTo(destVector3);\n        return destVector3;\n    }\n\n    /**\n     * 设置默认值\n     */\n    toDefault(): void {\n        this.x = 0;\n        this.y = 0;\n        this.z = 0;\n    }\n}\n\n","import { Vector3 } from \"./Vector3\";\nimport { Vector2 } from \"./Vector2\";\nimport { Matrix4x4 } from \"./Matrix4x4\";\nimport { Quaternion } from \"./Quaternion\";\nimport { IClone } from \"../utils/IClone\";\n\nconst _DEFAULTELEMENTS = new Float32Array([1, 0, 0, 0, 1, 0, 0, 0, 1]);\nconst _tempV30 = new Vector3();\nconst _tempV31 = new Vector3();\nconst _tempV32 = new Vector3();\n\n/**\n * <code>Matrix3x3</code> 类用于创建3x3矩阵。\n */\nexport class Matrix3x3 implements IClone {\n    static readonly DEFAULT: Readonly<Matrix3x3> = new Matrix3x3();\n    static Temp: Matrix3x3 = new Matrix3x3();\n    /**\n     * 通过四元数创建旋转矩阵。\n     * @param rotation 旋转四元数。\n     * @param out 旋转矩阵。\n     */\n\n    static createRotationQuaternion(rotation: Quaternion, out: Matrix3x3) {\n        var rotX: number = rotation.x;\n        var rotY: number = rotation.y;\n        var rotZ: number = rotation.z;\n        var rotW: number = rotation.w;\n\n        var xx: number = rotX * rotX;\n        var yy: number = rotY * rotY;\n        var zz: number = rotZ * rotZ;\n        var xy: number = rotX * rotY;\n        var zw: number = rotZ * rotW;\n        var zx: number = rotZ * rotX;\n        var yw: number = rotY * rotW;\n        var yz: number = rotY * rotZ;\n        var xw: number = rotX * rotW;\n\n        var resultE: Float32Array = out.elements;\n        resultE[0] = 1.0 - (2.0 * (yy + zz));\n        resultE[1] = 2.0 * (xy + zw);\n        resultE[2] = 2.0 * (zx - yw);\n        resultE[3] = 2.0 * (xy - zw);\n        resultE[4] = 1.0 - (2.0 * (zz + xx));\n        resultE[5] = 2.0 * (yz + xw);\n        resultE[6] = 2.0 * (zx + yw);\n        resultE[7] = 2.0 * (yz - xw);\n        resultE[8] = 1.0 - (2.0 * (yy + xx));\n    }\n\n    /**\n     * 根据指定平移生成3x3矩阵\n     * @param\ttra 平移\n     * @param\tout 输出矩阵\n     */\n    static createFromTranslation(trans: Vector2, out: Matrix3x3): void {\n        var e: Float32Array = out.elements;\n        e[0] = 1;\n        e[1] = 0;\n        e[2] = 0;\n        e[3] = 0;\n        e[4] = 1;\n        e[5] = 0;\n        e[6] = trans.x;\n        e[7] = trans.y;\n        e[8] = 1;\n    }\n\n    /**\n     * 根据指定旋转生成3x3矩阵\n     * @param\trad  旋转值\n     * @param\tout 输出矩阵\n     */\n    static createFromRotation(rad: number, out: Matrix3x3): void {\n        var e: Float32Array = out.elements;\n\n        var s: number = Math.sin(rad), c: number = Math.cos(rad);\n\n        e[0] = c;\n        e[1] = s;\n        e[2] = 0;\n\n        e[3] = -s;\n        e[4] = c;\n        e[5] = 0;\n\n        e[6] = 0;\n        e[7] = 0;\n        e[8] = 1;\n    }\n\n    /**\n     * 根据制定缩放生成3x3矩阵\n     * @param\tscale 缩放值\n     * @param\tout 输出矩阵\n     */\n    static createFromScaling(scale: Vector3, out: Matrix3x3): void {\n        var e: Float32Array = out.elements;\n\n        e[0] = scale.x;\n        e[1] = 0;\n        e[2] = 0;\n\n        e[3] = 0;\n        e[4] = scale.y;\n        e[5] = 0;\n\n        e[6] = 0;\n        e[7] = 0;\n        e[8] = scale.z;\n    }\n\n    /**\n     * 从4x4矩阵转换为一个3x3的矩阵（原则为upper-left,忽略第四行四列）\n     * @param\tsou 4x4源矩阵\n     * @param\tout 3x3输出矩阵\n     */\n    static createFromMatrix4x4(sou: Matrix4x4, out: Matrix3x3): void {\n        var souE: Float32Array = sou.elements;\n        var outE: Float32Array = out.elements;\n        outE[0] = souE[0];\n        outE[1] = souE[1];\n        outE[2] = souE[2];\n        outE[3] = souE[4];\n        outE[4] = souE[5];\n        outE[5] = souE[6];\n        outE[6] = souE[8];\n        outE[7] = souE[9];\n        outE[8] = souE[10];\n    }\n\n    /**\n     *  两个3x3矩阵的相乘\n     * @param\tleft 左矩阵\n     * @param\tright  右矩阵\n     * @param\tout  输出矩阵\n     */\n    static multiply(left: Matrix3x3, right: Matrix3x3, out: Matrix3x3): void {\n        var l: Float32Array = left.elements;\n        var r: Float32Array = right.elements;\n        var e: Float32Array = out.elements;\n\n        var l11: number = l[0], l12: number = l[1], l13: number = l[2];\n        var l21: number = l[3], l22: number = l[4], l23: number = l[5];\n        var l31: number = l[6], l32: number = l[7], l33: number = l[8];\n\n        var r11: number = r[0], r12: number = r[1], r13: number = r[2];\n        var r21: number = r[3], r22: number = r[4], r23: number = r[5];\n        var r31: number = r[6], r32: number = r[7], r33: number = r[8];\n\n        e[0] = r11 * l11 + r12 * l21 + r13 * l31;\n        e[1] = r11 * l12 + r12 * l22 + r13 * r32;\n        e[2] = r11 * l13 + r12 * l23 + r13 * l33;\n\n        e[3] = r21 * l11 + r22 * l21 + r23 * l31;\n        e[4] = r21 * l12 + r22 * l22 + r23 * l32;\n        e[5] = r21 * l13 + r22 * l23 + r23 * l33;\n\n        e[6] = r31 * l11 + r32 * l21 + r33 * l31;\n        e[7] = r31 * l12 + r32 * l22 + r33 * l32;\n        e[8] = r31 * l13 + r32 * l23 + r33 * l33;\n    }\n\n    /**矩阵元素数组*/\n    elements: Float32Array;\n\n    /**\n     * 创建一个 <code>Matrix3x3</code> 实例。\n     */\n    constructor(createElement: boolean = true) {\n        createElement && (this.elements = _DEFAULTELEMENTS.slice());\n    }\n    /**\n     * 克隆\n     * @param destObject \n     */\n    cloneByArray(destObject: Float32Array) {\n        this.elements.set(destObject);\n    }\n    /**\n     * 计算3x3矩阵的行列式\n     * @return    矩阵的行列式\n     */\n    determinant(): number {\n        var f: Float32Array = this.elements;\n\n        var a00: number = f[0], a01: number = f[1], a02: number = f[2];\n        var a10: number = f[3], a11: number = f[4], a12: number = f[5];\n        var a20: number = f[6], a21: number = f[7], a22: number = f[8];\n\n        return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n    }\n\n    /**\n     * 通过一个二维向量转换3x3矩阵\n     * @param\ttra 转换向量\n     * @param\tout 输出矩阵\n     */\n    translate(trans: Vector2, out: Matrix3x3): void {\n        var e: Float32Array = out.elements;\n        var f: Float32Array = this.elements;\n\n        var a00: number = f[0], a01: number = f[1], a02: number = f[2];\n        var a10: number = f[3], a11: number = f[4], a12: number = f[5];\n        var a20: number = f[6], a21: number = f[7], a22: number = f[8];\n        var x: number = trans.x, y: number = trans.y;\n\n        e[0] = a00;\n        e[1] = a01;\n        e[2] = a02;\n\n        e[3] = a10;\n        e[4] = a11;\n        e[5] = a12;\n\n        e[6] = x * a00 + y * a10 + a20;\n        e[7] = x * a01 + y * a11 + a21;\n        e[8] = x * a02 + y * a12 + a22;\n    }\n\n    /**\n     * 根据指定角度旋转3x3矩阵\n     * @param\trad 旋转角度\n     * @param\tout 输出矩阵\n     */\n    rotate(rad: number, out: Matrix3x3): void {\n        var e: Float32Array = out.elements;\n        var f: Float32Array = this.elements;\n\n        var a00: number = f[0], a01: number = f[1], a02: number = f[2];\n        var a10: number = f[3], a11: number = f[4], a12: number = f[5];\n        var a20: number = f[6], a21: number = f[7], a22: number = f[8];\n\n        var s: number = Math.sin(rad);\n        var c: number = Math.cos(rad);\n\n        e[0] = c * a00 + s * a10;\n        e[1] = c * a01 + s * a11;\n        e[2] = c * a02 + s * a12;\n\n        e[3] = c * a10 - s * a00;\n        e[4] = c * a11 - s * a01;\n        e[5] = c * a12 - s * a02;\n\n        e[6] = a20;\n        e[7] = a21;\n        e[8] = a22;\n    }\n\n    /**\n     *根据制定缩放3x3矩阵\n     * @param\tscale 缩放值\n     * @param\tout 输出矩阵\n     */\n    scale(scale: Vector2, out: Matrix3x3): void {\n        var e: Float32Array = out.elements;\n        var f: Float32Array = this.elements;\n\n        var x: number = scale.x, y: number = scale.y;\n\n        e[0] = x * f[0];\n        e[1] = x * f[1];\n        e[2] = x * f[2];\n\n        e[3] = y * f[3];\n        e[4] = y * f[4];\n        e[5] = y * f[5];\n\n        e[6] = f[6];\n        e[7] = f[7];\n        e[8] = f[8];\n    }\n\n    /**\n     * 计算3x3矩阵的逆矩阵\n     * @param\tout 输出的逆矩阵\n     */\n    invert(out: Matrix3x3): void {\n        var e = out.elements;\n        var f = this.elements;\n\n        var a00 = f[0], a01 = f[1], a02 = f[2];\n        var a10 = f[3], a11 = f[4], a12 = f[5];\n        var a20 = f[6], a21 = f[7], a22 = f[8];\n\n        var b01: number = a22 * a11 - a12 * a21;\n        var b11: number = -a22 * a10 + a12 * a20;\n        var b21: number = a21 * a10 - a11 * a20;\n\n        // Calculate the determinant\n        var det: number = a00 * b01 + a01 * b11 + a02 * b21;\n\n        if (!det) {\n            return;\n        }\n        det = 1.0 / det;\n\n        e[0] = b01 * det;\n        e[1] = (-a22 * a01 + a02 * a21) * det;\n        e[2] = (a12 * a01 - a02 * a11) * det;\n        e[3] = b11 * det;\n        e[4] = (a22 * a00 - a02 * a20) * det;\n        e[5] = (-a12 * a00 + a02 * a10) * det;\n        e[6] = b21 * det;\n        e[7] = (-a21 * a00 + a01 * a20) * det;\n        e[8] = (a11 * a00 - a01 * a10) * det;\n    }\n\n    /**\n     * 计算3x3矩阵的转置矩阵\n     * @param \tout 输出矩阵\n     */\n    transpose(out: Matrix3x3): void {\n        var e: Float32Array = out.elements;\n        var f: Float32Array = this.elements;\n\n        if (out === this) {\n            var a01: number = f[1], a02: number = f[2], a12: number = f[5];\n            e[1] = f[3];\n            e[2] = f[6];\n            e[3] = a01;\n            e[5] = f[7];\n            e[6] = a02;\n            e[7] = a12;\n        } else {\n            e[0] = f[0];\n            e[1] = f[3];\n            e[2] = f[6];\n            e[3] = f[1];\n            e[4] = f[4];\n            e[5] = f[7];\n            e[6] = f[2];\n            e[7] = f[5];\n            e[8] = f[8];\n        }\n    }\n\n    /** 设置已有的矩阵为单位矩阵*/\n    identity(): void {\n        this.elements.set(_DEFAULTELEMENTS);\n        /*\n        var e: Float32Array = this.elements;\n        e[0] = 1;\n        e[1] = 0;\n        e[2] = 0;\n        e[3] = 0;\n        e[4] = 1;\n        e[5] = 0;\n        e[6] = 0;\n        e[7] = 0;\n        e[8] = 1;*/\n    }\n\n    /**\n     * 克隆。\n     * @param\tdestObject 克隆源。\n     */\n    cloneTo(destObject: any): void {\n        var i: number, s: Float32Array, d: Float32Array;\n        s = this.elements;\n        d = destObject.elements;\n        if (s === d) {\n            return;\n        }\n        d.set(s);\n        /*\n        for (i = 0; i < 9; ++i) {\n            d[i] = s[i];\n        }*/\n    }\n\n    /**\n     * 克隆。\n     * @return\t 克隆副本。\n     */\n    clone(): any {\n        var dest: Matrix3x3 = new Matrix3x3(false);\n        dest.elements = this.elements.slice();\n        return dest;\n    }\n\n    /**\n     * 计算观察3x3矩阵\n     * @param\teye    观察者位置\n     * @param\ttarget 目标位置\n     * @param\tup     上向量\n     * @param\tout    输出3x3矩阵\n     */\n    static lookAt(eye: Vector3, target: Vector3, up: Vector3, out: Matrix3x3): void {\n        Vector3.subtract(eye, target, _tempV30);//WebGL为右手坐标系统\n        Vector3.normalize(_tempV30, _tempV30);\n\n        Vector3.cross(up, _tempV30, _tempV31);\n        Vector3.normalize(_tempV31, _tempV31);\n\n        Vector3.cross(_tempV30, _tempV31, _tempV32);\n\n        var v0: Vector3 = _tempV30;\n        var v1: Vector3 = _tempV31;\n        var v2: Vector3 = _tempV32;\n\n        var me: Float32Array = out.elements;\n        me[0] = v1.x;\n        me[3] = v1.y;\n        me[6] = v1.z;\n\n        me[1] = v2.x;\n        me[4] = v2.y;\n        me[7] = v2.z;\n\n        me[2] = v0.x;\n        me[5] = v0.y;\n        me[8] = v0.z;\n    }\n\n    /**\n     * forward看向target\n     * forward在这里规定为z轴\n     * @param eye \n     * @param target 目标\n     * @param up \n     * @param out \n     */\n    static forwardLookAt(eye: Vector3, target: Vector3, up: Vector3, out: Matrix3x3): void {\n        var vx = _tempV31;\n        var vy = _tempV32;\n        var vz = _tempV30;\n\n        target.vsub(eye, vz).normalize();\n        up.cross(vz, vx).normalize();\n        vz.cross(vx, vy);\n\n        var m = out.elements;\n        m[0] = vx.x; m[1] = vx.y; m[2] = vx.z;\n        m[3] = vy.x; m[4] = vy.y; m[5] = vy.z;\n        m[6] = vz.x; m[7] = vz.y; m[8] = vz.z;\n    }\n}","import { Vector3 } from \"./Vector3\";\nimport { Matrix4x4 } from \"./Matrix4x4\";\nimport { Matrix3x3 } from \"./Matrix3x3\";\nimport { MathUtils3D } from \"./MathUtils3D\";\nimport { Vector2 } from \"./Vector2\";\nimport { IClone } from \"../utils/IClone\";\n\nconst TEMPVector30 = new Vector3();\nconst TEMPVector31 = new Vector3();\nconst TEMPVector32 = new Vector3();\nconst TEMPVector33 = new Vector3();\nconst _tempMatrix3x3 = new Matrix3x3();\n\n/**\n * <code>Quaternion</code> 类用于创建四元数。\n */\nexport class Quaternion implements IClone {\n\n    /**@internal */\n    static TEMP = new Quaternion();\n\n    /**默认矩阵,禁止修改*/\n    static readonly DEFAULT: Readonly<Quaternion> = new Quaternion();\n    /**无效矩阵,禁止修改*/\n    static readonly NAN: Readonly<Quaternion> = new Quaternion(NaN, NaN, NaN, NaN);\n\n    /**\n     *  从欧拉角生成四元数（顺序为Yaw、Pitch、Roll）\n     * @param\tyaw yaw值\n     * @param\tpitch pitch值\n     * @param\troll roll值\n     * @param\tout 输出四元数\n     */\n    static createFromYawPitchRoll(yaw: number, pitch: number, roll: number, out: Quaternion): void {\n        var halfRoll: number = roll * 0.5;\n        var halfPitch: number = pitch * 0.5;\n        var halfYaw: number = yaw * 0.5;\n\n        var sinRoll: number = Math.sin(halfRoll);\n        var cosRoll: number = Math.cos(halfRoll);\n        var sinPitch: number = Math.sin(halfPitch);\n        var cosPitch: number = Math.cos(halfPitch);\n        var sinYaw: number = Math.sin(halfYaw);\n        var cosYaw: number = Math.cos(halfYaw);\n\n\n        out.x = (cosYaw * sinPitch * cosRoll) + (sinYaw * cosPitch * sinRoll);\n        out.y = (sinYaw * cosPitch * cosRoll) - (cosYaw * sinPitch * sinRoll);\n        out.z = (cosYaw * cosPitch * sinRoll) - (sinYaw * sinPitch * cosRoll);\n        out.w = (cosYaw * cosPitch * cosRoll) + (sinYaw * sinPitch * sinRoll);\n    }\n\n    /**\n     * 计算两个四元数相乘\n     * @param\tleft left四元数\n     * @param\tright  right四元数\n     * @param\tout 输出四元数\n     */\n    static multiply(left: Quaternion, right: Quaternion, out: Quaternion): void {\n        var lx: number = left.x;\n        var ly: number = left.y;\n        var lz: number = left.z;\n        var lw: number = left.w;\n        var rx: number = right.x;\n        var ry: number = right.y;\n        var rz: number = right.z;\n        var rw: number = right.w;\n        var a: number = (ly * rz - lz * ry);\n        var b: number = (lz * rx - lx * rz);\n        var c: number = (lx * ry - ly * rx);\n        var d: number = (lx * rx + ly * ry + lz * rz);\n        out.x = (lx * rw + rx * lw) + a;\n        out.y = (ly * rw + ry * lw) + b;\n        out.z = (lz * rw + rz * lw) + c;\n        out.w = lw * rw - d;\n    }\n\n    /**\n   * Calculate a quaternion rotates around an arbitrary axis.\n   * @param axis - The axis\n   * @param rad - The rotation angle in radians\n   * @param out - The quaternion after rotate\n   */\n    static rotationAxisAngle(axis: Vector3, rad: number, out: Quaternion): void {\n        const normalAxis = Vector3._tempVector3\n        Vector3.normalize(axis, normalAxis);\n        rad *= 0.5;\n        const s = Math.sin(rad);\n        out.x = normalAxis.x * s;\n        out.y = normalAxis.y * s;\n        out.z = normalAxis.z * s;\n        out.w = Math.cos(rad);\n    }\n\n    private static arcTanAngle(x: number, y: number): number {\n        if (x == 0) {\n            if (y == 1)\n                return Math.PI / 2;\n            return -Math.PI / 2;\n        }\n        if (x > 0)\n            return Math.atan(y / x);\n        if (x < 0) {\n            if (y > 0)\n                return Math.atan(y / x) + Math.PI;\n            return Math.atan(y / x) - Math.PI;\n        }\n        return 0;\n    }\n\n    private static angleTo(from: Vector3, location: Vector3, angle: Vector3): void {\n        Vector3.subtract(location, from, TEMPVector30);\n        Vector3.normalize(TEMPVector30, TEMPVector30);\n\n        angle.x = Math.asin(TEMPVector30.y);\n        angle.y = Quaternion.arcTanAngle(-TEMPVector30.z, -TEMPVector30.x);\n    }\n\n    /**\n     * 从指定的轴和角度计算四元数\n     * @param\taxis  轴\n     * @param\trad  角度\n     * @param\tout  输出四元数\n     */\n    static createFromAxisAngle(axis: Vector3, rad: number, out: Quaternion): void {\n        rad = rad * 0.5;\n        var s: number = Math.sin(rad);\n        out.x = s * axis.x;\n        out.y = s * axis.y;\n        out.z = s * axis.z;\n        out.w = Math.cos(rad);\n    }\n\n\n    /**\n     *  从旋转矩阵计算四元数\n     * @param\tmat 旋转矩阵\n     * @param\tout  输出四元数\n     */\n    static createFromMatrix4x4(mat: Matrix4x4, out: Quaternion): void {\n        var me: Float32Array = mat.elements;\n\n        var sqrt: number;\n        var half: number;\n        var scale: number = me[0] + me[5] + me[10];\n\n        if (scale > 0.0) {\n            sqrt = Math.sqrt(scale + 1.0);\n            out.w = sqrt * 0.5;\n            sqrt = 0.5 / sqrt;\n\n            out.x = (me[6] - me[9]) * sqrt;\n            out.y = (me[8] - me[2]) * sqrt;\n            out.z = (me[1] - me[4]) * sqrt;\n        } else if ((me[0] >= me[5]) && (me[0] >= me[10])) {\n            sqrt = Math.sqrt(1.0 + me[0] - me[5] - me[10]);\n            half = 0.5 / sqrt;\n\n            out.x = 0.5 * sqrt;\n            out.y = (me[1] + me[4]) * half;\n            out.z = (me[2] + me[8]) * half;\n            out.w = (me[6] - me[9]) * half;\n        } else if (me[5] > me[10]) {\n            sqrt = Math.sqrt(1.0 + me[5] - me[0] - me[10]);\n            half = 0.5 / sqrt;\n\n            out.x = (me[4] + me[1]) * half;\n            out.y = 0.5 * sqrt;\n            out.z = (me[9] + me[6]) * half;\n            out.w = (me[8] - me[2]) * half;\n        } else {\n            sqrt = Math.sqrt(1.0 + me[10] - me[0] - me[5]);\n            half = 0.5 / sqrt;\n\n            out.x = (me[8] + me[2]) * half;\n            out.y = (me[9] + me[6]) * half;\n            out.z = 0.5 * sqrt;\n            out.w = (me[1] - me[4]) * half;\n        }\n\n    }\n\n    /**\n     * 球面插值\n     * @param\tleft left四元数\n     * @param\tright  right四元数\n     * @param\tt 插值比例\n     * @param\tout 输出四元数\n     * @returns 输出Float32Array\n     */\n    static slerp(left: Quaternion, right: Quaternion, t: number, out: Quaternion): Quaternion {\n        var ax: number = left.x, ay: number = left.y, az: number = left.z, aw: number = left.w, bx: number = right.x, by: number = right.y, bz: number = right.z, bw: number = right.w;\n\n        var omega: number, cosom: number, sinom: number, scale0: number, scale1: number;\n\n        // calc cosine \n        cosom = ax * bx + ay * by + az * bz + aw * bw;\n        // adjust signs (if necessary) \n        if (cosom < 0.0) {\n            cosom = -cosom;\n            bx = -bx;\n            by = -by;\n            bz = -bz;\n            bw = -bw;\n        }\n        // calculate coefficients \n        if ((1.0 - cosom) > 0.000001) {\n            // standard case (slerp) \n            omega = Math.acos(cosom);\n            sinom = Math.sin(omega);\n            scale0 = Math.sin((1.0 - t) * omega) / sinom;\n            scale1 = Math.sin(t * omega) / sinom;\n        } else {\n            // \"from\" and \"to\" quaternions are very close  \n            //  ... so we can do a linear interpolation \n            scale0 = 1.0 - t;\n            scale1 = t;\n        }\n        // calculate final values \n        out.x = scale0 * ax + scale1 * bx;\n        out.y = scale0 * ay + scale1 * by;\n        out.z = scale0 * az + scale1 * bz;\n        out.w = scale0 * aw + scale1 * bw;\n\n        return out;\n    }\n\n    /**\n     * 计算两个四元数的线性插值\n     * @param\tleft left四元数\n     * @param\tright right四元数b\n     * @param\tt 插值比例\n     * @param\tout 输出四元数\n     */\n    static lerp(left: Quaternion, right: Quaternion, amount: number, out: Quaternion): void {\n        var inverse: number = 1.0 - amount;\n        if (Quaternion.dot(left, right) >= 0) {\n            out.x = (inverse * left.x) + (amount * right.x);\n            out.y = (inverse * left.y) + (amount * right.y);\n            out.z = (inverse * left.z) + (amount * right.z);\n            out.w = (inverse * left.w) + (amount * right.w);\n        } else {\n            out.x = (inverse * left.x) - (amount * right.x);\n            out.y = (inverse * left.y) - (amount * right.y);\n            out.z = (inverse * left.z) - (amount * right.z);\n            out.w = (inverse * left.w) - (amount * right.w);\n        }\n        out.normalize(out);\n    }\n\n    /**\n     * 计算两个四元数的和\n     * @param\tleft  left四元数\n     * @param\tright right 四元数\n     * @param\tout 输出四元数\n     */\n    static add(left: Quaternion, right: Quaternion, out: Quaternion): void {\n        out.x = left.x + right.x;\n        out.y = left.y + right.y;\n        out.z = left.z + right.z;\n        out.w = left.w + right.w;\n    }\n\n    /**\n     * 计算两个四元数的点积\n     * @param\tleft left四元数\n     * @param\tright right四元数\n     * @return  点积\n     */\n    static dot(left: Quaternion, right: Quaternion): number {\n        return left.x * right.x + left.y * right.y + left.z * right.z + left.w * right.w;\n    }\n\n    /**X轴坐标*/\n    x: number;\n    /**Y轴坐标*/\n    y: number;\n    /**Z轴坐标*/\n    z: number;\n    /**W轴坐标*/\n    w: number;\n\n    /**\n     * 创建一个 <code>Quaternion</code> 实例。\n     * @param\tx 四元数的x值\n     * @param\ty 四元数的y值\n     * @param\tz 四元数的z值\n     * @param\tw 四元数的w值\n     */\n    constructor(x: number = 0, y: number = 0, z: number = 0, w: number = 1) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n        this.w = w;\n    }\n\n    /**\n     * 设置四元数的值。\n     * @param\tx X值。\n     * @param\ty Y值。\n     * @param\tz Z值。\n     */\n    setValue(x: number, y: number, z: number, w: number): void {\n        this.x = x; this.y = y; this.z = z; this.w = w;\n    }\n\n    /**\n     * 设置四元数的值。\n     * @param\tx X值。\n     * @param\ty Y值。\n     * @param\tz Z值。\n     * @return 返回四元数\n     */\n    set(x: number, y: number, z: number, w: number) {\n        this.x = x; this.y = y; this.z = z; this.w = w;\n        return this;\n    }\n    /**\n     * 根据缩放值缩放四元数\n     * @param\tscale 缩放值\n     * @param\tout 输出四元数\n     */\n    scaling(scaling: number, out: Quaternion): void {\n        out.x = this.x * scaling;\n        out.y = this.y * scaling;\n        out.z = this.z * scaling;\n        out.w = this.w * scaling;\n    }\n\n    /**\n     * 归一化四元数\n     * @param\tout 输出四元数\n     */\n    normalize(out: Quaternion): void {\n        var len: number = this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n        if (len > 0) {\n            len = 1 / Math.sqrt(len);\n            out.x = this.x * len;\n            out.y = this.y * len;\n            out.z = this.z * len;\n            out.w = this.w * len;\n        }\n    }\n\n    /**\n     * 计算四元数的长度\n     * @return  长度\n     */\n    length(): number {\n        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);\n    }\n\n    /**\n     * 根据绕X轴的角度旋转四元数\n     * @param\trad 角度\n     * @param\tout 输出四元数\n     */\n    rotateX(rad: number, out: Quaternion): void {\n        rad *= 0.5;\n\n        var bx: number = Math.sin(rad), bw: number = Math.cos(rad);\n\n        out.x = this.x * bw + this.w * bx;\n        out.y = this.y * bw + this.z * bx;\n        out.z = this.z * bw - this.y * bx;\n        out.w = this.w * bw - this.x * bx;\n    }\n\n    /**\n     * 根据绕Y轴的制定角度旋转四元数\n     * @param\trad 角度\n     * @param\tout 输出四元数\n     */\n    rotateY(rad: number, out: Quaternion): void {\n        rad *= 0.5;\n\n        var by: number = Math.sin(rad), bw: number = Math.cos(rad);\n\n        out.x = this.x * bw - this.z * by;\n        out.y = this.y * bw + this.w * by;\n        out.z = this.z * bw + this.x * by;\n        out.w = this.w * bw - this.y * by;\n    }\n\n    /**\n     * 根据绕Z轴的制定角度旋转四元数\n     * @param\trad 角度\n     * @param\tout 输出四元数\n     */\n    rotateZ(rad: number, out: Quaternion): void {\n        rad *= 0.5;\n        var bz: number = Math.sin(rad), bw: number = Math.cos(rad);\n\n        out.x = this.x * bw + this.y * bz;\n        out.y = this.y * bw - this.x * bz;\n        out.z = this.z * bw + this.w * bz;\n        out.w = this.w * bw - this.z * bz;\n    }\n\n    /**\n     * 分解四元数到欧拉角（顺序为Yaw、Pitch、Roll），参考自http://xboxforums.create.msdn.com/forums/p/4574/23988.aspx#23988,问题绕X轴翻转超过±90度时有，会产生瞬间反转\n     * @param\tquaternion 源四元数\n     * @param\tout 欧拉角值\n     */\n    getYawPitchRoll(out: Vector3): void {\n\n        Vector3.transformQuat(Vector3.ForwardRH, this, TEMPVector31/*forwarldRH*/);\n\n        Vector3.transformQuat(Vector3.Up, this, TEMPVector32/*up*/);\n        var upe: Vector3 = TEMPVector32;\n\n        Quaternion.angleTo(Vector3.ZERO, TEMPVector31, TEMPVector33/*angle*/);\n        var angle: Vector3 = TEMPVector33;\n\n        if (angle.x == Math.PI / 2) {\n            angle.y = Quaternion.arcTanAngle(upe.z, upe.x);\n            angle.z = 0;\n        } else if (angle.x == -Math.PI / 2) {\n            angle.y = Quaternion.arcTanAngle(-upe.z, -upe.x);\n            angle.z = 0;\n        } else {\n            Matrix4x4.createRotationY(-angle.y, Matrix4x4.TEMPMatrix0);\n            Matrix4x4.createRotationX(-angle.x, Matrix4x4.TEMPMatrix1);\n\n            Vector3.transformCoordinate(TEMPVector32, Matrix4x4.TEMPMatrix0, TEMPVector32);\n            Vector3.transformCoordinate(TEMPVector32, Matrix4x4.TEMPMatrix1, TEMPVector32);\n            angle.z = Quaternion.arcTanAngle(upe.y, -upe.x);\n        }\n\n        // Special cases.\n        if (angle.y <= -Math.PI)\n            angle.y = Math.PI;\n        if (angle.z <= -Math.PI)\n            angle.z = Math.PI;\n\n        if (angle.y >= Math.PI && angle.z >= Math.PI) {\n            angle.y = 0;\n            angle.z = 0;\n            angle.x = Math.PI - angle.x;\n        }\n\n        var oe: Vector3 = out;\n        oe.x = angle.y;\n        oe.y = angle.x;\n        oe.z = angle.z;\n    }\n\n    /**\n     * 求四元数的逆\n     * @param\tout  输出四元数\n     */\n    invert(out: Quaternion): void {\n        var a0: number = this.x, a1: number = this.y, a2: number = this.z, a3: number = this.w;\n        var dot: number = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\n        var invDot: number = dot ? 1.0 / dot : 0;\n\n        // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n        out.x = -a0 * invDot;\n        out.y = -a1 * invDot;\n        out.z = -a2 * invDot;\n        out.w = a3 * invDot;\n    }\n\n    /**\n     *设置四元数为单位算数\n     * @param out  输出四元数\n     */\n    identity(): void {\n        this.x = 0;\n        this.y = 0;\n        this.z = 0;\n        this.w = 1;\n    }\n\n    /**\n     * 从Array数组拷贝值。\n     * @param  array 数组。\n     * @param  offset 数组偏移。\n     */\n    fromArray(array: any[], offset: number = 0): void {\n        this.x = array[offset + 0];\n        this.y = array[offset + 1];\n        this.z = array[offset + 2];\n        this.w = array[offset + 3];\n    }\n\n    /**\n     * 克隆。\n     * @param\tdestObject 克隆源。\n     */\n    cloneTo(destObject: any): void {\n        if (this === destObject) {\n            return;\n        }\n        destObject.x = this.x;\n        destObject.y = this.y;\n        destObject.z = this.z;\n        destObject.w = this.w;\n    }\n\n    /**\n     * 克隆。\n     * @return\t 克隆副本。\n     */\n    clone(): any {\n        var dest: Quaternion = new Quaternion();\n        this.cloneTo(dest);\n        return dest;\n    }\n\n    equals(b: Quaternion): boolean {\n        return MathUtils3D.nearEqual(this.x, b.x) && MathUtils3D.nearEqual(this.y, b.y) && MathUtils3D.nearEqual(this.z, b.z) && MathUtils3D.nearEqual(this.w, b.w);\n    }\n\n    /**\n     * 计算旋转观察四元数\n     * @param\tforward 方向\n     * @param\tup     上向量\n     * @param\tout    输出四元数\n     */\n    static rotationLookAt(forward: Vector3, up: Vector3, out: Quaternion): void {\n        Quaternion.lookAt(Vector3.ZERO, forward, up, out);\n    }\n\n    /**\n     * 计算观察四元数（适用Camera 灯光）\n     * @param\teye    观察者位置\n     * @param\ttarget 目标位置\n     * @param\tup     上向量\n     * @param\tout    输出四元数\n     */\n    static lookAt(eye: Vector3, target: Vector3, up: Vector3, out: Quaternion): void {\n        Matrix3x3.lookAt(eye, target, up, _tempMatrix3x3);\n        Quaternion.rotationMatrix(_tempMatrix3x3, out);\n    }\n\n    /**\n     * 计算观察四元数（适用gameObject）\n     * @param eye 观察者位置\n     * @param target 目标位置\n     * @param up 上向量\n     * @param out 输出四元数\n     */\n    static forwardLookAt(eye: Vector3, target: Vector3, up: Vector3, out: Quaternion): void {\n        Matrix3x3.forwardLookAt(eye, target, up, _tempMatrix3x3);\n        Quaternion.rotationMatrix(_tempMatrix3x3, out);\n    }\n\n    /**\n     * 计算长度的平方。\n     * @return 长度的平方。\n     */\n    lengthSquared(): number {\n        return (this.x * this.x) + (this.y * this.y) + (this.z * this.z) + (this.w * this.w);\n    }\n\n    /**\n     * 计算四元数的逆四元数。\n     * @param\tvalue 四元数。\n     * @param\tout 逆四元数。\n     */\n    static invert(value: Quaternion, out: Quaternion): void {\n        var lengthSq: number = value.lengthSquared();\n        if (!MathUtils3D.isZero(lengthSq)) {\n            lengthSq = 1.0 / lengthSq;\n\n            out.x = -value.x * lengthSq;\n            out.y = -value.y * lengthSq;\n            out.z = -value.z * lengthSq;\n            out.w = value.w * lengthSq;\n        }\n    }\n\n    /**\n     * 通过一个3x3矩阵创建一个四元数\n     * @param\tmatrix3x3  3x3矩阵\n     * @param\tout        四元数\n     */\n    static rotationMatrix(matrix3x3: Matrix3x3, out: Quaternion): void {\n        var me: Float32Array = matrix3x3.elements;\n        var m11: number = me[0];\n        var m12: number = me[1];\n        var m13: number = me[2];\n        var m21: number = me[3];\n        var m22: number = me[4];\n        var m23: number = me[5];\n        var m31: number = me[6];\n        var m32: number = me[7];\n        var m33: number = me[8];\n\n        var sqrt: number, half: number;\n        var scale: number = m11 + m22 + m33;\n\n        if (scale > 0) {\n\n            sqrt = Math.sqrt(scale + 1);\n            out.w = sqrt * 0.5;\n            sqrt = 0.5 / sqrt;\n\n            out.x = (m23 - m32) * sqrt;\n            out.y = (m31 - m13) * sqrt;\n            out.z = (m12 - m21) * sqrt;\n\n        } else if ((m11 >= m22) && (m11 >= m33)) {\n\n            sqrt = Math.sqrt(1 + m11 - m22 - m33);\n            half = 0.5 / sqrt;\n\n            out.x = 0.5 * sqrt;\n            out.y = (m12 + m21) * half;\n            out.z = (m13 + m31) * half;\n            out.w = (m23 - m32) * half;\n        } else if (m22 > m33) {\n\n            sqrt = Math.sqrt(1 + m22 - m11 - m33);\n            half = 0.5 / sqrt;\n\n            out.x = (m21 + m12) * half;\n            out.y = 0.5 * sqrt;\n            out.z = (m32 + m23) * half;\n            out.w = (m31 - m13) * half;\n        } else {\n\n            sqrt = Math.sqrt(1 + m33 - m11 - m22);\n            half = 0.5 / sqrt;\n\n            out.x = (m31 + m13) * half;\n            out.y = (m32 + m23) * half;\n            out.z = 0.5 * sqrt;\n            out.w = (m12 - m21) * half;\n        }\n    }\n\n    forNativeElement(nativeElements: Float32Array = null): void//[NATIVE_TS]\n    {\n\n        if (nativeElements) {\n            (<any>this).elements = nativeElements;\n            (<any>this).elements[0] = this.x;\n            (<any>this).elements[1] = this.y;\n            (<any>this).elements[2] = this.z;\n            (<any>this).elements[3] = this.w;\n        }\n        else {\n            (<any>this).elements = new Float32Array([this.x, this.y, this.z, this.w]);\n        }\n        Vector2.rewriteNumProperty(this, \"x\", 0);\n        Vector2.rewriteNumProperty(this, \"y\", 1);\n        Vector2.rewriteNumProperty(this, \"z\", 2);\n        Vector2.rewriteNumProperty(this, \"w\", 3);\n    }\n}","import { Vector3 } from \"./Vector3\";\nimport { Quaternion } from \"./Quaternion\";\nimport { MathUtils3D } from \"./MathUtils3D\";\nimport { IClone } from \"../utils/IClone\";\n\nconst _tempVector0 = new Vector3();\nconst _tempVector1 = new Vector3();\nconst _tempVector2 = new Vector3();\nconst _tempVector3 = new Vector3();\nconst DEFAULTARRAY = new Float32Array([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]);\n\n/**\n * <code>Matrix4x4</code> 类用于创建4x4矩阵。\n */\nexport class Matrix4x4 implements IClone {\n    /**@internal */\n    static TEMPMatrix0: Matrix4x4 = new Matrix4x4();\n    /**@internal */\n    static TEMPMatrix1: Matrix4x4 = new Matrix4x4();\n\n    /**默认矩阵,禁止修改*/\n    static readonly DEFAULT: Readonly<Matrix4x4> = new Matrix4x4();\n    static readonly DEFAULTINVERT: Readonly<Matrix4x4> = new Matrix4x4(-1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    /**默认矩阵,禁止修改*/\n    static readonly ZERO: Readonly<Matrix4x4> = new Matrix4x4(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n\n    /**\n     * 绕X轴旋转\n     * @param\trad  旋转角度\n     * @param\tout 输出矩阵\n     */\n    static createRotationX(rad: number, out: Matrix4x4): void {\n        var oe: Float32Array = out.elements;\n        var s: number = Math.sin(rad), c: number = Math.cos(rad);\n\n        oe[1] = oe[2] = oe[3] = oe[4] = oe[7] = oe[8] = oe[11] = oe[12] = oe[13] = oe[14] = 0;\n        oe[0] = oe[15] = 1;\n        oe[5] = oe[10] = c;\n        oe[6] = s;\n        oe[9] = -s;\n    }\n\n    /**\n     *\n     * 绕Y轴旋转\n     * @param\trad  旋转角度\n     * @param\tout 输出矩阵\n     */\n    static createRotationY(rad: number, out: Matrix4x4): void {\n\n        var oe: Float32Array = out.elements;\n        var s: number = Math.sin(rad), c: number = Math.cos(rad);\n\n        oe[1] = oe[3] = oe[4] = oe[6] = oe[7] = oe[9] = oe[11] = oe[12] = oe[13] = oe[14] = 0;\n        oe[5] = oe[15] = 1;\n        oe[0] = oe[10] = c;\n        oe[2] = -s;\n        oe[8] = s;\n    }\n\n    /**\n     * 绕Z轴旋转\n     * @param\trad  旋转角度\n     * @param\tout 输出矩阵\n     */\n    static createRotationZ(rad: number, out: Matrix4x4): void {\n\n        var oe: Float32Array = out.elements;\n        var s: number = Math.sin(rad), c: number = Math.cos(rad);\n\n        oe[2] = oe[3] = oe[6] = oe[7] = oe[8] = oe[9] = oe[11] = oe[12] = oe[13] = oe[14] = 0;\n        oe[10] = oe[15] = 1;\n        oe[0] = oe[5] = c;\n        oe[1] = s;\n        oe[4] = -s;\n    }\n\n    /**\n     * 通过yaw pitch roll旋转创建旋转矩阵。\n     * @param\tyaw\n     * @param\tpitch\n     * @param\troll\n     * @param\tresult\n     */\n    static createRotationYawPitchRoll(yaw: number, pitch: number, roll: number, result: Matrix4x4): void {\n        Quaternion.createFromYawPitchRoll(yaw, pitch, roll, Quaternion.TEMP);\n        Matrix4x4.createRotationQuaternion(Quaternion.TEMP, result);\n    }\n\n    /**\n     * 通过旋转轴axis和旋转角度angle计算旋转矩阵。\n     * @param\taxis 旋转轴,假定已经归一化。\n     * @param\tangle 旋转角度。\n     * @param\tresult 结果矩阵。\n     */\n    static createRotationAxis(axis: Vector3, angle: number, result: Matrix4x4): void {\n        var x: number = axis.x;\n        var y: number = axis.y;\n        var z: number = axis.z;\n        var cos: number = Math.cos(angle);\n        var sin: number = Math.sin(angle);\n        var xx: number = x * x;\n        var yy: number = y * y;\n        var zz: number = z * z;\n        var xy: number = x * y;\n        var xz: number = x * z;\n        var yz: number = y * z;\n\n        var resultE: Float32Array = result.elements;\n        resultE[3] = resultE[7] = resultE[11] = resultE[12] = resultE[13] = resultE[14] = 0;\n        resultE[15] = 1.0;\n        resultE[0] = xx + (cos * (1.0 - xx));\n        resultE[1] = (xy - (cos * xy)) + (sin * z);\n        resultE[2] = (xz - (cos * xz)) - (sin * y);\n        resultE[4] = (xy - (cos * xy)) - (sin * z);\n        resultE[5] = yy + (cos * (1.0 - yy));\n        resultE[6] = (yz - (cos * yz)) + (sin * x);\n        resultE[8] = (xz - (cos * xz)) + (sin * y);\n        resultE[9] = (yz - (cos * yz)) - (sin * x);\n        resultE[10] = zz + (cos * (1.0 - zz));\n    }\n\n    /**\n     * 通过四元数创建旋转矩阵。\n     * @param\trotation 旋转四元数。\n     * @param\tresult 输出旋转矩阵\n     */\n    static createRotationQuaternion(rotation: Quaternion, result: Matrix4x4): void {\n        var resultE: Float32Array = result.elements;\n        var rotationX: number = rotation.x;\n        var rotationY: number = rotation.y;\n        var rotationZ: number = rotation.z;\n        var rotationW: number = rotation.w;\n\n        var xx: number = rotationX * rotationX;\n        var yy: number = rotationY * rotationY;\n        var zz: number = rotationZ * rotationZ;\n        var xy: number = rotationX * rotationY;\n        var zw: number = rotationZ * rotationW;\n        var zx: number = rotationZ * rotationX;\n        var yw: number = rotationY * rotationW;\n        var yz: number = rotationY * rotationZ;\n        var xw: number = rotationX * rotationW;\n\n        resultE[3] = resultE[7] = resultE[11] = resultE[12] = resultE[13] = resultE[14] = 0;\n        resultE[15] = 1.0;\n        resultE[0] = 1.0 - (2.0 * (yy + zz));\n        resultE[1] = 2.0 * (xy + zw);\n        resultE[2] = 2.0 * (zx - yw);\n        resultE[4] = 2.0 * (xy - zw);\n        resultE[5] = 1.0 - (2.0 * (zz + xx));\n        resultE[6] = 2.0 * (yz + xw);\n        resultE[8] = 2.0 * (zx + yw);\n        resultE[9] = 2.0 * (yz - xw);\n        resultE[10] = 1.0 - (2.0 * (yy + xx));\n    }\n\n    /**\n     * 根据平移计算输出矩阵\n     * @param\ttrans  平移向量\n     * @param\tout 输出矩阵\n     */\n    static createTranslate(trans: Vector3, out: Matrix4x4): void {\n\n        var oe: Float32Array = out.elements;\n        oe[4] = oe[8] = oe[1] = oe[9] = oe[2] = oe[6] = oe[3] = oe[7] = oe[11] = 0;\n        oe[0] = oe[5] = oe[10] = oe[15] = 1;\n        oe[12] = trans.x;\n        oe[13] = trans.y;\n        oe[14] = trans.z;\n    }\n\n    /**\n     * 根据缩放计算输出矩阵\n     * @param\tscale  缩放值\n     * @param\tout 输出矩阵\n     */\n    static createScaling(scale: Vector3, out: Matrix4x4): void {\n\n        var oe: Float32Array = out.elements;\n        oe[0] = scale.x;\n        oe[5] = scale.y;\n        oe[10] = scale.z;\n        oe[1] = oe[4] = oe[8] = oe[12] = oe[9] = oe[13] = oe[2] = oe[6] = oe[14] = oe[3] = oe[7] = oe[11] = 0;\n        oe[15] = 1;\n    }\n\n    /**\n     * 计算两个矩阵的乘法\n     * @param\tleft left矩阵\n     * @param\tright  right矩阵\n     * @param\tout  输出矩阵\n     */\n    static multiply(left: Matrix4x4, right: Matrix4x4, out: Matrix4x4): void {\n        var l: Float32Array = right.elements;\n        var r: Float32Array = left.elements;\n        var e: Float32Array = out.elements;\n\n        var l11: number = l[0], l12: number = l[1], l13: number = l[2], l14: number = l[3];\n        var l21: number = l[4], l22: number = l[5], l23: number = l[6], l24: number = l[7];\n        var l31: number = l[8], l32: number = l[9], l33: number = l[10], l34: number = l[11];\n        var l41: number = l[12], l42: number = l[13], l43: number = l[14], l44: number = l[15];\n\n        var r11: number = r[0], r12: number = r[1], r13: number = r[2], r14: number = r[3];\n        var r21: number = r[4], r22: number = r[5], r23: number = r[6], r24: number = r[7];\n        var r31: number = r[8], r32: number = r[9], r33: number = r[10], r34: number = r[11];\n        var r41: number = r[12], r42: number = r[13], r43: number = r[14], r44: number = r[15];\n\n        e[0] = (l11 * r11) + (l12 * r21) + (l13 * r31) + (l14 * r41);\n        e[1] = (l11 * r12) + (l12 * r22) + (l13 * r32) + (l14 * r42);\n        e[2] = (l11 * r13) + (l12 * r23) + (l13 * r33) + (l14 * r43);\n        e[3] = (l11 * r14) + (l12 * r24) + (l13 * r34) + (l14 * r44);\n        e[4] = (l21 * r11) + (l22 * r21) + (l23 * r31) + (l24 * r41);\n        e[5] = (l21 * r12) + (l22 * r22) + (l23 * r32) + (l24 * r42);\n        e[6] = (l21 * r13) + (l22 * r23) + (l23 * r33) + (l24 * r43);\n        e[7] = (l21 * r14) + (l22 * r24) + (l23 * r34) + (l24 * r44);\n        e[8] = (l31 * r11) + (l32 * r21) + (l33 * r31) + (l34 * r41);\n        e[9] = (l31 * r12) + (l32 * r22) + (l33 * r32) + (l34 * r42);\n        e[10] = (l31 * r13) + (l32 * r23) + (l33 * r33) + (l34 * r43);\n        e[11] = (l31 * r14) + (l32 * r24) + (l33 * r34) + (l34 * r44);\n        e[12] = (l41 * r11) + (l42 * r21) + (l43 * r31) + (l44 * r41);\n        e[13] = (l41 * r12) + (l42 * r22) + (l43 * r32) + (l44 * r42);\n        e[14] = (l41 * r13) + (l42 * r23) + (l43 * r33) + (l44 * r43);\n        e[15] = (l41 * r14) + (l42 * r24) + (l43 * r34) + (l44 * r44);\n    }\n\n    /**\n     * 从四元数计算旋转矩阵\n     * @param\trotation 四元数\n     * @param\tout 输出矩阵\n     */\n    static createFromQuaternion(rotation: Quaternion, out: Matrix4x4): void {\n        var e: Float32Array = out.elements;\n        var x: number = rotation.x, y: number = rotation.y, z: number = rotation.z, w: number = rotation.w;\n        var x2: number = x + x;\n        var y2: number = y + y;\n        var z2: number = z + z;\n\n        var xx: number = x * x2;\n        var yx: number = y * x2;\n        var yy: number = y * y2;\n        var zx: number = z * x2;\n        var zy: number = z * y2;\n        var zz: number = z * z2;\n        var wx: number = w * x2;\n        var wy: number = w * y2;\n        var wz: number = w * z2;\n\n        e[0] = 1 - yy - zz;\n        e[1] = yx + wz;\n        e[2] = zx - wy;\n        e[3] = 0;\n\n        e[4] = yx - wz;\n        e[5] = 1 - xx - zz;\n        e[6] = zy + wx;\n        e[7] = 0;\n\n        e[8] = zx + wy;\n        e[9] = zy - wx;\n        e[10] = 1 - xx - yy;\n        e[11] = 0;\n\n        e[12] = 0;\n        e[13] = 0;\n        e[14] = 0;\n        e[15] = 1;\n    }\n\n    /**\n     * 计算仿射矩阵\n     * @param\ttrans 平移\n     * @param\trot 旋转\n     * @param\tscale 缩放\n     * @param\tout 输出矩阵\n     */\n    static createAffineTransformation(trans: Vector3, rot: Quaternion, scale: Vector3, out: Matrix4x4): void {\n        var oe: Float32Array = out.elements;\n\n        var x: number = rot.x, y: number = rot.y, z: number = rot.z, w: number = rot.w, x2: number = x + x, y2: number = y + y, z2: number = z + z;\n        var xx: number = x * x2, xy: number = x * y2, xz: number = x * z2, yy: number = y * y2, yz: number = y * z2, zz: number = z * z2;\n        var wx: number = w * x2, wy: number = w * y2, wz: number = w * z2, sx: number = scale.x, sy: number = scale.y, sz: number = scale.z;\n\n        oe[0] = (1 - (yy + zz)) * sx;\n        oe[1] = (xy + wz) * sx;\n        oe[2] = (xz - wy) * sx;\n        oe[3] = 0;\n        oe[4] = (xy - wz) * sy;\n        oe[5] = (1 - (xx + zz)) * sy;\n        oe[6] = (yz + wx) * sy;\n        oe[7] = 0;\n        oe[8] = (xz + wy) * sz;\n        oe[9] = (yz - wx) * sz;\n        oe[10] = (1 - (xx + yy)) * sz;\n        oe[11] = 0;\n        oe[12] = trans.x;\n        oe[13] = trans.y;\n        oe[14] = trans.z;\n        oe[15] = 1;\n    }\n\n    /**\n     * 计算观察矩阵\n     * @param\teye 视点位置\n     * @param\ttarget 视点目标\n     * @param\tup 向上向量\n     * @param\tout 输出矩阵\n     */\n    static createLookAt(eye: Vector3, target: Vector3, up: Vector3, out: Matrix4x4): void {\n        var oE: Float32Array = out.elements;\n        var xaxis: Vector3 = _tempVector0;\n        var yaxis: Vector3 = _tempVector1;\n        var zaxis: Vector3 = _tempVector2;\n        Vector3.subtract(eye, target, zaxis);\n        Vector3.normalize(zaxis, zaxis);\n        Vector3.cross(up, zaxis, xaxis);\n        Vector3.normalize(xaxis, xaxis);\n        Vector3.cross(zaxis, xaxis, yaxis);\n\n        oE[3] = oE[7] = oE[11] = 0;\n        oE[15] = 1;\n        oE[0] = xaxis.x;\n        oE[4] = xaxis.y;\n        oE[8] = xaxis.z;\n        oE[1] = yaxis.x;\n        oE[5] = yaxis.y;\n        oE[9] = yaxis.z;\n        oE[2] = zaxis.x;\n        oE[6] = zaxis.y;\n        oE[10] = zaxis.z;\n\n        oE[12] = -Vector3.dot(xaxis, eye);\n        oE[13] = -Vector3.dot(yaxis, eye);\n        oE[14] = -Vector3.dot(zaxis, eye);\n    }\n\n    /**\n     * 通过FOV创建透视投影矩阵。\n     * @param\tfov  视角。\n     * @param\taspect 横纵比。\n     * @param\tnear 近裁面。\n     * @param\tfar 远裁面。\n     * @param\tout 输出矩阵。\n     */\n    static createPerspective(fov: number, aspect: number, znear: number, zfar: number, out: Matrix4x4): void {\n        var yScale: number = 1.0 / Math.tan(fov * 0.5);\n        var xScale: number = yScale / aspect;\n\n        var halfWidth: number = znear / xScale;\n        var halfHeight: number = znear / yScale;\n        Matrix4x4.createPerspectiveOffCenter(-halfWidth, halfWidth, -halfHeight, halfHeight, znear, zfar, out);\n    }\n\n    /**\n     * 创建透视投影矩阵。\n     * @param\tleft 视椎左边界。\n     * @param\tright 视椎右边界。\n     * @param\tbottom 视椎底边界。\n     * @param\ttop 视椎顶边界。\n     * @param\tznear 视椎近边界。\n     * @param\tzfar 视椎远边界。\n     * @param\tout 输出矩阵。\n     */\n    static createPerspectiveOffCenter(left: number, right: number, bottom: number, top: number, znear: number, zfar: number, out: Matrix4x4): void {\n        var oe: Float32Array = out.elements;\n        var zRange: number = zfar / (zfar - znear);\n        oe[1] = oe[2] = oe[3] = oe[4] = oe[6] = oe[7] = oe[12] = oe[13] = oe[15] = 0;\n        oe[0] = 2.0 * znear / (right - left);\n        oe[5] = 2.0 * znear / (top - bottom);\n        oe[8] = (left + right) / (right - left);\n        oe[9] = (top + bottom) / (top - bottom);\n        oe[10] = -zRange;\n        oe[11] = -1.0;\n        oe[14] = -znear * zRange;\n    }\n\n    /**\n     * 计算正交投影矩阵。\n     * @param\tleft 视椎左边界。\n     * @param\tright 视椎右边界。\n     * @param\tbottom 视椎底边界。\n     * @param\ttop 视椎顶边界。\n     * @param\tnear 视椎近边界。\n     * @param\tfar 视椎远边界。\n     * @param\tout 输出矩阵。\n     */\n    static createOrthoOffCenter(left: number, right: number, bottom: number, top: number, znear: number, zfar: number, out: Matrix4x4): void {\n\n        var oe: Float32Array = out.elements;\n        var zRange: number = 1.0 / (zfar - znear);\n        oe[1] = oe[2] = oe[3] = oe[4] = oe[6] = oe[8] = oe[7] = oe[9] = oe[11] = 0;\n        oe[15] = 1;\n        oe[0] = 2.0 / (right - left);\n        oe[5] = 2.0 / (top - bottom);\n        oe[10] = -zRange;\n        oe[12] = (left + right) / (left - right);\n        oe[13] = (top + bottom) / (bottom - top);\n        oe[14] = -znear * zRange;\n    }\n\n    /**矩阵元素数组*/\n    elements: Float32Array;\n\n    /**\n     * 创建一个 <code>Matrix4x4</code> 实例。\n     * @param\t4x4矩阵的各元素\n     */\n    constructor(m11: number = 1, m12: number = 0, m13: number = 0, m14: number = 0, m21: number = 0, m22: number = 1, m23: number = 0, m24: number = 0, m31: number = 0, m32: number = 0, m33: number = 1, m34: number = 0, m41: number = 0, m42: number = 0, m43: number = 0, m44: number = 1, elements: Float32Array = null) {\n        if (arguments.length == 0) {\n            this.elements = DEFAULTARRAY.slice();\n            return;\n        }\n        if (arguments.length === 1 && arguments[0] === null)\n            return;\n\n        var e: Float32Array = elements ? this.elements = elements : this.elements = new Float32Array(16);//TODO:[NATIVE]临时\n        e[0] = m11;\n        e[1] = m12;\n        e[2] = m13;\n        e[3] = m14;\n        e[4] = m21;\n        e[5] = m22;\n        e[6] = m23;\n        e[7] = m24;\n        e[8] = m31;\n        e[9] = m32;\n        e[10] = m33;\n        e[11] = m34;\n        e[12] = m41;\n        e[13] = m42;\n        e[14] = m43;\n        e[15] = m44;\n    }\n\n    /**\n     * @internal\n     * @param row \n     * @param column \n     * @returns \n     */\n    getElementByRowColumn(row: number, column: number): number {\n        if (row < 0 || row > 3)\n            throw new Error(\"row Rows and columns for matrices run from 0 to 3, inclusive.\");\n        if (column < 0 || column > 3)\n            throw new Error(\"column Rows and columns for matrices run from 0 to 3, inclusive.\");\n\n        return this.elements[(row * 4) + column];\n    }\n\n    /**\n     * @internal\n     * @param row \n     * @param column \n     * @param value \n     */\n    setElementByRowColumn(row: number, column: number, value: number): void {\n        if (row < 0 || row > 3)\n            throw new Error(\"row Rows and columns for matrices run from 0 to 3, inclusive.\");\n        if (column < 0 || column > 3)\n            throw new Error(\"column Rows and columns for matrices run from 0 to 3, inclusive.\");\n\n        this.elements[(row * 4) + column] = value;\n    }\n\n    /**\n  * 四元数生成矩阵\n  * @param rotation \n  */\n    setRotation(rotation: Quaternion): void {\n        var rotationX: number = rotation.x;\n        var rotationY: number = rotation.y;\n        var rotationZ: number = rotation.z;\n        var rotationW: number = rotation.w;\n\n        var xx: number = rotationX * rotationX;\n        var yy: number = rotationY * rotationY;\n        var zz: number = rotationZ * rotationZ;\n        var xy: number = rotationX * rotationY;\n        var zw: number = rotationZ * rotationW;\n        var zx: number = rotationZ * rotationX;\n        var yw: number = rotationY * rotationW;\n        var yz: number = rotationY * rotationZ;\n        var xw: number = rotationX * rotationW;\n\n        var e: Float32Array = this.elements;\n        e[0] = 1.0 - (2.0 * (yy + zz));\n        e[1] = 2.0 * (xy + zw);\n        e[2] = 2.0 * (zx - yw);\n        e[4] = 2.0 * (xy - zw);\n        e[5] = 1.0 - (2.0 * (zz + xx));\n        e[6] = 2.0 * (yz + xw);\n        e[8] = 2.0 * (zx + yw);\n        e[9] = 2.0 * (yz - xw);\n        e[10] = 1.0 - (2.0 * (yy + xx));\n    }\n\n    /**\n     * 位置\n     * @param position \n     */\n    setPosition(position: Vector3): void {\n        var e: Float32Array = this.elements;\n        e[12] = position.x;\n        e[13] = position.y;\n        e[14] = position.z;\n    }\n\n\n    /**\n     * 判断两个4x4矩阵的值是否相等。\n     * @param\tother 4x4矩阵\n     */\n    equalsOtherMatrix(other: Matrix4x4): boolean {\n        var e: Float32Array = this.elements;\n        var oe: Float32Array = other.elements;\n\n        return (MathUtils3D.nearEqual(e[0], oe[0]) && MathUtils3D.nearEqual(e[1], oe[1]) && MathUtils3D.nearEqual(e[2], oe[2]) && MathUtils3D.nearEqual(e[3], oe[3]) && MathUtils3D.nearEqual(e[4], oe[4]) && MathUtils3D.nearEqual(e[5], oe[5]) && MathUtils3D.nearEqual(e[6], oe[6]) && MathUtils3D.nearEqual(e[7], oe[7]) && MathUtils3D.nearEqual(e[8], oe[8]) && MathUtils3D.nearEqual(e[9], oe[9]) && MathUtils3D.nearEqual(e[10], oe[10]) && MathUtils3D.nearEqual(e[11], oe[11]) && MathUtils3D.nearEqual(e[12], oe[12]) && MathUtils3D.nearEqual(e[13], oe[13]) && MathUtils3D.nearEqual(e[14], oe[14]) && MathUtils3D.nearEqual(e[15], oe[15]));\n    }\n\n    /**\n     * 分解矩阵为平移向量、旋转四元数、缩放向量。\n     * @param\ttranslation 平移向量。\n     * @param\trotation 旋转四元数。\n     * @param\tscale 缩放向量。\n     * @return 是否分解成功。\n     */\n    decomposeTransRotScale(translation: Vector3, rotation: Quaternion, scale: Vector3): boolean {\n        var rotationMatrix: Matrix4x4 = _tempMatrix4x4;\n        if (this.decomposeTransRotMatScale(translation, rotationMatrix, scale)) {\n            Quaternion.createFromMatrix4x4(rotationMatrix, rotation);\n            return true;\n        } else {\n            rotation.identity();\n            return false;\n        }\n    }\n\n    /**\n     * 分解矩阵为平移向量、旋转矩阵、缩放向量。\n     * @param\ttranslation 平移向量。\n     * @param\trotationMatrix 旋转矩阵。\n     * @param\tscale 缩放向量。\n     * @return 是否分解成功。\n     */\n    decomposeTransRotMatScale(translation: Vector3, rotationMatrix: Matrix4x4, scale: Vector3): boolean {\n        var e: Float32Array = this.elements;\n        var te: Vector3 = translation;\n        var re: Float32Array = rotationMatrix.elements;\n        var se: Vector3 = scale;\n\n        //Get the translation. \n        te.x = e[12];\n        te.y = e[13];\n        te.z = e[14];\n\n        //Scaling is the length of the rows. \n        var m11: number = e[0], m12: number = e[1], m13: number = e[2];\n        var m21: number = e[4], m22: number = e[5], m23: number = e[6];\n        var m31: number = e[8], m32: number = e[9], m33: number = e[10];\n\n        var sX: number = se.x = Math.sqrt((m11 * m11) + (m12 * m12) + (m13 * m13));\n        var sY: number = se.y = Math.sqrt((m21 * m21) + (m22 * m22) + (m23 * m23));\n        var sZ: number = se.z = Math.sqrt((m31 * m31) + (m32 * m32) + (m33 * m33));\n\n        //If any of the scaling factors are zero, than the rotation matrix can not exist. \n        if (MathUtils3D.isZero(sX) || MathUtils3D.isZero(sY) || MathUtils3D.isZero(sZ)) {\n            re[1] = re[2] = re[3] = re[4] = re[6] = re[7] = re[8] = re[9] = re[11] = re[12] = re[13] = re[14] = 0;\n            re[0] = re[5] = re[10] = re[15] = 1;\n            return false;\n        }\n\n        // Calculate an perfect orthonormal matrix (no reflections)\n        var at: Vector3 = _tempVector0;\n        at.x = m31 / sZ;\n        at.y = m32 / sZ;\n        at.z = m33 / sZ;\n        var tempRight: Vector3 = _tempVector1;\n        tempRight.x = m11 / sX;\n        tempRight.y = m12 / sX;\n        tempRight.z = m13 / sX;\n        var up: Vector3 = _tempVector2;\n        Vector3.cross(at, tempRight, up);\n        var right: Vector3 = _tempVector1;\n        Vector3.cross(up, at, right);\n\n        re[3] = re[7] = re[11] = re[12] = re[13] = re[14] = 0;\n        re[15] = 1;\n        re[0] = right.x;\n        re[1] = right.y;\n        re[2] = right.z;\n\n        re[4] = up.x;\n        re[5] = up.y;\n        re[6] = up.z;\n\n        re[8] = at.x;\n        re[9] = at.y;\n        re[10] = at.z;\n\n        // In case of reflexions//TODO:是否不用计算dot后的值即为结果\n        ((re[0] * m11 + re[1] * m12 + re[2] * m13)/*Vector3.dot(right,Right)*/ < 0.0) && (se.x = -sX);\n        ((re[4] * m21 + re[5] * m22 + re[6] * m23)/* Vector3.dot(up, Up)*/ < 0.0) && (se.y = -sY);\n        ((re[8] * m31 + re[9] * m32 + re[10] * m33)/*Vector3.dot(at, Backward)*/ < 0.0) && (se.z = -sZ);\n\n        return true;\n    }\n\n    /**\n     * 分解旋转矩阵的旋转为YawPitchRoll欧拉角。\n     * @param\tout float yaw\n     * @param\tout float pitch\n     * @param\tout float roll\n     * @return\n     */\n    decomposeYawPitchRoll(yawPitchRoll: Vector3): void {//TODO:经飞仙测试,好像有BUG。\n        var pitch: number = Math.asin(-this.elements[9]);\n        yawPitchRoll.y = pitch;\n        // Hardcoded constant - burn him, he's a witch\n        // double threshold = 0.001; \n        var test: number = Math.cos(pitch);\n        if (test > MathUtils3D.zeroTolerance) {\n            yawPitchRoll.z = Math.atan2(this.elements[1], this.elements[5]);\n            yawPitchRoll.x = Math.atan2(this.elements[8], this.elements[10]);\n        } else {\n            yawPitchRoll.z = Math.atan2(-this.elements[4], this.elements[0]);\n            yawPitchRoll.x = 0.0;\n        }\n    }\n\n    /**\n     * 归一化矩阵 \n     */\n    normalize(): void {\n        var v: Float32Array = this.elements;\n        var c: number = v[0], d: number = v[1], e: number = v[2], g: number = Math.sqrt(c * c + d * d + e * e);\n        if (g) {\n            if (g == 1)\n                return;\n        } else {\n            v[0] = 0;\n            v[1] = 0;\n            v[2] = 0;\n            return;\n        }\n        g = 1 / g;\n        v[0] = c * g;\n        v[1] = d * g;\n        v[2] = e * g;\n    }\n\n    /**\n     * 计算矩阵的转置矩阵\n     */\n    transpose(): Matrix4x4 {\n        var e: Float32Array, t: number;\n        e = this.elements;\n        t = e[1];\n        e[1] = e[4];\n        e[4] = t;\n        t = e[2];\n        e[2] = e[8];\n        e[8] = t;\n        t = e[3];\n        e[3] = e[12];\n        e[12] = t;\n        t = e[6];\n        e[6] = e[9];\n        e[9] = t;\n        t = e[7];\n        e[7] = e[13];\n        e[13] = t;\n        t = e[11];\n        e[11] = e[14];\n        e[14] = t;\n        return this;\n    }\n\n    /**\n     * 计算一个矩阵的逆矩阵\n     * @param\tout 输出矩阵\n     */\n    invert(out: Matrix4x4): void {\n\n        var ae: Float32Array = this.elements;\n        var oe: Float32Array = out.elements;\n        var a00: number = ae[0], a01: number = ae[1], a02: number = ae[2], a03: number = ae[3], a10: number = ae[4], a11: number = ae[5], a12: number = ae[6], a13: number = ae[7], a20: number = ae[8], a21: number = ae[9], a22: number = ae[10], a23: number = ae[11], a30: number = ae[12], a31: number = ae[13], a32: number = ae[14], a33: number = ae[15],\n\n            b00: number = a00 * a11 - a01 * a10, b01: number = a00 * a12 - a02 * a10, b02: number = a00 * a13 - a03 * a10, b03: number = a01 * a12 - a02 * a11, b04: number = a01 * a13 - a03 * a11, b05: number = a02 * a13 - a03 * a12, b06: number = a20 * a31 - a21 * a30, b07: number = a20 * a32 - a22 * a30, b08: number = a20 * a33 - a23 * a30, b09: number = a21 * a32 - a22 * a31, b10: number = a21 * a33 - a23 * a31, b11: number = a22 * a33 - a23 * a32,\n\n            // Calculate the determinant \n            det: number = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n        if (Math.abs(det) === 0.0) {\n            return;\n        }\n        det = 1.0 / det;\n\n        oe[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n        oe[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n        oe[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n        oe[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n        oe[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n        oe[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n        oe[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n        oe[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n        oe[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n        oe[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n        oe[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n        oe[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n        oe[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n        oe[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n        oe[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n        oe[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n    }\n\n    /**\n     * 计算BlillBoard矩阵\n     * @param\tobjectPosition 物体位置\n     * @param\tcameraPosition 相机位置\n     * @param\tcameraUp       相机上向量\n     * @param\tcameraForward  相机前向量\n     * @param\tmat            变换矩阵\n     */\n    static billboard(objectPosition: Vector3, cameraPosition: Vector3, cameraUp: Vector3, cameraForward: Vector3, mat: Matrix4x4): void {\n\n        Vector3.subtract(objectPosition, cameraPosition, _tempVector0);\n\n        var lengthSq: number = Vector3.scalarLengthSquared(_tempVector0);\n\n        if (MathUtils3D.isZero(lengthSq)) {\n            Vector3.scale(cameraForward, -1, _tempVector1);\n            _tempVector1.cloneTo(_tempVector0);\n        } else {\n            Vector3.scale(_tempVector0, 1 / Math.sqrt(lengthSq), _tempVector0);\n        }\n\n        Vector3.cross(cameraUp, _tempVector0, _tempVector2);\n        Vector3.normalize(_tempVector2, _tempVector2);\n        Vector3.cross(_tempVector0, _tempVector2, _tempVector3);\n\n        var crosse: Vector3 = _tempVector2;\n        var finale: Vector3 = _tempVector3;\n        var diffee: Vector3 = _tempVector0;\n        var obpose: Vector3 = objectPosition;\n\n        var mate: Float32Array = mat.elements;\n        mate[0] = crosse.x;\n        mate[1] = crosse.y;\n        mate[2] = crosse.z;\n        mate[3] = 0.0;\n        mate[4] = finale.x;\n        mate[5] = finale.y;\n        mate[6] = finale.z;\n        mate[7] = 0.0;\n        mate[8] = diffee.x;\n        mate[9] = diffee.y;\n        mate[10] = diffee.z;\n        mate[11] = 0.0;\n        mate[12] = obpose.x;\n        mate[13] = obpose.y;\n        mate[14] = obpose.z;\n        mate[15] = 1.0;\n    }\n\n    /**\n     * 归一化\n     */\n    identity(): void {\n        /*\n        var e: Float32Array = this.elements;\n        e[1] = e[2] = e[3] = e[4] = e[6] = e[7] = e[8] = e[9] = e[11] = e[12] = e[13] = e[14] = 0;\n        e[0] = e[5] = e[10] = e[15] = 1;\n        */\n        this.elements.set(DEFAULTARRAY);\n    }\n\n    /**判断是否是单位矩阵 */\n    isIdentity(): boolean {\n        let delty = function (num0: number, num1: number) {\n            return Math.abs(num0 - num1) < 1e-7;\n        }\n        let e = this.elements;\n        let defined = Matrix4x4.DEFAULT.elements;\n        for (let i = 0, n = e.length; i < n; i++) {\n            if (!delty(e[i], defined[i]))\n                return false;\n        }\n        return true;\n\n    }\n\n    /**\n     * 克隆。\n     * @param\tdestObject 克隆源。\n     */\n    cloneTo(destObject: any): void {\n        var i: number, s: Float32Array, d: Float32Array;\n        s = this.elements;\n        d = destObject.elements;\n        if (s === d) {\n            return;\n        }\n        destObject.elements.set(this.elements);\n        /*for (i = 0; i < 16; ++i) {\n            d[i] = s[i];\n        }*/\n    }\n\n    /**\n     * 克隆\n     * @param destObject \n     */\n    cloneByArray(destObject: Float32Array) {\n        this.elements.set(destObject);\n    }\n\n    /**\n     * 克隆。\n     * @return\t 克隆副本。\n     */\n    clone(): any {\n        var dest: Matrix4x4 = new Matrix4x4(null);\n        dest.elements = this.elements.slice();\n        return dest;\n    }\n\n    static translation(v3: Vector3, out: Matrix4x4): void {\n        var oe: Float32Array = out.elements;\n        oe[0] = oe[5] = oe[10] = oe[15] = 1;\n        oe[12] = v3.x;\n        oe[13] = v3.y;\n        oe[14] = v3.z;\n    }\n\n    /**\n     * 获取平移向量。\n     * @param\tout 平移向量。\n     */\n    getTranslationVector(out: Vector3): void {\n        var me: Float32Array = this.elements;\n        out.x = me[12];\n        out.y = me[13];\n        out.z = me[14];\n    }\n\n    /**\n     * 设置平移向量。\n     * @param\ttranslate 平移向量。\n     */\n    setTranslationVector(translate: Vector3): void {\n        var me: Float32Array = this.elements;\n        var ve: Vector3 = translate;\n        me[12] = ve.x;\n        me[13] = ve.y;\n        me[14] = ve.z;\n    }\n\n    /**\n     * 获取前向量。\n     * @param\tout 前向量。\n     */\n    getForward(out: Vector3): void {\n        var me: Float32Array = this.elements;\n        out.x = -me[8];\n        out.y = -me[9];\n        out.z = -me[10];\n    }\n\n    /**\n     * 设置前向量。\n     * @param\tforward 前向量。\n     */\n    setForward(forward: Vector3): void {\n        var me: Float32Array = this.elements;\n        me[8] = -forward.x;\n        me[9] = -forward.y;\n        me[10] = -forward.z;\n    }\n\n    /**\n     * 判断此矩阵是否是反向矩阵\n     */\n    getInvertFront(): boolean {\n        this.decomposeTransRotScale(_tempVector0, Quaternion.TEMP, _tempVector1);\n        var scale: Vector3 = _tempVector1;\n        var isInvert: boolean = scale.x < 0;\n        (scale.y < 0) && (isInvert = !isInvert);\n        (scale.z < 0) && (isInvert = !isInvert);\n        return isInvert;\n    }\n}\n\nconst _tempMatrix4x4 = new Matrix4x4();","import { RenderCapable } from \"../RenderEngine/RenderEnum/RenderCapable\";\nimport { TextureDimension } from \"../RenderEngine/RenderEnum/TextureDimension\";\nimport { TextureFormat } from \"../RenderEngine/RenderEnum/TextureFormat\";\nimport { ITexture3DContext } from \"../RenderEngine/RenderInterface/ITextureContext\";\nimport { LayaGL } from \"../layagl/LayaGL\";\nimport { BaseTexture } from \"./BaseTexture\";\n\n/**\n * 2D 纹理 数组\n */\nexport class Texture2DArray extends BaseTexture {\n\n    private static _defaultTexture: Texture2DArray;\n\n    static get defaultTexture() {\n        return this._defaultTexture;\n    }\n\n    /** @internal */\n    static __init__() {\n        if (LayaGL.renderEngine.getCapable(RenderCapable.Texture3D)) {\n            this._defaultTexture = new Texture2DArray(1, 1, 1, TextureFormat.R8G8B8A8, false, false, false);\n            this._defaultTexture.lock = true;\n\n            this._defaultTexture.setPixelsData(new Uint8Array([255, 255, 255, 255]), false, false);\n        }\n    }\n\n    depth: number;\n\n    constructor(width: number, height: number, depth: number, format: TextureFormat, mipmap: boolean = true, canRead: boolean, sRGB: boolean = false) {\n        super(width, height, format);\n        this._dimension = TextureDimension.Texture2DArray;\n        this._gammaSpace = sRGB;\n\n        this.depth = depth;\n\n        let context = <ITexture3DContext>LayaGL.textureContext;\n\n        this._texture = context.createTexture3DInternal(this._dimension, width, height, depth, format, mipmap, sRGB, false);\n\n        return;\n    }\n\n    /**\n     * 设置Image数据\n     * @param sources Image 数组\n     * @param premultiplyAlpha 是否预乘 alpha\n     * @param invertY 是否反转图像 Y 轴\n     */\n    setImageData(sources: HTMLImageElement[] | HTMLCanvasElement[] | ImageBitmap[], premultiplyAlpha: boolean, invertY: boolean) {\n        let texture = this._texture;\n        let context = <ITexture3DContext>LayaGL.textureContext;\n        context.setTexture3DImageData(texture, sources, this.depth, premultiplyAlpha, invertY);\n    }\n\n    /**\n     * 设置像素数据\n     * @param source 像素数据\n     * @param premultiplyAlpha 是否预乘 alpha\n     * @param invertY 是否反转图像 Y 轴\n     */\n    setPixelsData(source: ArrayBufferView, premultiplyAlpha: boolean, invertY: boolean) {\n        let texture = this._texture;\n        let context = <ITexture3DContext>LayaGL.textureContext;\n        context.setTexture3DPixelsData(texture, source, this.depth, premultiplyAlpha, invertY)\n    }\n\n    /**\n     * 更新像素数据\n     * @param xOffset x 偏移\n     * @param yOffset y 偏移\n     * @param zOffset z 偏移\n     * @param width 更新数据宽度\n     * @param height 更新数据高度\n     * @param depth 更新数据深度层级\n     * @param pixels 像素数据\n     * @param mipmapLevel mipmap 等级\n     * @param generateMipmap 是否生成 mipmap\n     * @param premultiplyAlpha 是否预乘 alpha\n     * @param invertY 是否反转 Y 轴\n     */\n    setSubPixelsData(xOffset: number, yOffset: number, zOffset: number, width: number, height: number, depth: number, pixels: ArrayBufferView, mipmapLevel: number, generateMipmap: boolean, premultiplyAlpha: boolean, invertY: boolean) {\n        let texture = this._texture;\n        let context = <ITexture3DContext>LayaGL.textureContext;\n        context.setTexture3DSubPixelsData(texture, pixels, mipmapLevel, generateMipmap, xOffset, yOffset, zOffset, width, height, depth, premultiplyAlpha, invertY);\n    }\n\n}","import { BaseTexture } from \"../../resource/BaseTexture\";\nimport { Resource } from \"../../resource/Resource\";\nimport { DefineDatas } from \"./DefineDatas\";\nimport { ShaderDefine } from \"./ShaderDefine\";\nimport { IClone } from \"../../utils/IClone\";\nimport { UniformBufferObject } from \"../UniformBufferObject\";\nimport {\n\tUniformBufferParamsType,\n\tUnifromBufferData,\n} from \"../UniformBufferData\";\nimport { Color } from \"../../maths/Color\";\nimport { Matrix4x4 } from \"../../maths/Matrix4x4\";\nimport { Quaternion } from \"../../maths/Quaternion\";\nimport { Vector2 } from \"../../maths/Vector2\";\nimport { Vector3 } from \"../../maths/Vector3\";\nimport { Vector4 } from \"../../maths/Vector4\";\nimport { Matrix3x3 } from \"../../maths/Matrix3x3\";\nimport { Texture2DArray } from \"../../resource/Texture2DArray\";\ntype uboParams = { ubo: UniformBufferObject; uboBuffer: UnifromBufferData };\nexport enum ShaderDataType {\n\tInt,\n\tBool,\n\tFloat,\n\tVector2,\n\tVector3,\n\tVector4,\n\tColor,\n\tMatrix4x4,\n\tTexture2D,\n\tTextureCube,\n\tBuffer,\n\tMatrix3x3,\n\tTexture2DArray,\n\tTexture3D\n}\n\nexport type ShaderDataItem = number | boolean | Vector2 | Vector3 | Vector4 | Color | Matrix4x4 | BaseTexture | Float32Array | Matrix3x3;\n\nexport function ShaderDataDefaultValue(type: ShaderDataType) {\n\tswitch (type) {\n\t\tcase ShaderDataType.Int:\n\t\t\treturn 0;\n\t\tcase ShaderDataType.Bool:\n\t\t\treturn false;\n\t\tcase ShaderDataType.Float:\n\t\t\treturn 0;\n\t\tcase ShaderDataType.Vector2:\n\t\t\treturn Vector2.ZERO;\n\t\tcase ShaderDataType.Vector3:\n\t\t\treturn Vector3.ZERO;\n\t\tcase ShaderDataType.Vector4:\n\t\t\treturn Vector4.ZERO;\n\t\tcase ShaderDataType.Color:\n\t\t\treturn Color.BLACK;\n\t\tcase ShaderDataType.Matrix4x4:\n\t\t\treturn Matrix4x4.DEFAULT;\n\t\tcase ShaderDataType.Matrix3x3:\n\t\t\treturn Matrix3x3.DEFAULT;\n\t\tcase ShaderDataType.Texture2DArray:\n\t\t\treturn Texture2DArray.defaultTexture;\n\t\tcase ShaderDataType.Texture3D:\n\t\t\treturn Texture2DArray.defaultTexture;\n\t\tdefault:\n\t\t\treturn null;\n\t}\n}\n\n/**\n * 着色器数据类。\n */\nexport class ShaderData implements IClone {\n\t/**@internal 反向找Material*/\n\tprotected _ownerResource: Resource = null;\n\n\t/**@internal */\n\tprotected _gammaColorMap: Map<number, Color>;\n\t/**@internal */\n\tapplyUBO: boolean = false;\n\t/**@internal */\n\t_data: any = null;\n\n\t/** @internal */\n\t_defineDatas: DefineDatas = new DefineDatas();\n\n\t/**@internal */\n\t_uniformBufferDatas: Map<string, uboParams>;\n\n\t/**\n\t * @internal\n\t * key: uniform property id\n\t * value: UniformBufferObject\n\t * 保存 每个 uniform id 所在的 ubo\n\t */\n\t_uniformBuffersMap: Map<number, UniformBufferObject>;\n\n\t/**\n\t * @internal\n\t */\n\tget uniformBufferDatas() {\n\t\treturn this._uniformBufferDatas;\n\t}\n\n\tget uniformBuffersMap(): Map<number, UniformBufferObject> {\n\t\treturn this._uniformBuffersMap;\n\t}\n\n\n\n\t/**\n\t * @internal\t\n\t */\n\tconstructor(ownerResource: Resource = null) {\n\t\tthis._ownerResource = ownerResource;\n\t\tthis._initData();\n\n\t\tthis._uniformBufferDatas = new Map();\n\t\tthis._uniformBuffersMap = new Map();\n\t}\n\n\t/**\n\t * @internal\n\t * @param key \n\t * @param ubo \n\t * @param uboData \n\t */\n\t_addCheckUBO(key: string, ubo: UniformBufferObject, uboData: UnifromBufferData) {\n\t\tthis._uniformBufferDatas.set(key, { ubo: ubo, uboBuffer: uboData });\n\t\tuboData._uniformParamsState.forEach(\n\t\t\t(value: UniformBufferParamsType, id: number) => {\n\t\t\t\tthis.uniformBuffersMap.set(id, ubo);\n\t\t\t}\n\t\t);\n\t\tubo.setDataByUniformBufferData(uboData);\n\t}\n\n\n\n\t/**\n\t * @internal\n\t */\n\t_initData(): void {\n\t\tthis._data = {};\n\t\tthis._gammaColorMap = new Map();\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tgetData(): any {\n\t\treturn this._data;\n\t}\n\n\tapplyUBOData() {\n\t\tthis._uniformBufferDatas.forEach((value, key) => {\n\t\t\tvalue.ubo.setDataByUniformBufferData(value.uboBuffer);\n\t\t});\n\t\tthis.applyUBO = false;\n\t}\n\n\t/**\n\t * 增加Shader宏定义。\n\t * @param value 宏定义。\n\t */\n\taddDefine(define: ShaderDefine): void {\n\t\tthis._defineDatas.add(define);\n\t}\n\n\t/**\n\t * 移除Shader宏定义。\n\t * @param value 宏定义。\n\t */\n\tremoveDefine(define: ShaderDefine): void {\n\t\tthis._defineDatas.remove(define);\n\t}\n\n\t/**\n\t * 是否包含Shader宏定义。\n\t * @param value 宏定义。\n\t */\n\thasDefine(define: ShaderDefine): boolean {\n\t\treturn this._defineDatas.has(define);\n\t}\n\n\t/**\n\t * 清空宏定义。\n\t */\n\tclearDefine(): void {\n\t\tthis._defineDatas.clear();\n\t}\n\n\t/**\n\t * 获取布尔。\n\t * @param\tindex shader索引。\n\t * @return  布尔。\n\t */\n\tgetBool(index: number): boolean {\n\t\treturn this._data[index];\n\t}\n\n\t/**\n\t * 设置布尔。\n\t * @param\tindex shader索引。\n\t * @param\tvalue 布尔。\n\t */\n\tsetBool(index: number, value: boolean): void {\n\t\tthis._data[index] = value;\n\t}\n\n\t/**\n\t * 获取整形。\n\t * @param\tindex shader索引。\n\t * @return  整形。\n\t */\n\tgetInt(index: number): number {\n\t\treturn this._data[index];\n\t}\n\n\t/**\n\t * 设置整型。\n\t * @param\tindex shader索引。\n\t * @param\tvalue 整形。\n\t */\n\tsetInt(index: number, value: number): void {\n\t\tthis._data[index] = value;\n\t\tlet ubo = this._uniformBuffersMap.get(index);\n\t\tif (ubo) {\n\t\t\tthis._uniformBufferDatas.get(ubo._name).uboBuffer._setData(index, this.getInt(index));\n\t\t}\n\t}\n\n\t/**\n\t * 获取浮点。\n\t * @param\tindex shader索引。\n\t * @return\t浮点。\n\t */\n\tgetNumber(index: number): number {\n\t\treturn this._data[index];\n\t}\n\n\t/**\n\t * 设置浮点。\n\t * @param\tindex shader索引。\n\t * @param\tvalue 浮点。\n\t */\n\tsetNumber(index: number, value: number): void {\n\t\tthis._data[index] = value;\n\t\tlet ubo = this._uniformBuffersMap.get(index);\n\t\tif (ubo) {\n\t\t\tthis._uniformBufferDatas.get(ubo._name).uboBuffer._setData(index, this.getNumber(index));\n\t\t\tthis.applyUBO = true;\n\t\t}\n\t}\n\n\t/**\n\t * 获取Vector2向量。\n\t * @param\tindex shader索引。\n\t * @return Vector2向量。\n\t */\n\tgetVector2(index: number): Vector2 {\n\t\treturn this._data[index];\n\t}\n\n\t/**\n\t * 设置Vector2向量。\n\t * @param\tindex shader索引。\n\t * @param\tvalue Vector2向量。\n\t */\n\tsetVector2(index: number, value: Vector2): void {\n\t\tif (this._data[index]) {\n\t\t\tvalue.cloneTo(this._data[index]);\n\t\t} else\n\t\t\tthis._data[index] = value.clone();\n\t\tlet ubo = this._uniformBuffersMap.get(index);\n\t\tif (ubo) {\n\t\t\tthis._uniformBufferDatas.get(ubo._name).uboBuffer._setData(index, this.getVector2(index));\n\t\t\tthis.applyUBO = true;\n\t\t}\n\t}\n\n\t/**\n\t * 获取Vector3向量。\n\t * @param\tindex shader索引。\n\t * @return Vector3向量。\n\t */\n\tgetVector3(index: number): Vector3 {\n\t\treturn this._data[index];\n\t}\n\n\t/**\n\t * 设置Vector3向量。\n\t * @param\tindex shader索引。\n\t * @param\tvalue Vector3向量。\n\t */\n\tsetVector3(index: number, value: Vector3): void {\n\t\tif (this._data[index]) {\n\t\t\tvalue.cloneTo(this._data[index]);\n\t\t} else\n\t\t\tthis._data[index] = value.clone();\n\t\tlet ubo = this._uniformBuffersMap.get(index);\n\t\tif (ubo) {\n\t\t\tthis._uniformBufferDatas.get(ubo._name).uboBuffer._setData(index, this.getVector3(index));\n\t\t\tthis.applyUBO = true;\n\t\t}\n\t}\n\n\t/**\n\t * 获取颜色。\n\t * @param \tindex shader索引。\n\t * @return  向量。\n\t */\n\tgetVector(index: number): Vector4 {\n\t\treturn this._data[index];\n\t}\n\n\t/**\n\t * 设置向量。\n\t * @param\tindex shader索引。\n\t * @param\tvalue 向量。\n\t */\n\tsetVector(index: number, value: Vector4): void {\n\t\tif (this._data[index]) {\n\t\t\tvalue.cloneTo(this._data[index]);\n\t\t} else\n\t\t\tthis._data[index] = value.clone();\n\t\tlet ubo = this._uniformBuffersMap.get(index);\n\t\tif (ubo) {\n\t\t\tthis._uniformBufferDatas.get(ubo._name).uboBuffer._setData(index, this.getVector(index));\n\t\t\tthis.applyUBO = true;\n\t\t}\n\t}\n\n\t/**\n\t * 获取颜色\n\t * @param index 索引\n\t * @returns 颜色\n\t */\n\tgetColor(index: number): Color {\n\t\treturn this._gammaColorMap.get(index);\n\t}\n\n\t/**\n\t * 设置颜色\n\t * @param index 索引\n\t * @param value 颜色值\n\t */\n\tsetColor(index: number, value: Color): void {\n\t\tif (!value)\n\t\t\treturn;\n\t\tif (this._data[index]) {\n\t\t\tlet gammaColor = this._gammaColorMap.get(index);\n\t\t\tvalue.cloneTo(gammaColor);\n\t\t\tlet linearColor = this._data[index];\n\t\t\tlinearColor.x = Color.gammaToLinearSpace(value.r);\n\t\t\tlinearColor.y = Color.gammaToLinearSpace(value.g);\n\t\t\tlinearColor.z = Color.gammaToLinearSpace(value.b);\n\t\t\tlinearColor.w = value.a;\n\t\t}\n\t\telse {\n\t\t\tlet linearColor = new Vector4();\n\t\t\tlinearColor.x = Color.gammaToLinearSpace(value.r);\n\t\t\tlinearColor.y = Color.gammaToLinearSpace(value.g);\n\t\t\tlinearColor.z = Color.gammaToLinearSpace(value.b);\n\t\t\tlinearColor.w = value.a;\n\t\t\tthis._data[index] = linearColor;\n\t\t\tthis._gammaColorMap.set(index, value.clone());\n\t\t}\n\t\tlet ubo = this._uniformBuffersMap.get(index);\n\t\tif (ubo) {\n\t\t\tthis._uniformBufferDatas.get(ubo._name).uboBuffer._setData(index, this.getLinearColor(index));\n\t\t\tthis.applyUBO = true;\n\n\t\t}\n\t}\n\n\t/**\n\t * @internal\n\t * @param index \n\t */\n\tgetLinearColor(index: number): Vector4 {\n\t\treturn this._data[index];\n\t}\n\n\t/**\n\t * 获取矩阵。\n\t * @param\tindex shader索引。\n\t * @return  矩阵。\n\t */\n\tgetMatrix4x4(index: number): Matrix4x4 {\n\t\treturn this._data[index];\n\t}\n\n\t/**\n\t * 设置矩阵。\n\t * @param\tindex shader索引。\n\t * @param\tvalue  矩阵。\n\t */\n\tsetMatrix4x4(index: number, value: Matrix4x4): void {\n\t\tif (this._data[index]) {\n\t\t\tvalue.cloneTo(this._data[index]);\n\t\t} else {\n\t\t\tthis._data[index] = value.clone();\n\t\t}\n\t\tlet ubo = this._uniformBuffersMap.get(index);\n\t\tif (ubo) {\n\t\t\tthis._uniformBufferDatas.get(ubo._name).uboBuffer._setData(index, this.getMatrix4x4(index));\n\t\t\tthis.applyUBO = true;\n\t\t}\n\t}\n\n\t/**\n\t * 获取矩阵\n\t * @param index \n\t * @returns \n\t */\n\tgetMatrix3x3(index: number): Matrix3x3 {\n\t\treturn this._data[index];\n\t}\n\n\t/**\n\t * 设置矩阵。\n\t * @param index \n\t * @param value \n\t */\n\tsetMatrix3x3(index: number, value: Matrix3x3): void {\n\t\tif (this._data[index]) {\n\t\t\tvalue.cloneTo(this._data[index]);\n\t\t}\n\t\telse {\n\t\t\tthis._data[index] = value.clone();\n\t\t}\n\n\t\tlet ubo = this._uniformBuffersMap.get(index);\n\t\tif (ubo) {\n\t\t\tthis._uniformBufferDatas.get(ubo._name).uboBuffer._setData(index, this.getMatrix3x3(index));\n\t\t}\n\t}\n\n\t/**\n\t * 获取Buffer。\n\t * @param\tindex shader索引。\n\t * @return\n\t */\n\tgetBuffer(index: number): Float32Array {\n\t\treturn this._data[index];\n\t}\n\n\t/**\n\t * 设置Buffer。\n\t * @param\tindex shader索引。\n\t * @param\tvalue  buffer数据。\n\t */\n\tsetBuffer(index: number, value: Float32Array): void {\n\t\tthis._data[index] = value;\n\t}\n\n\t/**\n\t * 设置纹理。\n\t * @param\tindex shader索引。\n\t * @param\tvalue 纹理。\n\t */\n\tsetTexture(index: number, value: BaseTexture): void {\n\t\tvar lastValue: BaseTexture = this._data[index];\n\t\tif (value) {\n\t\t\tlet shaderDefine = ShaderDefine._texGammaDefine[index];\n\t\t\tif (shaderDefine && value && value.gammaCorrection > 1) {\n\t\t\t\tthis.addDefine(shaderDefine);\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// todo 自动的\n\t\t\t\tshaderDefine && this.removeDefine(shaderDefine);\n\t\t\t}\n\t\t}\n\t\t//维护Reference\n\t\tthis._data[index] = value;\n\t\tlastValue && lastValue._removeReference();\n\t\tvalue && value._addReference();\n\t}\n\t/**\n\t * 获取纹理。\n\t * @param\tindex shader索引。\n\t * @return  纹理。\n\t */\n\tgetTexture(index: number): BaseTexture {\n\t\treturn this._data[index];\n\t}\n\n\tgetSourceIndex(value: any) {\n\t\tfor (var i in this._data) {\n\t\t\tif (this._data[i] == value)\n\t\t\t\treturn Number(i);\n\t\t}\n\t\treturn -1;\n\t}\n\n\t/**\n\t * set shader data\n\t * @deprecated\n\t * @param index uniformID\n\t * @param value data\n\t */\n\tsetValueData(index: number, value: any) {\n\t\t//Color 需要特殊处理\n\t\tif (value instanceof Color) {\n\t\t\tthis.setColor(index, value);\n\t\t\treturn;\n\t\t} else if (!value) {\n\t\t\t//value null\n\t\t\tthis._data[index] = value;\n\t\t} else if (!!value.clone) {\n\t\t\tthis._data[index] = value.clone();\n\t\t} else this._data[index] = value;\n\n\t\tlet ubo = this._uniformBuffersMap.get(index);\n\t\tif (ubo) {\n\t\t\tthis._uniformBufferDatas.get(ubo._name).uboBuffer._setData(index, this.getValueData(index));\n\t\t\tthis.applyUBO = true;\n\t\t}\n\t}\n\n\t/**\n\t * \n\t * @param index \n\t * @param value \n\t */\n\tsetUniformBuffer(index: number, value: UniformBufferObject) {\n\t\tthis._data[index] = value;\n\t}\n\n\tgetUniformBuffer(index: number): UniformBufferObject {\n\t\treturn this._data[index];\n\t}\n\n\tsetShaderData(uniformIndex: number, type: ShaderDataType, value: ShaderDataItem | Quaternion) {\n\t\tswitch (type) {\n\t\t\tcase ShaderDataType.Int:\n\t\t\t\tthis.setInt(uniformIndex, <number>value);\n\t\t\t\tbreak;\n\t\t\tcase ShaderDataType.Bool:\n\t\t\t\tthis.setBool(uniformIndex, <boolean>value);\n\t\t\t\tbreak;\n\t\t\tcase ShaderDataType.Float:\n\t\t\t\tthis.setNumber(uniformIndex, <number>value);\n\t\t\t\tbreak;\n\t\t\tcase ShaderDataType.Vector2:\n\t\t\t\tthis.setVector2(uniformIndex, <Vector2>value);\n\t\t\t\tbreak;\n\t\t\tcase ShaderDataType.Vector3:\n\t\t\t\tthis.setVector3(uniformIndex, <Vector3>value);\n\t\t\t\tbreak;\n\t\t\tcase ShaderDataType.Vector4:\n\t\t\t\tthis.setVector(uniformIndex, <Vector4>value);\n\t\t\t\tbreak;\n\t\t\tcase ShaderDataType.Color:\n\t\t\t\tthis.setColor(uniformIndex, <Color>value);\n\t\t\t\tbreak;\n\t\t\tcase ShaderDataType.Matrix4x4:\n\t\t\t\tthis.setMatrix4x4(uniformIndex, <Matrix4x4>value);\n\t\t\t\tbreak;\n\t\t\tcase ShaderDataType.Matrix3x3:\n\t\t\t\tthis.setMatrix3x3(uniformIndex, <Matrix3x3>value);\n\t\t\t\tbreak;\n\t\t\tcase ShaderDataType.Texture2D:\n\t\t\tcase ShaderDataType.TextureCube:\n\t\t\tcase ShaderDataType.Texture2DArray:\n\t\t\tcase ShaderDataType.Texture3D:\n\t\t\t\tthis.setTexture(uniformIndex, <BaseTexture>value);\n\t\t\t\tbreak;\n\t\t\tcase ShaderDataType.Buffer:\n\t\t\t\tthis.setBuffer(uniformIndex, <Float32Array>value);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`unkown shader data type: ${type}`);\n\t\t}\n\t}\n\n\tgetShaderData(uniformIndex: number, type: ShaderDataType) {\n\t\tswitch (type) {\n\t\t\tcase ShaderDataType.Int:\n\t\t\t\treturn this.getInt(uniformIndex);\n\t\t\tcase ShaderDataType.Bool:\n\t\t\t\treturn this.getBool(uniformIndex);\n\t\t\tcase ShaderDataType.Float:\n\t\t\t\treturn this.getNumber(uniformIndex);\n\t\t\tcase ShaderDataType.Vector2:\n\t\t\t\treturn this.getVector2(uniformIndex);\n\t\t\tcase ShaderDataType.Vector3:\n\t\t\t\treturn this.getVector3(uniformIndex);\n\t\t\tcase ShaderDataType.Vector4:\n\t\t\t\treturn this.getVector(uniformIndex);\n\t\t\tcase ShaderDataType.Color:\n\t\t\t\treturn this.getColor(uniformIndex);\n\t\t\tcase ShaderDataType.Matrix4x4:\n\t\t\t\treturn this.getMatrix4x4(uniformIndex);\n\t\t\tcase ShaderDataType.Texture2D:\n\t\t\tcase ShaderDataType.TextureCube:\n\t\t\tcase ShaderDataType.Texture2DArray:\n\t\t\tcase ShaderDataType.Texture3D:\n\t\t\t\treturn this.getTexture(uniformIndex);\n\t\t\tcase ShaderDataType.Buffer:\n\t\t\t\treturn this.getBuffer(uniformIndex);\n\t\t\tcase ShaderDataType.Matrix3x3:\n\t\t\t\treturn this.getMatrix3x3(uniformIndex);\n\t\t\tcase ShaderDataType.Matrix4x4:\n\t\t\t\treturn this.getMatrix4x4(uniformIndex);\n\t\t\tdefault:\n\t\t\t\tthrow \"unkone shader data type.\";\n\t\t}\n\t}\n\n\t/**\n\t * get shader data\n\t * @deprecated\n\t * @param index uniform ID\n\t * @returns \n\t */\n\tgetValueData(index: number): any {\n\t\treturn this._data[index];\n\t}\n\n\t/**\n\t * 克隆。\n\t * @param\tdestObject 克隆源。\n\t */\n\tcloneTo(destObject: ShaderData): void {\n\t\tvar dest: ShaderData = <ShaderData>destObject;\n\t\tvar destData: { [key: string]: number | boolean | Vector2 | Vector3 | Vector4 | Matrix3x3 | Matrix4x4 | BaseTexture } = dest._data;\n\t\tfor (var k in this._data) {//TODO:需要优化,杜绝is判断，慢\n\t\t\tvar value: any = this._data[k];\n\t\t\tif (value != null) {\n\t\t\t\tif (typeof value == \"number\") {\n\t\t\t\t\tdestData[k] = value;\n\t\t\t\t} else if (typeof value == \"number\") {\n\t\t\t\t\tdestData[k] = value;\n\t\t\t\t} else if (typeof value == \"boolean\") {\n\t\t\t\t\tdestData[k] = value;\n\t\t\t\t} else if (value instanceof Vector2) {\n\t\t\t\t\tvar v2 = destData[k] || (destData[k] = new Vector2());\n\t\t\t\t\t(<Vector2>value).cloneTo(v2);\n\t\t\t\t\tdestData[k] = v2;\n\t\t\t\t} else if (value instanceof Vector3) {\n\t\t\t\t\tvar v3 = destData[k] || (destData[k] = new Vector3());\n\t\t\t\t\t(<Vector3>value).cloneTo(v3);\n\t\t\t\t\tdestData[k] = v3;\n\t\t\t\t} else if (value instanceof Vector4) {\n\t\t\t\t\tlet color = this.getColor(parseInt(k));\n\t\t\t\t\tif (color) {\n\t\t\t\t\t\tlet clonecolor = color.clone();\n\t\t\t\t\t\tdestObject.setColor(parseInt(k), clonecolor);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar v4 = destData[k] || (destData[k] = new Vector4());\n\t\t\t\t\t\t(<Vector4>value).cloneTo(v4);\n\t\t\t\t\t\tdestData[k] = v4;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (value instanceof Matrix3x3) {\n\t\t\t\t\tlet mat = destData[k] || (destData[k] = new Matrix3x3());\n\t\t\t\t\tvalue.cloneTo(mat);\n\t\t\t\t\tdestData[k] = mat;\n\t\t\t\t}\n\t\t\t\telse if (value instanceof Matrix4x4) {\n\t\t\t\t\tvar mat = destData[k] || (destData[k] = new Matrix4x4());\n\t\t\t\t\t(<Matrix4x4>value).cloneTo(mat);\n\t\t\t\t\tdestData[k] = mat;\n\t\t\t\t} else if (value instanceof BaseTexture) {\n\t\t\t\t\tdestData[k] = value;\n\t\t\t\t\tvalue._addReference();\n\t\t\t\t} else if (value instanceof Resource) {\n\t\t\t\t\tdestData[k] = value as any;\n\t\t\t\t\tvalue._addReference();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._defineDatas.cloneTo(dest._defineDatas);\n\t\tthis._gammaColorMap.forEach((color, index) => {\n\t\t\tdestObject._gammaColorMap.set(index, color.clone());\n\t\t});\n\n\t\t//UBO Clone\n\t\tthis._cloneUBO(dest._uniformBufferDatas);\n\t\tdest.applyUBO = true;\n\t}\n\n\t/**\n\t * clone UBO Data\n\t * @internal\n\t * @param uboDatas \n\t */\n\t_cloneUBO(uboDatas: Map<string, uboParams>) {\n\t\tthis._uniformBufferDatas.forEach((value, key) => {\n\t\t\tuboDatas.has(key) && (value.uboBuffer.cloneTo(uboDatas.get(key).uboBuffer));\n\t\t});\n\t}\n\n\t/**\n\t * 克隆。\n\t * @return\t 克隆副本。\n\t */\n\tclone(): any {\n\t\tvar dest: ShaderData = new ShaderData();\n\t\tthis.cloneTo(dest);\n\t\treturn dest;\n\t}\n\n\treset() {\n\t\tfor (var k in this._data) {\n\t\t\t//维护Refrence\n\t\t\tvar value: any = this._data[k];\n\t\t\tif (value instanceof Resource) {\n\t\t\t\tvalue._removeReference();\n\t\t\t}\n\t\t}\n\t\tthis._data = {};\n\t\tthis._gammaColorMap.clear();\n\t\tthis._uniformBufferDatas.clear();\n\t\tthis.applyUBO = false;\n\t\tthis._uniformBuffersMap.clear();\n\t\tthis._defineDatas.clear();\n\t}\n\n\tdestroy(): void {\n\t\tthis._defineDatas.destroy();\n\t\tthis._defineDatas = null;\n\t\tfor (var k in this._data) {\n\t\t\t//维护Refrence\n\t\t\tvar value: any = this._data[k];\n\t\t\tif (value instanceof Resource) {\n\t\t\t\tvalue._removeReference();\n\t\t\t}\n\t\t}\n\t\tthis._data = null;\n\t\tthis._gammaColorMap.clear();\n\t\tthis._gammaColorMap = null;\n\t\t// // 使用对象解析\n\t\tdelete this._uniformBufferDatas;\n\t\tdelete this._uniformBuffersMap;\n\t\tthis._uniformBufferDatas = null;\n\t\tthis._uniformBuffersMap = null;\n\t}\n\n}\n","import { Color } from \"../maths/Color\";\nimport { Matrix4x4 } from \"../maths/Matrix4x4\";\nimport { Vector2 } from \"../maths/Vector2\";\nimport { Vector3 } from \"../maths/Vector3\";\nimport { Vector4 } from \"../maths/Vector4\";\nimport { Shader3D } from \"./RenderShader/Shader3D\";\n\n/**\n *描述UniformBuffer参数类型\n */\nexport enum UniformBufferParamsType {\n    Number,\n    Vector2,\n    Vector3,\n    Vector4,\n    Matrix4x4,\n    Vector4Array,//Numberarray, vec2array and vec3array occupy the same memory as vec4array, so only vector4 is provided\n    MatrixArray\n}\n\n/**\n * 实例化UniformBuffer数据\n * 注：要与glsl中Uniform block结构相同\n */\nexport class UnifromBufferData {\n\n    /**\n     * @internal\n     * key: UniformID,value: x:offset y:length z:\n     */\n    protected _layoutMap: any;\n\n    /**\n     * @internal\n     * data length\n     */\n    protected _bytelength: number;\n\n    /**\n     * @internal\n     * params describe\n     */\n    _uniformParamsState: Map<number, UniformBufferParamsType>;\n\n    /**\n     * @internal\n     * update frome x to max,x:min,y:max\n     */\n    _updateFlag: Vector2;\n\n    /**\n     * Buffer Data\n     */\n    _buffer: Float32Array;\n\n    /**\n     * create UniformBufferData Instance\n     * @param uniformParamsStat Params describe\n     */\n    constructor(uniformParamsStat: Map<number, UniformBufferParamsType>) {\n        // todo 后面改掉 不用map 初始化\n        this._uniformParamsState = new Map(uniformParamsStat);\n        this._createBuffer();\n        this._updateFlag = new Vector2();\n        this._resetUpdateFlag();\n    }\n\n    /**\n     * @internal \n     * createBuffer\n     */\n    protected _createBuffer() {\n        var dataPos = 0;\n        this._layoutMap = {};\n        const elementSize = 4;\n        this._uniformParamsState.forEach((key, value) => {\n            dataPos += this._addUniformParams(value, key, dataPos);\n        });\n        //这里需要对手机平台做兼容\n        //this._bytelength = dataPos * elementSize;\n        this._bytelength = Math.ceil(dataPos / 4) * 4 * elementSize;\n        this._buffer = new Float32Array(dataPos);\n    }\n\n    /**\n     * @internal\n     */\n    protected _getArraySize(key: string) {\n        let left = key.indexOf(\"[\");\n        let right = key.indexOf(\"]\");\n        if (left != -1 && right != -1 && left < right) {\n            return parseFloat(key.substring(left + 1, right));\n        } else\n            throw key + \" is illegal \"\n    }\n\n    /**\n     * @interanl\n     * layout UniformBuffer pitch std140\n     */\n    protected _addUniformParams(uniformID: number, value: UniformBufferParamsType, offset: number): number {\n        let size: number = 0;\n        let posAdd: number = 0;\n        let posG = offset % 4;\n        let offsetadd;\n        switch (value) {\n            case UniformBufferParamsType.Number:\n                size = 1;\n                posAdd = 1;\n                break;\n            case UniformBufferParamsType.Vector2:\n                size = 2;\n                switch (posG) {\n                    case 0:\n                    case 2:\n                        posAdd = 2;\n                        break;\n                    case 1:\n                    case 3:\n                        offset += 1;\n                        posAdd = 3;\n                        break;\n                }\n                break;\n            case UniformBufferParamsType.Vector3:\n                size = 3;\n                posAdd = 3;\n                switch (posG) {\n                    case 1:\n                    case 2:\n                    case 3:\n                        offset += (4 - posG);\n                        posAdd = (4 - posG) + 3;\n                        break;\n                }\n                break;\n            case UniformBufferParamsType.Vector4:\n                //case UniformBufferParamsType.Color:\n                size = 4;\n                switch (posG) {\n                    case 0:\n                        posAdd = 4;\n                        break;\n                    case 1:\n                        offset += 3;\n                        posAdd = 7;\n                        break;\n                    case 2:\n                        offset += 2;\n                        posAdd = 6;\n                        break;\n                    case 3:\n                        offset += 1;\n                        posAdd = 5;\n                        break;\n                }\n                break;\n            case UniformBufferParamsType.Matrix4x4:\n                size = 16;\n                offsetadd = posG ? 4 - posG : posG;\n                offset += offsetadd\n                posAdd = size + offsetadd;\n                break;\n            case UniformBufferParamsType.Vector4Array:\n                size = this._getArraySize(Shader3D.propertyIDToName(uniformID)) * 4;\n                offsetadd = posG ? 4 - posG : posG;\n                offset += offsetadd\n                posAdd = size + offsetadd;\n                break;\n            case UniformBufferParamsType.MatrixArray:\n                size = this._getArraySize(Shader3D.propertyIDToName(uniformID)) * 16;\n                offsetadd = posG ? 4 - posG : posG;\n                offset += offsetadd\n                posAdd = size + offsetadd;\n                break;\n            default:\n                throw \"Unifrom Buffer Params Type is illegal \"\n        }\n        const paramsInfo = new Vector2(offset, size);\n        this._layoutMap[uniformID] = paramsInfo;\n        return posAdd;\n    }\n\n    /**\n     * @internal\n     */\n    private _getParamsInfo(key: number): Vector2 {\n        return this._layoutMap[key];\n    }\n\n    /**\n     * @interanl\n     * set upload range\n     */\n    private _setUpdateFlag(min: number, max: number) {\n        if (min < this._updateFlag.x)\n            this._updateFlag.x = min;\n        if (max > this._updateFlag.y)\n            this._updateFlag.y = max;\n\n    }\n\n    /**\n     * @internal\n     */\n    destroy() {\n        delete this._buffer;\n        this._uniformParamsState.clear();\n        this._uniformParamsState = null;\n        this._layoutMap = null;\n        this._updateFlag = null;\n    }\n\n    /**\n     * @internal\n     */\n    _resetUpdateFlag() {\n        this._updateFlag.setValue(this._buffer.length, 0);\n    }\n\n    /**\n     * @internal\n     * @param uniformID \n     * @returns \n     */\n    _has(uniformID: number) {\n        const info = this._getParamsInfo(uniformID);\n        return !!info;\n    }\n\n    /**\n     * @internal\n     * set buffer params Data\n     */\n    _setData(uniformID: number, value: any) {\n\n        let uniformType = this._uniformParamsState.get(uniformID);\n\n        switch (uniformType) {\n            case UniformBufferParamsType.Number:\n                this.setNumberbyIndex(uniformID, value);\n                break;\n            case UniformBufferParamsType.Vector2:\n                this.setVector2byIndex(uniformID, value);\n                break;\n            case UniformBufferParamsType.Vector3:\n                this.setVector3byIndex(uniformID, value);\n                break;\n            case UniformBufferParamsType.Vector4:\n                this.setVector4byIndex(uniformID, value);\n                break;\n            // case UniformBufferParamsType.Color:\n            //     this.setColorbyIndex(uniformID, value);\n            //     break;\n            case UniformBufferParamsType.Matrix4x4:\n                this.setMatrixbyIndex(uniformID, value);\n                break;\n            case UniformBufferParamsType.Vector4Array:\n                this.setVector4ArraybyIndex(uniformID, value);\n                break;\n            case UniformBufferParamsType.MatrixArray:\n                this.setMatrixArraybyIndex(uniformID, value);\n                break;\n            // todo\n            default:\n                break;\n        }\n    }\n\n    /**\n     * get Buffer byte length\n     * @returns \n     */\n    getbyteLength(): number {\n        return this._bytelength;\n    }\n\n    /**\n     * set Vector4Array by paramsName\n     * @param name uniform params name\n     * @param value vector4Array data\n     */\n    setVector4Array(name: string, value: Vector4[]) {\n        const uniformID: number = Shader3D.propertyNameToID(name);\n        this.setVector4ArraybyIndex(uniformID, value);\n    }\n\n    /**\n     * set Vector4Array by paramsIndex\n     * @param uniformID uniform params index\n     * @param value vector4Array data\n     * @returns \n     */\n    setVector4ArraybyIndex(uniformID: number, value: Vector4[]) {\n        const info = this._getParamsInfo(uniformID);\n        if (!info) return;\n        let pos = info.x;\n        let count = info.y / 4;\n        for (let i = 0; i < count; i++) {\n            let vec = value[i];\n            this._buffer[pos++] = vec.x;\n            this._buffer[pos++] = vec.y;\n            this._buffer[pos++] = vec.z;\n            this._buffer[pos++] = vec.w;\n        }\n        this._setUpdateFlag(info.x, pos);\n    }\n\n    /**\n     * set MatrixArray by paramsName\n     * @param name uniform params name\n     * @param value MatrixArray data\n     */\n    setMatrixArray(name: string, value: Matrix4x4[]) {\n        const uniformID: number = Shader3D.propertyNameToID(name);\n        this.setMatrixArraybyIndex(uniformID, value);\n    }\n\n    /**\n     * set MatrixArray by paramsIndex\n     * @param uniformID uniform params index\n     * @param value MatrixArray data\n     * @returns \n     */\n    setMatrixArraybyIndex(uniformID: number, value: Matrix4x4[]) {\n        const info = this._getParamsInfo(uniformID);\n        if (!info) return;\n        let pos = info.x;\n        let count = info.y / 4;\n        for (let i = 0; i < count; i++) {\n            let mat = value[i];\n            this._buffer.set(mat.elements, pos);\n            pos += 16;\n        }\n        this._setUpdateFlag(info.x, pos);\n    }\n\n    /**\n     * set Number by paramsName\n     * @param name uniform params name\n     * @param value Number data\n     */\n    setNumber(name: string, value: number) {\n        const uniformID: number = Shader3D.propertyNameToID(name);\n        this.setNumberbyIndex(uniformID, value);\n    }\n\n    /**\n     * set Number by paramsIndex\n     * @param uniformID uniform params index\n     * @param value Number data\n     * @returns \n     */\n    setNumberbyIndex(uniformID: number, value: number) {\n        const info = this._getParamsInfo(uniformID);\n        if (!info) return;\n        let pos = info.x;\n        this._buffer[pos++] = value;\n        this._setUpdateFlag(info.x, pos);\n    }\n\n    /**\n     * set Vector2 by paramsName\n     * @param name uniform params name\n     * @param value Vector2 data\n     */\n    setVector2(name: string, value: Vector2) {\n        const uniformID: number = Shader3D.propertyNameToID(name);\n        this.setVector2byIndex(uniformID, value);\n    }\n\n    /**\n     * set Vector2 by paramsIndex\n     * @param uniformID uniform params index\n     * @param value Vector2 data\n     * @returns \n     */\n    setVector2byIndex(uniformID: number, value: Vector2) {\n        const info = this._getParamsInfo(uniformID);\n        if (!info) return;\n        let pos = info.x;\n        this._buffer[pos++] = value.x;\n        this._buffer[pos++] = value.y;\n        this._setUpdateFlag(info.x, pos);\n    }\n\n    /**\n     * set Vector3 by paramsName\n     * @param name uniform params name\n     * @param value Vector3 data\n     */\n    setVector3(name: string, value: Vector3) {\n        const uniformID: number = Shader3D.propertyNameToID(name);\n        this.setVector3byIndex(uniformID, value);\n    }\n\n    /**\n     * set Vector3 by uniformID\n     * @param uniformID uniform params index\n     * @param value Vector3 data\n     * @returns \n     */\n    setVector3byIndex(uniformID: number, value: Vector3) {\n        const info = this._getParamsInfo(uniformID);\n        if (!info) return;\n        let pos = info.x;\n        this._buffer[pos++] = value.x;\n        this._buffer[pos++] = value.y;\n        this._buffer[pos++] = value.z;\n        this._setUpdateFlag(info.x, pos);\n    }\n\n    /**\n     * set Vector4 by paramsName\n     * @param name uniform params name\n     * @param value Vector4 data\n     */\n    setVector4(name: string, value: Vector4) {\n        const uniformID: number = Shader3D.propertyNameToID(name);\n        this.setVector4byIndex(uniformID, value);\n    }\n\n    /**\n     * set Vector4 by paramsIndex\n     * @param uniformID uniform params index\n     * @param value Vector4 data\n     * @returns \n     */\n    setVector4byIndex(uniformID: number, value: Vector4) {\n        const info = this._getParamsInfo(uniformID);\n        if (!info) return;\n        let pos = info.x;\n        this._buffer[pos++] = value.x;\n        this._buffer[pos++] = value.y;\n        this._buffer[pos++] = value.z;\n        this._buffer[pos++] = value.w;\n        this._setUpdateFlag(info.x, pos);\n    }\n\n    /**\n     * set Color by paramsName\n     * @param name uniform params name\n     * @param value Color data\n     */\n    setColor(name: string, value: Color) {\n        const uniformID: number = Shader3D.propertyNameToID(name);\n        this.setColorbyIndex(uniformID, value);\n    }\n\n    setColorbyIndex(uniformID: number, value: Color) {\n        const info = this._getParamsInfo(uniformID);\n        if (!info) return;\n        let pos = info.x;\n        this._buffer[pos++] = Color.gammaToLinearSpace(value.r);\n        this._buffer[pos++] = Color.gammaToLinearSpace(value.g);\n        this._buffer[pos++] = Color.gammaToLinearSpace(value.b);\n        this._buffer[pos++] = Color.gammaToLinearSpace(value.a);\n        this._setUpdateFlag(info.x, pos);\n\n    }\n\n    /**\n     * set Matrix by paramsName\n     * @param name uniform params name\n     * @param value Matrix data\n     */\n    setMatrix(name: string, value: Matrix4x4) {\n        const uniformID: number = Shader3D.propertyNameToID(name);\n        this.setMatrixbyIndex(uniformID, value);\n    }\n\n    /**\n     * set Matrix by paramsIndex\n     * @param uniformID uniform params index\n     * @param value Matrix data\n     * @returns \n     */\n    setMatrixbyIndex(uniformID: number, value: Matrix4x4) {\n        const info = this._getParamsInfo(uniformID);\n        if (!info) return;\n        let pos = info.x;\n        this._buffer.set(value.elements, pos);\n        pos += 16;\n        this._setUpdateFlag(info.x, pos);\n    }\n\n\n    clone(): UnifromBufferData {\n        // todo clone 更改\n        let ubd = new UnifromBufferData(this._uniformParamsState);\n        this.cloneTo(ubd);\n        return ubd\n    }\n\n    cloneTo(destObject: UnifromBufferData) {\n        if (destObject._bytelength == this._bytelength) {\n            destObject._buffer = Float32Array.from(this._buffer);\n            this._updateFlag.setValue(0, this._buffer.length);\n        }\n    }\n}","export enum RenderParams{\n    Max_Active_Texture_Count,//可激活的纹理数量，即shader中的最大纹理数量\n    Max_Uniform_Count,//最大Uniform数量\n    Max_AnisoLevel_Count,//最大各向异性数量\n    MAX_Texture_Size,//Shader中的最大纹理\n    MAX_Texture_Image_Uint,//图形设备支持的最大纹理数量。\n    SHADER_CAPAILITY_LEVEL,//Shader质量\n    FLOAT,\n    UNSIGNED_BYTE,\n    BYTE,\n    UNSIGNED_SHORT,\n}","/**\n * 纹理寻址模式。\n */\nexport enum WrapMode {\n    /** 循环平铺。*/\n    Repeat = 0,\n    /** 超过UV边界后采用最后一个像素。*/\n    Clamp = 1,\n    /** 镜像采样 */\n    Mirrored = 2\n}","import { DefineDatas } from \"../../RenderEngine/RenderShader/DefineDatas\";\nimport { Shader3D } from \"../../RenderEngine/RenderShader/Shader3D\";\nimport { ShaderDataType } from \"../../RenderEngine/RenderShader/ShaderData\";\nimport { ShaderInstance } from \"../../RenderEngine/RenderShader/ShaderInstance\";\nimport { SubShader, UniformMapType } from \"../../RenderEngine/RenderShader/SubShader\";\nimport { LayaGL } from \"../../layagl/LayaGL\";\nimport { IShaderCompiledObj } from \"./ShaderCompile\";\nimport { ShaderNode } from \"./ShaderNode\";\nexport class ShaderProcessInfo {\n    defineString: string[];\n    vs: ShaderNode;\n    ps: ShaderNode;\n    attributeMap: { [name: string]: [number, ShaderDataType] };\n    uniformMap: UniformMapType;\n    is2D: boolean;\n    //....其他数据\n};\nexport class ShaderCompileDefineBase {\n    /** @internal */\n    static _defineString: Array<string> = [];\n    /** @internal */\n    static _debugDefineString: string[] = [];\n    /** @internal */\n    static _debugDefineMask: number[] = [];\n    /** @internal */\n    public _VS: ShaderNode;\n    /** @internal */\n    public _PS: ShaderNode;\n    /** @internal */\n    _defs: Set<string>;\n    /** @internal */\n    _validDefine: DefineDatas = new DefineDatas();\n    /** @internal */\n    protected _cacheShaderHierarchy: number = 1;\n    /** @internal */\n    protected _owner: SubShader;\n    /** @internal */\n    name: string;\n\n    nodeCommonMap: Array<string>;\n    /** @internal */\n    protected _cacheSharders: { [key: number]: { [key: number]: { [key: number]: ShaderInstance } } } = {};\n\n    constructor(owner: any, name: string, compiledObj: IShaderCompiledObj) {\n        this._owner = owner;\n        this.name = name;\n        this._VS = compiledObj.vsNode;\n        this._PS = compiledObj.psNode;\n        this._defs = compiledObj.defs;\n        for (let k of compiledObj.defs)\n            this._validDefine.add(Shader3D.getDefineByName(k));\n    }\n\n    /**\n     * @internal\n     */\n    _resizeCacheShaderMap(cacheMap: any, hierarchy: number, resizeLength: number): void {\n        var end: number = this._cacheShaderHierarchy - 1;\n        if (hierarchy == end) {\n            for (var k in cacheMap) {\n                var shader = cacheMap[k];\n                for (var i: number = 0, n: number = resizeLength - end; i < n; i++) {\n                    if (i == n - 1)\n                        cacheMap[0] = shader;//0替代(i == 0 ? k : 0),只扩不缩\n                    else\n                        cacheMap = cacheMap[i == 0 ? k : 0] = {};\n                }\n            }\n        }\n        else {\n            ++hierarchy;\n            for (var k in cacheMap)\n                this._resizeCacheShaderMap(cacheMap[k], hierarchy, resizeLength);\n        }\n    }\n\n    /**\n     * @internal\n     */\n    withCompile(compileDefine: DefineDatas): ShaderInstance {\n        var debugDefineString: string[] = ShaderCompileDefineBase._debugDefineString;\n        var debugDefineMask: number[] = ShaderCompileDefineBase._debugDefineMask;\n        var debugMaskLength: number;\n        compileDefine._intersectionDefineDatas(this._validDefine);\n        if (Shader3D.debugMode) {//add shader variant info to debug ShaderVariantCollection\n            debugMaskLength = compileDefine._length;\n        }\n        //compileDefine.addDefineDatas(Scene3D._configDefineValues);\n\n        var cacheShaders: any = this._cacheSharders;\n        var maskLength: number = compileDefine._length;\n        if (maskLength > this._cacheShaderHierarchy) {//扩充已缓存ShaderMap\n            this._resizeCacheShaderMap(cacheShaders, 0, maskLength);\n            this._cacheShaderHierarchy = maskLength;\n        }\n\n        var mask: Array<number> = compileDefine._mask;\n        var endIndex: number = compileDefine._length - 1;\n        var maxEndIndex: number = this._cacheShaderHierarchy - 1;\n        for (var i: number = 0; i < maxEndIndex; i++) {\n            var subMask: number = endIndex < i ? 0 : mask[i];\n            var subCacheShaders = cacheShaders[subMask];\n            (subCacheShaders) || (cacheShaders[subMask] = subCacheShaders = {});\n            cacheShaders = subCacheShaders;\n        }\n\n        var cacheKey: number = endIndex < maxEndIndex ? 0 : mask[maxEndIndex];\n        var shader: ShaderInstance = cacheShaders[cacheKey];\n        if (shader)\n            return shader;\n\n        var defineString: string[] = ShaderCompileDefineBase._defineString;\n        //TODO\n        Shader3D._getNamesByDefineData(compileDefine, defineString);\n        let shaderProcessInfo: ShaderProcessInfo = new ShaderProcessInfo();\n        shaderProcessInfo.is2D = true;\n        shaderProcessInfo.vs = this._VS;\n        shaderProcessInfo.ps = this._PS;\n        shaderProcessInfo.attributeMap = this._owner._attributeMap;\n        shaderProcessInfo.uniformMap = this._owner._uniformMap;\n        shaderProcessInfo.defineString = defineString;\n\n        shader = LayaGL.renderOBJCreate.createShaderInstance(shaderProcessInfo, this);\n\n        cacheShaders[cacheKey] = shader;\n\n        if (Shader3D.debugMode) {\n            var defStr: string = \"\";\n            var defMask: string = \"\";\n\n            for (var i: number = 0, n: number = debugMaskLength; i < n; i++)\n                (i == n - 1) ? defMask += debugDefineMask[i] : defMask += debugDefineMask[i] + \",\";\n            for (var i: number = 0, n: number = debugDefineString.length; i < n; i++)\n                (i == n - 1) ? defStr += debugDefineString[i] : defStr += debugDefineString[i] + \",\";\n\n            console.log(\"%cLayaAir: Shader Compile Information---ShaderName:\" + this.name + \" \" + \" DefineMask:[\" + defMask + \"]\" + \" DefineNames:[\" + defStr + \"]\", \"color:green\");\n        }\n\n        return shader;\n    }\n}","import { SubShader } from \"./SubShader\";\nimport { ShaderCompileDefineBase, ShaderProcessInfo } from \"../../webgl/utils/ShaderCompileDefineBase\";\nimport { DefineDatas } from \"../../RenderEngine/RenderShader/DefineDatas\";\nimport { Shader3D } from \"../../RenderEngine/RenderShader/Shader3D\";\nimport { ShaderVariant } from \"../../RenderEngine/RenderShader/ShaderVariantCollection\";\nimport { IShaderCompiledObj } from \"../../webgl/utils/ShaderCompile\";\nimport { RenderState } from \"./RenderState\";\nimport { ShaderInstance } from \"./ShaderInstance\";\nimport { LayaGL } from \"../../layagl/LayaGL\";\n\n\n/**\n * <code>ShaderPass</code> 类用于实现ShaderPass。\n */\nexport class ShaderPass extends ShaderCompileDefineBase {\n\n    /** @internal */\n    private static _defineStrings: Array<string> = [];\n    /** @internal */\n    private static _debugDefineStrings: string[] = [];\n    /** @internal */\n    private static _debugDefineMasks: number[] = [];\n    /** @internal */\n    private _renderState: RenderState;\n    /** @internal */\n    _tags: any = {};\n    /** @internal */\n    _pipelineMode: string;\n    /**@internal */\n    _nodeUniformCommonMap: Array<string>;\n    /** 优先 ShaderPass 渲染状态 */\n    statefirst: boolean = false;\n\n    /**\n     * 渲染状态。\n     */\n    get renderState(): RenderState {\n        return this._renderState;\n    }\n\n    constructor(owner: SubShader, compiledObj: IShaderCompiledObj) {\n        super(owner, null, compiledObj);\n        this._renderState = LayaGL.renderOBJCreate.createRenderState();\n        this._renderState.setNull();\n    }\n\n    /**\n     * @internal\n     */\n    _addDebugShaderVariantCollection(compileDefine: DefineDatas, outDebugDefines: string[], outDebugDefineMask: number[]): void {\n        var dbugShaderVariantInfo: ShaderVariant = Shader3D._debugShaderVariantInfo;\n        var debugSubShader: SubShader = this._owner;\n        var debugShader: Shader3D = debugSubShader._owner;\n        var mask: number[] = compileDefine._mask;\n        Shader3D._getNamesByDefineData(compileDefine, outDebugDefines);\n        outDebugDefineMask.length = mask.length;\n        for (var i: number = 0, n: number = mask.length; i < n; i++)\n            outDebugDefineMask[i] = mask[i];\n\n        if (dbugShaderVariantInfo)\n            dbugShaderVariantInfo.setValue(debugShader, debugShader._subShaders.indexOf(debugSubShader), debugSubShader._passes.indexOf(this), outDebugDefines);\n        else\n            Shader3D._debugShaderVariantInfo = dbugShaderVariantInfo = new ShaderVariant(debugShader, debugShader._subShaders.indexOf(debugSubShader), debugSubShader._passes.indexOf(this), outDebugDefines);\n        Shader3D.debugShaderVariantCollection.add(dbugShaderVariantInfo);\n    }\n\n    /**\n     * @override\n     * @internal\n     */\n    withCompile(compileDefine: DefineDatas, IS2d: boolean = false): ShaderInstance {\n        var debugDefineString: string[] = ShaderPass._debugDefineStrings;\n        var debugDefineMask: number[] = ShaderPass._debugDefineMasks;\n        var debugMaskLength: number;\n        compileDefine._intersectionDefineDatas(this._validDefine);\n        if (Shader3D.debugMode) {//add shader variant info to debug ShaderVariantCollection\n            debugMaskLength = compileDefine._length;\n            this._addDebugShaderVariantCollection(compileDefine, debugDefineString, debugDefineMask);\n        }\n\n        var cacheShaders: any = this._cacheSharders;\n        var maskLength: number = compileDefine._length;\n        if (maskLength > this._cacheShaderHierarchy) {//扩充已缓存ShaderMap\n            this._resizeCacheShaderMap(cacheShaders, 0, maskLength);\n            this._cacheShaderHierarchy = maskLength;\n        }\n\n        var mask: Array<number> = compileDefine._mask;\n        var endIndex: number = compileDefine._length - 1;\n        var maxEndIndex: number = this._cacheShaderHierarchy - 1;\n        for (var i: number = 0; i < maxEndIndex; i++) {\n            var subMask: number = endIndex < i ? 0 : mask[i];\n            var subCacheShaders = cacheShaders[subMask];\n            (subCacheShaders) || (cacheShaders[subMask] = subCacheShaders = {});\n            cacheShaders = subCacheShaders;\n        }\n\n        var cacheKey: number = endIndex < maxEndIndex ? 0 : mask[maxEndIndex];\n        var shader: ShaderInstance = cacheShaders[cacheKey];\n        if (shader)\n            return shader;\n\n        let shaderProcessInfo: ShaderProcessInfo = new ShaderProcessInfo();\n        shaderProcessInfo.is2D = IS2d;\n        shaderProcessInfo.vs = this._VS;\n        shaderProcessInfo.ps = this._PS;\n        shaderProcessInfo.attributeMap = this._owner._attributeMap;\n        shaderProcessInfo.uniformMap = this._owner._uniformMap;\n\n        var defineString: string[] = ShaderPass._defineStrings;\n        Shader3D._getNamesByDefineData(compileDefine, defineString);\n        shaderProcessInfo.defineString = defineString;\n\n        shader = LayaGL.renderOBJCreate.createShaderInstance(shaderProcessInfo, this);\n\n        cacheShaders[cacheKey] = shader;\n\n        if (Shader3D.debugMode) {\n            var defStr: string = \"\";\n            var defCommonStr: string = \"\";\n            var defMask: string = \"\";\n            var spriteCommonNode: string = \"\";\n            for (var i: number = 0, n: number = debugMaskLength; i < n; i++) {\n                (i == n - 1) ? defMask += debugDefineMask[i] : defMask += debugDefineMask[i] + \",\";\n            }\n            // for (var i: number = 0, n: number = debugDefineString.length; i < n; i++){}\n            //     (i == n - 1) ? defStr += debugDefineString[i] : defStr += debugDefineString[i] + \",\";\n            for (var i: number = 0, n: number = debugDefineString.length; i < n; i++) {\n                if (Shader3D._configDefineValues.has(Shader3D.getDefineByName(debugDefineString[i])))\n                    defCommonStr += debugDefineString[i] + \",\";\n                else\n                    defStr += debugDefineString[i] + \",\";\n            }\n            if (this.nodeCommonMap) {\n                for (var j = 0; j < this.nodeCommonMap.length; j++) {\n                    spriteCommonNode += this.nodeCommonMap[j] + \",\";\n                }\n            }\n            console.log(\"%cLayaAir: Shader Compile Information---ShaderName:\" + this._owner._owner._name +\n                \" SubShaderIndex:\" + this._owner._owner._subShaders.indexOf(this._owner) +\n                \" PassIndex:\" + this._owner._passes.indexOf(this) +\n                \" DefineMask:[\" + defMask + \"]\" +\n                \" DefineNames:[\" + defStr + \"]\" +\n                \" Environment Macro DefineNames:[\" + defCommonStr + \"]\" +\n                \"Sprite CommonNode:[\" + spriteCommonNode + \"]\",\n                \"color:green\");\n        }\n        return shader;\n    }\n}\n\n","/**\n* <code>VertexElement</code> 类用于创建顶点结构分配。\n*/\nexport class VertexElement {\n    /**@internal */\n    _offset: number;\n    /**@internal */\n    _elementFormat: string;\n    /**@internal */\n    _elementUsage: number;\n    //usageIndex:int;//TODO:待确定是否添加\n\n    /**\n     * 顶点偏移\n     */\n    get offset(): number {\n        return this._offset;\n    }\n    /**\n     * 顶点信息名称\n     */\n    get elementFormat(): string {\n        return this._elementFormat;\n    }\n\n    /**\n     * 顶点宏标记\n     */\n    get elementUsage(): number {\n        return this._elementUsage;\n    }\n\n    /**\n     * 创建顶点结构分配实例\n     * @param offset 顶点偏移\n     * @param elementFormat 顶点数据格式名称\n     * @param elementUsage 顶点宏标记\n     */\n    constructor(offset: number, elementFormat: string, elementUsage: number) {\n        this._offset = offset;\n        this._elementFormat = elementFormat;\n        this._elementUsage = elementUsage;\n        //this.usageIndex = usageIndex;\n    }\n}\n\n","import { RenderParams } from \"../RenderEngine/RenderEnum/RenderParams\";\nimport { LayaGL } from \"../layagl/LayaGL\";\n\n\n/**\n * 类用来定义顶点元素格式\n */\nexport class VertexElementFormat {\n\t/**单精度浮点数 */\n\tstatic Single: string = \"single\";\n\t/**vec2 数据*/\n\tstatic Vector2: string = \"vector2\";\n\t/**vec3 数据*/\n\tstatic Vector3: string = \"vector3\";\n\t/**vec4 数据 */\n\tstatic Vector4: string = \"vector4\";\n\t/**颜色 */\n\tstatic Color: string = \"color\";\n\t/**字节数组4 */\n\tstatic Byte4: string = \"byte4\";\n\t/**字节数组3 */\n\tstatic Byte3: string = \"byte3\";\n\t/**字节数组2 */\n\tstatic Byte2: string = \"byte2\";\n\t/**字节数组1 */\n\tstatic ByteOne:string = \"byte\";\n\t/**半精度浮点数数组2 */\n\tstatic Short2: string = \"short2\";\n\t/**半精度浮点数数组4 */\n\tstatic Short4: string = \"short4\";\n\t/**归一化半精度浮点数组2 */\n\tstatic NormalizedShort2: string = \"normalizedshort2\";\n\t/**归一化半精度浮点数组4 */\n\tstatic NormalizedShort4: string = \"normalizedshort4\";\n\t/**@internal */\n\tstatic HalfVector2: string = \"halfvector2\";\n\t/**@internal */\n\tstatic HalfVector4: string = \"halfvector4\";\n\t/**@internal */\n\tstatic NorByte4: string = \"nbyte4\";\n\n\t/** @internal [组数量,数据类型,是否归一化:0为false]。*/\n\tprivate static _elementInfos: any;\n\t/**@internal */\n\tstatic __init__(): void {\n\t\tVertexElementFormat._elementInfos = {\n\t\t\t\"single\": [1, LayaGL.renderEngine.getParams(RenderParams.FLOAT), 0],\n\t\t\t\"vector2\": [2, LayaGL.renderEngine.getParams(RenderParams.FLOAT), 0],\n\t\t\t\"vector3\": [3, LayaGL.renderEngine.getParams(RenderParams.FLOAT), 0],\n\t\t\t\"vector4\": [4, LayaGL.renderEngine.getParams(RenderParams.FLOAT), 0],\n\t\t\t\"color\": [4, LayaGL.renderEngine.getParams(RenderParams.FLOAT), 0],\n\t\t\t\"byte4\": [4, LayaGL.renderEngine.getParams(RenderParams.UNSIGNED_BYTE), 0],\n\t\t\t\"byte3\": [3,  LayaGL.renderEngine.getParams(RenderParams.UNSIGNED_BYTE), 0],\n\t\t\t\"byte2\": [2,  LayaGL.renderEngine.getParams(RenderParams.UNSIGNED_BYTE), 0],\n\t\t\t\"byte\": [1,  LayaGL.renderEngine.getParams(RenderParams.UNSIGNED_BYTE), 0],\n\t\t\t\"short2\": [2,  LayaGL.renderEngine.getParams(RenderParams.UNSIGNED_SHORT), 0],\n\t\t\t\"short4\": [4, LayaGL.renderEngine.getParams(RenderParams.UNSIGNED_SHORT), 0],\n\t\t\t\"normalizedshort2\": [2, LayaGL.renderEngine.getParams(RenderParams.UNSIGNED_SHORT), 1],\n\t\t\t\"normalizedshort4\": [4, LayaGL.renderEngine.getParams(RenderParams.UNSIGNED_SHORT), 1],\n\t\t\t\"halfvector2\": [2, LayaGL.renderEngine.getParams(RenderParams.FLOAT), 0],\n\t\t\t\"halfvector4\": [4, LayaGL.renderEngine.getParams(RenderParams.FLOAT), 0],\n\t\t\t\"nbyte4\":[4,LayaGL.renderEngine.getParams(RenderParams.BYTE),1],\n\t\t};\n\t}\n\n\t/**\n\t * 获取顶点元素格式信息。\n\t * @param element 元素名称\n\t * @returns 返回顶点元素信息\n\t */\n\tstatic getElementInfos(element: string): any[] {\n\t\tvar info: any[] = VertexElementFormat._elementInfos[element];\n\t\tif (info)\n\t\t\treturn info;\n\t\telse\n\t\t\tthrow \"VertexElementFormat: this vertexElementFormat is not implement.\";\n\t}\n}\n\n","import { VertexElement } from \"../renders/VertexElement\";\nimport { VertexElementFormat } from \"../renders/VertexElementFormat\";\nimport { VAElement } from \"./VertexAttributeLayout\"\n/**\n * <code>VertexDeclaration</code> 类用于生成顶点声明。\n */\nexport class VertexDeclaration {\n    /**@internal */\n    private static _uniqueIDCounter: number = 1;\n\n    /**@internal */\n    private _id: number;\n    /**@internal */\n    private _vertexStride: number;\n    /**@internal */\n    private _vertexElementsDic: { [key: string]: VertexElement };\n    /**@internal */\n    _shaderValues: { [key: number]: Int32Array };\n\n    /**@internal [只读]*/\n    _vertexElements: Array<VertexElement>;\n    /**@internal */\n    _VAElements: Array<VAElement>;\n    /**\n     * 获取唯一标识ID(通常用于优化或识别)。\n     * @return 唯一标识ID\n     */\n    get id(): number {\n        return this._id;\n    }\n\n    /**\n     * 顶点跨度，以字节为单位。\n     */\n    get vertexStride(): number {\n        return this._vertexStride;\n    }\n\n    /**\n     * 顶点元素的数量。\n     */\n    get vertexElementCount(): number {\n        return this._vertexElements.length;\n    }\n\n    /**\n     * 创建一个 <code>VertexDeclaration</code> 实例。\n     * @param\tvertexStride 顶点跨度。\n     * @param\tvertexElements 顶点元素集合。\n     */\n    constructor(vertexStride: number, vertexElements: Array<VertexElement>) {\n        this._id = ++VertexDeclaration._uniqueIDCounter;\n        this._vertexElementsDic = {};\n        this._vertexStride = vertexStride;\n        this._vertexElements = vertexElements;\n        this._VAElements = [];\n        var count: number = vertexElements.length;\n        this._shaderValues = {};\n\n        for (var j: number = 0; j < count; j++) {\n            var vertexElement: VertexElement = vertexElements[j];\n            var name: number = vertexElement._elementUsage;\n            this._vertexElementsDic[name] = vertexElement;\n            var value: Int32Array = new Int32Array(5);\n            var elmentInfo: any[] = VertexElementFormat.getElementInfos(vertexElement._elementFormat);\n            value[0] = elmentInfo[0];\n            value[1] = elmentInfo[1];\n            value[2] = elmentInfo[2];\n            value[3] = this._vertexStride;\n            value[4] = vertexElement._offset;\n            this._shaderValues[name] = value;\n\n            //VAElement\n            this._VAElements.push({ format: vertexElement._elementFormat, stride: vertexElement._offset, shaderLocation: name })\n        }\n    }\n\n    /**\n     * 通过索引获取顶点元素。\n     * @param index 索引。\n     */\n    getVertexElementByIndex(index: number): VertexElement {\n        return this._vertexElements[index];\n    }\n\n    /**\n     * get vertexElement by usage\n     */\n    getVertexElementByUsage(usage: number): VertexElement {\n        return this._vertexElementsDic[usage];\n    }\n}\n\n\n","import { VertexElement } from \"../../renders/VertexElement\";\nimport { VertexElementFormat } from \"../../renders/VertexElementFormat\";\nimport { VertexDeclaration } from \"../VertexDeclaration\";\n\n/**\n * ...\n * @author ...\n */\nexport class VertexMesh {\n\t/**顶点位置数据 */\n\tstatic MESH_POSITION0: number = 0;\n\t/**顶点顶点色数据 */\n\tstatic MESH_COLOR0: number = 1;\n\t/**顶点UV0数据 */\n\tstatic MESH_TEXTURECOORDINATE0: number = 2;\n\t/**顶点法线数据 */\n\tstatic MESH_NORMAL0: number = 3;\n\t/**顶点切线数据 */\n\tstatic MESH_TANGENT0: number = 4;\n\t/**顶点骨骼索引数据 */\n\tstatic MESH_BLENDINDICES0: number = 5;\n\t/**顶点骨骼权重数据 */\n\tstatic MESH_BLENDWEIGHT0: number = 6;\n\t/**顶点UV1数据 */\n\tstatic MESH_TEXTURECOORDINATE1: number = 7;\n\t/**顶点世界矩阵数据Row0 */\n\tstatic MESH_WORLDMATRIX_ROW0: number = 8;\n\t/**顶点世界矩阵数据Row1 */\n\tstatic MESH_WORLDMATRIX_ROW1: number = 9;\n\t/**顶点世界矩阵数据Row2 */\n\tstatic MESH_WORLDMATRIX_ROW2: number = 10;\n\t/**顶点世界矩阵数据Row3 */\n\tstatic MESH_WORLDMATRIX_ROW3: number = 11;\n\n\n\t//TODO：location不够\n\t/**简单数据动画数据 */\n\tstatic MESH_SIMPLEANIMATOR: number = 12;\n\n\t/**光照贴图的缩放和偏移 */\n\tstatic MESH_LIGHTMAPSCALEOFFSET: number = 13;\n\t/**instanceworld顶点描述 */\n\tstatic instanceWorldMatrixDeclaration: VertexDeclaration;\n\t/**instanceSimple动画数据顶点描述 */\n\tstatic instanceSimpleAnimatorDeclaration: VertexDeclaration;\n\t/**instanceLightMap光照贴图的缩放和偏移顶点描述 */\n\tstatic instanceLightMapScaleOffsetDeclaration: VertexDeclaration;\n\n\n\t/**自定义attribute instance 预留位*/\n\t/**顶点自定义数据0 */\n\tstatic MESH_CUSTOME0: number = 12;\n\t/**顶点自定义数据1 */\n\tstatic MESH_CUSTOME1: number = 13;\n\t/**顶点自定义数据2 */\n\tstatic MESH_CUSTOME2: number = 14;\n\t/**顶点自定义数据3 */\n\tstatic MESH_CUSTOME3: number = 15;\n\n\n\n\n\t/**@internal */\n\tprivate static _vertexDeclarationMap: any = {};\n\n\n\n\n\t/**\n\t * @internal\n\t */\n\tstatic __init__(): void {\n\t\tVertexMesh.instanceWorldMatrixDeclaration = new VertexDeclaration(64,\n\t\t\t[new VertexElement(0, VertexElementFormat.Vector4, VertexMesh.MESH_WORLDMATRIX_ROW0),\n\t\t\tnew VertexElement(16, VertexElementFormat.Vector4, VertexMesh.MESH_WORLDMATRIX_ROW1),\n\t\t\tnew VertexElement(32, VertexElementFormat.Vector4, VertexMesh.MESH_WORLDMATRIX_ROW2),\n\t\t\tnew VertexElement(48, VertexElementFormat.Vector4, VertexMesh.MESH_WORLDMATRIX_ROW3)]);\n\n\t\tVertexMesh.instanceSimpleAnimatorDeclaration = new VertexDeclaration(16, [new VertexElement(0, VertexElementFormat.Vector4, VertexMesh.MESH_SIMPLEANIMATOR)]);\n\t\tVertexMesh.instanceLightMapScaleOffsetDeclaration = new VertexDeclaration(16, [new VertexElement(0, VertexElementFormat.Vector4, VertexMesh.MESH_LIGHTMAPSCALEOFFSET)]);\n\t}\n\n\t/**\n\t * 获取顶点声明。\n\t * @param vertexFlag 顶点声明标记字符,格式为:\"POSITION,NORMAL,COLOR,UV,UV1,BLENDWEIGHT,BLENDINDICES,TANGENT\"。\n\t * @return 顶点声明。\n\t */\n\tstatic getVertexDeclaration(vertexFlag: string, compatible: boolean = true): VertexDeclaration {\n\t\tvar verDec: VertexDeclaration = VertexMesh._vertexDeclarationMap[vertexFlag + (compatible ? \"_0\" : \"_1\")];//TODO:兼容模式\n\t\tif (!verDec) {\n\t\t\tvar subFlags: any[] = vertexFlag.split(\",\");\n\t\t\tvar offset: number = 0;\n\t\t\tvar elements: any[] = [];\n\t\t\tfor (var i: number = 0, n: number = subFlags.length; i < n; i++) {\n\t\t\t\tvar element: VertexElement;\n\t\t\t\tswitch (subFlags[i]) {\n\t\t\t\t\tcase \"POSITION\":\n\t\t\t\t\t\telement = new VertexElement(offset, VertexElementFormat.Vector3, VertexMesh.MESH_POSITION0);\n\t\t\t\t\t\toffset += 12;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"NORMAL\":\n\t\t\t\t\t\telement = new VertexElement(offset, VertexElementFormat.Vector3, VertexMesh.MESH_NORMAL0);\n\t\t\t\t\t\toffset += 12;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"COLOR\":\n\t\t\t\t\t\telement = new VertexElement(offset, VertexElementFormat.Vector4, VertexMesh.MESH_COLOR0);\n\t\t\t\t\t\toffset += 16;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"UV\":\n\t\t\t\t\t\telement = new VertexElement(offset, VertexElementFormat.Vector2, VertexMesh.MESH_TEXTURECOORDINATE0);\n\t\t\t\t\t\toffset += 8;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"UV1\":\n\t\t\t\t\t\telement = new VertexElement(offset, VertexElementFormat.Vector2, VertexMesh.MESH_TEXTURECOORDINATE1);\n\t\t\t\t\t\toffset += 8;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"BLENDWEIGHT\":\n\t\t\t\t\t\telement = new VertexElement(offset, VertexElementFormat.Vector4, VertexMesh.MESH_BLENDWEIGHT0);\n\t\t\t\t\t\toffset += 16;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"BLENDINDICES\":\n\t\t\t\t\t\tif (compatible) {\n\t\t\t\t\t\t\telement = new VertexElement(offset, VertexElementFormat.Vector4, VertexMesh.MESH_BLENDINDICES0);//兼容\n\t\t\t\t\t\t\toffset += 16;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\telement = new VertexElement(offset, VertexElementFormat.Byte4, VertexMesh.MESH_BLENDINDICES0);\n\t\t\t\t\t\t\toffset += 4;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"TANGENT\":\n\t\t\t\t\t\telement = new VertexElement(offset, VertexElementFormat.Vector4, VertexMesh.MESH_TANGENT0);\n\t\t\t\t\t\toffset += 16;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"NORMAL_BYTE\":\n\t\t\t\t\t\telement = new VertexElement(offset, VertexElementFormat.NorByte4, VertexMesh.MESH_NORMAL0);\n\t\t\t\t\t\toffset += 4;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow \"VertexMesh: unknown vertex flag.\";\n\t\t\t\t}\n\t\t\t\telements.push(element);\n\t\t\t}\n\t\t\tverDec = new VertexDeclaration(offset, elements);\n\t\t\tVertexMesh._vertexDeclarationMap[vertexFlag + (compatible ? \"_0\" : \"_1\")] = verDec;//TODO:兼容模式\n\t\t}\n\t\treturn verDec;\n\t}\n}\n\n\n","import { Shader3D } from \"../../RenderEngine/RenderShader/Shader3D\";\nimport { ShaderDataItem, ShaderDataType } from \"../../RenderEngine/RenderShader/ShaderData\";\nimport { ShaderDefine } from \"../../RenderEngine/RenderShader/ShaderDefine\";\nimport { UniformBufferParamsType, UnifromBufferData } from \"../../RenderEngine/UniformBufferData\";\nimport { IShaderCompiledObj, ShaderCompile } from \"../../webgl/utils/ShaderCompile\";\nimport { ShaderPass } from \"./ShaderPass\";\nimport { VertexMesh } from \"./VertexMesh\";\n\n// todo 初始化 uniformMap 提取出来 供 Scene, Camera, Sprite3D 生成 uniform shader代码 ?\n// export type UniformItem = { [uniformName: string]: ShaderDataType } | { type: ShaderDataType, value?: ShaderDataItem };\n\nexport type UniformMapType = { [blockName: string]: { [uniformName: string]: ShaderDataType } | ShaderDataType };\n\nexport type AttributeMapType = { [name: string]: [number, ShaderDataType] };\n\n/**\n * <code>SubShader</code> 类用于创建SubShader。\n */\nexport class SubShader {\n    public static IncludeUniformMap: any = {};\n\n    /**\n     * 注册glsl所用到的Uniform\n     * 会在生成Uniformmap的时候根据包含的Include文件，添加所需要的uniform因素\n     * @param includeName \n     * @param uniformInfo \n     * @param defaultUniformData \n     */\n    public static regIncludeBindUnifrom(includeName: string, uniformMap: { [name: string]: ShaderDataType }, defaultValue: { [key: string]: any }) {\n        let obj: any = {};\n        let data: any = obj[includeName] = {};\n        data[\"uniformMap\"] = uniformMap;\n        data[\"defaultValue\"] = defaultValue;\n        Object.assign(SubShader.IncludeUniformMap, obj);\n    }\n\n    public static readonly DefaultAttributeMap: { [name: string]: [number, ShaderDataType] } = {\n        'a_Position': [VertexMesh.MESH_POSITION0, ShaderDataType.Vector4],\n        'a_Normal': [VertexMesh.MESH_NORMAL0, ShaderDataType.Vector3],\n        'a_Tangent0': [VertexMesh.MESH_TANGENT0, ShaderDataType.Vector4],\n        'a_Texcoord0': [VertexMesh.MESH_TEXTURECOORDINATE0, ShaderDataType.Vector2],\n        'a_Texcoord1': [VertexMesh.MESH_TEXTURECOORDINATE1, ShaderDataType.Vector2],\n        'a_Color': [VertexMesh.MESH_COLOR0, ShaderDataType.Vector4],\n        'a_BoneWeights': [VertexMesh.MESH_BLENDWEIGHT0, ShaderDataType.Vector4],\n        'a_BoneIndices': [VertexMesh.MESH_BLENDINDICES0, ShaderDataType.Vector4],\n        'a_WorldMat': [VertexMesh.MESH_WORLDMATRIX_ROW0, ShaderDataType.Matrix4x4],\n        'a_SimpleTextureParams': [VertexMesh.MESH_SIMPLEANIMATOR, ShaderDataType.Vector4],\n        'a_LightmapScaleOffset': [VertexMesh.MESH_LIGHTMAPSCALEOFFSET, ShaderDataType.Vector4]\n    }\n\n\n    /**@internal */\n    _attributeMap: AttributeMapType;\n\n    /**@internal */\n    _uniformMap: UniformMapType;\n\n    // todo uniform 相关信息统一用结构体存储？ 合并 value type map\n    /**\n     * @internal\n     * uniform 默认值\n     */\n    readonly _uniformDefaultValue: { [name: string]: ShaderDataItem };\n    /**\n     * @internal\n     * uniform 数据类型\n     */\n    readonly _uniformTypeMap: Map<string, ShaderDataType>;\n\n    /**@internal */\n    readonly _uniformBufferDataMap: Map<string, UnifromBufferData> = new Map();\n\n    /**@internal */\n    _owner: Shader3D;\n    /**@internal */\n    _flags: any = {};\n    /**@internal */\n    _passes: ShaderPass[] = [];\n\n    /**\n     * 创建一个 <code>SubShader</code> 实例。\n     * @param\tattributeMap  顶点属性表。\n     * @param\tuniformMap  uniform属性表。\n     */\n    constructor(attributeMap: { [name: string]: [number, ShaderDataType] } = SubShader.DefaultAttributeMap, uniformMap: UniformMapType = {}, uniformDefaultValue: { [name: string]: ShaderDataItem } = null) {\n        this._attributeMap = attributeMap;\n        this._uniformMap = uniformMap;\n        this._uniformDefaultValue = uniformDefaultValue;\n        this._uniformTypeMap = new Map();\n        for (const key in uniformMap) {\n            if (typeof uniformMap[key] == \"object\") {\n                let block = <{ [uniformName: string]: ShaderDataType }>(uniformMap[key]);\n                let blockUniformMap = new Map<string, UniformBufferParamsType>();\n                for (const uniformName in block) {\n                    let uniformType = ShaderDataTypeToUniformBufferType(block[uniformName]);\n                    blockUniformMap.set(uniformName, uniformType);\n\n                    this._uniformTypeMap.set(uniformName, block[uniformName]);\n                }\n\n                let blockUniformIndexMap = new Map<number, UniformBufferParamsType>();\n                blockUniformMap.forEach((value, key) => {\n                    blockUniformIndexMap.set(Shader3D.propertyNameToID(key), value);\n                });\n                let blockData = new UnifromBufferData(blockUniformIndexMap);\n                this._uniformBufferDataMap.set(key, blockData);\n            }\n            else {\n                let unifromType = <ShaderDataType>uniformMap[key];\n                this._uniformTypeMap.set(key, unifromType);\n                if (unifromType == ShaderDataType.Texture2D || unifromType == ShaderDataType.TextureCube || unifromType == ShaderDataType.Texture3D || unifromType == ShaderDataType.Texture2DArray) {\n                    let textureGammaDefine = Shader3D.getDefineByName(`Gamma_${key}`);\n                    let uniformIndex = Shader3D.propertyNameToID(key);\n                    ShaderDefine._texGammaDefine[uniformIndex] = textureGammaDefine;\n                }\n\n            }\n        }\n    }\n\n    /**\n     * 添加标记。\n     * @param key 标记键。\n     * @param value 标记值。\n     */\n    setFlag(key: string, value: string): void {\n        if (value)\n            this._flags[key] = value;\n        else\n            delete this._flags[key];\n    }\n\n    /**\n     * 获取标记值。\n     * @return key 标记键。\n     */\n    getFlag(key: string): string {\n        return this._flags[key];\n    }\n\n    /**\n     * 添加着色器Pass\n     * @param vs \n     * @param ps \n     * @param stateMap \n     * @param pipelineMode 渲染管线模式。 \n     */\n    addShaderPass(vs: string, ps: string, pipelineMode: string = \"Forward\"): ShaderPass {\n        return this._addShaderPass(ShaderCompile.compile(vs, ps), pipelineMode);\n    }\n\n    _addShaderPass(compiledObj: IShaderCompiledObj, pipelineMode: string = \"Forward\"): ShaderPass {\n        var shaderPass: ShaderPass = new ShaderPass(this, compiledObj);\n        shaderPass._pipelineMode = pipelineMode;\n        this._passes.push(shaderPass);\n        this._addIncludeUniform(compiledObj.includeNames);\n        return shaderPass;\n    }\n\n    private _addIncludeUniform(includemap: Set<string>) {\n        for (let ele of includemap) {\n            if (SubShader.IncludeUniformMap[ele]) {\n                let includeBindInfo = SubShader.IncludeUniformMap[ele];\n                let bindtypeMap = includeBindInfo[\"uniformMap\"];\n                let bindDefaultValue = includeBindInfo[\"defaultValue\"];\n                for (var i in bindtypeMap) {\n                    if (!this._uniformTypeMap.has(i)) {\n                        this._uniformTypeMap.set(i, bindtypeMap[i]);\n                        this._uniformMap[i] = bindtypeMap[i];\n                    }\n                }\n                for (var i in bindDefaultValue) {\n                    if (!this._uniformDefaultValue[i]) {\n                        this._uniformDefaultValue[i] = bindDefaultValue[i];\n                    }\n                }\n            }\n        }\n    }\n\n}\n\nfunction ShaderDataTypeToUniformBufferType(shaderDataType: ShaderDataType) {\n\n    switch (shaderDataType) {\n        case ShaderDataType.Float:\n            return UniformBufferParamsType.Number;\n        case ShaderDataType.Vector2:\n            return UniformBufferParamsType.Vector2;\n        case ShaderDataType.Vector3:\n            return UniformBufferParamsType.Vector3;\n        case ShaderDataType.Vector4:\n        case ShaderDataType.Color:\n            return UniformBufferParamsType.Vector4;\n        case ShaderDataType.Matrix4x4:\n            return UniformBufferParamsType.Matrix4x4;\n        default:\n            throw \"ShaderDataType can not be in UniformBuffer.\";\n    }\n\n}\n\n","import { LayaGL } from \"../../layagl/LayaGL\";\nimport { ShaderCompile } from \"../../webgl/utils/ShaderCompile\";\nimport { DefineDatas } from \"./DefineDatas\";\nimport { ShaderDefine } from \"./ShaderDefine\";\nimport { ShaderPass } from \"./ShaderPass\";\nimport { ShaderVariant, ShaderVariantCollection } from \"./ShaderVariantCollection\";\nimport { SubShader } from \"./SubShader\";\n\nexport interface IShaderObjStructor {\n    name: string,\n    enableInstancing: boolean,\n    supportReflectionProbe: boolean,\n    surportVolumetricGI: boolean,\n    attributeMap: any;\n    uniformMap: any;\n    defaultValue: any;\n    shaderPass: Array<any>;\n}\n\nexport interface IShaderpassStructor {\n    VS?: string,\n    FS?: string,\n    VSPath?: string,//TODO\n    FSPath?: string,//TODO\n    pipeline?: string,\n    statefirst?: boolean;\n    renderState?: Record<string, string | boolean | number | string[]>\n\n}\n/**\n * <code>Shader3D</code> 类用于创建Shader3D。\n */\nexport class Shader3D {\n    static _configDefineValues = new DefineDatas();\n    /**@internal */\n    private static _compileDefineDatas: DefineDatas = new DefineDatas();\n    /**渲染状态_剔除。*/\n    static CULL: number;\n    /**渲染状态_混合。*/\n    static BLEND: number;\n    /**渲染状态_混合源。*/\n    static BLEND_SRC: number;\n    /**渲染状态_混合目标。*/\n    static BLEND_DST: number;\n    /**渲染状态_混合源RGB。*/\n    static BLEND_SRC_RGB: number;\n    /**渲染状态_混合目标RGB。*/\n    static BLEND_DST_RGB: number;\n    /**渲染状态_混合源ALPHA。*/\n    static BLEND_SRC_ALPHA: number;\n    /**渲染状态_混合目标ALPHA。*/\n    static BLEND_DST_ALPHA: number;\n    /**渲染状态_混合方程。*/\n    static BLEND_EQUATION: number;\n    /**渲染状态_混合方程。*/\n    static BLEND_EQUATION_RGB: number;\n    /**渲染状态_ALPHA混合方程。*/\n    static BLEND_EQUATION_ALPHA: number;\n    /**渲染状态_深度测试。*/\n    static DEPTH_TEST: number;\n    /**渲染状态_深度写入。*/\n    static DEPTH_WRITE: number;\n    /**渲染状态_模板测试。*/\n    static STENCIL_TEST: number;\n    /**渲染状态_模板写入 */\n    static STENCIL_WRITE: number;\n    /**渲染状态_模板写入值 */\n    static STENCIL_Ref: number;\n    /**渲染状态_模板写入设置 */\n    static STENCIL_Op: number;\n\n    /**shader变量提交周期，自定义。*/\n    static PERIOD_CUSTOM: number = 0;\n    /**shader变量提交周期，逐材质。*/\n    static PERIOD_MATERIAL: number = 1;\n    /**shader变量提交周期，逐精灵和相机，注：因为精灵包含MVP矩阵，为复合属性，所以摄像机发生变化时也应提交。*/\n    static PERIOD_SPRITE: number = 2;\n    /**shader变量提交周期，逐相机。*/\n    static PERIOD_CAMERA: number = 3;\n    /**shader变量提交周期，逐场景。*/\n    static PERIOD_SCENE: number = 4;\n\n    /**@internal */\n    static SHADERDEFINE_LEGACYSINGALLIGHTING: ShaderDefine;\n    /**@internal 图形数据传输使用UniformBlock的方式 */\n    static SHADERDEFINE_ENUNIFORMBLOCK: ShaderDefine;\n    /**@internal */\n    static SHADERDEFINE_FLOATTEXTURE: ShaderDefine;\n    /**@internal */\n    static SHADERDEFINE_FLOATTEXTURE_FIL_LINEAR: ShaderDefine;\n    /**@internal */\n    static _propertyNameMap: any = {};\n    /**@internal */\n    private static _propertyNameCounter: number = 0;\n    /**@internal */\n    private static _defineCounter: number = 0;\n    // todo  这个 map 和 get 函数转移到 ShaderDefine 里面\n    /**@internal */\n    private static _defineMap: { [key: string]: ShaderDefine } = {};\n    /**@internal */\n    static _preCompileShader: { [key: string]: Shader3D } = {};\n    /**@internal */\n    static _maskMap: Array<{ [key: number]: string }> = [];\n    /**@internal */\n    static _debugShaderVariantInfo: ShaderVariant;\n    /**是否开启调试模式。 */\n    static debugMode: boolean = false;\n    /**调试着色器变种集合。 */\n    static debugShaderVariantCollection: ShaderVariantCollection;\n\n\n    static init() {\n        Shader3D.debugShaderVariantCollection = new ShaderVariantCollection();\n    }\n\n    /**\n     * @internal\n     */\n    static _getNamesByDefineData(defineData: DefineDatas, out: Array<string>): void {\n        var maskMap: Array<{ [key: number]: string }> = Shader3D._maskMap;\n        var mask: Array<number> = defineData._mask;\n        out.length = 0;\n        for (var i: number = 0, n: number = defineData._length; i < n; i++) {\n            var subMaskMap: { [key: number]: string } = maskMap[i];\n            var subMask: number = mask[i];\n            for (var j: number = 0; j < 32; j++) {\n                var d: number = 1 << j;\n                if (subMask > 0 && d > subMask)//如果31位存在subMask为负数,避免break\n                    break;\n                if (subMask & d)\n                    out.push(subMaskMap[d]);\n            }\n        }\n    }\n\n    /**\n     * 注册宏定义。\n     * @param name \n     */\n    static getDefineByName(name: string): ShaderDefine {\n        var define: ShaderDefine = Shader3D._defineMap[name];\n        if (!define) {\n            var maskMap = Shader3D._maskMap;\n            var counter: number = Shader3D._defineCounter;\n            var index: number = Math.floor(counter / 32);\n            var value: number = 1 << counter % 32;\n            define = new ShaderDefine(index, value);\n            Shader3D._defineMap[name] = define;\n            if (index == maskMap.length) {\n                maskMap.length++;\n                maskMap[index] = {};\n            }\n            maskMap[index][value] = name;\n            Shader3D._defineCounter++;\n        }\n        return define;\n    }\n\n    /**\n     * 通过Shader属性名称获得唯一ID。\n     * @param name Shader属性名称。\n     * @return 唯一ID。\n     */\n    static propertyNameToID(name: string): number {\n        return LayaGL.renderEngine.propertyNameToID(name);\n    }\n\n    static propertyIDToName(id: number): string {\n        return LayaGL.renderEngine.propertyIDToName(id);\n    }\n\n    /**\n     * 添加函数库引用。\n     * @param fileName 文件名字。\n     * @param txt 文件内容\n     */\n    static addInclude(fileName: string, txt: string): void {\n        ShaderCompile.addInclude(fileName, txt);\n    }\n\n    /**\n     * 通过宏定义名字编译shader。\n     * @param\tshaderName Shader名称。\n     * @param   subShaderIndex 子着色器索引。\n     * @param   passIndex  通道索引。\n     * @param\tdefineNames 宏定义名字集合。\n     */\n    static compileShaderByDefineNames(shaderName: string, subShaderIndex: number, passIndex: number, defineNames: string[], nodeCommonMap: string[]): void {\n        var shader: Shader3D = Shader3D.find(shaderName);\n        if (shader) {\n            var subShader: SubShader = shader.getSubShaderAt(subShaderIndex);\n            if (subShader) {\n                var pass: ShaderPass = subShader._passes[passIndex];\n                pass.nodeCommonMap = nodeCommonMap;\n                if (pass) {\n                    var compileDefineDatas: DefineDatas = Shader3D._compileDefineDatas;\n                    Shader3D._configDefineValues.cloneTo(compileDefineDatas);\n                    for (var i: number = 0, n: number = defineNames.length; i < n; i++)\n                        compileDefineDatas.add(Shader3D.getDefineByName(defineNames[i]));\n                    pass.withCompile(compileDefineDatas);\n                } else {\n                    console.warn(\"Shader3D: unknown passIndex.\");\n                }\n            } else {\n                console.warn(\"Shader3D: unknown subShaderIndex.\");\n            }\n        } else {\n            console.warn(\"Shader3D: unknown shader name.\");\n        }\n    }\n\n    /**\n     * 添加预编译shader文件，主要是处理宏定义\n     */\n    static add(name: string, enableInstancing: boolean = false, supportReflectionProbe: boolean = false): Shader3D {\n        return Shader3D._preCompileShader[name] = new Shader3D(name, enableInstancing, supportReflectionProbe);\n    }\n\n    /**\n     * 获取ShaderCompile3D。\n     * @param\tname\n     * @return ShaderCompile3D。\n     */\n    static find(name: string): Shader3D {\n        return Shader3D._preCompileShader[name];\n    }\n\n    static parse(data: IShaderObjStructor, basePath: string) {\n        if (!data.name)\n            console.warn(\"shader name is empty\", data);\n        if (!data.uniformMap)\n            console.warn(`${data.name}: uniformMap is empty`);\n\n        let shader = Shader3D.add(data.name, data.enableInstancing, data.supportReflectionProbe);\n        shader._surportVolumetricGI = data.surportVolumetricGI;\n        let subshader = new SubShader(data.attributeMap ? data.attributeMap : SubShader.DefaultAttributeMap, data.uniformMap, data.defaultValue);\n        shader.addSubShader(subshader);\n        let passDataArray = data.shaderPass;\n        for (var i in passDataArray) {\n            let passData = passDataArray[i] as IShaderpassStructor;\n            if (!passData.VS) {\n                console.warn(`${data.name}: VS of pass ${i} is empty`);\n                continue;\n            }\n            if (!passData.FS) {\n                console.warn(`${data.name}: FS of pass ${i} is empty`);\n                continue;\n            }\n\n            let shaderPass = subshader._addShaderPass(ShaderCompile.compile(passData.VS, passData.FS, basePath), passData.pipeline);\n\n            shaderPass.statefirst = passData.statefirst ?? false;\n\n            ShaderCompile.getRenderState(passData.renderState, shaderPass.renderState);\n        }\n        return shader;\n    }\n\n    /**@internal */\n    _name: string;\n    /**@internal */\n    _enableInstancing: boolean = false;\n    /**@internal */\n    _supportReflectionProbe: boolean = false;\n    /**@internal */\n    _surportVolumetricGI:boolean = false;\n    /**@internal */\n    _subShaders: SubShader[] = [];\n\n    /**\n     * 名字。\n     */\n    get name(): string {\n        return this._name;\n    }\n\n    /**\n     * 创建一个 <code>Shader3D</code> 实例。\n     */\n    constructor(name: string, enableInstancing: boolean, supportReflectionProbe: boolean) {\n        this._name = name;\n        this._enableInstancing = enableInstancing;\n        this._supportReflectionProbe = supportReflectionProbe;\n    }\n\n    /**\n     * 添加子着色器。\n     * @param 子着色器。\n     */\n    addSubShader(subShader: SubShader): void {\n        this._subShaders.push(subShader);\n        subShader._owner = this;\n    }\n\n    /**\n     * 在特定索引获取子着色器。\n     * @param\tindex 索引。\n     * @return 子着色器。\n     */\n    getSubShaderAt(index: number): SubShader {\n        return this._subShaders[index];\n    }\n\n}\n\n\n","import { Shader3D } from \"../../../RenderEngine/RenderShader/Shader3D\";\nimport { ShaderDataType } from \"../../../RenderEngine/RenderShader/ShaderData\";\nimport { ShaderDefine } from \"../../../RenderEngine/RenderShader/ShaderDefine\";\nimport { LayaGL } from \"../../../layagl/LayaGL\";\n\nexport class ShaderDefines2D {\n    /**@internal */\n    static TEXTURE2D: ShaderDefine;\n    /**@internal */\n    static PRIMITIVE: ShaderDefine;\n    /**@internal */\n    static FILTERGLOW: ShaderDefine;\n    /**@internal */\n    static FILTERBLUR: ShaderDefine;\n    /**@internal */\n    static FILTERCOLOR: ShaderDefine;\n    /**@internal */\n    static COLORADD: ShaderDefine;\n    /**@internal */\n    static WORLDMAT: ShaderDefine;\n    /**@internal */\n    static FILLTEXTURE: ShaderDefine;\n    /**@internal */\n    static SKINMESH: ShaderDefine;\n    /**@internal */\n    static MVP3D: ShaderDefine;\n    /**@internal */\n    static GAMMASPACE: ShaderDefine;\n    /**@internal */\n    static INVERTY: ShaderDefine;\n    /**@internal */\n    static GAMMATEXTURE: ShaderDefine;\n\n    /**@internal */\n    static TEXTURESHADER: ShaderDefine;\n    /**@internal */\n    static PRIMITIVESHADER: ShaderDefine;\n\n    /**@internal */\n    static UNIFORM_MMAT: number;// mat4 u_mmat\n    static UNIFORM_CLIPMATDIR: number;// uniform vec4 u_clipMatDir;\n    static UNIFORM_CLIPMATPOS: number;// uniform vec2 u_clipMatPos;\n    static UNIFORM_MMAT2: number;// uniform mat4 u_mmat2;\n    static UNIFORM_SIZE: number;// uniform vec2 u_size;\n    static UNIFORM_CLIPOFF: number;//uniform vec2 u_clipOff;\t\n    static UNIFORM_MVPMatrix: number;//uniform mat4 u_MvpMatrix;\n\n    static UNIFORM_SPRITETEXTURE: number;// uniform sampler2D u_spriteTexture;\n    static UNIFORM_STRENGTH_SIG2_2SIG2_GAUSS1: number;//uniform vec4 u_strength_sig2_2sig2_gauss1; // TODO模糊的过程中会导致变暗变亮\n    static UNIFORM_BLURINFO: number; //uniform vec2 u_blurInfo;\n\n    static UNIFORM_COLORALPHA: number;// uniform vec4 u_colorAlpha;\n    static UNIFORM_COLORMAT: number; //uniform mat4 u_colorMat;\n    static UNIFORM_COLOR: number;//uniform vec4 u_color;\n    static UNIFORM_BLURINFO1: number//uniform vec4 u_blurInfo1;\n    static UNIFORM_BLURINFO2: number//uniform vec4 u_blurInfo2;\n    static UNIFORM_COLORADD: number;//uniform vec4 u_colorAdd;\n    static UNIFORM_TEXRANGE: number;//uniform vec4 u_TexRange;\n\n    //TODO?\n    //static NOOPTMASK: number = ShaderDefines2D.FILTERGLOW | ShaderDefines2D.FILTERBLUR | ShaderDefines2D.FILTERCOLOR | ShaderDefines2D.FILLTEXTURE;\t//有这些定义的不要优化。见submittexture\n\n    static __init__(): void {\n        ShaderDefines2D.TEXTURE2D = Shader3D.getDefineByName(\"TEXTURE2D\");\n        ShaderDefines2D.PRIMITIVE = Shader3D.getDefineByName(\"PRIMITIVE\");\n\n        ShaderDefines2D.FILTERGLOW = Shader3D.getDefineByName(\"GLOW_FILTER\");\n        ShaderDefines2D.FILTERBLUR = Shader3D.getDefineByName(\"BLUR_FILTER\");\n        ShaderDefines2D.FILTERCOLOR = Shader3D.getDefineByName(\"COLOR_FILTER\");\n        ShaderDefines2D.COLORADD = Shader3D.getDefineByName(\"COLOR_ADD\");\n        ShaderDefines2D.WORLDMAT = Shader3D.getDefineByName(\"WORLDMAT\");\n        ShaderDefines2D.FILLTEXTURE = Shader3D.getDefineByName(\"FILLTEXTURE\");\n        ShaderDefines2D.MVP3D = Shader3D.getDefineByName('MVP3D');\n\n        ShaderDefines2D.GAMMASPACE = Shader3D.getDefineByName('GAMMASPACE');\n\n        ShaderDefines2D.INVERTY = Shader3D.getDefineByName('INVERTY');\n\n        ShaderDefines2D.GAMMATEXTURE = Shader3D.getDefineByName('GAMMATEXTURE');\n\n        ShaderDefines2D.TEXTURESHADER = Shader3D.getDefineByName(\"TEXTUREVS\");\n        ShaderDefines2D.PRIMITIVESHADER = Shader3D.getDefineByName(\"PRIMITIVEMESH\");\n\n        ShaderDefines2D.initSprite2DCommandEncoder();\n    }\n\n    static initSprite2DCommandEncoder() {\n        ShaderDefines2D.UNIFORM_MMAT = Shader3D.propertyNameToID(\"u_mmat\");\n        ShaderDefines2D.UNIFORM_CLIPMATDIR = Shader3D.propertyNameToID(\"u_clipMatDir\");\n        ShaderDefines2D.UNIFORM_CLIPMATPOS = Shader3D.propertyNameToID(\"u_clipMatPos\");\n        ShaderDefines2D.UNIFORM_MMAT2 = Shader3D.propertyNameToID(\"u_mmat2\");\n        ShaderDefines2D.UNIFORM_SIZE = Shader3D.propertyNameToID(\"u_size\");\n        ShaderDefines2D.UNIFORM_CLIPOFF = Shader3D.propertyNameToID(\"u_clipOff\");\n\n        ShaderDefines2D.UNIFORM_MVPMatrix = Shader3D.propertyNameToID(\"u_MvpMatrix\");\n        ShaderDefines2D.UNIFORM_SPRITETEXTURE = Shader3D.propertyNameToID(\"u_spriteTexture\");\n        ShaderDefines2D.UNIFORM_STRENGTH_SIG2_2SIG2_GAUSS1 = Shader3D.propertyNameToID(\"u_strength_sig2_2sig2_gauss1\");\n        ShaderDefines2D.UNIFORM_BLURINFO = Shader3D.propertyNameToID(\"u_blurInfo\");\n        ShaderDefines2D.UNIFORM_COLORALPHA = Shader3D.propertyNameToID(\"u_colorAlpha\");\n        ShaderDefines2D.UNIFORM_COLORMAT = Shader3D.propertyNameToID(\"u_colorMat\");\n\n        ShaderDefines2D.UNIFORM_COLOR = Shader3D.propertyNameToID(\"u_color\");\n        ShaderDefines2D.UNIFORM_BLURINFO1 = Shader3D.propertyNameToID(\"u_blurInfo1\");\n        ShaderDefines2D.UNIFORM_BLURINFO2 = Shader3D.propertyNameToID(\"u_blurInfo2\");\n        ShaderDefines2D.UNIFORM_COLORADD = Shader3D.propertyNameToID(\"u_colorAdd\");\n        ShaderDefines2D.UNIFORM_TEXRANGE = Shader3D.propertyNameToID(\"u_TexRange\");\n\n        const commandUniform = LayaGL.renderOBJCreate.createGlobalUniformMap(\"Sprite2D\");\n\n        commandUniform.addShaderUniform(ShaderDefines2D.UNIFORM_MMAT, \"u_mmat\", ShaderDataType.Matrix4x4);\n        commandUniform.addShaderUniform(ShaderDefines2D.UNIFORM_CLIPMATDIR, \"u_clipMatDir\", ShaderDataType.Vector4);\n        commandUniform.addShaderUniform(ShaderDefines2D.UNIFORM_CLIPMATPOS, \"u_clipMatPos\", ShaderDataType.Vector2);\n        commandUniform.addShaderUniform(ShaderDefines2D.UNIFORM_MMAT2, \"u_mmat2\", ShaderDataType.Matrix4x4);\n        commandUniform.addShaderUniform(ShaderDefines2D.UNIFORM_SIZE, \"u_size\", ShaderDataType.Vector2);\n        commandUniform.addShaderUniform(ShaderDefines2D.UNIFORM_CLIPOFF, \"u_clipOff\", ShaderDataType.Vector2);\n        commandUniform.addShaderUniform(ShaderDefines2D.UNIFORM_MVPMatrix, \"u_MvpMatrix\", ShaderDataType.Matrix4x4);\n        commandUniform.addShaderUniform(ShaderDefines2D.UNIFORM_SPRITETEXTURE, \"u_spriteTexture\", ShaderDataType.Texture2D);\n        commandUniform.addShaderUniform(ShaderDefines2D.UNIFORM_STRENGTH_SIG2_2SIG2_GAUSS1, \"u_strength_sig2_2sig2_gauss1\", ShaderDataType.Vector4);\n        commandUniform.addShaderUniform(ShaderDefines2D.UNIFORM_BLURINFO, \"u_blurInfo\", ShaderDataType.Vector2);\n        commandUniform.addShaderUniform(ShaderDefines2D.UNIFORM_COLORALPHA, \"u_colorAlpha\", ShaderDataType.Vector4);\n        commandUniform.addShaderUniform(ShaderDefines2D.UNIFORM_COLORMAT, \"u_colorMat\", ShaderDataType.Matrix4x4);\n        commandUniform.addShaderUniform(ShaderDefines2D.UNIFORM_COLOR, \"u_color\", ShaderDataType.Vector4);\n        commandUniform.addShaderUniform(ShaderDefines2D.UNIFORM_BLURINFO1, \"u_blurInfo1\", ShaderDataType.Vector4);\n        commandUniform.addShaderUniform(ShaderDefines2D.UNIFORM_BLURINFO2, \"u_blurInfo2\", ShaderDataType.Vector4);\n        commandUniform.addShaderUniform(ShaderDefines2D.UNIFORM_COLORADD, \"u_colorAdd\", ShaderDataType.Vector4);\n        commandUniform.addShaderUniform(ShaderDefines2D.UNIFORM_TEXRANGE, \"u_TexRange\", ShaderDataType.Vector4);\n    }\n}\n\n\n","/**\n * \n * @author laya\n */\nexport class RenderInfo {\n    /**当前帧的开始时间 */\n    static loopStTm: number = 0;\n    /**主舞台 <code>Stage</code> 渲染次数计数。 */\n    static loopCount: number = 0;\n}","import { Point } from \"../../maths/Point\"\n\n// 注意长宽都不要超过256，一个是影响效率，一个是超出表达能力\nexport class AtlasGrid {\n    atlasID: number = 0;\n    private _width: number = 0;\n    private _height: number = 0;\n    private _texCount: number = 0;\n    private _rowInfo: Uint8Array = null;\t\t// 当前行的最大长度\n    private _cells: Uint8Array = null;\t\t// 每个格子的信息。{type,w,h} 相当于一个距离场. type =0 表示空闲的。不为0的情况下填充的是宽高（有什么用呢）\n    _used: number = 0;\t\t\t\t// 使用率\n\n    // TODO type 是否有用\n\n    //------------------------------------------------------------------------------\n    constructor(width: number = 0, height: number = 0, id: number = 0) {\n        this._cells = null;\n        this._rowInfo = null;\n        this.atlasID = id;\n        this._init(width, height);\n    }\n\n    //------------------------------------------------------------------\n    addRect(type: number, width: number, height: number, pt: Point): boolean {\n        //调用获得应该放在哪 返回值有三个。。bRet是否成功，nX x位置，nY y位置\n        if (!this._get(width, height, pt))\n            return false;\n        //根据获得的x,y填充\n        this._fill(pt.x, pt.y, width, height, type);\n        this._texCount++;\n        //返回是否成功，以及X位置和Y位置\n        return true;\n    }\n\n    //------------------------------------------------------------------------------\n    private _release(): void {\n        this._cells = null;\n        this._rowInfo = null;\n    }\n\n    //------------------------------------------------------------------------------\n    private _init(width: number, height: number): boolean {\n        this._width = width;\n        this._height = height;\n        this._release();\n        if (this._width == 0) return false;\n        this._cells = new Uint8Array(this._width * this._height * 3);\n        this._rowInfo = new Uint8Array(this._height);\n        this._used = 0;\n        this._clear();\n        return true;\n    }\n\n    //------------------------------------------------------------------\n    private _get(width: number, height: number, pt: Point): boolean {\n        if (width > this._width || height > this._height) {\n            return false;\n        }\n        //定义返回的x,y的位置\n        var rx: number = -1;\n        var ry: number = -1;\n        //为了效率先保存临时变量\n        var nWidth: number = this._width;\n        var nHeight: number = this._height;\n        //定义一个变量为了指向 m_pCells\n        var pCellBox: Uint8Array = this._cells;\n\n        //遍历查找合适的位置  //TODO 下面的方法应该可以优化\n        for (var y: number = 0; y < nHeight; y++) {\n            //如果该行的空白数 小于 要放入的宽度返回\n            if (this._rowInfo[y] < width) continue;\n            for (var x: number = 0; x < nWidth;) {\n\n                var tm: number = (y * nWidth + x) * 3;\n\n                if (pCellBox[tm] != 0 || pCellBox[tm + 1] < width || pCellBox[tm + 2] < height) {\n                    x += pCellBox[tm + 1];\n                    continue;\n                }\n                rx = x;\n                ry = y;\n                // 检查当前宽度是否能完全放下，即x方向的每个位置都有足够的高度。\n                for (var xx: number = 0; xx < width; xx++) {\n                    if (pCellBox[3 * xx + tm + 2] < height) {\n                        rx = -1;\n                        break;\n                    }\n                }\n                // 不行就x继续前进\n                if (rx < 0) {\n                    x += pCellBox[tm + 1];\n                    continue;\n                }\n                // 找到了\n                pt.x = rx;\n                pt.y = ry;\n                return true;\n            }\n        }\n        return false;\n    }\n\n    //------------------------------------------------------------------\n    private _fill(x: number, y: number, w: number, h: number, type: number): void {\n        //定义一些临时变量\n        var nWidth: number = this._width;\n        var nHeghit: number = this._height;\n        //代码检查\n        this._check((x + w) <= nWidth && (y + h) <= nHeghit);\n\n        //填充\n        for (var yy: number = y; yy < (h + y); ++yy) {\n            this._check(this._rowInfo[yy] >= w);\n            this._rowInfo[yy] -= w;\n            for (var xx: number = 0; xx < w; xx++) {\n                var tm: number = (x + yy * nWidth + xx) * 3;\n                this._check(this._cells[tm] == 0);\n                this._cells[tm] = type;\n                this._cells[tm + 1] = w;\n                this._cells[tm + 2] = h;\n            }\n        }\n        //调整我左方相邻空白格子的宽度连续信息描述\n        if (x > 0) {\n            for (yy = 0; yy < h; ++yy) {\n                // TODO 下面应该可以优化\n                var s: number = 0;\n                for (xx = x - 1; xx >= 0; --xx, ++s) {\n                    if (this._cells[((y + yy) * nWidth + xx) * 3] != 0) break;\n                }\n                for (xx = s; xx > 0; --xx) {\n                    this._cells[((y + yy) * nWidth + x - xx) * 3 + 1] = xx;\n                    this._check(xx > 0);\n                }\n            }\n        }\n        //调整我上方相邻空白格子的高度连续信息描述\n        if (y > 0) {\n            for (xx = x; xx < (x + w); ++xx) {\n                // TODO 下面应该可以优化\n                s = 0;\n                for (yy = y - 1; yy >= 0; --yy, s++) {\n                    if (this._cells[(xx + yy * nWidth) * 3] != 0) break;\n                }\n                for (yy = s; yy > 0; --yy) {\n                    this._cells[(xx + (y - yy) * nWidth) * 3 + 2] = yy;\n                    this._check(yy > 0);\n                }\n            }\n        }\n\n        this._used += (w * h) / (this._width * this._height);\n    }\n\n    private _check(ret: boolean): void {\n        if (ret == false) {\n            console.log(\"xtexMerger 错误啦\");\n        }\n    }\n\n    //------------------------------------------------------------------\n    private _clear(): void {\n        this._texCount = 0;\n        for (var y: number = 0; y < this._height; y++) {\n            this._rowInfo[y] = this._width;\n        }\n        for (var i: number = 0; i < this._height; i++) {\n            for (var j: number = 0; j < this._width; j++) {\n                var tm: number = (i * this._width + j) * 3;\n                this._cells[tm] = 0;\n                this._cells[tm + 1] = this._width - j;\n                this._cells[tm + 2] = this._width - i;\n            }\n        }\n    }\n    //------------------------------------------------------------------\n}\n\n\n","export class FontInfo {\n\n    private static _cache: Record<string, FontInfo> = {};\n\n    /**\n     * 解析字体模型\n     * @param font \n     */\n    static parse(font: string): FontInfo {\n        if (font === _lastFont) {\n            return _lastFontInfo;\n        }\n        let r = FontInfo._cache[font];\n        if (!r) {\n            r = FontInfo._cache[font] = new FontInfo(font);\n        }\n        _lastFont = font;\n        _lastFontInfo = r;\n        return r;\n    }\n\n    /**@internal */\n    _font: string;\n    /**@internal */\n    _family: string = \"Arial\";\n    /**@internal */\n    _size: number = 14;\n    /**@internal */\n    _italic: boolean = false;\n    /**@internal */\n    _bold: boolean = false;\n\n    constructor(font: string | null) {\n        this.setFont(font || \"14px Arial\");\n    }\n\n    /**\n     * 设置字体格式\n     * @param value \n     */\n    setFont(value: string): void {\n        this._font = value;\n        var words: any[] = value.split(' ');\n        var l: number = words.length;\n        if (l < 2) {\n            if (l == 1) {\n                if (words[0].indexOf('px') > 0) {\n                    this._size = parseInt(words[0]);\n                }\n            }\n            return;\n        }\n        var szpos: number = -1;\n        //由于字体可能有空格，例如Microsoft YaHei 所以不能直接取倒数第二个，要先找到px\n        for (let i = 0; i < l; i++) {\n            if (words[i].indexOf('px') > 0 || words[i].indexOf('pt') > 0) {\n                szpos = i;\n                this._size = parseInt(words[i]);\n                if (this._size <= 0) {\n                    console.debug('font parse error:' + value);\n                    this._size = 14;\n                }\n                break;\n            }\n        }\n\n        //最后一个是用逗号分开的family\n        var fpos: number = szpos + 1;\n        var familys: string = words[fpos];\n        fpos++;//下一个\n        for (; fpos < l; fpos++) {\n            familys += ' ' + words[fpos];\n        }\n        this._family = (familys.split(','))[0];\n        this._italic = words.indexOf('italic') >= 0;\n        this._bold = words.indexOf('bold') >= 0;\n    }\n}\n\nvar _lastFont: string = '';\nvar _lastFontInfo: FontInfo;","import { Texture } from \"../../../../resource/Texture\"\nimport { ShaderDefines2D } from \"../ShaderDefines2D\"\nimport { RenderState2D } from \"../../../utils/RenderState2D\"\nimport { RenderTexture2D } from \"../../../../resource/RenderTexture2D\"\nimport { Const } from \"../../../../Const\"\nimport { ShaderData } from \"../../../../RenderEngine/RenderShader/ShaderData\"\nimport { Shader3D } from \"../../../../RenderEngine/RenderShader/Shader3D\"\nimport { Material } from \"../../../../resource/Material\"\nimport { DefineDatas } from \"../../../../RenderEngine/RenderShader/DefineDatas\"\nimport { Vector2 } from \"../../../../maths/Vector2\"\nimport { Matrix4x4 } from \"../../../../maths/Matrix4x4\"\nimport { Vector4 } from \"../../../../maths/Vector4\"\nimport { TextTexture } from \"../../../text/TextTexture\"\n\nexport enum RenderSpriteData {\n    Zero,\n    Texture2D,\n    Primitive\n}\n\n//系统自带渲染数据，不可忽视，如果不设置自定义Shader，将调用引擎本身的Shader\nexport class Value2D {\n\n    static globalShaderData: ShaderData;\n\n    protected static _cache: any[] = [];\n    protected static _typeClass: any = [];\n\n    public static _initone(type: number, classT: any): void {\n        Value2D._typeClass[type] = classT;\n        Value2D._cache[type] = [];\n        Value2D._cache[type]._length = 0;\n        Value2D.globalShaderData = new ShaderData();\n    }\n\n    static TEMPMAT4_ARRAY: any[] = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n    static _compileDefine: DefineDatas = new DefineDatas();\n    /**\n     * 对象池概念\n     * @param mainType \n     * @returns \n     */\n    static create(mainType: RenderSpriteData): Value2D {\n        var types: any = Value2D._cache[mainType] ? Value2D._cache[mainType] : [];\n        if (types._length)\n            return types[--types._length];\n        else\n            return new Value2D._typeClass[mainType]();\n    }\n\n    defines: ShaderData = new ShaderData();\n\n    _defaultShader: Shader3D;\n    //TODO\n    alpha: number = 1.0;\t//这个目前只给setIBVB用。其他的都放到attribute的color中了\n    //TODO\n    ALPHA: number = 1.0;\t//这个？\n\n    mainID: RenderSpriteData = RenderSpriteData.Zero;\n\n    ref: number = 1;\n\n    private _inClassCache: any;\n\n    private _cacheID: number = 0;\n\n    /**@internal */\n    private _size: Vector2 = new Vector2();\n\n    /**@internal */\n    set size(value: Vector2) {\n        this.defines.setVector2(ShaderDefines2D.UNIFORM_SIZE, value);\n    }\n\n    get size() {\n        return this.defines.getVector2(ShaderDefines2D.UNIFORM_SIZE);\n    }\n\n    /**@internal */\n    private _mmat: Matrix4x4 = new Matrix4x4();\n\n    /**@internal */\n    set mmat(value: Matrix4x4) {\n        this.defines.setMatrix4x4(ShaderDefines2D.UNIFORM_MMAT, value);\n    }\n\n    /**@internal */\n    get mmat() {\n        return this.defines.getMatrix4x4(ShaderDefines2D.UNIFORM_MMAT);\n    }\n\n    filters: any[];\n\n    ///**@internal */\n    //private _mvpMatrix: Matrix4x4 = new Matrix4x4();\n    /**@internal */\n    set u_MvpMatrix(value: Matrix4x4) {\n        this.defines.setMatrix4x4(ShaderDefines2D.UNIFORM_MVPMatrix, value);\n    }\n\n    get u_MvpMatrix() {\n        return this.defines.getMatrix4x4(ShaderDefines2D.UNIFORM_MVPMatrix);\n    }\n\n    texture: any;\n    private _textureHost: Texture | RenderTexture2D | TextTexture\n    public get textureHost(): Texture | RenderTexture2D | TextTexture {\n        return this._textureHost\n    }\n    public set textureHost(value: Texture | RenderTexture2D | TextTexture) {\n        this._textureHost = value;\n        //var tex = value && value._getSource();\n        //@ts-ignore\n        this.defines.setTexture(ShaderDefines2D.UNIFORM_SPRITETEXTURE, value);\n    }\n    //public var fillStyle:DrawStyle;\t\t\t//TODO 这个有什么用？\n    _color: Vector4;\n\n    set color(value: Vector4) {\n        value && this.defines.setVector(ShaderDefines2D.UNIFORM_COLOR, value);\n    }\n\n    get color() {\n        return this.defines.getVector(ShaderDefines2D.UNIFORM_COLOR);\n    }//Vector4\n    //public var strokeStyle:DrawStyle;\n    //colorAdd: any[];//Vector4\n    _colorAdd: Vector4;\n\n    set colorAdd(value: Vector4) {\n        this.defines.setVector(ShaderDefines2D.UNIFORM_COLORADD, value);\n    }\n\n    get colorAdd() {\n        return this.defines.getVector(ShaderDefines2D.UNIFORM_COLORADD);\n    }//Vector4\n\n\n    private _clipMatDir: Vector4 = new Vector4(Const.MAX_CLIP_SIZE, 0, 0, Const.MAX_CLIP_SIZE);\n\n    set clipMatDir(value: Vector4) {\n        this.defines.setVector(ShaderDefines2D.UNIFORM_CLIPMATDIR, value);\n    }\n\n    get clipMatDir() {\n        return this.defines.getVector(ShaderDefines2D.UNIFORM_CLIPMATDIR);\n    }//Vector4\n\n    private _clipMatpos: Vector2 = new Vector2();\n    set clipMatPos(value: Vector2) {\n        this.defines.setVector2(ShaderDefines2D.UNIFORM_CLIPMATPOS, value);\n    }\n\n    get clipMatPos() {\n        return this.defines.getVector2(ShaderDefines2D.UNIFORM_CLIPMATPOS);\n    }//Vector2\n    //clipMatPos: Array<number> = [0, 0];//Vector2\n    _clipOff: Vector2 = new Vector2();//vector2\t\t\t// 裁剪是否需要加上偏移，cacheas normal用\n    set clipOff(value: Vector2) {\n        this.defines.setVector2(ShaderDefines2D.UNIFORM_CLIPOFF, value);\n    }\n\n    get clipOff() {\n        return this.defines.getVector2(ShaderDefines2D.UNIFORM_CLIPOFF);\n    }//Vector2\n\n    constructor(mainID: RenderSpriteData) {\n        this.mainID = mainID;\n        this.textureHost = null;\n        this.texture = null;\n        //this.fillStyle = null;\n        //this.color = null;\n        //this.strokeStyle = null;\n        //this.colorAdd = null;\n\n        this.clipMatDir = this._clipMatDir;\n        this.clipMatPos = this._clipMatpos;\n        this.clipOff = this._clipOff;\n        this._cacheID = mainID;\n        this._inClassCache = Value2D._cache[this._cacheID];\n        if (mainID > 0 && !this._inClassCache) {\n            this._inClassCache = Value2D._cache[this._cacheID] = [];\n            this._inClassCache._length = 0;\n        }\n        this.clear();\n\n    }\n\n    /**\n     * 组织Define宏数据\n     */\n    public updateShaderData() {\n        var renderstate2d: any = RenderState2D;\n        // 如果有矩阵的话，就设置 WORLDMAT 宏\n        RenderState2D.worldMatrix4 === RenderState2D.TEMPMAT4_ARRAY || this.defines.addDefine(ShaderDefines2D.WORLDMAT);\n        this._mmat.cloneByArray(renderstate2d.worldMatrix4);\n        this.mmat = this._mmat;\n\n        if (RenderState2D.matWVP) {\n            this.defines.addDefine(ShaderDefines2D.MVP3D);\n            this.u_MvpMatrix = RenderState2D.matWVP;\n        }\n        let returnGamma: boolean = !(RenderTexture2D.currentActive) || ((RenderTexture2D.currentActive)._texture.gammaCorrection != 1);\n        //returnGamma = returnGamma && (this.textureHost && ((this.textureHost as RenderTexture2D).gammaCorrection == 1 || (this.textureHost as Texture).bitmap.gammaCorrection == 1));\n        let textrueReadGamma: boolean = false;\n        if (this.textureHost) {\n            if (this.textureHost instanceof RenderTexture2D) {\n                textrueReadGamma = (this.textureHost as RenderTexture2D).gammaCorrection != 1;\n            } else if (this.textureHost instanceof Texture && (this.textureHost as Texture).bitmap) {\n                textrueReadGamma = (this.textureHost as Texture).bitmap.gammaCorrection != 1;\n            } else if (this.textureHost instanceof TextTexture && (this.textureHost as TextTexture).bitmap) {\n                // TextTexture\n                textrueReadGamma = (this.textureHost as TextTexture).gammaCorrection != 1;\n            }\n        }\n\n        if (textrueReadGamma) {\n            this.defines.addDefine(ShaderDefines2D.GAMMATEXTURE);\n        } else {\n            this.defines.removeDefine(ShaderDefines2D.GAMMATEXTURE);\n        }\n\n        if (returnGamma) {\n            this.defines.addDefine(ShaderDefines2D.GAMMASPACE);\n        } else {\n            this.defines.removeDefine(ShaderDefines2D.GAMMASPACE);\n        }\n\n        if (RenderState2D.InvertY) {\n            this.defines.addDefine(ShaderDefines2D.INVERTY);\n        } else {\n            this.defines.removeDefine(ShaderDefines2D.INVERTY);\n        }\n\n        if (this.mainID == RenderSpriteData.Texture2D) {\n            this.defines.addDefine(ShaderDefines2D.TEXTURESHADER);\n        }\n        if (this.mainID == RenderSpriteData.Primitive) {\n            this.defines.addDefine(ShaderDefines2D.PRIMITIVESHADER);\n        }\n    }\n\n    upload(material: Material = null): void {\n\n        this._size.setValue(RenderState2D.width, RenderState2D.height)\n        this.size = this._size;\n        //update owner ShaderData\n        this.updateShaderData();\n        if (material) {\n            //Custom Shader\n            var shaderPass = material._shader._subShaders[0]._passes;\n            \n            var pass;\n            for (var j: number = 0, m: number = shaderPass.length; j < m; j++) {\n                pass = shaderPass[j];\n                //NOTE:this will cause maybe a shader not render but do prepare before，but the developer can avoide this manual,for example shaderCaster=false.\n                if (pass._pipelineMode == \"Forward\")\n                    break;\n            }\n            var comDef: DefineDatas = Value2D._compileDefine;\n            this.defines._defineDatas.cloneTo(Value2D._compileDefine);\n            //mateiral Define\n            Value2D._compileDefine.addDefineDatas(material._defineDatas);\n            //Global Define\n            Value2D._compileDefine.addDefineDatas(Value2D.globalShaderData._defineDatas);\n            var shaderIns = pass.withCompile(Value2D._compileDefine, true);\n            shaderIns.bind();\n            shaderIns.uploadUniforms(shaderIns._sprite2DUniformParamsMap, this.defines, true);\n            shaderIns.uploadUniforms(shaderIns._sceneUniformParamsMap, Value2D.globalShaderData, true);\n            shaderIns.uploadUniforms(shaderIns._materialUniformParamsMap, material.shaderData, true);\n        } else {\n            //default pass\n            var shaderPass = this._defaultShader._subShaders[0]._passes;\n\n            if (shaderPass.length >= 1) {\n                pass = shaderPass[0];\n                //var comDef: DefineDatas = Value2D._compileDefine;\n                var shaderIns = pass.withCompile(this.defines._defineDatas, true);\n                shaderIns.bind();\n                shaderIns.uploadUniforms(shaderIns._sprite2DUniformParamsMap, this.defines, true);\n            } else {\n                //TODO 多pass情况\n            }\n        }\n    }\n\n    //TODO:coverage\n    setFilters(value: any[]): void {\n        this.filters = value;\n        if (!value)\n            return;\n\n        var n: number = value.length, f: any;\n        for (var i: number = 0; i < n; i++) {\n            f = value[i];\n            if (f) {\n                this.defines.addDefine(f.typeDefine);//搬到setValue中\n                f.action.setValue(this);\n            }\n        }\n    }\n\n    clear(): void {\n        this.clipOff.x = 0;\n        this.clipOff = this.clipOff\n    }\n\n    release(): void {\n        if ((--this.ref) < 1) {\n            this._inClassCache && (this._inClassCache[this._inClassCache._length++] = this);\n            this.clear();\n            this.filters = null;\n            this.ref = 1;\n            this.clipOff.x = 0;\n            this.clipOff = this.clipOff\n        }\n    }\n\n}\n\n\n","import { Context } from \"../resource/Context\";\n\n/**\n * @private\n */\nexport class WordText {\n    text: string;\n    width: number;\t//整个WordText的长度。-1表示没有计算还。\n    pageChars: any[];\t//把本对象的字符按照texture分组保存的文字信息。里面又是一个数组。具体含义见使用的地方。\n    pagecharsCtx: Context = null;  // 上面缓存的时候用的ctx。跨ctx的时候（例如drawToTexture）要清理\n    scalex;\t// 缓存的时候的缩放\n    scaley;\n\n    _nativeObj: any;\n    _splitRender: boolean;\t// 强制拆分渲染\n\n    constructor() {\n        if ((window as any).conch && !(window as any).conchConfig.conchWebGL)\n            this._nativeObj = new (window as any)._conchWordText();\n        else {\n            this.width = -1;\n            this.pageChars = [];\n            this.scalex = 1;\n            this.scaley = 1;\n        }\n    }\n\n    setText(txt: string): void {\n        this.text = txt;\n        if (this._nativeObj)\n            this._nativeObj._text = txt;\n        else\n            this.width = -1;\n        this.cleanCache();\n    }\n\n    toString(): string {\n        return this.text;\n    }\n\n    get length(): number {\n        return this.text ? this.text.length : 0;\n    }\n\n    /**\n     * 自己主动清理缓存，需要把关联的贴图删掉\n     * 不做也可以，textrender会自动清理不用的\n     * TODO 重用\n     */\n    cleanCache(): void {\n        if (this._nativeObj) {\n            this._nativeObj.cleanCache();\n            return;\n        }\n\n        // 如果是独占文字贴图的，需要删掉\n        //TODO 这个效果不对。会造成文字错乱\n        let chars = this.pageChars;\n        if (chars.length > 0) {\n            for (let p of chars) {\n                let tex = p.tex;\n                let words = p.words;\n                if (words.length == 1 && tex && tex.ri) {// 如果有ri表示是独立贴图\n                    tex.destroy();\n                }\n            }\n\n            this.pageChars = [];\n        }\n        this.scalex = 1;\n        this.scaley = 1;\n    }\n\n    get splitRender() {\n        return this._splitRender;\n    }\n\n    set splitRender(value: boolean) {\n        this._splitRender = value;\n        if (this._nativeObj)\n            this._nativeObj.splitRender = value;\n    }\n}","import { RenderInfo } from \"../../renders/RenderInfo\"\n/**\n * TODO如果占用内存较大,这个结构有很多成员可以临时计算\n */\nexport class CharRenderInfo {\n    char: string = '';\t\t\t\t// 调试用\n    tex: any;\t\t\t\t\t\t//\n    deleted: boolean = false; \t// 已经被删除了\n    uv: any[] = new Array(8);// [0, 0, 1, 1];\t\t//uv\n    pos: number = 0;\t\t\t\t\t//数组下标\n    width: number;\t\t\t\t\t//字体宽度。测量的宽度，用来排版。没有缩放\n    height: number; \t\t\t\t//字体高度。没有缩放\n    bmpWidth: number;\t\t\t\t//实际图片的宽度。可能与排版用的width不一致。包含缩放和margin\n    bmpHeight: number;\n    orix: number = 0;\t\t\t\t// 原点位置，通常都是所在区域的左上角\n    oriy: number = 0;\n    touchTick: number = 0;\t\t//\n    isSpace: boolean = false;\t\t//是否是空格，如果是空格，则只有width有效\n    touch(): void {\n        var curLoop: number = RenderInfo.loopCount;\n        if (this.touchTick != curLoop) {// 这个保证每帧只调用一次\n            this.tex.touchRect(this, curLoop);\n        }\n        this.touchTick = curLoop;\n    }\n}\n\n","import { CharRenderInfo } from \"./CharRenderInfo\";\nexport class ICharRender {\n    fontsz = 16;\n    getWidth(font: string, str: string): number { return 0; }\n\n    scale(sx: number, sy: number): void {\n    }\n\n    get canvasWidth(): number {\n        return 0;\n    }\n\n    set canvasWidth(w: number) {\n\n    }\n    /**\n     *TODO stroke \n     * @param\tchar\n     * @param\tfont\n     * @param\tsize  返回宽高\n     * @return\n     */\n    getCharBmp(char: string, font: string, lineWidth: number, colStr: string, strokeColStr: string, size: CharRenderInfo, margin_left: number, margin_top: number, margin_right: number, margin_bottom: number, rect: any[]|null = null): ImageData|null {\n        return null;\n    }\n}\n\n","import { Config } from \"../../Config\";\nimport { ILaya } from \"../../ILaya\";\n\n/**\n * <code>Browser</code> 是浏览器代理类。封装浏览器及原生 js 提供的一些功能。\n */\nexport class Browser {\n\n    /** 浏览器代理信息。*/\n    static userAgent: string;\n    /** 表示是否在移动设备，包括IOS和安卓等设备内。*/\n    static onMobile: boolean;\n    /** 表示是否在 IOS 设备内。*/\n    static onIOS: boolean;\n    /** 表示是否在 Mac 设备。*/\n    static onMac: boolean;\n    /** 表示是否在 IPhone 设备内。*/\n    static onIPhone: boolean;\n    /** 表示是否在 IPad 设备内。*/\n    static onIPad: boolean;\n    /** 表示是否在 Android 设备内。*/\n    static onAndroid: boolean;\n    /** 表示是否在 Windows Phone 设备内。*/\n    static onWP: boolean;\n    /** 表示是否在 QQ 浏览器内。*/\n    static onQQBrowser: boolean;\n    /** 表示是否在移动端 QQ 或 QQ 浏览器内。*/\n    static onMQQBrowser: boolean;\n    /** 表示是否在 Safari 内。*/\n    static onSafari: boolean;\n    /** 表示是否在 Chrome 内 */\n    static onChrome: boolean;\n    /** 表示是否在 IE 浏览器内*/\n    static onIE: boolean;\n    /** 表示是否在 微信 内*/\n    static onWeiXin: boolean;\n    /** 表示是否在 PC 端。*/\n    static onPC: boolean;\n    /** 微信小游戏 **/\n    static onMiniGame: boolean;\n    /** 百度小游戏 **/\n    static onBDMiniGame: boolean;\n    /** 小米戏小游戏 **/\n    static onKGMiniGame: boolean;\n    /** OPPO小游戏 **/\n    static onQGMiniGame: boolean;\n    /** VIVO小游戏 **/\n    static onVVMiniGame: boolean;\n    /** 阿里小游戏 **/\n    static onAlipayMiniGame: boolean;\n    /***手机QQ小游戏 */\n    static onQQMiniGame: boolean;\n    /*** BILIBILI小游戏 */\n    static onBLMiniGame: boolean;\n    /** 抖音小游戏*/\n    static onTTMiniGame: boolean;\n    /** 华为快游戏 */\n    static onHWMiniGame: boolean;\n    /** 淘宝小程序 */\n    static onTBMiniGame: boolean;\n    /** @private */\n    static onFirefox: boolean;//TODO:求补充\n    /** Edge浏览器 */\n    static onEdge: boolean;\n    /** @private */\n    static onLayaRuntime: boolean;\n\n    /** 真实平台类型，onMobile等是通过UserAgent判断，可能具有欺骗性 **/\n    static platform: number;\n    static PLATFORM_PC = 0;\n    static PLATFORM_ANDROID = 1;\n    static PLATFORM_IOS = 2;\n\n    /** 表示是否支持WebAudio*/\n    static supportWebAudio: boolean;\n    /** 表示是否支持LocalStorage*/\n    static supportLocalStorage: boolean;\n\n    /** 全局离线画布（非主画布）。主要用来测量字体、获取image数据。*/\n    static canvas: any;\n    /** 全局离线画布上绘图的环境（非主画布）。 */\n    static context: CanvasRenderingContext2D;\n\n    /** @private */\n    private static _window: any;\n    /** @private */\n    private static _document: Document;\n    /** @private */\n    private static _container: any;\n    /** @private */\n    private static _pixelRatio: number = -1;\n\n    /** @private */\n    private static _clientWidth: number;\n    /** @private */\n    private static _clientHeight: number;\n\n    /** @private */\n    static mainCanvas: any = null;\n\n    /**@private */\n    private static hanzi: RegExp = new RegExp(\"^[\\u4E00-\\u9FA5]$\");\n    /**@private */\n    private static fontMap: { [key: string]: string } = {};\n    /**@private */\n    static measureText: Function = function (txt: string, font: string): any {\n        let isChinese: boolean = Browser.hanzi.test(txt);\n        if (isChinese && Browser.fontMap[font]) {\n            return Browser.fontMap[font];\n        }\n\n        let ctx: CanvasRenderingContext2D = Browser.context;\n        ctx.font = font;\n\n        let r: any = ctx.measureText(txt);\n        if (isChinese) Browser.fontMap[font] = r;\n        return r;\n    }\n\n    /**@internal */\n    static __init__(): any {\n        let Laya: any = (window as any).Laya || ILaya.Laya;\n        if (Browser._window) return Browser._window;\n        let win: any = Browser._window = window;\n        let doc: any = Browser._document = win.document;\n        let u: string = Browser.userAgent = win.navigator.userAgent;\n        let maxTouchPoints: number = win.navigator.maxTouchPoints || 0;\n        let platform: string = win.navigator.platform;\n\n        if (!!(window as any).conch && \"conchUseWXAdapter\" in Browser.window) {\n            (window as any).wxMiniGame(Laya, Laya);\n            Laya[\"MiniAdpter\"].enable();\n        }\n        //阿里小游戏\n        if (\"my\" in Browser.window) {\n            if (u.indexOf('TB/') > -1 || u.indexOf('Taobao/') > -1 || u.indexOf('TM/') > -1) {\n                //这里需要手动初始化阿里适配库\n                (window as any).tbMiniGame(Laya, Laya);\n                if (!Laya[\"TBMiniAdapter\"]) {\n                    console.error(\"请先添加淘宝适配库\");\n                } else {\n                    Laya[\"TBMiniAdapter\"].enable();\n                }\n            } else if (u.indexOf('AlipayMiniGame') > -1) {\n                //这里需要手动初始化阿里适配库\n                (window as any).aliPayMiniGame(Laya, Laya);\n                if (!Laya[\"ALIMiniAdapter\"]) {\n                    console.error(\"请先添加阿里小游戏适配库\");\n                } else {\n                    Laya[\"ALIMiniAdapter\"].enable();\n                }\n            }\n        }\n\n        if (((u.indexOf('OPPO') == -1 && u.indexOf(\"MiniGame\") > -1) || u.indexOf('runtime') != -1 || (u.indexOf('miniprogram') != -1 && (window as any).isWXMiMi)) && \"wx\" in Browser.window) {\n            if (\"tt\" in Browser.window) {\n                //抖音小游戏\n                (window as any).ttMiniGame(Laya, Laya);\n                if (!Laya[\"TTMiniAdapter\"]) {\n                    //TODO\n                    console.error(\"请引入抖音小游戏的适配库，详细教程：https://layaair.com/3.x/doc/released/miniGame/byteDance/readme.html\");\n                } else {\n                    Laya[\"TTMiniAdapter\"].enable();\n                }\n            } else if (\"bl\" in Browser.window) {\n                //手机B站小游戏\n                (window as any).biliMiniGame(Laya, Laya);\n                if (!Laya[\"BLMiniAdapter\"]) {\n                    console.error(\"请引入bilibili小游戏的适配库\");\n                } else {\n                    Laya[\"BLMiniAdapter\"].enable();\n                }\n            }\n            else if (\"qq\" in Browser.window) {\n                //手机QQ小游戏\n                (window as any).qqMiniGame(Laya, Laya);\n                if (!Laya[\"QQMiniAdapter\"]) {\n                    console.error(\"请引入手机QQ小游戏的适配库\");\n                } else {\n                    Laya[\"QQMiniAdapter\"].enable();\n                }\n            }\n            else {\n                //微信小游戏\n                (window as any).wxMiniGame(Laya, Laya);\n                if (!Laya[\"MiniAdpter\"]) {\n                    console.error(\"请先添加小游戏适配库,详细教程：https://layaair.com/3.x/doc/released/miniGame/wechat/readme.html\");\n                    //TODO 教程要改\n                } else {\n                    Laya[\"MiniAdpter\"].enable();\n                }\n            }\n        }\n        //华为快游戏\n        if (\"hbs\" in Browser.window) {\n            (window as any).hwMiniGame(Laya, Laya);\n            if (!Laya[\"HWMiniAdapter\"]) {\n                console.error(\"请先添加小游戏适配库!\");\n                //TODO 教程要改\n            } else {\n                Laya[\"HWMiniAdapter\"].enable();\n            }\n        }\n\n        //百度小游戏\n        if (u.indexOf(\"SwanGame\") > -1) {\n            (window as any).bdMiniGame(Laya, Laya);\n            if (!Laya[\"BMiniAdapter\"]) {\n                console.error(\"请先添加百度小游戏适配库\");\n                //TODO 教程要改\n            } else {\n                Laya[\"BMiniAdapter\"].enable();\n            }\n        }\n\n        //小米小游戏\n        if (u.indexOf('QuickGame') > -1) {\n            (window as any).miMiniGame(Laya, Laya);\n            if (!Laya[\"KGMiniAdapter\"]) {\n                console.error(\"请先添加小米小游戏适配库,详细教程：https://layaair.com/3.x/doc/released/miniGame/xiaomi/readme.html\");\n            } else {\n                Laya[\"KGMiniAdapter\"].enable();\n            }\n        }\n\n        //OPPO小游戏\n        if (u.indexOf('OPPO') > -1 && u.indexOf('MiniGame') > -1) {\n            (window as any).qgMiniGame(Laya, Laya);\n            if (!Laya[\"QGMiniAdapter\"]) {\n                console.error(\"请先添加OPPO小游戏适配库,详细教程：https://layaair.com/3.x/doc/released/miniGame/OPPO/readme.html\");\n            } else {\n                //temp oppo 需要修改交换链的功能\n                Config.fixedFrames = false;\n                Laya[\"QGMiniAdapter\"].enable();\n            }\n        }\n\n        //VIVO小游戏\n        if (u.indexOf('VVGame') > -1) {\n            (window as any).vvMiniGame(Laya, Laya);\n            if (!Laya[\"VVMiniAdapter\"]) {\n                console.error(\"请先添加VIVO小游戏适配库,详细教程：https://layaair.com/3.x/doc/released/miniGame/vivo/readme.html\");\n            } else {\n                //temp oppo 需要修改交换链的功能\n                Config.fixedFrames = false;\n                Laya[\"VVMiniAdapter\"].enable();\n            }\n        }\n\n        //新增trace的支持\n        win.trace = console.log;\n\n        //兼容requestAnimationFrame\n        win.requestAnimationFrame = win.requestAnimationFrame || win.webkitRequestAnimationFrame || win.mozRequestAnimationFrame || win.oRequestAnimationFrame || win.msRequestAnimationFrame || function (fun: any): any {\n            return win.setTimeout(fun, 1000 / 60);\n        }\n\n        //强制修改body样式\n        var bodyStyle: any = doc.body.style;\n        bodyStyle.margin = 0;\n        bodyStyle.overflow = 'hidden';\n        bodyStyle['-webkit-user-select'] = 'none';\n        bodyStyle['-webkit-tap-highlight-color'] = 'rgba(200,200,200,0)';\n\n        //强制修改meta标签，防止开发者写错\n        var metas: any[] = doc.getElementsByTagName('meta');\n        let viewportContent: Record<string, string> = {\n            \"width\": \"device-width\",\n            \"initial-scale\": \"1.0\",\n            \"minimum-scale\": \"1.0\",\n            \"maximum-scale\": \"1.0\",\n            \"user-scalable\": \"no\"\n        };\n        let viewport: any;\n        for (const meta of metas) {\n            if (meta.name == \"viewport\") {\n                viewport = meta;\n                break;\n            }\n        }\n        if (!viewport) {\n            viewport = doc.createElement('meta');\n            viewport.name = 'viewport';\n            doc.getElementsByTagName('head')[0]?.appendChild(viewport);\n        }\n        else {\n            let arr: Array<string> = (viewport.content || \"\").split(\",\");\n            for (let ele of arr) {\n                let arr2 = ele.split(\"=\");\n                if (!viewportContent[arr2[0].trim()])\n                    viewportContent[arr2[0]] = arr2[1];\n            }\n        }\n        viewport.content = Object.keys(viewportContent).map(k => k + \"=\" + viewportContent[k]);\n\n        //处理兼容性\t\t\t\n        Browser.onMobile = (window as any).conch ? true : u.indexOf(\"Mobile\") > -1;\n        Browser.onIOS = !!u.match(/\\(i[^;]+;( U;)? CPU.+Mac OS X/);\n        Browser.onIPhone = u.indexOf(\"iPhone\") > -1;\n        Browser.onMac = u.indexOf(\"Mac OS X\") > -1;\n        Browser.onIPad = u.indexOf(\"iPad\") > -1 || (platform === 'MacIntel' && maxTouchPoints > 1);//\"platform === 'MacIntel' && maxTouchPoints >1\" is a temporary solution，maybe accidentally injure other platform.\n        Browser.onAndroid = u.indexOf('Android') > -1 || u.indexOf('Adr') > -1;\n        Browser.onWP = u.indexOf(\"Windows Phone\") > -1;\n        Browser.onQQBrowser = u.indexOf(\"QQBrowser\") > -1;\n        Browser.onMQQBrowser = u.indexOf(\"MQQBrowser\") > -1 || (u.indexOf(\"Mobile\") > -1 && u.indexOf(\"QQ\") > -1);\n        Browser.onIE = !!win.ActiveXObject || \"ActiveXObject\" in win;\n        Browser.onWeiXin = u.indexOf('MicroMessenger') > -1;\n        Browser.onSafari = u.indexOf(\"Safari\") > -1 && u.indexOf(\"Chrome\") === -1;\n        Browser.onChrome = u.indexOf(\"Chrome\") > -1;\n        Browser.onPC = !Browser.onMobile;\n        Browser.onFirefox = u.indexOf('Firefox') > -1;\n        Browser.onEdge = u.indexOf('Edge') > -1 || u.indexOf('Edg') > -1;\n        Browser.onMiniGame = u.indexOf('MiniGame') > -1;\n        Browser.onBDMiniGame = u.indexOf('SwanGame') > -1;\n        Browser.onLayaRuntime = !!(window as any).conch;\n        if (u.indexOf('OPPO') > -1 && u.indexOf('MiniGame') > -1) {\n            Browser.onQGMiniGame = true;//OPPO环境判断\n            Browser.onMiniGame = false;\n        } else if (\"qq\" in Browser.window && u.indexOf('MiniGame') > -1) {\n            Browser.onQQMiniGame = true;//手机QQ环境判断\n            Browser.onMiniGame = false;\n        } else if (\"bl\" in Browser.window && u.indexOf('MiniGame') > -1) {\n            Browser.onBLMiniGame = true;//B站环境判断\n            Browser.onMiniGame = false;\n        } else if (\"tt\" in Browser.window && u.indexOf('MiniGame') > -1) {\n            Browser.onTTMiniGame = true;\n            Browser.onMiniGame = false;\n        }\n\n        Browser.onHWMiniGame = \"hbs\" in Browser.window;\n        Browser.onVVMiniGame = u.indexOf('VVGame') > -1;//vivo\n        Browser.onKGMiniGame = u.indexOf('QuickGame') > -1;//小米运行环境判断\n        if (u.indexOf('AlipayMiniGame') > -1) {\n            Browser.onAlipayMiniGame = true;//阿里小游戏环境判断\n            Browser.onMiniGame = false;\n        }\n        if (u.indexOf('TB/') > -1 || u.indexOf('Taobao/') > -1 || u.indexOf('TM/') > -1) {\n            Browser.onTBMiniGame = true;\n        }\n\n        if (Browser.onAndroid || Browser.onIOS) {\n            //也有可能是模拟器\n            if (platform && (platform.indexOf(\"Win\") != -1 || platform.indexOf(\"Mac\") != -1))\n                Browser.platform = Browser.PLATFORM_PC;\n            else if (Browser.onAndroid)\n                Browser.platform = Browser.PLATFORM_ANDROID;\n            else\n                Browser.platform = Browser.PLATFORM_IOS;\n        }\n        else\n            Browser.platform = Browser.PLATFORM_PC;\n\n        return win;\n    }\n    /**\n     * 获取是否为小游戏环境\n     * @returns onMiniGame || onBDMiniGame || onQGMiniGame || onKGMiniGame || onVVMiniGame || onAlipayMiniGame || onQQMiniGame || onBLMiniGame || onTTMiniGame || onHWMiniGame || onTBMiniGame\n     */\n    static get _isMiniGame(): boolean {\n        return Browser.onMiniGame || Browser.onBDMiniGame || Browser.onQGMiniGame || Browser.onKGMiniGame || Browser.onVVMiniGame || Browser.onAlipayMiniGame || Browser.onQQMiniGame || Browser.onBLMiniGame || Browser.onTTMiniGame || Browser.onHWMiniGame || Browser.onTBMiniGame || (Browser.window && Browser.window.isWXMiMi);\n    }\n    /**\n     * 创建浏览器原生节点。\n     * @param\ttype 节点类型。\n     * @return\t创建的节点对象的引用。\n     */\n    static createElement(type: string): any {\n        Browser.__init__();\n        return Browser._document.createElement(type);\n    }\n\n    /**\n     * 返回 Document 对象中拥有指定 id 的第一个对象的引用。\n     * @param\ttype 节点id。\n     * @return\t节点对象。\n     */\n    static getElementById(type: string): any {\n        Browser.__init__();\n        return Browser._document.getElementById(type);\n    }\n\n    /**\n     * 移除指定的浏览器原生节点对象。\n     * @param\ttype 节点对象。\n     */\n    static removeElement(ele: any): void {\n        if (ele && ele.parentNode) ele.parentNode.removeChild(ele);\n    }\n\n    /**\n     * 获取浏览器当前时间戳，单位为毫秒。\n     */\n    static now(): number {\n        return Date.now();\n    }\n\n    /**\n     * 浏览器窗口可视宽度。\n     * 通过分析浏览器信息获得。浏览器多个属性值优先级为：window.innerWidth(包含滚动条宽度) > document.body.clientWidth(不包含滚动条宽度)，如果前者为0或为空，则选择后者。\n     */\n    static get clientWidth(): number {\n        Browser.__init__();\n        return Browser._clientWidth || Browser._window.innerWidth || Browser._document.body.clientWidth;\n    }\n\n    static set clientWidth(value: number) {\n        Browser._clientWidth = value;\n    }\n\n    /**\n     * 浏览器窗口可视高度。\n     * 通过分析浏览器信息获得。浏览器多个属性值优先级为：window.innerHeight(包含滚动条高度) > document.body.clientHeight(不包含滚动条高度) > document.documentElement.clientHeight(不包含滚动条高度)，如果前者为0或为空，则选择后者。\n     */\n    static get clientHeight(): number {\n        Browser.__init__();\n        return Browser._clientHeight || Browser._window.innerHeight || Browser._document.body.clientHeight || Browser._document.documentElement.clientHeight;\n    }\n\n    static set clientHeight(value: number) {\n        Browser._clientHeight = value;\n    }\n\n    /** 浏览器窗口物理宽度。考虑了设备像素比。*/\n    static get width(): number {\n        Browser.__init__();\n        return ((ILaya.stage && ILaya.stage.canvasRotation) ? Browser.clientHeight : Browser.clientWidth) * Browser.pixelRatio;\n    }\n\n    /** 浏览器窗口物理高度。考虑了设备像素比。*/\n    static get height(): number {\n        Browser.__init__();\n        return ((ILaya.stage && ILaya.stage.canvasRotation) ? Browser.clientWidth : Browser.clientHeight) * Browser.pixelRatio;\n    }\n\n    /** 获得设备像素比。*/\n    static get pixelRatio(): number {\n        if (Browser._pixelRatio < 0) {\n            Browser.__init__();\n            if (Browser.userAgent.indexOf(\"Mozilla/6.0(Linux; Android 6.0; HUAWEI NXT-AL10 Build/HUAWEINXT-AL10)\") > -1) Browser._pixelRatio = 2;\n            else {\n                Browser._pixelRatio = (Browser._window.devicePixelRatio || 1);\n                if (Browser._pixelRatio < 1) Browser._pixelRatio = 1;\n            }\n        }\n        return Browser._pixelRatio;\n    }\n\n    /**画布容器，用来盛放画布的容器。方便对画布进行控制*/\n    static get container(): any {\n        if (!Browser._container) {\n            Browser.__init__();\n            Browser._container = Browser.createElement(\"div\");\n            Browser._container.id = \"layaContainer\";\n            Browser._document.body.appendChild(Browser._container);\n        }\n        return Browser._container;\n    }\n\n    static set container(value: any) {\n        Browser._container = value;\n    }\n\n    /**浏览器原生 window 对象的引用。*/\n    static get window(): any {\n        return Browser._window || Browser.__init__();\n    }\n\n    /**浏览器原生 document 对象的引用。*/\n    static get document(): any {\n        Browser.__init__();\n        return Browser._document;\n    }\n\n    /**\n     * 获得URL参数值\n     * @param\tname 参数名称\n     * @return\t参数值\n     */\n    static getQueryString(name: string): string {\n        if (Browser.onMiniGame) return null;\n        if (!window.location || !window.location.search)\n            return null;\n        var reg: RegExp = new RegExp(\"(^|&)\" + name + \"=([^&]*)(&|$)\");\n        var r: any = window.location.search.substring(1).match(reg);\n        if (r != null) return unescape(r[2]);\n        return null;\n    }\n\n    // Safari横屏工具栏偏移\n    static getSafariToolbarOffset() {\n        return (Browser.window.__innerHeight || Browser.document.body.clientHeight || Browser.document.documentElement.clientHeight) - Browser.window.innerHeight;\n    }\n}\n\n","import { CharRenderInfo } from \"./CharRenderInfo\"\nimport { ICharRender } from \"./ICharRender\"\nimport { Browser } from \"../../utils/Browser\";\nexport class CharRender_Canvas extends ICharRender {\n\tprivate static canvas: any = null;// HTMLCanvasElement;\n\tprivate ctx: any = null;\n\tprivate lastScaleX = 1.0;\n\tprivate lastScaleY = 1.0;\n\t//private needResetScale: boolean = false;\n\tprivate maxTexW = 0;\n\tprivate maxTexH = 0;\n\tprivate scaleFontSize = true;\n\tprivate showDbgInfo = false;\n\tprivate supportImageData = true;\n\tconstructor(maxw: number, maxh: number, scalefont: boolean = true, useImageData: boolean = true, showdbg: boolean = false) {\n\t\tsuper();\n\t\tthis.maxTexW = maxw;\n\t\tthis.maxTexH = maxh;\n\t\tthis.scaleFontSize = scalefont;\n\t\tthis.supportImageData = useImageData;\n\t\tthis.showDbgInfo = showdbg;\n\t\tif (!CharRender_Canvas.canvas) {\n\t\t\tCharRender_Canvas.canvas = Browser.createElement('canvas');\n\t\t\tCharRender_Canvas.canvas.width = 1024;\n\t\t\tCharRender_Canvas.canvas.height = 512;\n\t\t\t//这个canvas是用来获取字体渲染结果的。由于不可见canvas的字体不能小于12，所以要加到body上\n\t\t\t//为了避免被发现，设一个在屏幕外的绝对位置。\n\t\t\tCharRender_Canvas.canvas.style.left = \"-10000px\";\n\t\t\tCharRender_Canvas.canvas.style.position = \"absolute\";\n\t\t\twindow.document.body.appendChild(CharRender_Canvas.canvas);;\n\t\t\tthis.ctx = CharRender_Canvas.canvas.getContext('2d', { willReadFrequently: true });\n\t\t}\n\t}\n\t/**\n\t * @override\n\t */\n\tget canvasWidth(): number {\n\t\treturn CharRender_Canvas.canvas.width;\n\t}\n\n\t/**\n\t * @override\n\t */\n\tset canvasWidth(w: number) {\n\t\tif (CharRender_Canvas.canvas.width == w)\n\t\t\treturn;\n\t\tCharRender_Canvas.canvas.width = w;\n\t\tif (w > 2048) {\n\t\t\tconsole.warn(\"画文字设置的宽度太大，超过2048了\");\n\t\t}\n\t\t// 重新恢复一下缩放\n\t\tthis.ctx.setTransform(1, 0, 0, 1, 0, 0);\t// 强制清理缩放\t\t\t\n\t\tthis.ctx.scale(this.lastScaleX, this.lastScaleY);\n\t}\n\n\t/**\n\t * \n\t * @param font \n\t * @param str \n\t * @override\n\t */\n\tgetWidth(font: string, str: string): number {\n\t\tif (!this.ctx) return 0;\n\t\t//由于大家公用一个canvas，所以需要在选中的时候做一些配置。\n\t\tif (this.ctx._lastFont != font) {\n\t\t\tthis.ctx.font = font;\n\t\t\tthis.ctx._lastFont = font;\n\t\t\t//console.log('use font ' + font);\n\t\t}\n\t\treturn this.ctx.measureText(str).width;\n\t}\n\n\t/**\n\t * \n\t * @param sx \n\t * @param sy \n\t * @override\n\t */\n\tscale(sx: number, sy: number): void {\n\t\tif (!this.supportImageData) {// supportImageData==false表示用 getCharCanvas，这个自己管理缩放\n\t\t\tthis.lastScaleX = sx;\n\t\t\tthis.lastScaleY = sy;\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.lastScaleX != sx || this.lastScaleY != sy) {\n\t\t\tthis.ctx.setTransform(sx, 0, 0, sy, 0, 0);\t// 强制清理缩放\t\t\t\n\t\t\tthis.lastScaleX = sx;\n\t\t\tthis.lastScaleY = sy;\n\t\t}\n\t}\n\n\t/**\n\t *TODO stroke \n\t * @param\tchar\n\t * @param\tfont\n\t * @param\tcri  修改里面的width。\n\t * @return\n\t * @override\n\t */\n\tgetCharBmp(char: string, font: string, lineWidth: number, colStr: string, strokeColStr: string, cri: CharRenderInfo,\n\t\tmargin_left: number, margin_top: number, margin_right: number, margin_bottom: number, rect: any[] | null = null): ImageData | null {\n\t\tif (!this.supportImageData)\n\t\t\treturn this.getCharCanvas(char, font, lineWidth, colStr, strokeColStr, cri, margin_left, margin_top, margin_right, margin_bottom);\n\t\tvar ctx: any = this.ctx;\n\n\t\tvar sz = this.fontsz;\n\t\t//ctx.save();\n\t\t//由于大家公用一个canvas，所以需要在选中的时候做一些配置。\n\t\t//跟_lastFont比较容易出错，所以比较ctx.font\n\t\tif (ctx.font != font) {// ctx._lastFont != font) {\t问题：ctx.font=xx 然后ctx==xx可能返回false，例如可能会给自己加\"\",当字体有空格的时候\n\t\t\tctx.font = font;\n\t\t\tctx._lastFont = font;\n\t\t\t//console.log('use font ' + font);\n\t\t}\n\n\t\tcri.width = ctx.measureText(char).width;//排版用的width是没有缩放的。后面会用矩阵缩放\n\t\tvar w: number = cri.width * this.lastScaleX;//w h 只是clear用的。所以要缩放\n\t\tvar h: number = cri.height * this.lastScaleY;\n\t\tw += (margin_left + margin_right) * this.lastScaleX;\n\t\th += (margin_top + margin_bottom) * this.lastScaleY;\n\t\tw = Math.ceil(w);\n\t\th = Math.ceil(h);\n\t\tw = Math.min(w, CharRender_Canvas.canvas.width);\n\t\th = Math.min(h, CharRender_Canvas.canvas.height);\n\n\t\tvar clearW: number = w + lineWidth * 2 + 1;\n\t\tvar clearH: number = h + lineWidth * 2 + 1;\n\t\tif (rect) {// measureText可能会小于请求的区域。 rect[2]可能为-1\n\t\t\tclearW = Math.max(clearW, rect[0] + rect[2] + 1);\n\t\t\tclearH = Math.max(clearH, rect[1] + rect[3] + 1);\n\t\t}\n\t\tctx.clearRect(0, 0, clearW / this.lastScaleX + 1, clearH / this.lastScaleY + 1);\n\t\tctx.save();\n\t\t//ctx.textAlign = \"end\";\n\t\tctx.textBaseline = \"middle\";\n\t\t//ctx.translate(CborderSize, CborderSize);\n\t\t//ctx.scale(xs, ys);\n\t\tif (lineWidth > 0) {\n\t\t\t//设置文本描边为圆角模式，默认值miter会导致在某些字体的转角字符出现尖刺现象。\n\t\t\tctx.lineJoin = \"round\";\n\t\t\tctx.strokeStyle = strokeColStr;\n\t\t\tctx.lineWidth = lineWidth;\n\t\t\tctx.strokeText(char, margin_left, margin_top + sz / 2);\n\t\t}\n\t\tif (colStr) {\n\t\t\tctx.fillStyle = colStr;\n\t\t\tctx.fillText(char, margin_left, margin_top + sz / 2);\n\t\t}\n\n\t\tif (this.showDbgInfo) {\n\t\t\tctx.strokeStyle = '#ff0000';\n\t\t\tctx.strokeRect(1, 1, w - 2, h - 2);\n\t\t\tctx.strokeStyle = '#00ff00';\n\t\t\tctx.strokeRect(margin_left, margin_top, cri.width, cri.height);//原始大小，没有缩放的\n\t\t}\n\t\t//ctx.restore();\n\t\tif (rect) {\n\t\t\tif (rect[2] == -1) rect[2] = Math.ceil((cri.width + lineWidth * 2) * this.lastScaleX); // 这个没有考虑左右margin\n\t\t\tif (rect[2] <= 0) rect[2] = 1;\t// 有的字体在处理不存在文字的时候，测量宽度为0，会导致getImageData出错\n\t\t}\n\t\tvar imgdt: ImageData = rect ? (ctx.getImageData(rect[0], rect[1], rect[2], rect[3] + 1)) : (ctx.getImageData(0, 0, w, h + 1));\n\t\tctx.restore();\n\t\tcri.bmpWidth = imgdt.width;\n\t\tcri.bmpHeight = imgdt.height;\n\t\treturn imgdt;\n\t}\n\n\tgetCharCanvas(char: string, font: string, lineWidth: number, colStr: string, strokeColStr: string, cri: CharRenderInfo, margin_left: number, margin_top: number, margin_right: number, margin_bottom: number): ImageData {\n\t\tvar ctx: any = this.ctx;\n\n\t\t//ctx.save();\n\t\t//由于大家公用一个canvas，所以需要在选中的时候做一些配置。\n\t\t//跟_lastFont比较容易出错，所以比较ctx.font\n\t\tif (ctx.font != font) {// ctx._lastFont != font) {\t问题：ctx.font=xx 然后ctx==xx可能返回false，例如可能会给自己加\"\",当字体有空格的时候\n\t\t\tctx.font = font;\n\t\t\tctx._lastFont = font;\n\t\t\t//console.log('use font ' + font);\n\t\t}\n\n\t\tcri.width = ctx.measureText(char).width;//排版用的width是没有缩放的。后面会用矩阵缩放\n\t\tvar w: number = cri.width * this.lastScaleX;//w h 只是clear用的。所以要缩放\n\t\tvar h: number = cri.height * this.lastScaleY;\n\t\tw += (margin_left + margin_right) * this.lastScaleX;\n\t\th += ((margin_top + margin_bottom) * this.lastScaleY + 1);\t// 这个+1只是为了让测试能通过。确实应该加点高度，否则会被裁掉一部分，但是加多少还没找到方法。\n\t\tw = Math.min(w, this.maxTexW);\n\t\th = Math.min(h, this.maxTexH);\n\n\t\t//if (canvas.width != (w + 1) || canvas.height != (h + 1)) {\n\t\tCharRender_Canvas.canvas.width = Math.min(w + 1, this.maxTexW);\n\t\tCharRender_Canvas.canvas.height = Math.min(h + 1, this.maxTexH);\n\t\tctx.font = font;\n\t\t//}\n\t\tctx.clearRect(0, 0, w + 1 + lineWidth, h + 1 + lineWidth);\n\t\tctx.setTransform(1, 0, 0, 1, 0, 0);\t// 强制清理缩放\n\t\tctx.save();\n\t\tif (this.scaleFontSize) {\n\t\t\t//这里的缩放会导致与上面的缩放同时起作用。所以上面保护\n\t\t\tctx.scale(this.lastScaleX, this.lastScaleY);\n\t\t}\n\t\tctx.translate(margin_left, margin_top);\n\t\tctx.textAlign = \"left\";\n\n\t\tvar sz = this.fontsz;\n\t\tctx.textBaseline = \"middle\";\n\t\t//ctx.translate(CborderSize, CborderSize);\n\t\t//ctx.scale(xs, ys);\n\t\tif (lineWidth > 0) {\n\t\t\tctx.strokeStyle = strokeColStr;\n\t\t\tctx.fillStyle = colStr;\n\t\t\tctx.lineWidth = lineWidth;\n\t\t\t//ctx.strokeText(char, margin_left, margin_top);\n\t\t\tif (ctx.fillAndStrokeText) {\n\t\t\t\tctx.fillAndStrokeText(char, 0, sz / 2);\n\t\t\t} else {\n\t\t\t\tctx.strokeText(char, 0, sz / 2);\n\t\t\t\tctx.fillText(char, 0, sz / 2);\n\t\t\t}\n\t\t} else if (colStr) {\n\t\t\tctx.fillStyle = colStr;\n\t\t\tctx.fillText(char, 0, sz / 2);\n\t\t}\n\t\tif (this.showDbgInfo) {\n\t\t\tctx.strokeStyle = '#ff0000';\n\t\t\tctx.strokeRect(0, 0, w, h);\n\t\t\tctx.strokeStyle = '#00ff00';\n\t\t\tctx.strokeRect(0, 0, cri.width, cri.height);//原始大小，没有缩放的\n\t\t}\n\t\tctx.restore();\n\t\tcri.bmpWidth = CharRender_Canvas.canvas.width;\n\t\tcri.bmpHeight = CharRender_Canvas.canvas.height;\n\t\treturn CharRender_Canvas.canvas;\n\t}\n}\n\n","import { TextAtlas } from \"./TextAtlas\";\nimport { TextTexture } from \"./TextTexture\";\nimport { Sprite } from \"../../display/Sprite\"\nimport { Point } from \"../../maths/Point\"\nimport { RenderInfo } from \"../../renders/RenderInfo\"\nimport { Context } from \"../../resource/Context\"\nimport { Texture } from \"../../resource/Texture\"\nimport { FontInfo } from \"../../utils/FontInfo\"\nimport { WordText } from \"../../utils/WordText\"\nimport { CharRenderInfo } from \"./CharRenderInfo\"\nimport { CharRender_Canvas } from \"./CharRender_Canvas\"\nimport { ICharRender } from \"./ICharRender\"\nimport { ILaya } from \"../../../ILaya\";\nimport { Const } from \"../../Const\";\n\nexport class TextRender {\n    //config\n    static useOldCharBook = false;\n    static atlasWidth = 1024;\n    static noAtlas = false;\t\t\t\t// 一串文字用独立贴图\n    static forceSplitRender = false;\t    // 强制把一句话拆开渲染\n    static forceWholeRender = false; \t// 强制整句话渲染\n    static scaleFontWithCtx = true;\t\t// 如果有缩放，则修改字体，以保证清晰度\n    static maxFontScale = 4;            //当scaleFontWithCtx为true时，最大允许放大的倍数\n    static standardFontSize = 32;\t\t\t// 测量的时候使用的字体大小\n    static destroyAtlasDt = 10;\t\t\t\t\t// 回收图集贴图的时间\n    static checkCleanTextureDt = 2000;\t\t// 检查是否要真正删除纹理的时间。单位是ms\n    static destroyUnusedTextureDt = 3000; \t// 长时间不用的纹理删除的时间。单位是ms\n    static cleanMem = 100 * 1024 * 1024;\t\t// 多大内存触发清理图集。这时候占用率低的图集会被清理\n    static isWan1Wan = false;\n    static showLog = false;\n    static debugUV = false;\t\t\t\t// 文字纹理需要保护边。当像素没有对齐的时候，可能会采样到旁边的贴图。true则填充texture为白色，模拟干扰\n    //config\n\n    /**\n     * fontSizeInfo\n     * 记录每种字体的像素的大小。标准是32px的字体。由4个byte组成，分别表示[xdist,ydist,w,h]。 \n     * xdist,ydist 是像素起点到排版原点的距离，都是正的，表示实际数据往左和上偏多少，如果实际往右和下偏，则算作0，毕竟这个只是一个大概\n     * 例如 [Arial]=0x00002020, 表示宽高都是32\n     */\n    private fontSizeInfo: any = {};\n    static atlasWidth2: number;\n    private charRender: ICharRender;\n    private static tmpRI: CharRenderInfo = new CharRenderInfo();\n    private static pixelBBX: number[] = [0, 0, 0, 0];\n    private mapFont: any = {};\t\t// 把font名称映射到数字\n    private fontID: number = 0;\n\n    private fontScaleX: number = 1.0;\t\t\t\t\t\t//临时缩放。\n    private fontScaleY: number = 1.0;\n\n    //private var charMaps:Object = {};\t// 所有的都放到一起\n\n    private _curStrPos: number = 0;\t\t//解开一个字符串的时候用的。表示当前解到什么位置了\n    static textRenderInst: TextRender;\t//debug\n\n    textAtlases: TextAtlas[] = [];\t\t// 所有的大图集\n    private isoTextures: TextTexture[] = [];\t// 所有的独立贴图\n\n    private bmpData32: Uint32Array;\n    private static imgdtRect: any[] = [0, 0, 0, 0];\n\n    // 当前字体的测量信息。\n    private lastFont: FontInfo | null = null;\n    private fontSizeW: number = 0;\n    private fontSizeH: number = 0;\n    private fontSizeOffX: number = 0;\n    private fontSizeOffY: number = 0;\n\n    private renderPerChar: boolean = true;\t// 是否是单个字符渲染。这个是结果，上面的是配置\n    private tmpAtlasPos: Point = new Point();\n    private textureMem: number = 0; \t\t\t// 当前贴图所占用的内存\n    private fontStr: string;\t\t\t\t\t// 因为要去掉italic，所以自己保存一份\n    static simClean: boolean = false;\t\t\t\t// 测试用。强制清理占用低的图集\n\n    constructor() {\n        var bugIOS = false;//是否是有bug的ios版本\n        //在微信下有时候不显示文字，所以采用canvas模式，现在测试微信好像都好了，所以去掉了。\n        var miniadp: any = ILaya.Laya['MiniAdpter']; //头条也继承了这个bug\n        if (miniadp && miniadp.systemInfo && miniadp.systemInfo.system) {\n            bugIOS = miniadp.systemInfo.system.toLowerCase() === 'ios 10.1.1';\n            //12.3\n        }\n        if ((ILaya.Browser.onMiniGame || ILaya.Browser.onTTMiniGame || ILaya.Browser.onBLMiniGame || ILaya.Browser.onAlipayMiniGame || ILaya.Browser.onTBMiniGame) /*&& !Browser.onAndroid*/ && !bugIOS) TextRender.isWan1Wan = true; //android 微信下 字边缘发黑，所以不用getImageData了\n        //TextRender.isWan1Wan = true;\n        this.charRender = new CharRender_Canvas(2048, 2048, TextRender.scaleFontWithCtx, !TextRender.isWan1Wan, false);\n        TextRender.textRenderInst = this;\n        ILaya.Laya['textRender'] = this;\n        TextRender.atlasWidth2 = TextRender.atlasWidth * TextRender.atlasWidth;\n        //TEST\n        //forceSplitRender = true;\n        //noAtlas = true;\n        //forceWholeRender = true;\n        //TEST\n    }\n\n    /**\n     * 设置当前字体，获得字体的大小信息。\n     * @param\tfont\n     */\n    setFont(font: FontInfo): void {\n        if (this.lastFont == font) return;\n        this.lastFont = font;\n        var fontsz = this.getFontSizeInfo(font._family);\n        var offx = fontsz >> 24\n        var offy = (fontsz >> 16) & 0xff;\n        var fw = (fontsz >> 8) & 0xff;\n        var fh = fontsz & 0xff;\n        var k = font._size / TextRender.standardFontSize;\n        this.fontSizeOffX = Math.ceil(offx * k);\n        this.fontSizeOffY = Math.ceil(offy * k);\n        this.fontSizeW = Math.ceil(fw * k);\n        this.fontSizeH = Math.ceil(fh * k);\n        if (font._font.indexOf('italic') >= 0) {// 先判断一下效率会高一些\n            this.fontStr = font._font.replace('italic', '');\n        } else {\n            this.fontStr = font._font;\n        }\n    }\n\n    /**\n     * 从string中取出一个完整的char，例如emoji的话要多个\n     * 会修改 _curStrPos\n     * TODO 由于各种文字中的组合写法，这个需要能扩展，以便支持泰文等\n     * @param\tstr\n     * @param\tstart\t开始位置\n     */\n    getNextChar(str: string): string | null {\n        var len = str.length;\n        var start = this._curStrPos;\n        if (!str.substring) return null;\t// 保护一下，避免下面 substring 报错\n        if (start >= len)\n            return null;\n\n        //var link: boolean = false;\t//如果是连接的话要再加一个完整字符\n        var i = start;\n        var state = 0; //0 初始化 1  正常 2 连续中\n        for (; i < len; i++) {\n            var c = str.charCodeAt(i);\n            if ((c >>> 11) == 0x1b) { //可能是0b110110xx或者0b110111xx。 这都表示2个u16组成一个emoji\n                if (state == 1) break;//新的字符了，要截断\n                state = 1;\t// 其他状态都转成正常读取字符状态，只是一次读两个\n                i++;\t//跨过一个。\n            }\n            else if (c === 0xfe0e || c === 0xfe0f) {\t//样式控制字符\n                // 继续。不改变状态\n            }\n            else if (c == 0x200d) {\t\t//zero width joiner\n                state = 2; \t// 继续\n            } else {\n                if (state == 0) state = 1;\n                else if (state == 1) break;\n                else if (state == 2) {\n                    // 继续\n                }\n            }\n        }\n        this._curStrPos = i;\n        return str.substring(start, i);\n    }\n\n    filltext(ctx: Context, data: string | WordText, x: number, y: number, fontStr: string, color: string, strokeColor: string, lineWidth: number, textAlign: string): void {\n        if (data.length <= 0)\n            return;\n        //以后保存到wordtext中\n        var font = FontInfo.parse(fontStr);\n\n        var nTextAlign = 0;\n        switch (textAlign) {\n            case 'center':\n                nTextAlign = Const.ENUM_TEXTALIGN_CENTER;\n                break;\n            case 'right':\n                nTextAlign = Const.ENUM_TEXTALIGN_RIGHT;\n                break;\n        }\n        this._fast_filltext(ctx, data, x, y, font, color, strokeColor, lineWidth, nTextAlign);\n    }\n\n    _fast_filltext(ctx: Context, data: string | WordText | null, x: number, y: number, font: FontInfo, color: string, strokeColor: string | null, lineWidth: number, textAlign: number): void {\n        if (data && !(data.length >= 1)) return;\t// length有可能是 undefined\n        if (lineWidth < 0) lineWidth = 0;\n        this.setFont(font);\n        this.fontScaleX = this.fontScaleY = 1.0;\n        if (TextRender.scaleFontWithCtx) {\n            let sx = ctx.getMatScaleX();\n            let sy = ctx.getMatScaleY();\n\n\n            if (sx < 1e-4 || sy < 1e-1)\n                return;\n\n            if (sx > 1) this.fontScaleX = Math.min(TextRender.maxFontScale, sx);\n            if (sy > 1) this.fontScaleY = Math.min(TextRender.maxFontScale, sy);\n        }\n\n        font._italic && (ctx._italicDeg = 13);\n        //准备bmp\n        //拷贝到texture上,得到一个gltexture和uv\n        var wt = <WordText>data;\n        var isWT = data instanceof WordText;\n        var str = data && data.toString();//(<string>data);guo 某种情况下，str还是WordText（没找到为啥），这里保护一下\n\n        /**\n         * sameTexData \n         * WordText 中保存了一个数组，这个数组是根据贴图排序的，目的是为了能相同的贴图合并。\n         * 类型是 {ri:CharRenderInfo,stx:int,sty:int,...}[文字个数][贴图分组]\n         */\n        var sameTexData: any[] = isWT ? wt.pageChars : [];\n\n        var strWidth = 0;\n        if (isWT) {\n            str = wt.text;\n            strWidth = wt.width;\n            if (strWidth < 0) {\n                strWidth = wt.width = this.charRender.getWidth(this.fontStr, str);\t// 字符串长度是原始的。\n            }\n        } else {\n            strWidth = str ? this.charRender.getWidth(this.fontStr, str) : 0;\n        }\n\n        //水平对齐方式\n        switch (textAlign) {\n            case Const.ENUM_TEXTALIGN_CENTER:\n                x -= strWidth / 2;\n                break;\n            case Const.ENUM_TEXTALIGN_RIGHT:\n                x -= strWidth;\n                break;\n        }\n\n        //检查保存的数据是否有的已经被释放了\n        if (isWT) {\t// TODO 能利用lastGCCnt么\n            //wt.lastGCCnt = _curPage.gcCnt;\n            if (this.hasFreedText(sameTexData) || wt.pagecharsCtx != ctx) {\n                sameTexData = wt.pageChars = [];\n            }\n            // if(isWT && (this.fontScaleX!=wt.scalex || this.fontScaleY!=wt.scaley)) {\n            // \t// 文字缩放要清理缓存\n            // \tsameTexData = wt.pageChars = [];\n            // }\n        }\n        var ri: CharRenderInfo = null;\n        //var oneTex: boolean = isWT || TextRender.forceWholeRender;\t// 如果能缓存的话，就用一张贴图\n        var splitTex = this.renderPerChar = (!isWT) || TextRender.forceSplitRender || (isWT && wt.splitRender); \t// 拆分字符串渲染，这个优先级高\n        if (!sameTexData || sameTexData.length < 1) {\n            if (isWT) {\n                wt.scalex = this.fontScaleX;\n                wt.scaley = this.fontScaleY;\n            }\n            // 重新构建缓存的贴图信息\n            // TODO 还是要ctx.scale么\n            if (splitTex) {\n                // 如果要拆分字符渲染\n                var stx = 0;\n                var sty = 0;\n\n                this._curStrPos = 0;\n                var curstr: string | null;\n                while (true) {\n                    curstr = this.getNextChar(str);\n                    if (!curstr)\n                        break;\n                    ri = this.getCharRenderInfo(curstr, font, color, strokeColor, lineWidth, false);\n                    if (!ri) {\n                        // 没有分配到。。。\n                        break;\n                    }\n                    if (ri.isSpace) {\t// 空格什么都不做\n                    } else {\n                        //分组保存\n                        var add = sameTexData[ri.tex.id];\n                        if (!add) {\n                            var o1 = { texgen: ((<TextTexture>ri.tex)).genID, tex: ri.tex, words: new Array() };\t// 根据genid来减少是否释放的判断量\n                            sameTexData[ri.tex.id] = o1;\n                            add = o1.words;\n                        } else {\n                            add = add.words;\n                        }\n                        //不能直接修改ri.bmpWidth, 否则会累积缩放，所以把缩放保存到独立的变量中\n                        add.push({ ri: ri, x: stx, y: sty, w: ri.bmpWidth / this.fontScaleX, h: ri.bmpHeight / this.fontScaleY });\n                        stx += ri.width;\t// TODO 缩放\n                    }\n                }\n\n            } else {\n                // 如果要整句话渲染\n                var margin = (font._size / 3 | 0);  // margin保持与charrender_canvas的一致\n                var isotex = TextRender.noAtlas || (strWidth + margin + margin) * this.fontScaleX > TextRender.atlasWidth;\t// 独立贴图还是大图集。需要考虑margin\n                ri = this.getCharRenderInfo(str, font, color, strokeColor, lineWidth, isotex);\n                // 整句渲染，则只有一个贴图\n                sameTexData[0] = { texgen: ((<TextTexture>ri.tex)).genID, tex: ri.tex, words: [{ ri: ri, x: 0, y: 0, w: ri.bmpWidth / this.fontScaleX, h: ri.bmpHeight / this.fontScaleY }] };\n            }\n            isWT && (wt.pagecharsCtx = ctx);\n            //TODO getbmp 考虑margin 字体与标准字体的关系\n        }\n\n        this._drawResortedWords(ctx, x, y, sameTexData);\n        ctx._italicDeg = 0;\n    }\n\n    /**\n     * 画出重新按照贴图顺序分组的文字。\n     * @param\tsamePagesData\n     * @param  startx 保存的数据是相对位置，所以需要加上这个偏移。用相对位置更灵活一些。\n     * @param y {int} 因为这个只能画在一行上所以没有必要保存y。所以这里再把y传进来\n     */\n    protected _drawResortedWords(ctx: Context, startx: number, starty: number, samePagesData: any[]): void {\n        var isLastRender = ctx._charSubmitCache ? ctx._charSubmitCache._enable : false;\n        var mat = ctx._curMat;\n        //var slen = samePagesData.length;\n        //for (var id = 0; id < slen; id++) {\n        for (var id in samePagesData) {// TODO samePagesData可能是个不连续的数组，比如只有一个samePagesData[29999] = dt;\n            // TODO 想个更好的方法\n            var dt = samePagesData[id];\n            if (!dt) continue;\n            var pri: any[] = dt.words;\n            var pisz = pri.length; if (pisz <= 0) continue;\n            var tex = ((<TextTexture>samePagesData[id].tex));\n            for (var j = 0; j < pisz; j++) {\n                var riSaved: any = pri[j];\n                var ri: CharRenderInfo = riSaved.ri;\n                if (ri.isSpace) continue;\n                ri.touch();\n                ctx.drawTexAlign = true;\n                //ctx._drawTextureM(ri.tex.texture as Texture, startx +riSaved.x -ri.orix / fontScaleX , starty + riSaved.y -ri.oriy / fontScaleY , riSaved.w, riSaved.h, null, 1.0, ri.uv);\n\n                let t = tex as TextTexture;\n                ctx._inner_drawTexture(t.texture, t.id,\n                    startx + riSaved.x - ri.orix, starty + riSaved.y - ri.oriy, riSaved.w, riSaved.h,\n                     mat, ri.uv, 1.0, isLastRender, 0xffffffff);\n                \n\n                if ((<any>ctx).touches) {\n                    (<any>ctx).touches.push(ri);\n                }\n            }\n        }\n        //不要影响别人\n        //ctx._curSubmit._key.other = -1;\n    }\n\n    /**\n     * 检查 txts数组中有没有被释放的资源\n     * @param\ttxts {{ri:CharRenderInfo,...}[][]}\n     * @param\tstartid\n     * @return\n     */\n    hasFreedText(txts: any[]): boolean {\n        for (let i in txts) {\n            var pri = txts[i];\n            if (!pri) continue;\n            var tex = (<TextTexture>pri.tex);\n            if (tex.destroyed || tex.genID != pri.texgen) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    getCharRenderInfo(str: string, font: FontInfo, color: string, strokeColor: string | null, lineWidth: number, isoTexture: boolean = false): CharRenderInfo {\n        var fid = this.mapFont[font._family];\n        if (fid == undefined) {\n            this.mapFont[font._family] = fid = this.fontID++;\n        }\n        /*\n        var cid:int = mapColor[color];\n        if (cid == undefined) {\n            mapColor[color] = cid = colorID++;\n        }\n        var scid:int = mapColor[strokeColor];\n        */\n        var key = str + '_' + fid + '_' + font._size + '_' + color;\n        if (lineWidth > 0)\n            key += '_' + strokeColor! + lineWidth;\n        if (font._bold)\n            key += 'P';\n        if (this.fontScaleX != 1 || this.fontScaleY != 1) {\n            key += (this.fontScaleX * 20 | 0) + '_' + (this.fontScaleY * 20 | 0);\t// 这个精度可以控制占用资源的大小，精度越高越能细分缩放。\n        }\n\n        var i = 0;\n        // 遍历所有的大图集看是否存在\n        var sz = this.textAtlases.length;\n        var ri: CharRenderInfo;\n        var atlas: TextAtlas;\n        if (!isoTexture) {\n            for (i = 0; i < sz; i++) {\n                atlas = this.textAtlases[i];\n                ri = atlas.charMaps[key]\n                if (ri) {\n                    ri.touch();\n                    return ri;\n                }\n            }\n        }\n        // 没有找到，要创建一个\n        ri = new CharRenderInfo();\n        this.charRender.scale(this.fontScaleX, this.fontScaleY);\n        ri.char = str;\n        ri.height = font._size;\n        var margin = (font._size / 3 | 0);\t// 凑的。 注意这里不能乘以缩放，因为ctx会自动处理\n        // 如果不存在，就要插入已有的，或者创建新的\n        var imgdt: ImageData | null = null;\n        // 先大约测量文字宽度 \n\n        if (!lineWidth) {\n            lineWidth = 0;\n        }\n        var w1 = Math.ceil((this.charRender.getWidth(this.fontStr, str) + 2 * lineWidth) * this.fontScaleX);\n        if (w1 > this.charRender.canvasWidth) {\n            this.charRender.canvasWidth = Math.min(2048, w1 + margin * 2);\n        }\n        if (isoTexture) {\n            // 独立贴图\n            this.charRender.fontsz = font._size;\n            imgdt = this.charRender.getCharBmp(str, this.fontStr, lineWidth, color, strokeColor, ri, margin, margin, margin, margin, null);\n            // 这里可以直接\n            if (imgdt) {\n                var tex = TextTexture.getTextTexture(imgdt.width, imgdt.height);\n                tex.addChar(imgdt, 0, 0, ri.uv);\n                ri.tex = tex;\n                ri.orix = margin; // 这里是原始的，不需要乘scale,因为scale的会创建一个scale之前的rect\n                ri.oriy = margin;\n                tex.ri = ri;\n                this.isoTextures.push(tex);\n            }\n        } else {\n            // 大图集\n            var len = str.length;\n            if (len > 1) {\n                // emoji或者组合的\n            }\n            var lineExt = lineWidth * 1;\t// 这里，包括下面的*2 都尽量用整数。否则在取整以后可能有有偏移。\n            var fw = Math.ceil((this.fontSizeW + lineExt * 2) * this.fontScaleX); \t//本来只要 lineWidth就行，但是这样安全一些\n            var fh = Math.ceil((this.fontSizeH + lineExt * 2) * this.fontScaleY);\n            TextRender.imgdtRect[0] = ((margin - this.fontSizeOffX - lineExt) * this.fontScaleX) | 0;\t// 本来要 lineWidth/2 但是这样一些尖角会有问题，所以大一点\n            TextRender.imgdtRect[1] = ((margin - this.fontSizeOffY - lineExt) * this.fontScaleY) | 0;\n            if (this.renderPerChar || len == 1) {\n                // 单个字符的处理\n                TextRender.imgdtRect[2] = Math.max(w1, fw);\n                TextRender.imgdtRect[3] = Math.max(w1, fh);\t// 高度也要取大的。 例如emoji\n            } else {\n                // 多个字符的处理\n                TextRender.imgdtRect[2] = -1;\t// -1 表示宽度要测量\n                TextRender.imgdtRect[3] = fh; \t// TODO 如果被裁剪了，可以考虑把这个加大一点点\n            }\n            this.charRender.fontsz = font._size;\n            imgdt = this.charRender.getCharBmp(str, this.fontStr, lineWidth, color, strokeColor, ri,\n                margin, margin, margin, margin, TextRender.imgdtRect);\n            if (imgdt) {\n                atlas = this.addBmpData(imgdt, ri);\n                if (TextRender.isWan1Wan) {\n                    // 这时候 imgdtRect 是不好使的，要自己设置\n                    ri.orix = margin;\t// 不要乘缩放。要不后面也要除。\n                    ri.oriy = margin;\n                } else {\n                    // 取下来的imagedata的原点在哪\n                    ri.orix = (this.fontSizeOffX + lineExt);\t// 由于是相对于imagedata的，上面会根据包边调整左上角，所以原点也要相应反向调整\n                    ri.oriy = (this.fontSizeOffY + lineExt);\n                }\n                atlas.charMaps[key] = ri;\n            }\n        }\n        return ri;\n    }\n\n    /**\n     * 添加数据到大图集\n     * @param\tw\n     * @param\th\n     * @return\n     */\n    addBmpData(data: ImageData, ri: CharRenderInfo): TextAtlas {\n        var w = data.width;\n        var h = data.height;\n        var sz = this.textAtlases.length;\n        var atlas: TextAtlas;\n        var find = false;\n        for (var i = 0; i < sz; i++) {\n            atlas = this.textAtlases[i];\n            find = atlas.getAEmpty(w, h, this.tmpAtlasPos);\n            if (find) {\n                break;\n            }\n        }\n        if (!find) {\n            // 创建一个新的\n            atlas = new TextAtlas()\n            this.textAtlases.push(atlas);\n            find = atlas.getAEmpty(w, h, this.tmpAtlasPos);\n            if (!find) {\n                throw 'err1'; //TODO\n            }\n            // 清理旧的\n            this.cleanAtlases();\n        }\n        if (find) {\n            atlas.texture.addChar(data, this.tmpAtlasPos.x, this.tmpAtlasPos.y, ri.uv);\n            ri.tex = atlas.texture;\n        }\n        return atlas;\n    }\n\n    /**\n     * 清理利用率低的大图集\n     */\n    GC(): void {\n        var i = 0;\n        var sz = this.textAtlases.length;\n        var dt = 0;\n        var destroyDt = TextRender.destroyAtlasDt;\n        var totalUsedRate = 0;\t// 总使用率\n        var totalUsedRateAtlas = 0;\n        var curloop = RenderInfo.loopCount;\n\n        //var minUsedRateID:int = -1;\n        //var minUsedRate:Number = 1;\n        var maxWasteRateID = -1;\n        var maxWasteRate = 0;\n        var tex: TextTexture = null;\n        var curatlas: TextAtlas = null;\n        // 图集的清理\n        for (; i < sz; i++) {\n            curatlas = this.textAtlases[i];\n            tex = curatlas.texture;\n            if (tex) {\n                totalUsedRate += tex.curUsedCovRate;\n                totalUsedRateAtlas += tex.curUsedCovRateAtlas;\n                // 浪费掉的图集\n                // (已经占用的图集和当前使用的图集的差。图集不可局部重用，所以有占用的和使用的的区别)\n                var waste = curatlas.usedRate - tex.curUsedCovRateAtlas;\n                // 记录哪个图集浪费的最多\n                if (maxWasteRate < waste) {\n                    maxWasteRate = waste;\n                    maxWasteRateID = i;\n                }\n                /*\n                if (minUsedRate > tex.curUsedCovRate) {\n                    minUsedRate = tex.curUsedCovRate;\n                    minUsedRateID = i;\n                }\n                */\n            }\n            // 如果当前贴图的touch时间超出了指定的间隔（单位是帧，例如），则设置回收\n            // 可能同时会有多个图集被回收\n            dt = curloop - curatlas.texture.lastTouchTm;\n            if (dt > destroyDt) {\n                TextRender.showLog && console.log('TextRender GC delete atlas ' + tex ? curatlas.texture.id : 'unk');\n                curatlas.destroy();\n                this.textAtlases[i] = this.textAtlases[sz - 1];\t// 把最后的拿过来冲掉\n                sz--;\n                i--;\n                maxWasteRateID = -1;\n            }\n        }\n        // 缩减图集数组的长度\n        this.textAtlases.length = sz;\n\n        // 独立贴图的清理 TODO 如果多的话，要不要分开处理\n        sz = this.isoTextures.length;\n        for (i = 0; i < sz; i++) {\n            tex = this.isoTextures[i];\n            dt = curloop - tex.lastTouchTm;\n            if (dt > TextRender.destroyUnusedTextureDt) {\n                tex.ri.deleted = true;\n                tex.ri.tex = null;\n                // 直接删除，不回收\n                tex.destroy();\n                this.isoTextures[i] = this.isoTextures[sz - 1];\n                sz--;\n                i--;\n            }\n        }\n        this.isoTextures.length = sz;\n\n        // 如果超出内存需要清理不常用\n        var needGC = this.textAtlases.length > 1 && this.textAtlases.length - totalUsedRateAtlas >= 2;\t// 总量浪费了超过2张\n        if (TextRender.atlasWidth * TextRender.atlasWidth * 4 * this.textAtlases.length > TextRender.cleanMem || needGC || TextRender.simClean) {\n            TextRender.simClean = false;\n            TextRender.showLog && console.log('清理使用率低的贴图。总使用率:', totalUsedRateAtlas, ':', this.textAtlases.length, '最差贴图:' + maxWasteRateID);\n            if (maxWasteRateID >= 0) {\n                curatlas = this.textAtlases[maxWasteRateID];\n                curatlas.destroy();\n                this.textAtlases[maxWasteRateID] = this.textAtlases[this.textAtlases.length - 1];\n                this.textAtlases.length = this.textAtlases.length - 1;\n            }\n        }\n\n        TextTexture.clean();\n    }\n\n    /**\n     * 尝试清理大图集\n     */\n    cleanAtlases(): void {\n        // TODO 根据覆盖率决定是否清理\n    }\n\n    getCharBmp(c: string): any {\n\n    }\n\n    /**\n     * 检查当前线是否存在数据\n     * @param\tdata\n     * @param\tl\n     * @param\tsx\n     * @param\tex\n     * @return\n     */\n    private checkBmpLine(data: ImageData, l: number, sx: number, ex: number): boolean {\n        if (this.bmpData32.buffer != data.data.buffer) {\n            this.bmpData32 = new Uint32Array(data.data.buffer);\n        }\n        var stpos = data.width * l + sx;\n        for (var x = sx; x < ex; x++) {\n            if (this.bmpData32[stpos++] != 0) return true;\n        }\n        return false;\n    }\n\n    /**\n     * 根据bmp数据和当前的包围盒，更新包围盒\n     * 由于选择的文字是连续的，所以可以用二分法\n     * @param\tdata\n     * @param\tcurbbx \t[l,t,r,b]\n     * @param   onlyH 不检查左右\n     */\n    private updateBbx(data: ImageData, curbbx: number[], onlyH: boolean = false): void {\n        var w = data.width;\n        var h = data.height;\n        var x = 0;\n        // top\n        var sy = curbbx[1];\t//从t到0 sy表示有数据的行\n        var ey = 0;\n        var y = sy;\n        if (this.checkBmpLine(data, sy, 0, w)) {\n            // 如果当前行有数据，就要往上找\n            while (true) {\n                y = (sy + ey) / 2 | 0;\t// 必须是int\n                if (y + 1 >= sy) {// \n                    // 找到了。严格来说还不知道这个是否有像素，不过这里要求不严格，可以认为有\n                    curbbx[1] = y;\n                    break;\n                }\n                if (this.checkBmpLine(data, y, 0, w)) {\n                    //中间线有数据，搜索上半部分\n                    sy = y;\n                } else {\n                    //中间线没有有数据，搜索下半部分\n                    ey = y;\n                }\n            }\n        }\n        // 下半部分\n        if (curbbx[3] > h) curbbx[3] = h;\n        else {\n            y = sy = curbbx[3];\n            ey = h;\n            if (this.checkBmpLine(data, sy, 0, w)) {\n                while (true) {\n                    y = (sy + ey) / 2 | 0;\n                    if (y - 1 <= sy) {\n                        curbbx[3] = y;\n                        break;\n                    }\n                    if (this.checkBmpLine(data, y, 0, w)) {\n                        sy = y;\n                    } else {\n                        ey = y;\n                    }\n                }\n            }\n        }\n\n        if (onlyH)\n            return;\n\n        // 左半部分\n        var minx = curbbx[0];\n        var stpos = w * curbbx[1]; //w*cy+0\n        for (y = curbbx[1]; y < curbbx[3]; y++) {\n            for (x = 0; x < minx; x++) {\n                if (this.bmpData32[stpos + x] != 0) {\n                    minx = x;\n                    break;\n                }\n            }\n            stpos += w;\n        }\n        curbbx[0] = minx;\n        // 右半部分\n        var maxx = curbbx[2];\n        stpos = w * curbbx[1]; //w*cy\n        for (y = curbbx[1]; y < curbbx[3]; y++) {\n            for (x = maxx; x < w; x++) {\n                if (this.bmpData32[stpos + x] != 0) {\n                    maxx = x;\n                    break;\n                }\n            }\n            stpos += w;\n        }\n        curbbx[2] = maxx;\n    }\n\n    getFontSizeInfo(font: string): number {\n        var finfo: any = this.fontSizeInfo[font];\n        if (finfo != undefined)\n            return finfo;\n\n        var fontstr: string = 'bold ' + TextRender.standardFontSize + 'px ' + font;\n        if (TextRender.isWan1Wan) {\n            // 这时候无法获得imagedata，只能采取保险测量\n            this.fontSizeW = this.charRender.getWidth(fontstr, '有') * 1.5;\n            this.fontSizeH = TextRender.standardFontSize * 1.5;\n            var szinfo: number = this.fontSizeW << 8 | this.fontSizeH;\n            this.fontSizeInfo[font] = szinfo;\n            return szinfo;\n        }\n        // bbx初始大小\n        TextRender.pixelBBX[0] = TextRender.standardFontSize / 2;// 16;\n        TextRender.pixelBBX[1] = TextRender.standardFontSize / 2;// 16;\n        TextRender.pixelBBX[2] = TextRender.standardFontSize;// 32;\n        TextRender.pixelBBX[3] = TextRender.standardFontSize;// 32;\n\n        var orix: number = 16;\t\t// 左边留白，也就是x原点的位置\n        var oriy: number = 16;\n        var marginr: number = 16;\n        var marginb: number = 16;\n        this.charRender.scale(1, 1);\n        TextRender.tmpRI.height = TextRender.standardFontSize;\n        this.charRender.fontsz = TextRender.standardFontSize;\n        var bmpdt = this.charRender.getCharBmp('g', fontstr, 0, 'red', null, TextRender.tmpRI, orix, oriy, marginr, marginb);\n        this.bmpData32 = new Uint32Array(bmpdt.data.buffer);\n        //测量宽度是 tmpRI.width\n        this.updateBbx(bmpdt, TextRender.pixelBBX, false);\n        bmpdt = this.charRender.getCharBmp('有', fontstr, 0, 'red', null, TextRender.tmpRI, oriy, oriy, marginr, marginb);// '有'比'国'大\n        this.bmpData32 = new Uint32Array(bmpdt.data.buffer);\n        // 国字的宽度就用系统测量的，不再用像素检测\n        if (TextRender.pixelBBX[2] < orix + TextRender.tmpRI.width)\n            TextRender.pixelBBX[2] = orix + TextRender.tmpRI.width;\n        this.updateBbx(bmpdt, TextRender.pixelBBX, false);//TODO 改成 true\n        // 原点在 16,16\n        var xoff = Math.max(orix - TextRender.pixelBBX[0], 0);\n        var yoff = Math.max(oriy - TextRender.pixelBBX[1], 0);\n        var bbxw = TextRender.pixelBBX[2] - TextRender.pixelBBX[0];\n        var bbxh = TextRender.pixelBBX[3] - TextRender.pixelBBX[1];\n        var sizeinfo = xoff << 24 | yoff << 16 | bbxw << 8 | bbxh;\n        this.fontSizeInfo[font] = sizeinfo;\n        return sizeinfo;\n    }\n\n    printDbgInfo(): void {\n        console.log('图集个数:' + this.textAtlases.length + ',每个图集大小:' + TextRender.atlasWidth + 'x' + TextRender.atlasWidth, ' 用canvas:', TextRender.isWan1Wan);\n        console.log('图集占用空间:' + (TextRender.atlasWidth * TextRender.atlasWidth * 4 / 1024 / 1024 * this.textAtlases.length) + 'M');\n        console.log('缓存用到的字体:');\n        for (var f in this.mapFont) {\n            var fontsz = this.getFontSizeInfo(f);\n            var offx = fontsz >> 24\n            var offy = (fontsz >> 16) & 0xff;\n            var fw = (fontsz >> 8) & 0xff;\n            var fh = fontsz & 0xff;\n            console.log('    ' + f, ' off:', offx, offy, ' size:', fw, fh);\n        }\n        var num = 0;\n        console.log('缓存数据:');\n        var totalUsedRate = 0;\t// 总使用率\n        var totalUsedRateAtlas = 0;\n        this.textAtlases.forEach(function (a: TextAtlas): void {\n            var id = a.texture.id;\n            var dt = RenderInfo.loopCount - a.texture.lastTouchTm\n            var dtstr = dt > 0 ? ('' + dt + '帧以前') : '当前帧';\n            totalUsedRate += a.texture.curUsedCovRate;\n            totalUsedRateAtlas += a.texture.curUsedCovRateAtlas;\n            console.log('--图集(id:' + id + ',当前使用率:' + (a.texture.curUsedCovRate * 1000 | 0) + '‰', '当前图集使用率:', (a.texture.curUsedCovRateAtlas * 100 | 0) + '%', '图集使用率:', (a.usedRate * 100 | 0), '%, 使用于:' + dtstr + ')--:');\n            for (var k in a.charMaps) {\n                var ri: CharRenderInfo = a.charMaps[k];\n                console.log('     off:', ri.orix, ri.oriy, ' bmp宽高:', ri.bmpWidth, ri.bmpHeight, '无效:', ri.deleted, 'touchdt:', (RenderInfo.loopCount - ri.touchTick), '位置:', ri.uv[0] * TextRender.atlasWidth | 0, ri.uv[1] * TextRender.atlasWidth | 0,\n                    '字符:', ri.char, 'key:', k);\n                num++;\n            }\n        });\n        console.log('独立贴图文字(' + this.isoTextures.length + '个):');\n        this.isoTextures.forEach(function (tex: TextTexture): void {\n            console.log('    size:', tex._texW, tex._texH, 'touch间隔:', (RenderInfo.loopCount - tex.lastTouchTm), 'char:', tex.ri.char);\n        });\n        console.log('总缓存:', num, '总使用率:', totalUsedRate, '总当前图集使用率:', totalUsedRateAtlas);\n\n    }\n\n    // 在屏幕上显示某个大图集\n    showAtlas(n: number, bgcolor: string, x: number, y: number, w: number, h: number): Sprite {\n        if (!this.textAtlases[n]) {\n            console.log('没有这个图集');\n            return null;\n        }\n        var sp = new Sprite();\n        var texttex = this.textAtlases[n].texture;\n        var texture: any = {\n            width: TextRender.atlasWidth,\n            height: TextRender.atlasWidth,\n            sourceWidth: TextRender.atlasWidth,\n            sourceHeight: TextRender.atlasWidth,\n            offsetX: 0,\n            offsetY: 0,\n            getIsReady: function (): boolean { return true; },\n            _addReference: function (): void { },\n            _removeReference: function (): void { },\n            _getSource: function (): any { return texttex._getSource(); },\n            bitmap: { id: texttex.id },\n            _uv: Texture.DEF_UV\n        };\n        ((<any>sp)).size = function (w: number, h: number): Sprite {\n            this.width = w;\n            this.height = h;\n            sp.graphics.clear();\n            sp.graphics.drawRect(0, 0, sp.width, sp.height, bgcolor);\n            sp.graphics.drawTexture((<Texture>texture), 0, 0, sp.width, sp.height);\n            return (<Sprite>this);\n        }\n        sp.graphics.drawRect(0, 0, w, h, bgcolor);\n        sp.graphics.drawTexture((<Texture>texture), 0, 0, w, h);\n        sp.pos(x, y);\n        ILaya.stage.addChild(sp);\n        return sp;\n    }\n\n    /////// native ///////\n    filltext_native(ctx: Context, data: string | WordText, x: number, y: number, fontStr: string, color: string, strokeColor: string, lineWidth: number, textAlign: string): void {\n        if (data && data.length <= 0) return;\n\n        var font = FontInfo.parse(fontStr);\n\n        var nTextAlign = 0;\n        switch (textAlign) {\n            case 'center':\n                nTextAlign = Const.ENUM_TEXTALIGN_CENTER;\n                break;\n            case 'right':\n                nTextAlign = Const.ENUM_TEXTALIGN_RIGHT;\n                break;\n        }\n        return this._fast_filltext(ctx, data, x, y, font, color, strokeColor, lineWidth, nTextAlign);\n    }\n}\n","import { AtlasGrid } from \"./AtlasGrid\";\nimport { TextTexture } from \"./TextTexture\";\nimport { Point } from \"../../maths/Point\"\nimport { CharRenderInfo } from \"./CharRenderInfo\"\nimport { TextRender } from \"./TextRender\";\n\n/**\n *  文字贴图的大图集。\n */\nexport class TextAtlas {\n    texWidth: number = 1024;\n    texHeight: number = 1024;\n    private atlasgrid: AtlasGrid;\n    //private protectDist: number = 1;\n    texture: TextTexture|null = null;\n    charMaps: any = {};\t\t// 保存文字信息的字典\n    static atlasGridW: number = 16;\n\n    constructor() {\n        this.texHeight = this.texWidth = TextRender.atlasWidth;\n        this.texture = TextTexture.getTextTexture(this.texWidth, this.texHeight);\n        if (this.texWidth / TextAtlas.atlasGridW > 256) {\n            TextAtlas.atlasGridW = Math.ceil(this.texWidth / 256);\n        }\n        this.atlasgrid = new AtlasGrid(this.texWidth / TextAtlas.atlasGridW, this.texHeight / TextAtlas.atlasGridW, this.texture.id);\n    }\n\n    setProtecteDist(d: number): void {\n        //this.protectDist = d;\n    }\n\n    /**\n     * 如果返回null，则表示无法加入了\n     * 分配的时候优先选择最接近自己高度的节点\n     * @param\tw\n     * @param\th\n     * @return\n     */\n    getAEmpty(w: number, h: number, pt: Point): boolean {\n        var find: boolean = this.atlasgrid.addRect(1, Math.ceil(w / TextAtlas.atlasGridW), Math.ceil(h / TextAtlas.atlasGridW), pt);\n        if (find) {\n            pt.x *= TextAtlas.atlasGridW;\n            pt.y *= TextAtlas.atlasGridW;\n        }\n        return find;\n    }\n\n    /**\n     * 大图集格子单元的占用率，老的也算上了。只是表示这个大图集还能插入多少东西。\n     */\n    get usedRate(): number {\n        return this.atlasgrid._used;\n    }\n    //data 也可能是canvas\n    /*\n    public function pushData(data:ImageData, node:TextAtlasNode):void {\n        texture.addChar(data, node.x, node.y);\n    }\n    */\n\n    destroy(): void {\n        for (var k in this.charMaps) {\n            var ri: CharRenderInfo = this.charMaps[k];\n            ri.deleted = true;\n        }\n        this.texture.discard();\n    }\n\n    printDebugInfo(): void {\n\n    }\n}\n\n","import { RenderInfo } from \"../../renders/RenderInfo\"\nimport { Resource } from \"../../resource/Resource\"\nimport { CharRenderInfo } from \"./CharRenderInfo\"\nimport { ILaya } from \"../../../ILaya\";\nimport { IRender2DContext } from \"../../RenderEngine/RenderInterface/IRender2DContext\"\nimport { Texture2D } from \"../../resource/Texture2D\";\nimport { TextureFormat } from \"../../RenderEngine/RenderEnum/TextureFormat\";\nimport { FilterMode } from \"../../RenderEngine/RenderEnum/FilterMode\";\nimport { WrapMode } from \"../../RenderEngine/RenderEnum/WrapMode\";\nimport { TextAtlas } from \"./TextAtlas\";\nimport { LayaEnv } from \"../../../LayaEnv\";\nimport { TextRender } from \"./TextRender\";\nimport { LayaGL } from \"../../layagl/LayaGL\";\n\nexport class TextTexture extends Resource {\n    private static pool: any[] = new Array(10); // 回收用\n    private static poolLen: number = 0;\n    private static cleanTm: number = 0;\n    private _render2DContext: IRender2DContext;\n\n    /**@internal */\n    _source: Texture2D;\t// webgl 贴图\n    /**@internal */\n    _texW: number = 0;\n    /**@internal */\n    _texH: number = 0;\n    /**@internal */\n    _discardTm: number = 0;\t\t\t//释放的时间。超过一定时间会被真正删除\n    genID: number = 0; \t\t\t\t// 这个对象会重新利用，为了能让引用他的人知道自己引用的是否有效，加个id\n    bitmap: any = { id: 0, _glTexture: null };\t\t\t\t\t\t//samekey的判断用的\n    curUsedCovRate: number = 0; \t// 当前使用到的使用率。根据面积算的\n    curUsedCovRateAtlas: number = 0; \t// 大图集中的占用率。由于大图集分辨率低，所以会浪费一些空间\n    lastTouchTm: number = 0;\n    ri: CharRenderInfo = null; \t\t// 如果是独立文字贴图的话带有这个信息\n    //public var isIso:Boolean = false;\n    get gammaCorrection(): number {\n        return (this.bitmap._glTexture as any).gammaCorrection;\n    }\n    constructor(textureW: number, textureH: number) {\n        super();\n        this._texW = textureW || TextRender.atlasWidth;\n        this._texH = textureH || TextRender.atlasWidth;\n        this.bitmap.id = this.id;\n        this.lock = true;//防止被资源管理清除\n        this._render2DContext = LayaGL.render2DContext;\n    }\n\n    recreateResource(): void {\n        if (this._source)\n            return;\n        var glTex: Texture2D = this._source = new Texture2D(this._texW, this._texH, TextureFormat.R8G8B8A8, false, false, true, true);\n        glTex.setPixelsData(null, true, false);\n        glTex.lock = true;\n        this.bitmap._glTexture = glTex;\n\n        this._source.filterMode = FilterMode.Bilinear;\n        this._source.wrapModeU = WrapMode.Clamp;\n        this._source.wrapModeV = WrapMode.Clamp;\n\n        //TODO 预乘alpha\n        if (TextRender.debugUV) {\n            this.fillWhite();\n        }\n    }\n\n    /**\n     * \n     * @param\tdata\n     * @param\tx\t\t\t拷贝位置。\n     * @param\ty\n     * @param  uv  \n     * @return uv数组  如果uv不为空就返回传入的uv，否则new一个数组\n     */\n    addChar(data: ImageData, x: number, y: number, uv: any[] = null): any[] {\n        //if (!LayaEnv.isConch &&  !__JS__('(data instanceof ImageData)')) {\n        if (TextRender.isWan1Wan) {\n            return this.addCharCanvas(data, x, y, uv);\n        }\n        var dt: any = data.data;\n        if (data.data instanceof Uint8ClampedArray)\n            dt = new Uint8Array(dt.buffer);\n        !this._source && this.recreateResource();\n\n        LayaGL.textureContext.setTextureSubPixelsData(this._source._texture, dt, 0, false, x, y, data.width, data.height, true, false);\n        var u0: number;\n        var v0: number;\n        var u1: number;\n        var v1: number;\n        u0 = x / this._texW;\n        v0 = y / this._texH;\n        u1 = (x + data.width) / this._texW;\n        v1 = (y + data.height) / this._texH;\n        uv = uv || new Array(8);\n        uv[0] = u0, uv[1] = v0;\n        uv[2] = u1, uv[3] = v0;\n        uv[4] = u1, uv[5] = v1;\n        uv[6] = u0, uv[7] = v1;\n        return uv;\n    }\n\n    /**\n     * 玩一玩不支持 getImageData\n     * @param\tcanv\n     * @param\tx\n     * @param\ty\n     */\n    addCharCanvas(canv: any, x: number, y: number, uv: any[] = null): any[] {\n        !this._source && this.recreateResource();\n\n        LayaGL.textureContext.setTextureSubImageData(this._source._texture, canv, x, y, true, false);\n        var u0: number;\n        var v0: number;\n        var u1: number;\n        var v1: number;\n        if (LayaEnv.isConch) {\n            u0 = x / this._texW;\t\t// +1 表示内缩一下，反正文字总是有留白。否则会受到旁边的一个像素的影响\n            v0 = y / this._texH;\n            u1 = (x + canv.width) / this._texW;\n            v1 = (y + canv.height) / this._texH;\n        } else {\n            u0 = (x + 1) / this._texW;\t\t// +1 表示内缩一下，反正文字总是有留白。否则会受到旁边的一个像素的影响\n            v0 = (y + 1) / this._texH;\n            u1 = (x + canv.width - 1) / this._texW;\n            v1 = (y + canv.height - 1) / this._texH;\n        }\n        uv = uv || new Array(8);\n        uv[0] = u0, uv[1] = v0;\n        uv[2] = u1, uv[3] = v0;\n        uv[4] = u1, uv[5] = v1;\n        uv[6] = u0, uv[7] = v1;\n        return uv;\n    }\n\n    /**\n     * 填充白色。调试用。\n     */\n    fillWhite(): void {\n        !this._source && this.recreateResource();\n        var dt: Uint8Array = new Uint8Array(this._texW * this._texH * 4);\n        ((<any>dt)).fill(0xff);\n        LayaGL.textureContext.setTextureImageData(this._source._getSource(), dt as any, true, false);\n    }\n\n    discard(): void {\n        // 文字贴图的释放要触发全局cacheas normal无效\n        ILaya.stage.setGlobalRepaint();\n        // 不再使用问题贴图的重用，否则会有内容清理问题\n        this.destroy();\n        return;\n    }\n\n    static getTextTexture(w: number, h: number): TextTexture {\n        // 不再回收\n        return new TextTexture(w, h);\n    }\n    /**\n     * @override\n     */\n    protected _disposeResource(): void {\n        //console.log('destroy TextTexture');\n        this._source && this._source.destroy();\n        this._source = null;\n    }\n\n    /**\n     * 定期清理\n     * 为了简单，只有发生 getAPage 或者 discardPage的时候才检测是否需要清理\n     */\n    static clean(): void {\n        var curtm: number = RenderInfo.loopStTm;// Laya.stage.getFrameTm();\n        if (TextTexture.cleanTm === 0) TextTexture.cleanTm = curtm;\n        if (curtm - TextTexture.cleanTm >= TextRender.checkCleanTextureDt) {\t//每10秒看看pool中的贴图有没有很老的可以删除的\n            for (var i: number = 0; i < TextTexture.poolLen; i++) {\n                var p: TextTexture = TextTexture.pool[i];\n                if (curtm - p._discardTm >= TextRender.destroyUnusedTextureDt) {//超过20秒没用的删掉\n                    p.destroy();\t\t\t\t\t//真正删除贴图\n                    TextTexture.pool[i] = TextTexture.pool[TextTexture.poolLen - 1];\n                    TextTexture.poolLen--;\n                    i--;\t//这个还要处理，用来抵消i++\n                }\n            }\n            TextTexture.cleanTm = curtm;\n        }\n    }\n\n    touchRect(ri: CharRenderInfo, curloop: number): void {\n        if (this.lastTouchTm != curloop) {\n            this.curUsedCovRate = 0;\n            this.curUsedCovRateAtlas = 0;\n            this.lastTouchTm = curloop;\n        }\n        var texw2: number = TextRender.atlasWidth * TextRender.atlasWidth;\n        var gridw2: number = TextAtlas.atlasGridW * TextAtlas.atlasGridW;\n        this.curUsedCovRate += (ri.bmpWidth * ri.bmpHeight) / texw2;\n        this.curUsedCovRateAtlas += (Math.ceil(ri.bmpWidth / TextAtlas.atlasGridW) * Math.ceil(ri.bmpHeight / TextAtlas.atlasGridW)) / (texw2 / gridw2);\n    }\n\n    // 为了与当前的文字渲染兼容的补丁\n    get texture(): any {\n        return this;\n    }\n    /**@internal */\n    _getSource(): any {\n        return this._source._getSource();\n    }\n\n    // for debug\n    drawOnScreen(x: number, y: number): void {\n\n    }\n}\n","/**\n\t * ...\n\t * @author xie\n\t */\nexport class SubmitKey {\n    blendShader: number;\n    submitType: number;\n    other: number;\n\n    constructor() {\n        this.clear();\n    }\n\n    clear(): void {\n        this.submitType = -1;\n        this.blendShader = this.other = 0;\n        //alpha = 1;\n    }\n\n    //TODO:coverage\n    copyFrom(src: SubmitKey): void {\n        this.other = src.other;\n        this.blendShader = src.blendShader;\n        this.submitType = src.submitType;\n        //alpha = src.alpha;\n    }\n\n    copyFrom2(src: SubmitKey, submitType: number, other: number): void {\n        //this.blendShader = src.blendShader;\n        //this.alpha = src.alpha;\t\t\t\n        this.other = other;\n        this.submitType = submitType;\n    }\n\n    //�Ƚ�3�����ⲿ�ṩ2��\n    //TODO:coverage\n    equal3_2(next: SubmitKey, submitType: number, other: number): boolean {\n        return this.submitType === submitType && this.other === other && this.blendShader === next.blendShader;// && this.alpha === alpha;\n    }\n\n    //ȫ�Ƚϡ��ⲿ�ṩ2��\n    //TODO:coverage\n    equal4_2(next: SubmitKey, submitType: number, other: number): boolean {\n        return this.submitType === submitType && this.other === other && this.blendShader === next.blendShader;// && alpha === next.alpha;\n    }\n\n    //�Ƚ�3��\n    //TODO:coverage\n    equal_3(next: SubmitKey): boolean {\n        return this.submitType === next.submitType && this.blendShader === next.blendShader;// && alpha === next.alpha;\n    }\n    //ȫ�Ƚϡ�4��\n    //TODO:coverage\n    equal(next: SubmitKey): boolean {\n        return this.other === next.other && this.submitType === next.submitType && this.blendShader === next.blendShader;// && alpha === next.alpha;\n    }\n\n}\n\n\n","import { ISubmit } from \"./ISubmit\";\nimport { SubmitKey } from \"./SubmitKey\";\nexport class SubmitCMD implements ISubmit {\n    static POOL: SubmitCMD[] = []; fun: Function;\n    /**@internal */\n    _this: any;\n    args: any[];\n    /**@internal */\n    _ref: number = 1;\n    /**@internal */\n    _key: SubmitKey = new SubmitKey();\n\n    constructor() {\n    }\n\n    renderSubmit(): number {\n        this.fun.apply(this._this, this.args);\n        return 1;\n    }\n\n    getRenderType(): number {\n        return 0;\n    }\n\n    releaseRender(): void {\n        if ((--this._ref) < 1) {\n            var pool: any = SubmitCMD.POOL;\n            pool[pool._length++] = this;\n            this.args = null;\n            this.fun = null;\n            this._this = null;\n        }\n    }\n\n    static create(args: any[], fun: Function, thisobj: any): SubmitCMD {\n        var o: SubmitCMD = (SubmitCMD.POOL as any)._length ? SubmitCMD.POOL[--(SubmitCMD.POOL as any)._length] : new SubmitCMD();\n        o.fun = fun;\n        o.args = args;\n        o._this = thisobj;\n        o._ref = 1;\n        o._key.clear();\n        return o;\n    }\n}\n{ (SubmitCMD.POOL as any)._length = 0 }\n\n\n","import { IFilter } from \"./IFilter\";\nimport { Sprite } from \"../display/Sprite\"\nimport { Matrix } from \"../maths/Matrix\"\nimport { Point } from \"../maths/Point\"\nimport { Rectangle } from \"../maths/Rectangle\"\nimport { RenderSprite } from \"../renders/RenderSprite\"\nimport { Context } from \"../resource/Context\"\nimport { RenderTexture2D } from \"../resource/RenderTexture2D\"\nimport { Texture2D } from \"../resource/Texture2D\"\nimport { WebGLRTMgr } from \"../resource/WebGLRTMgr\"\nimport { BlendMode } from \"../webgl/canvas/BlendMode\"\nimport { RenderSpriteData, Value2D } from \"../webgl/shader/d2/value/Value2D\"\nimport { SubmitCMD } from \"../webgl/submit/SubmitCMD\"\nimport { ColorFilter } from \"./ColorFilter\";\n\n/**\n * <code>Filter</code> 是滤镜基类。\n */\nexport class Filter implements IFilter {\n    /**@private 模糊滤镜。*/\n    static BLUR: number = 0x10;\n    /**@private 颜色滤镜。*/\n    static COLOR: number = 0x20;\n    /**@private 发光滤镜。*/\n    static GLOW: number = 0x08;\n    /** @internal*/\n    _glRender: any;\n\n    /**\n     * 创建一个 <code>Filter</code> 实例。\n     * */\n    constructor() { }\n\n    /**@private 滤镜类型。*/\n    get type(): number { return -1 }\n\n    static _filter = function (this: RenderSprite, sprite: Sprite, context: Context, x: number, y: number): void {\n        var webglctx: Context = context;\n        var next: any = ((<RenderSprite>this))._next;\n        if (next) {\n            var filters: any[] = sprite.filters, len: number = filters.length;\n            //如果只有一个滤镜，那么还用原来的方式\n            if (len == 1 && (filters[0].type == Filter.COLOR)) {\n                context.save();\n                context.setColorFilter(filters[0]);\n                next._fun.call(next, sprite, context, x, y);\n                context.restore();\n                return;\n            }\n            //思路：依次遍历滤镜，每次滤镜都画到out的RenderTarget上，然后把out画取src的RenderTarget做原图，去叠加新的滤镜\n            var svCP: Value2D = Value2D.create(RenderSpriteData.Texture2D);\t//拷贝用shaderValue\n            var b: Rectangle;\n\n            var p: Point = Point.TEMP;\n            var tMatrix: Matrix = webglctx._curMat;\n            var mat: Matrix = Matrix.create();\n            tMatrix.copyTo(mat);\n            var tPadding: number = 0;\t//给glow用\n            var tHalfPadding: number = 0;\n            var tIsHaveGlowFilter: boolean = false;\n            //这里判断是否存储了out，如果存储了直接用;\n            var source: RenderTexture2D = null;\n            var out: RenderTexture2D = sprite._cacheStyle.filterCache || null;\n            if (!out || sprite.getRepaint() != 0) {\n                tIsHaveGlowFilter = sprite._isHaveGlowFilter();\n                //glow需要扩展边缘\n                if (tIsHaveGlowFilter) {\n                    tPadding = 50;\n                    tHalfPadding = 25;\n                }\n                b = new Rectangle();\n                b.copyFrom(sprite.getSelfBounds());\n                b.x += sprite.x;\n                b.y += sprite.y;\n                b.x -= sprite.pivotX + 4;//blur \n                b.y -= sprite.pivotY + 4;//blur\n                var tSX: number = b.x;\n                var tSY: number = b.y;\n                //重新计算宽和高\n                b.width += (tPadding + 8);//增加宽度 blur  由于blur系数为9\n                b.height += (tPadding + 8);//增加高度 blur\n                p.x = b.x * mat.a + b.y * mat.c;\n                p.y = b.y * mat.d + b.x * mat.b;\n                b.x = p.x;\n                b.y = p.y;\n                p.x = b.width * mat.a + b.height * mat.c;\n                p.y = b.height * mat.d + b.width * mat.b;\n                b.width = p.x;\n                b.height = p.y;\n                if (b.width <= 0 || b.height <= 0) {\n                    return;\n                }\n                out && WebGLRTMgr.releaseRT(out);// out.recycle();\n                source = WebGLRTMgr.getRT(b.width, b.height);\n                var outRT: RenderTexture2D = out = WebGLRTMgr.getRT(b.width, b.height);\n                sprite._getCacheStyle().filterCache = out;\n                //使用RT\n                webglctx.pushRT();\n                webglctx.useRT(source);\n                var tX: number = sprite.x - tSX + tHalfPadding;\n                var tY: number = sprite.y - tSY + tHalfPadding;\n                //执行节点的渲染\n                next._fun.call(next, sprite, context, tX, tY);\n                webglctx.useRT(outRT);\n                for (var i: number = 0; i < len; i++) {\n                    if (i != 0) {\n                        //把out往src上画。这只是一个拷贝的过程，下面draw(src) to outRT 才是真正的应用filter\n                        //由于是延迟执行，不能直接在这里swap。 TODO 改成延迟swap\n                        webglctx.useRT(source);\n                        webglctx.drawTarget(outRT, 0, 0, b.width, b.height, Matrix.TEMP.identity(), svCP, null, BlendMode.TOINT.overlay);\n                        webglctx.useRT(outRT);\n                    }\n                    var fil: Filter = filters[i];\n                    //把src往out上画\n                    switch (fil.type) {\n                        case Filter.BLUR:\n                            fil._glRender && fil._glRender.render(source, context, b.width, b.height, fil);\n                            //BlurFilterGLRender.render(source, context, b.width, b.height, fil as BlurFilter);\n                            break;\n                        case Filter.GLOW:\n                            //GlowFilterGLRender.render(source, context, b.width, b.height, fil as GlowFilter);\n                            fil._glRender && fil._glRender.render(source, context, b.width, b.height, fil);\n                            break;\n                        case Filter.COLOR:\n                            webglctx.setColorFilter((<ColorFilter>fil));\n                            webglctx.drawTarget(source, 0, 0, b.width, b.height, Matrix.EMPTY.identity(), Value2D.create(RenderSpriteData.Texture2D));\n                            webglctx.setColorFilter(null);\n                            break;\n                    }\n                }\n                webglctx.popRT();\n            } else {\n\n                // tIsHaveGlowFilter = sprite._cacheStyle.hasGlowFilter || false;\n                tIsHaveGlowFilter = sprite._isHaveGlowFilter() || false;\n                if (tIsHaveGlowFilter) {\n                    tPadding = 50;\n                    tHalfPadding = 25;\n                }\n                b = sprite.getBounds();\n                if (b.width <= 0 || b.height <= 0) {\n                    return;\n                }\n                //edit\n                b.width += (tPadding + 8);//增加宽度 blur  由于blur系数为9\n                b.height += (tPadding + 8);//增加高度 blur\n                b.x -= sprite.pivotX + 4; //blur \n                b.y -= sprite.pivotY + 4;//blur \n                p.x = b.x * mat.a + b.y * mat.c;\n                p.y = b.y * mat.d + b.x * mat.b;\n                b.x = p.x;\n                b.y = p.y;\n                p.x = b.width * mat.a + b.height * mat.c;\n                p.y = b.height * mat.d + b.width * mat.b;\n                b.width = p.x;\n                b.height = p.y;\n                //scope.addValue(\"out\", out);\n            }\n            x = x - tHalfPadding - sprite.x;\n            y = y - tHalfPadding - sprite.y;\n            p.setTo(x, y);\n            mat.transformPoint(p);\n            x = p.x + b.x;\n            y = p.y + b.y;\n            //把最后的out纹理画出来\n            webglctx._drawRenderTexture(out, x, y, b.width, b.height, Matrix.TEMP.identity(), 1.0, RenderTexture2D.defuv);\n\n            //把对象放回池子中\n            //var submit:SubmitCMD = SubmitCMD.create([scope], Filter._recycleScope, this);\n            if (source) {\n                var submit: SubmitCMD = SubmitCMD.create([source], function (s: Texture2D): void {\n                    s.destroy();\n                }, this);\n                source = null;\n                context.addRenderObject(submit);\n            }\n            mat.destroy();\n        }\n    }\n}\n\n","import { Utils } from \"./Utils\"\n\nconst _COLOR_MAP: Record<string, string> = { \"purple\": \"#800080\", \"orange\": \"#ffa500\", \"white\": '#FFFFFF', \"red\": '#FF0000', \"green\": '#00FF00', \"blue\": '#0000FF', \"black\": '#000000', \"yellow\": '#FFFF00', 'gray': '#808080' };\n\n/**\n * @private\n * <code>ColorUtils</code> 是一个颜色值处理类。\n */\nexport class ColorUtils {\n    /**@private */\n    static _SAVE: any = {};\n    /**@private */\n    static _SAVE_SIZE: number = 0;\n    /**@private */\n\n    /**@private */\n    private static _DEFAULT: any = ColorUtils._initDefault();\n\n    /**rgba 取值范围0-1*/\n    //TODO:delete？\n    arrColor: any[] = [];\n    /** 字符串型颜色值。*/\n    strColor: string;\n    /** uint 型颜色值。*/\n    numColor: number;\n    /**@internal TODO:*/\n    _drawStyle: any;\n\n    /**\n     * 根据指定的属性值，创建一个 <code>Color</code> 类的实例。\n     * @param\tvalue 颜色值，可以是字符串：\"#ff0000\"或者16进制颜色 0xff0000。\n     */\n    constructor(value: any) {\n        if (value == null || value == 'none') {\n            this.strColor = \"#00000000\";\n            this.numColor = 0;\n            this.arrColor = [0, 0, 0, 0];\n            return;\n        }\n\n        let color: number;\n        if (typeof (value) == 'string') {\n            color = Utils.fromStringColor(value);\n            this.strColor = value;\n        } else {\n            color = value;\n            this.strColor = Utils.toHexColor(color);\n        }\n\n        if (this.strColor.indexOf(\"rgba\") >= 0 || this.strColor.length === 9) {\n            //color:0xrrggbbaa numColor此时为负数\n            this.arrColor = [((0xFF000000 & color) >>> 24) / 255, ((0xFF0000 & color) >> 16) / 255, ((0xFF00 & color) >> 8) / 255, (0xFF & color) / 255];\n            this.numColor = (0xff000000 & color) >>> 24 | (color & 0xff0000) >> 8 | (color & 0x00ff00) << 8 | ((color & 0xff) << 24);//to 0xffbbggrr\n        } else {\n            this.arrColor = [((0xFF0000 & color) >> 16) / 255, ((0xFF00 & color) >> 8) / 255, (0xFF & color) / 255, 1];\n            this.numColor = 0xff000000 | (color & 0xff0000) >> 16 | (color & 0x00ff00) | (color & 0xff) << 16;//to 0xffbbggrr\n        }\n    }\n\n    /**@private */\n    static _initDefault(): any {\n        ColorUtils._DEFAULT = {};\n        for (var i in _COLOR_MAP) ColorUtils._SAVE[i] = ColorUtils._DEFAULT[i] = new ColorUtils(_COLOR_MAP[i]);\n        return ColorUtils._DEFAULT;\n    }\n\n    /**@private 缓存太大，则清理缓存*/\n    static _initSaveMap(): void {\n        ColorUtils._SAVE_SIZE = 0;\n        ColorUtils._SAVE = Object.assign({}, ColorUtils._DEFAULT);\n    }\n\n    /**\n     * 根据指定的属性值，创建并返回一个 <code>Color</code> 类的实例。\n     * @param\tvalue 颜色值，可以是字符串：\"#ff0000\"或者16进制颜色 0xff0000。\n     * @return 一个 <code>Color</code> 类的实例。\n     */\n    static create(value: any): ColorUtils {\n        let key: string = value + \"\";\n        let color: ColorUtils = ColorUtils._SAVE[key];\n        if (color != null) return color;\n        if (ColorUtils._SAVE_SIZE > 500) ColorUtils._initSaveMap();\n        ColorUtils._SAVE_SIZE++;\n        return ColorUtils._SAVE[key] = new ColorUtils(value);\n    }\n}\n\n","import { Filter } from \"./Filter\";\nimport { IFilter } from \"./IFilter\";\nimport { ColorUtils } from \"../utils/ColorUtils\"\nimport { ShaderDefine } from \"../RenderEngine/RenderShader/ShaderDefine\";\nimport { ShaderDefines2D } from \"../webgl/shader/d2/ShaderDefines2D\";\n\n/**对比度列表*/\nconst DELTA_INDEX: any[] = [0, 0.01, 0.02, 0.04, 0.05, 0.06, 0.07, 0.08, 0.1, 0.11, 0.12, 0.14, 0.15, 0.16, 0.17, 0.18, 0.20, 0.21, 0.22, 0.24, 0.25, 0.27, 0.28, 0.30, 0.32, 0.34, 0.36, 0.38, 0.40, 0.42, 0.44, 0.46, 0.48, 0.5, 0.53, 0.56, 0.59, 0.62, 0.65, 0.68, 0.71, 0.74, 0.77, 0.80, 0.83, 0.86, 0.89, 0.92, 0.95, 0.98, 1.0, 1.06, 1.12, 1.18, 1.24, 1.30, 1.36, 1.42, 1.48, 1.54, 1.60, 1.66, 1.72, 1.78, 1.84, 1.90, 1.96, 2.0, 2.12, 2.25, 2.37, 2.50, 2.62, 2.75, 2.87, 3.0, 3.2, 3.4, 3.6, 3.8, 4.0, 4.3, 4.7, 4.9, 5.0, 5.5, 6.0, 6.5, 6.8, 7.0, 7.3, 7.5, 7.8, 8.0, 8.4, 8.7, 9.0, 9.4, 9.6, 9.8, 10.0];\n/**灰色矩阵*/\nconst GRAY_MATRIX: any[] = [0.3086, 0.6094, 0.082, 0, 0, 0.3086, 0.6094, 0.082, 0, 0, 0.3086, 0.6094, 0.082, 0, 0, 0, 0, 0, 1, 0];\n/**单位矩阵,表示什么效果都没有*/\nconst IDENTITY_MATRIX: any[] = [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1];\n/**标准矩阵长度*/\nconst LENGTH: number = 25;\n\n/**\n * <p><code>ColorFilter</code> 是颜色滤镜。使用 ColorFilter 类可以将 4 x 5 矩阵转换应用于输入图像上的每个像素的 RGBA 颜色和 Alpha 值，以生成具有一组新的 RGBA 颜色和 Alpha 值的结果。该类允许饱和度更改、色相旋转、亮度转 Alpha 以及各种其他效果。您可以将滤镜应用于任何显示对象（即，从 Sprite 类继承的对象）。</p>\n * <p>注意：对于 RGBA 值，最高有效字节代表红色通道值，其后的有效字节分别代表绿色、蓝色和 Alpha 通道值。</p>\n */\nexport class ColorFilter extends Filter implements IFilter {\n\n    /** @internal */\n    _mat: Float32Array;\n    /** @internal */\n    _alpha: Float32Array;\n    /**当前使用的矩阵*/\n    _matrix: any[];\n\n    /**\n     * 创建一个 <code>ColorFilter</code> 实例。\n     * @param mat\t（可选）由 20 个项目（排列成 4 x 5 矩阵）组成的数组，用于颜色转换。\n     */\n    constructor(mat: any[] = null) {\n        super();\n        if (!mat) mat = this._copyMatrix(IDENTITY_MATRIX);\n        this._mat = new Float32Array(16);\n        this._alpha = new Float32Array(4);\n        this.setByMatrix(mat);\n    }\n\n    /**\n     * 设置为灰色滤镜\n     */\n    gray(): ColorFilter {\n        return this.setByMatrix(GRAY_MATRIX);\n    }\n\n    /**\n     * 设置为变色滤镜\n     * @param red 红色系数,范围:0~1\n     * @param green 绿色系数,范围:0~1\n     * @param blue 蓝色系数,范围:0~1\n     * @param alpha alpha系数,范围:0~1\n     */\n    color(red: number = 0, green: number = 0, blue: number = 0, alpha: number = 1): ColorFilter {\n        return this.setByMatrix([red, 0, 0, 0, 1, 0, green, 0, 0, 1, 0, 0, blue, 0, 1, 0, 0, 0, alpha, 0]);\n    }\n\n    /**\n     * 设置滤镜色\n     * @param\tcolor 颜色值\n     */\n    setColor(color: string): ColorFilter {\n        var arr: any[] = ColorUtils.create(color).arrColor;\n        var mt: any[] = [0, 0, 0, 0, 256 * arr[0], 0, 0, 0, 0, 256 * arr[1], 0, 0, 0, 0, 256 * arr[2], 0, 0, 0, 1, 0];\n        return this.setByMatrix(mt);\n    }\n\n    /**\n     * 设置矩阵数据\n     * @param matrix 由 20 个项目（排列成 4 x 5 矩阵）组成的数组\n     * @return this\n     */\n    setByMatrix(matrix: any[]): ColorFilter {\n        if (this._matrix != matrix) this._copyMatrix(matrix);\n        var j: number = 0;\n        var z: number = 0;\n        for (var i: number = 0; i < 20; i++) {\n            if (i % 5 != 4) {\n                this._mat[j++] = matrix[i];\n            } else {\n                this._alpha[z++] = matrix[i];\n            }\n        }\n        return this;\n    }\n\n    /**\n     * @private \n     * @override\n    */\n    get type(): number {\n        return Filter.COLOR;\n    }\n\n    /**@internal */\n    get typeDefine(): ShaderDefine {\n        return ShaderDefines2D.FILTERCOLOR;\n    }\n\n    /**\n     * 调整颜色，包括亮度，对比度，饱和度和色调\n     * @param brightness 亮度,范围:-100~100\n     * @param contrast 对比度,范围:-100~100\n     * @param saturation 饱和度,范围:-100~100\n     * @param hue 色调,范围:-180~180\n     * @return this\n     */\n    adjustColor(brightness: number, contrast: number, saturation: number, hue: number): ColorFilter {\n        this.adjustHue(hue);\n        this.adjustContrast(contrast);\n        this.adjustBrightness(brightness);\n        this.adjustSaturation(saturation);\n        return this;\n    }\n\n    /**\n     * 调整亮度\n     * @param brightness 亮度,范围:-100~100\n     * @return this\n     */\n    adjustBrightness(brightness: number): ColorFilter {\n        brightness = this._clampValue(brightness, 100);\n        if (brightness == 0 || isNaN(brightness)) return this;\n        return this._multiplyMatrix([1, 0, 0, 0, brightness, 0, 1, 0, 0, brightness, 0, 0, 1, 0, brightness, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1]);\n    }\n\n    /**\n     * 调整对比度\n     * @param contrast 对比度,范围:-100~100\n     * @return this\n     */\n    adjustContrast(contrast: number): ColorFilter {\n        contrast = this._clampValue(contrast, 100);\n        if (contrast == 0 || isNaN(contrast)) return this;\n        var x: number;\n        if (contrast < 0) {\n            x = 127 + contrast / 100 * 127\n        } else {\n            x = contrast % 1;\n            if (x == 0) {\n                x = DELTA_INDEX[contrast];\n            } else {\n                x = DELTA_INDEX[(contrast << 0)] * (1 - x) + DELTA_INDEX[(contrast << 0) + 1] * x;\n            }\n            x = x * 127 + 127;\n        }\n        var x1: number = x / 127;\n        var x2: number = (127 - x) * 0.5;\n        return this._multiplyMatrix([x1, 0, 0, 0, x2, 0, x1, 0, 0, x2, 0, 0, x1, 0, x2, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1]);\n    }\n\n    /**\n     * 调整饱和度\n     * @param saturation 饱和度,范围:-100~100\n     * @return this\n     */\n    adjustSaturation(saturation: number): ColorFilter {\n        saturation = this._clampValue(saturation, 100);\n        if (saturation == 0 || isNaN(saturation)) return this;\n        var x: number = 1 + ((saturation > 0) ? 3 * saturation / 100 : saturation / 100);\n        var dx: number = 1 - x;\n        var r: number = 0.3086 * dx;\n        var g: number = 0.6094 * dx;\n        var b: number = 0.0820 * dx;\n\n        return this._multiplyMatrix([r + x, g, b, 0, 0, r, g + x, b, 0, 0, r, g, b + x, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1]);\n    }\n\n    /**\n     * 调整色调\n     * @param hue 色调,范围:-180~180\n     * @return this\n     */\n    adjustHue(hue: number): ColorFilter {\n        hue = this._clampValue(hue, 180) / 180 * Math.PI;\n        if (hue == 0 || isNaN(hue)) return this;\n        var cos: number = Math.cos(hue);\n        var sin: number = Math.sin(hue);\n        var r: number = 0.213;\n        var g: number = 0.715;\n        var b: number = 0.072;\n        return this._multiplyMatrix([r + cos * (1 - r) + sin * (-r), g + cos * (-g) + sin * (-g), b + cos * (-b) + sin * (1 - b), 0, 0, r + cos * (-r) + sin * (0.143), g + cos * (1 - g) + sin * (0.140), b + cos * (-b) + sin * (-0.283), 0, 0, r + cos * (-r) + sin * (-(1 - r)), g + cos * (-g) + sin * (g), b + cos * (1 - b) + sin * (b), 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1]);\n    }\n\n    /**\n     * 重置成单位矩阵，去除滤镜效果\n     */\n    reset(): ColorFilter {\n        return this.setByMatrix(this._copyMatrix(IDENTITY_MATRIX));\n    }\n\n    /**\n     * 矩阵乘法\n     * @param matrix\n     * @return this\n     */\n    private _multiplyMatrix(matrix: any[]): ColorFilter {\n        var col: any[] = [];\n        this._matrix = this._fixMatrix(this._matrix);\n        for (var i: number = 0; i < 5; i++) {\n            for (var j: number = 0; j < 5; j++) {\n                col[j] = this._matrix[j + i * 5];\n            }\n            for (j = 0; j < 5; j++) {\n                var val: number = 0;\n                for (var k: number = 0; k < 5; k++) {\n                    val += matrix[j + k * 5] * col[k];\n                }\n                this._matrix[j + i * 5] = val;\n            }\n        }\n        return this.setByMatrix(this._matrix);\n    }\n\n    /**\n     * 规范值的范围\n     * @param val 当前值\n     * @param limit 值的范围-limit~limit\n     */\n    private _clampValue(val: number, limit: number): number {\n        return Math.min(limit, Math.max(-limit, val));\n    }\n\n    /**\n     * 规范矩阵,将矩阵调整到正确的大小\n     * @param matrix 需要调整的矩阵\n     */\n    private _fixMatrix(matrix: any[] = null): any[] {\n        if (matrix == null) return IDENTITY_MATRIX;\n        if (matrix.length < LENGTH) matrix = matrix.slice(0, matrix.length).concat(IDENTITY_MATRIX.slice(matrix.length, LENGTH));\n        else if (matrix.length > LENGTH) matrix = matrix.slice(0, LENGTH);\n        return matrix;\n    }\n\n    /**\n     * 复制矩阵\n     */\n    private _copyMatrix(matrix: any[]): any[] {\n        var len: number = LENGTH;\n        if (!this._matrix) this._matrix = [];\n        for (var i: number = 0; i < len; i++) {\n            this._matrix[i] = matrix[i];\n        }\n        return this._matrix;\n    }\n\n    onAfterDeserialize() {\n        let arr: any[] = ColorUtils.create((<any>this)._color || \"#FFFFFF\").arrColor;\n        this.color(arr[0], arr[1], arr[2], arr[3]);\n        this.adjustColor((<any>this)._brightness || 0, (<any>this)._contrast || 0, (<any>this)._saturation || 0, (<any>this)._hue || 0);\n    }\n}\n\n","import { Point } from \"./Point\";\nimport { Utils } from \"../utils/Utils\"\n\n/**\n * @private\n * 凸包算法。\n */\nexport class GrahamScan {\n\n    private static _mPointList: any[];\n    private static _tempPointList: any[] = [];\n    private static _temPList: any[] = [];\n    private static _temArr: any[] = [];\n\n    static multiply(p1: Point, p2: Point, p0: Point): number {\n        return ((p1.x - p0.x) * (p2.y - p0.y) - (p2.x - p0.x) * (p1.y - p0.y));\n    }\n\n    /**\n     * 计算两个点的距离。\n     * @param\tp1\n     * @param\tp2\n     * @return\n     */\n    static dis(p1: Point, p2: Point): number {\n        return (p1.x - p2.x) * (p1.x - p2.x) + (p1.y - p2.y) * (p1.y - p2.y);\n    }\n\n    private static _getPoints(count: number, tempUse: boolean = false, rst: any[]|null = null): any[] {\n        if (!GrahamScan._mPointList) GrahamScan._mPointList = [];\n        while (GrahamScan._mPointList.length < count) GrahamScan._mPointList.push(new Point());\n        if (!rst) rst = [];\n        rst.length = 0;\n        if (tempUse) {\n            //\t\t\t\trst=_mPointList.slice(0,count);\n            GrahamScan.getFrom(rst, GrahamScan._mPointList, count);\n        } else {\n            //\t\t\t\trst=_mPointList.splice(0,count);\n            GrahamScan.getFromR(rst, GrahamScan._mPointList, count);\n        }\n        return rst;\n    }\n\n    /**\n     * 将数组 src 从索引0位置 依次取 cout 个项添加至 tst 数组的尾部。\n     * @param\trst 原始数组，用于添加新的子元素。\n     * @param\tsrc 用于取子元素的数组。\n     * @param\tcount 需要取得子元素个数。\n     * @return 添加完子元素的 rst 对象。\n     */\n    static getFrom(rst: any[], src: any[], count: number): any[] {\n        var i: number;\n        for (i = 0; i < count; i++) {\n            rst.push(src[i]);\n        }\n        return rst;\n    }\n\n    /**\n     * 将数组 src 从末尾索引位置往头部索引位置方向 依次取 cout 个项添加至 tst 数组的尾部。\n     * @param\trst 原始数组，用于添加新的子元素。\n     * @param\tsrc 用于取子元素的数组。\n     * @param\tcount 需要取得子元素个数。\n     * @return 添加完子元素的 rst 对象。\n     */\n    static getFromR(rst: any[], src: any[], count: number): any[] {\n        var i: number;\n        for (i = 0; i < count; i++) {\n            rst.push(src.pop());\n        }\n        return rst;\n    }\n\n    /**\n     *  [x,y...]列表 转 Point列表\n     * @param pList Point列表\n     * @return [x,y...]列表\n     */\n    static pListToPointList(pList: any[], tempUse: boolean = false): any[] {\n        var i: number, len: number = pList.length / 2, rst: any[] = GrahamScan._getPoints(len, tempUse, GrahamScan._tempPointList);\n        for (i = 0; i < len; i++) {\n            rst[i].setTo(pList[i + i], pList[i + i + 1]);\n        }\n        return rst;\n    }\n\n    /**\n     * Point列表转[x,y...]列表\n     * @param pointList Point列表\n     * @return [x,y...]列表\n     */\n    static pointListToPlist(pointList: any[]): any[] {\n        var i: number, len: number = pointList.length, rst: any[] = GrahamScan._temPList, tPoint: Point;\n        rst.length = 0;\n        for (i = 0; i < len; i++) {\n            tPoint = pointList[i];\n            rst.push(tPoint.x, tPoint.y);\n        }\n        return rst;\n    }\n\n    /**\n     *  寻找包括所有点的最小多边形顶点集合\n     * @param pList 形如[x0,y0,x1,y1...]的点列表\n     * @return  最小多边形顶点集合\n     */\n    static scanPList(pList: any[]): any[] {\n        return Utils.copyArray(pList, GrahamScan.pointListToPlist(GrahamScan.scan(GrahamScan.pListToPointList(pList, true))));\n    }\n\n    /**\n     * 寻找包括所有点的最小多边形顶点集合\n     * @param PointSet Point列表\n     * @return 最小多边形顶点集合\n     */\n    static scan(PointSet: any[]): any[] {\n        var i: number, j: number, k: number = 0, top: number = 2, tmp: Point, n: number = PointSet.length, ch: any[];\n        var _tmpDic: any = {};\n        var key: string;\n        ch = GrahamScan._temArr;\n        ch.length = 0;\n        n = PointSet.length;\n        for (i = n - 1; i >= 0; i--) {\n            tmp = PointSet[i];\n            key = tmp.x + \"_\" + tmp.y;\n            if (!(key in _tmpDic)) {\n                _tmpDic[key] = true;\n                ch.push(tmp);\n            }\n        }\n        n = ch.length;\n        Utils.copyArray(PointSet, ch);\n        //\t\t\tPointSet=ch;\n        //\t\t\tn=PointSet.length;\n        //找到最下且偏左的那个点  \n        for (i = 1; i < n; i++)\n            if ((PointSet[i].y < PointSet[k].y) || ((PointSet[i].y == PointSet[k].y) && (PointSet[i].x < PointSet[k].x)))\n                k = i;\n        //将这个点指定为PointSet[0]  \n        tmp = PointSet[0];\n        PointSet[0] = PointSet[k];\n        PointSet[k] = tmp;\n        //按极角从小到大,距离偏短进行排序  \n        for (i = 1; i < n - 1; i++) {\n            k = i;\n            for (j = i + 1; j < n; j++)\n                if ((GrahamScan.multiply(PointSet[j], PointSet[k], PointSet[0]) > 0) || ((GrahamScan.multiply(PointSet[j], PointSet[k], PointSet[0]) == 0) && (GrahamScan.dis(PointSet[0], PointSet[j]) < GrahamScan.dis(PointSet[0], PointSet[k]))))\n                    k = j;//k保存极角最小的那个点,或者相同距离原点最近  \n            tmp = PointSet[i];\n            PointSet[i] = PointSet[k];\n            PointSet[k] = tmp;\n        }\n        //第三个点先入栈  \n        ch = GrahamScan._temArr;\n        ch.length = 0;\n        //trace(\"scan:\",PointSet[0],PointSet[1],PointSet[2]);\n        if (PointSet.length < 3) {\n            return Utils.copyArray(ch, PointSet);\n        }\n        ch.push(PointSet[0], PointSet[1], PointSet[2]);\n        //ch=[PointSet[0],PointSet[1],PointSet[2]];\n        //判断与其余所有点的关系  \n        for (i = 3; i < n; i++) {\n            //不满足向左转的关系,栈顶元素出栈  \n            while (ch.length >= 2 && GrahamScan.multiply(PointSet[i], ch[ch.length - 1], ch[ch.length - 2]) >= 0) ch.pop();\n            //当前点与栈内所有点满足向左关系,因此入栈.  \n            PointSet[i] && ch.push(PointSet[i]);\n        }\n        return ch;\n    }\n\n}\n\n","/**\n * @private\n */\nexport class SpriteConst {\n    /** @private */\n    static ALPHA: number = 0x01;\n    /** @private */\n    static TRANSFORM: number = 0x02;\n    /** @private */\n    static BLEND: number = 0x04;\n    /** @private */\n    static CANVAS: number = 0x08;\n    /** @private */\n    static FILTERS: number = 0x10;\n    /** @private */\n    static MASK: number = 0x20;\n    /** @private */\n    static CLIP: number = 0x40;\n    /** @private */\n    static STYLE: number = 0x80;\n    /** @private */\n    static TEXTURE: number = 0x100;\n    /** @private */\n    static GRAPHICS: number = 0x200;\n    /** @private */\n    static LAYAGL3D: number = 0x400;\n    /** @private */\n    static CUSTOM: number = 0x800;\n    /** @private */\n    static ONECHILD: number = 0x1000;\n    /** @private */\n    static HITAREA: number = 0x2000;\n    /** @private */\n    static CHILDS: number = 0x4000;\n\n    /** @private */\n    static REPAINT_NONE: number = 0;\n    /** @private */\n    static REPAINT_NODE: number = 0x01;\n    /** @private */\n    static REPAINT_CACHE: number = 0x02;\n    /** @private */\n    static REPAINT_ALL: number = 0x03;\n}\n\n\n","/**\n * 渲染统计数据\n */\nexport enum RenderStatisticsInfo{\n    DrawCall,\n    InstanceDrawCall,\n    Triangle,\n    UniformUpload,//TODO\n    GPUMemory,\n    TextureMemeory,\n    RenderTextureMemory,\n    BufferMemory,\n}","export enum BufferTargetType{\n    ARRAY_BUFFER,//顶点\n    ELEMENT_ARRAY_BUFFER,//索引\n    //WebGL2.0 UniformBuffer\n    UNIFORM_BUFFER,//UBO\n    COPY_READ_BUFFER,//TODO\n    COPY_WRITE_BUFFER,//TODO\n    TRANSFORM_FEEDBACK_BUFFER,//TODO\n    PIXEL_PACK_BUFFER,//TODO\n    PIXEL_UNPACK_BUFFER,//TODO\n}\n\n\n/**\n * Buffer usage.\n */\n export enum BufferUsage {\n    /** The buffer content are intended to be specified once, and used many times */\n    Static,\n    /** The buffer contents are intended to be respecified repeatedly, and used many times */\n    Dynamic,\n    /** The buffer contents are intended to be specified once, and used at most a few times */\n    Stream\n  }","export enum IndexFormat {\n    /** 8 位无符号整型索引格式。*/\n    UInt8,\n    /** 16 位无符号整型索引格式。*/\n    UInt16,\n    /** 32 位无符号整型索引格式。*/\n    UInt32\n}","import { ILaya } from \"../../ILaya\";\nimport { RenderStatisticsInfo } from \"../RenderEngine/RenderEnum/RenderStatInfo\";\nimport { LayaGL } from \"../layagl/LayaGL\";\nimport { Browser } from \"./Browser\";\nimport { ClassUtils } from \"./ClassUtils\";\nimport { IStatUI, StatToggleUIParams, StatUIParams } from \"./IStatUI\";\n\n/**\n * <p> <code>Stat</code> 是一个性能统计面板，可以实时更新相关的性能参数。</p>\n * <p>参与统计的性能参数如下（所有参数都是每大约1秒进行更新）：<br/>\n * FPS(WebGL)：WebGL 模式下的帧频，也就是每秒显示的帧数，值越高、越稳定，感觉越流畅；<br/>\n * Sprite：统计所有渲染节点（包括容器）数量，它的大小会影响引擎进行节点遍历、数据组织和渲染的效率。其值越小，游戏运行效率越高；<br/>\n * DrawCall：此值是决定性能的重要指标，其值越小，游戏运行效率越高。Canvas模式下表示每大约1秒的图像绘制次数；WebGL模式下表示每大约1秒的渲染提交批次，每次准备数据并通知GPU渲染绘制的过程称为1次DrawCall，在每次DrawCall中除了在通知GPU的渲染上比较耗时之外，切换材质与shader也是非常耗时的操作；<br/>\n * CurMem：Canvas模式下，表示内存占用大小，值越小越好，过高会导致游戏闪退；WebGL模式下，表示内存与显存的占用，值越小越好；<br/>\n * Shader：是 WebGL 模式独有的性能指标，表示每大约1秒 Shader 提交次数，值越小越好；<br/>\n * Canvas：由三个数值组成，只有设置 CacheAs 后才会有值，默认为0/0/0。从左到右数值的意义分别为：每帧重绘的画布数量 / 缓存类型为\"normal\"类型的画布数量 / 缓存类型为\"bitmap\"类型的画布数量。</p>\n */\nexport class Stat {\n    //FPS\n    public static FPSStatUIParams: StatUIParams = { title: \"FPS\", value: \"_fpsStr\", color: \"yellow\", units: \"int\", mode: \"summit\" };\n    //Node nums\n    public static NodeStatUIParams: StatUIParams = { title: \"Node\", value: \"spriteCount\", color: \"white\", units: \"int\", mode: \"summit\" };\n    //Sprite3D nums\n    public static Sprite3DStatUIParams: StatUIParams = { title: \"Sprite3D\", value: \"sprite3DCount\", color: \"white\", units: \"int\", mode: \"summit\" };\n    //DrawCall\n    public static DrawCall: StatUIParams = { title: \"DrawCall\", value: \"drawCall\", color: \"white\", units: \"int\", mode: \"average\" };\n    //triangleFace\n    public static TriangleFace: StatUIParams = { title: \"TriangleFace\", value: \"trianglesFaces\", color: \"white\", units: \"int\", mode: \"average\" };\n    //RenderNoe 渲染节点数量\n    public static RenderNode: StatUIParams = { title: \"RenderNode\", value: \"renderNode\", color: \"white\", units: \"int\", mode: \"summit\" };\n    //SkinRenderNode\n    public static SkinRenderNode: StatUIParams = { title: \"SkinRenderNode\", value: \"skinRenderNode\", color: \"white\", units: \"int\", mode: \"summit\" };\n    //ParticleRenderNode\n    public static ParticleRenderNode: StatUIParams = { title: \"ParticleRenderNode\", value: \"particleRenderNode\", color: \"white\", units: \"int\", mode: \"summit\" };\n    //FrustumCulling\n    public static FrustumCulling: StatUIParams = { title: \"FrustumCulling\", value: \"frustumCulling\", color: \"white\", units: \"int\", mode: \"average\" };\n    //uniformUpload\n    public static UniformUpload: StatUIParams = { title: \"UniformUpload\", value: \"uniformUpload\", color: \"white\", units: \"int\", mode: \"average\" };\n    //OpaqueDrawCall\n    public static OpaqueDrawCall: StatUIParams = { title: \"OpaqueDrawCall\", value: \"opaqueDrawCall\", color: \"white\", units: \"int\", mode: \"average\" };\n    //TransformDrawCall\n    public static TransDrawCall: StatUIParams = { title: \"TransDrawCall\", value: \"transDrawCall\", color: \"white\", units: \"int\", mode: \"average\" };\n    //DepthCastDrawCall\n    public static DepthCastDrawCall: StatUIParams = { title: \"DepthCastDrawCall\", value: \"depthCastDrawCall\", color: \"white\", units: \"int\", mode: \"average\" };\n    //InstanceDrawCall\n    public static InstanceDrawCall: StatUIParams = { title: \"InstanceDrawCall\", value: \"instanceDrawCall\", color: \"white\", units: \"int\", mode: \"average\" };\n    //CMDDrawCall\n    public static CMDDrawCall: StatUIParams = { title: \"CMDDrawCall\", value: \"cmdDrawCall\", color: \"white\", units: \"int\", mode: \"average\" };\n    //BlitDrawCall\n    public static BlitDrawCall: StatUIParams = { title: \"BlitDrawCall\", value: \"blitDrawCall\", color: \"white\", units: \"int\", mode: \"average\" };\n    //GPU 显存:\n    public static GPUMemory: StatUIParams = { title: \"GPUMemory\", value: \"gpuMemory\", color: \"white\", units: \"M\", mode: \"summit\" };\n    //Texture2D memory\n    public static TextureMemeory: StatUIParams = { title: \"TextureMemory\", value: \"textureMemory\", color: \"white\", units: \"M\", mode: \"summit\" };\n    //RenderTexture memory\n    public static RenderTextureMemory: StatUIParams = { title: \"RenderTextureMemory\", value: \"renderTextureMemory\", color: \"white\", units: \"M\", mode: \"summit\" };\n    //BufferMemory\n    public static BufferMemory: StatUIParams = { title: \"BufferMemory\", value: \"bufferMemory\", color: \"white\", units: \"M\", mode: \"summit\" };\n    //upload Uniform\n    public static uploadUniformNum: StatUIParams = { title: \"UploadUniformNum\", value: \"uploadUniform\", color: \"white\", units: \"int\", mode: \"average\" };\n    //所有显示\n    public static AllShow: Array<StatUIParams> = [Stat.FPSStatUIParams, Stat.NodeStatUIParams, Stat.Sprite3DStatUIParams, Stat.DrawCall, Stat.TriangleFace, Stat.RenderNode, Stat.SkinRenderNode, Stat.ParticleRenderNode\n        , Stat.FrustumCulling, Stat.OpaqueDrawCall, Stat.TransDrawCall, Stat.DepthCastDrawCall, Stat.InstanceDrawCall, Stat.CMDDrawCall, Stat.BlitDrawCall, Stat.GPUMemory, Stat.TextureMemeory, Stat.RenderTextureMemory, Stat.BufferMemory, Stat.uploadUniformNum];\n    //memory显示\n    public static memoryShow: Array<StatUIParams> = [Stat.GPUMemory, Stat.TextureMemeory, Stat.RenderTextureMemory, Stat.BufferMemory];\n    //渲染显示\n    public static renderShow: Array<StatUIParams> = [Stat.DrawCall, Stat.TriangleFace, Stat.OpaqueDrawCall, Stat.TransDrawCall, Stat.DepthCastDrawCall, Stat.InstanceDrawCall, Stat.CMDDrawCall, Stat.BlitDrawCall];\n\n    /**@internal 开启关闭阴影 */\n    public static toogle_Shadow: StatToggleUIParams = { title: \"Shadow\", value: \"enableShadow\", color: \"white\" };\n    /**@internal 开启关闭多光源 */\n    public static toogle_MulLight: StatToggleUIParams = { title: \"MulLight\", value: \"enableMulLight\", color: \"white\" };\n    /**@internal 开启关闭光源 */\n    public static toogle_Light: StatToggleUIParams = { title: \"Light\", value: \"enableLight\", color: \"white\" };\n    /**@internal 开启关闭后期处理 */\n    public static toogle_Postprocess: StatToggleUIParams = { title: \"Postprocess\", value: \"enablePostprocess\", color: \"white\" };\n    /**@internal 开启关闭动画更新 */\n    public static toogle_AnimatorUpdate: StatToggleUIParams = { title: \"AnimatorUpdate\", value: \"enableAnimatorUpdate\", color: \"white\" };\n    /**@internal 开启关闭物理更新*/\n    public static toogle_PhysicsUpdate: StatToggleUIParams = { title: \"PhysicsUpdate\", value: \"enablePhysicsUpdate\", color: \"white\" };\n    /**@internal 开启关闭skin渲染 */\n    public static toogle_Skin: StatToggleUIParams = { title: \"Skin\", value: \"enableSkin\", color: \"white\" };\n    /**@internal 开启关闭透明渲染 */\n    public static toogle_Transparent: StatToggleUIParams = { title: \"Transparent\", value: \"enableTransparent\", color: \"white\" };\n    /**@internal 开启关闭粒子 */\n    public static toogle_Particle: StatToggleUIParams = { title: \"Particle\", value: \"enableParticle\", color: \"white\" };\n    /**@internal 开启关闭msaa */\n    public static toogle_msaa: StatToggleUIParams = { title: \"MSAA\", value: \"enablemsaa\", color: \"white\" };\n    /**@internal 开启关闭CMD */\n    public static toogle_CameraCMD: StatToggleUIParams = { title: \"CameraCMD\", value: \"enableCameraCMD\", color: \"white\" };\n    /**@internal 开启关闭非透明物体渲染 */\n    public static toogle_Opaque: StatToggleUIParams = { title: \"Opaque\", value: \"enableOpaque\", color: \"white\" };\n\n    //所有开关\n    public static AllToggle: Array<StatToggleUIParams> = [Stat.toogle_Shadow, Stat.toogle_Light, Stat.toogle_MulLight, Stat.toogle_Postprocess, Stat.toogle_AnimatorUpdate, Stat.toogle_PhysicsUpdate, Stat.toogle_Opaque, Stat.toogle_Transparent, Stat.toogle_CameraCMD, Stat.toogle_Skin, Stat.toogle_Particle, Stat.toogle_msaa];\n    //渲染开关\n    public static RenderModeToggle: Array<StatToggleUIParams> = [Stat.toogle_Shadow, Stat.toogle_Light, Stat.toogle_MulLight, Stat.toogle_Postprocess, Stat.toogle_AnimatorUpdate, Stat.toogle_PhysicsUpdate];\n    //功能开关\n    public static RenderFuncToggle: Array<StatToggleUIParams> = [Stat.toogle_Opaque, Stat.toogle_Transparent, Stat.toogle_CameraCMD, Stat.toogle_Skin, Stat.toogle_Particle, Stat.toogle_msaa];\n\n    /** 每秒帧数。*/\n    public static FPS: number = 0;\n    /**主舞台 <code>Stage</code> 渲染次数计数。 */\n    public static loopCount: number = 0;\n    /** 精灵渲染使用缓存<code>Sprite</code> 的数量。*/\n    public static spriteRenderUseCacheCount: number = 0;\n\n    /** 画布 canvas 使用标准渲染的次数。*/\n    static canvasNormal: number = 0;\n    /** 画布 canvas 使用位图渲染的次数。*/\n    static canvasBitmap: number = 0;\n    /** 画布 canvas 缓冲区重绘次数。*/\n    static canvasReCache: number = 0;\n    /** 表示当前使用的是否为慢渲染模式。*/\n    static renderSlow: boolean = false;\n    /** 资源管理器所管理资源的累计内存,以字节为单位。*/\n    //static gpuMemory: number;\n    static cpuMemory: number;\n\n    /**@internal */\n    public static _timer: number = 0;\n    /**@internal */\n    public static _count: number = 0;\n\n    /**@internal */\n    public static _fpsStr: string = \"\";\n    /**@internal */\n    public static spriteCount: number = 0;//TODO\n    /**@internal */\n    public static sprite3DCount: number = 0;//TODO\n    /**@internal */\n    public static drawCall: number = 0;\n    /**@internal */\n    public static trianglesFaces: number = 0;\n    /**@internal */\n    public static renderNode: number = 0;\n    /**@internal */\n    public static skinRenderNode: number = 0;\n    /**@internal */\n    public static particleRenderNode: number = 0;\n    /**@internal 视锥剔除次数。*/\n    public static frustumCulling: number = 0;\n    /**@internal */\n    public static uniformUpload: number = 0;\n    /**@internal */\n    public static opaqueDrawCall: number = 0;\n    /**@internal */\n    public static transDrawCall: number = 0;\n    /**@internal */\n    public static depthCastDrawCall: number = 0;\n    /**@internal */\n    public static instanceDrawCall: number = 0;\n    /**@internal */\n    public static cmdDrawCall: number = 0;\n\n    public static blitDrawCall: number = 0;\n    /** 资源管理器所管理资源的累计内存,以字节为单位。*/\n    public static gpuMemory: number;\n    /**@internal */\n    public static textureMemory: number = 0;\n    /**@internal */\n    public static renderTextureMemory: number = 0;\n    /**@interanl */\n    public static bufferMemory: number = 0;\n    /**@internal */\n    public static uploadUniform: number = 0;\n\n    //Toggle\n    /**@internal 开启关闭阴影 */\n    public static enableShadow: boolean = true;\n    /**@internal 开启关闭多光源 */\n    public static enableMulLight: boolean = true;\n    /**@internal 开启关闭光源 */\n    public static enableLight: boolean = true;\n    /**@internal 开启关闭CMD */\n    public static enableCameraCMD: boolean = true;\n    /**@internal 开启关闭后期处理 */\n    public static enablePostprocess: boolean = true;\n    /**@internal 开启关闭skin渲染 */\n    public static enableSkin: boolean = true;\n    /**@internal 开启关闭透明渲染 */\n    public static enableTransparent: boolean = true;\n    /**@internal 开启关闭粒子 */\n    public static enableParticle: boolean = true;\n    /**@internal 开启关闭动画更新 */\n    public static enableAnimatorUpdate: boolean = true;\n    /**@internal 开启关闭物理更新*/\n    public static enablePhysicsUpdate: boolean = true;\n    /**@internal 开启关闭msaa */\n    public static enablemsaa: boolean = true;\n    /**@internal 开启关闭非透明物体渲染 */\n    public static enableOpaque: boolean = true;\n\n    static _statUI: IStatUI;\n\n    /**@internal */\n    private static _currentShowArray: Array<StatUIParams>;\n    /**@internal */\n    private static _currentToggleArray: Array<StatToggleUIParams>;\n    /**@internal */\n    private static _show: boolean;\n\n    /**\n     * 显示性能统计信息。\n     * @param\tx X轴显示位置。\n     * @param\ty Y轴显示位置。\n     */\n    static show(x?: number, y?: number, views?: Array<StatUIParams>): void {\n        if (!Stat.checkUI())\n            return;\n        this.hide();\n\n        Stat._show = true;\n        Stat._currentShowArray = views||Stat.AllShow;\n        Stat._statUI.show(x, y, Stat._currentShowArray);\n        ILaya.systemTimer.frameLoop(1, null, Stat.loop);\n    }\n\n    static showToggle(x?: number, y?: number, views?: Array<StatToggleUIParams>): void {\n        if (!Stat.checkUI())\n            return;\n        this.hide();\n\n        Stat._show = true;\n        Stat._currentToggleArray = views;\n        Stat._statUI.showToggle(x, y, views);\n        ILaya.systemTimer.frameLoop(1, null, Stat.loop);\n    }\n\n    private static checkUI() {\n        if (!Stat._statUI) {\n            let cls = ClassUtils.getClass(\"StatUI\");\n            if (!cls) {\n                console.error(\"StatUI not found\");\n                return false;\n            }\n            Stat._statUI = new cls();\n        }\n\n        return true;\n    }\n\n    /**\n     * 隐藏性能统计信息。\n     */\n    static hide(): void {\n        if (!Stat._show)\n            return;\n\n        Stat._show = false;\n        Stat._currentShowArray = null;\n        Stat._currentToggleArray = null;\n        ILaya.systemTimer.clear(null, Stat.loop);\n        if (Stat._statUI)\n            Stat._statUI.hide();\n    }\n\n    /**\n     * @private\n     * 性能统计参数计算循环处理函数。\n     */\n    static loop(): void {\n        Stat._count++;\n        let timer: number = Browser.now();\n        if (timer - Stat._timer < 1000) return;\n\n        let count: number = Stat._count;\n        //计算更精确的FPS值\n        Stat.FPS = Math.round((count * 1000) / (timer - Stat._timer));\n\n        if (Stat._show) {\n            Stat.updateEngineData();\n            let delay: string = Stat.FPS > 0 ? Math.floor(1000 / Stat.FPS).toString() : \" \";\n            Stat._fpsStr = Stat.FPS + (Stat.renderSlow ? \" slow\" : \"\") + \" \" + delay + \"ms\";\n            Stat._statUI.update();\n            Stat.clear();\n        }\n\n        Stat._count = 0;\n        Stat._timer = timer;\n    }\n\n    static updateEngineData(): void {\n        Stat.trianglesFaces = LayaGL.renderEngine.getStatisticsInfo(RenderStatisticsInfo.Triangle);\n        Stat.drawCall = LayaGL.renderEngine.getStatisticsInfo(RenderStatisticsInfo.DrawCall);\n        Stat.instanceDrawCall = LayaGL.renderEngine.getStatisticsInfo(RenderStatisticsInfo.InstanceDrawCall);\n\n        Stat.gpuMemory = LayaGL.renderEngine.getStatisticsInfo(RenderStatisticsInfo.GPUMemory);\n        Stat.textureMemory = LayaGL.renderEngine.getStatisticsInfo(RenderStatisticsInfo.TextureMemeory);\n        Stat.renderTextureMemory = LayaGL.renderEngine.getStatisticsInfo(RenderStatisticsInfo.RenderTextureMemory);\n        Stat.bufferMemory = LayaGL.renderEngine.getStatisticsInfo(RenderStatisticsInfo.BufferMemory);\n    }\n\n    /**\n     * @private\n     * 清零性能统计计算相关的数据。\n     */\n    static clear(): void {\n        if (!Stat._currentShowArray)\n            return;\n        Stat._currentShowArray.forEach(element => {\n            if (element.mode == \"average\")\n                (Stat as any)[element.value] = 0;\n        });\n        LayaGL.renderEngine.clearStatisticsInfo(RenderStatisticsInfo.Triangle);\n        LayaGL.renderEngine.clearStatisticsInfo(RenderStatisticsInfo.DrawCall);\n        LayaGL.renderEngine.clearStatisticsInfo(RenderStatisticsInfo.InstanceDrawCall);\n    }\n\n    static render(ctx: any, x: number, y: number) {\n        if (Stat._show)\n            Stat._statUI.render(ctx, x, y);\n    }\n}\n\n(window as any).Stat = Stat;\n","import { ISubmit } from \"./ISubmit\";\nimport { SubmitKey } from \"./SubmitKey\";\nimport { RenderSpriteData, Value2D } from \"../shader/d2/value/Value2D\"\nimport { Mesh2D } from \"../utils/Mesh2D\"\n\nexport class SubmitBase implements ISubmit {\n\n    static TYPE_2D: number = 10000;\n    static TYPE_CANVAS: number = 10003;\n    static TYPE_CMDSETRT: number = 10004;\n    static TYPE_CUSTOM: number = 10005;\n    static TYPE_BLURRT: number = 10006;\n    static TYPE_CMDDESTORYPRERT: number = 10007;\n    static TYPE_DISABLESTENCIL: number = 10008;\n    static TYPE_OTHERIBVB: number = 10009;\n    static TYPE_PRIMITIVE: number = 10010;\n    static TYPE_RT: number = 10011;\n    static TYPE_BLUR_RT: number = 10012;\n    static TYPE_TARGET: number = 10013;\n    static TYPE_CHANGE_VALUE: number = 10014;\n    static TYPE_SHAPE: number = 10015;\n    static TYPE_TEXTURE: number = 10016;\n    static TYPE_FILLTEXTURE: number = 10017;\n\n    static KEY_ONCE: number = -1;\n    static KEY_FILLRECT: number = 1;\n    static KEY_DRAWTEXTURE: number = 2;\n    static KEY_VG: number = 3;\n    static KEY_TRIANGLES: number = 4;\n\n    static RENDERBASE: SubmitBase;\n    static ID: number = 1;\n    static preRender: ISubmit = null;\t//上一个submit，主要用来比较key,以减少uniform的重复提交。\n\n    clipInfoID: number = -1;\t//用来比较clipinfo\n    /**@internal */\n    _mesh: Mesh2D | null = null;\t\t\t//代替 _vb,_ib\n    /**@internal */\n    _blendFn: Function = null;\n    protected _id: number = 0;\n    /**@internal */\n    _renderType: number = 0;\n    /**@internal */\n    _parent: ISubmit = null;\n    //渲染key，通过key判断是否是同一个\n    /**@internal */\n    _key: SubmitKey = new SubmitKey();\n\n    // 从VB中什么地方开始画，画到哪\n    /**@internal */\n    _startIdx: number = 0;\t\t//indexbuffer 的偏移，单位是byte\n    /**@internal */\n    _numEle: number = 0;\n    /**@internal */\n    _ref: number = 1;\t// 其实已经没有用了\n\n    shaderValue: Value2D = null;\n\n    static __init__(): void {\n        var s: SubmitBase = SubmitBase.RENDERBASE = new SubmitBase(-1);\n        s.shaderValue = new Value2D(RenderSpriteData.Zero);\n        s.shaderValue.ALPHA = 1;\n        s._ref = 0xFFFFFFFF;\n    }\n\n    constructor(renderType: number = SubmitBase.TYPE_2D) {\n        this._renderType = renderType;\n        this._id = ++SubmitBase.ID;\n    }\n\n    getID(): number {\n        return this._id;\n    }\n\n\n    getRenderType(): number {\n        return this._renderType;\n    }\n\n    toString(): string {\n        return \"ibindex:\" + this._startIdx + \" num:\" + this._numEle + \" key=\" + this._key;\n    }\n\n    renderSubmit(): number { return 1; }\n    releaseRender(): void { }\n}\n\n\n","import { VertexBuffer } from \"./VertexBuffer\";\n//vertex Layout cache pool\nexport interface VAElement { format: string, stride: number, shaderLocation: number };\nexport class VertexAttributeLayout {\n    static IPoint: number = 0;\n    static _pool: { [key: number]: VertexAttributeLayout } = {};\n\n    static getVertexLayoutByPool(vertexs: VertexBuffer[]) {\n        let pool =VertexAttributeLayout._pool;\n        for(var i in pool){\n            let layout = pool[i];\n            if(layout.deepthEqaul(vertexs)){\n                return layout\n            }\n        }\n        return new VertexAttributeLayout(vertexs);\n    }\n\n    /**\n     * vertex attribute byte size Array\n     */\n    attributeByteSize:Array<number>;\n\n    /**\n     * vertex Layout des\n     */\n    VAElements: Array<VAElement[]>;\n\n    instanceMode:Array<boolean>;\n    /**\n     * pool index\n     */\n    id: number;\n\n    \n\n    /**\n     * instance one VertexAttributeLayout\n     * @param vertexs \n     */\n    constructor(vertexs: VertexBuffer[]) {\n        this.VAElements = new Array();\n        this.attributeByteSize = new Array();\n        this.instanceMode = new Array();\n        //this.VAElements.length = vertexs.length;\n        for (let i = 0; i < vertexs.length; i++) {\n            let vaelements: VAElement[] = [];\n            let oneAttributeSize = vertexs[i].vertexDeclaration.vertexStride;\n            let vdec = vertexs[i].vertexDeclaration._VAElements;\n\n            for (let j = 0; j < vdec.length; j++) {\n                vaelements.push({ format: vdec[j].format, stride: vdec[j].stride, shaderLocation: vdec[j].shaderLocation });\n            }\n            this.attributeByteSize.push(oneAttributeSize);\n            this.VAElements.push(vaelements);\n            this.instanceMode.push(vertexs[i].instanceBuffer);\n        }\n        this.id = VertexAttributeLayout.IPoint;\n        VertexAttributeLayout._pool[VertexAttributeLayout.IPoint++] = this;\n    }\n\n    /**\n     * @internal\n     * @param vertexs \n     * @returns \n     */\n    deepthEqaul(vertexs: VertexBuffer[]): boolean {\n        if (vertexs.length != this.VAElements.length) {\n            return false;\n        }\n        for (var i = 0; i < vertexs.length; i++) {\n            let vaelemets = vertexs[i]._vertexDeclaration._VAElements;\n            let thisVaeEs = this.VAElements[i];\n            if (vaelemets.length != thisVaeEs.length) {\n                return false;\n            } else {\n                for (var ii = 0, nn = vaelemets.length; ii < nn; ii++) {\n                    let v0 = vaelemets[ii];\n                    let v1 = thisVaeEs[ii];\n                    if (v0.format != v1.format || v0.stride != v1.stride || v0.shaderLocation != v1.shaderLocation)\n                        return false;\n                }\n            }\n        }\n        return true;\n    }\n}","import { IndexBuffer } from \"../../RenderEngine/IndexBuffer\";\nimport { IRenderVertexState } from \"../../RenderEngine/RenderInterface/IRenderVertexState\";\nimport { VertexAttributeLayout } from \"../../RenderEngine/VertexAttributeLayout\";\nimport { VertexBuffer } from \"../../RenderEngine/VertexBuffer\";\nimport { LayaGL } from \"../../layagl/LayaGL\";\n\n\n\n/**\n * <code>BufferState</code> 类用于实现渲染所需的Buffer状态集合。\n */\nexport class BufferState {\n\tstatic _curBindedBufferState: BufferState;\n\t/**@private [只读]*/\n\tprotected _nativeVertexArrayObject: IRenderVertexState;\n\n\t/**@internal [只读]*/\n\t_bindedIndexBuffer: IndexBuffer;\n\n\t/**@internal */\n\t_vertexBuffers: VertexBuffer[];\n\n\t/**@internal */\n\tvertexlayout: VertexAttributeLayout;\n\n\t/**\n\t * 创建一个 <code>BufferState</code> 实例。\n\t */\n\tconstructor() {\n\t\tthis._nativeVertexArrayObject = LayaGL.renderEngine.createVertexState();\n\t}\n\n\tprotected applyVertexBuffers(): void {\n\t\tthis._nativeVertexArrayObject&&this._nativeVertexArrayObject.applyVertexBuffer(this._vertexBuffers);\n\t}\n\n\tprotected applyIndexBuffers(): void {\n\t\tthis._nativeVertexArrayObject&&this._nativeVertexArrayObject.applyIndexBuffer(this._bindedIndexBuffer);\n\t}\n\n\n\tapplyState(vertexBuffers: VertexBuffer[], indexBuffer: IndexBuffer | null) {\n\t\tthis.vertexlayout = VertexAttributeLayout.getVertexLayoutByPool(vertexBuffers);\n\t\tthis._vertexBuffers = vertexBuffers;\n\t\tthis._bindedIndexBuffer = indexBuffer;\n\t\tif(!this._nativeVertexArrayObject)\n\t\t\treturn;\n\t\tindexBuffer && indexBuffer.unbind();//清空绑定\n\t\tthis.bind();\n\t\tthis.applyVertexBuffers();\n\t\tthis.applyIndexBuffers();\n\t\tthis.unBind();\n\t\tindexBuffer && indexBuffer.unbind();//清空绑定\n\t\t\n\n\t}\n\n\t/**\n\t * @private\n\t */\n\tbind(): void {\n\t\tif(!this._nativeVertexArrayObject)\n\t\t\treturn;\n\t\tthis._nativeVertexArrayObject.bindVertexArray();\n\t\tBufferState._curBindedBufferState = this;\n\t}\n\n\t/**\n\t * @private\n\t */\n\tunBind(): void {\n\t\tif(!this._nativeVertexArrayObject)\n\t\t\treturn;\n\t\tif (BufferState._curBindedBufferState == this) {\n\t\t\tthis._nativeVertexArrayObject.unbindVertexArray();\n\t\t\tBufferState._curBindedBufferState = null;\n\t\t} else {\n\t\t\tthrow \"BufferState: must call bind() function first.\";\n\t\t}\n\t}\n\n\tisbind(): boolean {\n\t\treturn (BufferState._curBindedBufferState == this);\n\t}\n\n\tstatic clearbindBufferState() {\n\t\tLayaGL.renderEngine.unbindVertexState();\n\t\tBufferState._curBindedBufferState = null;\n\t}\n\n\t/**\n\t * @private\n\t */\n\tdestroy(): void {\n\t\tif(!this._nativeVertexArrayObject)\n\t\t\treturn;\n\t\tthis._nativeVertexArrayObject.destroy();\n\t\tthis._nativeVertexArrayObject = null;\n\t}\n}\n\n\n","import { LayaGL } from \"../layagl/LayaGL\";\nimport { BufferTargetType, BufferUsage } from \"./RenderEnum/BufferTargetType\";\nimport { IRenderBuffer } from \"./RenderInterface/IRenderBuffer\";\n\nexport class Buffer {\n\n\t_glBuffer: IRenderBuffer;\n\t_buffer: Float32Array|Uint16Array|Uint8Array|Uint32Array;\n\n\t_bufferType: number;\n\t_bufferUsage: number;\n\n\t_byteLength: number = 0; \n\n\tget bufferUsage(): number {\n\t\treturn this._bufferUsage;\n\t}\n\n\tconstructor(targetType: BufferTargetType, bufferUsageType: BufferUsage) {\n\t\tthis._glBuffer = LayaGL.renderEngine.createBuffer(targetType,bufferUsageType);\n\t\tthis._bufferType = targetType;\n\t\tthis._bufferUsage = bufferUsageType;\n\t}\n\n\t/**\n\t * @private\n\t */\n\tbind(): boolean {\n\t\treturn this._glBuffer.bindBuffer();\n\t}\n\n\tunbind():void{\n\t\treturn this._glBuffer.unbindBuffer();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tdestroy(): void {\n\t\tif (this._glBuffer) {\n\t\t\tthis._glBuffer.destroy();\n\t\t\tthis._glBuffer = null;\n\t\t}\n\t}\n}\n\n","import { BufferTargetType, BufferUsage } from \"./RenderEnum/BufferTargetType\";\nimport { IndexFormat } from \"./RenderEnum/IndexFormat\";\nimport { Buffer } from \"./Buffer\";\nimport { BufferState } from \"../webgl/utils/BufferState\";\n\nexport class IndexBuffer extends Buffer {\n    /** @internal */\n    protected _indexType: IndexFormat = IndexFormat.UInt16;\n    /** @internal */\n    protected _indexTypeByteCount: number;\n    /** @internal */\n    protected _indexCount: number;\n    constructor(targetType: BufferTargetType, bufferUsageType: BufferUsage) {\n        super(targetType, bufferUsageType);\n    }\n\n\n    _setIndexData(data: number): void;\n    _setIndexData(data: Uint32Array | Uint16Array | Uint8Array, bufferOffset: number): void;\n    _setIndexData(data: Uint32Array | Uint16Array | Uint8Array | number, bufferOffset?: number): void {\n        var curBufSta: BufferState = BufferState._curBindedBufferState;\n\n        if (curBufSta) {\n            if (curBufSta._bindedIndexBuffer === this) {\n                this._glBuffer.setDataLength(0);\n            } else {\n                curBufSta.unBind();//避免影响VAO\n                this.bind();\n                if (typeof data === \"number\")\n                    this._glBuffer.setDataLength(data);\n                else\n                    this._glBuffer.setData(data, bufferOffset);\n                curBufSta.bind();\n            }\n        } else {\n            this.bind();\n            if (typeof data === \"number\")\n                this._glBuffer.setDataLength(data);\n            else\n                this._glBuffer.setData(data, bufferOffset)\n        }\n    }\n}","import { RenderInfo } from \"../../renders/RenderInfo\";\nimport { BaseShader } from \"../shader/BaseShader\";\nimport { Buffer } from \"../../RenderEngine/Buffer\";\n\nexport class Buffer2D {\n\n    static FLOAT32: number = 4;\n    static SHORT: number = 2;\n\n    protected _maxsize: number = 0;\n\n    _upload: boolean = true;\n    protected _uploadSize: number = 0;\n    protected _bufferSize: number = 0;\n    protected _u8Array: Uint8Array = null;\t\t//反正常常要拷贝老的数据，所以保留这个可以提高效率\n    _floatArray32: Float32Array;\n    _uint32Array: Uint32Array;\n    _uint16Array: Uint16Array;\n\n    private constBuffer: Buffer;\n\n    get bufferLength(): number {\n        return this.constBuffer._buffer.byteLength;\n    }\n\n    set byteLength(value: number) {\n        this.setByteLength(value);\n    }\n\n    setByteLength(value: number): void {\n        if (this.constBuffer._byteLength !== value) {\n            value <= this._bufferSize || (this._resizeBuffer(value * 2 + 256, true));\n            this.constBuffer._byteLength = value;\n        }\n    }\n\n    /**\n     * 在当前的基础上需要多大空间，单位是byte\n     * @param\tsz\n     * @return  增加大小之前的写位置。单位是byte\n     */\n    needSize(sz: number): number {\n        var old: number = this.constBuffer._byteLength;\n        if (sz) {\n            var needsz: number = this.constBuffer._byteLength + sz;\n            needsz <= this._bufferSize || (this._resizeBuffer(needsz << 1, true));\n            this.constBuffer._byteLength = needsz;\n        }\n        return old;\n    }\n\n    constructor(buffer: Buffer) {\n        this.constBuffer = buffer;\n    }\n\n    getFloat32Array(): Float32Array {\n        if (!this._floatArray32) {\n            this._floatArray32 = new Float32Array(this.constBuffer._buffer.buffer);\n        }\n        return this._floatArray32;\n    }\n\n    protected _bufferData(): void {\n        this._maxsize = Math.max(this._maxsize, this.constBuffer._byteLength);\n        if (RenderInfo.loopCount % 30 == 0) {//每30帧缩小一下buffer\t。TODO 这个有问题。不知道_maxsize和_byteLength是怎么维护的，这里会导致重新分配64字节\n            if (this.constBuffer._buffer.byteLength > (this._maxsize + 64)) {\n                //_setGPUMemory(_buffer.byteLength);\n                this.constBuffer._buffer = this.constBuffer._buffer.slice(0, this._maxsize + 64);\n                this._bufferSize = this.constBuffer._buffer.byteLength;\n                this._checkArrayUse();\n                let buff = this.constBuffer._buffer.buffer;\n                ((this._bufferSize % 4) == 0) && (this._floatArray32 = new Float32Array(buff));\n                ((this._bufferSize % 4) == 0) && (this._uint32Array = new Uint32Array(buff));\n                this._uint16Array = new Uint16Array(buff);\n            }\n            this._maxsize = this.constBuffer._byteLength;\n        }\n        if (this._uploadSize < this.constBuffer._buffer.byteLength) {\n            this._uploadSize = this.constBuffer._buffer.byteLength;\n\n            this.constBuffer._glBuffer.setDataLength(this._uploadSize);\n        }\n        this.constBuffer._glBuffer.setData(new Uint8Array(this.constBuffer._buffer.buffer, 0, this.constBuffer._byteLength), 0);\n        this.constBuffer.unbind();\n    }\n\n    //TODO:coverage\n    protected _bufferSubData(offset: number = 0, dataStart: number = 0, dataLength: number = 0): void {\n        this._maxsize = Math.max(this._maxsize, this.constBuffer._byteLength);\n        if (RenderInfo.loopCount % 30 == 0) {\n            if (this.constBuffer._buffer.byteLength > (this._maxsize + 64)) {\n                //_setGPUMemory(_buffer.byteLength);\n                this.constBuffer._buffer = this.constBuffer._buffer.slice(0, this._maxsize + 64);\n                this._bufferSize = this.constBuffer._buffer.byteLength;\n                this._checkArrayUse();\n            }\n            this._maxsize = this.constBuffer._byteLength;\n        }\n\n        if (this._uploadSize < this.constBuffer._buffer.byteLength) {\n            this._uploadSize = this.constBuffer._buffer.byteLength;\n            this.constBuffer._glBuffer.setDataLength(this._uploadSize);\n            //_setGPUMemory(_uploadSize);\n        }\n\n        if (dataStart || dataLength) {\n            var subBuffer: ArrayBuffer = this.constBuffer._buffer.buffer.slice(dataStart, dataLength);\n            this.constBuffer._glBuffer.setData(subBuffer, offset);\n        } else {\n            this.constBuffer._glBuffer.setData(this.constBuffer._buffer.buffer, offset);\n        }\n    }\n\n    /**\n     * buffer重新分配了，继承类根据需要做相应的处理。\n     */\n    protected _checkArrayUse(): void {\n\n    }\n\n    // /**\n    //  * 给vao使用的 _bind_upload函数。不要与已经绑定的判断是否相同\n    //  * @return\n    //  */\n    // _bind_uploadForVAO(): boolean {\n    // \tif (!this._upload)\n    // \t\treturn false;\n    // \tthis._upload = false;\n    // \tthis.constBuffer.bind();\n    // \tthis._bufferData();\n    // \treturn true;\n    // }\n\n    _bind_upload(): boolean {\n        if (!this._upload)\n            return false;\n        this._upload = false;\n        this.constBuffer.bind();\n        this._bufferData();\n        return true;\n    }\n\n    //TODO:coverage\n    _bind_subUpload(offset: number = 0, dataStart: number = 0, dataLength: number = 0): boolean {\n        if (!this._upload)\n            return false;\n\n        this._upload = false;\n        this.constBuffer.bind();\n        this._bufferSubData(offset, dataStart, dataLength);\n        return true;\n    }\n\n    /**\n     * 重新分配buffer大小，如果nsz比原来的小则什么都不做。\n     * @param\tnsz\t\tbuffer大小，单位是byte。\n     * @param\tcopy\t是否拷贝原来的buffer的数据。\n     * @return\n     */\n    _resizeBuffer(nsz: number, copy: boolean): Buffer2D //是否修改了长度\n    {\n        var buff: any = this.constBuffer._buffer;\n        if (buff && nsz <= buff.byteLength)\n            return this;\n        var u8buf: Uint8Array = this._u8Array;\n        //_setGPUMemory(nsz);\n        if (copy && buff && buff.byteLength > 0) {\n            var oldU8Arr: Uint8Array = new Uint8Array(buff.buffer);\n            var newbuffer: Uint8Array = new Uint8Array(nsz);\n            newbuffer.set(oldU8Arr, 0);\n            buff = this.constBuffer._buffer = newbuffer;\n            this._u8Array = new Uint8Array(this.constBuffer._buffer.buffer);\n        } else {\n            var data = new ArrayBuffer(nsz);\n            buff = this.constBuffer._buffer = new Uint8Array(data);\n            this._u8Array = new Uint8Array(buff.buffer);\n        }\n        buff = this.constBuffer._buffer.buffer;\n        ((nsz % 4) == 0) && (this._floatArray32 = new Float32Array(buff));\n        ((nsz % 4) == 0) && (this._uint32Array = new Uint32Array(buff));\n        this._uint16Array = new Uint16Array(buff);\n        this._checkArrayUse();\n        this._upload = true;\n        this._bufferSize = buff.byteLength;\n        return this;\n    }\n\n    append(data: any): void {\n        this._upload = true;\n        var byteLen: number, n: any;\n        byteLen = data.byteLength;\n        if (data instanceof Uint8Array) {\n            this._resizeBuffer(this.constBuffer._byteLength + byteLen, true);\n            n = new Uint8Array(this.constBuffer._buffer.buffer, this.constBuffer._byteLength);\n        } else if (data instanceof Uint16Array) {\n            this._resizeBuffer(this.constBuffer._byteLength + byteLen, true);\n            n = new Uint16Array(this.constBuffer._buffer.buffer, this.constBuffer._byteLength);\n        } else if (data instanceof Float32Array) {\n            this._resizeBuffer(this.constBuffer._byteLength + byteLen, true);\n            n = new Float32Array(this.constBuffer._buffer.buffer, this.constBuffer._byteLength);\n        }\n        n.set(data, 0);\n        this.constBuffer._byteLength += byteLen;\n        this._checkArrayUse();\n    }\n\n    /**\n     * 附加Uint16Array的数据。数据长度是len。byte的话要*2\n     * @param\tdata\n     * @param\tlen\n     */\n    appendU16Array(data: Uint16Array, len: number): void {\n        this._resizeBuffer(this.constBuffer._byteLength + len * 2, true);\n        //(new Uint16Array(_buffer, _byteLength, len)).set(data.slice(0, len));\n        //下面这种写法比上面的快多了\n        var u: Uint16Array = new Uint16Array(this.constBuffer._buffer.buffer, this.constBuffer._byteLength, len);\t//TODO 怎么能不用new\n        if (len == 6) {\n            u[0] = data[0]; u[1] = data[1]; u[2] = data[2];\n            u[3] = data[3]; u[4] = data[4]; u[5] = data[5];\n        } else if (len >= 100) {\n            u.set(new Uint16Array(data.buffer, 0, len));\n        } else {\n            for (var i: number = 0; i < len; i++) {\n                u[i] = data[i];\n            }\n        }\n        this.constBuffer._byteLength += len * 2;\n        this._checkArrayUse();\n    }\n\n    //TODO:coverage\n    getBuffer(): ArrayBuffer {\n        return this.constBuffer._buffer.buffer;\n    }\n\n    setNeedUpload(): void {\n        this._upload = true;\n    }\n\n\n    //TODO:coverage\n    subUpload(offset: number = 0, dataStart: number = 0, dataLength: number = 0): boolean {\n        var scuess: boolean = this._bind_subUpload();\n        this.constBuffer.unbind();\n        //gl.bindBuffer(this._bufferType, null);\n        //if (this._bufferType == gl.ARRAY_BUFFER) Buffer._bindedVertexBuffer = null;\n        //if (this._bufferType == gl.ELEMENT_ARRAY_BUFFER) Buffer._bindedIndexBuffer = null;\n        BaseShader.activeShader = null\n        return scuess;\n    }\n\n    _disposeResource(): void {\n        this._upload = true;\n        this._uploadSize = 0;\n        this._floatArray32 = null;\n        this._uint32Array = null;\n        this._u8Array = null;\n    }\n\n\n    /**\n     * 清理数据。保留ArrayBuffer\n     */\n    clear(): void {\n        this.constBuffer._byteLength = 0;\n        this._upload = true;\n    }\n}\n\n\n\n","import { IndexBuffer } from \"../../RenderEngine/IndexBuffer\";\nimport { BufferTargetType, BufferUsage } from \"../../RenderEngine/RenderEnum/BufferTargetType\";\nimport { Buffer2D } from \"./Buffer2D\";\n\nexport class IndexBuffer2D extends IndexBuffer {\n    static create: Function = function (bufferUsage: number = BufferUsage.Static): IndexBuffer2D {\n        return new IndexBuffer2D(bufferUsage);\n    }\n\n    protected _uint16Array: Uint16Array;\n    buffer2D:Buffer2D;\n    constructor(bufferUsage: number = BufferUsage.Static) {\n        super(BufferTargetType.ELEMENT_ARRAY_BUFFER,bufferUsage);\n        this.buffer2D = new Buffer2D(this);\n        this._bufferUsage = bufferUsage;\n        this._buffer = new Uint8Array(8);\n    }\n    /**\n     * @override\n     */\n    // protected _checkArrayUse(): void {\n    //     this._uint16Array && (this._uint16Array = new Uint16Array(this._buffer));\n    // }\n\n    // getUint16Array(): Uint16Array {\n    //     return this._uint16Array || (this._uint16Array = new Uint16Array(this._buffer));\n    // }\n\n    /**\n     * @inheritDoc\n     * @override\n     */\n    _bindForVAO(): void {\n        \n        this._glBuffer.bindBuffer()\n    }\n\n    destory(): void {\n        this._uint16Array = null;\n        this._buffer = null;\n    }\n\n    disposeResource(): void {\n        this.buffer2D._disposeResource();\n    }\n}\n\n","import { BufferTargetType, BufferUsage } from \"./RenderEnum/BufferTargetType\";\nimport { Buffer } from \"./Buffer\";\nimport { VertexDeclaration } from \"./VertexDeclaration\";\n\nexport class VertexBuffer extends Buffer {\n\tprivate _instanceBuffer: boolean = false;\n\t/** @internal */\n\t_vertexDeclaration: VertexDeclaration | null = null;\n\n\t/**\n\t * 获取顶点声明。\n\t */\n\tget vertexDeclaration(): VertexDeclaration | null {\n\t\treturn this._vertexDeclaration;\n\t}\n\n\tset vertexDeclaration(value: VertexDeclaration | null) {\n\t\tthis._vertexDeclaration = value;\n\t}\n\tget instanceBuffer(): boolean {\n\t\treturn this._instanceBuffer;\n\t}\n\n\tset instanceBuffer(value: boolean) {\n\t\tthis._instanceBuffer = value;\n\t}\n\tconstructor(targetType: BufferTargetType, bufferUsageType: BufferUsage) {\n\t\tsuper(targetType, bufferUsageType);\n\t}\n}","import { BufferTargetType, BufferUsage } from \"../../RenderEngine/RenderEnum/BufferTargetType\";\nimport { VertexBuffer } from \"../../RenderEngine/VertexBuffer\";\nimport { Buffer2D } from \"./Buffer2D\";\n\nexport class VertexBuffer2D extends VertexBuffer {\n    static create: Function = function (vertexStride: number, bufferUsage: number = BufferUsage.Dynamic): VertexBuffer2D {\n        return new VertexBuffer2D(vertexStride, bufferUsage);\n    }\n\n    buffer2D: Buffer2D;\n\n    private _vertexStride: number;\n\n    get vertexStride(): number {\n        return this._vertexStride;\n    }\n\n    constructor(vertexStride: number, bufferUsage: number) {\n        super(BufferTargetType.ARRAY_BUFFER, bufferUsage);\n        this.buffer2D = new Buffer2D(this);\n        this._vertexStride = vertexStride;\n        this._bufferUsage = bufferUsage;\n        //this._buffer = new Uint8Array(8);\n        //this._floatArray32 = new Float32Array(this._buffer);\n        //this._uint32Array = new Uint32Array(this._buffer);\n    }\n\n    getFloat32Array(): Float32Array {\n        return this.buffer2D._floatArray32;\n    }\n\n    get _floatArray32() {\n        return this.buffer2D._floatArray32;\n    }\n\n    get _uint32Array() {\n        return this.buffer2D._uint32Array;\n    }\n\n    /**\n     * 在当前位置插入float数组。\n     * @param\tdata\n     * @param\tpos\n     */\n    appendArray(data: any[]): void {\n        var oldoff: number = this._byteLength >> 2;\n        this.buffer2D.setByteLength(this._byteLength + data.length * 4);\n        var vbdata: Float32Array = this.getFloat32Array();\n        vbdata.set(data, oldoff);\n        this.buffer2D._upload = true;\n    }\n    // \t/**\n    // \t * @override\n    // \t */\n    // \t protected _checkArrayUse(): void {\n    //     this._floatArray32 && (this._floatArray32 = new Float32Array(this._buffer));\n    //     this._uint32Array && (this._uint32Array = new Uint32Array(this._buffer));\n    // }\n\n    //只删除buffer，不disableVertexAttribArray\n    deleteBuffer(): void {\n        this.buffer2D._disposeResource();\n    }\n\n    /**\n     * @inheritDoc\n     * @override\n     */\n    _bindForVAO(): void {\n        this._glBuffer.bindBuffer();\n    }\n    /**\n     * @override\n     * override\n     */\n    destroy(): void {\n        super.destroy();\n        this._byteLength = 0;\n        this.buffer2D._upload = true;\n        this._buffer = null;\n    }\n\n}\n\n\n","import { BufferUsage } from \"../../RenderEngine/RenderEnum/BufferTargetType\";\nimport { Config } from \"./../../../Config\";\nimport { BufferState } from \"./BufferState\";\nimport { IndexBuffer2D } from \"./IndexBuffer2D\";\nimport { VertexBuffer2D } from \"./VertexBuffer2D\";\n\n/**\n * Mesh2d只是保存数据。描述attribute用的。本身不具有渲染功能。\n */\nexport class Mesh2D {\n    _stride = 0;\t\t\t//顶点结构大小。每个mesh的顶点结构是固定的。\n    vertNum = 0;\t\t\t\t//当前的顶点的个数\n    indexNum = 0;\t\t\t//实际index 个数。例如一个三角形是3个。由于ib本身可能超过实际使用的数量，所以需要一个indexNum\n    protected _applied = false;\t//是否已经设置给webgl了\n    _vb: VertexBuffer2D;\t\t\t//vb和ib都可能需要在外部修改，所以public\n    _ib: IndexBuffer2D;\n    private _vao: BufferState;\t\t\t\t\t\t//webgl VAO对象。需要WebGL扩展。\n    private static _gvaoid = 0;\n    private _attribInfo: any[];\t\t\t//保存起来的属性定义数组。\n    protected _quadNum = 0;\n    //public static var meshlist:Array = [];\t//活着的mesh对象列表。\n    canReuse = false;\t//用完以后，是删除还是回收。\n\n    /**\n     * @param\tstride\n     * @param\tvballoc  vb预分配的大小。主要是用来提高效率。防止不断的resizebfufer\n     * @param\tiballoc\n     */\n    constructor(stride: number, vballoc: number, iballoc: number) {\n        this._stride = stride;\n        this._vb = new VertexBuffer2D(stride, BufferUsage.Dynamic);\n        if (vballoc) {\n            this._vb.buffer2D._resizeBuffer(vballoc, false);\n        } else {\n            Config.webGL2D_MeshAllocMaxMem && this._vb.buffer2D._resizeBuffer(64 * 1024 * stride, false);\n        }\n        this._ib = new IndexBuffer2D();\n        if (iballoc) {\n            this._ib.buffer2D._resizeBuffer(iballoc, false);\n        }\n        //meshlist.push(this);\n    }\n\n    /**\n     * 直接创建一个固定的ib。按照固定四边形的索引。\n     * @param\tvar QuadNum\n     */\n    createQuadIB(QuadNum: number): void {\n        this._quadNum = QuadNum;\n        this._ib.buffer2D._resizeBuffer(QuadNum * 6 * 2, false);\t//short类型\n        this._ib.buffer2D.byteLength = this._ib.buffer2D.bufferLength;\t//这个我也不知道是什么意思\n\n        var bd: Uint16Array = this._ib.buffer2D._uint16Array;\n        var idx: number = 0;\n        var curvert: number = 0;\n        for (var i: number = 0; i < QuadNum; i++) {\n            bd[idx++] = curvert;\n            bd[idx++] = curvert + 2;\n            bd[idx++] = curvert + 1;\n            bd[idx++] = curvert;\n            bd[idx++] = curvert + 3;\n            bd[idx++] = curvert + 2;\n            curvert += 4;\n        }\n\n        this._ib.buffer2D.setNeedUpload();\n    }\n\n    /**\n     * 设置mesh的属性。每3个一组，对应的location分别是0,1,2...\n     * 含义是：type,size,offset\n     * 不允许多流。因此stride是固定的，offset只是在一个vertex之内。\n     * @param\tattribs\n     */\n    setAttributes(attribs: any[]): void {\n        this._attribInfo = attribs;\n        if (this._attribInfo.length % 3 != 0) {\n            throw 'Mesh2D setAttributes error!';\n        }\n    }\n\n    /**\n     * 初始化VAO的配置，只需要执行一次。以后使用的时候直接bind就行\n     * @param\tgl\n     */\n    private configVAO(): void {\n        if (this._applied)\n            return;\n        this._applied = true;\n        if (!this._vao) {\n            //_vao = __JS__('gl.createVertexArray();');\n            this._vao = new BufferState();\n            //_vao.dbgid = _gvaoid++;\n        }\n        this._vao.applyState([this._vb], this._ib);\n        // var attribNum: number = this._attribInfo.length / 3;\n        // var idx: number = 0;\n        // for (var i: number = 0; i < attribNum; i++) {\n        //     var _size: number = this._attribInfo[idx + 1];\n        //     var _type: number = this._attribInfo[idx];\n        //     var _off: number = this._attribInfo[idx + 2];\n        //     gl.enableVertexAttribArray(i);\n        //     gl.vertexAttribPointer(i, _size, _type, false, this._stride, _off); //注意 normalize都设置为false了，想必没人要用这个功能把。\n        //     idx += 3;\n        // }\n        // this._vao.unBind();\n        //gl.bindVertexArray(null);\n    }\n\n    /**\n     * 应用这个mesh\n     * @param\tgl\n     */\n    useMesh(): void {\n        if ((this._vao && !this._vao.isbind()) || this._ib.buffer2D._upload || this._vb.buffer2D._upload) {\n            BufferState._curBindedBufferState && BufferState._curBindedBufferState.unBind();\n        }\n        //要先bind，在bufferData\n        this._applied || this.configVAO();\n        this._ib.buffer2D._bind_upload();\n        this._vb.buffer2D._bind_upload();\n        this._vao.bind();\n    }\n\n    // //TODO:coverage\n    // getEleNum(): number {\n    //     return this._ib.buffer2D.getBuffer().byteLength / 2;\n    // }\n\n    /**\n     * 子类实现。用来把自己放到对应的回收池中，以便复用。\n     */\n    releaseMesh(): void { }\n\n    /**\n     * 释放资源。\n     */\n    destroy(): void {\n    }\n\n    /**\n     * 清理vb数据\n     */\n    clearVB(): void {\n        this._vb.buffer2D.clear();\n    }\n}\n\n","import { VertexDeclaration } from \"../../RenderEngine/VertexDeclaration\";\nimport { VertexElement } from \"../../renders/VertexElement\";\nimport { VertexElementFormat } from \"../../renders/VertexElementFormat\";\nimport { IndexBuffer2D } from \"./IndexBuffer2D\";\nimport { Mesh2D } from \"./Mesh2D\";\nimport { VertexBuffer2D } from \"./VertexBuffer2D\";\n\n/**\n * drawImage，fillRect等会用到的简单的mesh。每次添加必然是一个四边形。\n */\nexport class MeshQuadTexture extends Mesh2D {\n\tstatic const_stride: number = 24;// 48;  24是不带clip的\n\tprivate static _fixib: IndexBuffer2D;\n\tprivate static _maxIB: number = 16 * 1024;\n\tprivate static _fixattriInfo: any[];\n\tprivate static _POOL: any[] = [];\n\t//private static var _num;\n\tstatic VertexDeclarition: VertexDeclaration;\n\tstatic __int__(): void {\n\t\t//var gl: WebGLRenderingContext = LayaGL.instance;\n\t\tMeshQuadTexture._fixattriInfo = [5126/*gl.FLOAT*/, 4, 0,\t//pos,uv\n\t\t\t5121/*gl.UNSIGNED_BYTE*/, 4, 16,\t//color alpha\n\t\t\t5121/*gl.UNSIGNED_BYTE*/, 4, 20];\n\t}\n\n\n\tconstructor() {\n\t\tsuper(MeshQuadTexture.const_stride, 4, 4);\t//x,y,u,v,rgba\n\t\tthis.canReuse = true;\n\t\tthis.setAttributes(MeshQuadTexture._fixattriInfo);\n\t\tif (!MeshQuadTexture._fixib) {\n\t\t\tthis.createQuadIB(MeshQuadTexture._maxIB);\t//每个quad 4个顶点。正好达到64k的索引。\n\t\t\tMeshQuadTexture._fixib = this._ib;\n\t\t} else {\n\t\t\tthis._ib = MeshQuadTexture._fixib;\n\t\t\tthis._quadNum = MeshQuadTexture._maxIB;\n\t\t}\n\t\tif (!MeshQuadTexture.VertexDeclarition)\n\t\t\tMeshQuadTexture.VertexDeclarition = new VertexDeclaration(24, [\n\t\t\t\tnew VertexElement(0, VertexElementFormat.Vector4, 0),\n\t\t\t\tnew VertexElement(16, VertexElementFormat.Byte4, 1),\n\t\t\t\tnew VertexElement(20, VertexElementFormat.Byte4, 2),\n\t\t\t])\n\t\tthis._vb.vertexDeclaration = MeshQuadTexture.VertexDeclarition;\n\t}\n\n\t/**\n\t * \n\t */\n\tstatic getAMesh(mainctx: boolean): MeshQuadTexture {\n\t\t//console.log('getmesh');\n\t\tvar ret: MeshQuadTexture = null;\n\t\tif (MeshQuadTexture._POOL.length) {\n\t\t\tret = MeshQuadTexture._POOL.pop();\n\t\t} else\n\t\t\tret = new MeshQuadTexture();\n\t\t// 先分配64k顶点的空间，这样可以避免浪费内存，否则后面增加内存的时候是成倍增加的，当快超过64k的时候，直接变成了128k\n\t\tmainctx && ret._vb.buffer2D._resizeBuffer(64 * 1024 * MeshQuadTexture.const_stride, false);\n\t\treturn ret;\n\t}\n\n\t/**\n\t * 把本对象放到回收池中，以便getMesh能用。\n\t * @override\n\t */\n\treleaseMesh(): void {\n\t\tthis._vb.buffer2D.setByteLength(0);\n\t\tthis.vertNum = 0;\n\t\tthis.indexNum = 0;\n\t\t//_applied = false;\n\t\tMeshQuadTexture._POOL.push(this);\n\t}\n\t/**\n\t * @override\n\t */\n\tdestroy(): void {\n\t\t//_ib.destroy(); ib是公用的。\n\t\tthis._vb.destroy();\n\t\tthis._vb.deleteBuffer();\n\t}\n\n\t/**\n\t * \n\t * @param pos 顶点坐标\n\t * @param uv 纹理坐标\n\t * @param color 顶点颜色\n\t * @param useTex 是否使用贴图。false的话是给fillRect用的\n\t */\n\taddQuad(pos: ArrayLike<number>, uv: ArrayLike<number>, color: number, useTex: boolean): void {\n\t\tvar vb: VertexBuffer2D = this._vb;\n\t\tvar vpos: number = (vb._byteLength >> 2);\t//float数组的下标\n\t\t//x,y,u,v,rgba\n\t\tvb.buffer2D.setByteLength((vpos + MeshQuadTexture.const_stride) << 2); //是一个四边形的大小，也是这里填充的大小\n\t\tvar vbdata: Float32Array = vb._floatArray32 || vb.getFloat32Array();\n\t\tvar vbu32Arr: Uint32Array = vb._uint32Array;\n\t\tvar cpos: number = vpos;\n\t\tvar useTexVal: number = useTex ? 0xff : 0;\n\t\tvbdata[cpos++] = pos[0]; vbdata[cpos++] = pos[1]; vbdata[cpos++] = uv[0]; vbdata[cpos++] = uv[1]; vbu32Arr[cpos++] = color; vbu32Arr[cpos++] = useTexVal;\n\t\tvbdata[cpos++] = pos[2]; vbdata[cpos++] = pos[3]; vbdata[cpos++] = uv[2]; vbdata[cpos++] = uv[3]; vbu32Arr[cpos++] = color; vbu32Arr[cpos++] = useTexVal;\n\t\tvbdata[cpos++] = pos[4]; vbdata[cpos++] = pos[5]; vbdata[cpos++] = uv[4]; vbdata[cpos++] = uv[5]; vbu32Arr[cpos++] = color; vbu32Arr[cpos++] = useTexVal;\n\t\tvbdata[cpos++] = pos[6]; vbdata[cpos++] = pos[7]; vbdata[cpos++] = uv[6]; vbdata[cpos++] = uv[7]; vbu32Arr[cpos++] = color; vbu32Arr[cpos++] = useTexVal;\n\t\tvb.buffer2D._upload = true;\n\t}\n}\n\n","import { Matrix } from \"../../maths/Matrix\";\nimport { VertexDeclaration } from \"../../RenderEngine/VertexDeclaration\";\nimport { VertexElement } from \"../../renders/VertexElement\";\nimport { VertexElementFormat } from \"../../renders/VertexElementFormat\";\nimport { IndexBuffer2D } from \"./IndexBuffer2D\";\nimport { Mesh2D } from \"./Mesh2D\";\nimport { VertexBuffer2D } from \"./VertexBuffer2D\";\n\n/**\n * 与MeshQuadTexture基本相同。不过index不是固定的\n */\nexport class MeshTexture extends Mesh2D {\n    static const_stride: number = 24;\n    private static _fixattriInfo: any[];\n    private static _POOL: any[] = [];\n\n    static VertexDeclarition: VertexDeclaration;\n\n\n\n    static __init__(): void {\n        MeshTexture._fixattriInfo = [5126/*gl.FLOAT*/, 4, 0,\t//pos,uv\n            5121/*gl.UNSIGNED_BYTE*/, 4, 16,\t//color alpha\n            5121/*gl.UNSIGNED_BYTE*/, 4, 20];\n    }\n\n    constructor() {\n        super(MeshTexture.const_stride, 4, 4);\t//x,y,u,v,rgba\n        this.canReuse = true;\n        this.setAttributes(MeshTexture._fixattriInfo);\n        if (!MeshTexture.VertexDeclarition)\n            MeshTexture.VertexDeclarition = new VertexDeclaration(24, [\n                new VertexElement(0, VertexElementFormat.Vector4, 0),\n                new VertexElement(16, VertexElementFormat.Byte4, 1),\n                new VertexElement(20, VertexElementFormat.Byte4, 2),\n            ])\n        this._vb.vertexDeclaration = MeshTexture.VertexDeclarition;\n\n    }\n\n    /**\n     * \n     */\n    static getAMesh(mainctx: boolean): MeshTexture {\n        //console.log('getmesh');\n        var ret: MeshTexture;\n        if (MeshTexture._POOL.length) {\n            ret = MeshTexture._POOL.pop();\n        }\n        else ret = new MeshTexture();\n        mainctx && ret._vb.buffer2D._resizeBuffer(64 * 1024 * MeshTexture.const_stride, false);\n        return ret;\n    }\n\n    /**\n     * 增加四个顶点\n     * @param vertices \n     * @param uvs \n     * @param idx \n     * @param matrix \n     * @param rgba \n     */\n    addData(vertices: Float32Array, uvs: Float32Array, idx: Uint16Array, matrix: Matrix, rgba: number): void {\n        //vb\n        var vb: VertexBuffer2D = this._vb;\n        var ib: IndexBuffer2D = this._ib;\n        var vertsz: number = vertices.length >> 1;\n        var startpos: number = vb.buffer2D.needSize(vertsz * MeshTexture.const_stride);//vb的起点。\t\t\t\n        var f32pos: number = startpos >> 2;\n        var vbdata: Float32Array = vb._floatArray32 || vb.getFloat32Array();\n        var vbu32Arr: Uint32Array = vb._uint32Array;\n        var ci: number = 0;\n        var m00: number = matrix.a;\n        var m01: number = matrix.b;\n        var m10: number = matrix.c;\n        var m11: number = matrix.d;\n        var tx: number = matrix.tx;\n        var ty: number = matrix.ty;\n        var i: number = 0;\n        //var clipinfo:Array = ctx.getTransedClipInfo();\n        for (i = 0; i < vertsz; i++) {\n            var x: number = vertices[ci], y: number = vertices[ci + 1];\n            vbdata[f32pos] = x * m00 + y * m10 + tx;\n            vbdata[f32pos + 1] = x * m01 + y * m11 + ty;\n            vbdata[f32pos + 2] = uvs[ci];\n            vbdata[f32pos + 3] = uvs[ci + 1];\n            vbu32Arr[f32pos + 4] = rgba;\n            vbu32Arr[f32pos + 5] = 0xff;\n            f32pos += 6;\n            //裁剪信息。\n            //vbdata[f32pos++] = clipinfo[2] ; vbdata[f32pos++] = clipinfo[3]; vbdata[f32pos++] = clipinfo[4]; vbdata[f32pos++] = clipinfo[5];//cliprect的方向\n            //vbdata[f32pos++] = clipinfo[0]; vbdata[f32pos++] = clipinfo[1];\t//cliprect的位置\n            ci += 2;\n        }\n        vb.buffer2D.setNeedUpload();\n\n        var vertN: number = this.vertNum;\n        var sz: number = idx.length;\n        var stib: number = ib.buffer2D.needSize(idx.byteLength);\n        var cidx: Uint16Array = ib.buffer2D._uint16Array;\n        //var cidx:Uint16Array = new Uint16Array(__JS__('ib._buffer'), stib);\n        var stibid: number = stib >> 1;\t// indexbuffer的起始位置\n        if (vertN > 0) {\n            var end: number = stibid + sz;\n            var si: number = 0;\n            for (i = stibid; i < end; i++, si++) {\n                cidx[i] = idx[si] + vertN;\n            }\n        } else {\n            cidx.set(idx, stibid);\n        }\n        ib.buffer2D.setNeedUpload();\n\n        this.vertNum += vertsz;\n        this.indexNum += idx.length;\n    }\n\n\t\t/**\n\t\t * 把本对象放到回收池中，以便getMesh能用。\n\t\t * @override\n\t\t */\n\t\t /*override*/ releaseMesh(): void {\n        this._vb.buffer2D.setByteLength(0);\n        this._ib.buffer2D.setByteLength(0);\n        this.vertNum = 0;\n        this.indexNum = 0;\n        //_applied = false;\n        MeshTexture._POOL.push(this);\n    }\n/**\n * @override\n */\n\t\t /*override*/ destroy(): void {\n        this._ib.destroy();\n        this._vb.destroy();\n        this._ib.disposeResource();\n        this._vb.deleteBuffer();\n    }\n}\n\n","import { VertexDeclaration } from \"../../RenderEngine/VertexDeclaration\";\nimport { VertexElement } from \"../../renders/VertexElement\";\nimport { VertexElementFormat } from \"../../renders/VertexElementFormat\";\nimport { Context } from \"../../resource/Context\";\nimport { Mesh2D } from \"./Mesh2D\";\n\n/**\n * 用来画矢量的mesh。顶点格式固定为 x,y,rgba\n */\nexport class MeshVG extends Mesh2D {\n    static const_stride: number = 12;// 36;\n    private static _fixattriInfo: any[];\n    private static _POOL: any[] = [];\n    static vertexDeclaration: VertexDeclaration = null;\n\n    static __init__(): void {\n        MeshVG._fixattriInfo = [5126/*gl.FLOAT*/, 2, 0,\t//x,y\n            5121/*gl.UNSIGNED_BYTE*/, 4, 8];\n    }\n\n    constructor() {\n        super(MeshVG.const_stride, 4, 4);\t//x,y,rgba\n        this.canReuse = true;\n        this.setAttributes(MeshVG._fixattriInfo);\n        if (!MeshVG.vertexDeclaration)\n            MeshVG.vertexDeclaration = new VertexDeclaration(12, [\n                new VertexElement(0, VertexElementFormat.Vector2, 0),\n                new VertexElement(8, VertexElementFormat.Byte4, 1),\n            ]);\n        this._vb.vertexDeclaration = MeshVG.vertexDeclaration;\n    }\n\n    static getAMesh(mainctx: boolean): MeshVG {\n        //console.log('getmeshvg');\n        var ret: MeshVG;\n        if (MeshVG._POOL.length) {\n            ret = MeshVG._POOL.pop();\n        } else\n            ret = new MeshVG();\n        mainctx && ret._vb.buffer2D._resizeBuffer(64 * 1024 * MeshVG.const_stride, false);\n        return ret;\n    }\n\n    /**\n     * 往矢量mesh中添加顶点和index。会把rgba和points在mesh中合并。\n     * @param\tpoints\t顶点数组，只包含x,y。[x,y,x,y...]\n     * @param\trgba\trgba颜色\n     * @param\tib\t\tindex数组。\n     */\n    addVertAndIBToMesh(ctx: Context, points: any[], rgba: number, ib: any[]): void {\n        var startpos: number = this._vb.buffer2D.needSize(points.length / 2 * MeshVG.const_stride);//vb的起点。\n        var f32pos: number = startpos >> 2;\n        var vbdata: Float32Array = this._vb._floatArray32 || this._vb.getFloat32Array();\n        var vbu32Arr: Uint32Array = this._vb._uint32Array;\n        var ci: number = 0;\n        //vb\n        //var clipinfo:Array = ctx.getTransedClipInfo();\n        var sz: number = points.length / 2;\n        for (var i: number = 0; i < sz; i++) {\n            vbdata[f32pos++] = points[ci]; vbdata[f32pos++] = points[ci + 1]; ci += 2;\n            vbu32Arr[f32pos++] = rgba;\n            /*\n            //裁剪信息。\n            vbdata[f32pos++] = clipinfo[2] ; vbdata[f32pos++] = clipinfo[3]; vbdata[f32pos++] = clipinfo[4]; vbdata[f32pos++] = clipinfo[5];//cliprect的方向\n            vbdata[f32pos++] = clipinfo[0]; vbdata[f32pos++] = clipinfo[1]; //cliprect的位置\n            */\n        }\n        this._vb.buffer2D.setNeedUpload();\n\n        //ib\n        //TODO 现在这种添加数据的方法效率非常低。而且会引起大量的gc\n        this._ib.buffer2D.append(new Uint16Array(ib));\n        this._ib.buffer2D.setNeedUpload();\n\n        this.vertNum += sz;\n        this.indexNum += ib.length;\n    }\n\n    /**\n     * 把本对象放到回收池中，以便getMesh能用。\n     * @override\n     */\n    releaseMesh(): void {\n        this._vb.buffer2D.setByteLength(0);\n        this._ib.buffer2D.setByteLength(0);\n        this.vertNum = 0;\n        this.indexNum = 0;\n        //_applied = false;\n        MeshVG._POOL.push(this);\n    }\n    /**\n     * @override\n     */\n    destroy(): void {\n        this._ib.destroy();\n        this._vb.destroy();\n        this._ib.disposeResource();\n        this._vb.deleteBuffer();\n    }\n}\n\n","export class NativeWebGLCacheAsNormalCanvas {\n    _nativeObj: any;\n    _context: any;\n    constructor(ctx: any, sp: any)\n    {\n        this._context = ctx;\n        this._nativeObj = new (window as any)._conchWebGLCacheAsNormalCanvas(ctx._nativeObj, 0);\n    }\n    startRec(): void {\n        this._nativeObj.startRec();\n    }\n    endRec(): void {\n        this._nativeObj.endRec();\n    }\n    isCacheValid(): boolean {\n        return this._nativeObj.isCacheValid();\n    }  \n    isTextNeedRestore(): boolean {\n        return this._nativeObj.isTextNeedRestore();\n    }\n    get context() {\n        return this._context;\n    }\n}\n","import { Sprite } from \"../../display/Sprite\"\nimport { Matrix } from \"../../maths/Matrix\"\nimport { Context } from \"../../resource/Context\"\nimport { Submit } from \"../submit/Submit\"\nimport { SubmitBase } from \"../submit/SubmitBase\"\nimport { Mesh2D } from \"../utils/Mesh2D\"\nimport { MeshQuadTexture } from \"../utils/MeshQuadTexture\"\nimport { MeshTexture } from \"../utils/MeshTexture\"\nimport { MeshVG } from \"../utils/MeshVG\"\nimport { NativeWebGLCacheAsNormalCanvas } from \"./NativeWebGLCacheAsNormalCanvas\"\n\n/**\n * 对象 cacheas normal的时候，本质上只是想把submit缓存起来，以后直接执行\n * 为了避免各种各样的麻烦，这里采用复制相应部分的submit的方法。执行环境还是在原来的context中\n * 否则包括clip等都非常难以处理\n */\nexport class WebGLCacheAsNormalCanvas {\n    submitStartPos: number = 0;\t// 对应的context的submit的开始的地方\n    submitEndPos: number = 0;\n    context: Context;\n    touches: any[] = [];\t\t//记录的文字信息。cacheas normal的话，文字要能正确touch\n    submits: any[] = [];\t\t// 从context中剪切的submit\n    sprite: Sprite|null = null;\t// 对应的sprite对象\n\n    // submit需要关联稳定独立的mesh。所以这里要创建自己的mesh对象\n    /**@internal */\n    _mesh: MeshQuadTexture;\t\t\t//用Mesh2D代替_vb,_ib. 当前使用的mesh\n    private _pathMesh: MeshVG;\t\t\t//矢量专用mesh。\n    private _triangleMesh: MeshTexture;\t//drawTriangles专用mesh。由于ib不固定，所以不能与_mesh通用\n    meshlist: any[] = [];\t\t\t//本context用到的mesh\n\n    // 原始context的原始值\n    private _oldMesh: MeshQuadTexture|null;\n    private _oldPathMesh: MeshVG|null;\n    private _oldTriMesh: MeshTexture|null;\n    private _oldMeshList: any[];\n\n    // cache的时候对应的clip\n    private cachedClipInfo: Matrix = new Matrix();\t// 用来判断是否需要把cache无效\n    //private var oldMatrix:Matrix = null;\t\t\t\t//本地画的时候完全不应用矩阵，所以需要先保存老的，以便恢复\t\t这样会丢失缩放信息，导致文字模糊，所以不用这种方式了\n    private oldTx: number = 0;\n    private oldTy: number = 0;\n    private static matI: Matrix = new Matrix();\n\n    // 创建这个canvas的时候对应的矩阵的逆矩阵。因为要保留矩阵的缩放信息。所以采用逆矩阵的方法。\n    invMat: Matrix = new Matrix();\n\n    constructor(ctx: Context, sp: Sprite) {\n        this.context = ctx;\n        this.sprite = sp;\n        ctx._globalClipMatrix.copyTo(this.cachedClipInfo);\n    }\n\n    startRec(): void {\n\t\tlet context = this.context;\n        // 如果有文字优化，这里要先提交一下\n        if (context._charSubmitCache && context._charSubmitCache._enable) {\n            context._charSubmitCache.enable(false, context);\n            context._charSubmitCache.enable(true, context);\n        }\n        context._incache = true;\n        this.touches.length = 0;\n        //记录需要touch的文字资源\n        ((<any>context)).touches = this.touches;\n        context._globalClipMatrix.copyTo(this.cachedClipInfo);\n\n        this.submits.length = 0;\n        this.submitStartPos = context._submits._length;\n\n        // 先把之前的释放掉\n        for (var i: number = 0, sz: number = this.meshlist.length; i < sz; i++) {\n            var curm: Mesh2D = this.meshlist[i];\n            curm.canReuse ? (curm.releaseMesh()) : (curm.destroy());\n        }\n        this.meshlist.length = 0;\n\n        this._mesh = MeshQuadTexture.getAMesh(false);\n        this._pathMesh = MeshVG.getAMesh(false);\n        this._triangleMesh = MeshTexture.getAMesh(false);\n\n        this.meshlist.push(this._mesh);\n        this.meshlist.push(this._pathMesh);\n        this.meshlist.push(this._triangleMesh);\n\n        // 打断合并\n        context._curSubmit = SubmitBase.RENDERBASE;\n        // 接管context中的一些值\n        this._oldMesh = context._mesh;\n        this._oldPathMesh = context._pathMesh;\n        this._oldTriMesh = context._triangleMesh;\n        this._oldMeshList = context.meshlist;\n\n        context._mesh = this._mesh;\n        context._pathMesh = this._pathMesh;\n        context._triangleMesh = this._triangleMesh;\n        context.meshlist = this.meshlist;\n\n        // 要取消位置，因为以后会再传入位置。这里好乱\n        this.oldTx = context._curMat.tx;\n        this.oldTy = context._curMat.ty;\n        context._curMat.tx = 0;\n        context._curMat.ty = 0;\n\n        // 取消缩放等\n        context._curMat.copyTo(this.invMat);\n        this.invMat.invert();\n        //oldMatrix = context._curMat;\n        //context._curMat = matI;\n    }\n\n    endRec(): void {\n\t\tlet context = this.context;\n        // 如果有文字优化，这里要先提交一下\n        if (context._charSubmitCache && context._charSubmitCache._enable) {\n            context._charSubmitCache.enable(false, context);\n            context._charSubmitCache.enable(true, context);\n        }\n        // copy submit\n        var parsubmits: any = context._submits;\n        this.submitEndPos = parsubmits._length;\n        var num: number = this.submitEndPos - this.submitStartPos;\n        for (var i: number = 0; i < num; i++) {\n            this.submits.push(parsubmits[this.submitStartPos + i]);\n        }\n        parsubmits._length -= num;\n\n        // 恢复原始context的值\n        context._mesh = this._oldMesh;\n        context._pathMesh = this._oldPathMesh;\n        context._triangleMesh = this._oldTriMesh;\n        context.meshlist = this._oldMeshList;\n\n        // 打断合并\n        context._curSubmit = SubmitBase.RENDERBASE;\n        // 恢复matrix\n        //context._curMat = oldMatrix;\n        context._curMat.tx = this.oldTx;\n        context._curMat.ty = this.oldTy;\n        ((<any>context)).touches = null;\n        context._incache = false;\n    }\n\n    /**\n     * 当前缓存是否还有效。例如clip变了就失效了，因为clip太难自动处理\n     * @return\n     */\n    isCacheValid(): boolean {\n        var curclip: Matrix = this.context._globalClipMatrix;\n        if (curclip.a != this.cachedClipInfo.a || curclip.b != this.cachedClipInfo.b || curclip.c != this.cachedClipInfo.c\n            || curclip.d != this.cachedClipInfo.d || curclip.tx != this.cachedClipInfo.tx || curclip.ty != this.cachedClipInfo.ty)\n            return false;\n        return true;\n    }\n    isTextNeedRestore(): boolean {\n        var textNeedRestore: boolean = false;\n        var charRIs: any[] = this.touches;\n\t\tif (charRIs) {\n\t\t\tfor (var ci: number = 0; ci < charRIs.length; ci++) {\n\t\t\t\tif (charRIs[ci].deleted) {\n\t\t\t\t\ttextNeedRestore = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n        return textNeedRestore;\n    }\n    flushsubmit(): void {\n        var curSubmit: SubmitBase = SubmitBase.RENDERBASE;\n        this.submits.forEach(function (subm: Submit): void {\n            if (subm == SubmitBase.RENDERBASE) return;\n            SubmitBase.preRender = curSubmit;\n            curSubmit = subm;\n            subm.renderSubmit();\n        });\n    }\n\n    releaseMem(): void {\n\n    }\n}\n// native\nif ((window as any).conch && !(window as any).conchConfig.conchWebGL) {\n\t//@ts-ignore\n\tWebGLCacheAsNormalCanvas = NativeWebGLCacheAsNormalCanvas;\n}","import { NodeFlags } from \"../Const\"\nimport { Sprite } from \"../display/Sprite\"\nimport { SpriteConst } from \"../display/SpriteConst\"\nimport { SpriteStyle } from \"../display/css/SpriteStyle\"\nimport { Matrix } from \"../maths/Matrix\"\nimport { Rectangle } from \"../maths/Rectangle\"\nimport { Context } from \"../resource/Context\"\nimport { Texture } from \"../resource/Texture\"\nimport { _RenderFunction } from \"./RenderSprite\"\n\n/**\n * @internal\n * 快速节点命令执行器\n * 多个指令组合才有意义，单个指令没必要在下面加\n */\nexport class LayaGLQuickRunner {\n    /*[FILEINDEX:10000]*/\n    static map: _RenderFunction[] = [];\n    private static curMat: Matrix = new Matrix();\n    /**@internal */\n    static __init__(): void {\n        /*\n           glQuickMap[\"drawNode;\"] = drawNode;\n           glQuickMap[\"drawNodes;\"] = drawNodes;\n           glQuickMap[\"drawLayaGL;\"] = drawLayaGL;\n           glQuickMap[\"drawLayaGL;drawNodes;\"] = drawLayaGL_drawNodes;\n           glQuickMap[\"save;alpha;drawNode;restore;\"] = save_alpha_drawNode_restore;\n           glQuickMap[\"save;alpha;drawLayaGL;restore;\"] = save_alpha_drawLayaGL_restore;\n         */\n        //glQuickMap[\"save;alpha;drawTextureWithGr;restore;\"] = save_alpha_drawTextureWithGr_restore;\n        //glQuickMap[\"save;transform;drawTextureWithGr;restore;\"] = save_alpha_transform_drawTextureWithGr_restore;\n        //glQuickMap[\"save;alpha;transform;drawTextureWithGr;restore;\"] = save_alpha_transform_drawTextureWithGr_restore;\n        //glQuickMap[\"drawTextureWithGr;\"] = drawTextureWithGr;\n        //glQuickMap[\"save;transform;drawNodes;restore;\"] = save_transform_drawNodes_restore;\n        //glQuickMap[\"save;transform;drawLayaGL;restore;\"] = save_alpha_transform_drawLayaGL_restore;\n        //glQuickMap[\"save;alpha;transform;drawLayaGL;restore;\"] = save_alpha_transform_drawLayaGL_restore;\n        //glQuickMap[\"save;alpha;transform;drawLayaGL;restore;\"] = save_alpha_transform_drawLayaGL_restore;\n        //map[SpriteConst.TEXTURE] = _drawTexture;\n        LayaGLQuickRunner.map[SpriteConst.ALPHA | SpriteConst.TRANSFORM | SpriteConst.GRAPHICS] = LayaGLQuickRunner.alpha_transform_drawLayaGL;\n        //map[ SpriteConst.GRAPHICS] = _drawLayaGL;\n        LayaGLQuickRunner.map[SpriteConst.ALPHA | SpriteConst.GRAPHICS] = LayaGLQuickRunner.alpha_drawLayaGL;\n        LayaGLQuickRunner.map[SpriteConst.TRANSFORM | SpriteConst.GRAPHICS] = LayaGLQuickRunner.transform_drawLayaGL;\n        LayaGLQuickRunner.map[SpriteConst.TRANSFORM | SpriteConst.CHILDS] = LayaGLQuickRunner.transform_drawNodes;\n\n        LayaGLQuickRunner.map[SpriteConst.ALPHA | SpriteConst.TRANSFORM | SpriteConst.TEXTURE] = LayaGLQuickRunner.alpha_transform_drawTexture;\n        LayaGLQuickRunner.map[SpriteConst.ALPHA | SpriteConst.TEXTURE] = LayaGLQuickRunner.alpha_drawTexture;\n        LayaGLQuickRunner.map[SpriteConst.TRANSFORM | SpriteConst.TEXTURE] = LayaGLQuickRunner.transform_drawTexture;\n        LayaGLQuickRunner.map[SpriteConst.GRAPHICS | SpriteConst.CHILDS] = LayaGLQuickRunner.drawLayaGL_drawNodes;\n    }\n\n    static transform_drawTexture(sprite: Sprite, context: Context, x: number, y: number): void {\n        var style: SpriteStyle = sprite._style;\n        var tex: Texture = sprite.texture;\n\n\n        /*\n        var ctx:WebGLContext2D = context as WebGLContext2D;\n        var ctxm:Matrix = ctx._curMat;\n        ctxm.copyTo(curMat);\n        //context.saveTransform(curMat);\n        ctx.transformByMatrixNoSave(sprite.getTransform(), x, y);\n        ctx.drawTexture(tex, -style.pivotX, -style.pivotY, sprite._width || tex.width, sprite._height || tex.height);\n        curMat.copyTo(ctxm);\n        //ctx.restoreTransform(curMat);\n        */\n\n        context.saveTransform(LayaGLQuickRunner.curMat);\n        context.transformByMatrix(sprite.transform, x, y);\n\n        var width: number = sprite._isWidthSet ? sprite._width : tex.sourceWidth;\n        var height: number = sprite._isHeightSet ? sprite._height : tex.sourceHeight;\n        var wRate: number = width / tex.sourceWidth;\n        var hRate: number = height / tex.sourceHeight;\n        width = tex.width * wRate;\n        height = tex.height * hRate;\n        if (width <= 0 || height <= 0) return null;\n        var px: number = -sprite.pivotX + tex.offsetX * wRate;\n        var py: number = -sprite.pivotY + tex.offsetY * hRate;\n        if (!sprite._getBit(NodeFlags.HIDE_BY_EDITOR))\n            context.drawTexture(tex, px, py, width, height);\n\n        context.restoreTransform(LayaGLQuickRunner.curMat);\n\n        /*\n        context.saveTransform(curMat);\n        var w:int = sprite._width || tex.width;\n        var h:int = sprite._height || tex.height;\n        var mat:Matrix = sprite.transform;// (sprite as Object)._tfChanged?(sprite as Object)._adjustTransform():(sprite as Object)._transform;\n        mat.tx += x; mat.ty += y;\n        //(context as WebGLContext2D).drawTextureWithTransform(tex, -style.pivotX, -style.pivotY, w, h,mat,x,y,1,null,null);\n    \t\n        var ctx:WebGLContext2D = context;\n        var curMat:Matrix = ctx._curMat;\n        var tmpMat:Matrix = ctx._tmpMatrix;\n        var transform = mat;\n        //克隆transform,因为要应用tx，ty，这里不能修改原始的transform\n        tmpMat.a = transform.a; tmpMat.b = transform.b; tmpMat.c = transform.c; tmpMat.d = transform.d; tmpMat.tx = transform.tx + x; tmpMat.ty = transform.ty + y;\n        tmpMat._bTransform = transform._bTransform;\n        if (transform && curMat._bTransform) {\n            Matrix.mul(tmpMat, curMat, tmpMat);\n            transform = tmpMat;\n            transform._bTransform = true;\n        }else {\n            //如果curmat没有旋转。\n            transform = tmpMat;\n        }\n        ctx._drawTextureM(tex, x, y, w,h, mat, 1,null);\n    \t\n        //var st = __JS__(\"performance.now()\");\n        //Laya.stage.perfdt += (__JS__(\"performance.now()\")-st);\n        context.restoreTransform(curMat);\n        */\n    }\n\n    //static public function _drawTexture(sprite:Sprite, context:Context, x:Number, y:Number):void {\n    //var tex:Texture = sprite.texture;\n    //context.drawTexture(tex, x-sprite.pivotX, y-sprite.pivotY, sprite._width || tex.width, sprite._height || tex.height);\n    //}\n\n    static alpha_drawTexture(sprite: Sprite, context: Context, x: number, y: number): void {\n        var style: SpriteStyle = sprite._style;\n        var alpha: number;\n        var tex: Texture = sprite.texture;\n        if ((alpha = style.alpha) > 0.01 || sprite._needRepaint()) {\n            var temp: number = context.globalAlpha;\n            context.globalAlpha *= alpha;\n            var width: number = sprite._isWidthSet ? sprite._width : tex.sourceWidth;\n            var height: number = sprite._isHeightSet ? sprite._height : tex.sourceHeight;\n            var wRate: number = width / tex.sourceWidth;\n            var hRate: number = height / tex.sourceHeight;\n            width = tex.width * wRate;\n            height = tex.height * hRate;\n            if (width <= 0 || height <= 0) return null;\n            var px: number = x - style.pivotX + tex.offsetX * wRate;\n            var py: number = y - style.pivotY + tex.offsetY * hRate;\n            if (!sprite._getBit(NodeFlags.HIDE_BY_EDITOR))\n                context.drawTexture(tex, px, py, width, height);\n            context.globalAlpha = temp;\n        }\n    }\n\n    static alpha_transform_drawTexture(sprite: Sprite, context: Context, x: number, y: number): void {\n        var style: SpriteStyle = sprite._style;\n        var alpha: number;\n        var tex: Texture = sprite.texture;\n        if ((alpha = style.alpha) > 0.01 || sprite._needRepaint()) {\n            var temp: number = context.globalAlpha;\n            context.globalAlpha *= alpha;\n\n            context.saveTransform(LayaGLQuickRunner.curMat);\n            context.transformByMatrix(sprite.transform, x, y);\n            var width: number = sprite._isWidthSet ? sprite._width : tex.sourceWidth;\n            var height: number = sprite._isHeightSet ? sprite._height : tex.sourceHeight;\n            var wRate: number = width / tex.sourceWidth;\n            var hRate: number = height / tex.sourceHeight;\n            width = tex.width * wRate;\n            height = tex.height * hRate;\n            if (width <= 0 || height <= 0) return null;\n            var px: number = -style.pivotX + tex.offsetX * wRate;\n            var py: number = -style.pivotY + tex.offsetY * hRate;\n            if (!sprite._getBit(NodeFlags.HIDE_BY_EDITOR))\n                context.drawTexture(tex, px, py, width, height);\n            context.restoreTransform(LayaGLQuickRunner.curMat);\n\n            context.globalAlpha = temp;\n        }\n    }\n\n    static alpha_transform_drawLayaGL(sprite: Sprite, context: Context, x: number, y: number): void {\n        var style: SpriteStyle = sprite._style;\n        var alpha: number;\n        if ((alpha = style.alpha) > 0.01 || sprite._needRepaint()) {\n            var temp: number = context.globalAlpha;\n            context.globalAlpha *= alpha;\n\n            context.saveTransform(LayaGLQuickRunner.curMat);\n            context.transformByMatrix(sprite.transform, x, y);\n            if (!sprite._getBit(NodeFlags.HIDE_BY_EDITOR))\n                sprite._graphics && sprite._graphics._render(sprite, context, -style.pivotX, -style.pivotY);\n            context.restoreTransform(LayaGLQuickRunner.curMat);\n\n            context.globalAlpha = temp;\n        }\n    }\n\n    static alpha_drawLayaGL(sprite: Sprite, context: Context, x: number, y: number): void {\n        var style: SpriteStyle = sprite._style;\n        var alpha: number;\n        if ((alpha = style.alpha) > 0.01 || sprite._needRepaint()) {\n            var temp: number = context.globalAlpha;\n            context.globalAlpha *= alpha;\n            if (!sprite._getBit(NodeFlags.HIDE_BY_EDITOR))\n                sprite._graphics && sprite._graphics._render(sprite, context, x - style.pivotX, y - style.pivotY);\n            context.globalAlpha = temp;\n        }\n    }\n\n    //static public function _drawLayaGL(sprite:Sprite, context:Context, x:Number, y:Number):void {\n    //sprite._graphics._render(sprite, context, x, y);\n    //}\t\t\n\n    static transform_drawLayaGL(sprite: Sprite, context: Context, x: number, y: number): void {\n        var style: SpriteStyle = sprite._style;\n        //var transform:Matrix = sprite.transform;\n\n        //临时\n        //if (transform) {\n        context.saveTransform(LayaGLQuickRunner.curMat);\n        context.transformByMatrix(sprite.transform, x, y);\n        if (!sprite._getBit(NodeFlags.HIDE_BY_EDITOR))\n            sprite._graphics && sprite._graphics._render(sprite, context, -style.pivotX, -style.pivotY);\n        context.restoreTransform(LayaGLQuickRunner.curMat);\n        //}else {\n        //sprite._graphics && sprite._graphics._render(sprite, context, -style.pivotX, -style.pivotY);\n        //}\t\t\t\n    }\n\n    static transform_drawNodes(sprite: Sprite, context: Context, x: number, y: number): void {\n        //var transform:Matrix = sprite.transform;\n        var textLastRender: boolean = sprite._getBit(NodeFlags.DRAWCALL_OPTIMIZE) && context.drawCallOptimize(true);\n        let drawingToTexture = context._drawingToTexture;\n\n        var style: SpriteStyle = sprite._style;\n        context.saveTransform(LayaGLQuickRunner.curMat);\n        context.transformByMatrix(sprite.transform, x, y);\n\n        //x = x-style.pivotX;\n        //y = y - style.pivotY;\n\n        x = -style.pivotX;\n        y = -style.pivotY;\n\n        var childs: any[] = sprite._children, n: number = childs.length;\n        let rect: Rectangle;\n        let left: number, top: number, right: number, bottom: number, _x: number, _y: number;\n\n        if (style.viewport) {\n            rect = style.viewport;\n            left = rect.x;\n            top = rect.y;\n            right = rect.right;\n            bottom = rect.bottom;\n        }\n\n        for (let i = 0; i < n; ++i) {\n            let ele = childs[i];\n            let visFlag: boolean;\n            if (drawingToTexture)\n                visFlag = ele._visible && !ele._getBit(NodeFlags.ESCAPE_DRAWING_TO_TEXTURE);\n            else\n                visFlag = ele._visible || ele._getBit(NodeFlags.DISABLE_VISIBILITY);\n            if (rect && ((_x = ele._x) >= right || (_x + ele.width) <= left || (_y = ele._y) >= bottom || (_y + ele.height) <= top))\n                visFlag = false;\n\n            if (visFlag)\n                ele.render(context, x, y);\n        }\n\n        context.restoreTransform(LayaGLQuickRunner.curMat);\n        textLastRender && context.drawCallOptimize(false);\n    }\n\n    static drawLayaGL_drawNodes(sprite: Sprite, context: Context, x: number, y: number): void {\n\n        var textLastRender: boolean = sprite._getBit(NodeFlags.DRAWCALL_OPTIMIZE) && context.drawCallOptimize(true);\n        let drawingToTexture = context._drawingToTexture;\n\n        var style: SpriteStyle = sprite._style;\n        x = x - style.pivotX;\n        y = y - style.pivotY;\n        if (!sprite._getBit(NodeFlags.HIDE_BY_EDITOR))\n            sprite._graphics && sprite._graphics._render(sprite, context, x, y);\n\n        var childs: any[] = sprite._children, n: number = childs.length;\n        let rect: Rectangle;\n        let left: number, top: number, right: number, bottom: number, _x: number, _y: number;\n\n        if (style.viewport) {\n            rect = style.viewport;\n            left = rect.x;\n            top = rect.y;\n            right = rect.right;\n            bottom = rect.bottom;\n        }\n\n        for (let i = 0; i < n; ++i) {\n            let ele = childs[i];\n            let visFlag: boolean;\n            if (drawingToTexture)\n                visFlag = ele._visible && !ele._getBit(NodeFlags.ESCAPE_DRAWING_TO_TEXTURE);\n            else\n                visFlag = ele._visible || ele._getBit(NodeFlags.DISABLE_VISIBILITY);\n            if (rect && ((_x = ele._x) >= right || (_x + ele.width) <= left || (_y = ele._y) >= bottom || (_y + ele.height) <= top))\n                visFlag = false;\n\n            if (visFlag)\n                ele.render(context, x, y);\n\n        }\n\n        textLastRender && context.drawCallOptimize(false);\n    }\n}\n\n","import { IFilter } from \"./IFilter\";\nimport { Sprite } from \"../display/Sprite\"\nimport { Matrix } from \"../maths/Matrix\"\nimport { Point } from \"../maths/Point\"\nimport { Rectangle } from \"../maths/Rectangle\"\nimport { RenderSprite } from \"../renders/RenderSprite\"\nimport { BlendMode } from \"../webgl/canvas/BlendMode\"\nimport { RenderSpriteData, Value2D } from \"../webgl/shader/d2/value/Value2D\"\nimport { ColorFilter } from \"./ColorFilter\";\nimport { BlurFilter } from \"./BlurFilter\";\nimport { RenderTargetFormat } from \"../RenderEngine/RenderEnum/RenderTargetFormat\";\nimport { LayaGL } from \"../layagl/LayaGL\";\n\n/**\n * <code>Filter</code> 是滤镜基类。\n */\nexport class NativeFilter implements IFilter {\n    /**@private 模糊滤镜。*/\n    static BLUR: number = 0x10;\n    /**@private 颜色滤镜。*/\n    static COLOR: number = 0x20;\n    /**@private 发光滤镜。*/\n    static GLOW: number = 0x08;\n    /** @internal*/\n    _glRender: any;\n\n    /**\n     * 创建一个 <code>Filter</code> 实例。\n     * */\n    constructor() { }\n\n    /**@private 滤镜类型。*/\n    get type(): number { return -1 }\n\n    static _filter = function (this: RenderSprite, sprite: Sprite, context: any, x: number, y: number): void {\n        var webglctx: any = context;\n        var next: any = ((<RenderSprite>this))._next;\n        if (next) {\n            var filters: any[] = sprite.filters, len: number = filters.length;\n            //如果只有一个滤镜，那么还用原来的方式\n            if (len == 1 && (filters[0].type == NativeFilter.COLOR)) {\n                context.save();\n                context.setColorFilter(filters[0]);\n                next._fun.call(next, sprite, context, x, y);\n                context.restore();\n                return;\n            }\n            //思路：依次遍历滤镜，每次滤镜都画到out的RenderTarget上，然后把out画取src的RenderTarget做原图，去叠加新的滤镜\n            var svCP: Value2D = Value2D.create(RenderSpriteData.Texture2D);\t//拷贝用shaderValue\n            var b: Rectangle;\n\n            var p: Point = Point.TEMP;\n            var tMatrix: Matrix = webglctx._curMat;\n            var mat: Matrix = Matrix.create();\n            tMatrix.copyTo(mat);\n            var tPadding: number = 0;\t//给glow用\n            var tHalfPadding: number = 0;\n            var tIsHaveGlowFilter: boolean = false;\n            //这里判断是否存储了out，如果存储了直接用;\n            var source: any = null;\n            var out: any = sprite._cacheStyle.filterCache || null;\n            if (!out || sprite.getRepaint() != 0) {\n                tIsHaveGlowFilter = sprite._isHaveGlowFilter();\n                //glow需要扩展边缘\n                if (tIsHaveGlowFilter) {\n                    tPadding = 50;\n                    tHalfPadding = 25;\n                }\n                b = new Rectangle();\n                b.copyFrom(sprite.getSelfBounds());\n                b.x += sprite.x;\n                b.y += sprite.y;\n                b.x -= sprite.pivotX + 4;//blur \n                b.y -= sprite.pivotY + 4;//blur\n                var tSX: number = b.x;\n                var tSY: number = b.y;\n                //重新计算宽和高\n                b.width += (tPadding + 8);//增加宽度 blur  由于blur系数为9\n                b.height += (tPadding + 8);//增加高度 blur\n                p.x = b.x * mat.a + b.y * mat.c;\n                p.y = b.y * mat.d + b.x * mat.b;\n                b.x = p.x;\n                b.y = p.y;\n                p.x = b.width * mat.a + b.height * mat.c;\n                p.y = b.height * mat.d + b.width * mat.b;\n                b.width = p.x;\n                b.height = p.y;\n                if (b.width <= 0 || b.height <= 0) {\n                    return;\n                }\n                //out && WebGLRTMgr.releaseRT(out);// out.recycle();\n                out && out.destroy();// out.recycle();\n                //source = WebGLRTMgr.getRT(b.width, b.height);\n                source = new (window as any).conchRenderTexture2D((LayaGL.renderEngine as any)._nativeObj, b.width, b.height, RenderTargetFormat.R8G8B8A8, RenderTargetFormat.None);\n                //var outRT: RenderTexture2D = out = WebGLRTMgr.getRT(b.width, b.height);\n                var outRT: any = out = new (window as any).conchRenderTexture2D((LayaGL.renderEngine as any)._nativeObj, b.width, b.height, RenderTargetFormat.R8G8B8A8, RenderTargetFormat.None);\n                sprite._getCacheStyle().filterCache = out;\n                //使用RT\n                webglctx.pushRT();\n                webglctx.useRT(source);\n                var tX: number = sprite.x - tSX + tHalfPadding;\n                var tY: number = sprite.y - tSY + tHalfPadding;\n                //执行节点的渲染\n                next._fun.call(next, sprite, context, tX, tY);\n                webglctx.useRT(outRT);\n                for (var i: number = 0; i < len; i++) {\n                    if (i != 0) {\n                        //把out往src上画。这只是一个拷贝的过程，下面draw(src) to outRT 才是真正的应用filter\n                        //由于是延迟执行，不能直接在这里swap。 TODO 改成延迟swap\n                        webglctx.useRT(source);\n                        webglctx.drawTarget(outRT, 0, 0, b.width, b.height, Matrix.TEMP.identity(), svCP, null, BlendMode.TOINT.overlay);\n                        webglctx.useRT(outRT);\n                    }\n                    var fil: NativeFilter = filters[i];\n                    //把src往out上画\n                    switch (fil.type) {\n                        case NativeFilter.BLUR:\n                            //fil._glRender && fil._glRender.render(source, context, b.width, b.height, fil);\n                            //BlurFilterGLRender.render(source, context, b.width, b.height, fil as BlurFilter);\n                            webglctx.drawTargetBlurFilter(source, 0, 0, b.width, b.height, (fil as BlurFilter).strength);\n                            break;\n                        case NativeFilter.GLOW:\n                            //GlowFilterGLRender.render(source, context, b.width, b.height, fil as GlowFilter);\n                            fil._glRender && fil._glRender.render(source, context, b.width, b.height, fil);\n                            break;\n                        case NativeFilter.COLOR:\n                            webglctx.setColorFilter((<ColorFilter>fil));\n                            webglctx.drawTarget(source, 0, 0, b.width, b.height, Matrix.EMPTY.identity(), Value2D.create(RenderSpriteData.Texture2D));\n                            webglctx.setColorFilter(null);\n                            break;\n                    }\n                }\n                webglctx.popRT();\n            } else {\n\n                // tIsHaveGlowFilter = sprite._cacheStyle.hasGlowFilter || false;\n                tIsHaveGlowFilter = sprite._isHaveGlowFilter() || false;\n                if (tIsHaveGlowFilter) {\n                    tPadding = 50;\n                    tHalfPadding = 25;\n                }\n                b = sprite.getBounds();\n                if (b.width <= 0 || b.height <= 0) {\n                    return;\n                }\n                //edit\n                b.width += (tPadding + 8);//增加宽度 blur  由于blur系数为9\n                b.height += (tPadding + 8);//增加高度 blur\n                b.x -= sprite.pivotX + 4; //blur \n                b.y -= sprite.pivotY + 4;//blur \n                p.x = b.x * mat.a + b.y * mat.c;\n                p.y = b.y * mat.d + b.x * mat.b;\n                b.x = p.x;\n                b.y = p.y;\n                p.x = b.width * mat.a + b.height * mat.c;\n                p.y = b.height * mat.d + b.width * mat.b;\n                b.width = p.x;\n                b.height = p.y;\n                //scope.addValue(\"out\", out);\n            }\n            x = x - tHalfPadding - sprite.x;\n            y = y - tHalfPadding - sprite.y;\n            p.setTo(x, y);\n            mat.transformPoint(p);\n            x = p.x + b.x;\n            y = p.y + b.y;\n            //把最后的out纹理画出来\n            //webglctx._drawRenderTexture(out, x, y, b.width, b.height, Matrix.TEMP.identity(), 1.0, RenderTexture2D.defuv);\n\n            //把对象放回池子中\n            //var submit:SubmitCMD = SubmitCMD.create([scope], Filter._recycleScope, this);\n            /*if (source) {\n                var submit: SubmitCMD = SubmitCMD.create([source], function (s: Texture2D): void {\n                    s.destroy();\n                }, this);\n                source = null;\n                context.addRenderObject(submit);\n            }*/\n            webglctx.drawFilter(out, source, x, y, b.width, b.height);\n            mat.destroy();\n        }\n    }\n}\n\n","import { NodeFlags } from \"../Const\";\nimport { CacheStyle } from \"../display/css/CacheStyle\";\nimport { SpriteStyle } from \"../display/css/SpriteStyle\";\nimport { Sprite } from \"../display/Sprite\";\nimport { SpriteConst } from \"../display/SpriteConst\";\nimport { Filter } from \"../filters/Filter\";\nimport { Matrix } from \"../maths/Matrix\";\nimport { Point } from \"../maths/Point\";\nimport { Rectangle } from \"../maths/Rectangle\";\nimport { Context } from \"../resource/Context\";\nimport { HTMLCanvas } from \"../resource/HTMLCanvas\";\nimport { RenderTexture2D } from \"../resource/RenderTexture2D\";\nimport { Texture } from \"../resource/Texture\";\nimport { WebGLRTMgr } from \"../resource/WebGLRTMgr\";\nimport { Stat } from \"../utils/Stat\";\nimport { BlendMode } from \"../webgl/canvas/BlendMode\";\nimport { WebGLCacheAsNormalCanvas } from \"../webgl/canvas/WebGLCacheAsNormalCanvas\";\nimport { RenderSpriteData, Value2D } from \"../webgl/shader/d2/value/Value2D\";\nimport { SubmitCMD } from \"../webgl/submit/SubmitCMD\";\nimport { LayaGLQuickRunner } from \"./LayaGLQuickRunner\";\nimport { ILaya } from \"../../ILaya\";\nimport { NativeFilter } from \"../filters/NativeFilter\";\nimport { LayaEnv } from \"../../LayaEnv\";\nimport { HitArea } from \"../utils/HitArea\";\n\n/**\n * @private\n * \n */\nexport interface _RenderFunction {\n    (sp: Sprite, ctx: Context, x: number, y: number): void;\n}\n\nconst INIT = 0x11111;\n/**\n * @private\n * 精灵渲染器\n */\nexport class RenderSprite {\n    /** @private */\n    static renders: RenderSprite[] = [];\n    /** @private */\n    protected static NORENDER: RenderSprite = new RenderSprite(0, null);\n    /** @internal */\n    _next: RenderSprite;\n    /** @internal */\n    _fun: Function;\n\n    /** @internal */\n    static __init__(): void {\n        LayaGLQuickRunner.__init__();\n        var i: number, len: number;\n        var initRender: RenderSprite;\n        initRender = new RenderSprite(INIT, null);\n        len = RenderSprite.renders.length = SpriteConst.CHILDS * 2;\n        for (i = 0; i < len; i++)\n            RenderSprite.renders[i] = initRender;\n\n        RenderSprite.renders[0] = new RenderSprite(0, null);\n    }\n\n    private static _initRenderFun(sprite: Sprite, context: Context, x: number, y: number): void {\n        var type: number = sprite._renderType;\n        var r: RenderSprite = RenderSprite.renders[type] = RenderSprite._getTypeRender(type);\n        r._fun(sprite, context, x, y);\n    }\n\n    private static _getTypeRender(type: number): RenderSprite {\n        if (LayaGLQuickRunner.map[type] && LayaEnv.isPlaying) return new RenderSprite(type, null);\n        var rst: RenderSprite | null = null;\n        var tType: number = SpriteConst.CHILDS;\n        while (tType > 0) {\n            if (tType & type)\n                rst = new RenderSprite(tType, rst);\n            tType = tType >> 1;\n        }\n        return rst as RenderSprite;\n    }\n\n    constructor(type: number, next: RenderSprite | null) {\n\n        if (LayaGLQuickRunner.map[type] && LayaEnv.isPlaying) {\n            this._fun = LayaGLQuickRunner.map[type];\n            this._next = RenderSprite.NORENDER;\n            return;\n        }\n        this._next = next || RenderSprite.NORENDER;\n        switch (type) {\n            case 0:\n                this._fun = this._no;\n                return;\n            case SpriteConst.ALPHA:\n                this._fun = this._alpha;\n                return;\n            case SpriteConst.TRANSFORM:\n                this._fun = this._transform;\n                return;\n            case SpriteConst.BLEND:\n                this._fun = this._blend;\n                return;\n            case SpriteConst.CANVAS:\n                this._fun = this._canvas;\n                return;\n            case SpriteConst.MASK:\n                if (LayaEnv.isConch && !(window as any).conchConfig.conchWebGL) {\n                    this._fun = this._maskNative;\n                }\n                else {\n                    this._fun = this._mask;\n                }\n                return;\n            case SpriteConst.CLIP:\n                this._fun = this._clip;\n                return;\n            case SpriteConst.STYLE:\n                this._fun = this._style;\n                return;\n            case SpriteConst.GRAPHICS:\n                this._fun = this._graphics;\n                return;\n            case SpriteConst.CHILDS:\n                this._fun = this._children;\n                return;\n            case SpriteConst.CUSTOM:\n                this._fun = this._custom;\n                return;\n            case SpriteConst.TEXTURE:\n                this._fun = this._texture;\n                return;\n            case SpriteConst.FILTERS:\n                if (LayaEnv.isConch && !(window as any).conchConfig.conchWebGL) {\n                    this._fun = NativeFilter._filter;\n                }\n                else {\n                    this._fun = Filter._filter;\n                }\n                return;\n            case SpriteConst.HITAREA:\n                this._fun = this._hitarea;\n                return;\n            case INIT:\n                this._fun = RenderSprite._initRenderFun;\n                return;\n        }\n\n        this.onCreate(type);\n    }\n\n    protected onCreate(type: number): void {\n\n    }\n\n    /**@internal */\n    _style(sprite: Sprite, context: Context, x: number, y: number): void {\n        //这里的功能取消了，应该不会走进这里\n    }\n\n    /**@internal */\n    _no(sprite: Sprite, context: Context, x: number, y: number): void {\n    }\n\n    /**@internal */\n    _custom(sprite: Sprite, context: Context, x: number, y: number): void {\n        sprite.customRender(context, x, y);\n        this._next._fun.call(this._next, sprite, context, 0, 0);\n    }\n\n    /**@internal */\n    _clip(sprite: Sprite, context: Context, x: number, y: number): void {\n        let next: RenderSprite = this._next;\n        if (next == RenderSprite.NORENDER) return;\n\n        if (sprite._getBit(NodeFlags.DISABLE_INNER_CLIPPING) && !context._drawingToTexture) {\n            next._fun.call(next, sprite, context, x, y);\n            return;\n        }\n\n        let r = sprite._style.scrollRect;\n        let width = r.width;\n        let height = r.height;\n        if (width === 0)\n            width = 0.001;\n        if (height === 0)\n            height = 0.001;\n        context.save();\n        context.clipRect(x, y, width, height);\n        next._fun.call(next, sprite, context, x - r.x, y - r.y);\n        context.restore();\n    }\n\n    /**@internal */\n    _texture(sprite: Sprite, context: Context, x: number, y: number): void {\n        if (!sprite._getBit(NodeFlags.HIDE_BY_EDITOR)) {\n            var tex: Texture = sprite.texture;\n            if (tex._getSource()) {\n                var width: number = sprite._isWidthSet ? sprite._width : tex.sourceWidth;\n                var height: number = sprite._isHeightSet ? sprite._height : tex.sourceHeight;\n                var wRate: number = width / tex.sourceWidth;\n                var hRate: number = height / tex.sourceHeight;\n                width = tex.width * wRate;\n                height = tex.height * hRate;\n                if (width > 0 && height > 0) {\n                    let px = x - sprite.pivotX + tex.offsetX * wRate;\n                    let py = y - sprite.pivotY + tex.offsetY * hRate;\n                    context.material = sprite.graphics.material;\n                    context.drawTexture(tex, px, py, width, height, 0xffffffff);\n                }\n            }\n        }\n        var next: RenderSprite = this._next;\n        if (next != RenderSprite.NORENDER)\n            next._fun.call(next, sprite, context, x, y);\n    }\n\n    /**@internal */\n    _graphics(sprite: Sprite, context: Context, x: number, y: number): void {\n        if (!sprite._getBit(NodeFlags.HIDE_BY_EDITOR)) {\n            var style = sprite._style;\n            var g = sprite._graphics;\n            g && g._render(sprite, context, x - style.pivotX, y - style.pivotY);\n        }\n        var next = this._next;\n        if (next != RenderSprite.NORENDER)\n            next._fun.call(next, sprite, context, x, y);\n    }\n\n    /**@internal IDE only*/\n    _hitarea(sprite: Sprite, context: Context, x: number, y: number): void {\n        if (!context._drawingToTexture && sprite.hitArea) {\n            var style = sprite._style;\n            var g = (<HitArea>sprite.hitArea)._hit;\n            var temp: number = context.globalAlpha;\n            context.globalAlpha *= 0.5;\n            g && g._render(sprite, context, x - style.pivotX, y - style.pivotY);\n            g = (<HitArea>sprite.hitArea)._unHit;\n            g && g._render(sprite, context, x - style.pivotX, y - style.pivotY);\n            context.globalAlpha = temp;\n        }\n        var next = this._next;\n        if (next != RenderSprite.NORENDER)\n            next._fun.call(next, sprite, context, x, y);\n    }\n\n    /**@internal */\n    //TODO:coverage\n    _alpha(sprite: Sprite, context: Context, x: number, y: number): void {\n        var style: SpriteStyle = sprite._style;\n        var alpha: number;\n        if ((alpha = style.alpha) > 0.01 || sprite._needRepaint()) {\n            var temp: number = context.globalAlpha;\n            context.globalAlpha *= alpha;\n            var next: RenderSprite = this._next;\n            next._fun.call(next, sprite, context, x, y);\n            context.globalAlpha = temp;\n        }\n    }\n\n    /**@internal */\n    _transform(sprite: Sprite, context: Context, x: number, y: number): void {\n        var transform: Matrix = sprite.transform, _next: RenderSprite = this._next;\n        if (transform && _next != RenderSprite.NORENDER) {\n            context.save();\n            context.transform(transform.a, transform.b, transform.c, transform.d, transform.tx + x, transform.ty + y);\n            _next._fun.call(_next, sprite, context, 0, 0);\n            context.restore();\n        } else {\n            if (_next != RenderSprite.NORENDER)\n                _next._fun.call(_next, sprite, context, x, y);\n        }\n    }\n\n    /**@internal */\n    _children(sprite: Sprite, context: Context, x: number, y: number): void {\n        let style: SpriteStyle = sprite._style;\n        let childs = <Sprite[]>sprite._children, n: number = childs.length;\n        x = x - sprite.pivotX;\n        y = y - sprite.pivotY;\n        let textLastRender: boolean = sprite._getBit(NodeFlags.DRAWCALL_OPTIMIZE) && context.drawCallOptimize(true);\n        let drawingToTexture = context._drawingToTexture;\n        let rect: Rectangle;\n        let left: number, top: number, right: number, bottom: number, x2: number, y2: number;\n\n        if (style.viewport) {\n            rect = style.viewport;\n            left = rect.x;\n            top = rect.y;\n            right = rect.right;\n            bottom = rect.bottom;\n        }\n\n        for (let i = 0; i < n; ++i) {\n            let ele = childs[i];\n            let visFlag: boolean;\n            if (drawingToTexture)\n                visFlag = ele._visible && !ele._getBit(NodeFlags.ESCAPE_DRAWING_TO_TEXTURE);\n            else\n                visFlag = ele._visible || ele._getBit(NodeFlags.DISABLE_VISIBILITY);\n            if (visFlag) {\n                if (rect && ((x2 = ele._x) >= right || (x2 + ele.width) <= left || (y2 = ele._y) >= bottom || (y2 + ele.height) <= top))\n                    visFlag = false;\n                else if (sprite._cacheStyle.mask == ele && !ele._getBit(NodeFlags.DISABLE_VISIBILITY))\n                    visFlag = false;\n            }\n\n            if (visFlag) {\n                if (ele._getBit(NodeFlags.DISABLE_OUTER_CLIPPING))\n                    context.clipRect(0, 0, 1, 1, true);\n\n                ele.render(context, x, y);\n            }\n        }\n        textLastRender && context.drawCallOptimize(false);\n    }\n\n    /**@internal */\n    _canvas(sprite: Sprite, context: Context, x: number, y: number): void {\n\n        var _cacheStyle: CacheStyle = sprite._cacheStyle;\n        var _next: RenderSprite = this._next;\n\n        if (!_cacheStyle.enableCanvasRender || !context._drawingToTexture && _cacheStyle.mask && _cacheStyle.mask._getBit(NodeFlags.DISABLE_VISIBILITY)) {\n            _next._fun.call(_next, sprite, context, x, y);\n            return;\n        }\n        _cacheStyle.cacheAs === 'bitmap' ? (Stat.canvasBitmap++) : (Stat.canvasNormal++);\n\n        //检查保存的文字是否失效了\n        var cacheNeedRebuild: boolean = false;\n        var textNeedRestore: boolean = false;\n\n        if (_cacheStyle.canvas) {\n            // 检查文字是否被释放了，以及clip是否改变了，需要重新cache了\n            var canv: any = _cacheStyle.canvas;\n            textNeedRestore = canv.isTextNeedRestore && canv.isTextNeedRestore();\n            cacheNeedRebuild = canv.isCacheValid && !canv.isCacheValid();\n        }\n\n        if (sprite._needRepaint() || (!_cacheStyle.canvas) || textNeedRestore || cacheNeedRebuild || ILaya.stage.isGlobalRepaint()) {\n            if (_cacheStyle.cacheAs === 'normal') {\n                if (context._targets) {// 如果有target说明父节点已经是一个cacheas bitmap了，就不再走cacheas normal的流程了\n                    _next._fun.call(_next, sprite, context, x, y);\n                    return;\t//不再继续\n                } else {\n                    this._canvas_webgl_normal_repaint(sprite, context);\n                }\n            } else {\n                this._canvas_repaint(sprite, context, x, y);\n            }\n        }\n        var tRec: Rectangle = _cacheStyle.cacheRect;\n        //Stage._dbgSprite.graphics.drawRect(x, y, 30,30, null, 'red');\n        context.material = sprite.graphics.material;\n        context.drawCanvas(_cacheStyle.canvas, x + tRec.x, y + tRec.y, tRec.width, tRec.height);\n    }\n\n    /**@internal */\n    _canvas_repaint(sprite: Sprite, context: Context, x: number, y: number): void {\n\n        var _cacheStyle: CacheStyle = sprite._cacheStyle;\n        var _next: RenderSprite = this._next;\n        var tx: Context;\n        var canvas: HTMLCanvas = _cacheStyle.canvas;\n        var left: number;\n        var top: number;\n        var tRec: Rectangle;\n        var tCacheType: string = _cacheStyle.cacheAs;\n\n        var w: number, h: number;\n        var scaleX: number, scaleY: number;\n\n        var scaleInfo: Point;\n        scaleInfo = _cacheStyle._calculateCacheRect(sprite, tCacheType, x, y);\n        scaleX = scaleInfo.x;\n        scaleY = scaleInfo.y;\n\n        //显示对象实际的绘图区域\n        tRec = _cacheStyle.cacheRect;\n\n        //计算cache画布的大小\n        w = tRec.width * scaleX;\n        h = tRec.height * scaleY;\n        left = tRec.x;\n        top = tRec.y;\n\n        if (tCacheType === 'bitmap' && (w > 2048 || h > 2048)) {\n            console.warn(\"cache bitmap size larger than 2048, cache ignored\");\n            _cacheStyle.releaseContext();\n            _next._fun.call(_next, sprite, context, x, y);\n            return;\n        }\n        if (!canvas) {\n            _cacheStyle.createContext();\n            canvas = _cacheStyle.canvas;\n        }\n        tx = canvas.context as Context;\n\n        //WebGL用\n        tx.sprite = sprite;\n\n        (canvas.width != w || canvas.height != h) && canvas.size(w, h);//asbitmap需要合理的大小，所以size放到前面\n\n        if (tCacheType === 'bitmap') tx.asBitmap = true;\n        else if (tCacheType === 'normal') tx.asBitmap = false;\n\n        //清理画布。之前记录的submit会被全部清掉\n        tx.clear();\n\n        //TODO:测试webgl下是否有缓存模糊\n        if (scaleX != 1 || scaleY != 1) {\n            var ctx: any = tx;\n            ctx.save();\n            ctx.scale(scaleX, scaleY);\n            _next._fun.call(_next, sprite, tx, -left, -top);\n            ctx.restore();\n            sprite._applyFilters();\n        } else {\n            ctx = tx;\n            _next._fun.call(_next, sprite, tx, -left, -top);\n            sprite._applyFilters();\n        }\n\n        if (_cacheStyle.staticCache) _cacheStyle.reCache = false;\n        Stat.canvasReCache++;\n    }\n\n    /**@internal */\n    _canvas_webgl_normal_repaint(sprite: Sprite, context: Context): void {\n\n        var _cacheStyle: CacheStyle = sprite._cacheStyle;\n        var _next: RenderSprite = this._next;\n        var canvas: WebGLCacheAsNormalCanvas = _cacheStyle.canvas as unknown as WebGLCacheAsNormalCanvas;\n\n        var tCacheType: string = _cacheStyle.cacheAs;\n        _cacheStyle._calculateCacheRect(sprite, tCacheType, 0, 0);\n\n        if (!canvas) {\n            canvas = new WebGLCacheAsNormalCanvas(context, sprite);\n            _cacheStyle.canvas = ((canvas as any) as HTMLCanvas);\n        }\n        var tx: Context = canvas.context as Context;\n\n\n        canvas.startRec();\n        _next._fun.call(_next, sprite, tx, sprite.pivotX, sprite.pivotY);\t// 由于后面的渲染会减去pivot，而cacheas normal并不希望这样，只希望创建一个原始的图像。所以在这里补偿。\n        sprite._applyFilters();\n\n        Stat.canvasReCache++;\n        canvas.endRec();\n\n        //context.drawCanvas(canvas, x , y , 1, 1); // 这种情况下宽高没用\n    }\n\n    /**@internal */\n    _blend(sprite: Sprite, context: Context, x: number, y: number): void {\n        var style: SpriteStyle = sprite._style;\n        var next: RenderSprite = this._next;\n        if (style.blendMode) {\n            context.save();\n            context.globalCompositeOperation = style.blendMode;\n            next._fun.call(next, sprite, context, x, y);\n            context.restore();\n        } else {\n            next._fun.call(next, sprite, context, x, y);\n        }\n    }\n\n    /**\n     * @internal\n     * mask的渲染。 sprite有mask属性的情况下，来渲染这个sprite\n     * @param\tsprite\n     * @param\tcontext\n     * @param\tx\n     * @param\ty\n     */\n    _mask(sprite: Sprite, ctx: Context, x: number, y: number): void {\n        let next = this._next;\n        let mask = sprite.mask;\n        if (mask && (!mask._getBit(NodeFlags.DISABLE_VISIBILITY) || ctx._drawingToTexture)) {\n            ctx.save();\n\n            let preBlendMode: string = ctx.globalCompositeOperation;\n            let tRect: Rectangle = new Rectangle();\n            //裁剪范围是根据mask来定的\n            tRect.copyFrom(mask.getBounds());\n            // 为什么round\n            let w = tRect.width = Math.round(tRect.width);\n            let h = tRect.height = Math.round(tRect.height);\n            tRect.x = Math.round(tRect.x);\n            tRect.y = Math.round(tRect.y);\n\n            if (w > 0 && h > 0) {\n                let tmpRT: RenderTexture2D = WebGLRTMgr.getRT(w, h);\n\n                ctx.breakNextMerge();\n                //先把mask画到tmpTarget上\n                ctx.pushRT();\n                ctx.addRenderObject(SubmitCMD.create([ctx, tmpRT, w, h], RenderSprite.tmpTarget, this));\n                mask.render(ctx, -tRect.x, -tRect.y);\n                ctx.breakNextMerge();\n                ctx.popRT();\n                //设置裁剪为mask的大小。要考虑pivot。有pivot的话，可能要从负的开始\n                ctx.save();\n\n                /**\n                 * 有时候会有浮点误差，例如起点在0.5的时候，有的像素中心正好处于边界，可能会出错。\n                 * 对于mask来说，一般缩小一点点是没有问题的，所以缩小0.1个像素\n                 */\n                let shrink = 0.1;\n                ctx.clipRect(x + tRect.x - sprite.getStyle().pivotX + shrink, y + tRect.y - sprite.getStyle().pivotY + shrink, w - shrink * 2, h - shrink * 2);\n                //ctx.clipRect(x + tRect.x - sprite.getStyle().pivotX, y + tRect.y - sprite.getStyle().pivotY, w, h);\n\n                //画出本节点的内容\n                next._fun.call(next, sprite, ctx, x, y);\n                ctx.restore();\n\n                //设置混合模式\n                preBlendMode = ctx.globalCompositeOperation;\n                ctx.addRenderObject(SubmitCMD.create([\"mask\"], RenderSprite.setBlendMode, this));\n\n                let shaderValue: Value2D = Value2D.create(RenderSpriteData.Texture2D);\n                let uv = Texture.INV_UV;\n                //这个地方代码不要删除，为了解决在iphone6-plus上的诡异问题\n                //renderTarget + StencilBuffer + renderTargetSize < 32 就会变得超级卡\n                //所以增加的限制。王亚伟\n                //  180725 本段限制代码已经删除，如果出了问题再找王亚伟\n\n                ctx.drawTarget(tmpRT, x + tRect.x - sprite.getStyle().pivotX, y + tRect.y - sprite.getStyle().pivotY, w, h, Matrix.TEMP.identity(), shaderValue, uv, 6);\n                ctx.addRenderObject(SubmitCMD.create([tmpRT], RenderSprite.recycleTarget, this));\n            }\n\n            //恢复混合模式\n            ctx.addRenderObject(SubmitCMD.create([preBlendMode], RenderSprite.setBlendMode, this));\n\n            ctx.restore();\n        } else {\n            next._fun.call(next, sprite, ctx, x, y);\n        }\n\n    }\n    _maskNative(sprite: Sprite, ctx: Context, x: number, y: number): void {\n        var next: RenderSprite = this._next;\n        var mask: Sprite = sprite.mask;\n        if (mask) {\n            ctx.save();\n            var preBlendMode: string = ctx.globalCompositeOperation;\n            var tRect: Rectangle = new Rectangle();\n            //裁剪范围是根据mask来定的\n            tRect.copyFrom(mask.getBounds());\n            // 为什么round\n            let w = tRect.width = Math.round(tRect.width);\n            let h = tRect.height = Math.round(tRect.height);\n            tRect.x = Math.round(tRect.x);\n            tRect.y = Math.round(tRect.y);\n\n            if (w > 0 && h > 0) {\n                let tmpRT: any = (ctx as any).drawMask(w, h);\n                /*var tmpRT: RenderTexture2D = WebGLRTMgr.getRT(w, h);\n\n                ctx.breakNextMerge();\n                //先把mask画到tmpTarget上\n                ctx.pushRT();\n                ctx.addRenderObject(SubmitCMD.create([ctx, tmpRT, w, h], RenderSprite.tmpTarget, this));*/\n                mask.render(ctx, -tRect.x, -tRect.y);\n                let shrink = 0.1;\n                (ctx as any).drawMasked(x + tRect.x - sprite.getStyle().pivotX + shrink, y + tRect.y - sprite.getStyle().pivotY + shrink, w - shrink * 2, h - shrink * 2);\n                //ctx.breakNextMerge();\n                //ctx.popRT();\n                //设置裁剪为mask的大小。要考虑pivot。有pivot的话，可能要从负的开始\n                //ctx.save();\n\n                /**\n                 * 有时候会有浮点误差，例如起点在0.5的时候，有的像素中心正好处于边界，可能会出错。\n                 * 对于mask来说，一般缩小一点点是没有问题的，所以缩小0.1个像素\n                 */\n                //let shrink = 0.1;\n                //ctx.clipRect(x + tRect.x - sprite.getStyle().pivotX + shrink, y + tRect.y - sprite.getStyle().pivotY + shrink, w-shrink*2, h-shrink*2);\n                //ctx.clipRect(x + tRect.x - sprite.getStyle().pivotX, y + tRect.y - sprite.getStyle().pivotY, w, h);\n\n                //画出本节点的内容\n                next._fun.call(next, sprite, ctx, x, y);\n\n                (ctx as any).drawMaskComposite(tmpRT, x + tRect.x - sprite.getStyle().pivotX, y + tRect.y - sprite.getStyle().pivotY, w, h);\n                //ctx.restore();\n\n                //设置混合模式\n                //preBlendMode = ctx.globalCompositeOperation;\n                //ctx.addRenderObject(SubmitCMD.create([\"mask\"], RenderSprite.setBlendMode, this));\n\n                //var shaderValue: Value2D = Value2D.create(ShaderDefines2D.TEXTURE2D, 0);\n                //var uv = Texture.INV_UV;\n                //这个地方代码不要删除，为了解决在iphone6-plus上的诡异问题\n                //renderTarget + StencilBuffer + renderTargetSize < 32 就会变得超级卡\n                //所以增加的限制。王亚伟\n                //  180725 本段限制代码已经删除，如果出了问题再找王亚伟\n\n                //ctx.drawTarget(tmpRT, x + tRect.x - sprite.getStyle().pivotX, y + tRect.y - sprite.getStyle().pivotY, w, h, Matrix.TEMP.identity(), shaderValue, uv, 6);\n                //ctx.addRenderObject(SubmitCMD.create([tmpRT], RenderSprite.recycleTarget, this));\n\n                //恢复混合模式\n                //ctx.addRenderObject(SubmitCMD.create([preBlendMode], RenderSprite.setBlendMode, this));\n            }\n            ctx.restore();\n        } else {\n            next._fun.call(next, sprite, ctx, x, y);\n        }\n\n    }\n\n    //static tempUV: any[] = new Array(8);\n    static tmpTarget(ctx: Context, rt: RenderTexture2D, w: number, h: number): void {\n        rt.start();\n        rt.clear(0, 0, 0, 0);\n    }\n\n    static recycleTarget(rt: RenderTexture2D): void {\n        WebGLRTMgr.releaseRT(rt);\n    }\n\n    static setBlendMode(blendMode: string): void {\n        BlendMode.targetFns[BlendMode.TOINT[blendMode]]();\n    }\n}\n\n","import { Point } from \"./Point\";\n\n/**\n * @private\n * 计算贝塞尔曲线的工具类。\n */\nexport class Bezier {\n\n    /**\n     * 工具类单例\n     */\n    static I: Bezier = new Bezier();\n    /** @private */\n    private _controlPoints: any[] = [new Point(), new Point(), new Point()];\n    /** @private */\n    private _calFun: Function = this.getPoint2;\n\n    /** @private */\n    private _switchPoint(x: number, y: number): void {\n        var tPoint: Point = this._controlPoints.shift();\n        tPoint.setTo(x, y);\n        this._controlPoints.push(tPoint);\n    }\n\n    /**\n     * 计算二次贝塞尔点。\n     */\n    getPoint2(t: number, rst: any[]): void {\n        //二次贝塞尔曲线公式\n        var p1: Point = this._controlPoints[0];\n        var p2: Point = this._controlPoints[1];\n        var p3: Point = this._controlPoints[2];\n        var lineX: number = Math.pow((1 - t), 2) * p1.x + 2 * t * (1 - t) * p2.x + Math.pow(t, 2) * p3.x;\n        var lineY: number = Math.pow((1 - t), 2) * p1.y + 2 * t * (1 - t) * p2.y + Math.pow(t, 2) * p3.y;\n        rst.push(lineX, lineY);\n    }\n\n    /**\n     * 计算三次贝塞尔点\n     */\n    getPoint3(t: number, rst: any[]): void {\n        //三次贝塞尔曲线公式\n        var p1: Point = this._controlPoints[0];\n        var p2: Point = this._controlPoints[1];\n        var p3: Point = this._controlPoints[2];\n        var p4: Point = this._controlPoints[3];\n        var lineX: number = Math.pow((1 - t), 3) * p1.x + 3 * p2.x * t * (1 - t) * (1 - t) + 3 * p3.x * t * t * (1 - t) + p4.x * Math.pow(t, 3);\n        var lineY: number = Math.pow((1 - t), 3) * p1.y + 3 * p2.y * t * (1 - t) * (1 - t) + 3 * p3.y * t * t * (1 - t) + p4.y * Math.pow(t, 3);\n        rst.push(lineX, lineY);\n    }\n\n    /**\n     * 计算贝塞尔点序列\n     */\n    insertPoints(count: number, rst: any[]): void {\n        var i: number;\n        count = count > 0 ? count : 5;\n        var dLen: number;\n        dLen = 1 / count;\n        for (i = 0; i <= 1; i += dLen) {\n            this._calFun(i, rst);\n        }\n    }\n\n    /**\n     * 获取贝塞尔曲线上的点。\n     * @param pList 控制点[x0,y0,x1,y1...]\n     * @param inSertCount 每次曲线的插值数量\n     */\n    getBezierPoints(pList: any[], inSertCount: number = 5, count: number = 2): any[] {\n        var i: number, len: number;\n        len = pList.length;\n        if (len < (count + 1) * 2) return [];\n        var rst: any[] = [];\n        switch (count) {\n            case 2:\n                this._calFun = this.getPoint2;\n                break;\n            case 3:\n                this._calFun = this.getPoint3;\n                break;\n            default:\n                return [];\n        }\n        while (this._controlPoints.length <= count) {\n            this._controlPoints.push(Point.create());\n        }\n        for (i = 0; i < count * 2; i += 2) {\n            this._switchPoint(pList[i], pList[i + 1]);\n        }\n        for (i = count * 2; i < len; i += 2) {\n            this._switchPoint(pList[i], pList[i + 1]);\n            if ((i / 2) % count == 0) this.insertPoints(inSertCount, rst);\n        }\n        return rst;\n    }\n}\n\n","export enum RenderStateType{\n    DepthTest,\n    DepthMask,\n    DepthFunc,\n    StencilTest,\n    StencilMask,\n    StencilFunc,\n    StencilOp,\n    BlendType,\n    BlendEquation,\n    BlendEquationSeparate,\n    BlendFunc,\n    BlendFuncSeperate,\n    CullFace,\n    FrontFace,\n}","import { ColorUtils } from \"../../utils/ColorUtils\"\n\nexport class DrawStyle {\n    static DEFAULT: DrawStyle = new DrawStyle(\"#000000\")\n\n    _color: ColorUtils;\n\n    static create(value: any): DrawStyle {\n        if (value) {\n            var color: ColorUtils = (value instanceof ColorUtils) ? ((<ColorUtils>value)) : ColorUtils.create(value);\n            return color._drawStyle || (color._drawStyle = new DrawStyle(value));\n        }\n        return DrawStyle.DEFAULT;\n    }\n\n    constructor(value: any) {\n        this.setValue(value);\n    }\n\n    setValue(value: any): void {\n        if (value) {\n            this._color = (value instanceof ColorUtils) ? ((<ColorUtils>value)) : ColorUtils.create(value);\n        }\n        else this._color = ColorUtils.create(\"#000000\");\n    }\n\n    reset(): void {\n        this._color = ColorUtils.create(\"#000000\");\n    }\n\n    toInt(): number {\n        return this._color.numColor;\n    }\n\n    equal(value: any): boolean {\n        if (typeof (value) == 'string') return this._color.strColor === (<string>value);\n        if (value instanceof ColorUtils) return this._color.numColor === ((<ColorUtils>value)).numColor;\n        return false;\n    }\n\n    toColorStr(): string {\n        return this._color.strColor;\n    }\n}\n\n\n","\nexport class Path {\n\n    //public var _rect:Rectangle;\n    /**@internal */\n    _lastOriX: number = 0;\t//moveto等的原始位置。没有经过内部矩阵变换的\n    /**@internal */\n    _lastOriY: number = 0;\n    paths: any[] = [];\t//所有的路径。{@type renderPath[] }\n    private _curPath: renderPath = null;\n\n\n    constructor() {\n    }\n\n    beginPath(convex: boolean): void {\n        this.paths.length = 1;\n        this._curPath = this.paths[0] = new renderPath();\n        this._curPath.convex = convex;\n        //_curPath.path = [];\n    }\n\n    closePath(): void {\n        this._curPath.loop = true;\n    }\n\n    newPath(): void {\n        this._curPath = new renderPath();\n        this.paths.push(this._curPath);\n    }\n\n    addPoint(pointX: number, pointY: number): void {\n        //tempArray.push(pointX, pointY);\n        this._curPath.path.push(pointX, pointY);\n    }\n\n    //直接添加一个完整的path\n    push(points: any[], convex: boolean): void {\n        if (!this._curPath) {\n            this._curPath = new renderPath();\n            this.paths.push(this._curPath);\n        } else if (this._curPath.path.length > 0) {\n            this._curPath = new renderPath();\n            this.paths.push(this._curPath);\n        }\n        var rp: renderPath = this._curPath;\n        rp.path = points.slice();//TODO 这个可能多次slice了\n        rp.convex = convex;\n    }\n\n    reset(): void {\n        this.paths.length = 0;//TODO 复用\n    }\n}\n\n\n\nclass renderPath {\n    path: any[] = []; //[x,y,x,y,....]的数组\n    loop: boolean = false;\n    convex: boolean = false;\n}\n","import { ISaveData } from \"./ISaveData\";\nimport { Context } from \"../../../resource/Context\"\nimport { SubmitBase } from \"../../submit/SubmitBase\"\n\nexport class SaveBase implements ISaveData {\n\n    /*[FILEINDEX:1]*/\n    /*[DISBALEOUTCONST-BEGIN]*/\n    static TYPE_ALPHA: number = 0x1;\n    static TYPE_FILESTYLE: number = 0x2;\n    static TYPE_FONT: number = 0x8;\n    static TYPE_LINEWIDTH: number = 0x100;\n    static TYPE_STROKESTYLE: number = 0x200;\n    static TYPE_MARK: number = 0x400;\n    static TYPE_TRANSFORM: number = 0x800;\n    static TYPE_TRANSLATE: number = 0x1000;\n    static TYPE_ENABLEMERGE: number = 0x2000;\n\n    static TYPE_TEXTBASELINE: number = 0x4000;\n    static TYPE_TEXTALIGN: number = 0x8000;\n    static TYPE_GLOBALCOMPOSITEOPERATION: number = 0x10000;\n    static TYPE_CLIPRECT: number = 0x20000;\n    static TYPE_CLIPRECT_STENCIL: number = 0x40000;\n    static TYPE_IBVB: number = 0x80000;\n    static TYPE_SHADER: number = 0x100000;\n    static TYPE_FILTERS: number = 0x200000;\n    static TYPE_FILTERS_TYPE: number = 0x400000;\n    static TYPE_COLORFILTER: number = 0x800000;\n    /*[DISBALEOUTCONST-END]*/\n    private static POOL: any = SaveBase._createArray();\n    private static _namemap: any = SaveBase._init();\n    /**@internal */\n    static _createArray(): any[] {\n        var value: any = [];\n        value._length = 0;\n        return value;\n    }\n    /**@internal */\n    static _init(): any {\n        var namemap: any = SaveBase._namemap = {};\n\n        namemap[SaveBase.TYPE_ALPHA] = \"ALPHA\";\n        namemap[SaveBase.TYPE_FILESTYLE] = \"fillStyle\";\n        namemap[SaveBase.TYPE_FONT] = \"font\";\n        namemap[SaveBase.TYPE_LINEWIDTH] = \"lineWidth\";\n        namemap[SaveBase.TYPE_STROKESTYLE] = \"strokeStyle\";\n\n        namemap[SaveBase.TYPE_ENABLEMERGE] = \"_mergeID\";\n\n        namemap[SaveBase.TYPE_MARK] = namemap[SaveBase.TYPE_TRANSFORM] = namemap[SaveBase.TYPE_TRANSLATE] = [];\n\n        namemap[SaveBase.TYPE_TEXTBASELINE] = \"textBaseline\";\n        namemap[SaveBase.TYPE_TEXTALIGN] = \"textAlign\";\n        namemap[SaveBase.TYPE_GLOBALCOMPOSITEOPERATION] = \"_nBlendType\";\n        namemap[SaveBase.TYPE_SHADER] = \"shader\";\n        namemap[SaveBase.TYPE_FILTERS] = \"filters\";\n        namemap[SaveBase.TYPE_COLORFILTER] = '_colorFiler';\n        return namemap;\n    }\n\n    private _valueName: string;\n    private _value: any;\n    private _dataObj: any;\n    private _newSubmit: boolean;\n\n    constructor() {\n    }\n\n    isSaveMark(): boolean { return false; }\n\n    restore(context: Context): void {\n        this._dataObj[this._valueName] = this._value;\n        SaveBase.POOL[SaveBase.POOL._length++] = this;\n        this._newSubmit && (context._curSubmit = SubmitBase.RENDERBASE);\n    }\n\n    static save(context: Context, type: number, dataObj: any, newSubmit: boolean): void {\n        if ((context._saveMark._saveuse & type) !== type) {\n            context._saveMark._saveuse |= type;\n            var cache: any = SaveBase.POOL;\n            var o: any = cache._length > 0 ? cache[--cache._length] : (new SaveBase());\n            o._value = dataObj[o._valueName = SaveBase._namemap[type]];\n            o._dataObj = dataObj;\n            o._newSubmit = newSubmit;\n            var _save: any = context._save;\n            _save[_save._length++] = o;\n        }\n    }\n}\n\n\n","import { ISaveData } from \"./ISaveData\";\nimport { SaveBase } from \"./SaveBase\";\nimport { Matrix } from \"../../../maths/Matrix\"\nimport { Rectangle } from \"../../../maths/Rectangle\"\nimport { Context } from \"../../../resource/Context\"\n\nexport class SaveClipRect implements ISaveData {\n\n    private static POOL: any = SaveBase._createArray();\n\n    _globalClipMatrix: Matrix = new Matrix();\n    _clipInfoID: number = -1;\n    _clipRect: Rectangle = new Rectangle();\n    incache: boolean = false;\n\n    isSaveMark(): boolean { return false; }\n\n    restore(context: Context): void {\n        this._globalClipMatrix.copyTo(context._globalClipMatrix);\n        this._clipRect.clone(context._clipRect);\n        context._clipInfoID = this._clipInfoID;\n        SaveClipRect.POOL[SaveClipRect.POOL._length++] = this;\n        context._clipInCache = this.incache;\n    }\n\n    static save(context: Context): void {\n        if ((context._saveMark._saveuse & SaveBase.TYPE_CLIPRECT) == SaveBase.TYPE_CLIPRECT) return;\n        context._saveMark._saveuse |= SaveBase.TYPE_CLIPRECT;\n        var cache: any = SaveClipRect.POOL;\n        var o: SaveClipRect = cache._length > 0 ? cache[--cache._length] : (new SaveClipRect());\n        context._globalClipMatrix.copyTo(o._globalClipMatrix);\n        context._clipRect.clone(o._clipRect);\n        o._clipInfoID = context._clipInfoID;\n        o.incache = context._clipInCache;\n        var _save: any = context._save;\n        _save[_save._length++] = o;\n    }\n}\n\n","import { Context } from \"../../../resource/Context\";\nimport { ISaveData } from \"./ISaveData\";\nimport { SaveBase } from \"./SaveBase\";\n\nexport class SaveMark implements ISaveData {\n\n    private static POOL: any = SaveBase._createArray();\n    /**@internal */\n    _saveuse: number = 0;\n    /**@internal */\n    _preSaveMark: SaveMark;\n\n    constructor() {\n    }\n\n    isSaveMark(): boolean {\n        return true;\n    }\n\n    restore(context: Context): void {\n        context._saveMark = this._preSaveMark;\n        SaveMark.POOL[SaveMark.POOL._length++] = this;\n    }\n\n    static Create(context: Context): SaveMark {\n        var no: any = SaveMark.POOL;\n        var o: SaveMark = no._length > 0 ? no[--no._length] : (new SaveMark());\n        o._saveuse = 0;\n        o._preSaveMark = context._saveMark;\n        context._saveMark = o;\n        return o;\n    }\n}\n\n","import { ISaveData } from \"./ISaveData\";\nimport { SaveBase } from \"./SaveBase\";\nimport { Matrix } from \"../../../maths/Matrix\"\nimport { Context } from \"../../../resource/Context\"\n\nexport class SaveTransform implements ISaveData {\n\n\n    private static POOL: any = SaveBase._createArray();\n    /**@internal */\n    _savematrix: Matrix;\n    /**@internal */\n    _matrix: Matrix = new Matrix();\n\n    constructor() {\n    }\n\n    isSaveMark(): boolean { return false; }\n\n    restore(context: Context): void {\n        context._curMat = this._savematrix;\n        SaveTransform.POOL[SaveTransform.POOL._length++] = this;\n    }\n\n    static save(context: Context): void {\n        var _saveMark: any = context._saveMark;\n        if ((_saveMark._saveuse & SaveBase.TYPE_TRANSFORM) === SaveBase.TYPE_TRANSFORM) return;\n        _saveMark._saveuse |= SaveBase.TYPE_TRANSFORM;\n        var no: any = SaveTransform.POOL;\n        var o: SaveTransform = no._length > 0 ? no[--no._length] : (new SaveTransform());\n        o._savematrix = context._curMat;\n        context._curMat = context._curMat.copyTo(o._matrix);\n        var _save: any = context._save;\n        _save[_save._length++] = o;\n    }\n}\n\n","import { ISaveData } from \"./ISaveData\";\nimport { SaveBase } from \"./SaveBase\";\nimport { Matrix } from \"../../../maths/Matrix\"\nimport { Context } from \"../../../resource/Context\"\n\nexport class SaveTranslate implements ISaveData {\n\n\n    private static POOL: any = SaveBase._createArray();\n    /**@internal */\n    _mat: Matrix = new Matrix();\n    isSaveMark(): boolean { return false; }\n\n    restore(context: Context): void {\n        this._mat.copyTo(context._curMat);\n        SaveTranslate.POOL[SaveTranslate.POOL._length++] = this;\n    }\n\n    static save(context: Context): void {\n        var no: any = SaveTranslate.POOL;\n        var o: SaveTranslate = no._length > 0 ? no[--no._length] : (new SaveTranslate());\n        context._curMat.copyTo(o._mat);\n        var _save: any = context._save;\n        _save[_save._length++] = o;\n    }\n\n}\n\n\n","#define SHADER_NAME TextureVS2D\n#include \"Sprite2DVertex.glsl\";\n\nvoid main() {\n\tvertexInfo info;\n\tgetVertexInfo(info);\n\n\tv_cliped = info.cliped;\n\tv_texcoordAlpha = info.texcoordAlpha;\n\tv_useTex = info.useTex;\n\tv_color = info.color;\n\n\tvec4 pos;\n\tgetPosition(pos);\n\tgl_Position = pos;\n\n}\n","/**\n * Mesh topology.\n */\n export enum MeshTopology {\n    /** Draws a single dot */\n    Points,\n    /** Draws a line between a pair of vertices */\n    Lines,\n    /** Draws a straight line to the next vertex, and connects the last vertex back to the first */\n    LineLoop,\n    /** Draws a straight line to the next vertex. */\n    LineStrip,\n    /** Draws a triangle for a group of three vertices */\n    Triangles,\n    /** Draws a triangle strip */\n    TriangleStrip,\n    /** Draws a triangle fan */\n    TriangleFan\n  }\n  ","import { RenderTargetFormat } from \"../RenderEngine/RenderEnum/RenderTargetFormat\";\nimport { Const } from \"../Const\";\nimport { ColorFilter } from \"../filters/ColorFilter\";\nimport { Matrix } from \"../maths/Matrix\";\nimport { BlendEquationSeparate } from \"../RenderEngine/RenderEnum/BlendEquationSeparate\";\nimport { BlendFactor } from \"../RenderEngine/RenderEnum/BlendFactor\";\nimport { CullMode } from \"../RenderEngine/RenderEnum/CullMode\";\nimport { RenderStateType } from \"../RenderEngine/RenderEnum/RenderStateType\";\nimport { RenderStateCommand } from \"../RenderEngine/RenderStateCommand\";\nimport { ColorUtils } from \"../utils/ColorUtils\";\nimport { WordText } from \"../utils/WordText\";\nimport { BlendMode } from \"../webgl/canvas/BlendMode\";\nimport { NativeWebGLCacheAsNormalCanvas } from \"../webgl/canvas/NativeWebGLCacheAsNormalCanvas\";\nimport { Value2D } from \"../webgl/shader/d2/value/Value2D\";\nimport { ISubmit } from \"../webgl/submit/ISubmit\";\nimport { HTMLCanvas } from \"./HTMLCanvas\";\nimport { RenderTexture2D } from \"./RenderTexture2D\";\nimport { Texture } from \"./Texture\";\nimport { BufferState } from \"../webgl/utils/BufferState\";\nimport { RenderTexture } from \"./RenderTexture\";\nimport { NativeRenderTexture2D } from \"./NativeRenderTexture2D\";\nimport { Point } from \"../maths/Point\";\nimport { LayaGL } from \"../layagl/LayaGL\";\n\n/**\n * @internal\n */\nenum CONTEXT2D_FUNCTION_ID {\n    SIZE = 0,\n    CLEAR,\n    SAVE,\n    TRANSFORM,\n    ALPHA,\n    RESTORE,\n    FILL_STYLE,\n    FILL_RECT,\n    STROKE_STYLE,\n    LINE_WIDTH,\n    STROKE_RECT,\n    FILL_WORD_TEXT,\n    DRAW_TEXTURE_SIZE_GRID,\n    DRAW_TEXTURE,\n    CLIP_RECT,\n    DRAW_LINE,\n    DRAW_LINES,\n    SCALE,\n    TRANSLATE,\n    ROTATE,\n    DRAW_CIRCLE,\n    DRAW_PIE,\n    DRAW_POLY,\n    DRAW_CURVES,\n    BEGIN_PATH,\n    MOVE_TO,\n    LINE_TO,\n    ARC_TO,\n    CLOSE_PATH,\n    FILL,\n    STROKE,\n    SET_AS_BITMAP,\n    DRAW_MASKED,\n    DRAW_TRANGLES,\n    SET_GLOBAL_COMPOSITE_OPERTAION,\n    FILL_WORDS,\n    FILL_TEXTURE,\n}\n\n/**\n * @internal\n */\nexport class NativeContext {\n    public static readonly ARRAY_BUFFER_TYPE_DATA = 0;          //创建ArrayBuffer时的类型为Data\n    public static readonly ARRAY_BUFFER_TYPE_CMD = 1;           //创建ArrayBuffer时的类型为Command\n    public static readonly ARRAY_BUFFER_REF_REFERENCE = 0;          //创建ArrayBuffer时的类型为引用\n    public static readonly ARRAY_BUFFER_REF_COPY = 1;               //创建ArrayBuffer时的类型为拷贝\n\n    public _idata: Int32Array;\n    public _fdata: Float32Array;\n    public _byteArray: Uint8Array;\n    public _buffer: ArrayBuffer;\n    private _byteLen: number = 0;\n\n\n    static ENUM_TEXTALIGN_DEFAULT: number = 0;\n    static ENUM_TEXTALIGN_CENTER: number = 1;\n    static ENUM_TEXTALIGN_RIGHT: number = 2;\n    private _nativeObj: any;\n    private _tempRenderTexture2D: any;\n    sprite: any = null;\n    private _renderObject3DList: any[] = [];\n    /**@internal */\n    _tmpMatrix: Matrix = new Matrix();\n    static __init__(): void {\n    }\n    constructor() {\n        this._nativeObj = new (window as any)._conchContext((LayaGL.renderEngine as any)._nativeObj);\n        this._byteLen = 1024 * 512;\n        this._tempRenderTexture2D = new NativeRenderTexture2D(0, 0, RenderTargetFormat.R8G8B8A8, RenderTargetFormat.None, false);\n        this._init(false);\n    }\n    _init(isSyncToRenderThread: boolean): void {\n        this._buffer = new ArrayBuffer(this._byteLen);\n        this._idata = new Int32Array(this._buffer);\n        this._fdata = new Float32Array(this._buffer);\n        this._byteArray = new Uint8Array(this._buffer);\n\n        var bufferConchRef: any = (window as any).webglPlus.createArrayBufferRef(this._buffer, NativeContext.ARRAY_BUFFER_TYPE_CMD, isSyncToRenderThread, NativeContext.ARRAY_BUFFER_REF_REFERENCE);\n        this._nativeObj.setSharedCommandBuffer(bufferConchRef);\n        //this._layagl.createArrayBufferRef(this._buffer, NativeCommandEncoder.ARRAY_BUFFER_TYPE_CMD, isSyncToRenderThread);\n        this._idata[0] = 1;\n    }\n    _need(sz: number): void {\n        if ((this._byteLen - (this._idata[0] << 2)) >= sz) return;\n        this._nativeObj.flushCommand();\n        if (sz > this._byteLen) {\n            throw \"too big\";\n        }\n    }\n\n    /**@private */\n    get lineJoin(): string {\n        return '';\n    }\n\n    /**@private */\n    set lineJoin(value: string) {\n    }\n\n    /**@private */\n    get lineCap(): string {\n        return '';\n    }\n\n    /**@private */\n    set lineCap(value: string) {\n    }\n\n    /**@private */\n    get miterLimit(): string {\n        return '';\n    }\n\n    /**@private */\n    set miterLimit(value: string) {\n    }\n\n    /**@private */\n    clearRect(x: number, y: number, width: number, height: number): void {\n    }\n\n    set isMain(value: boolean) {\n        this._nativeObj.flushCommand();\n        this._nativeObj.isMain = value;\n    }\n    get isMain() {\n        this._nativeObj.flushCommand();\n        return this._nativeObj.isMain;\n    }\n    set _targets(target: RenderTexture2D) {\n        if (target) {\n            this._nativeObj.flushCommand();\n            this._nativeObj._target = (target as any)._nativeObj;\n        }\n    }\n    get _targets(): RenderTexture2D {\n        this._nativeObj.flushCommand();\n        let target = this._nativeObj._target;\n        //if (target && !this._tempRenderTexture2D._renderTarget) {\n        if (target) {\n            this._tempRenderTexture2D.width = this._nativeObj.width;\n            this._tempRenderTexture2D.height = this._nativeObj.height;\n            this._tempRenderTexture2D._nativeObj = target;\n            this._tempRenderTexture2D._renderTarget = target._renderTarget;\n            this._tempRenderTexture2D._texture = target._renderTarget._textures[0];\n            return this._tempRenderTexture2D;\n        }\n        return null;\n    }\n    alpha(value: number): void {\n        //this._nativeObj.globalAlpha *= value;\n        //this.add_if(CONTEXT2D_FUNCTION_ID.ALPHA, value);\n        this.globalAlpha *= value;\n    }\n    flush(): void {\n        BufferState._curBindedBufferState && BufferState._curBindedBufferState.unBind();\n        //this._nativeObj.flush();\n        this._nativeObj.flushCommand();\n        this._nativeObj.flush();\n\n    }\n    clear(): void {\n        //this._nativeObj.clear();\n        this.add_i(CONTEXT2D_FUNCTION_ID.CLEAR);\n        this._nativeObj.flushCommand();\n        this._renderObject3DList.length = 0;\n    }\n    /**\n     * 释放所有资源\n     * @param\tkeepRT  是否保留rendertarget\n     */\n    destroy(keepRT: boolean = false): void {\n        this._nativeObj.flushCommand();\n        if (this._tempRenderTexture2D._nativeObj) {\n            this._tempRenderTexture2D._nativeObj._deleteRT = keepRT;\n        }\n        this._nativeObj.destroy(keepRT);\n    }\n\n    static const2DRenderCMD: RenderStateCommand;\n    static set2DRenderConfig(): void {\n\n        if (!NativeContext.const2DRenderCMD) {\n            const cmd = NativeContext.const2DRenderCMD = LayaGL.renderEngine.createRenderStateComand();\n            cmd.addCMD(RenderStateType.BlendType, true);\n            //WebGLContext.setBlendEquation(gl, gl.FUNC_ADD);\n            cmd.addCMD(RenderStateType.BlendEquation, BlendEquationSeparate.ADD);\n            BlendMode.activeBlendFunction = null;// 防止submit不设置blend\n            //WebGLContext.setBlendFunc(gl, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n            cmd.addCMD(RenderStateType.BlendFunc, [BlendFactor.One, BlendFactor.OneMinusSourceAlpha]);\n            //WebGLContext.setDepthTest(gl, false);\n            cmd.addCMD(RenderStateType.DepthTest, false);\n            //WebGLContext.setDepthMask(gl, true);\n            cmd.addCMD(RenderStateType.DepthMask, true);\n            //WebGLContext.setCullFace(gl, false);\n            cmd.addCMD(RenderStateType.CullFace, false);\n            //WebGLContext.setFrontFace(gl, gl.CCW);\n            cmd.addCMD(RenderStateType.FrontFace, CullMode.Front);\n        }\n        NativeContext.const2DRenderCMD.applyCMD();\n        RenderTexture.currentActive && RenderTexture.currentActive._end();\n        (window as any).set2DRenderConfig();\n        BufferState._curBindedBufferState && BufferState._curBindedBufferState.unBind();\n    }\n    set globalCompositeOperation(value: string) {\n        //this._nativeObj.globalCompositeOperation = value;\n        this.add_i_String(CONTEXT2D_FUNCTION_ID.SET_GLOBAL_COMPOSITE_OPERTAION, value);\n    }\n\n    get globalCompositeOperation(): string {\n        this._nativeObj.flushCommand();\n        return this._nativeObj.globalCompositeOperation;\n    }\n    set fillStyle(value: any) {\n        var c: ColorUtils = ColorUtils.create(value);\n        this.add_ii(CONTEXT2D_FUNCTION_ID.FILL_STYLE, c.numColor);\n    }\n\n    get fillStyle(): any {\n        this._nativeObj.flushCommand();\n        return this._nativeObj.fillStyle;\n    }\n    set globalAlpha(value: number) {\n        this.add_if(CONTEXT2D_FUNCTION_ID.ALPHA, value);\n    }\n\n    get globalAlpha(): number {\n        this._nativeObj.flushCommand();\n        return this._nativeObj.globalAlpha;\n    }\n    save(): void {\n        //this._nativeObj.save();\n        this.add_i(CONTEXT2D_FUNCTION_ID.SAVE);\n    }\n    restore(): void {\n        //this._nativeObj.restore();\n        this.add_i(CONTEXT2D_FUNCTION_ID.RESTORE);\n    }\n    saveTransform(matrix: Matrix): void {\n        //this._nativeObj.save();\n        this.add_i(CONTEXT2D_FUNCTION_ID.SAVE);\n    }\n    transformByMatrix(matrix: Matrix, tx: number, ty: number): void {\n        //this.transform(matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx + tx, matrix.ty + ty);\n        this.add_iffffff(CONTEXT2D_FUNCTION_ID.TRANSFORM, matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx + tx, matrix.ty + ty);\n    }\n    restoreTransform(matrix: Matrix): void {\n        //this._nativeObj.restore();\n        this.add_i(CONTEXT2D_FUNCTION_ID.RESTORE);\n    }\n    clipRect(x: number, y: number, width: number, height: number): void {\n        //this._nativeObj.clipRect(x, y, width, height);\n        this.add_iffff(CONTEXT2D_FUNCTION_ID.CLIP_RECT, x, y, width, height);\n    }\n    transform(a: number, b: number, c: number, d: number, tx: number, ty: number): void {\n        //this._nativeObj.transform(a, b, c, d, tx, ty);\n        this.add_iffffff(CONTEXT2D_FUNCTION_ID.TRANSFORM, a, b, c, d, tx, ty);\n    }\n    scale(scaleX: number, scaleY: number): void {\n        this.add_iff(CONTEXT2D_FUNCTION_ID.SCALE, scaleX, scaleY);\n    }\n\n    drawTexture(tex: Texture, x: number, y: number, width: number, height: number, color: number = 0xffffffff): void {\n        if (!this.checkTexture(tex)) {\n            return;\n        }\n        //this._nativeObj.drawTexture((tex as any).bitmap._texture.id, x, y, width, height, (tex as any).uv);\n        this.add_iiffffffffffffi(CONTEXT2D_FUNCTION_ID.DRAW_TEXTURE, (tex as any).bitmap._texture.id, x, y, width, height\n            , (tex as any).uv[0]\n            , (tex as any).uv[1]\n            , (tex as any).uv[2]\n            , (tex as any).uv[3]\n            , (tex as any).uv[4]\n            , (tex as any).uv[5]\n            , (tex as any).uv[6]\n            , (tex as any).uv[7]\n            , color);\n    }\n    drawTextureWithTransform(tex: Texture, x: number, y: number, width: number, height: number, transform: Matrix | null, tx: number, ty: number, alpha: number, blendMode: string | null, uv?: number[], color: number = 0xffffffff): void {\n        if (!this.checkTexture(tex)) {\n            return;\n        }\n        /*this._nativeObj.save();\n        this._nativeObj.globalAlpha = alpha;\n        if (transform) {\n            this._nativeObj.transform(transform.a, transform.b, transform.c, transform.d, transform.tx + tx, transform.ty + ty);\n            this._nativeObj.drawTexture((tex as any).bitmap._texture.id, x, y, width || tex.width, height|| tex.height, uv || (tex as any).uv);\n        }\n        else {\n            this._nativeObj.drawTexture((tex as any).bitmap._texture.id, x + tx, y + ty, width || tex.width, height|| tex.height, uv || (tex as any).uv);\n        }\n        this._nativeObj.restore();*/\n        this.save();\n        this.alpha(alpha);\n        var uvs: any = uv || (tex as any).uv;\n        if (transform) {\n            this.add_iffffff(CONTEXT2D_FUNCTION_ID.TRANSFORM, transform.a, transform.b, transform.c, transform.d, transform.tx + tx, transform.ty + ty);\n            this.add_iiffffffffffffi(CONTEXT2D_FUNCTION_ID.DRAW_TEXTURE, (tex as any).bitmap._texture.id, x, y, width || tex.width, height || tex.height\n                , uvs[0]\n                , uvs[1]\n                , uvs[2]\n                , uvs[3]\n                , uvs[4]\n                , uvs[5]\n                , uvs[6]\n                , uvs[7]\n                , color);\n        }\n        else {\n            this.add_iiffffffffffffi(CONTEXT2D_FUNCTION_ID.DRAW_TEXTURE, (tex as any).bitmap._texture.id, x + tx, y + ty, width || tex.width, height || tex.height\n                , uvs[0]\n                , uvs[1]\n                , uvs[2]\n                , uvs[3]\n                , uvs[4]\n                , uvs[5]\n                , uvs[6]\n                , uvs[7]\n                , color);\n        }\n        this.restore();\n    }\n\n    drawTextureWithSizeGrid(tex: Texture, tx: number, ty: number, width: number, height: number, sizeGrid: any[], gx: number, gy: number, color: number): void {\n        if (!this.checkTexture(tex)) {\n            return;\n        }\n\n        var uv = tex.uv, w: number = tex.bitmap.width, h: number = tex.bitmap.height;\n\n        var top: number = sizeGrid[0];\n        var left: number = sizeGrid[3];\n        var right: number = sizeGrid[1];\n        var bottom: number = sizeGrid[2];\n        var repeat: boolean = sizeGrid[4];\n\n        /*this._nativeObj.drawTextureWithSizeGrid((tex as any).bitmap._texture.id, tx, ty, width, height, top, right, bottom, left, repeat, gx, gy, uv[0]\n            ,uv[1]\n            ,uv[2]\n            ,uv[3]\n            ,uv[4]\n            ,uv[5]\n            ,uv[6]\n            ,uv[7]);*/\n        this.add_iiffffffffiffffffffffi(\n            CONTEXT2D_FUNCTION_ID.DRAW_TEXTURE_SIZE_GRID,\n            (tex as any).bitmap._texture.id, tx, ty, width, height, top, right, bottom, left, repeat ? 1 : 0, gx, gy\n            , uv[0]\n            , uv[1]\n            , uv[2]\n            , uv[3]\n            , uv[4]\n            , uv[5]\n            , uv[6]\n            , uv[7]\n            , color);\n    }\n    _drawTextureM(tex: Texture, x: number, y: number, width: number, height: number, transform: Matrix, alpha: number, uv: any[] | null, color: number): void {\n        if (!this.checkTexture(tex)) {\n            return;\n        }\n        /*this._nativeObj.save();\n        this._nativeObj.globalAlpha = alpha;\n        transform && this._nativeObj.transform(transform.a, transform.b, transform.c, transform.d, transform.tx, transform.ty);\n        this._nativeObj.drawTexture((tex as any).bitmap._texture.id, x, y, width || tex.width, height || tex.height, uv || (tex as any).uv);\n        this._nativeObj.restore();*/\n\n        this.save();\n        this.alpha(alpha);\n        if (transform) {\n            this.add_iffffff(CONTEXT2D_FUNCTION_ID.TRANSFORM, transform.a, transform.b, transform.c, transform.d, transform.tx, transform.ty);\n        }\n        var uvs: any = uv || (tex as any).uv;\n        this.add_iiffffffffffffi(CONTEXT2D_FUNCTION_ID.DRAW_TEXTURE, (tex as any).bitmap._texture.id, x, y, width || tex.width, height || tex.height\n            , uvs[0]\n            , uvs[1]\n            , uvs[2]\n            , uvs[3]\n            , uvs[4]\n            , uvs[5]\n            , uvs[6]\n            , uvs[7]\n            , color);\n        this.restore();\n\n    }\n    translate(x: number, y: number): void {\n        //this._nativeObj.translate(x, y);\n        this.add_iff(CONTEXT2D_FUNCTION_ID.TRANSLATE, x, y);\n    }\n    _transform(mat: any/*Matrix*/, pivotX: number, pivotY: number): void {\n        //this._nativeObj.translate(pivotX, pivotY);\n        //this._nativeObj.transform(mat.a, mat.b, mat.c, mat.d, mat.tx, mat.ty);\n        //this._nativeObj.translate(-pivotX, -pivotY);\n        this.add_iff(CONTEXT2D_FUNCTION_ID.TRANSLATE, pivotX, pivotY);\n        this.add_iffffff(CONTEXT2D_FUNCTION_ID.TRANSFORM, mat.a, mat.b, mat.c, mat.d, mat.tx, mat.ty);\n        this.add_iff(CONTEXT2D_FUNCTION_ID.TRANSLATE, -pivotX, -pivotY);\n    }\n    _rotate(angle: number, pivotX: number, pivotY: number): void {\n        //this._nativeObj.translate(pivotX, pivotY);\n        //this._nativeObj.rotate(angle);\n        //this._nativeObj.translate(-pivotX, -pivotY);\n\n        this.add_iff(CONTEXT2D_FUNCTION_ID.TRANSLATE, pivotX, pivotY);\n        this.add_if(CONTEXT2D_FUNCTION_ID.ROTATE, angle);\n        this.add_iff(CONTEXT2D_FUNCTION_ID.TRANSLATE, -pivotX, -pivotY);\n    }\n    _scale(scaleX: number, scaleY: number, pivotX: number, pivotY: number): void {\n        //this._nativeObj.translate(pivotX, pivotY);\n        //this._nativeObj.scale(scaleX, scaleY);\n        //this._nativeObj.translate(-pivotX, -pivotY);\n        this.add_iff(CONTEXT2D_FUNCTION_ID.TRANSLATE, pivotX, pivotY);\n        this.add_iff(CONTEXT2D_FUNCTION_ID.SCALE, scaleX, scaleY);\n        this.add_iff(CONTEXT2D_FUNCTION_ID.TRANSLATE, -pivotX, -pivotY);\n    }\n    _drawLine(x: number, y: number, fromX: number, fromY: number, toX: number, toY: number, lineColor: string, lineWidth: number, vid: number): void {\n        var c1: ColorUtils = ColorUtils.create(lineColor);\n        //this._nativeObj._drawLine(x, y, fromX, fromY, toX, toY, c1.numColor, lineWidth);\n        this.add_iffffffif(CONTEXT2D_FUNCTION_ID.DRAW_LINE, x, y, fromX, fromY, toX, toY, c1.numColor, lineWidth);\n    }\n    _drawLines(x: number, y: number, points: any[], lineColor: any, lineWidth: number, vid: number): void {\n        var c1: ColorUtils = ColorUtils.create(lineColor);\n        //this._nativeObj._drawLines(x, y, new Float32Array(points), c1.numColor, lineWidth);\n        this.add_iffif_ab(CONTEXT2D_FUNCTION_ID.DRAW_LINES, x, y, c1.numColor, lineWidth, new Float32Array(points));\n    }\n    _drawCircle(x: number, y: number, radius: number, fillColor: any, lineColor: any, lineWidth: number, vid: number): void {\n        var c1: ColorUtils = ColorUtils.create(fillColor);\n        var c2: ColorUtils = ColorUtils.create(lineColor);\n        //this._nativeObj._drawCircle(x, y, radius, fillColor ? true : false, c1.numColor, lineColor ? true : false, c2.numColor, lineWidth);\n        this.add_ifffiiiif(CONTEXT2D_FUNCTION_ID.DRAW_CIRCLE, x, y, radius, fillColor ? 1 : 0, c1.numColor, lineColor ? 1 : 0, c2.numColor, lineWidth);\n    }\n    _drawPie(x: number, y: number, radius: number, startAngle: number, endAngle: number, fillColor: any, lineColor: any, lineWidth: number, vid: number): void {\n        var c1: ColorUtils = ColorUtils.create(fillColor);\n        var c2: ColorUtils = ColorUtils.create(lineColor);\n        //this._nativeObj._drawPie(x, y, radius, startAngle, endAngle, fillColor ? true : false, c1.numColor, lineColor ? true : false, c2.numColor, lineWidth);\n        this.add_ifffffiiiif(CONTEXT2D_FUNCTION_ID.DRAW_PIE, x, y, radius, startAngle, endAngle, fillColor ? 1 : 0, c1.numColor, lineColor ? 1 : 0, c2.numColor, lineWidth);\n    }\n    _drawPoly(x: number, y: number, points: any[], fillColor: any, lineColor: any, lineWidth: number, isConvexPolygon: boolean, vid: number): void {\n        var c1: ColorUtils = ColorUtils.create(fillColor);\n        var c2: ColorUtils = ColorUtils.create(lineColor);\n        //this._nativeObj._drawPoly(x, y, new Float32Array(points), fillColor ? true : false, c1.numColor, lineColor ? true : false, c2.numColor, lineWidth, isConvexPolygon);\n        this.add_iffiiiifi_ab(CONTEXT2D_FUNCTION_ID.DRAW_POLY, x, y, fillColor ? 1 : 0, c1.numColor, lineColor ? 1 : 0, c2.numColor, lineWidth, isConvexPolygon ? 1 : 0, new Float32Array(points));\n    }\n    fillRect(x: number, y: number, width: number, height: number, fillColor: any) {\n        if (fillColor != null) {\n            var c: ColorUtils = ColorUtils.create(fillColor);\n            this.add_ii(CONTEXT2D_FUNCTION_ID.FILL_STYLE, c.numColor);\n        }\n        this.add_i(CONTEXT2D_FUNCTION_ID.SAVE);\n        this.add_iffff(CONTEXT2D_FUNCTION_ID.FILL_RECT, x, y, width, height);\n        this.add_i(CONTEXT2D_FUNCTION_ID.RESTORE);\n    }\n\n    fillTexture(texture: Texture, x: number, y: number, width: number, height: number, type: string, offset: Point, color: number): void {\n        if (!this.checkTexture(texture)) {\n            return;\n        }\n        var typeValue: number = 0;\n        switch (type) {\n            case \"repeat\": typeValue = 0; break;\n            case \"repeat-x\": typeValue = 1; break;\n            case \"repeat-y\": typeValue = 2; break;\n            case \"no-repeat\": typeValue = 3; break;\n            default: break;\n        }\n\n        this.add_iiffffiffi(CONTEXT2D_FUNCTION_ID.FILL_TEXTURE, (texture as any).bitmap._texture.id, x, y, width, height, typeValue, offset.x, offset.y, color);\n    }\n\n    drawRect(x: number, y: number, width: number, height: number, fillColor: any, lineColor: any, lineWidth: number): void {\n\n        /*if (fillColor != null) {\n            var c1: ColorUtils = ColorUtils.create(fillColor);\n   \n            this._nativeObj.save(); \n            this._nativeObj.fillStyle = c1.numColor;\n            this._nativeObj.fillRect(x, y, width, height);\n            this._nativeObj.restore();\n        }\n        if (lineColor != null) {         \n            var c2: ColorUtils = ColorUtils.create(lineColor);\n            this._nativeObj.save(); \n            this._nativeObj.strokeStyle = c2.numColor;\n            this._nativeObj.lineWidth = lineWidth;//lineColor\n            this._nativeObj.strokeRect(x, y, width, height);\n            this._nativeObj.restore();\n        }*/\n\n        if (fillColor != null) {\n            var c1: ColorUtils = ColorUtils.create(fillColor);\n\n            this.add_i(CONTEXT2D_FUNCTION_ID.SAVE);\n            this.add_ii(CONTEXT2D_FUNCTION_ID.FILL_STYLE, c1.numColor);\n            this.add_iffff(CONTEXT2D_FUNCTION_ID.FILL_RECT, x, y, width, height);\n            this.add_i(CONTEXT2D_FUNCTION_ID.RESTORE);\n        }\n        if (lineColor != null) {\n            var c2: ColorUtils = ColorUtils.create(lineColor);\n            this.add_i(CONTEXT2D_FUNCTION_ID.SAVE);\n            this.add_ii(CONTEXT2D_FUNCTION_ID.STROKE_STYLE, c2.numColor);\n            this.add_if(CONTEXT2D_FUNCTION_ID.LINE_WIDTH, lineWidth);\n            this.add_iffff(CONTEXT2D_FUNCTION_ID.STROKE_RECT, x, y, width, height);\n            this.add_i(CONTEXT2D_FUNCTION_ID.RESTORE);\n        }\n    }\n    _drawPath(x: number, y: number, paths: any[], brush: any, pen: any): void {\n        //形成路径\n        /*this._nativeObj.beginPath(false);\n        //x += args[0], y += args[1];\n\n        //var paths:Array = args[2];\n        for (var i: number = 0, n: number = paths.length; i < n; i++) {\n\n            var path: any[] = paths[i];\n            switch (path[0]) {\n                case \"moveTo\":\n                    this._nativeObj.moveTo(x + path[1], y + path[2]);\n                    break;\n                case \"lineTo\":\n                    this._nativeObj.lineTo(x + path[1], y + path[2]);\n                    break;\n                case \"arcTo\":\n                    this._nativeObj.arcTo(x + path[1], y + path[2], x + path[3], y + path[4], path[5]);\n                    break;\n                case \"closePath\":\n                    this._nativeObj.closePath();\n                    break;\n            }\n        }\n\n        //var brush:Object = args[3];\n        if (brush != null) {\n            var c1: ColorUtils = ColorUtils.create(brush.fillStyle);\n            this._nativeObj.fillStyle = c1.numColor;\n            this._nativeObj.fill();\n        }\n\n        //var pen:Object = args[4];\n        if (pen != null) {\n            var c2: ColorUtils = ColorUtils.create(pen.strokeStyle);\n            this._nativeObj.strokeStyle = c2.numColor;\n            this._nativeObj.lineWidth = pen.lineWidth || 1;\n            this._nativeObj.lineJoin = pen.lineJoin;\n            this._nativeObj.lineCap = pen.lineCap;\n            this._nativeObj.miterLimit = pen.miterLimit;\n            this._nativeObj.stroke();\n        }*/\n        this.add_ii(CONTEXT2D_FUNCTION_ID.BEGIN_PATH, 0);\n\n        for (var i: number = 0, n: number = paths.length; i < n; i++) {\n\n            var path: any[] = paths[i];\n            switch (path[0]) {\n                case \"moveTo\":\n                    this.add_iff(CONTEXT2D_FUNCTION_ID.MOVE_TO, x + path[1], y + path[2]);\n                    break;\n                case \"lineTo\":\n                    this.add_iff(CONTEXT2D_FUNCTION_ID.LINE_TO, x + path[1], y + path[2]);\n                    break;\n                case \"arcTo\":\n                    this.add_ifffff(CONTEXT2D_FUNCTION_ID.ARC_TO, x + path[1], y + path[2], x + path[3], y + path[4], path[5]);\n                    break;\n                case \"closePath\":\n                    this.add_i(CONTEXT2D_FUNCTION_ID.CLOSE_PATH);\n                    break;\n            }\n        }\n\n        //var brush:Object = args[3];\n        if (brush != null) {\n            var c1: ColorUtils = ColorUtils.create(brush.fillStyle);\n            this.add_ii(CONTEXT2D_FUNCTION_ID.FILL_STYLE, c1.numColor);\n            this.add_i(CONTEXT2D_FUNCTION_ID.FILL);\n        }\n\n        //var pen:Object = args[4];\n        if (pen != null) {\n            var c2: ColorUtils = ColorUtils.create(pen.strokeStyle);\n            this.add_ii(CONTEXT2D_FUNCTION_ID.STROKE_STYLE, c2.numColor);\n            this.add_if(CONTEXT2D_FUNCTION_ID.LINE_WIDTH, pen.lineWidth || 1);\n            //this._nativeObj.lineJoin = pen.lineJoin;\n            //this._nativeObj.lineCap = pen.lineCap;\n            //this._nativeObj.miterLimit = pen.miterLimit;\n            this.add_i(CONTEXT2D_FUNCTION_ID.STROKE);\n        }\n    }\n    drawCurves(x: number, y: number, points: any[], lineColor: any, lineWidth: number): void {\n        var c1: ColorUtils = ColorUtils.create(lineColor);\n\n        /*this._nativeObj.beginPath(false);\n        this._nativeObj.strokeStyle = c1.numColor;\n        this._nativeObj.lineWidth = lineWidth;\n        //var points:Array = args[2];\n        //x += args[0], y += args[1];\n        this._nativeObj.moveTo(x + points[0], y + points[1]);\n        var i: number = 2, n: number = points.length;\n        while (i < n) {\n            this._nativeObj.quadraticCurveTo(x + points[i++], y + points[i++], x + points[i++], y + points[i++]);\n        }\n        this._nativeObj.stroke();*/\n        this.add_iffif_ab(CONTEXT2D_FUNCTION_ID.DRAW_CURVES, x, y, c1.numColor, lineWidth, new Float32Array(points));\n    }\n    drawCanvas(canvas: HTMLCanvas, x: number, y: number, width: number, height: number): void {\n        if (!canvas) return;\n        this._nativeObj.flushCommand();\n        if (canvas instanceof (NativeWebGLCacheAsNormalCanvas)) {\n            this._nativeObj.drawCanvasNormal(canvas._nativeObj, x, y, width, height);\n            //this.add_iiffff(CONTEXT2D_FUNCTION_ID.DRAW_CANVAS_NORMAL, canvas._nativeObj.id, x, y, width, height);\n        }\n        else {\n            this._nativeObj.drawCanvasBitmap((canvas.context as any)._nativeObj, x, y, width, height);\n            //this.add_iiffff(CONTEXT2D_FUNCTION_ID.DRAW_CANVAS_BITMAP, (canvas.context as any)._nativeObj.id, x, y, width, height);\n        }\n    }\n    fillText(txt: string | WordText, x: number, y: number, fontStr: string, color: string, align: string, lineWidth: number = 0, borderColor: string = \"\"): void {\n        var nTextAlign = 0;\n        switch (align) {\n            case 'center':\n                nTextAlign = Const.ENUM_TEXTALIGN_CENTER;\n                break;\n            case 'right':\n                nTextAlign = Const.ENUM_TEXTALIGN_RIGHT;\n                break;\n        }\n        var c1: ColorUtils = ColorUtils.create(color);\n        var c2: ColorUtils = ColorUtils.create(borderColor);\n        if (typeof (txt) === 'string') {\n            //this._nativeObj.fillWords(txt, x, y, fontStr, c1.numColor, c2.numColor, lineWidth, nTextAlign);\n            this.add_iiiifff_String_String(CONTEXT2D_FUNCTION_ID.FILL_WORDS, c1.numColor, c2.numColor, nTextAlign, x, y, lineWidth, txt, fontStr)\n        }\n        else {\n            //this._nativeObj.fillWordText((txt as any)._nativeObj.id, x, y, fontStr, c1.numColor, c2.numColor, lineWidth, nTextAlign);\n            this.add_iiffiifi_String(CONTEXT2D_FUNCTION_ID.FILL_WORD_TEXT, (txt as any)._nativeObj.id, x, y, c1.numColor, c2.numColor, lineWidth, nTextAlign, fontStr);\n        }\n    }\n    // 与fillText的区别是没有border信息\n    drawText(text: string | WordText, x: number, y: number, font: string, color: string, align: string): void {\n        var nTextAlign = 0;\n        switch (align) {\n            case 'center':\n                nTextAlign = Const.ENUM_TEXTALIGN_CENTER;\n                break;\n            case 'right':\n                nTextAlign = Const.ENUM_TEXTALIGN_RIGHT;\n                break;\n        }\n        var c1: ColorUtils = ColorUtils.create(color);\n        var c2: ColorUtils = ColorUtils.create(null);\n        if (typeof (text) === 'string') {\n            //this._nativeObj.fillWords(text, x, y, font, c1.numColor, c2.numColor, 0, nTextAlign);\n            this.add_iiiifff_String_String(CONTEXT2D_FUNCTION_ID.FILL_WORDS, c1.numColor, c2.numColor, nTextAlign, x, y, 0, text, font)\n        }\n        else {\n            //this._nativeObj.fillWordText((text as any)._nativeObj.id, x, y, font, c1.numColor, c2.numColor, 0, nTextAlign);\n            this.add_iiffiifi_String(CONTEXT2D_FUNCTION_ID.FILL_WORD_TEXT, (text as any)._nativeObj.id, x, y, c1.numColor, c2.numColor, 0, nTextAlign, font);\n        }\n    }\n    strokeWord(text: string | WordText, x: number, y: number, font: string, color: string, lineWidth: number, align: string): void {\n        var nTextAlign = 0;\n        switch (align) {\n            case 'center':\n                nTextAlign = Const.ENUM_TEXTALIGN_CENTER;\n                break;\n            case 'right':\n                nTextAlign = Const.ENUM_TEXTALIGN_RIGHT;\n                break;\n        }\n        var c1: ColorUtils = ColorUtils.create(color);\n        var c2: ColorUtils = ColorUtils.create(null);\n        if (typeof (text) === 'string') {\n            //this._nativeObj.fillWords(text, x, y, font, c1.numColor, c2.numColor, lineWidth, nTextAlign);\n            this.add_iiiifff_String_String(CONTEXT2D_FUNCTION_ID.FILL_WORDS, c1.numColor, c2.numColor, nTextAlign, x, y, lineWidth, text, font);\n        }\n        else {\n            //this._nativeObj.fillWordText((text as any)._nativeObj.id, x, y, font, c1.numColor, c2.numColor, lineWidth, nTextAlign);\n            this.add_iiffiifi_String(CONTEXT2D_FUNCTION_ID.FILL_WORD_TEXT, (text as any)._nativeObj.id, x, y, c1.numColor, c2.numColor, lineWidth, nTextAlign, font);\n        }\n    }\n    fillBorderText(txt: string | WordText, x: number, y: number, font: string, color: string, borderColor: string, lineWidth: number, align: string): void {\n        var nTextAlign = 0;\n        switch (align) {\n            case 'center':\n                nTextAlign = Const.ENUM_TEXTALIGN_CENTER;\n                break;\n            case 'right':\n                nTextAlign = Const.ENUM_TEXTALIGN_RIGHT;\n                break;\n        }\n        var c1: ColorUtils = ColorUtils.create(color);\n        var c2: ColorUtils = ColorUtils.create(borderColor);\n        if (typeof (txt) === 'string') {\n            //this._nativeObj.fillWords(txt, x, y, font, c1.numColor, c2.numColor, lineWidth, nTextAlign);\n            this.add_iiiifff_String_String(CONTEXT2D_FUNCTION_ID.FILL_WORDS, c1.numColor, c2.numColor, nTextAlign, x, y, lineWidth, txt, font);\n        }\n        else {\n            //this._nativeObj.fillWordText((txt as any)._nativeObj.id, x, y, font, c1.numColor, c2.numColor, lineWidth, nTextAlign);\n            this.add_iiffiifi_String(CONTEXT2D_FUNCTION_ID.FILL_WORD_TEXT, (txt as any)._nativeObj.id, x, y, c1.numColor, c2.numColor, lineWidth, nTextAlign, font);\n        }\n    }\n    filltext11(data: string | WordText, x: number, y: number, fontStr: string, color: string, strokeColor: string, lineWidth: number, align: string): void {\n        var nTextAlign = 0;\n        switch (align) {\n            case 'center':\n                nTextAlign = Const.ENUM_TEXTALIGN_CENTER;\n                break;\n            case 'right':\n                nTextAlign = Const.ENUM_TEXTALIGN_RIGHT;\n                break;\n        }\n        var c1: ColorUtils = ColorUtils.create(color);\n        var c2: ColorUtils = ColorUtils.create(strokeColor);\n        if (typeof (data) === 'string') {\n            //this._nativeObj.fillWords(data, x, y, fontStr, c1.numColor, c2.numColor, lineWidth, nTextAlign);\n            this.add_iiiifff_String_String(CONTEXT2D_FUNCTION_ID.FILL_WORDS, c1.numColor, c2.numColor, nTextAlign, x, y, lineWidth, data, fontStr)\n        }\n        else {\n            //this._nativeObj.fillWordText((data as any)._nativeObj.id, x, y, fontStr, c1.numColor, c2.numColor, lineWidth, nTextAlign);\n            this.add_iiffiifi_String(CONTEXT2D_FUNCTION_ID.FILL_WORD_TEXT, (data as any)._nativeObj.id, x, y, c1.numColor, c2.numColor, lineWidth, nTextAlign, fontStr);\n        }\n    }\n\n    /**@internal */\n    _fast_filltext(data: string | WordText, x: number, y: number, fontObj: any, color: string, strokeColor: string | null, lineWidth: number, textAlign: number, underLine: number = 0): void {\n        var c1: ColorUtils = ColorUtils.create(color);\n        var c2: ColorUtils = ColorUtils.create(strokeColor);\n\n        if (typeof (data) === 'string') {\n            //this._nativeObj.fillWords(data, x, y, (fontObj as any)._font, c1.numColor, c2.numColor, lineWidth, textAlign);\n            this.add_iiiifff_String_String(CONTEXT2D_FUNCTION_ID.FILL_WORDS, c1.numColor, c2.numColor, textAlign, x, y, lineWidth, data, (fontObj as any)._font)\n        }\n        else {\n\n            this.add_iiffiifi_String(CONTEXT2D_FUNCTION_ID.FILL_WORD_TEXT, (data as any)._nativeObj.id, x, y, c1.numColor, c2.numColor, lineWidth, textAlign, (fontObj as any)._font);\n            //this._nativeObj.fillWordText(data._nativeObj.id, x, y, (fontObj as any)._font, c1.numColor, c2.numColor, lineWidth, textAlign);\n        }\n    }\n    drawTriangles(tex: Texture,\n        x: number, y: number,\n        vertices: Float32Array,\n        uvs: Float32Array,\n        indices: Uint16Array,\n        matrix: Matrix, alpha: number, blendMode: string, colorNum: number = 0xffffffff): void {\n        if (!this.checkTexture(tex)) {\n            return;\n        }\n        var m: Matrix = matrix ? matrix : this._tmpMatrix;\n        if (blendMode != null) {\n\n            this.add_i(CONTEXT2D_FUNCTION_ID.SAVE);\n            //to do ColorFilter \n            this.add_i_String(CONTEXT2D_FUNCTION_ID.SET_GLOBAL_COMPOSITE_OPERTAION, blendMode);\n            this.add_iiifffffffff_ab_ab_ab(CONTEXT2D_FUNCTION_ID.DRAW_TRANGLES, (tex as any).bitmap._texture.id, colorNum\n                , x\n                , y\n                , alpha\n                , m.a, m.b, m.c, m.d, m.tx, m.ty\n                , (vertices instanceof Array) ? Float32Array.from(vertices) : vertices\n                , (uvs instanceof Array) ? Float32Array.from(uvs) : uvs\n                , (indices instanceof Array) ? Uint16Array.from(indices) : indices\n            );\n            this.add_i(CONTEXT2D_FUNCTION_ID.RESTORE);\n        }\n        else {\n            this.add_iiifffffffff_ab_ab_ab(CONTEXT2D_FUNCTION_ID.DRAW_TRANGLES, (tex as any).bitmap._texture.id, colorNum\n                , x\n                , y\n                , alpha\n                , m.a, m.b, m.c, m.d, m.tx, m.ty\n                , (vertices instanceof Array) ? Float32Array.from(vertices) : vertices\n                , (uvs instanceof Array) ? Float32Array.from(uvs) : uvs\n                , (indices instanceof Array) ? Uint16Array.from(indices) : indices\n            );\n        }\n    }\n    drawMask(w: number, h: number): any {\n        //return this._nativeObj.drawMask(w, h);\n        this._nativeObj.flushCommand();\n        return this._nativeObj.drawMask(w, h);\n    }\n    drawMasked(x: number, y: number, w: number, h: number): void {\n        //this._nativeObj.drawMasked(x, y, w, h);\n        this.add_iffff(CONTEXT2D_FUNCTION_ID.DRAW_MASKED, x, y, w, h);\n    }\n    drawMaskComposite(rt: any, x: number, y: number, w: number, h: number): void {\n        //this._nativeObj.drawMaskComposite(rt, x, y, w, h);\n        this._nativeObj.flushCommand();\n        this._nativeObj.drawMaskComposite(rt, x, y, w, h);\n    }\n    set asBitmap(value: boolean) {\n        //this._nativeObj.setAsBitmap(value);\n        this.add_ii(CONTEXT2D_FUNCTION_ID.SET_AS_BITMAP, value ? 1 : 0);\n    }\n    size(w: number, h: number): void {\n        //this._nativeObj.size(w, h);\n        this.add_iii(CONTEXT2D_FUNCTION_ID.SIZE, w, h);\n    }\n    setColorFilter(filter: ColorFilter): void {\n        /*if (filter) {\n            this._nativeObj.setColorFilter(true, filter._alpha, filter._mat);\n        }\n        else {\n            this._nativeObj.setColorFilter(false, null, null);\n        }*/\n        this._nativeObj.flushCommand();\n        if (filter) {\n            this._nativeObj.setColorFilter(true, filter._alpha, filter._mat);\n        }\n        else {\n            this._nativeObj.setColorFilter(false, null, null);\n        }\n    }\n    drawTarget(rt: RenderTexture2D, x: number, y: number, width: number, height: number, matrix: Matrix, shaderValue: Value2D, uv: ArrayLike<number> | null = null, blend: number = -1): boolean {\n        //return this._nativeObj.drawTarget(rt, x, y, width, height, matrix.a, matrix.b,matrix.c,matrix.d,matrix.tx,matrix.ty, blend);\n        this._nativeObj.flushCommand();\n        return this._nativeObj.drawTarget(rt, x, y, width, height, matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx, matrix.ty, blend);\n    }\n    drawTargetBlurFilter(rt: RenderTexture2D, x: number, y: number, width: number, height: number, strength: number): void {\n        //this._nativeObj.drawTargetBlurFilter(rt, x, y, width, height, strength);\n        this._nativeObj.flushCommand();\n        this._nativeObj.drawTargetBlurFilter(rt, x, y, width, height, strength);\n    }\n    get _curMat(): Matrix {\n        /*var data: any = this._nativeObj._curMat;\n        var mat: Matrix = Matrix.create();\n        mat.a = data[0];\n        mat.b = data[1];\n        mat.c = data[2];\n        mat.d = data[3];\n        mat.tx = data[4];\n        mat.ty = data[5];*/\n\n        this._nativeObj.flushCommand();\n\n        var data: any = this._nativeObj._curMat;\n        var mat: Matrix = Matrix.create();\n        mat.a = data[0];\n        mat.b = data[1];\n        mat.c = data[2];\n        mat.d = data[3];\n        mat.tx = data[4];\n        mat.ty = data[5];\n\n        return mat;\n    }\n    addRenderObject3D(scene3D: ISubmit): void {\n        //this._nativeObj.addRenderObject3D((scene3D as any)._nativeObj);\n        this._renderObject3DList.push((scene3D as any)._nativeObj);\n        this._nativeObj.flushCommand();\n        this._nativeObj.addRenderObject3D((scene3D as any)._nativeObj);\n    }\n    pushRT(): void {\n        //this._nativeObj.pushRT();\n\n        this._nativeObj.flushCommand();\n        this._nativeObj.pushRT();\n    }\n    popRT(): void {\n        //this._nativeObj.popRT();\n\n        this._nativeObj.flushCommand();\n        this._nativeObj.popRT();\n    }\n    useRT(rt: RenderTexture2D): void {\n        //this._nativeObj.useRT(rt);\n\n        this._nativeObj.flushCommand();\n        this._nativeObj.useRT(rt);\n    }\n    drawFilter(out: RenderTexture2D, src: RenderTexture2D, x: number, y: number, width: number, height: number): void {\n        //this._nativeObj.drawFilter(out, src, x, y, width, height);\n\n        this._nativeObj.flushCommand();\n        this._nativeObj.drawFilter(out, src, x, y, width, height);\n    }\n    protected checkTexture(tex: Texture): boolean {\n        // 注意sprite要保存，因为后面会被冲掉\n        var cs = this.sprite;\n        if (!tex._getSource(function (): void {\n            if (cs) {\n                cs.repaint();\t// 原来是calllater，callater对于cacheas normal是没有机会执行的\n            }\n        })) { //source内调用tex.active();\n            return false;\n        }\n        return true;\n    }\n    add_i(i: number): void {\n        this._need(4);\n        this._idata[this._idata[0]++] = i;\n    }\n    add_ii(a: number, b: number): void {\n        this._need(8);\n        var i: number = this._idata[0];\n        this._idata[i++] = a;\n        this._idata[i++] = b;\n        this._idata[0] = i;\n    }\n    add_if(a: number, b: number): void {\n        this._need(8);\n        var i: number = this._idata[0];\n        this._idata[i++] = a;\n        this._fdata[i++] = b;\n        this._idata[0] = i;\n    }\n    add_iff(a: number, b: number, c: number): void {\n        this._need(12);\n        var i: number = this._idata[0];\n        this._idata[i++] = a;\n        this._fdata[i++] = b;\n        this._fdata[i++] = c;\n        this._idata[0] = i;\n    }\n\n    add_iffif(a: number, b: number, c: number, d: number, e: number) {\n        this._need(20);\n        var i: number = this._idata[0];\n        var fdata: Float32Array = this._fdata;\n        this._idata[i++] = a;\n        fdata[i++] = b;\n        fdata[i++] = c;\n        this._idata[i++] = d;\n        fdata[i++] = e;\n        this._idata[0] = i;\n    }\n\n    add_iffff(a: number, b: number, c: number, d: number, e: number): void {\n        this._need(20);\n        var i: number = this._idata[0];\n        var fdata: Float32Array = this._fdata;\n        this._idata[i++] = a;\n        fdata[i++] = b;\n        fdata[i++] = c;\n        fdata[i++] = d;\n        fdata[i++] = e;\n        this._idata[0] = i;\n    }\n    add_iii(a: number, b: number, c: number): void {\n        this._need(12);\n        var idata: Int32Array = this._idata;\n        var i: number = this._idata[0];\n        idata[i++] = a;\n        idata[i++] = b;\n        idata[i++] = c;\n        this._idata[0] = i;\n    }\n    add_iiffff(a: number, b: number, c: number, d: number, e: number, f: number) {\n        this._need(24);\n        var i: number = this._idata[0];\n        var fdata: Float32Array = this._fdata;\n        this._idata[i++] = a;\n        this._idata[i++] = b;\n        fdata[i++] = c;\n        fdata[i++] = d;\n        fdata[i++] = e;\n        fdata[i++] = f;\n        this._idata[0] = i;\n    }\n    add_ifffff(a: number, b: number, c: number, d: number, e: number, f: number) {\n        this._need(24);\n        var i: number = this._idata[0];\n        var fdata: Float32Array = this._fdata;\n        this._idata[i++] = a;\n        fdata[i++] = b;\n        fdata[i++] = c;\n        fdata[i++] = d;\n        fdata[i++] = e;\n        fdata[i++] = f;\n        this._idata[0] = i;\n    }\n    add_iffffff(a: number, b: number, c: number, d: number, e: number, f: number, g: number): void {\n        this._need(28);\n        var i: number = this._idata[0];\n        var fdata: Float32Array = this._fdata;\n        this._idata[i++] = a;\n        fdata[i++] = b;\n        fdata[i++] = c;\n        fdata[i++] = d;\n        fdata[i++] = e;\n        fdata[i++] = f;\n        fdata[i++] = g;\n        this._idata[0] = i;\n    }\n    add_ifffiiiif(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, ii: number): void {\n        this._need(36);\n        var idata: Int32Array = this._idata;\n        var i: number = idata[0];\n        var fdata: Float32Array = this._fdata;\n        idata[i++] = a;\n        fdata[i++] = b;\n        fdata[i++] = c;\n        fdata[i++] = d;\n        idata[i++] = e;\n        idata[i++] = f;\n        idata[i++] = g;\n        idata[i++] = h;\n        fdata[i++] = ii;\n        idata[0] = i;\n    }\n    add_ifffffiiiif(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, ii: number, j: number, k: number): void {\n        this._need(44);\n        var idata: Int32Array = this._idata;\n        var i: number = idata[0];\n        var fdata: Float32Array = this._fdata;\n        idata[i++] = a;\n        fdata[i++] = b;\n        fdata[i++] = c;\n        fdata[i++] = d;\n        fdata[i++] = e;\n        fdata[i++] = f;\n        idata[i++] = g;\n        idata[i++] = h;\n        idata[i++] = ii;\n        idata[i++] = j;\n        fdata[i++] = k;\n        idata[0] = i;\n    }\n    add_iffffffif(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, ii: number): void {\n        this._need(36);\n        var idata: Int32Array = this._idata;\n        var i: number = idata[0];\n        var fdata: Float32Array = this._fdata;\n        idata[i++] = a;\n        fdata[i++] = b;\n        fdata[i++] = c;\n        fdata[i++] = d;\n        fdata[i++] = e;\n        fdata[i++] = f;\n        fdata[i++] = g;\n        idata[i++] = h;\n        fdata[i++] = ii;\n        idata[0] = i;\n    }\n    add_String(ab: ArrayBuffer): void {\n        var len: number = ab.byteLength;\n        this._need(len + 4);\n        this._idata[this._idata[0]++] = len;\n        if (len == 0) return;\n        var uint8array: Uint8Array = new Uint8Array(ab);\n        this._byteArray.set(uint8array, this._idata[0] * 4);\n        this._idata[0] += len / 4;\n    }\n    add_iffiiiifi(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, ii: number) {\n        this._need(45);\n        var i: number = this._idata[0];\n        var fdata: Float32Array = this._fdata;\n        this._idata[i++] = a;\n        fdata[i++] = b;\n        fdata[i++] = c;\n        this._idata[i++] = d;\n        this._idata[i++] = e;\n        this._idata[i++] = f;\n        this._idata[i++] = g;\n        fdata[i++] = h;\n        this._idata[i++] = ii;\n        this._idata[0] = i;\n    }\n    add_iiffiifi(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number) {\n        this._need(32);\n        var i: number = this._idata[0];\n        var fdata: Float32Array = this._fdata;\n        this._idata[i++] = a;\n        this._idata[i++] = b;\n        fdata[i++] = c;\n        fdata[i++] = d;\n        this._idata[i++] = e;\n        this._idata[i++] = f;\n        fdata[i++] = g;\n        this._idata[i++] = h;\n        this._idata[0] = i;\n    }\n    add_i_String(a: number, str: string): void {\n        var ab: ArrayBuffer = (window as any).conch.strTobufer(str);\n        this._need(4 + ab.byteLength + 4);\n        this.add_i(a);\n        this.add_String(ab);\n    }\n    add_iiiifff(a: number, b: number, c: number, d: number, e: number, f: number, g: number) {\n        this._need(28);\n        var i: number = this._idata[0];\n        var fdata: Float32Array = this._fdata;\n        this._idata[i++] = a;\n        this._idata[i++] = b;\n        this._idata[i++] = c;\n        this._idata[i++] = d;\n        fdata[i++] = e;\n        fdata[i++] = f;\n        fdata[i++] = g;\n        this._idata[0] = i;\n    }\n    add_iiffiifi_String(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, str: string): void {\n        var ab: ArrayBuffer = (window as any).conch.strTobufer(str);\n        this._need(32 + ab.byteLength + 4);\n        this.add_iiffiifi(a, b, c, d, e, f, g, h);\n        this.add_String(ab);\n    }\n    add_iiiifff_String_String(a: number, b: number, c: number, d: number, e: number, f: number, g: number, str0: string, str1: string): void {\n        var ab0: ArrayBuffer = (window as any).conch.strTobufer(str0);\n        var ab1: ArrayBuffer = (window as any).conch.strTobufer(str1);\n        this._need(28 + (ab0.byteLength + 4) + (ab1.byteLength + 4));\n\n        this.add_iiiifff(a, b, c, d, e, f, g);\n        this.add_String(ab0);\n        this.add_String(ab1);\n    }\n    add_iiffffffffffffi(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, ii: number, j: number, k: number, l: number, m: number, n: number, o: number) {\n        this._need(60);\n        var idata: Int32Array = this._idata;\n        var i: number = idata[0];\n        var fdata: Float32Array = this._fdata;\n        idata[i++] = a;\n        idata[i++] = b;\n        fdata[i++] = c;\n        fdata[i++] = d;\n        fdata[i++] = e;\n        fdata[i++] = f;\n        fdata[i++] = g;\n        fdata[i++] = h;\n        fdata[i++] = ii;\n        fdata[i++] = j;\n        fdata[i++] = k;\n        fdata[i++] = l;\n        fdata[i++] = m;\n        fdata[i++] = n;\n        idata[i++] = o;\n        idata[0] = i;\n    }\n    add_iiffffffffiffffffffffi(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, ii: number, j: number\n        , k: number, l: number, m: number, n: number, o: number, p: number, q: number, r: number, s: number, t: number\n        , u: number, v: number) {\n        this._need(88);\n        var idata: Int32Array = this._idata;\n        var fdata: Float32Array = this._fdata;\n        var i: number = idata[0];\n        idata[i++] = a;\n        idata[i++] = b;\n        fdata[i++] = c;\n        fdata[i++] = d;\n        fdata[i++] = e;\n        fdata[i++] = f;\n        fdata[i++] = g;\n        fdata[i++] = h;\n        fdata[i++] = ii;\n        fdata[i++] = j;\n        idata[i++] = k;\n        fdata[i++] = l;\n        fdata[i++] = m;\n        fdata[i++] = n;\n        fdata[i++] = o;\n        fdata[i++] = p;\n        fdata[i++] = q;\n        fdata[i++] = r;\n        fdata[i++] = s;\n        fdata[i++] = t;\n        fdata[i++] = u;\n        idata[i++] = v;\n        idata[0] = i;\n    }\n    add_iiifffffffff(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, ii: number, j: number\n        , k: number, l: number) {\n        this._need(48);\n        var idata: Int32Array = this._idata;\n        var fdata: Float32Array = this._fdata;\n        var i: number = idata[0];\n        idata[i++] = a;\n        idata[i++] = b;\n        idata[i++] = c;\n        fdata[i++] = d;\n        fdata[i++] = e;\n        fdata[i++] = f;\n        fdata[i++] = g;\n        fdata[i++] = h;\n        fdata[i++] = ii;\n        fdata[i++] = j;\n        fdata[i++] = k;\n        fdata[i++] = l;\n        idata[0] = i;\n    }\n    add_iiffffiffi(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number): void {\n        this._need(40);\n        let idata: Int32Array = this._idata;\n        let fdata: Float32Array = this._fdata;\n        var idx: number = idata[0];\n        idata[idx++] = a;\n        idata[idx++] = b;\n        fdata[idx++] = c;\n        fdata[idx++] = d;\n        fdata[idx++] = e;\n        fdata[idx++] = f;\n        idata[idx++] = g;\n        fdata[idx++] = h;\n        fdata[idx++] = i;\n        idata[idx++] = j;\n        idata[0] = idx;\n    }\n\n    add_iiifffffffff_ab_ab_ab(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, ii: number, j: number\n        , k: number, l: number, arraybuffer0: any, arraybuffer1: any, arraybuffer2: any) {\n\n        var nAlignLength0 = this.getAlignLength(arraybuffer0);\n        var nAlignLength1 = this.getAlignLength(arraybuffer1);\n        var nAlignLength2 = this.getAlignLength(arraybuffer2);\n        d\n        this._need(48 + (nAlignLength0 + 4) + (nAlignLength1 + 4) + (nAlignLength2 + 4));\n\n        this.add_iiifffffffff(a, b, c, d, e, f, g, h, ii, j, k, l);\n        this.wab(arraybuffer0, arraybuffer0.byteLength, nAlignLength0, 0);\n        this.wab(arraybuffer1, arraybuffer1.byteLength, nAlignLength1, 0);\n        this.wab(arraybuffer2, arraybuffer2.byteLength, nAlignLength2, 0);\n\n    }\n    wab(arraybuffer: any, length: number, nAlignLength: number, offset?: number): void {\n        offset = offset ? offset : 0;\n        this._need(nAlignLength + 4);\n        //写入长度\n        this._idata[this._idata[0]++] = length;\n        //写入数据\n        var uint8array: Uint8Array = null;\n        if (arraybuffer instanceof Float32Array && offset == 0) {\n            this._fdata.set(arraybuffer, this._idata[0]);\n        }\n        else {\n            if (arraybuffer instanceof ArrayBuffer) {\n                uint8array = new Uint8Array(arraybuffer, offset, length);\n            }\n            else if (arraybuffer.buffer) {\n                uint8array = new Uint8Array(arraybuffer.buffer, offset + arraybuffer.byteOffset, length);\n            }\n            else {\n                console.log(\"not arraybuffer/dataview\");\n                return;\n            }\n            this._byteArray.set(uint8array, this._idata[0] * 4);\n        }\n        this._idata[0] += nAlignLength / 4;\n    }\n    getAlignLength(data: any): number {\n        var byteLength = data.byteLength;\n        return (byteLength + 3) & 0xfffffffc;\n    }\n    add_iif_ab(a: number, b: number, c: number, arraybuffer: any) {\n        var nAlignLength = this.getAlignLength(arraybuffer);\n        this._need(12 + nAlignLength + 4);\n        this.add_iff(a, b, c);\n        this.wab(arraybuffer, arraybuffer.byteLength, nAlignLength, 0);\n    }\n    add_iffif_ab(a: number, b: number, c: number, d: number, e: number, arraybuffer: any) {\n        var nAlignLength = this.getAlignLength(arraybuffer);\n        this._need(20 + nAlignLength + 4);\n        this.add_iffif(a, b, c, d, e);\n        this.wab(arraybuffer, arraybuffer.byteLength, nAlignLength, 0);\n    }\n    add_iffiiiifi_ab(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, ii: number, arraybuffer: any) {\n        var nAlignLength = this.getAlignLength(arraybuffer);\n        this._need(45 + nAlignLength + 4);\n        this.add_iffiiiifi(a, b, c, d, e, f, g, h, ii);\n        this.wab(arraybuffer, arraybuffer.byteLength, nAlignLength, 0);\n    }\n} \n","import { ShaderDefines2D } from \"./ShaderDefines2D\";\nimport { DrawStyle } from \"../../canvas/DrawStyle\"\n\nimport texture_vs from './files/texture.vs.glsl';\nimport texture_ps from './files/texture.ps.glsl';\nimport prime_vs from './files/primitive.vs.glsl';\nimport prime_ps from './files/primitive.ps.glsl';\n\n\nimport Sprite2DFrag from './NewShader/Sprite2DFrag.glsl';\nimport Sprite2DVertex from './NewShader/Sprite2DVertex.glsl';\nimport Sprite2DShaderInfo from './NewShader/Sprite2DShaderInfo.glsl';\n\nimport { Shader3D } from \"../../../RenderEngine/RenderShader/Shader3D\";\nimport { ShaderCompile } from \"../../utils/ShaderCompile\";\nimport { ShaderDataType } from \"../../../RenderEngine/RenderShader/ShaderData\";\nimport { SubShader } from \"../../../RenderEngine/RenderShader/SubShader\";\nimport { Material } from \"../../../resource/Material\";\n\nexport class Shader2D {\n    /**@internal */\n    static textureShader: Shader3D;\n    /**@internal */\n    static primitiveShader: Shader3D;\n\n    /**@internal */\n    ALPHA: number = 1;\n    /**@internal */\n    filters: any[];\n    /**@internal */\n    shaderType: number = 0;\n    /**@internal */\n    colorAdd: any[];\n    /**@internal */\n    fillStyle = DrawStyle.DEFAULT;\n    /**@internal */\n    strokeStyle = DrawStyle.DEFAULT;\n    /**@internal */\n    material: Material = null;\n\n    /**\n     * @internal\n     */\n    destroy(): void {\n        this.filters = null;\n    }\n\n    /**\n     * primitive Mesh Descript\n     */\n    public static readonly primitiveAttribute: { [name: string]: [number, ShaderDataType] } = {\n        'a_position': [0, ShaderDataType.Vector4],\n        'a_attribColor': [1, ShaderDataType.Vector4],\n    }\n\n    /**\n     * TextureSV Mesh Descript\n     */\n    public static readonly textureAttribute: { [name: string]: [number, ShaderDataType] } = {\n        'a_posuv': [0, ShaderDataType.Vector4],\n        'a_attribColor': [1, ShaderDataType.Vector4],\n        'a_attribFlags': [2, ShaderDataType.Vector4]\n    }\n\n    /**\n     * init 2D internal Shader\n     */\n    static __init__(): void {\n        Shader3D.addInclude(\"Sprite2DFrag.glsl\", Sprite2DFrag);\n        Shader3D.addInclude(\"Sprite2DVertex.glsl\", Sprite2DVertex);\n        Shader3D.addInclude(\"Sprite2DShaderInfo.glsl\", Sprite2DShaderInfo);\n\n        //textureShader\n        Shader2D.textureShader = Shader3D.add(\"Sprite2DTexture\", false, false);\n        let subShader = new SubShader(Shader2D.textureAttribute, {}, {});\n        Shader2D.textureShader.addSubShader(subShader);\n        subShader.addShaderPass(texture_vs, texture_ps);\n\n        //primitiveShader\n        Shader2D.primitiveShader = Shader3D.add(\"Sprite2DPrimitive\", false, false);\n        subShader = new SubShader(Shader2D.primitiveAttribute, {}, {});\n        Shader2D.primitiveShader.addSubShader(subShader);\n        subShader.addShaderPass(prime_vs, prime_ps);\n    }\n}\n\n","vec3 gammaToLinear(in vec3 value)\n{\n    return pow((value + 0.055) / 1.055, vec3(2.4));\n}\n\nvec4 gammaToLinear(in vec4 value)\n{\n    return vec4(gammaToLinear(value.rgb), value.a);\n}\n\nvec3 linearToGamma(in vec3 value)\n{\n    return vec3(mix(pow(value.rgb, vec3(0.41666)) * 1.055 - vec3(0.055), value.rgb * 12.92, vec3(lessThanEqual(value.rgb, vec3(0.0031308)))));\n\n    // return pow(value, vec3(1.0 / 2.2));\n    // return pow(value, vec3(0.455));\n}\n\nvec4 linearToGamma(in vec4 value)\n{\n    return vec4(linearToGamma(value.rgb), value.a);\n}\n\nvec4 sampleTexture(sampler2D spriteTexture, vec2 uv)\n{\n    vec4 color = texture2D(spriteTexture, uv);\n#ifndef GAMMATEXTURE\n    //是linear数据\n    #ifdef GAMMASPACE\n        color.xyz = linearToGamma(color.xyz);    \n    #endif\n#else\n    //gamma数据\n    #ifndef GAMMASPACE\n        color.xyz = gammaToLinear(color.xyz);\n    #endif\n#endif\n    return color;\n}\n\n#if defined(PRIMITIVEMESH)\n    varying vec4 v_color;\n    varying vec2 v_cliped;\n  \n\n    vec4 getGlColor(vec4 color){\n        #ifdef GAMMASPACE\n            return color;\n        #else\n            return gammaToLinear(color);\n        #endif\n    }\n\n#elif defined(TEXTUREVS)\n    varying vec2 v_cliped;\n    varying vec4 v_texcoordAlpha;\n    varying vec4 v_color;\n    varying float v_useTex;\n    \n    //uniform\n    uniform sampler2D u_spriteTexture;\n\n    #ifdef BLUR_FILTER\n        uniform vec4 u_strength_sig2_2sig2_gauss1; // TODO模糊的过程中会导致变暗变亮\n        uniform vec2 u_blurInfo;\n        #define PI 3.141593\n    #endif\n\n    #ifdef COLOR_FILTER\n        uniform vec4 u_colorAlpha;\n        uniform mat4 u_colorMat;\n    #endif\n\n    #ifdef GLOW_FILTER\n        uniform vec4 u_color;\n        uniform vec4 u_blurInfo1;\n        uniform vec4 u_blurInfo2;\n    #endif\n\n    #ifdef COLOR_ADD\n        uniform vec4 u_colorAdd;\n    #endif\n\n    #ifdef FILLTEXTURE\n        uniform vec4 u_TexRange; // startu,startv,urange, vrange\n    #endif\n\n\n    #ifdef BLUR_FILTER\n        float getGaussian(float x, float y)\n        {\n            return u_strength_sig2_2sig2_gauss1.w * exp(-(x * x + y * y) / u_strength_sig2_2sig2_gauss1.z);\n        }\n\n        vec4 blur()\n        {\n            const float blurw = 9.0;\n            vec4 vec4Color = vec4(0.0, 0.0, 0.0, 0.0);\n            vec2 halfsz = vec2(blurw, blurw) / 2.0 / u_blurInfo;\n            vec2 startpos = v_texcoordAlpha.xy - halfsz;\n            vec2 ctexcoord = startpos;\n            vec2 step = 1.0 / u_blurInfo; //每个像素\n\n            for (float y = 0.0; y <= blurw; ++y)\n            {\n                ctexcoord.x = startpos.x;\n                for (float x = 0.0; x <= blurw; ++x)\n                {\n                    // TODO 纹理坐标的固定偏移应该在vs中处理\n                    vec4Color += sampleTexture(u_spriteTexture, ctexcoord) * getGaussian(x - blurw / 2.0, y - blurw / 2.0);\n                    ctexcoord.x += step.x;\n                }\n                ctexcoord.y += step.y;\n            }\n            // vec4Color.w=1.0;  这个会导致丢失alpha。以后有时间再找模糊会导致透明的问题\n            return vec4Color;\n        }\n    #endif\n\n    vec4 getSpriteTextureColor(){\n        #ifdef FILLTEXTURE\n            return sampleTexture(u_spriteTexture, fract(v_texcoordAlpha.xy) * u_TexRange.zw + u_TexRange.xy);\n        #else\n            return sampleTexture(u_spriteTexture, v_texcoordAlpha.xy);\n        #endif\n    }\n\n    void setglColor(in vec4 color){\n        if (v_useTex <= 0.)\n            color = vec4(1., 1., 1., 1.);\n\n        color.a *= v_color.w;\n        // color.rgb*=v_color.w;\n        vec4 transColor = v_color;\n        #ifndef GAMMASPACE\n            transColor = gammaToLinear(v_color);\n        #endif\n        color.rgb *= transColor.rgb;\n        gl_FragColor = color;\n\n        #ifdef COLOR_ADD\n            gl_FragColor = vec4(u_colorAdd.rgb, u_colorAdd.a * gl_FragColor.a);\n            gl_FragColor.xyz *= u_colorAdd.a;\n        #endif\n\n        #ifdef BLUR_FILTER\n            gl_FragColor = blur();\n            gl_FragColor.w *= v_color.w;\n        #endif\n\n        #ifdef COLOR_FILTER\n            mat4 alphaMat = u_colorMat;\n\n            alphaMat[0][3] *= gl_FragColor.a;\n            alphaMat[1][3] *= gl_FragColor.a;\n            alphaMat[2][3] *= gl_FragColor.a;\n\n            gl_FragColor = gl_FragColor * alphaMat;\n            gl_FragColor += u_colorAlpha / 255.0 * gl_FragColor.a;\n        #endif\n\n        #ifdef GLOW_FILTER\n            const float c_IterationTime = 10.0;\n            float floatIterationTotalTime = c_IterationTime * c_IterationTime;\n            vec4 vec4Color = vec4(0.0, 0.0, 0.0, 0.0);\n            vec2 vec2FilterDir = vec2(-(u_blurInfo1.z) / u_blurInfo2.x, -(u_blurInfo1.w) / u_blurInfo2.y);\n            vec2 vec2FilterOff = vec2(u_blurInfo1.x / u_blurInfo2.x / c_IterationTime * 2.0, u_blurInfo1.y / u_blurInfo2.y / c_IterationTime * 2.0);\n            float maxNum = u_blurInfo1.x * u_blurInfo1.y;\n            vec2 vec2Off = vec2(0.0, 0.0);\n            float floatOff = c_IterationTime / 2.0;\n            for (float i = 0.0; i <= c_IterationTime; ++i)\n            {\n                for (float j = 0.0; j <= c_IterationTime; ++j)\n                {\n                    vec2Off = vec2(vec2FilterOff.x * (i - floatOff), vec2FilterOff.y * (j - floatOff));\n                    vec4Color += sampleTexture(u_spriteTexture, v_texcoordAlpha.xy + vec2FilterDir + vec2Off) / floatIterationTotalTime;\n                }\n            }\n            gl_FragColor = vec4(u_color.rgb, vec4Color.a * u_blurInfo2.z);\n            gl_FragColor.rgb *= gl_FragColor.a;\n        #endif\n    }\n#endif\n\n\n\nvoid clip(){\n    if(v_cliped.x<0.) discard;\n    if(v_cliped.x>1.) discard;\n    if(v_cliped.y<0.) discard;\n    if(v_cliped.y>1.) discard;\n}","#include \"Sprite2DShaderInfo.glsl\";\n#if defined(PRIMITIVEMESH)\n    // attribute vec4 a_position;\n    // attribute vec4 a_attribColor;\n    #ifdef WORLDMAT\n        uniform mat4 u_mmat;\n    #endif//WORLDMAT\n\n    varying vec4 v_color;\n    varying vec2 v_cliped;\n\n    uniform vec4 u_clipMatDir;\n    uniform vec2 u_clipMatPos;\n    uniform vec2 u_size;\n\n    void getVertexInfo(inout vertexInfo info){\n        float clipw = length(u_clipMatDir.xy);\n        float cliph = length(u_clipMatDir.zw);\n        vec2 clippos = a_position.xy - u_clipMatPos.xy;\t//pos已经应用矩阵了，为了减的有意义，clip的位置也要缩放\n        if(clipw>20000. && cliph>20000.)\n            info.cliped = vec2(0.5,0.5);\n        else {\n            //clipdir是带缩放的方向，由于上面clippos是在缩放后的空间计算的，所以需要把方向先normalize一下\n            info.cliped =vec2( dot(clippos,u_clipMatDir.xy)/clipw/clipw, dot(clippos,u_clipMatDir.zw)/cliph/cliph);\n        }\n        info.color = a_attribColor/255.;\n    }\n\n    void getPosition(inout vec4 pos){\n        #ifdef WORLDMAT\n            vec4 pos = u_mmat*vec4(a_position.xy,0.,1.);\n            pos = vec4((pos.x/u_size.x-0.5)*2.0,(0.5-pos.y/u_size.y)*2.0,pos.z,1.0);\n        #else\n            pos = vec4((a_position.x/u_size.x-0.5)*2.0,(0.5-a_position.y/u_size.y)*2.0,a_position.z,1.0);\n        #endif\n    }\n\n#elif defined(TEXTUREVS)\n\t//texture和fillrect使用的。\n    // attribute vec4 a_posuv;\n    // attribute vec4 a_attribColor;\n    // attribute vec4 a_attribFlags;\n\n    uniform vec4 u_clipMatDir;\n    uniform vec2 u_clipMatPos;\t\t// 这个是全局的，不用再应用矩阵了。\n\n    uniform vec2 u_size;\n    uniform vec2 u_clipOff;\t\t\t// 使用要把clip偏移。cacheas normal用. 只用了[0]\n    #ifdef WORLDMAT\n        uniform mat4 u_mmat;\n    #endif\n\n    #ifdef MVP3D\n        uniform mat4 u_MvpMatrix;\n    #endif\n\n    varying vec2 v_cliped;\n    varying vec4 v_texcoordAlpha;\n    varying vec4 v_color;\n    varying float v_useTex;\n\n    void getVertexInfo(inout vertexInfo info){\n       \t//texcoordAlpha\n        info.texcoordAlpha.xy = a_posuv.zw;\n        //color\n        info.color = a_attribColor/255.0;\n\t    info.color.xyz*= info.color.w;//反正后面也要预乘\n        //useTex\n        info.useTex = a_attribFlags.r/255.0;\n\n        //clip\n    \tfloat clipw = length(u_clipMatDir.xy);\n    \tfloat cliph = length(u_clipMatDir.zw);\n\t    vec2 clpos = u_clipMatPos.xy;\n        #ifdef WORLDMAT\n            // 如果有mmat，需要修改clipMatPos,因为 这是cacheas normal （如果不是就错了）， clipMatPos被去掉了偏移\n            if(u_clipOff[0]>0.0){\n                clpos.x+=u_mmat[3].x;\t//tx\t最简单处理\n                clpos.y+=u_mmat[3].y;\t//ty\n            }\n        #endif\n        vec2 clippos = a_posuv.xy - clpos;\t//pos已经应用矩阵了，为了减的有意义，clip的位置也要缩放\n        if(clipw>20000. && cliph>20000.)\n            info.cliped = vec2(0.5,0.5);\n        else {\n            //转成0到1之间。/clipw/clipw 表示clippos与normalize之后的clip朝向点积之后，再除以clipw\n            info.cliped = vec2( dot(clippos,u_clipMatDir.xy)/clipw/clipw, dot(clippos,u_clipMatDir.zw)/cliph/cliph);\n        }\n    }\n\n    void getPosition(inout vec4 glPosition){\n        vec4 pos = vec4(a_posuv.xy,0.,1.);\n        #ifdef WORLDMAT\n            pos= u_mmat * pos;\n        #endif\n            vec4 pos1 = vec4((pos.x/u_size.x-0.5)*2.0,(0.5-pos.y/u_size.y)*2.0,0.,1.0);\n        #ifdef MVP3D\n            glPosition = u_MvpMatrix * pos1;\n        #else\n            glPosition = pos1;\n        #endif\n        \n        #ifdef INVERTY\n            glPosition.y = -glPosition.y;\n        #endif\n    }\n\n#endif","\n#if defined(PRIMITIVEMESH)\n    struct vertexInfo {\n        vec4 color;\n        vec2 cliped;\n    };\n#elif defined(TEXTUREVS)\n   struct vertexInfo {\n        vec4 color;\n        vec2 cliped;\n        vec4 texcoordAlpha;\n        float useTex;\n    };\n#endif","#define SHADER_NAME TextureFS2D\n//texture和fillrect使用的。\n#if defined(GL_FRAGMENT_PRECISION_HIGH) // 原来的写法会被我们自己的解析流程处理，而我们的解析是不认内置宏的，导致被删掉，所以改成 if defined 了\nprecision highp float;\n#else\nprecision mediump float;\n#endif\n\n#include \"Sprite2DFrag.glsl\";\n\nvoid main()\n{\n    clip();\n    vec4 color = getSpriteTextureColor();\n    setglColor(color);\n}\n","#define SHADER_NAME PrimitiveVS2D\n#include \"Sprite2DVertex.glsl\";\n\n\n#ifdef WORLDMAT\n\tuniform mat4 mmat;\n#endif\n\nvoid main(){\n\tvertexInfo info;\n\tgetVertexInfo(info);\n\t\n\t//Update \n\tv_color = info.color;\n\tv_cliped = info.cliped;\n\t\n\tvec4 pos;\n\t\n\tgetPosition(pos);\n\tgl_Position = pos;\n}","#define SHADER_NAME PrimitiveFS2D\nprecision mediump float;\n\n#include \"Sprite2DFrag.glsl\";\n\nvoid main(){\n\tclip();\n\tgl_FragColor = getGlColor(v_color);\n\tgl_FragColor.rgb*=gl_FragColor.a;\n}","import { IndexBuffer2D } from \"../../../utils/IndexBuffer2D\"\nimport { VertexBuffer2D } from \"../../../utils/VertexBuffer2D\"\nimport { BufferUsage } from \"../../../../RenderEngine/RenderEnum/BufferTargetType\";\n\nexport class SkinMeshBuffer {\n\n    ib: IndexBuffer2D;\n    vb: VertexBuffer2D;\n\n    static instance: SkinMeshBuffer;\n\n    //TODO:coverage\n    constructor() {\n        this.ib = IndexBuffer2D.create(BufferUsage.Dynamic);\n        this.vb = VertexBuffer2D.create(8);\n    }\n\n    //TODO:coverage\n    static getInstance(): SkinMeshBuffer {\n        return SkinMeshBuffer.instance = SkinMeshBuffer.instance || new SkinMeshBuffer();\n    }\n\n    //TODO:coverage\n    addSkinMesh(skinMesh: any): void {\n        //skinMesh.getData(vb, ib, vb.byteLength / 32);\n        skinMesh.getData2(this.vb, this.ib, this.vb._byteLength / 32);\n    }\n\n\n    reset(): void {\n        this.vb.buffer2D.clear();\n        this.ib.buffer2D.clear();\n    }\n\n}\n\n\n","import { Vector2 } from \"../../maths/Vector2\";\n\nexport class BasePoly {\n\n    private static tempData: any[] = new Array(256);\n    private static vec2: Vector2;\n\n    /**\n     * 构造线的三角形数据。根据一个位置数组生成vb和ib\n     * @param\tp\n     * @param\tindices\n     * @param\tlineWidth\n     * @param\tindexBase\t\t\t\t顶点开始的值，ib中的索引会加上这个\n     * @param\toutVertex\n     * @return\n     */\n    static createLine2(p: any[], indices: any[], lineWidth: number, indexBase: number, outVertex: any[], loop: boolean): any[] {\n\n        if (p.length < 4) return null;\n        var points: any[] = BasePoly.tempData.length > (p.length + 2) ? BasePoly.tempData : new Array(p.length + 2);\t//可能有loop，所以+2\n        points[0] = p[0]; points[1] = p[1];\n        /*\n        var points:Array = p.concat();\n        if (loop) {\n            points.push(points[0], points[1]);\n        }\n        */\n        var newlen: number = 2;\t//points的下标，也是points的实际长度\n        var i: number = 0;\n        var length: number = p.length;\n        //先过滤一下太相近的点\n        for (i = 2; i < length; i += 2) {\n            if (Math.abs(p[i] - p[i - 2]) + Math.abs(p[i + 1] - p[i - 1]) > 0.01) {//只是判断是否重合，所以不用sqrt\n                points[newlen++] = p[i]; points[newlen++] = p[i + 1];\n            }\n        }\n        //如果终点和起点没有重合，且要求loop的情况的处理\n        if (loop && Math.abs(p[0] - points[newlen - 2]) + Math.abs(p[1] - points[newlen - 1]) > 0) {\n            points[newlen++] = p[0]; points[newlen++] = p[1];\n        }\n\n        var result: any[] = outVertex;\n        length = newlen / 2;\t//points可能有多余的点，所以要用inew来表示\n        var w: number = lineWidth / 2;\n\n        var p1x: number, p1y: number, p2x: number, p2y: number, p3x: number, p3y: number;\n\n        p1x = points[0];\n        p1y = points[1];\n        p2x = points[2];\n        p2y = points[3];\n        let startIndex = result.length;\n\n        this.vec2 = this.getNormal(p1x, p1y, p2x, p2y, w, this.vec2);\n        result.push(p1x - this.vec2.x, p1y - this.vec2.y, p1x + this.vec2.x, p1y + this.vec2.y);\n        for (i = 1; i < length - 1; i++) {\n            p1x = points[(i - 1) * 2];\n            p1y = points[(i - 1) * 2 + 1];\n            p2x = points[(i) * 2];\n            p2y = points[(i) * 2 + 1];\n            p3x = points[(i + 1) * 2];\n            p3y = points[(i + 1) * 2 + 1];\n\n            this._setMiddleVertexs(p1x, p1y, p2x, p2y, p3x, p3y, w, result, this.vec2);\n        }\n\n        p1x = points[newlen - 4];\n        p1y = points[newlen - 3];\n        p2x = points[newlen - 2];\n        p2y = points[newlen - 1];\n\n\n        if (p2x == points[0] && p2y == points[1]) {\n            p3x = points[2];\n            p3y = points[3];\n            this._setMiddleVertexs(p1x, p1y, p2x, p2y, p3x, p3y, w, result, this.vec2);\n            let len = result.length;\n            result[startIndex] = result[len - 4];\n            result[startIndex + 1] = result[len - 3];\n            result[startIndex + 2] = result[len - 2];\n            result[startIndex + 3] = result[len - 1];\n\n        } else {\n            this.vec2 = this.getNormal(p1x, p1y, p2x, p2y, w, this.vec2);\n            result.push(p2x - this.vec2.x, p2y - this.vec2.y, p2x + this.vec2.x, p2y + this.vec2.y);\n        }\n        for (i = 1; i < length; i++) {\n            indices.push(indexBase + (i - 1) * 2, indexBase + (i - 1) * 2 + 1, indexBase + i * 2 + 1, indexBase + i * 2 + 1, indexBase + i * 2, indexBase + (i - 1) * 2);\n        }\n\n        return result;\n    }\n    private static _setMiddleVertexs(x1: number, y1: number, x2: number, y2: number, x3: number, y3: number, w: number, vertexs: number[], out: Vector2) {\n        this.getNormal(x1, y1, x2, y2, w, out);\n        let perpx = out.x;\n        let perpy = out.y;\n        this.getNormal(x2, y2, x3, y3, w, out);\n        let perp2x = out.x;\n        let perp2y = out.y;\n\n        let a1 = (-perpy + y1) - (-perpy + y2);\n        let b1 = (-perpx + x2) - (-perpx + x1);\n        let c1 = (-perpx + x1) * (-perpy + y2) - (-perpx + x2) * (-perpy + y1);\n        let a2 = (-perp2y + y3) - (-perp2y + y2);\n        let b2 = (-perp2x + x2) - (-perp2x + x3);\n        let c2 = (-perp2x + x3) * (-perp2y + y2) - (-perp2x + x2) * (-perp2y + y3);\n        let denom = a1 * b2 - a2 * b1;\n        denom = a1 * b2 - a2 * b1;\n        if (Math.abs(denom) < 0.1) {\n            denom += 10.1;\n            vertexs.push(x2 - perpx, y2 - perpy, x2 + perpx, y2 + perpy);\n            return;\n        }\n\n        let px = (b1 * c2 - b2 * c1) / denom;\n        let py = (a2 * c1 - a1 * c2) / denom;\n        vertexs.push(px, py, x2 - (px - x2), y2 - (py - y2));\n    }\n\n    static getNormal(x1: number, y1: number, x2: number, y2: number, w: number, out?: Vector2) {\n        if (!out) {\n            out = new Vector2();\n        }\n\n        let perpx = y2 - y1;\n        let perpy = x1 - x2;\n        let dist = Math.sqrt(perpx * perpx + perpy * perpy);\n        out.x = perpx / dist * w;\n        out.y = perpy / dist * w;\n        return out;\n    }\n\n    /**\n     * 相邻的两段线，边界会相交，这些交点可以作为三角形的顶点。有两种可选，一种是采用左左,右右交点，一种是采用 左右，左右交点。当两段线夹角很小的时候，如果采用\n     * 左左，右右会产生很长很长的交点，这时候就要采用左右左右交点，相当于把尖角截断。\n     * 当采用左左右右交点的时候，直接用切线的垂线。采用左右左右的时候，用切线\n     * 切线直接采用两个方向的平均值。不能用3-1的方式，那样垂线和下一段可能都在同一方向（例如都在右方）\n     * 注意把重合的点去掉\n     * @param\tpath\n     * @param\tcolor\n     * @param\twidth\n     * @param\tloop\n     * @param\toutvb\n     * @param\tvbstride  顶点占用几个float,(bytelength/4)\n     * @param\toutib\n     * test:\n     * 横线\n     * [100,100, 400,100]\n     * 竖线\n     * [100,100, 100,400]\n     * 直角\n     * [100,100, 400,100, 400,400]\n     * 重合点\n     * [100,100,100,100,400,100]\n     * 同一直线上的点\n     * [100,100,100,200,100,3000]\n     * 像老式电视的左边不封闭的图形\n     * [98,176,  163,178, 95,66, 175,177, 198,178, 252,56, 209,178,  248,175,  248,266,  209,266, 227,277, 203,280, 188,271,  150,271, 140,283, 122,283, 131,268, 99,268]\n     * \n     */\n    //TODO:coverage\n    static createLineTriangle(path: any[], color: number, width: number, loop: boolean, outvb: Float32Array, vbstride: number, outib: Uint16Array): void {\n\n        var points: any[] = path.slice();\n        var ptlen: number = points.length;\n        var p1x: number = points[0], p1y: number = points[1];\n        var p2x: number = points[2], p2y: number = points[2];\n        var len: number = 0;\n        var rp: number = 0;\n        var dx: number = 0, dy: number = 0;\n\n        //计算每一段的长度，取出有效数据。保存:长度，方向，拐角，切线\n        //x,y,len,dx,dy,tx,ty,dot\n        //数组中每个都表示当前点开始的长度，方向\n        //x,y,dx,dy\n\n        var pointnum: number = ptlen / 2;\n        if (pointnum <= 1) return;\n        if (pointnum == 2) {\n            //TODO\n            return;\n        }\n\n        var tmpData: any[] = new Array(pointnum * 4);//TODO 做到外面\n        var realPtNum: number = 0;\t//去掉重复点后的实际点个数。同一直线上的点不做优化\n        //var segNum:int = pointnum + (loop?1:0);\n        var ci: number = 0;\n        for (var i: number = 0; i < pointnum - 1; i++) {\n            p1x = points[ci++], p1y = points[ci++];\n            p2x = points[ci++], p2y = points[ci++];\n            dx = p2x - p1x, dy = p2y - p1y;\n            if (dx != 0 && dy != 0) {\n                len = Math.sqrt(dx * dx + dy * dy);\n                if (len > 1e-3) {\n                    rp = realPtNum * 4;\n                    tmpData[rp] = p1x;\n                    tmpData[rp + 1] = p1y;\n                    tmpData[rp + 2] = dx / len;\n                    tmpData[rp + 3] = dy / len;\n                    realPtNum++;\n                }\n            }\n        }\n        if (loop) {//loop的话，需要取第一个点来算\n            p1x = points[ptlen - 2], p1y = points[ptlen - 1];\n            p2x = points[0], p2y = points[1];\n            dx = p2x - p1x, dy = p2y - p1y;\n            if (dx != 0 && dy != 0) {//如果长度为零的话，最后这个点就不用加了，上一个点就是指向了第一个点。\n                len = Math.sqrt(dx * dx + dy * dy);\n                if (len > 1e-3) {\n                    rp = realPtNum * 4;\n                    tmpData[rp] = p1x;\n                    tmpData[rp + 1] = p1y;\n                    tmpData[rp + 2] = dx / len;\n                    tmpData[rp + 3] = dy / len;\n                    realPtNum++;\n                }\n            }\n        } else {//不是loop的话，直接取当前段的朝向，记录在上一个点上\n            rp = realPtNum * 4;\n            tmpData[rp] = p1x;\n            tmpData[rp + 1] = p1y;\n            tmpData[rp + 2] = dx / len;\n            tmpData[rp + 3] = dy / len;\n            realPtNum++;\n        }\n        ci = 0;\n\n        /**\n         * 根据前后两段的方向，计算垂线的方向，根据这个方向和任意一边的dxdy的垂线的点积为w/2可以得到长度。就可以得到增加的点\n         */\n        //如果相邻两段朝向的dot值接近-1，则表示反向了，需要改成切\n\n        for (i = 0; i < pointnum; i++) {\n            p1x = points[ci], p1y = points[ci + 1];\n            p2x = points[ci + 2], p2y = points[ci + 3];\n            //var p3x: number = points[ci + 4], p3y: number = points[ci + 5];\n\n        }\n        if (loop) {\n\n        }\n\n    }\n}\n\n","export class EarcutNode {\n    i: any;\n    x: any;\n    y: any;\n    prev: any;\n    next: any;\n    z: any;\n    prevZ: any;\n    nextZ: any;\n    steiner: any;\n    constructor(i: any, x: any, y: any) {\n        // vertice index in coordinates array\n        this.i = i;\n\n        // vertex coordinates\n        this.x = x;\n        this.y = y;\n\n        // previous and next vertice nodes in a polygon ring\n        this.prev = null;\n        this.next = null;\n\n        // z-order curve value\n        this.z = null;\n\n        // previous and next nodes in z-order\n        this.prevZ = null;\n        this.nextZ = null;\n\n        // indicates whether this is a steiner point\n        this.steiner = false;\n    }\n}\n\n\n\n","import { EarcutNode } from \"./EarcutNode\";\nexport class Earcut {\n    static earcut(data: any, holeIndices: any, dim: any): any {\n\n        dim = dim || 2;\n\n        var hasHoles: any = holeIndices && holeIndices.length,\n            outerLen: any = hasHoles ? holeIndices[0] * dim : data.length,\n            outerNode: any = Earcut.linkedList(data, 0, outerLen, dim, true),\n            triangles: any = [];\n\n        if (!outerNode) return triangles;\n\n        var minX: any, minY: any, maxX: any, maxY: any, x: any, y: any, invSize: any;\n\n        if (hasHoles) outerNode = Earcut.eliminateHoles(data, holeIndices, outerNode, dim);\n\n        // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n        if (data.length > 80 * dim) {\n            minX = maxX = data[0];\n            minY = maxY = data[1];\n\n            for (var i: any = dim; i < outerLen; i += dim) {\n                x = data[i];\n                y = data[i + 1];\n                if (x < minX) minX = x;\n                if (y < minY) minY = y;\n                if (x > maxX) maxX = x;\n                if (y > maxY) maxY = y;\n            }\n\n            // minX, minY and invSize are later used to transform coords into integers for z-order calculation\n            invSize = Math.max(maxX - minX, maxY - minY);\n            invSize = invSize !== 0 ? 1 / invSize : 0;\n        }\n\n        Earcut.earcutLinked(outerNode, triangles, dim, minX, minY, invSize);\n\n        return triangles;\n    }\n\n    // create a circular doubly linked list from polygon points in the specified winding order\n    static linkedList(data: any, start: any, end: any, dim: any, clockwise: any): any {\n        var i: any, last: any;\n\n        if (clockwise === (Earcut.signedArea(data, start, end, dim) > 0)) {\n            for (i = start; i < end; i += dim) last = Earcut.insertNode(i, data[i], data[i + 1], last);\n        } else {\n            for (i = end - dim; i >= start; i -= dim) last = Earcut.insertNode(i, data[i], data[i + 1], last);\n        }\n\n        if (last && Earcut.equals(last, last.next)) {\n            Earcut.removeNode(last);\n            last = last.next;\n        }\n\n        return last;\n    }\n\n    // eliminate colinear or duplicate points\n    static filterPoints(start: any, end: any): any {\n        if (!start) return start;\n        if (!end) end = start;\n\n        var p: any = start,\n            again: any;\n        do {\n            again = false;\n\n            if (!p.steiner && (Earcut.equals(p, p.next) || Earcut.area(p.prev, p, p.next) === 0)) {\n                Earcut.removeNode(p);\n                p = end = p.prev;\n                if (p === p.next) break;\n                again = true;\n\n            } else {\n                p = p.next;\n            }\n        } while (again || p !== end);\n\n        return end;\n    }\n\n    // main ear slicing loop which triangulates a polygon (given as a linked list)\n    static earcutLinked(ear: any, triangles: any, dim: any, minX: any, minY: any, invSize: any, pass: any = null): any {\n        if (!ear) return;\n\n        // interlink polygon nodes in z-order\n        if (!pass && invSize) Earcut.indexCurve(ear, minX, minY, invSize);\n\n        var stop: any = ear,\n            prev: any, next: any;\n\n        // iterate through ears, slicing them one by one\n        while (ear.prev !== ear.next) {\n            prev = ear.prev;\n            next = ear.next;\n\n            if (invSize ? Earcut.isEarHashed(ear, minX, minY, invSize) : Earcut.isEar(ear)) {\n                // cut off the triangle\n                triangles.push(prev.i / dim);\n                triangles.push(ear.i / dim);\n                triangles.push(next.i / dim);\n\n                Earcut.removeNode(ear);\n\n                // skipping the next vertice leads to less sliver triangles\n                ear = next.next;\n                stop = next.next;\n\n                continue;\n            }\n\n            ear = next;\n\n            // if we looped through the whole remaining polygon and can't find any more ears\n            if (ear === stop) {\n                // try filtering points and slicing again\n                if (!pass) {\n                    Earcut.earcutLinked(Earcut.filterPoints(ear, null), triangles, dim, minX, minY, invSize, 1);\n\n                    // if this didn't work, try curing all small self-intersections locally\n                } else if (pass === 1) {\n                    ear = Earcut.cureLocalIntersections(ear, triangles, dim);\n                    Earcut.earcutLinked(ear, triangles, dim, minX, minY, invSize, 2);\n\n                    // as a last resort, try splitting the remaining polygon into two\n                } else if (pass === 2) {\n                    Earcut.splitEarcut(ear, triangles, dim, minX, minY, invSize);\n                }\n\n                break;\n            }\n        }\n    }\n\n    // check whether a polygon node forms a valid ear with adjacent nodes\n    static isEar(ear: any): any {\n        var a: any = ear.prev,\n            b: any = ear,\n            c: any = ear.next;\n\n        if (Earcut.area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n        // now make sure we don't have other points inside the potential ear\n        var p: any = ear.next.next;\n\n        while (p !== ear.prev) {\n            if (Earcut.pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n                Earcut.area(p.prev, p, p.next) >= 0) return false;\n            p = p.next;\n        }\n\n        return true;\n    }\n\n    //TODO:coverage\n    static isEarHashed(ear: any, minX: any, minY: any, invSize: any): boolean {\n        var a: any = ear.prev,\n            b: any = ear,\n            c: any = ear.next;\n\n        if (Earcut.area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n        // triangle bbox; min & max are calculated like this for speed\n        var minTX: any = a.x < b.x ? (a.x < c.x ? a.x : c.x) : (b.x < c.x ? b.x : c.x),\n            minTY: any = a.y < b.y ? (a.y < c.y ? a.y : c.y) : (b.y < c.y ? b.y : c.y),\n            maxTX: any = a.x > b.x ? (a.x > c.x ? a.x : c.x) : (b.x > c.x ? b.x : c.x),\n            maxTY: any = a.y > b.y ? (a.y > c.y ? a.y : c.y) : (b.y > c.y ? b.y : c.y);\n\n        // z-order range for the current triangle bbox;\n        var minZ: any = Earcut.zOrder(minTX, minTY, minX, minY, invSize),\n            maxZ: any = Earcut.zOrder(maxTX, maxTY, minX, minY, invSize);\n\n        // first look for points inside the triangle in increasing z-order\n        var p: any = ear.nextZ;\n\n        while (p && p.z <= maxZ) {\n            if (p !== ear.prev && p !== ear.next &&\n                Earcut.pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n                Earcut.area(p.prev, p, p.next) >= 0) return false;\n            p = p.nextZ;\n        }\n\n        // then look for points in decreasing z-order\n        p = ear.prevZ;\n\n        while (p && p.z >= minZ) {\n            if (p !== ear.prev && p !== ear.next &&\n                Earcut.pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n                Earcut.area(p.prev, p, p.next) >= 0) return false;\n            p = p.prevZ;\n        }\n\n        return true;\n    }\n\n    // go through all polygon nodes and cure small local self-intersections\n    //TODO:coverage\n    static cureLocalIntersections(start: any, triangles: any, dim: any): any {\n        var p: any = start;\n        do {\n            var a: any = p.prev,\n                b: any = p.next.next;\n\n            if (!Earcut.equals(a, b) && Earcut.intersects(a, p, p.next, b) && Earcut.locallyInside(a, b) && Earcut.locallyInside(b, a)) {\n\n                triangles.push(a.i / dim);\n                triangles.push(p.i / dim);\n                triangles.push(b.i / dim);\n\n                // remove two nodes involved\n                Earcut.removeNode(p);\n                Earcut.removeNode(p.next);\n\n                p = start = b;\n            }\n            p = p.next;\n        } while (p !== start);\n\n        return p;\n    }\n\n    // try splitting polygon into two and triangulate them independently\n    //TODO:coverage\n    static splitEarcut(start: any, triangles: any, dim: any, minX: any, minY: any, invSize: any): void {\n        // look for a valid diagonal that divides the polygon into two\n        var a: any = start;\n        do {\n            var b: any = a.next.next;\n            while (b !== a.prev) {\n                if (a.i !== b.i && Earcut.isValidDiagonal(a, b)) {\n                    // split the polygon in two by the diagonal\n                    var c: any = Earcut.splitPolygon(a, b);\n\n                    // filter colinear points around the cuts\n                    a = Earcut.filterPoints(a, a.next);\n                    c = Earcut.filterPoints(c, c.next);\n\n                    // run earcut on each half\n                    Earcut.earcutLinked(a, triangles, dim, minX, minY, invSize);\n                    Earcut.earcutLinked(c, triangles, dim, minX, minY, invSize);\n                    return;\n                }\n                b = b.next;\n            }\n            a = a.next;\n        } while (a !== start);\n    }\n\n    // link every hole into the outer loop, producing a single-ring polygon without holes\n    //TODO:coverage\n    static eliminateHoles(data: any, holeIndices: any, outerNode: any, dim: any): any {\n        var queue: any = [],\n            i: any, len: any, start: any, end: any, list: any;\n\n        for (i = 0, len = holeIndices.length; i < len; i++) {\n            start = holeIndices[i] * dim;\n            end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n            list = Earcut.linkedList(data, start, end, dim, false);\n            if (list === list.next) list.steiner = true;\n            queue.push(Earcut.getLeftmost(list));\n        }\n\n        queue.sort(Earcut.compareX);\n\n        // process holes from left to right\n        for (i = 0; i < queue.length; i++) {\n            Earcut.eliminateHole(queue[i], outerNode);\n            outerNode = Earcut.filterPoints(outerNode, outerNode.next);\n        }\n\n        return outerNode;\n    }\n\n    //TODO:coverage\n    static compareX(a: any, b: any): any {\n        return a.x - b.x;\n    }\n\n    // find a bridge between vertices that connects hole with an outer ring and and link it\n    //TODO:coverage\n    static eliminateHole(hole: any, outerNode: any): void {\n        outerNode = Earcut.findHoleBridge(hole, outerNode);\n        if (outerNode) {\n            var b: any = Earcut.splitPolygon(outerNode, hole);\n            Earcut.filterPoints(b, b.next);\n        }\n    }\n\n    // David Eberly's algorithm for finding a bridge between hole and outer polygon\n    //TODO:coverage\n    static findHoleBridge(hole: any, outerNode: any): any {\n        var p: any = outerNode,\n            hx: any = hole.x,\n            hy: any = hole.y,\n            qx: any = -Infinity,\n            m: any;\n\n        // find a segment intersected by a ray from the hole's leftmost point to the left;\n        // segment's endpoint with lesser x will be potential connection point\n        do {\n            if (hy <= p.y && hy >= p.next.y && p.next.y !== p.y) {\n                var x: any = p.x + (hy - p.y) * (p.next.x - p.x) / (p.next.y - p.y);\n                if (x <= hx && x > qx) {\n                    qx = x;\n                    if (x === hx) {\n                        if (hy === p.y) return p;\n                        if (hy === p.next.y) return p.next;\n                    }\n                    m = p.x < p.next.x ? p : p.next;\n                }\n            }\n            p = p.next;\n        } while (p !== outerNode);\n\n        if (!m) return null;\n\n        if (hx === qx) return m.prev; // hole touches outer segment; pick lower endpoint\n\n        // look for points inside the triangle of hole point, segment intersection and endpoint;\n        // if there are no points found, we have a valid connection;\n        // otherwise choose the point of the minimum angle with the ray as connection point\n\n        var stop: any = m,\n            mx: any = m.x,\n            my: any = m.y,\n            tanMin: any = Infinity,\n            tan: any;\n\n        p = m.next;\n\n        while (p !== stop) {\n            if (hx >= p.x && p.x >= mx && hx !== p.x &&\n                Earcut.pointInTriangle(hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y)) {\n\n                tan = Math.abs(hy - p.y) / (hx - p.x); // tangential\n\n                if ((tan < tanMin || (tan === tanMin && p.x > m.x)) && Earcut.locallyInside(p, hole)) {\n                    m = p;\n                    tanMin = tan;\n                }\n            }\n\n            p = p.next;\n        }\n\n        return m;\n    }\n\n    // interlink polygon nodes in z-order\n    //TODO:coverage\n    static indexCurve(start: any, minX: any, minY: any, invSize: any): void {\n        var p: any = start;\n        do {\n            if (p.z === null) p.z = Earcut.zOrder(p.x, p.y, minX, minY, invSize);\n            p.prevZ = p.prev;\n            p.nextZ = p.next;\n            p = p.next;\n        } while (p !== start);\n\n        p.prevZ.nextZ = null;\n        p.prevZ = null;\n\n        Earcut.sortLinked(p);\n    }\n\n    // Simon Tatham's linked list merge sort algorithm\n    // http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\n    //TODO:coverage\n    static sortLinked(list: any): any {\n        var i: any, p: any, q: any, e: any, tail: any, numMerges: any, pSize: any, qSize: any,\n            inSize: any = 1;\n\n        do {\n            p = list;\n            list = null;\n            tail = null;\n            numMerges = 0;\n\n            while (p) {\n                numMerges++;\n                q = p;\n                pSize = 0;\n                for (i = 0; i < inSize; i++) {\n                    pSize++;\n                    q = q.nextZ;\n                    if (!q) break;\n                }\n                qSize = inSize;\n\n                while (pSize > 0 || (qSize > 0 && q)) {\n\n                    if (pSize !== 0 && (qSize === 0 || !q || p.z <= q.z)) {\n                        e = p;\n                        p = p.nextZ;\n                        pSize--;\n                    } else {\n                        e = q;\n                        q = q.nextZ;\n                        qSize--;\n                    }\n\n                    if (tail) tail.nextZ = e;\n                    else list = e;\n\n                    e.prevZ = tail;\n                    tail = e;\n                }\n\n                p = q;\n            }\n\n            tail.nextZ = null;\n            inSize *= 2;\n\n        } while (numMerges > 1);\n\n        return list;\n    }\n\n    // z-order of a point given coords and inverse of the longer side of data bbox\n    //TODO:coverage\n    static zOrder(x: any, y: any, minX: any, minY: any, invSize: any): any {\n        // coords are transformed into non-negative 15-bit integer range\n        x = 32767 * (x - minX) * invSize;\n        y = 32767 * (y - minY) * invSize;\n\n        x = (x | (x << 8)) & 0x00FF00FF;\n        x = (x | (x << 4)) & 0x0F0F0F0F;\n        x = (x | (x << 2)) & 0x33333333;\n        x = (x | (x << 1)) & 0x55555555;\n\n        y = (y | (y << 8)) & 0x00FF00FF;\n        y = (y | (y << 4)) & 0x0F0F0F0F;\n        y = (y | (y << 2)) & 0x33333333;\n        y = (y | (y << 1)) & 0x55555555;\n\n        return x | (y << 1);\n    }\n\n    // find the leftmost node of a polygon ring\n    //TODO:coverage\n    static getLeftmost(start: any): any {\n        var p: any = start,\n            leftmost: any = start;\n        do {\n            if (p.x < leftmost.x) leftmost = p;\n            p = p.next;\n        } while (p !== start);\n\n        return leftmost;\n    }\n\n    // check if a point lies within a convex triangle\n    static pointInTriangle(ax: any, ay: any, bx: any, by: any, cx: any, cy: any, px: any, py: any): boolean {\n        return (cx - px) * (ay - py) - (ax - px) * (cy - py) >= 0 &&\n            (ax - px) * (by - py) - (bx - px) * (ay - py) >= 0 &&\n            (bx - px) * (cy - py) - (cx - px) * (by - py) >= 0;\n    }\n\n    // check if a diagonal between two polygon nodes is valid (lies in polygon interior)\n    //TODO:coverage\n    static isValidDiagonal(a: any, b: any): boolean {\n        return a.next.i !== b.i && a.prev.i !== b.i && !Earcut.intersectsPolygon(a, b) &&\n            Earcut.locallyInside(a, b) && Earcut.locallyInside(b, a) && Earcut.middleInside(a, b);\n    }\n\n    // signed area of a triangle\n    static area(p: any, q: any, r: any): any {\n        return (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\n    }\n\n    // check if two points are equal\n    static equals(p1: any, p2: any): boolean {\n        return p1.x === p2.x && p1.y === p2.y;\n    }\n\n    // check if two segments intersect\n    //TODO:coverage\n    static intersects(p1: any, q1: any, p2: any, q2: any): boolean {\n        if ((Earcut.equals(p1, q1) && Earcut.equals(p2, q2)) ||\n            (Earcut.equals(p1, q2) && Earcut.equals(p2, q1))) return true;\n        return Earcut.area(p1, q1, p2) > 0 !== Earcut.area(p1, q1, q2) > 0 &&\n            Earcut.area(p2, q2, p1) > 0 !== Earcut.area(p2, q2, q1) > 0;\n    }\n\n    // check if a polygon diagonal intersects any polygon segments\n    //TODO:coverage\n    static intersectsPolygon(a: any, b: any): boolean {\n        var p: any = a;\n        do {\n            if (p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n                Earcut.intersects(p, p.next, a, b)) return true;\n            p = p.next;\n        } while (p !== a);\n\n        return false;\n    }\n\n    // check if a polygon diagonal is locally inside the polygon\n    //TODO:coverage\n    static locallyInside(a: any, b: any): boolean {\n        return Earcut.area(a.prev, a, a.next) < 0 ?\n            Earcut.area(a, b, a.next) >= 0 && Earcut.area(a, a.prev, b) >= 0 :\n            Earcut.area(a, b, a.prev) < 0 || Earcut.area(a, a.next, b) < 0;\n    }\n\n    // check if the middle point of a polygon diagonal is inside the polygon\n    //TODO:coverage\n    static middleInside(a: any, b: any): boolean {\n        var p: any = a,\n            inside: any = false,\n            px: any = (a.x + b.x) / 2,\n            py: any = (a.y + b.y) / 2;\n        do {\n            if (((p.y > py) !== (p.next.y > py)) && p.next.y !== p.y &&\n                (px < (p.next.x - p.x) * (py - p.y) / (p.next.y - p.y) + p.x))\n                inside = !inside;\n            p = p.next;\n        } while (p !== a);\n\n        return inside;\n    }\n\n    // link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n    // if one belongs to the outer ring and another to a hole, it merges it into a single ring\n    //TODO:coverage\n    static splitPolygon(a: any, b: any): any {\n        var a2: any = new EarcutNode(a.i, a.x, a.y),\n            b2: any = new EarcutNode(b.i, b.x, b.y),\n            an: any = a.next,\n            bp: any = b.prev;\n\n        a.next = b;\n        b.prev = a;\n\n        a2.next = an;\n        an.prev = a2;\n\n        b2.next = a2;\n        a2.prev = b2;\n\n        bp.next = b2;\n        b2.prev = bp;\n\n        return b2;\n    }\n\n    // create a node and optionally link it with previous one (in a circular doubly linked list)\n    static insertNode(i: any, x: any, y: any, last: any): any {\n        var p: any = new EarcutNode(i, x, y);\n\n        if (!last) {\n            p.prev = p;\n            p.next = p;\n\n        } else {\n            p.next = last.next;\n            p.prev = last;\n            last.next.prev = p;\n            last.next = p;\n        }\n        return p;\n    }\n\n    static removeNode(p: any): void {\n        p.next.prev = p.prev;\n        p.prev.next = p.next;\n\n        if (p.prevZ) p.prevZ.nextZ = p.nextZ;\n        if (p.nextZ) p.nextZ.prevZ = p.prevZ;\n    }\n    // return a percentage difference between the polygon area and its triangulation area;\n    // used to verify correctness of triangulation\n    /*earcut.deviation = function (data, holeIndices, dim, triangles) {\n        var hasHoles = holeIndices && holeIndices.length;\n        var outerLen = hasHoles ? holeIndices[0] * dim : data.length;\n    \n        var polygonArea = Math.abs(signedArea(data, 0, outerLen, dim));\n        if (hasHoles) {\n            for (var i = 0, len = holeIndices.length; i < len; i++) {\n                var start = holeIndices[i] * dim;\n                var end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n                polygonArea -= Math.abs(signedArea(data, start, end, dim));\n            }\n        }\n    \n        var trianglesArea = 0;\n        for (i = 0; i < triangles.length; i += 3) {\n            var a = triangles[i] * dim;\n            var b = triangles[i + 1] * dim;\n            var c = triangles[i + 2] * dim;\n            trianglesArea += Math.abs(\n                (data[a] - data[c]) * (data[b + 1] - data[a + 1]) -\n                (data[a] - data[b]) * (data[c + 1] - data[a + 1]));\n        }\n    \n        return polygonArea === 0 && trianglesArea === 0 ? 0 :\n            Math.abs((trianglesArea - polygonArea) / polygonArea);\n    };*/\n\n    static signedArea(data: any, start: any, end: any, dim: any): any {\n        var sum: any = 0;\n        for (var i: any = start, j: any = end - dim; i < end; i += dim) {\n            sum += (data[j] - data[i]) * (data[i + 1] + data[j + 1]);\n            j = i;\n        }\n        return sum;\n    }\n\n    // turn a polygon in a multi-dimensional array form (e.g. as in GeoJSON) into a form Earcut accepts\n    /*earcut.flatten = function (data) {\n        var dim = data[0][0].length,\n            result = {vertices: [], holes: [], dimensions: dim},\n            holeIndex = 0;\n    \n        for (var i = 0; i < data.length; i++) {\n            for (var j = 0; j < data[i].length; j++) {\n                for (var d = 0; d < dim; d++) result.vertices.push(data[i][j][d]);\n            }\n            if (i > 0) {\n                holeIndex += data[i - 1].length;\n                result.holes.push(holeIndex);\n            }\n        }\n        return result;\n    };*/\n}\n\n","import { Const } from \"../../Const\";\nimport { Material } from \"../../resource/Material\";\nimport { LayaGL } from \"../../layagl/LayaGL\";\nimport { IndexFormat } from \"../../RenderEngine/RenderEnum/IndexFormat\";\nimport { MeshTopology } from \"../../RenderEngine/RenderEnum/RenderPologyMode\";\nimport { RenderStateContext } from \"../../RenderEngine/RenderStateContext\";\nimport { Context } from \"../../resource/Context\";\nimport { BlendMode } from \"../canvas/BlendMode\";\nimport { Value2D } from \"../shader/d2/value/Value2D\";\nimport { Mesh2D } from \"../utils/Mesh2D\";\nimport { SubmitBase } from \"./SubmitBase\";\n\nexport class Submit extends SubmitBase {\n\n    protected static _poolSize: number = 0;\n    protected static POOL: Submit[] = [];\n    material: Material;\n    constructor(renderType: number = SubmitBase.TYPE_2D) {\n        super(renderType);\n    }\n\n    /**\n     * @override\n     */\n    renderSubmit(): number {\n        if (this._numEle === 0 || !this._mesh || this._numEle == 0) return 1;//怎么会有_numEle是0的情况?\n\n        var _tex = this.shaderValue.textureHost;\n        if (_tex) {\n            var source: any = _tex._getSource();\n            if (!source)\n                return 1;\n            this.shaderValue.texture = source;\n        }\n\n        this._mesh.useMesh();//bind 顶点\n        this.shaderValue.upload(this.material);//绑定shader，uploadMaterial\n\n        if (BlendMode.activeBlendFunction !== this._blendFn) {\n            RenderStateContext.setBlend(true);\n            this._blendFn();\n            BlendMode.activeBlendFunction = this._blendFn;\n        }\n        LayaGL.renderDrawContext.drawElements2DTemp(MeshTopology.Triangles, this._numEle, IndexFormat.UInt16, this._startIdx);\n        // Stat.renderBatches++;\n        // Stat.trianglesFaces += this._numEle / 3;\n\n        return 1;\n    }\n\n    /**\n     * @override\n     */\n    releaseRender(): void {\n        if (SubmitBase.RENDERBASE == this)\n            return;\n\n        if ((--this._ref) < 1) {\n            Submit.POOL[Submit._poolSize++] = this;\n            this.shaderValue.release();\n            this.shaderValue = null;\n            //_vb = null;\n            //_mesh.destroy();\n            this._mesh = null;\n            this._parent && (this._parent.releaseRender(), this._parent = null);\n        }\n    }\n\n    /**\n     * create方法只传对submit设置的值\n     */\n    static create(context: Context, mesh: Mesh2D, sv: Value2D): Submit {\n        var o = Submit._poolSize ? Submit.POOL[--Submit._poolSize] : new Submit();\n        o._ref = 1;\n        o._mesh = mesh;\n        o._key.clear();\n        o._startIdx = mesh.indexNum * Const.BYTES_PIDX;\n        o._numEle = 0;\n        var blendType = context._nBlendType;\n        o._blendFn = context._targets ? BlendMode.targetFns[blendType] : BlendMode.fns[blendType];\n        o.shaderValue = sv;\n        o.material = context.material;\n        var filters: any[] = context._shader2D.filters;\n        filters && o.shaderValue.setFilters(filters);\n        return o;\n    }\n\n    /**\n     * 创建一个矢量submit\n     * @param\tctx\n     * @param\tmesh\n     * @param\tnumEle\t\t对应drawElement的第二个参数:count\n     * @param\toffset\t\tdrawElement的时候的ib的偏移。\n     * @param\tsv\t\t\tValue2D\n     * @return\n     */\n    static createShape(ctx: Context, mesh: Mesh2D, numEle: number, sv: Value2D): Submit {\n        var o = Submit._poolSize ? Submit.POOL[--Submit._poolSize] : (new Submit());\n        o._mesh = mesh;\n        o._numEle = numEle;\n        o._startIdx = mesh.indexNum * 2;\n        o._ref = 1;\n        o.shaderValue = sv;\n        var blendType = ctx._nBlendType;\n        o._key.blendShader = blendType;\n        o.material = ctx.material;\n        o._blendFn = ctx._targets ? BlendMode.targetFns[blendType] : BlendMode.fns[blendType];\n        return o;\n    }\n}\n\n\n","import { Matrix } from \"../../maths/Matrix\";\nimport { Context } from \"../../resource/Context\";\nimport { RenderSpriteData, Value2D } from \"../shader/d2/value/Value2D\";\nimport { RenderState2D } from \"../utils/RenderState2D\";\nimport { SubmitBase } from \"./SubmitBase\";\n\n/**\n * cache as normal 模式下的生成的canvas的渲染。\n */\nexport class SubmitCanvas extends SubmitBase {\n    /**@internal */\n    _matrix: Matrix = new Matrix();\t\t// 用来计算当前的世界矩阵\n    canv: Context;\n    /**@internal */\n    _matrix4: any[] = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n\n    static POOL: SubmitCanvas[] = [];\n\n    static create(canvas: any, alpha: number, filters: any[]): SubmitCanvas {\n        var o = (!(SubmitCanvas.POOL as any)._length) ? (new SubmitCanvas()) : SubmitCanvas.POOL[--(SubmitCanvas.POOL as any)._length];\n        o.canv = canvas;\n        o._ref = 1;\n        o._numEle = 0;\n        var v: Value2D = o.shaderValue;\n        v.alpha = alpha;\n        v.defines.clearDefine();\n        filters && filters.length && v.setFilters(filters);\n        return o;\n    }\n\n    constructor() {\n        super(SubmitBase.TYPE_2D);\n        this.shaderValue = new Value2D(RenderSpriteData.Zero);\n    }\n\n    /**\n     * @override\n     */\n    renderSubmit(): number {\n        // 下面主要是为了给canvas设置矩阵。因为canvas保存的是没有偏移的。\n        var preAlpha = RenderState2D.worldAlpha;\n        var preMatrix4 = RenderState2D.worldMatrix4;\n        var preMatrix = RenderState2D.worldMatrix;\n\n        var preFilters: any[] = RenderState2D.worldFilters;\n        var preWorldShaderDefines = RenderState2D.worldShaderDefines;\n\n        var v = this.shaderValue;\n        var m = this._matrix;\n        var m4 = this._matrix4;\n        var mout = Matrix.TEMP;\n        Matrix.mul(m, preMatrix, mout);\n        m4[0] = mout.a;\n        m4[1] = mout.b;\n        m4[4] = mout.c;\n        m4[5] = mout.d;\n        m4[12] = mout.tx;\n        m4[13] = mout.ty;\n\n        RenderState2D.worldMatrix = mout.clone();\n        RenderState2D.worldMatrix4 = m4;\n        RenderState2D.worldAlpha = RenderState2D.worldAlpha * v.alpha;\n        if (v.filters && v.filters.length) {\n            RenderState2D.worldFilters = v.filters;\n            RenderState2D.worldShaderDefines = v.defines;\n        }\n        (this.canv as any)['flushsubmit']();\n        RenderState2D.worldAlpha = preAlpha;\n        RenderState2D.worldMatrix4 = preMatrix4;\n        RenderState2D.worldMatrix.destroy();\n        RenderState2D.worldMatrix = preMatrix;\n\n        RenderState2D.worldFilters = preFilters;\n        RenderState2D.worldShaderDefines = preWorldShaderDefines;\n        return 1;\n    }\n    /**\n     * @override\n     */\n    releaseRender(): void {\n        if ((--this._ref) < 1) {\n            var cache = SubmitCanvas.POOL;\n            //_vb = null;\n            this._mesh = null;\n            cache[(cache as any)._length++] = this;\n        }\n    }\n    /**\n     * @override\n     */\n    getRenderType(): number {\n        return SubmitBase.TYPE_CANVAS;\n    }\n\n}\n{ (SubmitCanvas.POOL as any)._length = 0 }\n","import { ISubmit } from \"./ISubmit\";\nimport { SubmitKey } from \"./SubmitKey\";\nimport { ColorFilter } from \"../../filters/ColorFilter\"\nimport { Context } from \"../../resource/Context\"\nimport { RenderTexture2D } from \"../../resource/RenderTexture2D\"\nimport { BlendMode } from \"../canvas/BlendMode\"\nimport { TextureSV } from \"../shader/d2/value/TextureSV\"\nimport { Value2D } from \"../shader/d2/value/Value2D\"\nimport { Mesh2D } from \"../utils/Mesh2D\"\nimport { RenderStateContext } from \"../../RenderEngine/RenderStateContext\";\nimport { MeshTopology } from \"../../RenderEngine/RenderEnum/RenderPologyMode\";\nimport { IndexFormat } from \"../../RenderEngine/RenderEnum/IndexFormat\";\nimport { Const } from \"../../Const\";\nimport { Matrix4x4 } from \"../../maths/Matrix4x4\";\nimport { Vector4 } from \"../../maths/Vector4\";\nimport { LayaGL } from \"../../layagl/LayaGL\";\n\nexport class SubmitTarget implements ISubmit {\n    /**@internal */\n    _mesh: Mesh2D;\t\t\t//代替 _vb,_ib\n    /**@internal */\n    _startIdx: number;\n    /**@internal */\n    _numEle: number;\n    shaderValue: Value2D;\n    blendType: number = 0;\n    /**@internal */\n    _ref: number = 1;\n    /**@internal */\n    _key: SubmitKey = new SubmitKey();\n    srcRT: RenderTexture2D;\n\n    constructor() {\n    }\n\n    static POOL: SubmitTarget[] = [];\n    renderSubmit(): number {\n        this._mesh.useMesh();\n\n        var target = this.srcRT;\n        if (target) {//??为什么会出现为空的情况\n            this.shaderValue.textureHost = target;\n            this.shaderValue.upload();\n            this.blend();\n            LayaGL.renderDrawContext.drawElements2DTemp(MeshTopology.Triangles, this._numEle, IndexFormat.UInt16, this._startIdx);\n        }\n        return 1;\n    }\n\n    blend(): void {\n        if (BlendMode.activeBlendFunction !== BlendMode.fns[this.blendType]) {\n            RenderStateContext.setBlend(true);\n            BlendMode.fns[this.blendType]();\n            BlendMode.activeBlendFunction = BlendMode.fns[this.blendType];\n        }\n    }\n\n    getRenderType(): number {\n        return 0;\n    }\n\n    releaseRender(): void {\n        if ((--this._ref) < 1) {\n            var pool: any = SubmitTarget.POOL;\n            pool[pool._length++] = this;\n        }\n    }\n\n    static create(context: Context, mesh: Mesh2D, sv: Value2D, rt: RenderTexture2D): SubmitTarget {\n        var o: SubmitTarget = (SubmitTarget.POOL as any)._length ? SubmitTarget.POOL[--(SubmitTarget.POOL as any)._length] : new SubmitTarget();\n        o._mesh = mesh;\n        o.srcRT = rt;\n        o._startIdx = mesh.indexNum * Const.BYTES_PIDX;\n        o._ref = 1;\n        o._key.clear();\n        o._numEle = 0;\n        o.blendType = context._nBlendType;\n        o._key.blendShader = o.blendType;\n        o.shaderValue = sv;\n        if (context._colorFiler) {\n            var ft: ColorFilter = context._colorFiler;\n            sv.defines.addDefine(ft.typeDefine);\n            Matrix4x4.TEMPMatrix0.cloneByArray(ft._mat);\n            (<TextureSV>sv).colorMat = Matrix4x4.TEMPMatrix0;\n            Vector4.tempVec4.setValue(ft._alpha[0], ft._alpha[1], ft._alpha[2], ft._alpha[3]);\n            (<TextureSV>sv).colorAlpha = Vector4.tempVec4;\n        }\n        return o;\n    }\n}\n\n{\n    (SubmitTarget.POOL as any)._length = 0;\n}\n\n\n","import { SubmitBase } from \"./SubmitBase\";\nimport { ColorFilter } from \"../../filters/ColorFilter\"\nimport { Context } from \"../../resource/Context\"\nimport { BlendMode } from \"../canvas/BlendMode\"\nimport { TextureSV } from \"../shader/d2/value/TextureSV\"\nimport { Value2D } from \"../shader/d2/value/Value2D\"\nimport { Mesh2D } from \"../utils/Mesh2D\"\nimport { RenderStateContext } from \"../../RenderEngine/RenderStateContext\";\nimport { MeshTopology } from \"../../RenderEngine/RenderEnum/RenderPologyMode\";\nimport { IndexFormat } from \"../../RenderEngine/RenderEnum/IndexFormat\";\nimport { Const } from \"../../Const\";\nimport { Matrix4x4 } from \"../../maths/Matrix4x4\";\nimport { Vector4 } from \"../../maths/Vector4\";\nimport { Material } from \"../../resource/Material\";\nimport { Laya } from \"../../../Laya\";\nimport { LayaGL } from \"../../layagl/LayaGL\";\n\nexport class SubmitTexture extends SubmitBase {\n    private static _poolSize: number = 0;\n    private static POOL: SubmitTexture[] = [];\n    material: Material;\n    constructor(renderType: number = SubmitBase.TYPE_2D) {\n        super(renderType);\n    }\n    /**\n     * @override\n     */\n    releaseRender(): void {\n        if ((--this._ref) < 1) {\n            SubmitTexture.POOL[SubmitTexture._poolSize++] = this;\n            this.shaderValue.release();\n            //_vb = null;\n            this._mesh = null;\t\t//下次create会重新赋值。既然会重新赋值，那还设置干嘛\n            this._parent && (this._parent.releaseRender(), this._parent = null);\n        }\n    }\n\n    renderSubmit(): number {\n        if (this._numEle === 0)\n            return 1;\n\n        var tex = this.shaderValue.textureHost;\n        if (tex) {//现在fillrect也用的这个submit，所以不必要求有texture\n            var source: any = tex ? tex._getSource() : null;\n            if (!source) return 1;\n        }\n\n        this._mesh.useMesh();//Mesh2D  ->    Geometry  Vao  Vb  ib\n\n        //bind Shader uploadData\n        this.shaderValue.updateShaderData();//Material   Shader   ShaderData\n\n        //如果shader参数都相同，只要提交texture就行了\n        var lastSubmit = <SubmitTexture>SubmitBase.preRender;\n        var prekey = ((<SubmitBase>SubmitBase.preRender))._key;\n        //         if (this._key.blendShader === 0 && (this._key.submitType === prekey.submitType && this._key.blendShader === prekey.blendShader) && BaseShader.activeShader &&\n        //             (<SubmitBase>SubmitBase.preRender).clipInfoID == this.clipInfoID &&\n        // //            lastSubmit.shaderValue.defines._value === this.shaderValue.defines._value && //shader define要相同. \n        //             (this.shaderValue.defines.hasDefine(ShaderDefines2D.FILTERGLOW) || this.shaderValue.defines.hasDefine(ShaderDefines2D.FILTERBLUR)\n        //                 || this.shaderValue.defines.hasDefine(ShaderDefines2D.FILTERCOLOR) || this.shaderValue.defines.hasDefine(ShaderDefines2D.FILLTEXTURE))  //只有基本类型的shader走这个，像blur，glow，filltexture等都不要这样优化\n        //         ) {\n        //             (<Shader>BaseShader.activeShader).uploadTexture2D(source);\n        //         }\n        //         else {\n        if (BlendMode.activeBlendFunction !== this._blendFn) {\n            RenderStateContext.setBlend(true);\n            this._blendFn();\n            BlendMode.activeBlendFunction = this._blendFn;\n        }\n        this.shaderValue.texture = source;\n        this.shaderValue.upload(this.material);//Update Uniform\n        //}\n        //Draw\n        LayaGL.renderDrawContext.drawElements2DTemp(MeshTopology.Triangles, this._numEle, IndexFormat.UInt16, this._startIdx);\n        return 1;\n    }\n\n    /*\n       create方法只传对submit设置的值\n     */\n    static create(context: Context, mesh: Mesh2D, sv: Value2D): SubmitTexture {\n        var o = SubmitTexture._poolSize ? SubmitTexture.POOL[--SubmitTexture._poolSize] : new SubmitTexture(SubmitBase.TYPE_TEXTURE);\n        o._mesh = mesh;\n        o._key.clear();\n        o._key.submitType = SubmitBase.KEY_DRAWTEXTURE;\n        o._ref = 1;\n        o._startIdx = mesh.indexNum * Const.BYTES_PIDX;\n        o._numEle = 0;\n        var blendType = context._nBlendType;\n        o._key.blendShader = blendType;\n        o._blendFn = context._targets ? BlendMode.targetFns[blendType] : BlendMode.fns[blendType];\n        o.shaderValue = sv;\n        o.material = context.material;\n        //sv.setValue(context._shader2D);\n        if (context._colorFiler) {\n            var ft: ColorFilter = context._colorFiler;\n            sv.defines.addDefine(ft.typeDefine);\n            Matrix4x4.TEMPMatrix0.cloneByArray(ft._mat);\n            (<TextureSV>sv).colorMat = Matrix4x4.TEMPMatrix0;\n            Vector4.tempVec4.setValue(ft._alpha[0], ft._alpha[1], ft._alpha[2], ft._alpha[3]);\n            (<TextureSV>sv).colorAlpha = Vector4.tempVec4;\n        }\n        return o;\n    }\n\n}\n\n\n","import { ColorFilter } from \"../../filters/ColorFilter\"\nimport { Matrix } from \"../../maths/Matrix\"\nimport { Context } from \"../../resource/Context\"\nimport { Texture } from \"../../resource/Texture\"\nimport { RenderSpriteData, Value2D } from \"../shader/d2/value/Value2D\"\nimport { SubmitTexture } from \"../submit/SubmitTexture\"\nimport { MeshQuadTexture } from \"../utils/MeshQuadTexture\"\nimport { RenderInfo } from \"../../renders/RenderInfo\";\n/**\n * ...\n * @author laoxie\n */\nexport class CharSubmitCache {\n    private static __posPool: any[] = [];\n    private static __nPosPool: number = 0;\n\n    private _data: any[] = [];\n    private _ndata: number = 0;\n    private _tex: Texture;\n    private _imgId: number;\n    private _clipid: number = -1;\n    private _clipMatrix: Matrix = new Matrix();\n    /**@internal */\n    _enable: boolean = false;\n    /**@internal */\n    _colorFiler: ColorFilter;\n\n    constructor() {\n\n    }\n\n    clear(): void {\n        this._tex = null;\n        this._imgId = -1;\n        this._ndata = 0;\n        this._enable = false;\n        this._colorFiler = null;\n    }\n\n    destroy(): void {\n        this.clear();\n        this._data.length = 0;\n        this._data = null;\n    }\n\n    add(ctx: Context, tex: Texture, imgid: number, pos: any[], uv: ArrayLike<number>, color: number): void {\n        if (this._ndata > 0 && (this._tex != tex || this._imgId != imgid ||\n            (this._clipid >= 0 && this._clipid != ctx._clipInfoID))) {\n            this.submit(ctx);\n        }\n\n        this._clipid = ctx._clipInfoID;\n        ctx._globalClipMatrix.copyTo(this._clipMatrix);\n        this._tex = tex;\n        this._imgId = imgid;\n        this._colorFiler = ctx._colorFiler;\n\n        this._data[this._ndata] = pos;\n        this._data[this._ndata + 1] = uv;\n        this._data[this._ndata + 2] = color;\n        this._ndata += 3;\n    }\n\n    getPos(): any[] {\n        if (CharSubmitCache.__nPosPool == 0)\n            return new Array(8);\n        return CharSubmitCache.__posPool[--CharSubmitCache.__nPosPool];\n    }\n\n    enable(value: boolean, ctx: Context): void {\n        if (value === this._enable)\n            return;\n        this._enable = value;\n        this._enable || this.submit(ctx);\n    }\n\n    submit(ctx: Context): void {\n        var n: number = this._ndata;\n        if (!n)\n            return;\n\n        var _mesh: MeshQuadTexture = ctx._mesh;\n\n        var colorFiler: ColorFilter = ctx._colorFiler;\n        ctx._colorFiler = this._colorFiler;\n        var submit: SubmitTexture = SubmitTexture.create(ctx, _mesh, Value2D.create(RenderSpriteData.Texture2D));\n        ctx._submits[ctx._submits._length++] = ctx._curSubmit = submit;\n        submit.shaderValue.textureHost = this._tex;\n        submit._key.other = this._imgId;\n        ctx._colorFiler = colorFiler;\n        ctx._copyClipInfo(submit, this._clipMatrix);\n        submit.clipInfoID = this._clipid;\n\n        for (var i: number = 0; i < n; i += 3) {\n            _mesh.addQuad(this._data[i], this._data[i + 1], this._data[i + 2], true);\n            CharSubmitCache.__posPool[CharSubmitCache.__nPosPool++] = this._data[i];\n        }\n\n        n /= 3;\n        submit._numEle += n * 6;\n        _mesh.indexNum += n * 6;\n        _mesh.vertNum += n * 4;\n        ctx._drawCount += n;\n        this._ndata = 0;\n\n        if (RenderInfo.loopCount % 100 == 0)\n            this._data.length = 0;\n    }\n\n}\n\n\n","import { Config } from \"./Config\";\nimport { Vector3 } from \"./laya/maths/Vector3\";\n\n/**\n * <code>Config3D</code> 类用于创建3D初始化配置。\n */\nexport class Config3D {\n    /**\n     * 控制是否动态合并 \n     */\n    static enableDynamicBatch: boolean = true;\n    /**\n     * 是否静态合并 \n     */\n    static enableStaticBatch: boolean = true;\n    /** \n     * 是否开启UniformBuffer\n     */\n    static enableUniformBufferObject = true;\n    /**\n     * 设置3DRT分辨率倍数\n     */\n    static pixelRatio: number = 1;\n    /**\n     *  设置自定义分辨率\n     */\n    static customResolution: boolean = false;\n    /**\n     *  设置最大RendertexturePool缓存的值\n     */\n    static defaultCacheRTMemory: number = 256;\n    /**\n     * 默认物理功能初始化内存，单位为M。\n     */\n    static defaultPhysicsMemory: number = 16;\n    /**\n     *  是否开启多光源,如果场景不需要多光源，关闭后可提升性能。\n     */\n    static enableMultiLight: boolean = true;\n    /**\n     * 最大光源数量。\n     */\n    static maxLightCount: number = 32;\n    /**\n    * X、Y、Z轴的光照集群数量,Z值会影响Cluster接受区域光(点光、聚光)影响的数量,Math.floor(2048 / lightClusterCount.z - 1) * 4 为每个Cluster的最大平均接受区域光数量,如果每个Cluster所接受光源影响的平均数量大于该值，则较远的Cluster会忽略其中多余的光照影响。\n    */\n    static lightClusterCount: Vector3 = new Vector3(12, 12, 12);\n\n    /**\n     * 最大形变数量\n     */\n    static maxMorphTargetCount: number = 32;\n\n    /**\n    * 设置分辨率大小（并不是实际渲染分辨率）\n    * @param width \n    * @param height \n    */\n    static setResolution(width: number, height: number) {\n        Config3D.customResolution = true;\n        Config3D._resoluWidth = width;\n        Config3D._resoluHeight = height;\n    }\n\n    /**BVHRenderConfig */\n    /**是否使用BVH裁剪 */\n    static useBVHCull: boolean = false;\n    /**一个BVH节点最大的cell数，超过这个数会分离 */\n    static BVH_max_SpatialCount = 7;\n    /**最大BVH节点的大小 */\n    static BVH_limit_size = 32;\n    /**最小cellbuild数，如果小于这个数，不会BVH构建 */\n    static BVH_Min_Build_nums = 10\n\n\n    //----引擎内部使用,不暴露给开发者----\n    /**@internal */\n    static _uniformBlock: boolean;\n    /**@internal 设置分辨率宽度*/\n    static _resoluWidth: number = -1;\n    /**@internal 设置分辨率高度*/\n    static _resoluHeight: number = -1;\n    /**@internal*/\n    static _maxAreaLightCountPerClusterAverage: number;\n    /**@internal*/\n    static _multiLighting: boolean;\n    /** @internal是否开启视锥裁剪调试。\n     */\n    static debugFrustumCulling: boolean = false;\n}\n\nConfig.isStencil = true;","import { Config3D } from \"../../Config3D\";\nimport { LayaGL } from \"../layagl/LayaGL\";\nimport { RenderTargetFormat } from \"../RenderEngine/RenderEnum/RenderTargetFormat\";\nimport { TextureDimension } from \"../RenderEngine/RenderEnum/TextureDimension\";\nimport { TextureFormat } from \"../RenderEngine/RenderEnum/TextureFormat\";\nimport { InternalRenderTarget } from \"../RenderEngine/RenderInterface/InternalRenderTarget\";\nimport { IRenderTarget } from \"../RenderEngine/RenderInterface/IRenderTarget\";\nimport { BaseTexture } from \"./BaseTexture\";\n\nexport class RenderTexture extends BaseTexture implements IRenderTarget {\n\n    // todo 记录当前 绑定 rt  位置不放在这里\n    protected static _currentActive: RenderTexture = null;\n\n    static get currentActive(): RenderTexture {\n        return RenderTexture._currentActive;\n    }\n\n    protected static _configInstance: any = {};\n    static configRenderContextInstance(value: any) {\n        RenderTexture._configInstance = value;\n    }\n\n    private static _pool: RenderTexture[] = [];\n    private static _poolMemory: number = 0;\n\n    /**\n     * 创建一个RenderTexture\n     * @param width\n     * @param height\n     * @param colorFormat\n     * @param depthFormat\n     * @param mipmap \n     * @param multiSamples \n     * @param depthTexture \n     * @param sRGB \n     * @returns \n     */\n    static createFromPool(width: number, height: number, colorFormat: RenderTargetFormat, depthFormat: RenderTargetFormat, mipmap: boolean = false, multiSamples: number = 1, depthTexture: boolean = false, sRGB: boolean = false) {\n\n        // todo mipmap 判断\n        mipmap = mipmap && (width & (width - 1)) === 0 && (height & (height - 1)) === 0;\n\n        let n = RenderTexture._pool.length;\n        for (let index = 0; index < n; index++) {\n            let rt = RenderTexture._pool[index];\n\n            if (rt.width == width && rt.height == height && rt.colorFormat == colorFormat && rt.depthStencilFormat == depthFormat && rt._generateMipmap == mipmap && rt.multiSamples == multiSamples && rt.generateDepthTexture == depthTexture && rt._gammaSpace == sRGB) {\n                rt._inPool = false;\n                let end = RenderTexture._pool[n - 1];\n                RenderTexture._pool[index] = end;\n                RenderTexture._pool.length -= 1;\n                RenderTexture._poolMemory -= (rt._renderTarget.gpuMemory / 1024 / 1024);\n                return rt;\n            }\n        }\n\n        let rt = new RenderTexture(width, height, colorFormat, depthFormat, mipmap, multiSamples, depthTexture, sRGB);\n        rt.lock = true;\n        return rt;\n    }\n\n    static recoverToPool(rt: RenderTexture): void {\n        if (rt._inPool || rt.destroyed)\n            return;\n        RenderTexture._pool.push(rt);\n        RenderTexture._poolMemory += (rt._renderTarget.gpuMemory / 1024 / 1024);\n        rt._inPool = true;\n    }\n\n    static clearPool() {\n        if (RenderTexture._poolMemory < Config3D.defaultCacheRTMemory) {\n            return;\n        }\n        for (var i in RenderTexture._pool) {\n            RenderTexture._pool[i].destroy();\n        }\n        RenderTexture._pool = [];\n        RenderTexture._poolMemory = 0;\n    }\n\n    /** @internal 最后绑定到主画布上的结果 此值可能为null*/\n    private static _bindCanvasRender: RenderTexture;\n    /**\n     * 绑定到主画布上的RenderTexture\n     */\n    static get bindCanvasRender(): RenderTexture {\n        return RenderTexture._bindCanvasRender;\n    }\n\n    static set bindCanvasRender(value: RenderTexture) {\n        if (value != this._bindCanvasRender)\n            //(this._bindCanvasRender) && RenderTexture.recoverToPool(this._bindCanvasRender);\n            this._bindCanvasRender = value;\n    }\n\n\n    _inPool: boolean = false;\n\n    _isCameraTarget: boolean = false;\n\n    _renderTarget: InternalRenderTarget;\n\n    private _generateDepthTexture: boolean = false;\n    public get generateDepthTexture(): boolean {\n        return this._generateDepthTexture;\n    }\n    public set generateDepthTexture(value: boolean) {\n\n        // todo  重复 设置\n        if (value && !this._depthStencilTexture) {\n            // todo  base texture format 移出构造函数\n            this._depthStencilTexture = new BaseTexture(this.width, this.height, this.depthStencilFormat);\n            // @ts-ignore\n            this._depthStencilTexture._dimension = TextureDimension.Tex2D;\n\n\n            this._depthStencilTexture._texture = LayaGL.textureContext.createRenderTextureInternal(TextureDimension.Tex2D, this.width, this.height, this.depthStencilFormat, false, false);\n\n            LayaGL.textureContext.setupRendertargetTextureAttachment(this._renderTarget, this._depthStencilTexture._texture);\n\n        }\n\n        this._generateDepthTexture = value;\n    }\n\n    private _depthStencilTexture: BaseTexture;\n\n    get depthStencilTexture(): BaseTexture {\n        return this._depthStencilTexture;\n    }\n\n    _generateMipmap: boolean;\n\n    get colorFormat(): RenderTargetFormat {\n        return this._renderTarget.colorFormat;\n    }\n\n    protected _depthStencilFormat: RenderTargetFormat;\n    get depthStencilFormat(): RenderTargetFormat {\n        return this._renderTarget.depthStencilFormat;\n    }\n\n    protected _multiSamples: number;\n    public get multiSamples(): number {\n        return this._renderTarget._samples;\n    }\n\n    get isCube(): boolean {\n        return this._renderTarget._isCube;\n    }\n\n    get samples(): number {\n        return this._renderTarget._samples;\n    }\n\n    get generateMipmap(): boolean {\n        return this._renderTarget._generateMipmap;\n    }\n\n    /**\n     * @param width \n     * @param height \n     * @param colorFormat \n     * @param depthFormat \n     * @param generateMipmap \n     * @param multiSamples \n     * @param generateDepthTexture \n     * @param sRGB \n     */\n    constructor(width: number, height: number, colorFormat: RenderTargetFormat, depthFormat: RenderTargetFormat, generateMipmap: boolean = false, multiSamples: number = 1, generateDepthTexture: boolean = false, sRGB: boolean = false) {\n        super(width, height, colorFormat);\n\n        this._gammaSpace = sRGB;\n\n        this._depthStencilFormat = (depthFormat == null ? RenderTargetFormat.None : depthFormat);\n\n        this._generateMipmap = generateMipmap;\n        this._multiSamples = multiSamples;\n        this._generateDepthTexture = generateDepthTexture;\n\n        // todo format \n        this._createRenderTarget();\n    }\n\n    _createRenderTarget() {\n        this._dimension = TextureDimension.Tex2D;\n        this._renderTarget = LayaGL.textureContext.createRenderTargetInternal(this.width, this.height, <RenderTargetFormat><any>this._format, this._depthStencilFormat, this._generateMipmap, this._gammaSpace, this._multiSamples);\n\n        // rt 格式 宽高可能不支持\n        this._generateMipmap = this._renderTarget._generateMipmap;\n        this._texture = this._renderTarget._textures[0];\n\n        this.generateDepthTexture = this._generateDepthTexture;\n    }\n\n    //@internal\n    recreate(width: number, height: number, colorFormat: RenderTargetFormat, depthFormat: RenderTargetFormat, generateMipmap: boolean = false, multiSamples: number = 1, generateDepthTexture: boolean = false, sRGB: boolean = false) {\n        this._width = width;\n        this._height = height;\n        this._format = <TextureFormat><any>colorFormat;\n\n        this._gammaSpace = sRGB;\n\n        this._depthStencilFormat = (depthFormat == null ? RenderTargetFormat.None : depthFormat);\n\n        this._generateMipmap = generateMipmap;\n        this._multiSamples = multiSamples;\n        this._generateDepthTexture = generateDepthTexture;\n\n        this._disposeResource();\n\n        // todo format \n        this._createRenderTarget();\n    }\n\n    _start() {\n        RenderTexture._configInstance.invertY = this._isCameraTarget;\n        if (RenderTexture._currentActive != this) {\n            RenderTexture._currentActive && RenderTexture._currentActive._end();\n            RenderTexture._currentActive = this;\n            LayaGL.textureContext.bindRenderTarget(this._renderTarget);\n        }\n    }\n\n    _end() {\n        RenderTexture._currentActive = null;\n\n        LayaGL.textureContext.unbindRenderTarget(this._renderTarget);\n        (this._isCameraTarget) && (RenderTexture._configInstance.invertY = false);\n    }\n\n    getData(xOffset: number, yOffset: number, width: number, height: number, out: Uint8Array | Float32Array): Uint8Array | Float32Array {\n        LayaGL.textureContext.readRenderTargetPixelData(this._renderTarget, xOffset, yOffset, width, height, out);\n        return out;\n    }\n\n    protected _disposeResource(): void {\n\n        if (RenderTexture._currentActive == this) {\n            this._end();\n        }\n\n        this._renderTarget.dispose();\n        this._renderTarget = null;\n        this._depthStencilTexture?.destroy();\n        this._depthStencilTexture = null;\n    }\n\n}","import { ILaya } from \"../../ILaya\";\nimport { Sprite } from \"../display/Sprite\";\nimport { ColorFilter } from \"../filters/ColorFilter\";\nimport { Bezier } from \"../maths/Bezier\";\nimport { Matrix } from \"../maths/Matrix\";\nimport { Point } from \"../maths/Point\";\nimport { Rectangle } from \"../maths/Rectangle\";\nimport { BlendEquationSeparate } from \"../RenderEngine/RenderEnum/BlendEquationSeparate\";\nimport { BlendFactor } from \"../RenderEngine/RenderEnum/BlendFactor\";\nimport { CullMode } from \"../RenderEngine/RenderEnum/CullMode\";\nimport { RenderClearFlag } from \"../RenderEngine/RenderEnum/RenderClearFlag\";\nimport { RenderStateType } from \"../RenderEngine/RenderEnum/RenderStateType\";\nimport { RenderTargetFormat } from \"../RenderEngine/RenderEnum/RenderTargetFormat\";\nimport { TextureFormat } from \"../RenderEngine/RenderEnum/TextureFormat\";\nimport { RenderStateCommand } from \"../RenderEngine/RenderStateCommand\";\nimport { FontInfo } from \"../utils/FontInfo\";\nimport { WordText } from \"../utils/WordText\";\nimport { BlendMode } from \"../webgl/canvas/BlendMode\";\nimport { DrawStyle } from \"../webgl/canvas/DrawStyle\";\nimport { Path } from \"../webgl/canvas/Path\";\nimport { ISaveData } from \"../webgl/canvas/save/ISaveData\";\nimport { SaveBase } from \"../webgl/canvas/save/SaveBase\";\nimport { SaveClipRect } from \"../webgl/canvas/save/SaveClipRect\";\nimport { SaveMark } from \"../webgl/canvas/save/SaveMark\";\nimport { SaveTransform } from \"../webgl/canvas/save/SaveTransform\";\nimport { SaveTranslate } from \"../webgl/canvas/save/SaveTranslate\";\nimport { WebGLCacheAsNormalCanvas } from \"../webgl/canvas/WebGLCacheAsNormalCanvas\";\nimport { BaseShader } from \"../webgl/shader/BaseShader\";\nimport { Shader2D } from \"../webgl/shader/d2/Shader2D\";\nimport { ShaderDefines2D } from \"../webgl/shader/d2/ShaderDefines2D\";\nimport { SkinMeshBuffer } from \"../webgl/shader/d2/skinAnishader/SkinMeshBuffer\";\nimport { RenderSpriteData, Value2D } from \"../webgl/shader/d2/value/Value2D\";\nimport { BasePoly } from \"../webgl/shapes/BasePoly\";\nimport { Earcut } from \"../webgl/shapes/Earcut\";\nimport { ISubmit } from \"../webgl/submit/ISubmit\";\nimport { Submit } from \"../webgl/submit/Submit\";\nimport { SubmitBase } from \"../webgl/submit/SubmitBase\";\nimport { SubmitCanvas } from \"../webgl/submit/SubmitCanvas\";\nimport { SubmitCMD } from \"../webgl/submit/SubmitCMD\";\nimport { SubmitKey } from \"../webgl/submit/SubmitKey\";\nimport { SubmitTarget } from \"../webgl/submit/SubmitTarget\";\nimport { SubmitTexture } from \"../webgl/submit/SubmitTexture\";\nimport { CharRenderInfo } from \"../webgl/text/CharRenderInfo\";\nimport { CharSubmitCache } from \"../webgl/text/CharSubmitCache\";\nimport { TextRender } from \"../webgl/text/TextRender\";\nimport { Mesh2D } from \"../webgl/utils/Mesh2D\";\nimport { MeshQuadTexture } from \"../webgl/utils/MeshQuadTexture\";\nimport { MeshTexture } from \"../webgl/utils/MeshTexture\";\nimport { MeshVG } from \"../webgl/utils/MeshVG\";\nimport { RenderState2D } from \"../webgl/utils/RenderState2D\";\nimport { HTMLCanvas } from \"./HTMLCanvas\";\nimport { RenderTexture2D } from \"./RenderTexture2D\";\nimport { Texture } from \"./Texture\";\nimport { Texture2D } from \"./Texture2D\";\nimport { NativeContext } from \"./NativeContext\";\nimport { Const } from \"../Const\";\nimport { Color } from \"../maths/Color\";\nimport { RenderTexture } from \"./RenderTexture\";\nimport { Vector4 } from \"../maths/Vector4\";\nimport { Vector2 } from \"../maths/Vector2\";\nimport { TextureSV } from \"../webgl/shader/d2/value/TextureSV\";\nimport { Material } from \"./Material\";\nimport { LayaGL } from \"../layagl/LayaGL\";\n\nconst defaultClipMatrix = new Matrix(Const.MAX_CLIP_SIZE, 0, 0, Const.MAX_CLIP_SIZE, 0, 0);\n\n/**\n * @private\n * Context扩展类\n */\nexport class Context {\n\n    /**@internal */\n    static _rendercontex: Context;\n    /**@internal */\n    _canvas: HTMLCanvas;\n    /**@internal */\n    _drawingToTexture: boolean;\n\n    static _SUBMITVBSIZE: number = 32000;\n\n    private static _MAXVERTNUM: number = 65535;\n\n    static MAXCLIPRECT: Rectangle = null;\n\n    static _COUNT: number = 0;\n\n    /**@internal */\n    _tmpMatrix: Matrix = new Matrix();\t\t// chrome下静态的访问比从this访问要慢\n\n    private static SEGNUM: number = 32;\n\n    private static _contextcount: number = 0;\n\n    private _drawTexToDrawTri_Vert: Float32Array = new Float32Array(8);\t\t// 从速度考虑，不做成static了\n    private _drawTexToDrawTri_Index: Uint16Array = new Uint16Array([0, 1, 2, 0, 2, 3]);\n    private _tempUV: Float32Array = new Float32Array(8);\n    private _drawTriUseAbsMatrix: boolean = false;\t//drawTriange函数的矩阵是全局的，不用再乘以当前矩阵了。这是一个补丁。\n\n    static __init__(): void {\n        Context.MAXCLIPRECT = new Rectangle(0, 0, Const.MAX_CLIP_SIZE, Const.MAX_CLIP_SIZE);\n        ContextParams.DEFAULT = new ContextParams();\n        WebGLCacheAsNormalCanvas;\n    }\n\n    /**@private */\n    drawImage(...args: any[]): void {\n    }\n\n    /**@private */\n    getImageData(...args: any[]): any {\n    }\n\n    /**@private */\n    measureText(text: string): any {\n        return null;\n    }\n\n    /**@private */\n    setTransform(...args: any[]): void {\n    }\n\n\n    /**@private */\n    $transform(a: number, b: number, c: number, d: number, tx: number, ty: number): void {\n    }\n\n    set material(value: Material) {\n        this._shader2D.material = value;\n    }\n\n    get material() {\n        return this._shader2D.material;\n    }\n\n\n    /**@private */\n    get lineJoin(): string {\n        return '';\n    }\n\n    /**@private */\n    set lineJoin(value: string) {\n    }\n\n    /**@private */\n    get lineCap(): string {\n        return '';\n    }\n\n    /**@private */\n    set lineCap(value: string) {\n    }\n\n    /**@private */\n    get miterLimit(): string {\n        return '';\n    }\n\n    /**@private */\n    set miterLimit(value: string) {\n    }\n\n    /**@private */\n    clearRect(x: number, y: number, width: number, height: number): void {\n    }\n\n    /**@internal */\n    //TODO:coverage\n    _drawRect(x: number, y: number, width: number, height: number, style: any): void {\n        style && (this.fillStyle = style);\n        this.fillRect(x, y, width, height, null);\n    }\n\n    ///**@private */\n    //public function transformByMatrix(value:Matrix):void {\n    //this.transform(value.a, value.b, value.c, value.d, value.tx, value.ty);\n    //}\n\n    /**@private */\n    //TODO:coverage\n    //public function setTransformByMatrix(value:Matrix):void {\n    //\tthis.setTransform(value.a, value.b, value.c, value.d, value.tx, value.ty);\n    //}\n\n    /**@private */\n    //TODO:coverage\n    drawTexture2(x: number, y: number, pivotX: number, pivotY: number, m: Matrix, args2: any[]): void {\n    }\n\n    //=============新增==================\n    transformByMatrix(matrix: Matrix, tx: number, ty: number): void {\n        this.transform(matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx + tx, matrix.ty + ty);\n    }\n\n    saveTransform(matrix: Matrix): void {\n        this.save();\n    }\n\n    restoreTransform(matrix: Matrix): void {\n        this.restore();\n    }\n\n    drawRect(x: number, y: number, width: number, height: number, fillColor: any, lineColor: any, lineWidth: number): void {\n        var ctx: any = this;\n\n        //填充矩形\n        if (fillColor != null) {\n            ctx.fillStyle = fillColor;\n            ctx.fillRect(x, y, width, height);\n        }\n\n        //绘制矩形边框\n        if (lineColor != null) {\n            ctx.strokeStyle = lineColor;\n            ctx.lineWidth = lineWidth;\n            ctx.strokeRect(x, y, width, height);\n        }\n    }\n\n    alpha(value: number): void {\n        this.globalAlpha *= value;\n    }\n\n    /**@internal */\n    //TODO:coverage\n    _transform(mat: Matrix, pivotX: number, pivotY: number): void {\n        this.translate(pivotX, pivotY);\n        this.transform(mat.a, mat.b, mat.c, mat.d, mat.tx, mat.ty);\n        this.translate(-pivotX, -pivotY);\n    }\n\n    /**@internal */\n    _rotate(angle: number, pivotX: number, pivotY: number): void {\n        this.translate(pivotX, pivotY);\n        this.rotate(angle);\n        this.translate(-pivotX, -pivotY);\n    }\n\n    /**@internal */\n    _scale(scaleX: number, scaleY: number, pivotX: number, pivotY: number): void {\n        this.translate(pivotX, pivotY);\n        this.scale(scaleX, scaleY);\n        this.translate(-pivotX, -pivotY);\n    }\n\n    /**@internal */\n    _drawLine(x: number, y: number, fromX: number, fromY: number, toX: number, toY: number, lineColor: string, lineWidth: number, vid: number): void {\n        this.beginPath();\n        this.strokeStyle = lineColor;\n        this.lineWidth = lineWidth;\n        this.moveTo(x + fromX, y + fromY);\n        this.lineTo(x + toX, y + toY);\n        this.stroke();\n    }\n\n    /**@internal */\n    _drawLines(x: number, y: number, points: any[], lineColor: any, lineWidth: number, vid: number): void {\n        this.beginPath();\n        //x += args[0], y += args[1];\n        this.strokeStyle = lineColor;\n        this.lineWidth = lineWidth;\n        //var points:Array = args[2];\n        this.addPath(points.slice(), false, false, x, y);\n        this.stroke();\n    }\n\n    drawCurves(x: number, y: number, points: any[], lineColor: any, lineWidth: number): void {\n        this.beginPath();\n        this.strokeStyle = lineColor;\n        this.lineWidth = lineWidth;\n        //var points:Array = args[2];\n        //x += args[0], y += args[1];\n        this.moveTo(x + points[0], y + points[1]);\n        var i: number = 2, n: number = points.length;\n        while (i < n) {\n            this.quadraticCurveTo(x + points[i++], y + points[i++], x + points[i++], y + points[i++]);\n        }\n        this.stroke();\n    }\n\n    private _fillAndStroke(fillColor: string, strokeColor: string, lineWidth: number, isConvexPolygon: boolean = false): void {\n        //绘制填充区域\n        if (fillColor != null) {\n            this.fillStyle = fillColor;\n            this.fill();\n        }\n\n        //绘制边框\n        if (strokeColor != null && lineWidth > 0) {\n            this.strokeStyle = strokeColor;\n            this.lineWidth = lineWidth;\n            this.stroke();\n        }\n    }\n    /**Math.PI*2的结果缓存 */\n    static PI2: number = 2 * Math.PI;\n    /**@internal */\n    _drawCircle(x: number, y: number, radius: number, fillColor: any, lineColor: any, lineWidth: number, vid: number): void {\n        this.beginPath(true);\n        this.arc(x, y, radius, radius, 0, Context.PI2, false, true, 40);\n        this.closePath();\n        //绘制\n        this._fillAndStroke(fillColor, lineColor, lineWidth);\n    }\n    /**@internal */\n    _drawEllipse(x: number, y: number, width: number, height: number, fillColor: any, lineColor: any, lineWidth: number) {\n        this.beginPath(true);\n        this.arc(x, y, width, height, 0, Context.PI2, false, true, 40);\n        this.closePath();\n        this._fillAndStroke(fillColor, lineColor, lineWidth);\n    }\n    /**Math.PI*0.5的结果缓存 */\n    static HPI = Math.PI * 0.5;\n    /**@internal */\n    _drawRoundRect(x: number, y: number, width: number, height: number, lt: number, rt: number, lb: number, rb: number, fillColor: any, lineColor: any, lineWidth: number) {\n        this.beginPath(true);\n        var tPath = this._getPath();\n        if (0 >= lt) {\n            tPath.addPoint(x, y);\n        } else {\n            this.arc(x + lt, y + lt, lt, lt, Math.PI, Math.PI + Context.HPI);\n        }\n        let startX = x + width - rt;\n        if (0 >= rt) {\n            tPath.addPoint(startX, y);\n        } else {\n            this.arc(startX, y + rt, rt, rt, Math.PI + Context.HPI, Context.PI2);\n        }\n        startX = x + width - rb;\n        let startY = y + height - rb;\n        if (0 >= rb) {\n            tPath.addPoint(startX, startY);\n        } else {\n            this.arc(startX, startY, rb, rb, 0, Context.HPI);\n        }\n        startX = x + lb;\n        startY = y + height - lb;\n        if (0 >= lb) {\n            tPath.addPoint(startX, startY);\n        } else {\n            this.arc(startX, startY, lb, lb, Math.PI - Context.HPI, Math.PI);\n        }\n        tPath.addPoint(x, y + lt);\n        this.closePath();\n        this._fillAndStroke(fillColor, lineColor, lineWidth);\n    }\n\n    //矢量方法\t\n    /**@internal */\n    _drawPie(x: number, y: number, radius: number, startAngle: number, endAngle: number, fillColor: any, lineColor: any, lineWidth: number, vid: number): void {\n        //移动中心点\n        //ctx.translate(x + args[0], y + args[1]);\n        //形成路径\n        this.beginPath();\n        this.moveTo(x, y);\n        this.arc(x, y, radius, radius, startAngle, endAngle);\n        this.closePath();\n        //绘制\n        this._fillAndStroke(fillColor, lineColor, lineWidth);\n        //恢复中心点\n        //ctx.translate(-x - args[0], -y - args[1]);\n    }\n\n    /**@internal */\n    _drawPoly(x: number, y: number, points: any[], fillColor: any, lineColor: any, lineWidth: number, isConvexPolygon: boolean, vid: number): void {\n        //var points:Array = args[2];\n        this.beginPath();\n        //poly一定是close的\n        this.addPath(points.slice(), true, isConvexPolygon, x, y);\n        this.closePath();\n        this._fillAndStroke(fillColor, lineColor, lineWidth, isConvexPolygon);\n    }\n\n    /**@internal */\n    _drawPath(x: number, y: number, paths: any[], brush: any, pen: any): void {\n        //形成路径\n        this.beginPath();\n        //x += args[0], y += args[1];\n\n        //var paths:Array = args[2];\n        for (var i: number = 0, n: number = paths.length; i < n; i++) {\n\n            var path: any[] = paths[i];\n            switch (path[0]) {\n                case \"moveTo\":\n                    this.moveTo(x + path[1], y + path[2]);\n                    break;\n                case \"lineTo\":\n                    this.lineTo(x + path[1], y + path[2]);\n                    break;\n                case \"arcTo\":\n                    this.arcTo(x + path[1], y + path[2], x + path[3], y + path[4], path[5]);\n                    break;\n                case \"closePath\":\n                    this.closePath();\n                    break;\n            }\n        }\n\n        //var brush:Object = args[3];\n        if (brush != null) {\n            this.fillStyle = brush.fillStyle;\n            this.fill();\n        }\n\n        //var pen:Object = args[4];\n        if (pen != null) {\n            this.strokeStyle = pen.strokeStyle;\n            this.lineWidth = pen.lineWidth || 1;\n            this.lineJoin = pen.lineJoin;\n            this.lineCap = pen.lineCap;\n            this.miterLimit = pen.miterLimit;\n            this.stroke();\n        }\n    }\n\n    static const2DRenderCMD: RenderStateCommand;\n    static set2DRenderConfig(): void {\n\n        if (!Context.const2DRenderCMD) {\n            const cmd = Context.const2DRenderCMD = LayaGL.renderEngine.createRenderStateComand();\n            if (cmd) {\n                cmd.addCMD(RenderStateType.BlendType, true);\n                //WebGLContext.setBlendEquation(gl, gl.FUNC_ADD);\n                cmd.addCMD(RenderStateType.BlendEquation, BlendEquationSeparate.ADD);\n                BlendMode.activeBlendFunction = null;// 防止submit不设置blend\n                //WebGLContext.setBlendFunc(gl, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n                cmd.addCMD(RenderStateType.BlendFunc, [BlendFactor.One, BlendFactor.OneMinusSourceAlpha]);\n                //WebGLContext.setDepthTest(gl, false);\n                cmd.addCMD(RenderStateType.DepthTest, false);\n                //WebGLContext.setDepthMask(gl, true);\n                cmd.addCMD(RenderStateType.DepthMask, true);\n                //WebGLContext.setCullFace(gl, false);\n                cmd.addCMD(RenderStateType.CullFace, false);\n                //WebGLContext.setFrontFace(gl, gl.CCW);\n                cmd.addCMD(RenderStateType.FrontFace, CullMode.Front);\n            }\n        }\n        Context.const2DRenderCMD && Context.const2DRenderCMD.applyCMD();\n        RenderTexture.currentActive && RenderTexture.currentActive._end();\n        // WebGLContext.setBlend(gl, true);//还原2D设置\n        // WebGLContext.setBlendEquation(gl, gl.FUNC_ADD);\n        // BlendMode.activeBlendFunction = null;// 防止submit不设置blend\n        // WebGLContext.setBlendFunc(gl, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n        // WebGLContext.setDepthTest(gl, false);\n        // WebGLContext.setDepthMask(gl, true);\n        // WebGLContext.setCullFace(gl, false);\n        // WebGLContext.setFrontFace(gl, gl.CCW);\n        RenderTexture2D.currentActive && RenderTexture2D.currentActive.end();\n        LayaGL.renderEngine.viewport(0, 0, RenderState2D.width, RenderState2D.height);//还原2D视口\n        LayaGL.renderEngine.scissorTest(true);\n        LayaGL.renderEngine.scissor(0, 0, RenderState2D.width, RenderState2D.height);\n    }\n\n    /**@internal */\n    _id: number = ++Context._COUNT;\n\n    private _other: ContextParams | null = null;\n    private _renderNextSubmitIndex: number = 0;\n\n    private _path: Path | null = null;\n    /**@internal */\n    _drawCount: number = 1;\n    private _width: number = Const.MAX_CLIP_SIZE;\n    private _height: number = Const.MAX_CLIP_SIZE;\n    private _renderCount: number = 0;\n    /**@internal */\n    _submits: any = null;\n    /**@internal */\n    _curSubmit: any = null;\n    /**@internal */\n    _submitKey: SubmitKey = new SubmitKey();\t//当前将要使用的设置。用来跟上一次的_curSubmit比较\n\n    /**@internal */\n    _mesh: MeshQuadTexture;\t\t\t//用Mesh2D代替_vb,_ib. 当前使用的mesh\n    /**@internal */\n    _pathMesh: MeshVG | null = null;\t\t\t//矢量专用mesh。\n    /**@internal */\n    _triangleMesh: MeshTexture | null = null;\t//drawTriangles专用mesh。由于ib不固定，所以不能与_mesh通用\n\n    meshlist: any[] = [];\t//本context用到的mesh\n\n    //public var _vbs:Array = [];\t//双buffer管理。TODO 临时删掉，需要mesh中加上\n    private _transedPoints: any[] = new Array(8);\t//临时的数组，用来计算4个顶点的转换后的位置。\n    private _temp4Points: any[] = new Array(8);\t\t//临时数组。用来保存4个顶点的位置。\n\n    /**@internal */\n    _clipRect: Rectangle = Context.MAXCLIPRECT;\n    //public var _transedClipInfo:Array = [0, 0, Const.MAX_CLIP_SIZE, 0, 0, Const.MAX_CLIP_SIZE];\t//应用矩阵后的clip。ox,oy, xx,xy,yx,yy \txx,xy等是缩放*宽高\n    /**@internal */\n    _globalClipMatrix: Matrix = defaultClipMatrix.clone();\t//用矩阵描述的clip信息。最终的点投影到这个矩阵上，在0~1之间就可见。\n    /**@internal */\n    _clipInCache: boolean = false; \t// 当前记录的clipinfo是在cacheas normal后赋值的，因为cacheas normal会去掉当前矩阵的tx，ty，所以需要记录一下，以便在是shader中恢复\n    /**@internal */\n    _clipInfoID: number = 0;\t\t\t\t\t//用来区分是不是clipinfo已经改变了\n    private _clipID_Gen: number = 0;\t\t\t//生成clipid的，原来是  _clipInfoID=++_clipInfoID 这样会有问题，导致兄弟clip的id都相同\n    /**@internal */\n    _curMat: Matrix;\n\n    //计算矩阵缩放的缓存\n    /**@internal */\n    _lastMatScaleX: number = 1.0;\n    /**@internal */\n    _lastMatScaleY: number = 1.0;\n    private _lastMat_a: number = 1.0;\n    private _lastMat_b: number = 0.0;\n    private _lastMat_c: number = 0.0;\n    private _lastMat_d: number = 1.0;\n    /**@internal */\n    _nBlendType: number = 0;\n    /**@internal */\n    _save: ISaveData[] & { _length?: number } = null;\n    /**@internal */\n    _targets: RenderTexture2D | null = null;\n    /**@internal */\n    _charSubmitCache: CharSubmitCache | null = null;\n    /**@internal */\n    _saveMark: SaveMark | null = null;\n    /**@internal */\n    _shader2D: Shader2D = new Shader2D();\t//\n\n    /**\n     * 所cacheAs精灵\n     * 对于cacheas bitmap的情况，如果图片还没准备好，需要有机会重画，所以要保存sprite。例如在图片\n     * 加载完成后，调用repaint\n     */\n    sprite: Sprite | null = null;\n\n    /**@internal */\n    public static _textRender: TextRender | null = null;// new TextRender();\n    /**@internal */\n    _italicDeg: number = 0;//文字的倾斜角度\n    /**@internal */\n    _lastTex: Texture | null = null; //上次使用的texture。主要是给fillrect用，假装自己也是一个drawtexture\n\n    private _fillColor: number = 0;\n    private _flushCnt: number = 0;\n\n    private defTexture: Texture | null = null;\t//给fillrect用\n    /**@internal */\n    _colorFiler: ColorFilter | null = null;\n\n    drawTexAlign: boolean = false;\t\t// 按照像素对齐\n    /**@internal */\n    _incache: boolean = false;\t\t\t// 正处在cacheas normal过程中\n\n    isMain: boolean = false;\t\t\t\t// 是否是主context\n\n    clearColor: Color = new Color();\n\n    constructor() {\n        Context._contextcount++;\n        Context._textRender = Context._textRender || new TextRender();\n        //_ib = IndexBuffer2D.QuadrangleIB;\n        if (!this.defTexture) {\n            var defTex2d: Texture2D = new Texture2D(2, 2, TextureFormat.R8G8B8A8, true, false, false);\n            defTex2d.setPixelsData(new Uint8Array(16), false, false);\n            defTex2d.lock = true;\n            this.defTexture = new Texture(defTex2d);\n        }\n        this._lastTex = this.defTexture;\n        this.clear();\n    }\n\n    clearBG(r: number, g: number, b: number, a: number): void {\n        // var gl: WebGLRenderingContext = RenderStateContext.mainContext;\n        this.clearColor.r = r;\n        this.clearColor.g = g;\n        this.clearColor.b = b;\n        this.clearColor.a = a;\n        LayaGL.renderEngine.clearRenderTexture(RenderClearFlag.Color, this.clearColor, 1);\n    }\n\n    //TODO:coverage\n    /**@internal */\n    _getSubmits(): any[] {\n        return this._submits;\n    }\n\n    /**\n     * 释放占用内存\n     * @param\tkeepRT  是否保留rendertarget\n     */\n    private _releaseMem(keepRT: boolean = false): void {\n        if (!this._submits)\n            return;\n\n        this._curMat && this._curMat.destroy();\n        //@ts-ignore\n        this._curMat = null;\n        this._shader2D.destroy();\n        //@ts-ignore\n        this._shader2D = null;\n        //@ts-ignore\n        this._charSubmitCache.clear();\n\n        for (var i: number = 0, n: number = this._submits._length; i < n; i++) {\n            this._submits[i].releaseRender();\n        }\n        this._submits.length = 0;\n        this._submits._length = 0;\n        this._submits = null;\n        this._curSubmit = SubmitBase.RENDERBASE;\n\n        this._path = null;\n        //_other && (_other.font = null);\n        this._save = null;\n\n        var sz: number;\n        for (i = 0, sz = this.meshlist.length; i < sz; i++) {\n            var curm: Mesh2D = this.meshlist[i];\n            curm.destroy();\n        }\n        this.meshlist.length = 0;\n\n        this.sprite = null;\n        if (!keepRT) {\n            this._targets && (this._targets.destroy());\n            this._targets = null;\n        }\n        //TODO mesh 暂时releaseMem了\n    }\n\n    /**\n     * 释放所有资源\n     * @param\tkeepRT  是否保留rendertarget\n     */\n    destroy(keepRT: boolean = false): void {\n        --Context._contextcount;\n        this.sprite = null;\n        this._releaseMem(keepRT);\n        this._charSubmitCache && this._charSubmitCache.destroy();\n        //_ib && (_ib != IndexBuffer2D.QuadrangleIB) && _ib.releaseResource();\n        this._mesh.destroy();\n        if (!keepRT) {\n            this._targets && this._targets.destroy();//用回收么？可能没什么重复利用的价值\n            this._targets = null;\n        }\n        if (this.defTexture) {\n            this.defTexture.bitmap && this.defTexture.bitmap.destroy();\n            this.defTexture.destroy();\n        }\n\n    }\n\n    clear(): void {\n        if (!this._submits) {//第一次\n            this._other = ContextParams.DEFAULT;\n            this._curMat = Matrix.create();\n            this._charSubmitCache = new CharSubmitCache();\n            //_vb = _vbs[0] = VertexBuffer2D.create( -1);\n            this._mesh = MeshQuadTexture.getAMesh(this.isMain);\n            this.meshlist.push(this._mesh);\n            this._pathMesh = MeshVG.getAMesh(this.isMain);\n            this.meshlist.push(this._pathMesh);\n            this._triangleMesh = MeshTexture.getAMesh(this.isMain);\n            this.meshlist.push(this._triangleMesh);\n            //if(Config.smartCache) _vbs[1] = VertexBuffer2D.create( -1);\n            this._submits = [];\n            this._save = [SaveMark.Create(this)];\n            this._save.length = 10;\n            this._shader2D = new Shader2D();\n        }\n\n        this._submitKey.clear();\n\n        //_vb = _vbs[_renderCount%2];\n        //_vb.clear();\n        this._mesh.clearVB();\n\n        //_targets && (_targets.repaint = true);\n\n        this._drawCount = 1;\n\n        this._other = ContextParams.DEFAULT;\n        this._other.lineWidth = this._shader2D.ALPHA = 1.0;\n\n        this._nBlendType = 0;\n\n        this._clipRect = Context.MAXCLIPRECT;\n\n        this._curSubmit = SubmitBase.RENDERBASE;\n        SubmitBase.RENDERBASE._ref = 0xFFFFFF;\n        SubmitBase.RENDERBASE._numEle = 0;\n\n        this._shader2D.fillStyle = this._shader2D.strokeStyle = DrawStyle.DEFAULT;\n\n        for (let i = 0, n = this._submits._length; i < n; i++)\n            this._submits[i].releaseRender();\n\n        this._submits._length = 0;\n\n        this._curMat.identity();\n        this._other.clear();\n\n        this._saveMark = <SaveMark>this._save[0];\n        this._save._length = 1;\n    }\n\n    /**\n     * 设置ctx的size，这个不允许直接设置，必须是canvas调过来的。所以这个函数里也不用考虑canvas相关的东西\n     * @param\tw\n     * @param\th\n     */\n    size(w: number, h: number): void {\n        if (this._width != w || this._height != h) {\n            this._width = w;\n            this._height = h;\n            //TODO 问题：如果是rendertarget 计算内存会有问题，即canvas算一次，rt又算一次,所以这里要修改\n            //这种情况下canvas应该不占内存\n            if (this._targets) {\n                this._targets.destroy();\n                this._targets = new RenderTexture2D(w, h, RenderTargetFormat.R8G8B8A8, -1);\n            }\n            //如果是主画布，要记录窗口大小\n            //如果不是 TODO\n            if (this.isMain) {\n                LayaGL.renderEngine.viewport(0, 0, w, h);\n                LayaGL.renderEngine.scissor(0, 0, w, h);\n                RenderState2D.width = w;\n                RenderState2D.height = h;\n            }\n        }\n        if (w === 0 && h === 0) this._releaseMem();\n    }\n\n    /**\n     * 当前canvas请求保存渲染结果。\n     * 实现：\n     * 如果value==true，就要给_target赋值\n     * @param value {Boolean} \n     */\n    set asBitmap(value: boolean) {\n        if (value) {\n            //缺省的RGB没有a，不合理把。况且没必要自定义一个常量。\n            //深度格式为-1表示不用深度缓存。\n            let rt = this._targets;\n            if (!this._width || !this._height)\n                throw Error(\"asBitmap no size!\");\n            if (!rt || rt.width != this._width || rt.height != this._height) {\n                if (rt) {\n                    rt.destroy();\n                }\n                this._targets = new RenderTexture2D(this._width, this._height, RenderTargetFormat.R8G8B8A8);\n            }\n        } else {\n            this._targets && this._targets.destroy();\n            this._targets = null;\n        }\n    }\n\n    /**\n     * 获得当前矩阵的缩放值\n     * 避免每次都计算getScaleX\n     * @return\n     */\n    getMatScaleX(): number {\n        if (this._lastMat_a == this._curMat.a && this._lastMat_b == this._curMat.b)\n            return this._lastMatScaleX;\n        this._lastMatScaleX = this._curMat.getScaleX();\n        this._lastMat_a = this._curMat.a;\n        this._lastMat_b = this._curMat.b;\n        return this._lastMatScaleX;\n    }\n\n    getMatScaleY(): number {\n        if (this._lastMat_c == this._curMat.c && this._lastMat_d == this._curMat.d)\n            return this._lastMatScaleY;\n        this._lastMatScaleY = this._curMat.getScaleY();\n        this._lastMat_c = this._curMat.c;\n        this._lastMat_d = this._curMat.d;\n        return this._lastMatScaleY;\n    }\n\n    getFillColor(): number {\n        return this._fillColor;\n    }\n\n    set fillStyle(value: any) {\n        if (!this._shader2D.fillStyle.equal(value)) {\n            SaveBase.save(this, SaveBase.TYPE_FILESTYLE, this._shader2D, false);\n            this._shader2D.fillStyle = DrawStyle.create(value);\n            this._submitKey.other = -this._shader2D.fillStyle.toInt();\n        }\n    }\n\n    get fillStyle(): any {\n        return this._shader2D.fillStyle;\n    }\n\n    set globalAlpha(value: number) {\n        value = Math.floor(value * 1000) / 1000;\n        if (value != this._shader2D.ALPHA) {\n            SaveBase.save(this, SaveBase.TYPE_ALPHA, this._shader2D, false);\n            this._shader2D.ALPHA = value;\n        }\n    }\n\n    get globalAlpha(): number {\n        return this._shader2D.ALPHA;\n    }\n\n    set textAlign(value: string) {\n        (this._other.textAlign === value) || (this._other = this._other.make(), SaveBase.save(this, SaveBase.TYPE_TEXTALIGN, this._other, false), this._other.textAlign = value);\n    }\n\n    get textAlign(): string {\n        return this._other.textAlign;\n    }\n\n    set textBaseline(value: string) {\n        (this._other.textBaseline === value) || (this._other = this._other.make(), SaveBase.save(this, SaveBase.TYPE_TEXTBASELINE, this._other, false), this._other.textBaseline = value);\n    }\n\n    get textBaseline(): string {\n        return this._other.textBaseline;\n    }\n\n    set globalCompositeOperation(value: string) {\n        var n = BlendMode.TOINT[value];\n        n == null || (this._nBlendType === n) || (SaveBase.save(this, SaveBase.TYPE_GLOBALCOMPOSITEOPERATION, this, true), this._curSubmit = SubmitBase.RENDERBASE, this._nBlendType = n /*, _shader2D.ALPHA = 1*/);\n    }\n\n    get globalCompositeOperation(): string {\n        return BlendMode.NAMES[this._nBlendType];\n    }\n\n    set strokeStyle(value: any) {\n        this._shader2D.strokeStyle.equal(value) || (SaveBase.save(this, SaveBase.TYPE_STROKESTYLE, this._shader2D, false), this._shader2D.strokeStyle = DrawStyle.create(value), this._submitKey.other = -this._shader2D.strokeStyle.toInt());\n    }\n\n    get strokeStyle(): any {\n        return this._shader2D.strokeStyle;\n    }\n\n    translate(x: number, y: number): void {\n        if (x !== 0 || y !== 0) {\n            SaveTranslate.save(this);\n            if (this._curMat._bTransform) {\n                SaveTransform.save(this);\n                //_curMat.transformPointN(Point.TEMP.setTo(x, y));\n                //x = Point.TEMP.x;\n                //y = Point.TEMP.y;\n                //translate的话，相当于在当前坐标系下移动x,y，所以直接修改_curMat,然后x,y就消失了。\n                this._curMat.tx += (x * this._curMat.a + y * this._curMat.c);\n                this._curMat.ty += (x * this._curMat.b + y * this._curMat.d);\n            } else {\n                this._curMat.tx = x;\n                this._curMat.ty = y;\n            }\n        }\n    }\n\n    set lineWidth(value: number) {\n        (this._other.lineWidth === value) || (this._other = this._other.make(), SaveBase.save(this, SaveBase.TYPE_LINEWIDTH, this._other, false), this._other.lineWidth = value);\n    }\n\n    get lineWidth(): number {\n        return this._other.lineWidth;\n    }\n\n    save(): void {\n        this._save[this._save._length++] = SaveMark.Create(this);\n    }\n\n    restore(): void {\n        var sz: number = this._save._length;\n        var lastBlend: number = this._nBlendType;\n        if (sz < 1)\n            return;\n        for (var i: number = sz - 1; i >= 0; i--) {\n            var o: ISaveData = this._save[i];\n            o.restore(this);\n            if (o.isSaveMark()) {\n                this._save._length = i;\n                return;\n            }\n        }\n        if (lastBlend != this._nBlendType) {\n            //阻止合并\n            this._curSubmit = SubmitBase.RENDERBASE;\n        }\n    }\n\n    set font(str: string) {\n        //if (str == _other.font.toString())\n        //\treturn;\n        this._other = this._other.make();\n        SaveBase.save(this, SaveBase.TYPE_FONT, this._other, false);\n        //_other.font === FontInContext.EMPTY ? (_other.font = new FontInContext(str)) : (_other.font.setFont(str));\n    }\n\n    fillText(txt: string | WordText, x: number, y: number, fontStr: string, color: string, align: string, lineWidth: number = 0, borderColor: string = \"\"): void {\n        Context._textRender!.filltext(this, txt, x, y, fontStr, color, borderColor, lineWidth, align);\n    }\n    // 与fillText的区别是没有border信息\n    drawText(text: string | WordText, x: number, y: number, font: string, color: string, textAlign: string): void {\n        Context._textRender!.filltext(this, text, x, y, font, color, null, 0, textAlign);\n    }\n    strokeWord(text: string | WordText, x: number, y: number, font: string, color: string, lineWidth: number, textAlign: string): void {\n        Context._textRender!.filltext(this, text, x, y, font, null, color, lineWidth, textAlign);\n    }\n    fillBorderText(txt: string | WordText, x: number, y: number, font: string, color: string, borderColor: string, lineWidth: number, textAlign: string): void {\n        Context._textRender!.filltext(this, txt, x, y, font, color, borderColor, lineWidth, textAlign);\n    }\n\n    /**@internal */\n    _fast_filltext(data: string | WordText, x: number, y: number, fontObj: FontInfo, color: string, strokeColor: string | null, lineWidth: number, textAlign: number): void {\n        Context._textRender!._fast_filltext(this, data, x, y, fontObj, color, strokeColor, lineWidth, textAlign);\n    }\n\n    filltext11(data: string | WordText, x: number, y: number, fontStr: string, color: string, strokeColor: string, lineWidth: number, textAlign: string): void {\n        Context._textRender!.filltext(this, data, x, y, fontStr, color, strokeColor, lineWidth, textAlign);\n    }\n\n    private _fillRect(x: number, y: number, width: number, height: number, rgba: number): void {\n        var submit: Submit = this._curSubmit;\n        var sameKey = submit._key.submitType === SubmitBase.KEY_DRAWTEXTURE && \n                        submit._key.blendShader === this._nBlendType &&\n                        this.isSameClipInfo(submit) &&\n                        this._curSubmit.material==this.material\n                ;\n        if (this._mesh.vertNum + 4 > Context._MAXVERTNUM) {\n            this._mesh = MeshQuadTexture.getAMesh(this.isMain);//创建新的mesh  TODO 如果_mesh不是常见格式，这里就不能这么做了。以后把_mesh单独表示成常用模式 \n            this.meshlist.push(this._mesh);\n            sameKey = false;\n        }\n\n        this.transformQuad(x, y, width, height, 0, this._curMat, this._transedPoints);\n        if (!this.clipedOff(this._transedPoints)) {\n            this._mesh.addQuad(this._transedPoints, Texture.NO_UV, rgba, false);\n            //if (GlUtils.fillRectImgVb(_mesh._vb, _clipRect, x, y, width, height, Texture.DEF_UV, _curMat, rgba,this)){\n            if (!sameKey) {\n                submit = this._curSubmit = SubmitTexture.create(this, this._mesh, Value2D.create(RenderSpriteData.Texture2D));\n                this._submits[this._submits._length++] = submit;\n                this._copyClipInfo(submit, this._globalClipMatrix);\n                if (!this._lastTex || this._lastTex.destroyed) {\n                    submit.shaderValue.textureHost = this.defTexture;\n                } else {\n                    submit.shaderValue.textureHost = this._lastTex;\n                }\n                //这里有一个问题。例如 clip1, drawTex(tex1), clip2, fillRect, drawTex(tex2)\t会被分成3个submit，\n                //submit._key.copyFrom2(_submitKey, SubmitBase.KEY_DRAWTEXTURE, (_lastTex && _lastTex.bitmap)?_lastTex.bitmap.id: -1);\n                submit._key.other = (this._lastTex && this._lastTex.bitmap) ? (this._lastTex.bitmap as Texture2D).id : -1\n                submit._renderType = SubmitBase.TYPE_TEXTURE;\n            }\n            this._curSubmit._numEle += 6;\n            this._mesh.indexNum += 6;\n            this._mesh.vertNum += 4;\n        }\n    }\n\n    fillRect(x: number, y: number, width: number, height: number, fillStyle: any): void {\n        var drawstyle: DrawStyle = fillStyle ? DrawStyle.create(fillStyle) : this._shader2D.fillStyle;\n        //var rgb = drawstyle.toInt() ;\n        //由于显卡的格式是 rgba，所以需要处理一下\n        //var rgba:uint = ((rgb & 0xff0000) >> 16) | (rgb & 0x00ff00) | ((rgb & 0xff) << 16) | (_shader2D.ALPHA * 255) << 24;\n        var rgba: number = this.mixRGBandAlpha(drawstyle.toInt());\n        this._fillRect(x, y, width, height, rgba);\n    }\n\n    //TODO:coverage\n    fillTexture(texture: Texture, x: number, y: number, width: number, height: number, type: string, offset: Point, color: number): void {\n        //test\n        /*\n        var aa = 95 / 274, bb = 136 / 341, cc = (95 + 41) / 274, dd = (136 + 48) / 341;\n        texture.uv = [aa,bb, cc,bb, cc,dd, aa,dd];\n        texture.width = 41;\n        texture.height = 48;\n        */\n        //test\n\n        if (!texture._getSource()) {\n            this.sprite && ILaya.systemTimer.callLater(this, this._repaintSprite);\n            return;\n        }\n        this._fillTexture(texture, texture.width, texture.height, texture.uvrect, x, y, width, height, type, offset.x, offset.y, color);\n    }\n\n    /**@internal */\n    _fillTexture(texture: Texture, texw: number, texh: number, texuvRect: number[], x: number, y: number, width: number, height: number, type: string, offsetx: number, offsety: number, color: number): void {\n        var submit: Submit = this._curSubmit;\n        if (this._mesh.vertNum + 4 > Context._MAXVERTNUM) {\n            this._mesh = MeshQuadTexture.getAMesh(this.isMain);\n            this.meshlist.push(this._mesh);\n        }\n\n        //filltexture相关逻辑。计算rect大小以及对应的uv\n        var repeatx: boolean = true;\n        var repeaty: boolean = true;\n        switch (type) {\n            case \"repeat\": break;\n            case \"repeat-x\": repeaty = false; break;\n            case \"repeat-y\": repeatx = false; break;\n            case \"no-repeat\": repeatx = repeaty = false; break;\n            default: break;\n        }\n        //用 _temp4Points 来存计算出来的顶点的uv。这里的uv用0到1表示纹理的uv区域。这样便于计算，直到shader中才真的转成了实际uv\n        var uv: any[] = this._temp4Points;\n        var stu: number = 0; //uv起点\n        var stv: number = 0;\n        var stx: number = 0, sty: number = 0, edx: number = 0, edy: number = 0;\n        if (offsetx < 0) {\n            stx = x;\n            stu = (-offsetx % texw) / texw;//有偏移的情况下的u不是从头开始\n        } else {\n            stx = x + offsetx;\n        }\n        if (offsety < 0) {\n            sty = y;\n            stv = (-offsety % texh) / texh;//有偏移的情况下的v不是从头开始\n        } else {\n            sty = y + offsety;\n        }\n\n        edx = x + width;\n        edy = y + height;\n        (!repeatx) && (edx = Math.min(edx, x + offsetx + texw));//x不重复的话，最多只画一个\n        (!repeaty) && (edy = Math.min(edy, y + offsety + texh));//y不重复的话，最多只画一个\n        if (edx < x || edy < y)\n            return;\n        if (stx > edx || sty > edy)\n            return;\n\n        //计算最大uv\n        var edu: number = (edx - x - offsetx) / texw;\n        var edv: number = (edy - y - offsety) / texh;\n\n        this.transformQuad(stx, sty, edx - stx, edy - sty, 0, this._curMat, this._transedPoints);\n        //四个点对应的uv。必须在transformQuad后面，因为共用了_temp4Points\n        uv[0] = stu; uv[1] = stv; uv[2] = edu; uv[3] = stv; uv[4] = edu; uv[5] = edv; uv[6] = stu; uv[7] = edv;\n        if (!this.clipedOff(this._transedPoints)) {\n            //不依赖于wrapmode了，都走filltexture流程，自己修改纹理坐标\n            //tex2d.wrapModeU = BaseTexture.WRAPMODE_REPEAT;\t//这里会有重复判断\n            //tex2d.wrapModeV = BaseTexture.WRAPMODE_REPEAT;\n            //var rgba:int = mixRGBandAlpha(0xffffffff);\n            //rgba = _mixRGBandAlpha(rgba, alpha);\t这个函数有问题，不能连续调用，输出作为输入\n            var rgba: number = this._mixRGBandAlpha(color, this._shader2D.ALPHA);\n\n            this._mesh.addQuad(this._transedPoints, uv, rgba, true);\n\n            var sv = Value2D.create(RenderSpriteData.Texture2D) as TextureSV;\n            //这个优化先不要了，因为没太弄明白wrapmode的设置，总是不起作用。\n            //if(texture.uvrect[2]<1.0||texture.uvrect[3]<1.0)//这表示是大图集中的一部分，只有这时候才用特殊shader\n            sv.defines.addDefine(ShaderDefines2D.FILLTEXTURE);\n            var arry = texuvRect.concat();\n            Vector4.tempVec4.setValue(arry[0], arry[1], arry[2], arry[3]);\n            sv.u_TexRange = Vector4.tempVec4;\n            submit = this._curSubmit = SubmitTexture.create(this, this._mesh, sv);\n            this._submits[this._submits._length++] = submit;\n            this._copyClipInfo(submit, this._globalClipMatrix);\n            submit.shaderValue.textureHost = texture;\n            submit._renderType = SubmitBase.TYPE_TEXTURE;\n            this._curSubmit._numEle += 6;\n            this._mesh.indexNum += 6;\n            this._mesh.vertNum += 4;\n        }\n        this.breakNextMerge();\t//暂不合并\n    }\n\n\n    /**\n     * 反正只支持一种filter，就不要叫setFilter了，直接叫setColorFilter\n     * @param\tvalue\n     */\n    setColorFilter(filter: ColorFilter): void {\n        SaveBase.save(this, SaveBase.TYPE_COLORFILTER, this, true);\n        //_shader2D.filters = value;\n        this._colorFiler = filter;\n        this._curSubmit = SubmitBase.RENDERBASE;\n        //_reCalculateBlendShader();\n    }\n\n    drawTexture(tex: Texture, x: number, y: number, width: number, height: number, color: number = 0xffffffff): void {\n        this._drawTextureM(tex, x, y, width, height, null, 1, null, color);\n    }\n\n    drawTextures(tex: Texture, pos: ArrayLike<number>, tx: number, ty: number, colors: number[]): void {\n        if (!tex._getSource()) //source内调用tex.active();\n        {\n            this.sprite && ILaya.systemTimer.callLater(this, this._repaintSprite);\n            return;\n        }\n\n        //TODO 还没实现\n        var n: number = pos.length / 2;\n        var ipos: number = 0;\n        var bmpid: number = (tex.bitmap as Texture2D).id;\n        for (var i: number = 0; i < n; i++) {\n            const color = typeof colors[i] === 'number' ? colors[i] : 0xffffffff;\n            this._inner_drawTexture(tex, bmpid, pos[ipos++] + tx, pos[ipos++] + ty, 0, 0, null, null, 1.0, false, color);\n        }\n    }\n\n    /**@internal */\n    _drawTextureM(tex: Texture, x: number, y: number, width: number, height: number, m: Matrix, alpha: number, uv: any[] | null, color: number): boolean {\n        // 注意sprite要保存，因为后面会被冲掉\n        var cs = this.sprite;\n        if (!tex._getSource(function (): void {\n            if (cs) {\n                cs.repaint();\t// 原来是calllater，callater对于cacheas normal是没有机会执行的\n            }\n        })) { //source内调用tex.active();\n            return false;\n        }\n        return this._inner_drawTexture(tex, (tex.bitmap as Texture2D).id, x, y, width, height, m, uv, alpha, false, color);\n    }\n\n    /**@internal */\n    _drawRenderTexture(tex: RenderTexture2D, x: number, y: number, width: number, height: number, m: Matrix, alpha: number, uv: any[], color: number = 0xffffffff): boolean {\n        return this._inner_drawTexture((<Texture>(tex as any)), -1, x, y, width, height, m, uv, alpha, false, color);\n    }\n\n    //TODO:coverage\n    submitDebugger(): void {\n        this._submits[this._submits._length++] = SubmitCMD.create([], function (): void { debugger; }, this);\n    }\n\n    /*\n    private function copyClipInfo(submit:Submit, clipInfo:Array):void {\n        var cd:Array = submit.shaderValue.clipDir;\n        cd[0] = clipInfo[2]; cd[1] = clipInfo[3]; cd[2] = clipInfo[4]; cd[3] = clipInfo[5];\n        var cp:Array = submit.shaderValue.clipRect;\n        cp[0] = clipInfo[0]; cp[1] = clipInfo[1];\n        submit.clipInfoID = this._clipInfoID;\n    }\n    */\n    /**@internal */\n    _copyClipInfo(submit: SubmitBase, clipInfo: Matrix): void {\n        var cm: Vector4 = submit.shaderValue.clipMatDir;\n        cm.x = clipInfo.a; cm.y = clipInfo.b; cm.z = clipInfo.c; cm.w = clipInfo.d;\n        submit.shaderValue.clipMatDir = cm;\n        var cmp: Vector2 = submit.shaderValue.clipMatPos;\n        cmp.x = clipInfo.tx; cmp.y = clipInfo.ty;\n        submit.shaderValue.clipMatPos = cmp;\n        submit.clipInfoID = this._clipInfoID;\n\n        if (this._clipInCache) {\n            submit.shaderValue.clipOff.x = 1;\n            submit.shaderValue.clipOff = submit.shaderValue.clipOff;\n        }\n    }\n\n\n    private isSameClipInfo(submit: SubmitBase): boolean {\n        return (submit.clipInfoID === this._clipInfoID);\n        /*\n        var cd:Array = submit.shaderValue.clipDir;\n        var cp:Array = submit.shaderValue.clipRect;\n        \n        if (clipInfo[0] != cp[0] || clipInfo[1] != cp[1] || clipInfo[2] != cd[0] || clipInfo[3] != cd[1] || clipInfo[4] != cd[2] || clipInfo[5] != cd[3] ) \n            return false;\n        return true;\n        */\n    }\n\n    /**\n     * @internal\n     * 这个还是会检查是否合并\n     * @param\ttex\n     * @param\tminVertNum\n     */\n    _useNewTex2DSubmit(tex: Texture, minVertNum: number): void {\n        //var sameKey:Boolean = tex.bitmap.id >= 0 && preKey.submitType === SubmitBase.KEY_DRAWTEXTURE && preKey.other === tex.bitmap.id ;\n\n        if (this._mesh.vertNum + minVertNum > Context._MAXVERTNUM) {\n            this._mesh = MeshQuadTexture.getAMesh(this.isMain);//创建新的mesh  TODO 如果_mesh不是常见格式，这里就不能这么做了。以后把_mesh单独表示成常用模式 \n            this.meshlist.push(this._mesh);\n            //sameKey = false;\n        }\n\n        var submit: SubmitTexture = SubmitTexture.create(this, this._mesh, Value2D.create(RenderSpriteData.Texture2D));\n        this._submits[this._submits._length++] = this._curSubmit = submit;\n        submit.shaderValue.textureHost = tex;\n        this._copyClipInfo(submit, this._globalClipMatrix);\n    }\n\n    /**\n     * @internal\n     * 使用上面的设置（texture，submit，alpha，clip），画一个rect\n     */\n    _drawTexRect(x: number, y: number, w: number, h: number, uv: any[]): void {\n        this.transformQuad(x, y, w, h, this._italicDeg, this._curMat, this._transedPoints);\n        //这个是给文字用的，为了清晰，必须要按照屏幕像素对齐，并且四舍五入。\n        var ops: any[] = this._transedPoints;\n        ops[0] = (ops[0] + 0.5) | 0;\n        ops[1] = (ops[1] + 0.5) | 0;\n        ops[2] = (ops[2] + 0.5) | 0;\n        ops[3] = (ops[3] + 0.5) | 0;\n        ops[4] = (ops[4] + 0.5) | 0;\n        ops[5] = (ops[5] + 0.5) | 0;\n        ops[6] = (ops[6] + 0.5) | 0;\n        ops[7] = (ops[7] + 0.5) | 0;\n\n        if (!this.clipedOff(this._transedPoints)) {\n            this._mesh.addQuad(this._transedPoints, uv, this._fillColor, true);\n            this._curSubmit._numEle += 6;\n            this._mesh.indexNum += 6;\n            this._mesh.vertNum += 4;\n        }\n    }\n\n    drawCallOptimize(enable: boolean): boolean {\n        this._charSubmitCache.enable(enable, this);\n        return enable;\n    }\n\n    /**\n     * @internal\n     * @param\ttex {Texture | RenderTexture }\n     * @param  imgid 图片id用来比较合并的\n     * @param\tx\n     * @param\ty\n     * @param\twidth\n     * @param\theight\n     * @param\tm\n     * @param\talpha\n     * @param\tuv\n     * @return\n     */\n    _inner_drawTexture(tex: Texture, imgid: number, x: number, y: number, width: number, height: number, m: Matrix, uv: ArrayLike<number> | null, alpha: number, lastRender: boolean, color: number): boolean {\n        if (width <= 0 || height <= 0) {\n            return false;\n        }\n        var preKey: SubmitKey = this._curSubmit._key;\n        uv = uv || tex._uv\n        //为了优化，如果上次是画三角形，并且贴图相同，会认为他们是一组的，把这个也转成三角形，以便合并。\n        //因为好多动画是drawTexture和drawTriangle混用的\n        if (preKey.submitType === SubmitBase.KEY_TRIANGLES && preKey.other === imgid) {\n            var tv: Float32Array = this._drawTexToDrawTri_Vert;\n            tv[0] = x; tv[1] = y; tv[2] = x + width, tv[3] = y, tv[4] = x + width, tv[5] = y + height, tv[6] = x, tv[7] = y + height;\n            this._drawTriUseAbsMatrix = true;\n            var tuv: Float32Array = this._tempUV;\n            tuv[0] = uv[0]; tuv[1] = uv[1]; tuv[2] = uv[2]; tuv[3] = uv[3]; tuv[4] = uv[4]; tuv[5] = uv[5]; tuv[6] = uv[6]; tuv[7] = uv[7];\n            this.drawTriangles(tex, 0, 0, tv, tuv, this._drawTexToDrawTri_Index, m || this._curMat, alpha, null, null);//用tuv而不是uv会提高效率\n            this._drawTriUseAbsMatrix = false;\n            return true;\n        }\n\n        var mesh = this._mesh;\n        var submit: SubmitTexture = this._curSubmit;\n        var ops: any[] = lastRender ? this._charSubmitCache.getPos() : this._transedPoints;\n\n        //凡是这个都是在_mesh上操作，不用考虑samekey\n        this.transformQuad(x, y, width || tex.width, height || tex.height, this._italicDeg, m || this._curMat, ops);\n\n        if (this.drawTexAlign) {\n            var round: Function = Math.round;\n            ops[0] = round(ops[0]);//  (ops[0] + 0.5) | 0;\t// 这么计算负的时候会有问题\n            ops[1] = round(ops[1]);\n            ops[2] = round(ops[2]);\n            ops[3] = round(ops[3]);\n            ops[4] = round(ops[4]);\n            ops[5] = round(ops[5]);\n            ops[6] = round(ops[6]);\n            ops[7] = round(ops[7]);\n            this.drawTexAlign = false;\t//一次性的\n        }\n\n        var rgba: number = this._mixRGBandAlpha(color, this._shader2D.ALPHA * alpha);\n\n        //lastRender = false;\n        if (lastRender) {\n            this._charSubmitCache.add(this, tex, imgid, ops, uv, rgba);\n            return true;\n        }\n\n        this._drawCount++;\n\n        var sameKey = imgid >= 0 && preKey.submitType === SubmitBase.KEY_DRAWTEXTURE && preKey.other === imgid &&\n            this.isSameClipInfo(submit) && this._curSubmit.material==this.material;\n\n        this._lastTex = tex;\n\n        if (mesh.vertNum + 4 > Context._MAXVERTNUM) {\n            mesh = this._mesh = MeshQuadTexture.getAMesh(this.isMain);//创建新的mesh  TODO 如果_mesh不是常见格式，这里就不能这么做了。以后把_mesh单独表示成常用模式 \n            this.meshlist.push(mesh);\n            sameKey = false;\t//新的mesh不能算samekey了\n        }\n\n        {\n            mesh.addQuad(ops, uv, rgba, true);\n            if (!sameKey) {\n                this._submits[this._submits._length++] = this._curSubmit = submit = SubmitTexture.create(this, mesh, Value2D.create(RenderSpriteData.Texture2D));\n                submit.shaderValue.textureHost = tex;\n                submit._key.other = imgid;\n                this._copyClipInfo(submit, this._globalClipMatrix);\n            }\n            submit._numEle += 6;\n            mesh.indexNum += 6;\n            mesh.vertNum += 4;\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * 转换4个顶点。为了效率这个不做任何检查。需要调用者的配合。\n     * @param\ta\t\t输入。8个元素表示4个点\n     * @param\tout\t\t输出\n     */\n    transform4Points(a: any[], m: Matrix, out: any[]): void {\n        /*\n            out[0] = 846;\n            out[1] = 656;\n            out[2] = 881;\n            out[3] = 657;\n            out[4] = 880;\n            out[5] = 732;\n            out[6] = 844;\n            out[7] = 731;\n            return ;\n        */\n        //var m:Matrix = _curMat;\n        var tx: number = m.tx;\n        var ty: number = m.ty;\n        var ma: number = m.a;\n        var mb: number = m.b;\n        var mc: number = m.c;\n        var md: number = m.d;\n        var a0: number = a[0];\n        var a1: number = a[1];\n        var a2: number = a[2];\n        var a3: number = a[3];\n        var a4: number = a[4];\n        var a5: number = a[5];\n        var a6: number = a[6];\n        var a7: number = a[7];\n        if (m._bTransform) {\n            out[0] = a0 * ma + a1 * mc + tx; out[1] = a0 * mb + a1 * md + ty;\n            out[2] = a2 * ma + a3 * mc + tx; out[3] = a2 * mb + a3 * md + ty;\n            out[4] = a4 * ma + a5 * mc + tx; out[5] = a4 * mb + a5 * md + ty;\n            out[6] = a6 * ma + a7 * mc + tx; out[7] = a6 * mb + a7 * md + ty;\n        } else {\n            out[0] = a0 + tx; out[1] = a1 + ty;\n            out[2] = a2 + tx; out[3] = a3 + ty;\n            out[4] = a4 + tx; out[5] = a5 + ty;\n            out[6] = a6 + tx; out[7] = a7 + ty;\n        }\n    }\n\n    /**\n     * pt所描述的多边形完全在clip外边，整个被裁掉了\n     * @param\tpt\n     * @return\n     */\n    clipedOff(pt: any[]): boolean {\n        //TODO\n        if (this._clipRect.width <= 0 || this._clipRect.height <= 0)\n            return true;\n        return false;\n    }\n\n    /**\n     * 应用当前矩阵。把转换后的位置放到输出数组中。 \n     * @param\tx\n     * @param\ty\n     * @param\tw\n     * @param\th\n     * @param   italicDeg 倾斜角度，单位是度。0度无，目前是下面不动。以后要做成可调的\n     */\n    transformQuad(x: number, y: number, w: number, h: number, italicDeg: number, m: Matrix, out: any[]): void {\n        /*\n        out[0] = 100.1; out[1] = 100.1;\n        out[2] = 101.1; out[3] = 100.1;\n        out[4] = 101.1; out[5] = 101.1;\n        out[6] = 100.1; out[7] = 101.1;\n        return;\n        */\n        var xoff: number = 0;\n        if (italicDeg != 0) {\n            xoff = Math.tan(italicDeg * Math.PI / 180) * h;\n        }\n        var maxx: number = x + w; var maxy: number = y + h;\n\n        var tx: number = m.tx;\n        var ty: number = m.ty;\n        var ma: number = m.a;\n        var mb: number = m.b;\n        var mc: number = m.c;\n        var md: number = m.d;\n        var a0: number = x + xoff;\n        var a1: number = y;\n        var a2: number = maxx + xoff;\n        var a3: number = y;\n        var a4: number = maxx;\n        var a5: number = maxy;\n        var a6: number = x;\n        var a7: number = maxy;\n        if (m._bTransform) {\n            out[0] = a0 * ma + a1 * mc + tx; out[1] = a0 * mb + a1 * md + ty;\n            out[2] = a2 * ma + a3 * mc + tx; out[3] = a2 * mb + a3 * md + ty;\n            out[4] = a4 * ma + a5 * mc + tx; out[5] = a4 * mb + a5 * md + ty;\n            out[6] = a6 * ma + a7 * mc + tx; out[7] = a6 * mb + a7 * md + ty;\n            /* 旋转的情况下这个是错的。TODO\n            let dx = out[2] - out[0];\n            let minw = 1;\t// 限制最小宽度为1，防止细线在缩小的情况下消失。\n            if (dx < minw) {\n                dx = minw - dx;\n                out[2] += dx;\n            }\n            dx = out[4] - out[6];\n            if (dx < minw) {\n                dx = minw - dx;\n                out[4] += dx;\n            }\n            */\n        } else {\n            out[0] = a0 + tx; out[1] = a1 + ty;\n            out[2] = a2 + tx; out[3] = a3 + ty;\n            out[4] = a4 + tx; out[5] = a5 + ty;\n            out[6] = a6 + tx; out[7] = a7 + ty;\n        }\n    }\n\n    pushRT(): void {\n        this.addRenderObject(SubmitCMD.create(null, RenderTexture2D.pushRT, this));\n    }\n    popRT(): void {\n        this.addRenderObject(SubmitCMD.create(null, RenderTexture2D.popRT, this));\n        this.breakNextMerge();\n    }\n\n    //TODO:coverage\n    useRT(rt: RenderTexture2D): void {\n        //这里并没有做cliprect的保存恢复。因为认为调用这个函数的话，就是完全不走context流程了，完全自己控制。\n        function _use(rt: RenderTexture2D): void {\n            if (!rt) {\n                throw 'error useRT'\n            } else {\n                rt.start();\n                rt.clear(0, 0, 0, 0);\n            }\n        }\n\n        this.addRenderObject(SubmitCMD.create([rt], _use, this));\n        this.breakNextMerge();\n    }\n\n    /**\n     * 异步执行rt的restore函数\n     * @param\trt\n     */\n    //TODO:coverage\n    RTRestore(rt: RenderTexture2D): void {\n        function _restore(rt: RenderTexture2D): void {\n            rt.restore();\n        }\n        this.addRenderObject(SubmitCMD.create([rt], _restore, this));\n        this.breakNextMerge();\n    }\n\n    /**\n     * 强制拒绝submit合并\n     * 例如切换rt的时候\n     */\n    breakNextMerge(): void {\n        this._curSubmit = SubmitBase.RENDERBASE;\n    }\n\n    //TODO:coverage\n    private _repaintSprite(): void {\n        this.sprite && this.sprite.repaint();\n    }\n\n    /**\n     * \n     * @param\ttex\n     * @param\tx\t\t\t\n     * @param\ty\n     * @param\twidth\n     * @param\theight\n     * @param\ttransform\t图片本身希望的矩阵\n     * @param\ttx\t\t\t节点的位置\n     * @param\tty\n     * @param\talpha\n     */\n    drawTextureWithTransform(tex: Texture, x: number, y: number, width: number, height: number, transform: Matrix | null, tx: number, ty: number, alpha: number, blendMode: string | null, uv?: number[], color = 0xffffffff): void {\n        var oldcomp: string;\n        var curMat: Matrix = this._curMat;\n        if (blendMode) {\n            oldcomp = this.globalCompositeOperation;\n            this.globalCompositeOperation = blendMode;\n        }\n\n        if (!transform) {\n            this._drawTextureM(tex, x + tx, y + ty, width, height, curMat, alpha, uv, color);\n            if (blendMode) {\n                this.globalCompositeOperation = oldcomp;\n            }\n            return;\n        }\n        var tmpMat: Matrix = this._tmpMatrix;\n        //克隆transform,因为要应用tx，ty，这里不能修改原始的transform\n        tmpMat.a = transform.a; tmpMat.b = transform.b; tmpMat.c = transform.c; tmpMat.d = transform.d; tmpMat.tx = transform.tx + tx; tmpMat.ty = transform.ty + ty;\n        tmpMat._bTransform = transform._bTransform;\n\n        if (transform && curMat._bTransform) {\n            // 如果当前矩阵不是只有平移，则只能用mul的方式\n            Matrix.mul(tmpMat, curMat, tmpMat);\n            transform = tmpMat;\n            transform._bTransform = true;\n        } else {\n            //如果curmat没有旋转。\n            tmpMat.tx += curMat.tx;\n            tmpMat.ty += curMat.ty;\n            transform = tmpMat;\n        }\n        this._drawTextureM(tex, x, y, width, height, transform, alpha, uv, color);\n        if (blendMode)\n            this.globalCompositeOperation = oldcomp;\n    }\n\n    /**\n     * * 把ctx中的submits提交。结果渲染到target上\n     * @param\tctx\n     * @param\ttarget\n     */\n    private _flushToTarget(context: Context, target: RenderTexture2D): void {\n        //if (target._destroy) return;\n        //var preworldClipRect:Rectangle = RenderState2D.worldClipRect;\n        //裁剪不用考虑，现在是在context内部自己维护，不会乱窜\n        RenderState2D.worldScissorTest = false;\n        LayaGL.renderEngine.scissorTest(false);\n\n        var preAlpha: number = RenderState2D.worldAlpha;\n        var preMatrix4: any[] = RenderState2D.worldMatrix4;\n        var preMatrix: Matrix = RenderState2D.worldMatrix;\n\n        var preShaderDefines: ShaderDefines2D = RenderState2D.worldShaderDefines;\n\n        RenderState2D.worldMatrix = Matrix.EMPTY;\n\n        RenderState2D.restoreTempArray();\n        RenderState2D.worldMatrix4 = RenderState2D.TEMPMAT4_ARRAY;\n        RenderState2D.worldAlpha = 1;\n        //RenderState2D.worldFilters = null;\n        //RenderState2D.worldShaderDefines = null;\n        BaseShader.activeShader = null;\n\n        target.start();\n        // 如果没有命令就不要clear。这么改是因为嵌套cacheas出问题了\n        // 如果一个sprite cacheas normal ，他的子节点有cacheas bitmap的（包括mask等）就会不断的执行 _flushToTarget和drawCamvase,从而把target上的内容清掉\n        // 由于cacheas normal 导致 RenderSprite没有机会执行 _cacheStyle.canvas 存在的分支。在\n        if (context._submits._length > 0)\n            target.clear(0, 0, 0, 0);\n\n        context._curSubmit = SubmitBase.RENDERBASE;\n        context.flush();\n        context.clear();\n        target.restore();\n        context._curSubmit = SubmitBase.RENDERBASE;\n        //context._canvas\n        BaseShader.activeShader = null;\n        RenderState2D.worldAlpha = preAlpha;\n        RenderState2D.worldMatrix4 = preMatrix4;\n        RenderState2D.worldMatrix = preMatrix;\n        //RenderState2D.worldFilters = preFilters;\n        //RenderState2D.worldShaderDefines = preShaderDefines;\n    }\n\n    drawCanvas(canvas: HTMLCanvas, x: number, y: number, width: number, height: number): void {\n        if (!canvas) return;\n        var src: Context = canvas.context as Context;\n        var submit: ISubmit;\n        if (src._targets) {\n            //生成渲染结果到src._targets上\n            /*\n            this._submits[this._submits._length++] = SubmitCanvas.create(src, 0, null);\n            _curSubmit = SubmitBase.RENDERBASE;\n            //画出src._targets\n            //drawTexture(src._targets.target.getTexture(), x, y, width, height, 0, 0);\n            */\n            //应用并清空canvas中的指令。如果内容需要重画，RenderSprite会给他重新加入submit\n            if (src._submits._length > 0) {\n                submit = SubmitCMD.create([src, src._targets], this._flushToTarget, this);\n                this._submits[this._submits._length++] = submit;\n            }\n            //在这之前就已经渲染出结果了。\n            this._drawRenderTexture(src._targets, x, y, width, height, null, 1.0, RenderTexture2D.flipyuv);\n            this._curSubmit = SubmitBase.RENDERBASE;\n            /*\n            this._submits[this._submits._length++] = SubmitCanvas.create(src, 0, null);\n            //src._targets.flush(src);\n            _curSubmit = SubmitBase.RENDERBASE;\n            //src._targets.drawTo(this, x, y, width, height);\n            //drawTexture(src._targets.target.getTexture(), x, y, width, height, 0, 0);\n            _drawRenderTexture(src._targets, x, y, width, height,null,1.0, RenderTexture.flipyuv);\n            */\n        } else {\n            var canv: WebGLCacheAsNormalCanvas = (<WebGLCacheAsNormalCanvas>(canvas as any));\n            if (canv.touches) {\n                ((<any[]>canv.touches)).forEach(function (v: CharRenderInfo): void { v.touch(); });\n            }\n\n            submit = SubmitCanvas.create(canvas, this._shader2D.ALPHA, this._shader2D.filters);\n            this._submits[this._submits._length++] = submit;\n            ((<SubmitCanvas>submit))._key.clear();\n            //var sx:Number = width / canvas.width;\n            //var sy:Number = height / canvas.height;\n            var mat: Matrix = ((<SubmitCanvas>submit))._matrix;\n            this._curMat.copyTo(mat);\n            //sx != 1 && sy != 1 && mat.scale(sx, sy);\n            // 先加上位置，最后再乘逆\n            var tx: number = mat.tx, ty: number = mat.ty;\n            mat.tx = mat.ty = 0;\n            mat.transformPoint(Point.TEMP.setTo(x, y));\t// 用当前矩阵变换 (x,y)\n            mat.translate(Point.TEMP.x + tx, Point.TEMP.y + ty);\t// 加上原来的 (tx,ty)\n\n            Matrix.mul(canv.invMat, mat, mat);\n\n            this._curSubmit = SubmitBase.RENDERBASE;\n        }\n    }\n\n    drawTarget(rt: RenderTexture2D, x: number, y: number, width: number, height: number, m: Matrix, shaderValue: Value2D, uv: ArrayLike<number> | null = null, blend: number = -1, color: number = 0xffffffff): boolean {\n        this._drawCount++;\n        if (this._mesh.vertNum + 4 > Context._MAXVERTNUM) {\n            this._mesh = MeshQuadTexture.getAMesh(this.isMain);//创建新的mesh  TODO 如果_mesh不是常见格式，这里就不能这么做了。以后把_mesh单独表示成常用模式 \n            this.meshlist.push(this._mesh);\n        }\n\n        //凡是这个都是在_mesh上操作，不用考虑samekey\n        this.transformQuad(x, y, width, height, 0, m || this._curMat, this._transedPoints);\n        if (!this.clipedOff(this._transedPoints)) {\n            this._mesh.addQuad(this._transedPoints, uv || Texture.DEF_UV, color, true);\n            //if (GlUtils.fillRectImgVb( _mesh._vb, _clipRect, x, y, width , height , uv || Texture.DEF_UV, m || _curMat, rgba, this)) {\n            var submit: SubmitTarget = this._curSubmit = SubmitTarget.create(this, this._mesh, shaderValue, rt);\n            submit.blendType = (blend == -1) ? this._nBlendType : blend;\n            this._copyClipInfo((<SubmitBase>(submit as any)), this._globalClipMatrix);\n            submit._numEle = 6;\n            this._mesh.indexNum += 6;\n            this._mesh.vertNum += 4;\n            this._submits[this._submits._length++] = submit;\n            //暂时drawTarget不合并\n            this._curSubmit = SubmitBase.RENDERBASE\n            return true;\n        }\n        //暂时drawTarget不合并\n        this._curSubmit = SubmitBase.RENDERBASE\n        return false;\n    }\n\n    drawTriangles(tex: Texture,\n        x: number, y: number,\n        vertices: Float32Array,\n        uvs: Float32Array,\n        indices: Uint16Array,\n        matrix: Matrix, alpha: number, blendMode: string, colorNum: number = 0xffffffff): void {\n\n        if (!tex._getSource()) { //source内调用tex.active();\n            if (this.sprite) {\n                ILaya.systemTimer.callLater(this, this._repaintSprite);\n            }\n            return;\n        }\n        var oldcomp: string | null = null;\n        if (blendMode) {\n            oldcomp = this.globalCompositeOperation;\n            this.globalCompositeOperation = blendMode;\n        }\n        this._drawCount++;\n\n        // 为了提高效率，把一些变量放到这里\n        var tmpMat = this._tmpMatrix;\n        var triMesh = this._triangleMesh!;\n\n        var webGLImg = tex.bitmap;\n        var preKey: SubmitKey = this._curSubmit._key;\n        var sameKey = preKey.submitType === SubmitBase.KEY_TRIANGLES && \n                        preKey.other === webGLImg.id && \n                        preKey.blendShader == this._nBlendType &&\n                        this._curSubmit.material==this.material;\n\n        //var rgba:int = mixRGBandAlpha(0xffffffff);\n        //rgba = _mixRGBandAlpha(rgba, alpha);\t这个函数有问题，不能连续调用，输出作为输入\n        if (triMesh.vertNum + vertices.length / 2 > Context._MAXVERTNUM) {\n            triMesh = this._triangleMesh = MeshTexture.getAMesh(this.isMain);//创建新的mesh  TODO 如果_mesh不是常见格式，这里就不能这么做了。以后把_mesh单独表示成常用模式 \n            this.meshlist.push(triMesh);\n            sameKey = false;\t//新的mesh不能算samekey了\n        }\n        if (!sameKey) {\n            //添加一个新的submit\n            var submit: SubmitTexture = this._curSubmit = SubmitTexture.create(this, triMesh, Value2D.create(RenderSpriteData.Texture2D));\n            submit.shaderValue.textureHost = tex;\n            submit._renderType = SubmitBase.TYPE_TEXTURE;\n            submit._key.submitType = SubmitBase.KEY_TRIANGLES;\n            submit._key.other = webGLImg.id;\n            this._copyClipInfo(submit, this._globalClipMatrix);\n            this._submits[this._submits._length++] = submit;\n        }\n\n        var rgba: number = this._mixRGBandAlpha(colorNum, this._shader2D.ALPHA * alpha);\n        if (!this._drawTriUseAbsMatrix) {\n            if (!matrix) {\n                tmpMat.a = 1; tmpMat.b = 0; tmpMat.c = 0; tmpMat.d = 1; tmpMat.tx = x; tmpMat.ty = y;\n            } else {\n                tmpMat.a = matrix.a; tmpMat.b = matrix.b; tmpMat.c = matrix.c; tmpMat.d = matrix.d; tmpMat.tx = matrix.tx + x; tmpMat.ty = matrix.ty + y;\n            }\n            Matrix.mul(tmpMat, this._curMat, tmpMat);\n            triMesh.addData(vertices, uvs, indices, tmpMat || this._curMat, rgba);\n        } else {\n            // 这种情况是drawtexture转成的drawTriangle，直接使用matrix就行，传入的xy都是0\n            triMesh.addData(vertices, uvs, indices, matrix, rgba);\n        }\n        this._curSubmit._numEle += indices.length;\n\n        if (blendMode) {\n            this.globalCompositeOperation = oldcomp!;\n        }\n        //return true;\n    }\n\n    transform(a: number, b: number, c: number, d: number, tx: number, ty: number): void {\n        SaveTransform.save(this);\n        Matrix.mul(Matrix.TEMP.setTo(a, b, c, d, tx, ty), this._curMat, this._curMat);\t//TODO 这里会有效率问题。一堆的set\n        this._curMat._checkTransform();\n    }\n\n    //TODO:coverage\n    /**@internal */\n    _transformByMatrix(matrix: Matrix, tx: number, ty: number): void {\n        matrix.setTranslate(tx, ty);\n        Matrix.mul(matrix, this._curMat, this._curMat);\n        matrix.setTranslate(0, 0);\n        this._curMat._bTransform = true;\n    }\n\n    //TODO:coverage\n    setTransformByMatrix(value: Matrix): void {\n        value.copyTo(this._curMat);\n    }\n\n    rotate(angle: number): void {\n        SaveTransform.save(this);\n        this._curMat.rotateEx(angle);\n    }\n\n    scale(scaleX: number, scaleY: number): void {\n        SaveTransform.save(this);\n        this._curMat.scaleEx(scaleX, scaleY);\n    }\n\n    clipRect(x: number, y: number, width: number, height: number, escape?: boolean): void {\n        SaveClipRect.save(this);\n        if (this._clipRect == Context.MAXCLIPRECT) {\n            this._clipRect = new Rectangle(x, y, width, height);\n        } else {\n            this._clipRect.width = width;\n            this._clipRect.height = height;\n\n            //把xy转换到当前矩阵空间。宽高不用转换，这样在shader中计算的时候就不用把方向normalize了\n            this._clipRect.x = x;\n            this._clipRect.y = y;\n        }\n        this._clipID_Gen++;\n        this._clipID_Gen %= 10000;\n        this._clipInfoID = this._clipID_Gen;\n\n        if (escape) {\n            defaultClipMatrix.copyTo(this._globalClipMatrix);\n            return;\n        }\n\n        var cm: Matrix = this._globalClipMatrix;\n        //TEMP 处理clip交集问题，这里有点问题，无法处理旋转，翻转\n        var minx: number = cm.tx;\n        var miny: number = cm.ty;\n        var maxx: number = minx + cm.a;\n        var maxy: number = miny + cm.d;\n        //TEMP end\n\n        if (this._clipRect.width >= Const.MAX_CLIP_SIZE) {\n            cm.a = cm.d = Const.MAX_CLIP_SIZE;\n            cm.b = cm.c = cm.tx = cm.ty = 0;\n        } else {\n            //其实就是矩阵相乘\n            if (this._curMat._bTransform) {\n                cm.tx = this._clipRect.x * this._curMat.a + this._clipRect.y * this._curMat.c + this._curMat.tx;\n                cm.ty = this._clipRect.x * this._curMat.b + this._clipRect.y * this._curMat.d + this._curMat.ty;\n                cm.a = this._clipRect.width * this._curMat.a;\n                cm.b = this._clipRect.width * this._curMat.b;\n                cm.c = this._clipRect.height * this._curMat.c;\n                cm.d = this._clipRect.height * this._curMat.d;\n            } else {\n                cm.tx = this._clipRect.x + this._curMat.tx;\n                cm.ty = this._clipRect.y + this._curMat.ty;\n                cm.a = this._clipRect.width;\n                cm.b = cm.c = 0;\n                cm.d = this._clipRect.height;\n            }\n            if (this._incache) {\n                this._clipInCache = true;\n            }\n        }\n\n        //TEMP 处理clip交集问题，这里有点问题，无法处理旋转,翻转\n        if (cm.a > 0 && cm.d > 0) {\n            var cmaxx: number = cm.tx + cm.a;\n            var cmaxy: number = cm.ty + cm.d;\n            if (cmaxx <= minx || cmaxy <= miny || cm.tx >= maxx || cm.ty >= maxy) {\n                //超出范围了\n                cm.a = -0.1; cm.d = -0.1;\n            } else {\n                if (cm.tx < minx) {\n                    cm.a -= (minx - cm.tx);\n                    cm.tx = minx;\n                }\n                if (cmaxx > maxx) {\n                    cm.a -= (cmaxx - maxx);\n                }\n                if (cm.ty < miny) {\n                    cm.d -= (miny - cm.ty);\n                    cm.ty = miny;\n                }\n                if (cmaxy > maxy) {\n                    cm.d -= (cmaxy - maxy);\n                }\n                if (cm.a <= 0) cm.a = -0.1;\n                if (cm.d <= 0) cm.d = -0.1;\n            }\n        }\n        //TEMP end\n    }\n\n    addRenderObject(o: ISubmit): void {\n        this._submits[this._submits._length++] = o;\n    }\n\n    /**\n     * \n     * @param\tstart\n     * @param\tend\n     */\n    submitElement(start: number, end: number): number {\n        var mainCtx: boolean = this.isMain;\n        var renderList: any[] = this._submits;\n        var ret: number = ((<any>renderList))._length;\n        end < 0 && (end = ((<any>renderList))._length);\n        var submit = SubmitBase.RENDERBASE;\n        while (start < end) {\n            this._renderNextSubmitIndex = start + 1;\n            if (renderList[start] === SubmitBase.RENDERBASE) {\n                start++;\n                continue;\n            }\n            SubmitBase.preRender = submit;\n            submit = renderList[start];\n            //只有submitscissor才会返回多个\n            start += submit.renderSubmit();\n            //本来做了个优化，如果是主画布，用完立即releaseRender. 但是实际没有什么效果，且由于submit需要用来对比，即使用完也不能修改，所以这个优化又去掉了\n        }\n\n\n        return ret;\n    }\n\n    flush(): number {\n        this._clipID_Gen = 0;\n        var ret: number = this.submitElement(0, this._submits._length);\n        this._path && this._path.reset();\n        SkinMeshBuffer.instance && SkinMeshBuffer.getInstance().reset();\n\n        //Stat.mesh2DNum += meshlist.length;\n        this._curSubmit = SubmitBase.RENDERBASE;\n\n        for (var i: number = 0, sz: number = this.meshlist.length; i < sz; i++) {\n            var curm: Mesh2D = this.meshlist[i];\n            curm.canReuse ? (curm.releaseMesh()) : (curm.destroy());\n        }\n        this.meshlist.length = 0;\n\n        this._mesh = MeshQuadTexture.getAMesh(this.isMain);\t//TODO 不要这样。\n        this._pathMesh = MeshVG.getAMesh(this.isMain);\n        this._triangleMesh = MeshTexture.getAMesh(this.isMain);\n        this.meshlist.push(this._mesh, this._pathMesh, this._triangleMesh);\n\n        this._flushCnt++;\n        //charbook gc\n        if (this._flushCnt % 60 == 0 && this.isMain) {\n            if (TextRender.textRenderInst) {\n                TextRender.textRenderInst.GC();\n            }\n        }\n        return ret;\n    }\n\n    /*******************************************start矢量绘制***************************************************/\n\n    beginPath(convex: boolean = false): void {\n        var tPath: Path = this._getPath();\n        tPath.beginPath(convex);\n    }\n\n    closePath(): void {\n        //_path.closePath = true;\n        this._path.closePath();\n    }\n\n    /**\n     * 添加一个path。\n     * @param\tpoints [x,y,x,y....]\t这个会被保存下来，所以调用者需要注意复制。\n     * @param\tclose\t是否闭合\n     * @param   convex 是否是凸多边形。convex的优先级是这个最大。fill的时候的次之。其实fill的时候不应该指定convex，因为可以多个path\n     * @param\tdx  需要添加的平移。这个需要在应用矩阵之前应用。\n     * @param\tdy\n     */\n    addPath(points: any[], close: boolean, convex: boolean, dx: number, dy: number): void {\n        let sz = points.length;\n        for (let i = 0; i < sz - 1; i += 2) {\n            points[i] += dx;\n            points[i + 1] += dy;\n        }\n        if (close && sz > 5 && (points[sz - 2] != points[0] || points[sz - 1] != points[1])) {\n            points.push(points[0], points[1]);\n        }\n        this._getPath().push(points, convex);\n    }\n\n    fill(): void {\n        var m: Matrix = this._curMat;\n        var tPath: Path = this._getPath();\n        var submit: Submit = this._curSubmit;\n        var sameKey = submit._key.submitType === SubmitBase.KEY_VG && \n                    submit._key.blendShader === this._nBlendType &&\n                    this.isSameClipInfo(submit) &&\n                    this._curSubmit.material==this.material;\n\n        if (!sameKey) {\n            this._curSubmit = this.addVGSubmit(this._pathMesh);\n        }\n        var rgba: number = this.mixRGBandAlpha(this.fillStyle.toInt());\n        var curEleNum: number = 0;\n        var idx: any[];\n        //如果有多个path的话，要一起填充mesh，使用相同的颜色和alpha\n        for (var i: number = 0, sz: number = tPath.paths.length; i < sz; i++) {\n            var p: any = tPath.paths[i];\n            var vertNum: number = p.path.length / 2;\n            if (vertNum < 3 || (vertNum == 3 && !p.convex))\n                continue;\n            var cpath: any[] = p.path.concat();\n            // 应用矩阵转换顶点\n            var pi: number = 0;\n            var xp: number, yp: number;\n            var _x: number, _y: number;\n            if (m._bTransform) {\n                for (pi = 0; pi < vertNum; pi++) {\n                    xp = pi << 1;\n                    yp = xp + 1;\n                    _x = cpath[xp];\n                    _y = cpath[yp];\n\n                    cpath[xp] = m.a * _x + m.c * _y + m.tx;\n                    cpath[yp] = m.b * _x + m.d * _y + m.ty;\n                }\n            } else {\n                for (pi = 0; pi < vertNum; pi++) {\n                    xp = pi << 1;\n                    yp = xp + 1;\n                    _x = cpath[xp];\n                    _y = cpath[yp];\n                    cpath[xp] = _x + m.tx;\n                    cpath[yp] = _y + m.ty;\n                }\n            }\n\n            if (this._pathMesh.vertNum + vertNum > Context._MAXVERTNUM) {\n                //;\n                //顶点数超了，要先提交一次\n                this._curSubmit._numEle += curEleNum;\n                curEleNum = 0;\n                //然后用新的mesh，和新的submit。\n                this._pathMesh = MeshVG.getAMesh(this.isMain);\n                this._curSubmit = this.addVGSubmit(this._pathMesh);\n            }\n\n            var curvert: number = this._pathMesh.vertNum;\n            //生成 ib\n            if (p.convex) { //convex的ib比较容易\n                var faceNum: number = vertNum - 2;\n                idx = new Array(faceNum * 3);\n                var idxpos: number = 0;\n                for (var fi: number = 0; fi < faceNum; fi++) {\n                    idx[idxpos++] = curvert;\n                    idx[idxpos++] = fi + 1 + curvert;\n                    idx[idxpos++] = fi + 2 + curvert;\n                }\n            }\n            else {\n                idx = Earcut.earcut(cpath, null, 2);\t//返回索引\n                if (curvert > 0) {\n                    //修改ib\n                    for (var ii: number = 0; ii < idx.length; ii++) {\n                        idx[ii] += curvert;\n                    }\n                }\n            }\n            //填充mesh\n            this._pathMesh.addVertAndIBToMesh(this, cpath, rgba, idx);\n            curEleNum += idx.length;\n        }\n        this._curSubmit._numEle += curEleNum;\n    }\n\n    private addVGSubmit(mesh: Mesh2D): Submit {\n        //elenum设为0，后面再加\n        var submit: Submit = Submit.createShape(this, mesh, 0, Value2D.create(RenderSpriteData.Primitive));\n        //submit._key.clear();\n        //submit._key.blendShader = _submitKey.blendShader;\t//TODO 这个在哪里赋值的啊\n        submit._key.submitType = SubmitBase.KEY_VG;\n        this._submits[this._submits._length++] = submit;\n        this._copyClipInfo(submit, this._globalClipMatrix);\n        return submit;\n    }\n\n    stroke(): void {\n        if (this.lineWidth > 0) {\n            var rgba: number = this.mixRGBandAlpha(this.strokeStyle._color.numColor);\n            var tPath: Path = this._getPath();\n            var submit: Submit = this._curSubmit;\n            var sameKey = submit._key.submitType === SubmitBase.KEY_VG && \n                            submit._key.blendShader === this._nBlendType &&\n                            this.isSameClipInfo(submit) && \n                            this._curSubmit.material==this.material;\n\n            if (!sameKey) {\n                this._curSubmit = this.addVGSubmit(this._pathMesh);\n            }\n            var curEleNum: number = 0;\n            //如果有多个path的话，要一起填充mesh，使用相同的颜色和alpha\n            for (var i: number = 0, sz: number = tPath.paths.length; i < sz; i++) {\n                var p: any = tPath.paths[i];\n                if (p.path.length <= 0)\n                    continue;\n                var idx: any[] = [];\n                var vertex: any[] = [];//x,y\n                //p.path.loop;\n                //填充vbib\n                var maxVertexNum: number = p.path.length * 2;\t//最大可能产生的顶点数。这个需要考虑考虑\n                if (maxVertexNum < 2)\n                    continue;\n                if (this._pathMesh.vertNum + maxVertexNum > Context._MAXVERTNUM) {\n                    //;\n                    //顶点数超了，要先提交一次\n                    this._curSubmit._numEle += curEleNum;\n                    curEleNum = 0;\n                    //然后用新的mesh，和新的submit。\n                    this._pathMesh = MeshVG.getAMesh(this.isMain);\n                    this.meshlist.push(this._pathMesh);\n                    this._curSubmit = this.addVGSubmit(this._pathMesh);\n                }\n                //这个需要放在创建新的mesh的后面，因为需要mesh.vertNum,否则如果先调用这个，再创建mesh，那么ib就不对了\n                BasePoly.createLine2(p.path, idx, this.lineWidth, this._pathMesh.vertNum, vertex, p.loop);\t//_pathMesh.vertNum 是要加到生成的ib上的\n                // 变换所有的点\n                var ptnum: number = vertex.length / 2;\n                var m: Matrix = this._curMat;\n                var pi: number = 0;\n                var xp: number, yp: number;\n                var _x: number, _y: number;\n                if (m._bTransform) {\n                    for (pi = 0; pi < ptnum; pi++) {\n                        xp = pi << 1;\n                        yp = xp + 1;\n                        _x = vertex[xp];\n                        _y = vertex[yp];\n\n                        vertex[xp] = m.a * _x + m.c * _y + m.tx;\n                        vertex[yp] = m.b * _x + m.d * _y + m.ty;\n                    }\n                } else {\n                    for (pi = 0; pi < ptnum; pi++) {\n                        xp = pi << 1;\n                        yp = xp + 1;\n                        _x = vertex[xp];\n                        _y = vertex[yp];\n                        vertex[xp] = _x + m.tx;\n                        vertex[yp] = _y + m.ty;\n                    }\n                }\n\n                //this.drawPoly(0, 0, p.path, fillStyle._color.numColor, 0, 0, p.convex);\n                //填充mesh\n                this._pathMesh.addVertAndIBToMesh(this, vertex, rgba, idx);\n                curEleNum += idx.length;\n            }\n            this._curSubmit._numEle += curEleNum;\n        }\n    }\n\n    moveTo(x: number, y: number): void {\n        var tPath: Path = this._getPath();\n        tPath.newPath();\n        tPath._lastOriX = x;\n        tPath._lastOriY = y;\n        tPath.addPoint(x, y);\n    }\n\n    /**\n     * \n     * @param\tx\n     * @param\ty\n     * @param\tb 是否应用矩阵\n     */\n    lineTo(x: number, y: number): void {\n        var tPath: Path = this._getPath();\n        if (Math.abs(x - tPath._lastOriX) < 1e-3 && Math.abs(y - tPath._lastOriY) < 1e-3)//不判断的话，下面的画线算法受不了\n            return;\n        tPath._lastOriX = x;\n        tPath._lastOriY = y;\n        tPath.addPoint(x, y);\n    }\n    /*\n    public function drawCurves(x:Number, y:Number,points:Array, lineColor:*, lineWidth:Number = 1):void {\n        //setPathId(-1);\n        beginPath();\n        strokeStyle = lineColor;\n        this.lineWidth = lineWidth;\n        var points:Array = points;\n        //movePath(x, y); TODO 这个被去掉了\n        moveTo(points[0], points[1]);\n        var i:int = 2, n:int = points.length;\n        while (i < n) {\n            quadraticCurveTo(points[i++], points[i++], points[i++], points[i++]);\n        }\n        stroke();\n    }\n    */\n\n    arcTo(x1: number, y1: number, x2: number, y2: number, r: number): void {\n        /*\n        if (mId != -1) {\n            if (mHaveKey) {\n                return;\n            }\n        }\n        */\n        var i: number = 0;\n        var x: number = 0, y: number = 0;\n        var dx: number = this._path._lastOriX - x1;\n        var dy: number = this._path._lastOriY - y1;\n        var len1: number = Math.sqrt(dx * dx + dy * dy);\n        if (len1 <= 0.000001) {\n            return;\n        }\n        var ndx: number = dx / len1;\n        var ndy: number = dy / len1;\n        var dx2: number = x2 - x1;\n        var dy2: number = y2 - y1;\n        var len22: number = dx2 * dx2 + dy2 * dy2;\n        var len2: number = Math.sqrt(len22);\n        if (len2 <= 0.000001) {\n            return;\n        }\n        var ndx2: number = dx2 / len2;\n        var ndy2: number = dy2 / len2;\n        var odx: number = ndx + ndx2;\n        var ody: number = ndy + ndy2;\n        var olen: number = Math.sqrt(odx * odx + ody * ody);\n        if (olen <= 0.000001) {\n            return;\n        }\n\n        var nOdx: number = odx / olen;\n        var nOdy: number = ody / olen;\n\n        var alpha: number = Math.acos(nOdx * ndx + nOdy * ndy);\n        var halfAng: number = Math.PI / 2 - alpha;\n\n        len1 = r / Math.tan(halfAng);\n        var ptx1: number = len1 * ndx + x1;\n        var pty1: number = len1 * ndy + y1;\n\n        var orilen: number = Math.sqrt(len1 * len1 + r * r);\n        //圆心\n        var orix: number = x1 + nOdx * orilen;\n        var oriy: number = y1 + nOdy * orilen;\n\n        var ptx2: number = len1 * ndx2 + x1;\n        var pty2: number = len1 * ndy2 + y1;\n\n        var dir: number = ndx * ndy2 - ndy * ndx2;\n\n        var fChgAng: number = 0;\n        var sinx: number = 0.0;\n        var cosx: number = 0.0;\n        if (dir >= 0) {\n            fChgAng = halfAng * 2;\n            var fda: number = fChgAng / Context.SEGNUM;\n            sinx = Math.sin(fda);\n            cosx = Math.cos(fda);\n        }\n        else {\n            fChgAng = -halfAng * 2;\n            fda = fChgAng / Context.SEGNUM;\n            sinx = Math.sin(fda);\n            cosx = Math.cos(fda);\n        }\n\n        //x = _curMat.a * ptx1 + _curMat.c * pty1 /*+ _curMat.tx*/;\n        //y = _curMat.b * ptx1 + _curMat.d * pty1 /*+ _curMat.ty*/;\n        var lastx: number = this._path._lastOriX, lasty: number = this._path._lastOriY;\t//没有矩阵转换的上一个点\n        var _x1: number = ptx1, _y1: number = pty1;\n        if (Math.abs(_x1 - this._path._lastOriX) > 0.1 || Math.abs(_y1 - this._path._lastOriY) > 0.1) {\n            x = _x1;// _curMat.a * _x1 + _curMat.c * _y1 + _curMat.tx;\n            y = _y1;//_curMat.b * _x1 + _curMat.d * _y1 + _curMat.ty;\n            lastx = _x1;\n            lasty = _y1;\n            this._path._lastOriX = x;\n            this._path._lastOriY = y;\n            this._path.addPoint(x, y);\n        }\n        var cvx: number = ptx1 - orix;\n        var cvy: number = pty1 - oriy;\n        var tx: number = 0.0;\n        var ty: number = 0.0;\n        for (i = 0; i < Context.SEGNUM; i++) {\n            var cx: number = cvx * cosx + cvy * sinx;\n            var cy: number = -cvx * sinx + cvy * cosx;\n            x = cx + orix;\n            y = cy + oriy;\n\n            //x1 = _curMat.a * x + _curMat.c * y /*+ _curMat.tx*/;\n            //y1 = _curMat.b * x + _curMat.d * y /*+ _curMat.ty*/;\n            //x = x1;\n            //y = y1;\n            if (Math.abs(lastx - x) > 0.1 || Math.abs(lasty - y) > 0.1) {\n                //var _tx1:Number = x, _ty1:Number = y;\n                //x = _curMat.a * _tx1 + _curMat.c * _ty1 + _curMat.tx;\n                //y = _curMat.b * _tx1 + _curMat.d * _ty1 + _curMat.ty;\n                this._path._lastOriX = x;\n                this._path._lastOriY = y;\n                this._path.addPoint(x, y);\n                lastx = x;\n                lasty = y;\n            }\n            cvx = cx;\n            cvy = cy;\n        }\n    }\n\n    arc(cx: number, cy: number, rx: number, ry: number, startAngle: number, endAngle: number, counterclockwise: boolean = false, b: boolean = true, minNum = 10): void {\n        /* TODO 缓存还没想好\n        if (mId != -1) {\n            var tShape:IShape = VectorGraphManager.getInstance().shapeDic[this.mId];\n            if (tShape) {\n                if (mHaveKey && !tShape.needUpdate(_curMat))\n                    return;\n            }\n            cx = 0;\n            cy = 0;\n        }\n        */\n        var a: number = 0, da: number = 0, hda: number = 0, kappa: number = 0;\n        var dx: number = 0, dy: number = 0, x: number = 0, y: number = 0, tanx: number = 0, tany: number = 0;\n        var i: number, ndivs: number, nvals: number;\n\n        // Clamp angles\n        da = endAngle - startAngle;\n        if (!counterclockwise) {\n            if (Math.abs(da) >= Math.PI * 2) {\n                da = Math.PI * 2;\n            } else {\n                while (da < 0.0) {\n                    da += Math.PI * 2;\n                }\n            }\n        } else {\n            if (Math.abs(da) >= Math.PI * 2) {\n                da = -Math.PI * 2;\n            } else {\n                while (da > 0.0) {\n                    da -= Math.PI * 2;\n                }\n            }\n        }\n        var sx: number = this.getMatScaleX();\n        var sy: number = this.getMatScaleY();\n        var sr: number = rx * (sx > sy ? sx : sy);\n        var cl: number = 2 * Math.PI * sr;\n        ndivs = (Math.max(cl / minNum, minNum)) | 0;\n\n        hda = (da / ndivs) / 2.0;\n        kappa = Math.abs(4 / 3 * (1 - Math.cos(hda)) / Math.sin(hda));\n        if (counterclockwise)\n            kappa = -kappa;\n\n        nvals = 0;\n        var tPath: Path = this._getPath();\n        for (i = 0; i <= ndivs; i++) {\n            a = startAngle + da * (i / ndivs);\n            dx = Math.cos(a);\n            dy = Math.sin(a);\n            x = cx + dx * rx;\n            y = cy + dy * ry;\n            if (x != this._path._lastOriX || y != this._path._lastOriY) {\n                //var _tx1:Number = x, _ty1:Number = y;\n                //x = _curMat.a * _tx1 + _curMat.c * _ty1 + _curMat.tx;\n                //y = _curMat.b * _tx1 + _curMat.d * _ty1 + _curMat.ty;\n                tPath.addPoint(x, y);\n            }\n        }\n        dx = Math.cos(endAngle);\n        dy = Math.sin(endAngle);\n        x = cx + dx * rx;\n        y = cy + dy * ry;\n        if (x != this._path._lastOriX || y != this._path._lastOriY) {\n            //var _x2:Number = x, _y2:Number = y;\n            //x = _curMat.a * _x2 + _curMat.c * _y2 + _curMat.tx;\n            //y = _curMat.b * _x2 + _curMat.d * _y2 + _curMat.ty;\n            tPath.addPoint(x, y);\n        }\n    }\n\n    quadraticCurveTo(cpx: number, cpy: number, x: number, y: number): void {\n        var tBezier: Bezier = Bezier.I;\n        var tResultArray: any[] = [];\n        //var _x1:Number = x, _y1:Number = y;\n        //x = _curMat.a * _x1 + _curMat.c * _y1 ;// + _curMat.tx;\n        //y = _curMat.b * _x1 + _curMat.d * _y1;// + _curMat.ty;\n        //_x1 = cpx, _y1 = cpy;\n        //cpx = _curMat.a * _x1 + _curMat.c * _y1;// + _curMat.tx;\n        //cpy = _curMat.b * _x1 + _curMat.d * _y1;// + _curMat.ty;\n        var tArray: any[] = tBezier.getBezierPoints([this._path._lastOriX, this._path._lastOriY, cpx, cpy, x, y], 30, 2);\n        for (var i: number = 0, n: number = tArray.length / 2; i < n; i++) {\n            this.lineTo(tArray[i * 2], tArray[i * 2 + 1]);\n        }\n        this.lineTo(x, y);\n    }\n\n\n    /**\n     * 把颜色跟当前设置的alpha混合\n     * @return\n     */\n    mixRGBandAlpha(color: number): number {\n        return this._mixRGBandAlpha(color, this._shader2D.ALPHA);\n    }\n    /**@internal */\n    _mixRGBandAlpha(color: number, alpha: number): number {\n        if (alpha >= 1) {\n            return color;\n        }\n        var a: number = ((color & 0xff000000) >>> 24);\n        //TODO 这里容易出问题，例如颜色的alpha部分虽然为0，但是他的意义就是0，不能假设是没有设置alpha。例如级联多个alpha就会生成这种结果\n        if (a != 0) {\n            a *= alpha;\n        } else {\n            a = alpha * 255;\n        }\n        return (color & 0x00ffffff) | (a << 24);\n    }\n\n    strokeRect(x: number, y: number, width: number, height: number, parameterLineWidth: number): void {\n        var tW: number = parameterLineWidth * 0.5;\n        //line(x - tW, y, x + width + tW, y, parameterLineWidth, _curMat);\n        //line(x + width, y, x + width, y + height, parameterLineWidth, _curMat);\n        //line(x, y, x, y + height, parameterLineWidth, _curMat);\n        //line(x - tW, y + height, x + width + tW, y + height, parameterLineWidth, _curMat);\n        /**\n         * p1-------------------------------p2\n         * |  x,y                      x+w,y|\n         * |     p4--------------------p3   |\n         * |     |                     |    |\n         * |     p6--------------------p7   |\n         * |  x,y+h                  x+w,y+h|\n         * p5-------------------------------p8\n         * \n         * 不用了\n         * 这个其实用4个fillrect拼起来更好，能与fillrect合并。虽然多了几个点。\n         */\n        //TODO 这里能不能与下面的stroke合并一下\n        if (this.lineWidth > 0) {\n            var rgba: number = this.mixRGBandAlpha(this.strokeStyle._color.numColor);\n            var hw: number = this.lineWidth / 2;\n            this._fillRect(x - hw, y - hw, width + this.lineWidth, this.lineWidth, rgba);\t\t\t\t//上\n            this._fillRect(x - hw, y - hw + height, width + this.lineWidth, this.lineWidth, rgba);\t\t//下\n            this._fillRect(x - hw, y + hw, this.lineWidth, height - this.lineWidth, rgba);\t\t\t\t\t//左\n            this._fillRect(x - hw + width, y + hw, this.lineWidth, height - this.lineWidth, rgba);\t\t\t//右\n        }\n    }\n\n    clip(): void {\n    }\n\n    /*******************************************end矢量绘制***************************************************/\n    //TODO:coverage\n    drawParticle(x: number, y: number, pt: any): void {\n        pt.x = x;\n        pt.y = y;\n        this._submits[this._submits._length++] = pt;\n    }\n\n    private _getPath(): Path {\n        return this._path || (this._path = new Path());\n    }\n\n    /**获取canvas*/\n    //注意这个是对外接口\n    get canvas(): HTMLCanvas {\n        return this._canvas;\n    }\n    //=============新增==================\t\n    /* 下面的方式是有bug的。canvas是直接save，restore，现在是为了优化，但是有bug，所以先不重载了\n    public function saveTransform(matrix:Matrix):void {\n        this._curMat.copyTo(matrix);\n    }\n    \n    public function restoreTransform(matrix:Matrix):void {\n        matrix.copyTo(this._curMat);\n    }\n    \n    public function transformByMatrix(matrix:Matrix,tx:Number,ty:Number):void {\n        var mat:Matrix = _curMat;\n        matrix.setTranslate(tx, ty);\n        Matrix.mul(matrix, mat, mat);\n        matrix.setTranslate(0, 0);\n        mat._bTransform = true;\n    }\n    */\n\n    /* 下面的是错误的。位置没有被缩放\n    public function transformByMatrix(matrix:Matrix, tx:Number, ty:Number):void {\n        SaveTransform.save(this);\t\t\t\n        Matrix.mul(matrix, _curMat, _curMat);\t\n        _curMat.tx += tx;\n        _curMat.ty += ty;\n        _curMat._checkTransform();\n    }\n            \n    public function transformByMatrixNoSave(matrix:Matrix, tx:Number, ty:Number):void {\n        Matrix.mul(matrix, _curMat, _curMat);\t\n        _curMat.tx += tx;\n        _curMat.ty += ty;\n        _curMat._checkTransform();\n    }\n    */\n\n    private static tmpuv1: any[] = [0, 0, 0, 0, 0, 0, 0, 0];\n    /**\n     * 专用函数。通过循环创建来水平填充\n     * @param\ttex\n     * @param\tbmpid\n     * @param\tuv\t\t希望循环的部分的uv\n     * @param\toriw\n     * @param\torih\n     * @param\tx\n     * @param\ty\n     * @param\tw\n     */\n    private _fillTexture_h(tex: Texture, imgid: number, uv: ArrayLike<number>, oriw: number, orih: number, x: number, y: number, w: number, color: number): void {\n        if (oriw <= 0)\n            console.error('_fillTexture_h error: oriw must>0');\n\n        var stx: number = x;\n        var num: number = Math.floor(w / oriw);\n        var left: number = w % oriw;\n        for (var i: number = 0; i < num; i++) {\n            this._inner_drawTexture(tex, imgid, stx, y, oriw, orih, this._curMat, uv, 1, false, color);\n            stx += oriw;\n        }\n        // 最后剩下的\n        if (left > 0) {\n            var du: number = uv[2] - uv[0];\n            var uvr: number = uv[0] + du * (left / oriw);\n            var tuv: any[] = Context.tmpuv1;\n            tuv[0] = uv[0]; tuv[1] = uv[1]; tuv[2] = uvr; tuv[3] = uv[3];\n            tuv[4] = uvr; tuv[5] = uv[5]; tuv[6] = uv[6]; tuv[7] = uv[7];\n            this._inner_drawTexture(tex, imgid, stx, y, left, orih, this._curMat, tuv, 1, false, color);\n        }\n    }\n\n    /**\n     * 专用函数。通过循环创建来垂直填充\n     * @param\ttex\n     * @param\timgid\n     * @param\tuv\n     * @param\toriw\n     * @param\torih\n     * @param\tx\n     * @param\ty\n     * @param\th\n     */\n    private _fillTexture_v(tex: Texture, imgid: number, uv: ArrayLike<number>, oriw: number, orih: number, x: number, y: number, h: number, color: number): void {\n        if (orih <= 0)\n            console.error('_fillTexture_v error: orih must>0');\n        var sty: number = y;\n        var num: number = Math.floor(h / orih);\n        var left: number = h % orih;\n        for (var i: number = 0; i < num; i++) {\n            this._inner_drawTexture(tex, imgid, x, sty, oriw, orih, this._curMat, uv, 1, false, color);\n            sty += orih;\n        }\n        // 最后剩下的\n        if (left > 0) {\n            var dv: number = uv[7] - uv[1];\n            var uvb: number = uv[1] + dv * (left / orih);\n            var tuv: any[] = Context.tmpuv1;\n            tuv[0] = uv[0]; tuv[1] = uv[1]; tuv[2] = uv[2]; tuv[3] = uv[3];\n            tuv[4] = uv[4]; tuv[5] = uvb; tuv[6] = uv[6]; tuv[7] = uvb;\n            this._inner_drawTexture(tex, imgid, x, sty, oriw, left, this._curMat, tuv, 1, false, color);\n        }\n    }\n\n    private static tmpUV: any[] = [0, 0, 0, 0, 0, 0, 0, 0];\n    private static tmpUVRect: any[] = [0, 0, 0, 0];\n    drawTextureWithSizeGrid(tex: Texture, tx: number, ty: number, width: number, height: number, sizeGrid: any[], gx: number, gy: number, color: number): void {\n        if (!tex._getSource())\n            return;\n        tx += gx;\n        ty += gy;\n\n        var uv = tex.uv, w: number = tex.bitmap.width, h: number = tex.bitmap.height;\n\n        let ox = tex.offsetX;\n        let oy = tex.offsetY;\n\n        let sw = tex.sourceWidth;\n        let sh = tex.sourceHeight;\n\n        let ow = sw - tex.width - ox;\n        let oh = sh - tex.height - oy;\n\n        var top: number = sizeGrid[0];\n        top -= oy;\n        if (0 > top) {\n            oy += top;\n            top = 0;\n        }\n        ty += oy;\n\n        var left: number = sizeGrid[3];\n        left -= ox;\n        if (0 > left) {\n            ox += left;\n            left = 0;\n        }\n        tx += ox;\n\n        var right: number = sizeGrid[1];\n        right -= ow;\n        if (0 > right) {\n            ow += right;\n            right = 0;\n        }\n        var bottom: number = sizeGrid[2];\n        bottom -= oh;\n        if (0 > bottom) {\n            oh += bottom;\n            bottom = 0;\n        }\n        width -= ox + ow;\n        height -= oy + oh;\n\n        var repeat: boolean = sizeGrid[4];\n        var needClip: boolean = false;\n\n        if (width == tex.width) {\n            left = right = 0;\n        }\n        if (height == tex.height) {\n            top = bottom = 0;\n        }\n\n        var d_top: number = top / h;\n        var d_left: number = left / w;\n        var d_right: number = right / w;\n        var d_bottom: number = bottom / h;\n\n        //处理进度条不好看的问题\n        // if (left + right > width) {\n        // \tvar clipWidth: number = width;\n        // \tneedClip = true;\n        // \twidth = left + right;\n        // \tthis.save();\n        // \tthis.clipRect(0 + tx, 0 + ty, clipWidth, height);\n        // }\n\n        var imgid: number = (tex.bitmap as Texture2D).id;\n        var mat: Matrix = this._curMat;\n        var tuv = this._tempUV;\n\n        //解决九宫格设置left+right或top+bottom的累加值超过宽或高导致九宫格显示错乱的bug\n        var scale_x = 1;\n        var scale_y = 1;\n        if (left + right > width) scale_x = width / (left + right);\n        if (top + bottom > height) scale_y = height / (top + bottom);\n        left *= scale_x;\n        right *= scale_x;\n        top *= scale_y;\n        bottom *= scale_y;\n\n        // 整图的uv\n        // 一定是方的，所以uv只要左上右下就行\n        var uvl = uv[0];\n        var uvt = uv[1];\n        var uvr = uv[4];\n        var uvb = uv[5];\n\n        // 小图的uv\n        var uvl_ = uvl;\n        var uvt_ = uvt;\n        var uvr_ = uvr;\n        var uvb_ = uvb;\n\n        //绘制四个角\n        // 构造uv\n        if (left && top) {\n            uvr_ = uvl + d_left;\n            uvb_ = uvt + d_top;\n            tuv[0] = uvl, tuv[1] = uvt, tuv[2] = uvr_, tuv[3] = uvt,\n                tuv[4] = uvr_, tuv[5] = uvb_, tuv[6] = uvl, tuv[7] = uvb_;\n            this._inner_drawTexture(tex, imgid, tx, ty, left, top, mat, tuv, 1, false, color);\n        }\n        if (right && top) {\n            uvl_ = uvr - d_right; uvt_ = uvt;\n            uvr_ = uvr; uvb_ = uvt + d_top;\n            tuv[0] = uvl_, tuv[1] = uvt_, tuv[2] = uvr_, tuv[3] = uvt_,\n                tuv[4] = uvr_, tuv[5] = uvb_, tuv[6] = uvl_, tuv[7] = uvb_;\n            this._inner_drawTexture(tex, imgid, width - right + tx, 0 + ty, right, top, mat, tuv, 1, false, color);\n        }\n        if (left && bottom) {\n            uvl_ = uvl; uvt_ = uvb - d_bottom;\n            uvr_ = uvl + d_left; uvb_ = uvb;\n            tuv[0] = uvl_, tuv[1] = uvt_, tuv[2] = uvr_, tuv[3] = uvt_,\n                tuv[4] = uvr_, tuv[5] = uvb_, tuv[6] = uvl_, tuv[7] = uvb_;\n            this._inner_drawTexture(tex, imgid, 0 + tx, height - bottom + ty, left, bottom, mat, tuv, 1, false, color);\n        }\n        if (right && bottom) {\n            uvl_ = uvr - d_right; uvt_ = uvb - d_bottom;\n            uvr_ = uvr; uvb_ = uvb;\n            tuv[0] = uvl_, tuv[1] = uvt_, tuv[2] = uvr_, tuv[3] = uvt_,\n                tuv[4] = uvr_, tuv[5] = uvb_, tuv[6] = uvl_, tuv[7] = uvb_;\n            this._inner_drawTexture(tex, imgid, width - right + tx, height - bottom + ty, right, bottom, mat, tuv, 1, false, color);\n        }\n        //绘制上下两个边\n        if (top) {\n            uvl_ = uvl + d_left; uvt_ = uvt;\n            uvr_ = uvr - d_right; uvb_ = uvt + d_top;\n            tuv[0] = uvl_, tuv[1] = uvt_, tuv[2] = uvr_, tuv[3] = uvt_,\n                tuv[4] = uvr_, tuv[5] = uvb_, tuv[6] = uvl_, tuv[7] = uvb_;\n            if (repeat) {\n                this._fillTexture_h(tex, imgid, tuv, tex.width - left - right, top, left + tx, ty, width - left - right, color);\n            } else {\n                this._inner_drawTexture(tex, imgid, left + tx, ty, width - left - right, top, mat, tuv, 1, false, color);\n            }\n\n        }\n        if (bottom) {\n            uvl_ = uvl + d_left; uvt_ = uvb - d_bottom;\n            uvr_ = uvr - d_right; uvb_ = uvb;\n            tuv[0] = uvl_, tuv[1] = uvt_, tuv[2] = uvr_, tuv[3] = uvt_,\n                tuv[4] = uvr_, tuv[5] = uvb_, tuv[6] = uvl_, tuv[7] = uvb_;\n            if (repeat) {\n                this._fillTexture_h(tex, imgid, tuv, tex.width - left - right, bottom, left + tx, height - bottom + ty, width - left - right, color);\n            } else {\n                this._inner_drawTexture(tex, imgid, left + tx, height - bottom + ty, width - left - right, bottom, mat, tuv, 1, false, color);\n            }\n        }\n        //绘制左右两边\n        if (left) {\n            uvl_ = uvl; uvt_ = uvt + d_top;\n            uvr_ = uvl + d_left; uvb_ = uvb - d_bottom;\n            tuv[0] = uvl_, tuv[1] = uvt_, tuv[2] = uvr_, tuv[3] = uvt_,\n                tuv[4] = uvr_, tuv[5] = uvb_, tuv[6] = uvl_, tuv[7] = uvb_;\n            if (repeat) {\n                this._fillTexture_v(tex, imgid, tuv, left, tex.height - top - bottom, tx, top + ty, height - top - bottom, color);\n            } else {\n                this._inner_drawTexture(tex, imgid, tx, top + ty, left, height - top - bottom, mat, tuv, 1, false, color);\n            }\n        }\n        if (right) {\n            uvl_ = uvr - d_right; uvt_ = uvt + d_top;\n            uvr_ = uvr; uvb_ = uvb - d_bottom;\n            tuv[0] = uvl_, tuv[1] = uvt_, tuv[2] = uvr_, tuv[3] = uvt_,\n                tuv[4] = uvr_, tuv[5] = uvb_, tuv[6] = uvl_, tuv[7] = uvb_;\n            if (repeat) {\n                this._fillTexture_v(tex, imgid, tuv, right, tex.height - top - bottom, width - right + tx, top + ty, height - top - bottom, color);\n            } else {\n                this._inner_drawTexture(tex, imgid, width - right + tx, top + ty, right, height - top - bottom, mat, tuv, 1, false, color);\n            }\n        }\n        //绘制中间\n        uvl_ = uvl + d_left; uvt_ = uvt + d_top;\n        uvr_ = uvr - d_right; uvb_ = uvb - d_bottom;\n        tuv[0] = uvl_, tuv[1] = uvt_, tuv[2] = uvr_, tuv[3] = uvt_,\n            tuv[4] = uvr_, tuv[5] = uvb_, tuv[6] = uvl_, tuv[7] = uvb_;\n        if (repeat) {\n            var tuvr: any[] = Context.tmpUVRect;\n            tuvr[0] = uvl_; tuvr[1] = uvt_;\n            tuvr[2] = uvr_ - uvl_; tuvr[3] = uvb_ - uvt_;\n            // 这个如果用重复的可能比较多，所以采用filltexture的方法，注意这样会打断合并\n            this._fillTexture(tex, tex.width - left - right, tex.height - top - bottom, tuvr, left + tx, top + ty, width - left - right, height - top - bottom, 'repeat', 0, 0, color);\n        } else {\n            this._inner_drawTexture(tex, imgid, left + tx, top + ty, width - left - right, height - top - bottom, mat, tuv, 1, false, color);\n        }\n\n        if (needClip) this.restore();\n    }\n    addRenderObject3D(scene3D: ISubmit): void {\n        this._curSubmit = SubmitBase.RENDERBASE;//打断2D合并的renderKey\n        this.addRenderObject(scene3D);\n    }\n}\n\n\n/** @internal */\nclass ContextParams {\n    static DEFAULT: ContextParams;\n\n    lineWidth: number = 1;\n    textAlign: string;\n    textBaseline: string;\n\n    clear(): void {\n        this.lineWidth = 1;\n        this.textAlign = this.textBaseline = null;\n    }\n\n    make(): ContextParams {\n        return this === ContextParams.DEFAULT ? new ContextParams() : this;\n    }\n}\n// native\nif ((window as any).conch && !(window as any).conchConfig.conchWebGL) {\n    //@ts-ignore\n    Context = NativeContext;\n}\n","import { Texture } from \"./Texture\";\nimport { Texture2D } from \"./Texture2D\";\nimport { Context } from \"./Context\";\nimport { Browser } from \"../utils/Browser\";\nimport { RenderTexture2D } from \"./RenderTexture2D\";\nimport { Resource } from \"./Resource\";\nimport { TextureFormat } from \"../RenderEngine/RenderEnum/TextureFormat\";\nimport { LayaEnv } from \"../../LayaEnv\";\n\n/**\n * <code>HTMLCanvas</code> 是 Html Canvas 的代理类，封装了 Canvas 的属性和方法。\n */\nexport class HTMLCanvas extends Resource {\n\n    private _ctx: any;\n    /**@internal */\n    _source: HTMLCanvasElement;\n    /**@internal */\n    _texture: Texture | RenderTexture2D;\n    /**@private */\n    protected _width: number;\n    /**@private */\n    protected _height: number;\n\n    /**\n     * @inheritDoc\n     */\n    get source() {\n        return this._source;\n    }\n\n    /**\n     * 获取宽度。\n     */\n    get width(): number {\n        return this._width;\n    }\n\n    set width(width: number) {\n        this._width = width;\n    }\n\n    /***\n     * 获取高度。\n     */\n    get height(): number {\n        return this._height;\n    }\n\n    set height(height: number) {\n        this._height = height;\n    }\n\n    /**@internal \n     * @override\n    */\n    _getSource() {\n        return this._source;\n    }\n    /**\n     * 根据指定的类型，创建一个 <code>HTMLCanvas</code> 实例。\n     */\n    constructor(createCanvas: boolean = false) {\n        super();\n        if (createCanvas)\t//webgl模式下不建立。除非强制指，例如绘制文字部分\n            this._source = Browser.createElement(\"canvas\");\n        else {\n            this._source = this as unknown as HTMLCanvasElement;\n        }\n        this.lock = true;\n    }\n\n    /**\n     * 清空画布内容。\n     */\n    clear(): void {\n        if (this._ctx) {\n            if (this._ctx.clear) {\n                this._ctx.clear();\n            } else {\n                this._ctx.clearRect(0, 0, this._width, this._height);\n            }\n        }\n        if (this._texture) {\n            this._texture.destroy();\n            this._texture = null;\n        }\n    }\n\n    /**\n     * 销毁。\n     * @override\n     */\n    destroy(): void {\n        super.destroy();\n        this._setCPUMemory(0);\n        this._ctx && this._ctx.destroy && this._ctx.destroy();\n        this._ctx = null;\n    }\n\n    /**\n     * 释放。\n     */\n    release(): void {\n    }\n\n    /**\n     * Canvas 渲染上下文。\n     */\n    get context(): Context {\n        if (this._ctx) return this._ctx;\n        //@ts-ignore\n        if (this._source == this) {\t//是webgl并且不是真的画布。如果是真的画布，可能真的想要2d context\n            // @ts-ignore\n            this._ctx = new Context();\n        } else {\n            //@ts-ignore\n            this._ctx = this._source.getContext(LayaEnv.isConch ? 'layagl' : '2d');\n        }\n        this._ctx._canvas = this;\n        return this._ctx;\n    }\n\n    /**\n     * @internal\n     * 设置 Canvas 渲染上下文。是webgl用来替换_ctx用的\n     * @param\tcontext Canvas 渲染上下文。\n     */\n    _setContext(context: Context): void {\n        this._ctx = context;\n    }\n\n    /**\n     * 获取 Canvas 渲染上下文。\n     * @param\tcontextID 上下文ID.\n     * @param\tother\n     * @return  Canvas 渲染上下文 Context 对象。\n     */\n    getContext(contextID: string, other: any = null): Context {\n        return this.context;\n    }\n\n\n    /**\n     * 获取内存大小。\n     * @return 内存大小。\n     */\n    //TODO:coverage\n    getMemSize(): number {\n        return 0;//TODO:待调整\n    }\n\n    /**\n     * 设置宽高。\n     * @param\tw 宽度。\n     * @param\th 高度。\n     */\n    size(w: number, h: number): void {\n        if (this._width != w || this._height != h || (this._source && (this._source.width != w || this._source.height != h))) {\n            this._width = w;\n            this._height = h;\n            this._setCPUMemory(w * h * 4);\n            this._ctx && this._ctx.size && this._ctx.size(w, h);\n            if (this._source) {// && this._source instanceof HTMLCanvasElement){\n                this._source.height = h;\n                this._source.width = w;\n            }\n            if (this._texture) {\n                this._texture.destroy();\n                this._texture = null;\n            }\n        }\n    }\n\n    /**\n     * 获取texture实例\n     */\n    getTexture(): Texture | null | RenderTexture2D {\n        if (!this._texture) {\n            var bitmap: Texture2D = new Texture2D(this.source.width, this.source.height, TextureFormat.R8G8B8A8, true, false, false);\n            bitmap.setImageData(this.source, false, false);\n            this._texture = new Texture(bitmap);\n        }\n        return this._texture;\n    }\n\n    /**\n     * 把图片转换为base64信息\n     * @param\ttype \"image/png\"\n     * @param\tencoderOptions\t质量参数，取值范围为0-1\n     */\n    toBase64(type: string, encoderOptions: number): string | null {\n        if (this._source) {\n            if (LayaEnv.isConch) {\n                var win: any = window as any;\n                var width: number = this._ctx._targets.sourceWidth;\n                var height: number = this._ctx._targets.sourceHeight;\n                var data: any = this._ctx._targets.getData(0, 0, width, height);\n                return win.conchToBase64FlipY ? win.conchToBase64FlipY(type, encoderOptions, data.buffer, width, height) : win.conchToBase64(type, encoderOptions, data.buffer, width, height);\n            }\n            else {\n                return (this._source as HTMLCanvasElement).toDataURL(type, encoderOptions);\n            }\n        }\n        return null;\n    }\n\n    /**\n     * native多线程转图片\n     * @param type \n     * @param encoderOptions \n     * @param callBack \n     */\n    toBase64Async(type: string, encoderOptions: number, callBack: Function): void {\n        var width: number = this._ctx._targets.sourceWidth;\n        var height: number = this._ctx._targets.sourceHeight;\n        this._ctx._targets.getDataAsync(0, 0, width, height, function (data: Uint8Array): void {\n            let win = window as any;\n            var base64 = win.conchToBase64FlipY ? win.conchToBase64FlipY(type, encoderOptions, data.buffer, width, height) : win.conchToBase64(type, encoderOptions, data.buffer, width, height);\n            callBack(base64);\n        });\n    }\n}\n\n","import { Rectangle } from \"../../maths/Rectangle\"\nimport { Pool } from \"../../utils/Pool\"\n\n/**\n * @internal\n * Graphic bounds数据类\n */\nexport class BoundsStyle {\n    /**@private */\n    bounds: Rectangle|null;\n    /**用户设的bounds*/\n    userBounds: Rectangle|null;\n    /**缓存的bounds顶点,sprite计算bounds用*/\n    temBM: any[]|null;\n\n    /**\n     * 重置\n     */\n    reset(): BoundsStyle {\n        if (this.bounds) this.bounds.recover();\n        if (this.userBounds) this.userBounds.recover();\n        this.bounds = null;\n        this.userBounds = null;\n        this.temBM = null;\n        return this;\n    }\n\n    /**\n     * 回收\n     */\n    recover(): void {\n        Pool.recover(\"BoundsStyle\", this.reset());\n    }\n\n    /**\n     * 创建\n     */\n    static create(): BoundsStyle {\n        return Pool.getItemByClass(\"BoundsStyle\", BoundsStyle);\n    }\n}\n\n","import { Sprite } from \"../Sprite\"\nimport { Point } from \"../../maths/Point\"\nimport { Rectangle } from \"../../maths/Rectangle\"\nimport { Context } from \"../../resource/Context\"\nimport { HTMLCanvas } from \"../../resource/HTMLCanvas\"\nimport { Pool } from \"../../utils/Pool\"\n\n/**\n * @internal\n * 存储cache相关\n */\nexport class CacheStyle {\n\n    static EMPTY: CacheStyle = new CacheStyle();\n    /**当前实际的cache状态*/\n    cacheAs: string;\n    /**是否开启canvas渲染*/\n    enableCanvasRender: boolean;\n    /**用户设的cacheAs类型*/\n    userSetCache: string;\n    /**是否需要为滤镜cache*/\n    cacheForFilters: boolean;\n    /**是否为静态缓存*/\n    staticCache: boolean;\n    /**是否需要刷新缓存*/\n    reCache: boolean;\n    /**mask对象*/\n    mask: Sprite;\n    /**作为mask时的父对象*/\n    maskParent: Sprite;\n    /**滤镜数据*/\n    filters: any[];\n    /**当前缓存区域*/\n    cacheRect: Rectangle;\n    /**当前使用的canvas*/\n    canvas: HTMLCanvas;\n    //TODO:webgl是否还需要\n    /**滤镜数据*/\n    filterCache: any;\n    //TODO:webgl是否还需要\n    /**是否有发光滤镜*/\n    hasGlowFilter: boolean;\n\n    constructor() {\n        this.reset();\n    }\n\n    /**\n     * 是否需要Bitmap缓存\n     * @return\n     */\n    needBitmapCache(): boolean {\n        return this.cacheForFilters || !!this.mask;\n    }\n\n    /**\n     * 是否需要开启canvas渲染\n     */\n    needEnableCanvasRender(): boolean {\n        return this.userSetCache != \"none\" || this.cacheForFilters || !!this.mask;\n    }\n\n    /**\n     * 释放cache的资源\n     */\n    releaseContext(): void {\n        if (this.canvas && ((<any>this.canvas)).size) {\n            Pool.recover(\"CacheCanvas\", this.canvas);\n            this.canvas.size(0, 0);\n            // 微信在iphone8和mate20上个bug，size存在但是不起作用，可能是canvas对象不是我们的。\n            // 为了避免canvas不消失，再强制设置宽高为0 TODO 没有测试\n            try {\n                ((<any>this.canvas)).width = 0;\n                ((<any>this.canvas)).height = 0;\n            } catch (e) {\n\n            }\n        }\n        this.canvas = null;\n    }\n\n    createContext(): void {\n        if (!this.canvas) {\n            this.canvas = Pool.getItem(\"CacheCanvas\") || new HTMLCanvas(false);\n            var tx: Context = this.canvas.context as Context;\n            if (!tx) {\n                tx = this.canvas.getContext('2d') as Context;\t//如果是webGL的话，这个会返回WebGLContext2D\n            }\n        }\n    }\n    /**\n     * 释放滤镜资源\n     */\n    releaseFilterCache(): void {\n        var fc: any = this.filterCache;\n        if (fc) {\n            fc.destroy();\n            fc.recycle();\n            this.filterCache = null;\n        }\n    }\n\n    /**\n     * 回收\n     */\n    recover(): void {\n        if (this === CacheStyle.EMPTY) return;\n        Pool.recover(\"SpriteCache\", this.reset());\n    }\n\n    /**\n     * 重置\n     */\n    reset(): CacheStyle {\n        this.releaseContext();\n        this.releaseFilterCache();\n        this.cacheAs = \"none\";\n        this.enableCanvasRender = false;\n        this.userSetCache = \"none\";\n        this.cacheForFilters = false;\n        this.staticCache = false;\n        this.reCache = true;\n        this.mask = null;\n        this.maskParent = null;\n        this.filterCache = null;\n        this.filters = null;\n        this.hasGlowFilter = false;\n        if (this.cacheRect) this.cacheRect.recover();\n        this.cacheRect = null;\n        return this\n    }\n\n    /**\n     * 创建一个SpriteCache\n     */\n    static create(): CacheStyle {\n        return Pool.getItemByClass(\"SpriteCache\", CacheStyle);\n    }\n\n    private static _scaleInfo: Point = new Point();\n    static CANVAS_EXTEND_EDGE: number = 16;\n    /**\n    * @internal\n    */\n    _calculateCacheRect(sprite: Sprite, tCacheType: string, x: number, y: number): Point {\n        var _cacheStyle: CacheStyle = sprite._cacheStyle;\n        if (!_cacheStyle.cacheRect)\n            _cacheStyle.cacheRect = Rectangle.create();\n        var tRec: Rectangle;\n\n        //计算显示对象的绘图区域\n        if (tCacheType === \"bitmap\") {\n            tRec = sprite.getSelfBounds();\n            tRec.width = tRec.width + CacheStyle.CANVAS_EXTEND_EDGE * 2;\n            tRec.height = tRec.height + CacheStyle.CANVAS_EXTEND_EDGE * 2;\n            tRec.x = tRec.x - sprite.pivotX;\n            tRec.y = tRec.y - sprite.pivotY;\n            tRec.x = tRec.x - CacheStyle.CANVAS_EXTEND_EDGE;\n            tRec.y = tRec.y - CacheStyle.CANVAS_EXTEND_EDGE;\n            tRec.x = Math.floor(tRec.x + x) - x;\n            tRec.y = Math.floor(tRec.y + y) - y;\n            tRec.width = Math.floor(tRec.width);\n            tRec.height = Math.floor(tRec.height);\n            _cacheStyle.cacheRect.copyFrom(tRec);\n        } else {\n            _cacheStyle.cacheRect.setTo(-sprite._style.pivotX, -sprite._style.pivotY, 1, 1);\n        }\n        tRec = _cacheStyle.cacheRect;\n\n\n        //处理显示对象的scrollRect偏移\n        if (sprite._style.scrollRect) {\n            var scrollRect: Rectangle = sprite._style.scrollRect;\n            tRec.x -= scrollRect.x;\n            tRec.y -= scrollRect.y;\n        }\n        CacheStyle._scaleInfo.setTo(1, 1);\n\n        return CacheStyle._scaleInfo;\n    }\n}\n\n","import { Rectangle } from \"../../maths/Rectangle\"\nimport { Dragging } from \"../../utils/Dragging\"\nimport { IHitArea } from \"../../utils/IHitArea\";\nimport { Pool } from \"../../utils/Pool\"\n\n/**\n * 元素样式\n */\nexport class SpriteStyle {\n\n    static readonly EMPTY: Readonly<SpriteStyle> = new SpriteStyle();\n\n    /**水平缩放 */\n    scaleX: number;\n    /**垂直缩放 */\n    scaleY: number;\n    /**水平倾斜角度 */\n    skewX: number;\n    /**垂直倾斜角度 */\n    skewY: number;\n    /**X轴心点 */\n    pivotX: number;\n    /**Y轴心点 */\n    pivotY: number;\n    /**旋转角度 */\n    rotation: number;\n    /**透明度 */\n    alpha: number;\n    /**滚动区域 */\n    scrollRect: Rectangle;\n    /**视口 */\n    viewport: Rectangle;\n    /**点击区域 */\n    hitArea: IHitArea;\n    /**滑动 */\n    dragging: Dragging;\n    /**混合模式 */\n    blendMode: string;\n\n    constructor() {\n        this.reset();\n    }\n\n    /**\n     * 重置，方便下次复用\n     */\n    reset(): SpriteStyle {\n        this.scaleX = this.scaleY = 1;\n        this.skewX = this.skewY = 0;\n        this.pivotX = this.pivotY = this.rotation = 0;\n        this.alpha = 1;\n        if (this.scrollRect) this.scrollRect.recover();\n        this.scrollRect = null;\n        if (this.viewport) this.viewport.recover();\n        this.viewport = null;\n        this.hitArea = null;\n        this.dragging = null;\n        this.blendMode = null;\n        return this\n    }\n\n    /**\n     * 回收\n     */\n    recover(): void {\n        if (this === SpriteStyle.EMPTY) return;\n        Pool.recover(\"SpriteStyle\", this.reset());\n    }\n\n    /**\n     * 从对象池中创建\n     */\n    static create(): SpriteStyle {\n        return Pool.getItemByClass(\"SpriteStyle\", SpriteStyle);\n    }\n}\n\n","import { Context } from \"../../resource/Context\"\nimport { Pool } from \"../../utils/Pool\"\n\n/**\n * 透明命令\n */\nexport class AlphaCmd {\n    static ID: string = \"Alpha\";\n\n    /**\n     * 透明度\n     */\n    alpha: number;\n\n    /**@private */\n    static create(alpha: number): AlphaCmd {\n        var cmd: AlphaCmd = Pool.getItemByClass(\"AlphaCmd\", AlphaCmd);\n        cmd.alpha = alpha;\n        return cmd;\n    }\n\n    /**\n     * 回收到对象池\n     */\n    recover(): void {\n        Pool.recover(\"AlphaCmd\", this);\n    }\n\n    /**@private */\n    run(context: Context, gx: number, gy: number): void {\n        context.alpha(this.alpha);\n    }\n\n    /**@private */\n    get cmdID(): string {\n        return AlphaCmd.ID;\n    }\n}\n\n","import { Rectangle } from \"../../maths/Rectangle\";\nimport { Context } from \"../../resource/Context\"\nimport { ClassUtils } from \"../../utils/ClassUtils\";\nimport { Pool } from \"../../utils/Pool\"\n\n/**\n * 绘制圆形\n */\nexport class DrawCircleCmd {\n    static ID: string = \"DrawCircle\";\n\n    /**\n     * 圆点X 轴位置。\n     */\n    x: number;\n    /**\n     * 圆点Y 轴位置。\n     */\n    y: number;\n    /**\n     * 半径。\n     */\n    radius: number;\n    /**\n     * 填充颜色，或者填充绘图的渐变对象。\n     */\n    fillColor: any;\n    /**\n     * （可选）边框颜色，或者填充绘图的渐变对象。\n     */\n    lineColor: any;\n    /**\n     * （可选）边框宽度。\n     */\n    lineWidth: number = 0;\n\n    /**\n     * 位置和大小是否是百分比\n     */\n    percent: boolean;\n\n    /**@private */\n    static create(x: number, y: number, radius: number, fillColor: any, lineColor: any, lineWidth: number): DrawCircleCmd {\n        var cmd: DrawCircleCmd = Pool.getItemByClass(\"DrawCircleCmd\", DrawCircleCmd);\n        cmd.x = x;\n        cmd.y = y;\n        cmd.radius = radius;\n        cmd.fillColor = fillColor;\n        cmd.lineColor = lineColor;\n        cmd.lineWidth = lineWidth;\n        return cmd;\n    }\n\n    /**\n     * 回收到对象池\n     */\n    recover(): void {\n        this.fillColor = null;\n        this.lineColor = null;\n        Pool.recover(\"DrawCircleCmd\", this);\n    }\n\n    /**@private */\n    run(context: Context, gx: number, gy: number): void {\n        let offset = (this.lineWidth >= 1 && this.lineColor) ? this.lineWidth / 2 : 0;\n        if (this.percent && context.sprite) {\n            let w = context.sprite.width;\n            let h = context.sprite.height;\n            context._drawCircle(this.x * w + gx, this.y * h + gy, this.radius * Math.min(w, h) - offset, this.fillColor, this.lineColor, this.lineWidth, 0);\n        }\n        else\n            context._drawCircle(this.x + gx, this.y + gy, this.radius - offset, this.fillColor, this.lineColor, this.lineWidth, 0);\n    }\n\n    /**@private */\n    get cmdID(): string {\n        return DrawCircleCmd.ID;\n    }\n\n    getBoundPoints(sp?: { width: number, height?: number }): number[] {\n        return Rectangle._getBoundPointS(this.x - this.radius, this.y - this.radius, this.radius + this.radius, this.radius + this.radius, this.percent ? sp : null);\n    }\n}\n\nClassUtils.regClass(\"DrawCircleCmd\", DrawCircleCmd);\n","import { Bezier } from \"../../maths/Bezier\";\nimport { Context } from \"../../resource/Context\"\nimport { ClassUtils } from \"../../utils/ClassUtils\";\nimport { Pool } from \"../../utils/Pool\"\n\n/**\n * 绘制曲线\n */\nexport class DrawCurvesCmd {\n    static ID: string = \"DrawCurves\";\n\n    /**\n     * 开始绘制的 X 轴位置。\n     */\n    x: number;\n    /**\n     * 开始绘制的 Y 轴位置。\n     */\n    y: number;\n    /**\n     * 线段的点集合，格式[controlX, controlY, anchorX, anchorY...]。\n     */\n    points: number[] | null;\n    /**\n     * 线段颜色，或者填充绘图的渐变对象。\n     */\n    lineColor: any;\n    /**\n     * （可选）线段宽度。\n     */\n    lineWidth: number;\n\n    /**@private */\n    static create(x: number, y: number, points: any[], lineColor: any, lineWidth: number): DrawCurvesCmd {\n        var cmd: DrawCurvesCmd = Pool.getItemByClass(\"DrawCurvesCmd\", DrawCurvesCmd);\n        cmd.x = x;\n        cmd.y = y;\n        cmd.points = points;\n        cmd.lineColor = lineColor;\n        cmd.lineWidth = lineWidth;\n        return cmd;\n    }\n\n    /**\n     * 回收到对象池\n     */\n    recover(): void {\n        this.points = null;\n        this.lineColor = null;\n        Pool.recover(\"DrawCurvesCmd\", this);\n    }\n\n    /**@private */\n    run(context: Context, gx: number, gy: number): void {\n        if (this.points)\n            context.drawCurves(this.x + gx, this.y + gy, this.points, this.lineColor, this.lineWidth);\n    }\n\n    /**@private */\n    get cmdID(): string {\n        return DrawCurvesCmd.ID;\n    }\n\n    getBoundPoints(sp?: { width: number, height?: number }): number[] {\n        return Bezier.I.getBezierPoints(this.points);\n    }\n}\n\nClassUtils.regClass(\"DrawCurvesCmd\", DrawCurvesCmd);","import { Context } from \"../../resource/Context\"\nimport { Texture } from \"../../resource/Texture\"\nimport { ColorUtils } from \"../../utils/ColorUtils\";\nimport { Pool } from \"../../utils/Pool\"\n\n/**\n * 绘制图片\n */\nexport class DrawImageCmd {\n    static ID: string = \"DrawImage\";\n\n    /**\n     * 纹理。\n     */\n    texture: Texture | null;\n    /**\n     * （可选）X轴偏移量。\n     */\n    x: number;\n    /**\n     * （可选）Y轴偏移量。\n     */\n    y: number;\n    /**\n     * （可选）宽度。\n     */\n    width: number;\n    /**\n     * （可选）高度。\n     */\n    height: number;\n\n    /** （可选）绘图颜色 */\n    color: number = 0xffffffff;\n\n    /**@private */\n    static create(texture: Texture, x: number, y: number, width: number, height: number, color: string): DrawImageCmd {\n        if (width == null) width = texture.sourceWidth;\n        if (height == null) height = texture.sourceHeight;\n\n        let wRate = width / texture.sourceWidth;\n        let hRate = height / texture.sourceHeight;\n        width = texture.width * wRate;\n        height = texture.height * hRate;\n\n        x += texture.offsetX * wRate;\n        y += texture.offsetY * hRate;\n\n        var cmd: DrawImageCmd = Pool.getItemByClass(\"DrawImageCmd\", DrawImageCmd);\n        cmd.texture = texture;\n        texture._addReference();\n        cmd.x = x;\n        cmd.y = y;\n        cmd.width = width;\n        cmd.height = height;\n        cmd.color = color != null ? ColorUtils.create(color).numColor : 0xffffffff;\n        return cmd;\n    }\n\n    /**\n     * 回收到对象池\n     */\n    recover(): void {\n        this.texture && this.texture._removeReference();\n        this.texture = null;\n        Pool.recover(\"DrawImageCmd\", this);\n    }\n\n    /**@private */\n    run(context: Context, gx: number, gy: number): void {\n        if (this.texture) {\n            context.drawTexture(this.texture, this.x + gx, this.y + gy, this.width, this.height, this.color);\n        }\n    }\n\n    /**@private */\n    get cmdID(): string {\n        return DrawImageCmd.ID;\n    }\n\n}\n\n","import { Context } from \"../../resource/Context\"\nimport { ClassUtils } from \"../../utils/ClassUtils\";\nimport { Pool } from \"../../utils/Pool\"\n\n/**\n * 绘制单条曲线\n */\nexport class DrawLineCmd {\n    static ID: string = \"DrawLine\";\n\n    /**\n     * X轴开始位置。\n     */\n    fromX: number;\n    /**\n     * Y轴开始位置。\n     */\n    fromY: number;\n    /**\n     * X轴结束位置。\n     */\n    toX: number;\n    /**\n     * Y轴结束位置。\n     */\n    toY: number;\n    /**\n     * 颜色。\n     */\n    lineColor: string;\n    /**\n     * （可选）线条宽度。\n     */\n    lineWidth: number = 0;\n\n    /**\n     * 位置是否是百分比\n     */\n    percent: boolean;\n\n    /**@private */\n    static create(fromX: number, fromY: number, toX: number, toY: number, lineColor: string, lineWidth: number): DrawLineCmd {\n        var cmd: DrawLineCmd = Pool.getItemByClass(\"DrawLineCmd\", DrawLineCmd);\n        cmd.fromX = fromX;\n        cmd.fromY = fromY;\n        cmd.toX = toX;\n        cmd.toY = toY;\n        cmd.lineColor = lineColor;\n        cmd.lineWidth = lineWidth;\n        return cmd;\n    }\n\n    /**\n     * 回收到对象池\n     */\n    recover(): void {\n        Pool.recover(\"DrawLineCmd\", this);\n    }\n\n    /**@private */\n    run(context: Context, gx: number, gy: number): void {\n        let offset = (this.lineWidth < 1 || this.lineWidth % 2 === 0) ? 0 : 0.5;\n        if (this.percent && context.sprite) {\n            let w = context.sprite.width;\n            let h = context.sprite.height;\n            context._drawLine(gx, gy, this.fromX * w + offset, this.fromY * h + offset, this.toX * w + offset, this.toY * h + offset, this.lineColor, this.lineWidth, 0);\n        }\n        else\n            context._drawLine(gx, gy, this.fromX + offset, this.fromY + offset, this.toX + offset, this.toY + offset, this.lineColor, this.lineWidth, 0);\n    }\n\n    /**@private */\n    get cmdID(): string {\n        return DrawLineCmd.ID;\n    }\n\n    getBoundPoints(sp?: { width: number, height?: number }): number[] {\n        _tempPoints.length = 0;\n        let lineWidth: number;\n        lineWidth = this.lineWidth * 0.5;\n\n        let fromX = this.fromX, fromY = this.fromY, toX = this.toX, toY = this.toY;\n        if (this.percent) {\n            fromX *= sp.width;\n            fromY *= sp.height;\n            toX *= sp.width;\n            toY *= sp.height;\n        }\n\n        if (fromX == toX) {\n            _tempPoints.push(fromX + lineWidth, fromY, toX + lineWidth, toY, fromX - lineWidth, fromY, toX - lineWidth, toY);\n        } else if (fromY == toY) {\n            _tempPoints.push(fromX, fromY + lineWidth, toX, toY + lineWidth, fromX, fromY - lineWidth, toX, toY - lineWidth);\n        } else {\n            _tempPoints.push(fromX, fromY, toX, toY);\n        }\n\n        return _tempPoints;\n    }\n}\nconst _tempPoints: any[] = [];\n\nClassUtils.regClass(\"DrawLineCmd\", DrawLineCmd);","import { Context } from \"../../resource/Context\"\nimport { ClassUtils } from \"../../utils/ClassUtils\";\nimport { Pool } from \"../../utils/Pool\"\n\n/**\n * 绘制连续曲线\n */\nexport class DrawLinesCmd {\n    static ID: string = \"DrawLines\";\n\n    /**\n     * 开始绘制的X轴位置。\n     */\n    x: number;\n    /**\n     * 开始绘制的Y轴位置。\n     */\n    y: number;\n    /**\n     * 线段的点集合。格式:[x1,y1,x2,y2,x3,y3...]。\n     */\n    points: number[] | null;\n    /**\n     * 线段颜色，或者填充绘图的渐变对象。\n     */\n    lineColor: any;\n    /**\n     * （可选）线段宽度。\n     */\n    lineWidth: number = 0;\n\n    /**@private */\n    static create(x: number, y: number, points: any[], lineColor: any, lineWidth: number): DrawLinesCmd {\n        var cmd: DrawLinesCmd = Pool.getItemByClass(\"DrawLinesCmd\", DrawLinesCmd);\n        //TODO 线段需要缓存\n        cmd.x = x;\n        cmd.y = y;\n        cmd.points = points;\n        cmd.lineColor = lineColor;\n        cmd.lineWidth = lineWidth;\n        return cmd;\n    }\n\n    /**\n     * 回收到对象池\n     */\n    recover(): void {\n        this.points = null;\n        this.lineColor = null;\n        Pool.recover(\"DrawLinesCmd\", this);\n    }\n\n    /**@private */\n    run(context: Context, gx: number, gy: number): void {\n        let offset = (this.lineWidth < 1 || this.lineWidth % 2 === 0) ? 0 : 0.5;\n        this.points && context._drawLines(this.x + offset + gx, this.y + offset + gy, this.points, this.lineColor, this.lineWidth, 0);\n    }\n\n    /**@private */\n    get cmdID(): string {\n        return DrawLinesCmd.ID;\n    }\n\n}\n\nClassUtils.regClass(\"DrawLinesCmd\", DrawLinesCmd);","import { Context } from \"../../resource/Context\"\nimport { ClassUtils } from \"../../utils/ClassUtils\";\nimport { Pool } from \"../../utils/Pool\"\n\n/**\n * 根据路径绘制矢量图形\n */\nexport class DrawPathCmd {\n    static ID: string = \"DrawPath\";\n\n    /**\n     * 开始绘制的 X 轴位置。\n     */\n    x: number;\n    /**\n     * 开始绘制的 Y 轴位置。\n     */\n    y: number;\n    /**\n     * 路径集合，路径支持以下格式：[[\"moveTo\",x,y],[\"lineTo\",x,y],[\"arcTo\",x1,y1,x2,y2,r],[\"closePath\"]]。\n     */\n    paths: any[] | null;\n    /**\n     * （可选）刷子定义，支持以下设置{fillStyle:\"#FF0000\"}。\n     */\n    brush: any;\n    /**\n     * （可选）画笔定义，支持以下设置{strokeStyle,lineWidth,lineJoin:\"bevel|round|miter\",lineCap:\"butt|round|square\",miterLimit}。\n     */\n    pen: any;\n\n    /**@private */\n    static create(x: number, y: number, paths: any[], brush: any, pen: any): DrawPathCmd {\n        var cmd: DrawPathCmd = Pool.getItemByClass(\"DrawPathCmd\", DrawPathCmd);\n        cmd.x = x;\n        cmd.y = y;\n        cmd.paths = paths;\n        cmd.brush = brush;\n        cmd.pen = pen;\n        return cmd;\n    }\n\n    /**\n     * 回收到对象池\n     */\n    recover(): void {\n        this.paths = null;\n        this.brush = null;\n        this.pen = null;\n        Pool.recover(\"DrawPathCmd\", this);\n    }\n\n    /**@private */\n    run(context: Context, gx: number, gy: number): void {\n        this.paths && context._drawPath(this.x + gx, this.y + gy, this.paths, this.brush, this.pen);\n    }\n\n    /**@private */\n    get cmdID(): string {\n        return DrawPathCmd.ID;\n    }\n\n    getBoundPoints(sp?: { width: number, height?: number }): number[] {\n        let rst: any[] = _tempPoints;\n        rst.length = 0;\n        let paths = this.paths;\n        let len = paths.length;\n        for (let i = 0; i < len; i++) {\n            let tCMD = paths[i];\n            if (tCMD.length > 1) {\n                rst.push(tCMD[1], tCMD[2]);\n                if (tCMD.length > 3) {\n                    rst.push(tCMD[3], tCMD[4]);\n                }\n            }\n        }\n        return rst;\n    }\n}\n\nconst _tempPoints: any[] = [];\n\nClassUtils.regClass(\"DrawPathCmd\", DrawPathCmd);","import { Context } from \"../../resource/Context\"\nimport { ClassUtils } from \"../../utils/ClassUtils\";\nimport { Pool } from \"../../utils/Pool\"\n\n/**\n * 绘制扇形\n */\nexport class DrawPieCmd {\n    static ID: string = \"DrawPie\";\n\n    /**\n     * 开始绘制的 X 轴位置。\n     */\n    x: number;\n    /**\n     * 开始绘制的 Y 轴位置。\n     */\n    y: number;\n    /**\n     * 扇形半径。\n     */\n    radius: number = 0;\n\n    /**\n     * 填充颜色，或者填充绘图的渐变对象。\n     */\n    fillColor: any;\n    /**\n     * （可选）边框颜色，或者填充绘图的渐变对象。\n     */\n    lineColor: any;\n    /**\n     * （可选）边框宽度。\n     */\n    lineWidth: number = 0;\n\n    private _startAngle: number;\n    private _endAngle: number;\n\n    /**@private */\n    static create(x: number, y: number, radius: number, startAngle: number, endAngle: number, fillColor: any, lineColor: any, lineWidth: number): DrawPieCmd {\n        var cmd: DrawPieCmd = Pool.getItemByClass(\"DrawPieCmd\", DrawPieCmd);\n        cmd.x = x;\n        cmd.y = y;\n        cmd.radius = radius;\n        cmd._startAngle = startAngle;\n        cmd._endAngle = endAngle;\n        cmd.fillColor = fillColor;\n        cmd.lineColor = lineColor;\n        cmd.lineWidth = lineWidth;\n        return cmd;\n    }\n\n    /**\n     * 回收到对象池\n     */\n    recover(): void {\n        this.fillColor = null;\n        this.lineColor = null;\n        Pool.recover(\"DrawPieCmd\", this);\n    }\n\n    /**@private */\n    run(context: Context, gx: number, gy: number): void {\n        let offset = (this.lineWidth >= 1 && this.lineColor) ? this.lineWidth / 2 : 0;\n        let lineOffset = this.lineColor ? this.lineWidth : 0;\n        context._drawPie(this.x + offset + gx, this.y + offset + gy, this.radius - lineOffset, this._startAngle, this._endAngle, this.fillColor, this.lineColor, this.lineWidth, 0);\n    }\n\n    /**@private */\n    get cmdID(): string {\n        return DrawPieCmd.ID;\n    }\n\n    /**\n     * 开始角度。\n     */\n    get startAngle(): number {\n        return this._startAngle * 180 / Math.PI;\n    }\n\n    set startAngle(value: number) {\n        this._startAngle = value * Math.PI / 180;\n    }\n\n    /**\n     * 结束角度。\n     */\n    get endAngle(): number {\n        return this._endAngle * 180 / Math.PI;\n    }\n\n    set endAngle(value: number) {\n        this._endAngle = value * Math.PI / 180;\n    }\n\n    getBoundPoints(sp?: { width: number, height?: number }): number[] {\n        let rst: any[] = _tempPoints;\n        _tempPoints.length = 0;\n        let k: number = Math.PI / 180;\n        let d1: number = this.endAngle - this.startAngle;\n        let x = this.x, y = this.y, radius = this.radius;\n        if (d1 >= 360 || d1 <= -360) {\n            // 如果满了一圈了\n            rst.push(x - radius, y - radius);\n            rst.push(x + radius, y - radius);\n            rst.push(x + radius, y + radius);\n            rst.push(x - radius, y + radius);\n            return rst;\n        }\n        // \n        rst.push(x, y);\t// 中心\n\n        var delta: number = d1 % 360;\n        if (delta < 0) delta += 360;\n\n        // 一定增加，且在360以内的end\n        var end1: number = this.startAngle + delta;\n\n        // 转成弧度\n        var st: number = this.startAngle * k;\n        var ed: number = end1 * k;\n\n        // 起点\n        rst.push(x + radius * Math.cos(st), y + radius * Math.sin(st));\n        // 终点\n        rst.push(x + radius * Math.cos(ed), y + radius * Math.sin(ed));\n\n        // 圆形的四个边界点\n        // 按照90度对齐，看看会经历几个90度\n        var s1: number = Math.ceil(this.startAngle / 90) * 90;\t//开始的。start的下一个90度\n        var s2: number = Math.floor(end1 / 90) * 90;\t\t//结束。end的上一个90度\n        for (var cs: number = s1; cs <= s2; cs += 90) {\n            var csr: number = cs * k;\n            rst.push(x + radius * Math.cos(csr), y + radius * Math.sin(csr));\n        }\n        return rst;\n    }\n}\n\nconst _tempPoints: any[] = [];\n\nClassUtils.regClass(\"DrawPieCmd\", DrawPieCmd);","import { Context } from \"../../resource/Context\"\nimport { ClassUtils } from \"../../utils/ClassUtils\";\nimport { Pool } from \"../../utils/Pool\"\n\n/**\n * 绘制多边形\n */\nexport class DrawPolyCmd {\n    static ID: string = \"DrawPoly\";\n\n    /**\n     * 开始绘制的 X 轴位置。\n     */\n    x: number;\n    /**\n     * 开始绘制的 Y 轴位置。\n     */\n    y: number;\n    /**\n     * 多边形的点集合。\n     */\n    points: number[] | null;\n    /**\n     * 填充颜色，或者填充绘图的渐变对象。\n     */\n    fillColor: any;\n    /**\n     * （可选）边框颜色，或者填充绘图的渐变对象。\n     */\n    lineColor: any;\n    /**\n     * 可选）边框宽度。\n     */\n    lineWidth: number;\n\n    /**@private */\n    static create(x: number, y: number, points: any[], fillColor: any, lineColor: any, lineWidth: number): DrawPolyCmd {\n        var cmd: DrawPolyCmd = Pool.getItemByClass(\"DrawPolyCmd\", DrawPolyCmd);\n        cmd.x = x;\n        cmd.y = y;\n        cmd.points = points;\n        cmd.fillColor = fillColor;\n        cmd.lineColor = lineColor;\n        cmd.lineWidth = lineWidth;\n        return cmd;\n    }\n\n    /**\n     * 回收到对象池\n     */\n    recover(): void {\n        this.points = null;\n        this.fillColor = null;\n        this.lineColor = null;\n        Pool.recover(\"DrawPolyCmd\", this);\n    }\n\n    /**@private */\n    run(context: Context, gx: number, gy: number): void {\n        let isConvexPolygon = this.points.length <= 6;\n        let offset = (this.lineWidth >= 1 && this.lineColor) ? (this.lineWidth % 2 === 0 ? 0 : 0.5) : 0;\n        this.points && context._drawPoly(this.x + offset + gx, this.y + offset + gy, this.points, this.fillColor, this.lineColor, this.lineWidth, isConvexPolygon, 0);\n    }\n\n    /**@private */\n    get cmdID(): string {\n        return DrawPolyCmd.ID;\n    }\n}\n\nClassUtils.regClass(\"DrawPolyCmd\", DrawPolyCmd);","import { Rectangle } from \"../../maths/Rectangle\";\nimport { Context } from \"../../resource/Context\"\nimport { ClassUtils } from \"../../utils/ClassUtils\";\nimport { Pool } from \"../../utils/Pool\"\n\n/**\n * 绘制矩形\n */\nexport class DrawRectCmd {\n    static ID: string = \"DrawRect\";\n\n    /**\n     * 开始绘制的 X 轴位置。\n     */\n    x: number;\n    /**\n     * 开始绘制的 Y 轴位置。\n     */\n    y: number;\n    /**\n     * 矩形宽度。\n     */\n    width: number;\n    /**\n     * 矩形高度。\n     */\n    height: number;\n    /**\n     * 填充颜色，或者填充绘图的渐变对象。\n     */\n    fillColor: any;\n    /**\n     * （可选）边框颜色，或者填充绘图的渐变对象。\n     */\n    lineColor: any;\n    /**\n     * （可选）边框宽度。\n     */\n    lineWidth: number = 0;\n\n    /**\n     * 位置和大小是否是百分比\n     */\n    percent: boolean;\n\n    /**@private */\n    static create(x: number, y: number, width: number, height: number, fillColor: any, lineColor: any, lineWidth: number, percent?: boolean): DrawRectCmd {\n        var cmd: DrawRectCmd = Pool.getItemByClass(\"DrawRectCmd\", DrawRectCmd);\n        cmd.x = x;\n        cmd.y = y;\n        cmd.width = width;\n        cmd.height = height;\n        cmd.fillColor = fillColor;\n        cmd.lineColor = lineColor;\n        cmd.lineWidth = lineWidth;\n        cmd.percent = percent;\n        return cmd;\n    }\n\n    /**\n     * 回收到对象池\n     */\n    recover(): void {\n        this.fillColor = null;\n        this.lineColor = null;\n        Pool.recover(\"DrawRectCmd\", this);\n    }\n\n    /**@private */\n    run(context: Context, gx: number, gy: number): void {\n        let offset = (this.lineWidth >= 1 && this.lineColor) ? this.lineWidth / 2 : 0;\n        let lineOffset = this.lineColor ? this.lineWidth : 0;\n        if (this.percent && context.sprite) {\n            let w = context.sprite.width;\n            let h = context.sprite.height;\n            context.drawRect(this.x * w + offset + gx, this.y * h + offset + gy, this.width * w - lineOffset, this.height * h - lineOffset, this.fillColor, this.lineColor, this.lineWidth);\n        }\n        else\n            context.drawRect(this.x + offset + gx, this.y + offset + gy, this.width - lineOffset, this.height - lineOffset, this.fillColor, this.lineColor, this.lineWidth);\n    }\n\n    /**@private */\n    get cmdID(): string {\n        return DrawRectCmd.ID;\n    }\n\n    getBoundPoints(sp?: { width: number, height?: number }): number[] {\n        return Rectangle._getBoundPointS(this.x, this.y, this.width, this.height, this.percent ? sp : null)\n    }\n}\n\nClassUtils.regClass(\"DrawRectCmd\", DrawRectCmd);\n\n","import { ColorFilter } from \"../../filters/ColorFilter\"\nimport { Matrix } from \"../../maths/Matrix\"\nimport { Context } from \"../../resource/Context\"\nimport { Texture } from \"../../resource/Texture\"\nimport { ClassUtils } from \"../../utils/ClassUtils\";\nimport { ColorUtils } from '../../utils/ColorUtils';\nimport { Pool } from \"../../utils/Pool\";\n\n/**\n * 绘制单个贴图\n */\nexport class DrawTextureCmd {\n    static ID: string = \"DrawTexture\";\n\n    /**\n     * 纹理。\n     */\n    texture: Texture | null;\n    /**\n     * （可选）X轴偏移量。\n     */\n    x: number;\n    /**\n     * （可选）Y轴偏移量。\n     */\n    y: number;\n    /**\n     * （可选）宽度。\n     */\n    width: number;\n    /**\n     * （可选）高度。\n     */\n    height: number;\n    /**\n     * （可选）矩阵信息。\n     */\n    matrix: Matrix | null;\n    /**\n     * （可选）透明度。\n     */\n    alpha: number;\n    /**\n     * （可选）颜色滤镜。\n     */\n    color: number = 0xffffffff;\n    /**\n     * （可选）混合模式。\n     */\n    blendMode: string | null;\n\n    uv: number[] | null = null;\n\n    /**@private */\n    static create(texture: Texture, x: number, y: number, width: number, height: number, matrix: Matrix | null, alpha: number, color: string | null, blendMode: string | null, uv?: number[]): DrawTextureCmd {\n        if (width == null) width = texture.sourceWidth;\n        if (height == null) height = texture.sourceHeight;\n\n        let wRate = width / texture.sourceWidth;\n        let hRate = height / texture.sourceHeight;\n        width = texture.width * wRate;\n        height = texture.height * hRate;\n\n        x += texture.offsetX * wRate;\n        y += texture.offsetY * hRate;\n\n        var cmd: DrawTextureCmd = Pool.getItemByClass(\"DrawTextureCmd\", DrawTextureCmd);\n        cmd.texture = texture;\n        texture._addReference();\n        cmd.x = x;\n        cmd.y = y;\n        cmd.width = width;\n        cmd.height = height;\n        cmd.matrix = matrix;\n        cmd.alpha = alpha;\n        cmd.blendMode = blendMode;\n        cmd.uv = uv || null;\n        cmd.color = color != null ? ColorUtils.create(color).numColor : 0xffffffff;\n        return cmd;\n    }\n\n    /**\n     * 回收到对象池\n     */\n    recover(): void {\n        this.texture && this.texture._removeReference();\n        this.texture = null;\n        this.matrix = null;\n        Pool.recover(\"DrawTextureCmd\", this);\n    }\n\n    /**@private */\n    run(context: Context, gx: number, gy: number): void {\n        this.texture && context.drawTextureWithTransform(this.texture, this.x, this.y, this.width, this.height, this.matrix, gx, gy, this.alpha, this.blendMode, this.uv, this.color);\n    }\n\n    /**@private */\n    get cmdID(): string {\n        return DrawTextureCmd.ID;\n    }\n}\n\nClassUtils.regClass(\"DrawTextureCmd\", DrawTextureCmd);\n","import { Point } from \"../../maths/Point\"\nimport { Rectangle } from \"../../maths/Rectangle\";\nimport { Context } from \"../../resource/Context\"\nimport { Texture } from \"../../resource/Texture\"\nimport { ClassUtils } from \"../../utils/ClassUtils\";\nimport { ColorUtils } from \"../../utils/ColorUtils\";\nimport { Pool } from \"../../utils/Pool\";\n\n/**\n * 填充贴图\n */\nexport class FillTextureCmd {\n    static ID: string = \"FillTexture\";\n\n    /**\n     * 纹理。\n     */\n    texture: Texture;\n    /**\n     * X轴偏移量。\n     */\n    x: number;\n    /**\n     * Y轴偏移量。\n     */\n    y: number;\n    /**\n     * （可选）宽度。\n     */\n    width: number;\n    /**\n     * （可选）高度。\n     */\n    height: number;\n    /**\n     * （可选）填充类型 repeat|repeat-x|repeat-y|no-repeat\n     */\n    type?: string;\n    /**\n     * （可选）贴图纹理偏移\n     */\n    offset?: Point;\n\n    /**\n     * 位置和大小是否是百分比\n     */\n    percent: boolean;\n\n    /** （可选）绘图颜色 */\n    color: number = 0xffffffff;\n\n    /**@private */\n    static create(texture: Texture, x: number, y: number, width: number, height: number, type: string, offset: Point, color: string): FillTextureCmd {\n        var cmd: FillTextureCmd = Pool.getItemByClass(\"FillTextureCmd\", FillTextureCmd);\n        cmd.texture = texture;\n        texture._addReference();\n        cmd.x = x;\n        cmd.y = y;\n        cmd.width = width;\n        cmd.height = height;\n        cmd.type = type;\n        cmd.offset = offset;\n        cmd.color = color != null ? ColorUtils.create(color).numColor : 0xffffffff;\n        return cmd;\n    }\n\n    /**\n     * 回收到对象池\n     */\n    recover(): void {\n        this.texture && this.texture._removeReference();\n        this.texture = null;\n        this.offset = null;\n        Pool.recover(\"FillTextureCmd\", this);\n    }\n\n    /**@private */\n    run(context: Context, gx: number, gy: number): void {\n        if (this.texture) {\n            if (this.percent && context.sprite) {\n                let w = context.sprite.width;\n                let h = context.sprite.height;\n                context.fillTexture(this.texture, this.x * w + gx, this.y * h + gy, this.width * w, this.height * h, this.type, this.offset || Point.EMPTY, this.color);\n            }\n            else\n                context.fillTexture(this.texture, this.x + gx, this.y + gy, this.width, this.height, this.type, this.offset || Point.EMPTY, this.color);\n        }\n    }\n\n    /**@private */\n    get cmdID(): string {\n        return FillTextureCmd.ID;\n    }\n\n    getBoundPoints(sp?: { width: number, height?: number }): number[] {\n        if (this.width && this.height)\n            return Rectangle._getBoundPointS(this.x, this.y, this.width, this.height, this.percent ? sp : null);\n        else\n            return Rectangle._getBoundPointS(this.x, this.y, this.texture.width, this.texture.height);\n    }\n}\n\nClassUtils.regClass(\"FillTextureCmd\", FillTextureCmd);\n","import { Context } from \"../../resource/Context\"\nimport { Pool } from \"../../utils/Pool\"\n\n/**\n * 恢复命令，和save配套使用\n */\nexport class RestoreCmd {\n    static ID: string = \"Restore\";\n\n\n\n    /**@private */\n    static create(): RestoreCmd {\n        var cmd: RestoreCmd = Pool.getItemByClass(\"RestoreCmd\", RestoreCmd);\n\n        return cmd;\n    }\n\n    /**\n     * 回收到对象池\n     */\n    recover(): void {\n\n        Pool.recover(\"RestoreCmd\", this);\n    }\n\n    /**@private */\n    run(context: Context, gx: number, gy: number): void {\n        context.restore();\n    }\n\n    /**@private */\n    get cmdID(): string {\n        return RestoreCmd.ID;\n    }\n\n}\n\n","import { Context } from \"../../resource/Context\"\nimport { Pool } from \"../../utils/Pool\"\n\n/**\n * 旋转命令\n */\nexport class RotateCmd {\n    static ID: string = \"Rotate\";\n\n    /**\n     * 旋转角度，以弧度计。\n     */\n    angle: number;\n    /**\n     * （可选）水平方向轴心点坐标。\n     */\n    pivotX: number;\n    /**\n     * （可选）垂直方向轴心点坐标。\n     */\n    pivotY: number;\n\n    /**@private */\n    static create(angle: number, pivotX: number, pivotY: number): RotateCmd {\n        var cmd: RotateCmd = Pool.getItemByClass(\"RotateCmd\", RotateCmd);\n        cmd.angle = angle;\n        cmd.pivotX = pivotX;\n        cmd.pivotY = pivotY;\n        return cmd;\n    }\n\n    /**\n     * 回收到对象池\n     */\n    recover(): void {\n\n        Pool.recover(\"RotateCmd\", this);\n    }\n\n    /**@private */\n    run(context: Context, gx: number, gy: number): void {\n        context._rotate(this.angle, this.pivotX + gx, this.pivotY + gy);\n    }\n\n    /**@private */\n    get cmdID(): string {\n        return RotateCmd.ID;\n    }\n\n}\n\n","import { Context } from \"../../resource/Context\"\nimport { Pool } from \"../../utils/Pool\"\n/**\n * 缩放命令\n */\nexport class ScaleCmd {\n    static ID: string = \"Scale\";\n\n    /**\n     * 水平方向缩放值。\n     */\n    scaleX: number;\n    /**\n     * 垂直方向缩放值。\n     */\n    scaleY: number;\n    /**\n     * （可选）水平方向轴心点坐标。\n     */\n    pivotX: number;\n    /**\n     * （可选）垂直方向轴心点坐标。\n     */\n    pivotY: number;\n\n    /**@private */\n    static create(scaleX: number, scaleY: number, pivotX: number, pivotY: number): ScaleCmd {\n        var cmd: ScaleCmd = Pool.getItemByClass(\"ScaleCmd\", ScaleCmd);\n        cmd.scaleX = scaleX;\n        cmd.scaleY = scaleY;\n        cmd.pivotX = pivotX;\n        cmd.pivotY = pivotY;\n        return cmd;\n    }\n\n    /**\n     * 回收到对象池\n     */\n    recover(): void {\n\n        Pool.recover(\"ScaleCmd\", this);\n    }\n\n    /**@private */\n    run(context: Context, gx: number, gy: number): void {\n        context._scale(this.scaleX, this.scaleY, this.pivotX + gx, this.pivotY + gy);\n    }\n\n    /**@private */\n    get cmdID(): string {\n        return ScaleCmd.ID;\n    }\n\n}\n\n","import { Matrix } from \"../../maths/Matrix\"\nimport { Context } from \"../../resource/Context\"\nimport { Pool } from \"../../utils/Pool\"\n\n/**\n * 矩阵命令\n */\nexport class TransformCmd {\n    static ID: string = \"Transform\";\n\n    /**\n     * 矩阵。\n     */\n    matrix: Matrix;\n    /**\n     * （可选）水平方向轴心点坐标。\n     */\n    pivotX: number;\n    /**\n     * （可选）垂直方向轴心点坐标。\n     */\n    pivotY: number;\n\n    /**@private */\n    static create(matrix: Matrix, pivotX: number, pivotY: number): TransformCmd {\n        var cmd: TransformCmd = Pool.getItemByClass(\"TransformCmd\", TransformCmd);\n        cmd.matrix = matrix;\n        cmd.pivotX = pivotX;\n        cmd.pivotY = pivotY;\n        return cmd;\n    }\n\n    /**\n     * 回收到对象池\n     */\n    recover(): void {\n        this.matrix = null;\n        Pool.recover(\"TransformCmd\", this);\n    }\n\n    /**@private */\n    run(context: Context, gx: number, gy: number): void {\n        context._transform(this.matrix, this.pivotX + gx, this.pivotY + gy);\n    }\n\n    /**@private */\n    get cmdID(): string {\n        return TransformCmd.ID;\n    }\n\n}\n\n","import { Context } from \"../../resource/Context\"\nimport { Pool } from \"../../utils/Pool\"\n/**\n * 位移命令\n */\nexport class TranslateCmd {\n    static ID: string = \"Translate\";\n\n    /**\n     * 添加到水平坐标（x）上的值。\n     */\n    tx: number;\n    /**\n     * 添加到垂直坐标（y）上的值。\n     */\n    ty: number;\n\n    /**@private */\n    static create(tx: number, ty: number): TranslateCmd {\n        var cmd: TranslateCmd = Pool.getItemByClass(\"TranslateCmd\", TranslateCmd);\n        cmd.tx = tx;\n        cmd.ty = ty;\n        return cmd;\n    }\n\n    /**\n     * 回收到对象池\n     */\n    recover(): void {\n\n        Pool.recover(\"TranslateCmd\", this);\n    }\n\n    /**@private */\n    run(context: Context, gx: number, gy: number): void {\n        context.translate(this.tx, this.ty);\n    }\n\n    /**@private */\n    get cmdID(): string {\n        return TranslateCmd.ID;\n    }\n\n}\n\n","import { ColorFilter } from \"../../filters/ColorFilter\"\nimport { Matrix } from \"../../maths/Matrix\"\nimport { Context } from \"../../resource/Context\"\nimport { Texture } from \"../../resource/Texture\"\nimport { ClassUtils } from \"../../utils/ClassUtils\"\nimport { ColorUtils } from \"../../utils/ColorUtils\"\nimport { Pool } from \"../../utils/Pool\"\n\n/**\n * 绘制三角形命令\n */\nexport class DrawTrianglesCmd {\n    static ID: string = \"DrawTriangles\";\n\n    /**\n     * 纹理。\n     */\n    texture: Texture | null;\n    /**\n     * X轴偏移量。\n     */\n    x: number;\n    /**\n     * Y轴偏移量。\n     */\n    y: number;\n    /**\n     * 顶点数组。\n     */\n    vertices: Float32Array;\n    /**\n     * UV数据。\n     */\n    uvs: Float32Array;\n    /**\n     * 顶点索引。\n     */\n    indices: Uint16Array;\n    /**\n     * 缩放矩阵。\n     */\n    matrix: Matrix | null;\n    /**\n     * alpha\n     */\n    alpha: number;\n    //public var color:String;\n    /**\n     * blend模式\n     */\n    blendMode: string | null;\n    /**\n     * 颜色变换\n     */\n    color: number | null;\n\n    /**@private */\n    static create(texture: Texture, x: number, y: number, vertices: Float32Array, uvs: Float32Array, indices: Uint16Array,\n        matrix: Matrix | null, alpha: number, color: string | number, blendMode: string | null): DrawTrianglesCmd {\n        var cmd: DrawTrianglesCmd = Pool.getItemByClass(\"DrawTrianglesCmd\", DrawTrianglesCmd);\n        cmd.texture = texture;\n        cmd.x = x;\n        cmd.y = y;\n        cmd.vertices = vertices;\n        cmd.uvs = uvs;\n        cmd.indices = indices;\n        cmd.matrix = matrix;\n        cmd.alpha = alpha;\n        cmd.color = color != null ? ColorUtils.create(color).numColor : 0xffffffff;\n        cmd.blendMode = blendMode;\n        return cmd;\n    }\n\n    /**\n     * 回收到对象池\n     */\n    recover(): void {\n        this.texture = null;\n        this.vertices = null;\n        this.uvs = null;\n        this.indices = null;\n        this.matrix = null;\n        Pool.recover(\"DrawTrianglesCmd\", this);\n    }\n\n    /**@private */\n    run(context: Context, gx: number, gy: number): void {\n        context.drawTriangles(this.texture, this.x + gx, this.y + gy, this.vertices, this.uvs, this.indices, this.matrix, this.alpha, this.blendMode, this.color);\n    }\n\n    /**@private */\n    get cmdID(): string {\n        return DrawTrianglesCmd.ID;\n    }\n\n    getBoundPoints(sp?: { width: number, height?: number }): number[] {\n        let vert = this.vertices;\n        var vnum = vert.length;\n        if (vnum < 2) return [];\n        var minx = vert[0];\n        var miny = vert[1];\n        var maxx = minx;\n        var maxy = miny;\n        for (var i = 2; i < vnum;) {\n            var cx = vert[i++];\n            var cy = vert[i++];\n            if (minx > cx) minx = cx;\n            if (miny > cy) miny = cy;\n            if (maxx < cx) maxx = cx;\n            if (maxy < cy) maxy = cy;\n        }\n\n        return [minx, miny, maxx, miny, maxx, maxy, minx, maxy];\n    }\n}\n\nClassUtils.regClass(\"DrawTrianglesCmd\", DrawTrianglesCmd);","import { Context } from \"../../resource/Context\"\nimport { Texture } from \"../../resource/Texture\"\nimport { ClassUtils } from \"../../utils/ClassUtils\";\nimport { ColorUtils } from \"../../utils/ColorUtils\";\nimport { Pool } from \"../../utils/Pool\"\n\n/**\n * 绘制带九宫格信息的图片\n * @internal\n */\nexport class Draw9GridTextureCmd {\n    static ID: string = \"Draw9GridTexture\";\n\n    /**\n     * 纹理。\n     */\n    texture: Texture;\n    /**\n     * （可选）X轴偏移量。\n     */\n    x: number;\n    /**\n     * （可选）Y轴偏移量。\n     */\n    y: number;\n    /**\n     * （可选）宽度。\n     */\n    width: number;\n    /**\n     * （可选）高度。\n     */\n    height: number;\n\n    sizeGrid: number[];\n\n    color: number = 0xffffffff;\n\n    /**\n     * 位置和大小是否是百分比\n     */\n    percent: boolean;\n\n    /**@private */\n    static create(texture: Texture, x: number, y: number, width: number, height: number, sizeGrid: number[], percent: boolean = false, color: string | null = null): Draw9GridTextureCmd {\n        let cmd: Draw9GridTextureCmd = Pool.getItemByClass(\"Draw9GridTextureCmd\", Draw9GridTextureCmd);\n        cmd.texture = texture;\n        texture._addReference();\n        cmd.x = x;\n        cmd.y = y;\n        cmd.width = width;\n        cmd.height = height;\n        cmd.sizeGrid = sizeGrid;\n        cmd.percent = percent;\n        cmd.color = color != null ? ColorUtils.create(color).numColor : 0xffffffff;\n        return cmd;\n    }\n\n    /**\n     * 回收到对象池\n     */\n    recover(): void {\n        this.texture._removeReference();\n        Pool.recover(\"Draw9GridTextureCmd\", this);\n    }\n\n    /**@private */\n    run(context: Context, gx: number, gy: number): void {\n        if (this.texture) {\n            let sizeGrid = this.sizeGrid || this.texture._sizeGrid || EMPTY_SIZE_GRID;\n            if (this.percent && context.sprite) {\n                let w = context.sprite.width;\n                let h = context.sprite.height;\n                context.drawTextureWithSizeGrid(this.texture, this.x * w, this.y * h, this.width * w, this.height * h, sizeGrid, gx, gy, this.color);\n            }\n            else\n                context.drawTextureWithSizeGrid(this.texture, this.x, this.y, this.width, this.height, sizeGrid, gx, gy, this.color);\n        }\n    }\n\n    /**@private */\n    get cmdID(): string {\n        return Draw9GridTextureCmd.ID;\n    }\n\n    getBoundPoints(sp?: { width: number, height?: number }): number[] {\n        let minx = this.x;\n        let miny = this.y;\n        let maxx = this.width;\n        let maxy = this.height;\n        if (this.percent) {\n            minx *= sp.width;\n            miny *= sp.height;\n            maxx *= sp.width;\n            maxy *= sp.height;\n        }\n\n        return [minx, miny, maxx, miny, maxx, maxy, minx, maxy];\n    }\n}\n\nconst EMPTY_SIZE_GRID = [0, 0, 0, 0, 0];\nClassUtils.regClass(\"Draw9GridTextureCmd\", Draw9GridTextureCmd);\n","import { Context } from \"../../resource/Context\"\nimport { Pool } from \"../../utils/Pool\"\n\n/**\n * 存储命令，和restore配套使用\n */\nexport class SaveCmd {\n    static ID: string = \"Save\";\n\n\n\n    /**@private */\n    static create(): SaveCmd {\n        var cmd: SaveCmd = Pool.getItemByClass(\"SaveCmd\", SaveCmd);\n\n        return cmd;\n    }\n\n    /**\n     * 回收到对象池\n     */\n    recover(): void {\n\n        Pool.recover(\"SaveCmd\", this);\n    }\n\n    /**@private */\n    run(context: Context, gx: number, gy: number): void {\n        context.save();\n    }\n\n    /**@private */\n    get cmdID(): string {\n        return SaveCmd.ID;\n    }\n\n}\n\n","import { AlphaCmd } from \"./cmd/AlphaCmd\"\nimport { DrawCircleCmd } from \"./cmd/DrawCircleCmd\"\nimport { DrawCurvesCmd } from \"./cmd/DrawCurvesCmd\"\nimport { DrawImageCmd } from \"./cmd/DrawImageCmd\"\nimport { DrawLineCmd } from \"./cmd/DrawLineCmd\"\nimport { DrawLinesCmd } from \"./cmd/DrawLinesCmd\"\nimport { DrawPathCmd } from \"./cmd/DrawPathCmd\"\nimport { DrawPieCmd } from \"./cmd/DrawPieCmd\"\nimport { DrawPolyCmd } from \"./cmd/DrawPolyCmd\"\nimport { DrawRectCmd } from \"./cmd/DrawRectCmd\"\nimport { DrawTextureCmd } from \"./cmd/DrawTextureCmd\"\nimport { FillTextureCmd } from \"./cmd/FillTextureCmd\"\nimport { RestoreCmd } from \"./cmd/RestoreCmd\"\nimport { RotateCmd } from \"./cmd/RotateCmd\"\nimport { ScaleCmd } from \"./cmd/ScaleCmd\"\nimport { TransformCmd } from \"./cmd/TransformCmd\"\nimport { TranslateCmd } from \"./cmd/TranslateCmd\"\nimport { GrahamScan } from \"../maths/GrahamScan\"\nimport { Matrix } from \"../maths/Matrix\"\nimport { Point } from \"../maths/Point\"\nimport { Rectangle } from \"../maths/Rectangle\"\nimport { Pool } from \"../utils/Pool\"\nimport { Utils } from \"../utils/Utils\"\nimport { Graphics } from \"./Graphics\";\nimport { DrawTrianglesCmd } from \"./cmd/DrawTrianglesCmd\";\nimport { Draw9GridTextureCmd } from \"./cmd/Draw9GridTextureCmd\";\nimport { SaveCmd } from \"./cmd/SaveCmd\"\n\nconst _tempMatrix: Matrix = new Matrix();\nconst _initMatrix: Matrix = new Matrix();\nconst _tempMatrixArrays: any[] = [];\n\n/**\n * @private\n * Graphic bounds数据类\n */\nexport class GraphicsBounds {\n    /**@private */\n    private _temp: number[];\n    /**@private */\n    private _bounds: Rectangle;\n    /**@private */\n    private _rstBoundPoints: number[];\n    /**@private */\n    private _cacheBoundsType: boolean = false;\n    /**@internal */\n    _graphics: Graphics;\n    /**@internal */\n    _affectBySize: boolean;\n\n    /**\n     * 销毁\n     */\n    destroy(): void {\n        this._graphics = null;\n        this._cacheBoundsType = false;\n        if (this._temp) this._temp.length = 0;\n        if (this._rstBoundPoints) this._rstBoundPoints.length = 0;\n        if (this._bounds) this._bounds.recover();\n        this._bounds = null;\n        Pool.recover(\"GraphicsBounds\", this);\n    }\n\n    /**\n     * 创建\n     */\n    static create(): GraphicsBounds {\n        return Pool.getItemByClass(\"GraphicsBounds\", GraphicsBounds);\n    }\n\n    /**\n     * 重置数据\n     */\n    reset(): void {\n        this._temp && (this._temp.length = 0);\n    }\n\n    /**\n     * 获取位置及宽高信息矩阵(比较耗CPU，频繁使用会造成卡顿，尽量少用)。\n     * @param realSize\t（可选）使用图片的真实大小，默认为false\n     * @return 位置与宽高组成的 一个 Rectangle 对象。\n     */\n    getBounds(realSize: boolean = false): Rectangle {\n        if (!this._bounds || !this._temp || this._temp.length < 1 || realSize != this._cacheBoundsType) {\n            this._bounds = Rectangle._getWrapRec(this.getBoundPoints(realSize), this._bounds)\n        }\n        this._cacheBoundsType = realSize;\n        return this._bounds;\n    }\n\n    /**\n     * @private\n     * @param realSize\t（可选）使用图片的真实大小，默认为false\n     * 获取端点列表。\n     */\n    getBoundPoints(realSize: boolean = false): any[] {\n        if (!this._temp || this._temp.length < 1 || realSize != this._cacheBoundsType)\n            this._temp = this._getCmdPoints(realSize);\n        this._cacheBoundsType = realSize;\n        return this._rstBoundPoints = Utils.copyArray(this._rstBoundPoints, this._temp);\n    }\n\n    private _getCmdPoints(realSize: boolean = false): any[] {\n        let cmds = this._graphics.cmds;\n        let sp = this._graphics._sp;\n        this._affectBySize = false;\n\n        let rst = this._temp || (this._temp = []);\n        rst.length = 0;\n        if (cmds.length == 0) return rst;\n\n        let matrixs: any[] = _tempMatrixArrays;\n        matrixs.length = 0;\n        let tMatrix: Matrix = _initMatrix;\n        tMatrix.identity();\n        let tempMatrix: Matrix = _tempMatrix;\n        for (let i = 0, n = cmds.length; i < n; i++) {\n            let cmd = cmds[i];\n            if (cmd.percent)\n                this._affectBySize = true;\n            switch (cmd.cmdID) {\n                case AlphaCmd.ID:\n                case SaveCmd.ID:\n                    matrixs.push(tMatrix);\n                    tMatrix = tMatrix.clone();\n                    break;\n                case RestoreCmd.ID: //restore\n                    tMatrix = matrixs.pop();\n                    break;\n                case ScaleCmd.ID:\n                    tempMatrix.identity();\n                    tempMatrix.translate(-cmd.pivotX, -cmd.pivotY);\n                    tempMatrix.scale(cmd.scaleX, cmd.scaleY);\n                    tempMatrix.translate(cmd.pivotX, cmd.pivotY);\n\n                    this._switchMatrix(tMatrix, tempMatrix);\n                    break;\n                case RotateCmd.ID:\n                    tempMatrix.identity();\n                    tempMatrix.translate(-cmd.pivotX, -cmd.pivotY);\n                    tempMatrix.rotate(cmd.angle);\n                    tempMatrix.translate(cmd.pivotX, cmd.pivotY);\n\n                    this._switchMatrix(tMatrix, tempMatrix);\n                    break;\n                case TranslateCmd.ID:\n                    tempMatrix.identity();\n                    tempMatrix.translate(cmd.tx, cmd.ty);\n\n                    this._switchMatrix(tMatrix, tempMatrix);\n                    break;\n                case TransformCmd.ID:\n                    tempMatrix.identity();\n                    tempMatrix.translate(-cmd.pivotX, -cmd.pivotY);\n                    tempMatrix.concat(cmd.matrix);\n                    tempMatrix.translate(cmd.pivotX, cmd.pivotY);\n\n                    this._switchMatrix(tMatrix, tempMatrix);\n                    break;\n                case DrawImageCmd.ID:\n                case FillTextureCmd.ID:\n                    addPointArrToRst(rst, Rectangle._getBoundPointS(cmd.x, cmd.y, cmd.width, cmd.height), tMatrix);\n                    break;\n                case DrawTextureCmd.ID:\n                    tMatrix.copyTo(tempMatrix);\n                    if (cmd.matrix)\n                        tempMatrix.concat(cmd.matrix);\n                    addPointArrToRst(rst, Rectangle._getBoundPointS(cmd.x, cmd.y, cmd.width, cmd.height), tempMatrix);\n                    break;\n                case DrawRectCmd.ID:\n                    addPointArrToRst(rst, (<DrawRectCmd>cmd).getBoundPoints(sp), tMatrix);\n                    break;\n                case DrawCircleCmd.ID:\n                    addPointArrToRst(rst, (<DrawCircleCmd>cmd).getBoundPoints(sp), tMatrix);\n                    break;\n                case DrawLineCmd.ID:\n                    addPointArrToRst(rst, (<DrawLineCmd>cmd).getBoundPoints(sp), tMatrix);\n                    break;\n                case DrawCurvesCmd.ID:\n                    addPointArrToRst(rst, (<DrawCurvesCmd>cmd).getBoundPoints(sp), tMatrix, cmd.x, cmd.y);\n                    break;\n                case DrawLinesCmd.ID:\n                case DrawPolyCmd.ID:\n                    addPointArrToRst(rst, cmd.points, tMatrix, cmd.x, cmd.y);\n                    break;\n                case DrawPathCmd.ID:\n                    addPointArrToRst(rst, (<DrawPathCmd>cmd).getBoundPoints(sp), tMatrix, cmd.x, cmd.y);\n                    break;\n                case DrawPieCmd.ID:\n                    addPointArrToRst(rst, (<DrawPieCmd>cmd).getBoundPoints(sp), tMatrix);\n                    break;\n                case DrawTrianglesCmd.ID:\n                    addPointArrToRst(rst, (<DrawTrianglesCmd>cmd).getBoundPoints(sp), tMatrix);\n                    break;\n                case Draw9GridTextureCmd.ID:\n                    addPointArrToRst(rst, (<Draw9GridTextureCmd>cmd).getBoundPoints(sp), tMatrix);\n                    break;\n            }\n        }\n        if (rst.length > 200) {\n            rst = Utils.copyArray(rst, Rectangle._getWrapRec(rst)._getBoundPoints());\n        } else if (rst.length > 8)\n            rst = GrahamScan.scanPList(rst);\n        return rst;\n    }\n\n    private _switchMatrix(tMatix: Matrix, tempMatrix: Matrix): void {\n        tempMatrix.concat(tMatix);\n        tempMatrix.copyTo(tMatix);\n    }\n}\n\nfunction addPointArrToRst(rst: any[], points: any[], matrix: Matrix, dx: number = 0, dy: number = 0): void {\n    let len = points.length;\n    for (let i = 0; i < len; i += 2) {\n        addPointToRst(rst, points[i] + dx, points[i + 1] + dy, matrix);\n    }\n}\n\nfunction addPointToRst(rst: any[], x: number, y: number, matrix: Matrix): void {\n    var _tempPoint: Point = Point.TEMP;\n    _tempPoint.setTo(x ? x : 0, y ? y : 0);\n    matrix.transformPoint(_tempPoint);\n    rst.push(_tempPoint.x, _tempPoint.y);\n}","import { Context } from \"../../resource/Context\"\nimport { Pool } from \"../../utils/Pool\"\n\n/**\n * 裁剪命令\n */\nexport class ClipRectCmd {\n    static ID: string = \"ClipRect\";\n\n\n    /**\n     * X 轴偏移量。\n     */\n    x: number;\n    /**\n     * Y 轴偏移量。\n     */\n    y: number;\n    /**\n     * 宽度。\n     */\n    width: number;\n    /**\n     * 高度。\n     */\n    height: number;\n\n    /**@private */\n    static create(x: number, y: number, width: number, height: number): ClipRectCmd {\n        var cmd: ClipRectCmd = Pool.getItemByClass(\"ClipRectCmd\", ClipRectCmd);\n        cmd.x = x;\n        cmd.y = y;\n        cmd.width = width;\n        cmd.height = height;\n        return cmd;\n    }\n\n    /**\n     * 回收到对象池\n     */\n    recover(): void {\n\n        Pool.recover(\"ClipRectCmd\", this);\n    }\n\n    /**@private */\n    run(context: Context, gx: number, gy: number): void {\n        context.clipRect(this.x + gx, this.y + gy, this.width, this.height);\n    }\n\n    /**@private */\n    get cmdID(): string {\n        return ClipRectCmd.ID;\n    }\n\n}\n\n","import { Context } from \"../../resource/Context\"\nimport { Texture } from \"../../resource/Texture\"\nimport { Pool } from \"../../utils/Pool\"\n\n/**\n * 根据坐标集合绘制多个贴图\n */\nexport class DrawTexturesCmd {\n    static ID: string = \"DrawTextures\";\n\n    /**\n     * 纹理。\n     */\n    texture: Texture;\n    /**\n     * 绘制次数和坐标。\n     */\n    pos: ArrayLike<number>;\n\n    /** 附加顶点色 */\n    colors: number[];\n\n    /**@private */\n    static create(texture: Texture, pos: any[], colors: number[]): DrawTexturesCmd {\n        var cmd: DrawTexturesCmd = Pool.getItemByClass(\"DrawTexturesCmd\", DrawTexturesCmd);\n        cmd.texture = texture;\n        texture._addReference();\n        cmd.pos = pos;\n        cmd.colors = colors || [];\n        return cmd;\n    }\n\n    /**\n     * 回收到对象池\n     */\n    recover(): void {\n        this.texture._removeReference();\n        this.texture = null;\n        this.pos = null;\n        Pool.recover(\"DrawTexturesCmd\", this);\n    }\n\n    /**@private */\n    run(context: Context, gx: number, gy: number): void {\n        context.drawTextures(this.texture, this.pos, gx, gy, this.colors);\n    }\n\n    /**@private */\n    get cmdID(): string {\n        return DrawTexturesCmd.ID;\n    }\n\n}\n\n","import { Context } from \"../../resource/Context\";\nimport { FontInfo } from \"../../utils/FontInfo\";\nimport { Pool } from \"../../utils/Pool\";\nimport { WordText } from \"../../utils/WordText\";\nimport { ILaya } from \"../../../ILaya\";\nimport { Const } from \"../../Const\";\nimport { ClassUtils } from \"../../utils/ClassUtils\";\nimport { Config } from \"../../../Config\";\n\n/**\n * 绘制文字\n */\nexport class FillTextCmd {\n    static ID: string = \"FillText\";\n\n    /**\n     * 开始绘制文本的 x 坐标位置（相对于画布）。\n     */\n    x: number = 0;\n    /**\n     * 开始绘制文本的 y 坐标位置（相对于画布）。\n     */\n    y: number = 0;\n\n    private _text: string;\n    private _wordText: WordText;\n    private _font: string;\n    private _color: string;\n    private _strokeColor: string = '#000000';\n    private _stroke: number;\n    private _align: number;\n    private _fontObj: FontInfo;\n\n    \n    set text(value: string) {\n        this._text = value;\n    }\n    get text() {\n        return this._text;\n    }\n    set strokeColor(value: string) {\n        this._strokeColor = value;\n    }\n    get strokeColor() {\n        return this._strokeColor;\n    }\n    set stroke(value: number) {\n        this._stroke = value;\n    }\n    get stroke() {\n        return this._stroke;\n    }\n    set align(value: number) {\n        this._align = value;\n    }\n    get align() {\n        return this._align;\n    }\n\n\n    static create(text: string | WordText | null, x: number, y: number, font: string, color: string | null, align: string, stroke: number, strokeColor: string | null): FillTextCmd {\n        var cmd: FillTextCmd = Pool.getItemByClass(\"FillTextCmd\", FillTextCmd);\n        cmd._text = null;\n        cmd._wordText = null;\n        cmd.x = x;\n        cmd.y = y;\n        cmd.font = font;\n        cmd.color = color;\n        cmd._stroke = stroke;\n        cmd._strokeColor = strokeColor;\n\n        switch (align) {\n            case 'center':\n                cmd._align = Const.ENUM_TEXTALIGN_CENTER;\n                break;\n            case 'right':\n                cmd._align = Const.ENUM_TEXTALIGN_RIGHT;\n                break;\n            default:\n                cmd._align = Const.ENUM_TEXTALIGN_DEFAULT;\n        }\n\n        if (text instanceof WordText) {\n            cmd._wordText = text;\n            text.cleanCache();\n        }\n        else\n            cmd._text = text;\n\n        return cmd;\n    }\n\n    /**\n     * 回收到对象池\n     */\n    recover(): void {\n        Pool.recover(\"FillTextCmd\", this);\n    }\n\n    /**@private */\n    run(context: Context, gx: number, gy: number): void {\n        if (ILaya.stage.isGlobalRepaint()) {\n            this._wordText && this._wordText.cleanCache();\n        }\n        if (null == this._text) this._text = '';\n        if (null == this._fontObj) {\n            this.font = null;\n        }\n        if (null == this._color) {\n            this._color = '#ffffff';\n        }\n\n        context._fast_filltext(this._wordText || this._text, this.x + gx, this.y + gy, this._fontObj, this._color, this._strokeColor, this._stroke, this._align);\n    }\n\n    /**@private */\n    get cmdID(): string {\n        return FillTextCmd.ID;\n    }\n\n    /**\n     * 定义字号和字体，比如\"20px Arial\"。\n     */\n    get font(): string {\n        return this._font;\n    }\n\n    set font(value: string) {\n        this._font = value;\n        if (!value)\n            value = Config.defaultFontSize + \"px \" + Config.defaultFont;\n        this._fontObj = FontInfo.parse(value);\n        this._wordText && this._wordText.cleanCache();\n    }\n\n    /**\n     * 定义文本颜色，比如\"#ff0000\"。\n     */\n    get color(): string {\n        return this._color;\n    }\n\n    set color(value: string) {\n        this._color = value;\n        this._wordText && this._wordText.cleanCache();\n    }\n}\n\nClassUtils.regClass(\"FillTextCmd\", FillTextCmd);","import { ILaya } from \"./../../ILaya\";\n/**\n * @private\n * 对象缓存统一管理类\n */\nexport class CacheManger {\n    //TODO:\n    /**\n     * 单次清理检测允许执行的时间，单位ms。\n     */\n    static loopTimeLimit: number = 2;\n    /**\n     * @private\n     */\n    private static _cacheList: any[] = [];\n    /**\n     * @private\n     * 当前检测的索引\n     */\n    private static _index: number = 0;\n\n    constructor() {\n\n    }\n\n    /**\n     * 注册cache管理函数\n     * @param disposeFunction 释放函数 fun(force:Boolean)\n     * @param getCacheListFunction 获取cache列表函数fun():Array\n     *\n     */\n    static regCacheByFunction(disposeFunction: Function, getCacheListFunction: Function): void {\n        CacheManger.unRegCacheByFunction(disposeFunction, getCacheListFunction);\n        var cache: any;\n        cache = { tryDispose: disposeFunction, getCacheList: getCacheListFunction };\n        CacheManger._cacheList.push(cache);\n    }\n\n    /**\n     * 移除cache管理函数\n     * @param disposeFunction 释放函数 fun(force:Boolean)\n     * @param getCacheListFunction 获取cache列表函数fun():Array\n     *\n     */\n    static unRegCacheByFunction(disposeFunction: Function, getCacheListFunction: Function): void {\n        var i: number, len: number;\n        len = CacheManger._cacheList.length;\n        for (i = 0; i < len; i++) {\n            if (CacheManger._cacheList[i].tryDispose == disposeFunction && CacheManger._cacheList[i].getCacheList == getCacheListFunction) {\n                CacheManger._cacheList.splice(i, 1);\n                return;\n            }\n        }\n    }\n\n    /**\n     * 强制清理所有管理器\n     *\n     */\n    //TODO:coverage\n    static forceDispose(): void {\n        var i: number, len: number = CacheManger._cacheList.length;\n        for (i = 0; i < len; i++) {\n            CacheManger._cacheList[i].tryDispose(true);\n        }\n    }\n\n    /**\n     * 开始检测循环\n     * @param waitTime 检测间隔时间\n     *\n     */\n    static beginCheck(waitTime: number = 15000): void {\n        ILaya.systemTimer.loop(waitTime, null, CacheManger._checkLoop);\n    }\n\n    /**\n     * 停止检测循环\n     *\n     */\n    //TODO:coverage\n    static stopCheck(): void {\n        ILaya.systemTimer.clear(null, CacheManger._checkLoop);\n    }\n\n    /**\n     * @private\n     * 检测函数\n     */\n    private static _checkLoop(): void {\n        var cacheList: any[] = CacheManger._cacheList;\n        if (cacheList.length < 1) return;\n        var tTime: number = ILaya.Browser.now();\n        var count: number;\n        var len: number;\n        len = count = cacheList.length;\n        while (count > 0) {\n            CacheManger._index++;\n            CacheManger._index = CacheManger._index % len;\n            cacheList[CacheManger._index].tryDispose(false);\n            if (ILaya.Browser.now() - tTime > CacheManger.loopTimeLimit) break;\n            count--;\n        }\n    }\n}\n\n\n","import { CacheManger } from \"./CacheManger\"\n\n/**\n * @private\n * TODO:\n */\nexport class VectorGraphManager {\n    //TODO:\n    static instance: VectorGraphManager;\n\n    useDic: any = {};\n    shapeDic: any = {};\n    shapeLineDic: any = {};\n\n    private _id: number = 0;\n    private _checkKey: boolean = false;\n    private _freeIdArray: any[] = [];\n\n    constructor() {\n        CacheManger.regCacheByFunction(this.startDispose.bind(this), this.getCacheList.bind(this));\n    }\n\n    static getInstance(): VectorGraphManager {\n        return VectorGraphManager.instance = VectorGraphManager.instance || new VectorGraphManager();\n    }\n\n    /**\n     * 得到个空闲的ID\n     * @return\n     */\n    getId(): number {\n        //if (_freeIdArray.length > 0) {\n        //return _freeIdArray.pop();\n        //}\n        return this._id++;\n    }\n\n    /**\n     * 添加一个图形到列表中\n     * @param\tid\n     * @param\tshape\n     */\n    addShape(id: number, shape: any): void {\n        this.shapeDic[id] = shape;\n        if (!this.useDic[id]) {\n            this.useDic[id] = true;\n        }\n    }\n\n    /**\n     * 添加一个线图形到列表中\n     * @param\tid\n     * @param\tLine\n     */\n    addLine(id: number, Line: any): void {\n        this.shapeLineDic[id] = Line;\n        if (!this.shapeLineDic[id]) {\n            this.shapeLineDic[id] = true;\n        }\n    }\n\n    /**\n     * 检测一个对象是否在使用中\n     * @param\tid\n     */\n    getShape(id: number): void {\n        if (this._checkKey) {\n            if (this.useDic[id] != null) {\n                this.useDic[id] = true;\n            }\n        }\n    }\n\n    /**\n     * 删除一个图形对象\n     * @param\tid\n     */\n    deleteShape(id: number): void {\n        if (this.shapeDic[id]) {\n            this.shapeDic[id] = null;\n            delete this.shapeDic[id];\n        }\n        if (this.shapeLineDic[id]) {\n            this.shapeLineDic[id] = null;\n            delete this.shapeLineDic[id];\n        }\n        if (this.useDic[id] != null) {\n            delete this.useDic[id];\n        }\n        //_freeIdArray.push(id);\n    }\n\n    /**\n     * 得到缓存列表\n     * @return\n     */\n    getCacheList(): any[] {\n        var str: any;\n        var list: any[] = [];\n        for (str in this.shapeDic) {\n            list.push(this.shapeDic[str]);\n        }\n        for (str in this.shapeLineDic) {\n            list.push(this.shapeLineDic[str]);\n        }\n        return list;\n    }\n\n    /**\n     * 开始清理状态，准备销毁\n     */\n    startDispose(key: boolean): void {\n        var str: any;\n        for (str in this.useDic) {\n            this.useDic[str] = false;\n        }\n        this._checkKey = true;\n    }\n\n    /**\n     * 确认销毁\n     */\n    endDispose(): void {\n        if (this._checkKey) {\n            var str: any;\n            for (str in this.useDic) {\n                if (!this.useDic[str]) {\n                    this.deleteShape(str);\n                }\n            }\n            this._checkKey = false;\n        }\n\n    }\n\n}\n\n\n","import { Rectangle } from \"../../maths/Rectangle\";\nimport { Context } from \"../../resource/Context\";\nimport { ClassUtils } from \"../../utils/ClassUtils\";\nimport { Pool } from \"../../utils/Pool\";\n\nexport class DrawEllipseCmd {\n    static ID: string = \"DrawEllipse\";\n    /**\n     * 圆点X 轴位置。\n     */\n    x: number;\n    /**\n     * 圆点Y 轴位置。\n     */\n    y: number;\n    /**\n     * 横向半径。\n     */\n    width: number;\n    /**\n     * 纵向半径。\n     */\n    height: number;\n    /**\n     * 填充颜色，或者填充绘图的渐变对象。\n     */\n    fillColor: any;\n    /**\n     * （可选）边框颜色，或者填充绘图的渐变对象。\n     */\n    lineColor: any;\n    /**\n     * （可选）边框宽度。\n     */\n    lineWidth: number = 0;\n\n    /**\n     * 位置和大小是否是百分比\n     */\n    percent: boolean;\n\n\n    /**@private */\n    static create(x: number, y: number, width: number, height: number, fillColor: any, lineColor: any, lineWidth: number, percent?: boolean): DrawEllipseCmd {\n        var cmd = Pool.getItemByClass(\"DrawEllipseCmd\", DrawEllipseCmd);\n        cmd.x = x;\n        cmd.y = y;\n        cmd.width = width;\n        cmd.height = height;\n        cmd.fillColor = fillColor;\n        cmd.lineColor = lineColor;\n        cmd.lineWidth = lineWidth;\n        cmd.percent = percent;\n        return cmd;\n    }\n    /**\n     * 回收到对象池\n     */\n    recover(): void {\n        this.fillColor = null;\n        this.lineColor = null;\n        Pool.recover(\"DrawEllipseCmd\", this);\n    }\n    /**@private */\n    run(context: Context, gx: number, gy: number): void {\n        let offset = (this.lineWidth >= 1 && this.lineColor) ? this.lineWidth / 2 : 0;\n        if (this.percent && context.sprite) {\n            let w = context.sprite.width;\n            let h = context.sprite.height;\n            context._drawEllipse(this.x * w + gx, this.y * h + gy, this.width * w - offset, this.height * h - offset, this.fillColor, this.lineColor, this.lineWidth);\n        }\n        else {\n            context._drawEllipse(this.x + gx, this.y + gy, this.width - offset, this.height - offset, this.fillColor, this.lineColor, this.lineWidth);\n        }\n    }\n    /**@private */\n    get cmdID(): string {\n        return DrawEllipseCmd.ID;\n    }\n    getBoundPoints(sp?: { width: number, height?: number }): number[] {\n        return Rectangle._getBoundPointS(this.x - this.width, this.y - this.height, this.width * 2, this.height * 2, this.percent ? sp : null);\n    }\n\n}\n\nClassUtils.regClass(\"DrawEllipseCmd\", DrawEllipseCmd);","import { Rectangle } from \"../../maths/Rectangle\";\nimport { Context } from \"../../resource/Context\";\nimport { ClassUtils } from \"../../utils/ClassUtils\";\nimport { Pool } from \"../../utils/Pool\";\n\nexport class DrawRoundRectCmd {\n    static ID: string = \"DrawRoundRect\";\n    /**\n     * 圆点X 轴位置。\n     */\n    x: number;\n    /**\n     * 圆点Y 轴位置。\n     */\n    y: number;\n    /**\n     * 横向半径。\n     */\n    width: number;\n    /**\n     * 纵向半径。\n     */\n    height: number;\n    /**\n     * 左上圆角\n     */\n    lt: number;\n    /**\n     * 右上圆角\n     */\n    rt: number;\n    /**\n     * 左下圆角\n     */\n    lb: number;\n    /**\n     * 右下圆角\n     */\n    rb: number;\n    /**\n     * 填充颜色，或者填充绘图的渐变对象。\n     */\n    fillColor: any;\n    /**\n     * （可选）边框颜色，或者填充绘图的渐变对象。\n     */\n    lineColor: any;\n    /**\n     * （可选）边框宽度。\n     */\n    lineWidth: number = 0;\n\n    /**\n     * 位置和大小是否是百分比\n     */\n    percent: boolean;\n\n\n    /**@private */\n    static create(x: number, y: number, width: number, height: number, lt: number, rt: number, lb: number, rb: number, fillColor: any, lineColor: any, lineWidth: number, percent?: boolean): DrawRoundRectCmd {\n        var cmd = Pool.getItemByClass(\"DrawRoundRectCmd\", DrawRoundRectCmd);\n        cmd.x = x;\n        cmd.y = y;\n        cmd.width = width;\n        cmd.height = height;\n        cmd.lt = lt;\n        cmd.rt = rt;\n        cmd.lb = lb;\n        cmd.rb = rb;\n        cmd.fillColor = fillColor;\n        cmd.lineColor = lineColor;\n        cmd.lineWidth = lineWidth;\n        cmd.percent = percent;\n        return cmd;\n    }\n    /**\n     * 回收到对象池\n     */\n    recover(): void {\n        this.fillColor = null;\n        this.lineColor = null;\n        Pool.recover(\"DrawRoundRectCmd\", this);\n    }\n    /**@private */\n    run(context: Context, gx: number, gy: number): void {\n        let offset = (this.lineWidth >= 1 && this.lineColor) ? this.lineWidth / 2 : 0;\n        let lineOffset = this.lineColor ? this.lineWidth : 0;\n        if (this.percent && context.sprite) {\n            let w = context.sprite.width;\n            let h = context.sprite.height;\n            context._drawRoundRect(this.x * w + offset + gx, this.y * h + offset + gy, this.width * w - lineOffset, this.height * h - lineOffset, this.lt, this.rt, this.lb, this.rb, this.fillColor, this.lineColor, this.lineWidth);\n        }\n        else {\n            context._drawRoundRect(this.x + offset + gx, this.y + offset + gy, this.width - lineOffset, this.height - lineOffset, this.lt, this.rt, this.lb, this.rb, this.fillColor, this.lineColor, this.lineWidth);\n        }\n    }\n    /**@private */\n    get cmdID(): string {\n        return DrawRoundRectCmd.ID;\n    }\n    getBoundPoints(sp?: { width: number, height?: number }): number[] {\n        return Rectangle._getBoundPointS(this.x, this.y, this.width, this.height, this.percent ? sp : null);\n    }\n\n}\n\nClassUtils.regClass(\"DrawRoundRectCmd\", DrawRoundRectCmd);","import { Sprite } from \"./Sprite\";\nimport { GraphicsBounds } from \"./GraphicsBounds\";\nimport { SpriteConst } from \"./SpriteConst\";\nimport { AlphaCmd } from \"./cmd/AlphaCmd\"\nimport { ClipRectCmd } from \"./cmd/ClipRectCmd\"\nimport { Draw9GridTextureCmd } from \"./cmd/Draw9GridTextureCmd\"\nimport { DrawCircleCmd } from \"./cmd/DrawCircleCmd\"\nimport { DrawCurvesCmd } from \"./cmd/DrawCurvesCmd\"\nimport { DrawImageCmd } from \"./cmd/DrawImageCmd\"\nimport { DrawLineCmd } from \"./cmd/DrawLineCmd\"\nimport { DrawLinesCmd } from \"./cmd/DrawLinesCmd\"\nimport { DrawPathCmd } from \"./cmd/DrawPathCmd\"\nimport { DrawPieCmd } from \"./cmd/DrawPieCmd\"\nimport { DrawPolyCmd } from \"./cmd/DrawPolyCmd\"\nimport { DrawRectCmd } from \"./cmd/DrawRectCmd\"\nimport { DrawTextureCmd } from \"./cmd/DrawTextureCmd\"\nimport { DrawTexturesCmd } from \"./cmd/DrawTexturesCmd\"\nimport { DrawTrianglesCmd } from \"./cmd/DrawTrianglesCmd\"\nimport { FillTextCmd } from \"./cmd/FillTextCmd\"\nimport { FillTextureCmd } from \"./cmd/FillTextureCmd\"\nimport { RestoreCmd } from \"./cmd/RestoreCmd\"\nimport { RotateCmd } from \"./cmd/RotateCmd\"\nimport { SaveCmd } from \"./cmd/SaveCmd\"\nimport { ScaleCmd } from \"./cmd/ScaleCmd\"\nimport { TransformCmd } from \"./cmd/TransformCmd\"\nimport { TranslateCmd } from \"./cmd/TranslateCmd\"\nimport { Matrix } from \"../maths/Matrix\"\nimport { Point } from \"../maths/Point\"\nimport { Rectangle } from \"../maths/Rectangle\"\nimport { Context } from \"../resource/Context\"\nimport { Texture } from \"../resource/Texture\"\nimport { Utils } from \"../utils/Utils\"\nimport { VectorGraphManager } from \"../utils/VectorGraphManager\"\nimport { ILaya } from \"../../ILaya\";\nimport { WordText } from \"../utils/WordText\";\nimport { ColorUtils } from \"../utils/ColorUtils\";\nimport type { Material } from \"../resource/Material\";\nimport { CommandUniformMap } from \"../RenderEngine/CommandUniformMap\";\nimport { ShaderDataType } from \"../RenderEngine/RenderShader/ShaderData\";\nimport { Value2D } from \"../webgl/shader/d2/value/Value2D\";\nimport { DrawEllipseCmd } from \"./cmd/DrawEllipseCmd\";\nimport { DrawRoundRectCmd } from \"./cmd/DrawRoundRectCmd\";\nimport { LayaGL } from \"../layagl/LayaGL\";\n\n/**\n * <code>Graphics</code> 类用于创建绘图显示对象。Graphics可以同时绘制多个位图或者矢量图，还可以结合save，restore，transform，scale，rotate，translate，alpha等指令对绘图效果进行变化。\n * Graphics以命令流方式存储，可以通过cmds属性访问所有命令流。Graphics是比Sprite更轻量级的对象，合理使用能提高应用性能(比如把大量的节点绘图改为一个节点的Graphics命令集合，能减少大量节点创建消耗)。\n * @see laya.display.Sprite#graphics\n */\nexport class Graphics {\n\n    /**\n     * add global Uniform Data Map\n     * @param propertyID \n     * @param propertyKey \n     * @param uniformtype \n     */\n    static add2DGlobalUniformData(propertyID: number, propertyKey: string, uniformtype: ShaderDataType) {\n        let sceneUniformMap: CommandUniformMap = LayaGL.renderOBJCreate.createGlobalUniformMap(\"Sprite2DGlobal\");\n        sceneUniformMap.addShaderUniform(propertyID, propertyKey, uniformtype);\n    }\n\n    /**\n     * get global shaderData\n     */\n    static get globalShaderData() {\n        return Value2D.globalShaderData;\n    }\n\n    /**@internal */\n    _sp: Sprite | null = null;\n    /**@internal */\n    _render: (sprite: Sprite, context: Context, x: number, y: number) => void = this._renderEmpty;\n    /**@private */\n    private _cmds: any[] = [];\n    /**@private */\n    protected _vectorgraphArray: any[] | null = null;\n    /**@private */\n    private _graphicBounds: GraphicsBounds | null = null;\n\n    private _material: Material;\n\n    constructor() {\n        this._createData();\n    }\n\n    /**@internal */\n    _createData(): void {\n\n    }\n\n    /**@internal */\n    _clearData(): void {\n\n    }\n\n    /**@internal */\n    _destroyData(): void {\n\n    }\n\n    /**\n     * <p>销毁此对象。</p>\n     */\n    destroy(): void {\n        this.clear(true);\n        if (this._graphicBounds) this._graphicBounds.destroy();\n        this._graphicBounds = null;\n        this._vectorgraphArray = null;\n        if (this._sp) {\n            this._sp._renderType = 0;\n            this._sp = null;\n        }\n        this._destroyData();\n    }\n\n    /**\n     * <p>清空绘制命令。</p>\n     * @param recoverCmds 是否回收绘图指令数组，设置为true，则对指令数组进行回收以节省内存开销，建议设置为true进行回收，但如果手动引用了数组，不建议回收\n     */\n    clear(recoverCmds: boolean = true): void {\n        //TODO:内存回收all\n        if (recoverCmds) {\n            for (let i = 0, len = this._cmds.length; i < len; i++) {\n                this._cmds[i].recover();\n            }\n        }\n\n        this._cmds.length = 0;\n        this._render = this._renderEmpty;\n        this._clearData();\n        if (this._sp) {\n            this._sp._renderType &= ~SpriteConst.GRAPHICS;\n        }\n        this._repaint();\n        if (this._vectorgraphArray) {\n            for (let i = 0, len = this._vectorgraphArray.length; i < len; i++) {\n                VectorGraphManager.getInstance().deleteShape(this._vectorgraphArray[i]);\n            }\n            this._vectorgraphArray.length = 0;\n        }\n    }\n\n    /**@private */\n    _clearBoundsCache(onSizeChanged?: boolean): void {\n        if (this._graphicBounds) {\n            if (!onSizeChanged || this._graphicBounds._affectBySize)\n                this._graphicBounds.reset();\n        }\n    }\n\n    /**@private */\n    private _initGraphicBounds(): void {\n        if (!this._graphicBounds) {\n            this._graphicBounds = GraphicsBounds.create();\n            this._graphicBounds._graphics = this;\n        }\n    }\n\n    /**\n     * @internal\n     * 重绘此对象。\n     */\n    _repaint(): void {\n        this._clearBoundsCache();\n        this._sp && this._sp.repaint();\n    }\n\n    /**@internal */\n    //TODO:coverage\n    _isOnlyOne(): boolean {\n        return this._cmds.length === 1;\n    }\n\n    /**\n     * 命令流。存储了所有绘制命令。\n     */\n    get cmds() {\n        return this._cmds;\n    }\n\n    set cmds(value) {\n        if (this._sp) {\n            this._sp._renderType |= SpriteConst.GRAPHICS;\n        }\n\n        this._cmds = value;\n\n        let len = value.length;\n        this._render = len === 0 ? this._renderEmpty : (len === 1 ? this._renderOne : this._renderAll);\n        this._repaint();\n    }\n\n    /**\n     * 保存到命令流。\n     */\n    addCmd(cmd: any): any {\n        if (cmd == null) {\n            console.warn(\"null cmd\");\n            return;\n        }\n\n        if (this._sp) {\n            this._sp._renderType |= SpriteConst.GRAPHICS;\n        }\n        this._cmds.push(cmd);\n        this._render = this._cmds.length === 1 ? this._renderOne : this._renderAll;\n        this._repaint();\n        return cmd;\n    }\n\n    removeCmd(cmd: any) {\n        let i = this.cmds.indexOf(cmd);\n        if (i != -1) {\n            this._cmds.splice(i, 1);\n\n            let len = this._cmds.length;\n            this._render = len === 0 ? this._renderEmpty : (len === 1 ? this._renderOne : this._renderAll);\n            this._repaint();\n        }\n    }\n\n    /**\n     * 获取位置及宽高信息矩阵(比较耗CPU，频繁使用会造成卡顿，尽量少用)。\n     * @param realSize\t（可选）使用图片的真实大小，默认为false\n     * @return 位置与宽高组成的 一个 Rectangle 对象。\n     */\n    getBounds(realSize: boolean = false): Rectangle {\n        this._initGraphicBounds();\n        return this._graphicBounds!.getBounds(realSize);\n    }\n\n    /**\n     * @private\n     * @param realSize\t（可选）使用图片的真实大小，默认为false\n     * 获取端点列表。\n     */\n    getBoundPoints(realSize: boolean = false): any[] {\n        this._initGraphicBounds();\n        return this._graphicBounds!.getBoundPoints(realSize);\n    }\n\n    /**\n     * \n     */\n    get material() {\n        return this._material;\n    }\n\n    /**\n     * \n     */\n    set material(value: Material) {\n        if (this._material == value)\n            return;\n        this._material && this._material._removeReference();\n        this._material = value;\n        if (value != null)\n            value._addReference();\n    }\n\n    /**\n     * 绘制单独图片\n     * @param texture\t\t纹理。\n     * @param x \t\t（可选）X轴偏移量。\n     * @param y \t\t（可选）Y轴偏移量。\n     * @param width\t\t（可选）宽度。\n     * @param height\t（可选）高度。\n     * @param color\t \t （可选）颜色\n     */\n    drawImage(texture: Texture, x: number = 0, y: number = 0, width: number = null, height: number = null, color: string = null): DrawImageCmd | null {\n        if (!texture) return null;\n        if (!texture.bitmap) return null;\n        return this.addCmd(DrawImageCmd.create(texture, x, y, width, height, color));\n    }\n\n    /**\n     * 绘制纹理，相比drawImage功能更强大，性能会差一些\n     * @param texture\t\t纹理。\n     * @param x \t\t（可选）X轴偏移量。\n     * @param y \t\t（可选）Y轴偏移量。\n     * @param width\t\t（可选）宽度。\n     * @param height\t（可选）高度。\n     * @param matrix\t（可选）矩阵信息。\n     * @param alpha\t\t（可选）透明度。\n     * @param color\t\t（可选）颜色滤镜。\n     * @param blendMode （可选）混合模式。\n     */\n    drawTexture(texture: Texture | null, x: number = 0, y: number = 0, width: number = null, height: number = null, matrix: Matrix | null = null, alpha: number = 1, color: string | null = null, blendMode: string | null = null, uv?: number[]): DrawTextureCmd | null {\n        if (!texture || alpha < 0.01) return null;\n        if (!texture.bitmap) return null;\n        return this.addCmd(DrawTextureCmd.create(texture, x, y, width, height, matrix, alpha, color, blendMode, uv));\n    }\n\n    /**\n     * 批量绘制同样纹理。\n     * @param texture 纹理。\n     * @param pos 绘制次数和坐标。\n     * @param colors 图片颜色数组。\n     */\n    drawTextures(texture: Texture, pos: any[], colors?: number[]): DrawTexturesCmd | null {\n        if (!texture) return null;\n        return this.addCmd(DrawTexturesCmd.create(texture, pos, colors));\n    }\n\n    /**\n     * 绘制一组三角形\n     * @param texture\t纹理。\n     * @param x\t\t\tX轴偏移量。\n     * @param y\t\t\tY轴偏移量。\n     * @param vertices  顶点数组。\n     * @param indices\t顶点索引。\n     * @param uvData\tUV数据。\n     * @param matrix\t缩放矩阵。\n     * @param alpha\t\talpha\n     * @param color\t\t颜色变换\n     * @param blendMode\tblend模式\n     */\n    drawTriangles(texture: Texture, x: number, y: number, vertices: Float32Array, uvs: Float32Array, indices: Uint16Array, matrix: Matrix | null = null,\n        alpha: number = 1, color: string | number = null, blendMode: string | null = null): DrawTrianglesCmd {\n        return this.addCmd(DrawTrianglesCmd.create(texture, x, y, vertices, uvs, indices, matrix, alpha, color, blendMode));\n    }\n\n    /**\n     * 用 texture 填充。\n     * @param texture\t\t纹理。\n     * @param x\t\t\tX轴偏移量。\n     * @param y\t\t\tY轴偏移量。\n     * @param width\t\t（可选）宽度。\n     * @param height\t（可选）高度。\n     * @param type\t\t（可选）填充类型 repeat|repeat-x|repeat-y|no-repeat\n     * @param offset\t（可选）贴图纹理偏移\n     * @param color\t \t （可选）颜色\n     *\n     */\n    fillTexture(texture: Texture, x: number, y: number, width: number = 0, height: number = 0, type: string = \"repeat\", offset: Point | null = null, color: string = null): FillTextureCmd | null {\n        if (texture && texture.bitmap)\n            return this.addCmd(FillTextureCmd.create(texture, x, y, width, height, type, offset || Point.EMPTY, color));\n        else\n            return null;\n    }\n\n    /**\n     * 设置剪裁区域，超出剪裁区域的坐标不显示。\n     * @param x X 轴偏移量。\n     * @param y Y 轴偏移量。\n     * @param width 宽度。\n     * @param height 高度。\n     */\n    clipRect(x: number, y: number, width: number, height: number): ClipRectCmd {\n        return this.addCmd(ClipRectCmd.create(x, y, width, height));\n    }\n\n    /**\n     * 在画布上绘制文本。\n     * @param text 在画布上输出的文本。\n     * @param x 开始绘制文本的 x 坐标位置（相对于画布）。\n     * @param y 开始绘制文本的 y 坐标位置（相对于画布）。\n     * @param font 定义字号和字体，比如\"20px Arial\"。\n     * @param color 定义文本颜色，比如\"#ff0000\"。\n     * @param textAlign 文本对齐方式，可选值：\"left\"，\"center\"，\"right\"。\n     */\n    fillText(text: string | WordText, x: number, y: number, font: string, color: string, textAlign: string): FillTextCmd {\n        return this.addCmd(FillTextCmd.create(text, x, y, font, color, textAlign, 0, \"\"));\n    }\n\n    /**\n     * 在画布上绘制“被填充且镶边的”文本。\n     * @param text\t\t\t在画布上输出的文本。\n     * @param x\t\t\t\t开始绘制文本的 x 坐标位置（相对于画布）。\n     * @param y\t\t\t\t开始绘制文本的 y 坐标位置（相对于画布）。\n     * @param font\t\t\t定义字体和字号，比如\"20px Arial\"。\n     * @param fillColor\t\t定义文本颜色，比如\"#ff0000\"。\n     * @param textAlign\t\t文本对齐方式，可选值：\"left\"，\"center\"，\"right\"。\n     * @param lineWidth\t\t镶边线条宽度。\n     * @param borderColor\t定义镶边文本颜色。\n     */\n    fillBorderText(text: string | WordText, x: number, y: number, font: string, fillColor: string, textAlign: string, lineWidth: number, borderColor: string): FillTextCmd {\n        return this.addCmd(FillTextCmd.create(text, x, y, font, fillColor, textAlign, lineWidth, borderColor));\n    }\n\n    /**\n     * 在画布上绘制文本（没有填色）。文本的默认颜色是黑色。\n     * @param text\t\t在画布上输出的文本。\n     * @param x\t\t\t开始绘制文本的 x 坐标位置（相对于画布）。\n     * @param y\t\t\t开始绘制文本的 y 坐标位置（相对于画布）。\n     * @param font\t\t定义字体和字号，比如\"20px Arial\"。\n     * @param color\t\t定义文本颜色，比如\"#ff0000\"。\n     * @param lineWidth\t线条宽度。\n     * @param textAlign\t文本对齐方式，可选值：\"left\"，\"center\"，\"right\"。\n     */\n    strokeText(text: string | WordText, x: number, y: number, font: string, color: string, lineWidth: number, textAlign: string): FillTextCmd {\n        return this.addCmd(FillTextCmd.create(text, x, y, font, null, textAlign, lineWidth, color));\n    }\n\n    /**\n     * 设置透明度。\n     * @param value 透明度。\n     */\n    alpha(alpha: number): AlphaCmd {\n        return this.addCmd(AlphaCmd.create(alpha));\n    }\n\n    /**\n     * 替换绘图的当前转换矩阵。\n     * @param mat 矩阵。\n     * @param pivotX\t（可选）水平方向轴心点坐标。\n     * @param pivotY\t（可选）垂直方向轴心点坐标。\n     */\n    transform(matrix: Matrix, pivotX: number = 0, pivotY: number = 0): TransformCmd {\n        return this.addCmd(TransformCmd.create(matrix, pivotX, pivotY));\n    }\n\n    /**\n     * 旋转当前绘图。(推荐使用transform，性能更高)\n     * @param angle\t\t旋转角度，以弧度计。\n     * @param pivotX\t（可选）水平方向轴心点坐标。\n     * @param pivotY\t（可选）垂直方向轴心点坐标。\n     */\n    rotate(angle: number, pivotX: number = 0, pivotY: number = 0): RotateCmd {\n        return this.addCmd(RotateCmd.create(angle, pivotX, pivotY));\n    }\n\n    /**\n     * 缩放当前绘图至更大或更小。(推荐使用transform，性能更高)\n     * @param scaleX\t水平方向缩放值。\n     * @param scaleY\t垂直方向缩放值。\n     * @param pivotX\t（可选）水平方向轴心点坐标。\n     * @param pivotY\t（可选）垂直方向轴心点坐标。\n     */\n    scale(scaleX: number, scaleY: number, pivotX: number = 0, pivotY: number = 0): ScaleCmd {\n        return this.addCmd(ScaleCmd.create(scaleX, scaleY, pivotX, pivotY));\n    }\n\n    /**\n     * 重新映射画布上的 (0,0) 位置。\n     * @param x 添加到水平坐标（x）上的值。\n     * @param y 添加到垂直坐标（y）上的值。\n     */\n    translate(tx: number, ty: number): TranslateCmd {\n        return this.addCmd(TranslateCmd.create(tx, ty));\n    }\n\n    /**\n     * 保存当前环境的状态。\n     */\n    save(): SaveCmd {\n        return this.addCmd(SaveCmd.create());\n    }\n\n    /**\n     * 返回之前保存过的路径状态和属性。\n     */\n    restore(): RestoreCmd {\n        return this.addCmd(RestoreCmd.create());\n    }\n\n    /**\n     * @private\n     * 替换文本颜色。\n     * @param color 颜色。\n     */\n    replaceTextColor(color: string): void {\n        this._repaint();\n        let cmds = this._cmds;\n        for (let i = cmds.length - 1; i > -1; i--) {\n            let cmd = cmds[i];\n            var cmdID: string = cmd.cmdID;\n            switch (cmdID) {\n                case FillTextCmd.ID:\n                    (cmd as FillTextCmd).color = color;\n                    break;\n                case DrawImageCmd.ID: //bitmap font\n                    (cmd as DrawImageCmd).color = color != null ? ColorUtils.create(color).numColor : 0xffffffff;\n                    break;\n            }\n        }\n    }\n\n    /**\n     * 加载并显示一个图片。\n     * @param url\t\t图片地址。\n     * @param x\t\t\t（可选）显示图片的x位置。\n     * @param y\t\t\t（可选）显示图片的y位置。\n     * @param width\t\t（可选）显示图片的宽度，设置为0表示使用图片默认宽度。\n     * @param height\t（可选）显示图片的高度，设置为0表示使用图片默认高度。\n     * @param complete\t（可选）加载完成回调。\n     */\n    loadImage(url: string, x: number = 0, y: number = 0, width: number = null, height: number = null, complete: Function | null = null): void {\n        let tex: Texture = ILaya.loader.getRes(url);\n        if (tex) {\n            this.drawImage(tex, x, y, width, height);\n            complete && complete.call(this._sp);\n        }\n        else {\n            ILaya.loader.load(url).then((tex: Texture) => {\n                this.drawImage(tex, x, y, width, height);\n                complete && complete.call(this._sp);\n            });\n        }\n    }\n\n    /**\n     * @internal\n     */\n    _renderEmpty(sprite: Sprite, context: Context, x: number, y: number): void {\n    }\n\n    /**\n     * @internal\n     */\n    _renderAll(sprite: Sprite, context: Context, x: number, y: number): void {\n        context.sprite = sprite;\n        context.material = this._material;\n        var cmds = this._cmds!;\n        for (let i = 0, n = cmds.length; i < n; i++) {\n            cmds[i].run(context, x, y);\n        }\n    }\n\n    /**\n     * @internal\n     */\n    _renderOne(sprite: Sprite, context: Context, x: number, y: number): void {\n        context.sprite = sprite;\n        context.material = this._material;\n        this._cmds[0].run(context, x, y);\n    }\n\n    /**\n     * 绘制一条线。\n     * @param fromX\t\tX轴开始位置。\n     * @param fromY\t\tY轴开始位置。\n     * @param toX\t\tX轴结束位置。\n     * @param toY\t\tY轴结束位置。\n     * @param lineColor\t颜色。\n     * @param lineWidth\t（可选）线条宽度。\n     */\n    drawLine(fromX: number, fromY: number, toX: number, toY: number, lineColor: string, lineWidth: number = 1): DrawLineCmd {\n        return this.addCmd(DrawLineCmd.create(fromX, fromY, toX, toY, lineColor, lineWidth));\n    }\n\n    /**\n     * 绘制一系列线段。\n     * @param x\t\t\t开始绘制的X轴位置。\n     * @param y\t\t\t开始绘制的Y轴位置。\n     * @param points\t线段的点集合。格式:[x1,y1,x2,y2,x3,y3...]。\n     * @param lineColor\t线段颜色，或者填充绘图的渐变对象。\n     * @param lineWidth\t（可选）线段宽度。\n     */\n    drawLines(x: number, y: number, points: any[], lineColor: any, lineWidth: number = 1): DrawLinesCmd | null {\n        if (!points || points.length < 4) return null;\n        return this.addCmd(DrawLinesCmd.create(x, y, points, lineColor, lineWidth));\n    }\n\n    /**\n     * 绘制一系列曲线。\n     * @param x\t\t\t开始绘制的 X 轴位置。\n     * @param y\t\t\t开始绘制的 Y 轴位置。\n     * @param points\t线段的点集合，格式[controlX, controlY, anchorX, anchorY...]。\n     * @param lineColor\t线段颜色，或者填充绘图的渐变对象。\n     * @param lineWidth\t（可选）线段宽度。\n     */\n    drawCurves(x: number, y: number, points: any[], lineColor: any, lineWidth: number = 1): DrawCurvesCmd {\n        return this.addCmd(DrawCurvesCmd.create(x, y, points, lineColor, lineWidth));\n    }\n\n    /**\n     * 绘制矩形。\n     * @param x\t\t\t开始绘制的 X 轴位置。\n     * @param y\t\t\t开始绘制的 Y 轴位置。\n     * @param width\t\t矩形宽度。\n     * @param height\t矩形高度。\n     * @param fillColor\t填充颜色，或者填充绘图的渐变对象。\n     * @param lineColor\t（可选）边框颜色，或者填充绘图的渐变对象。\n     * @param lineWidth\t（可选）边框宽度。\n     * @param percent 位置和大小是否是百分比值。\n     */\n    drawRect(x: number, y: number, width: number, height: number, fillColor: any, lineColor: any = null, lineWidth: number = 1, percent?: boolean): DrawRectCmd {\n        return this.addCmd(DrawRectCmd.create(x, y, width, height, fillColor, lineColor, lineWidth, percent));\n    }\n\n    /**\n     * 绘制圆角矩形\n     * @param x             开始绘制的 X 轴位置。\n     * @param y             开始绘制的 Y 轴位置。\n     * @param width         圆角矩形宽度。\n     * @param height        圆角矩形高度。\n     * @param lt            左上圆角\n     * @param rt            右上圆角\n     * @param lb            左下圆角\n     * @param rb            右下圆角\n     * @param fillColor     填充颜色，或者填充绘图的渐变对象。\n     * @param lineColor     （可选）边框颜色，或者填充绘图的渐变对象。\n     * @param lineWidth     （可选）边框宽度。\n     * @param percent       （可选）位置和大小是否是百分比值。\n     * @returns \n     */\n    drawRoundRect(x: number, y: number, width: number, height: number, lt: number, rt: number, lb: number, rb: number, fillColor: any, lineColor: any = null, lineWidth: number = 1, percent?: boolean) {\n        return this.addCmd(DrawRoundRectCmd.create(x, y, width, height, lt, rt, lb, rb, fillColor, lineColor, lineWidth, percent));\n    }\n\n    /**\n     * 绘制圆形。\n     * @param x\t\t\t圆点X 轴位置。\n     * @param y\t\t\t圆点Y 轴位置。\n     * @param radius\t半径。\n     * @param fillColor\t填充颜色，或者填充绘图的渐变对象。\n     * @param lineColor\t（可选）边框颜色，或者填充绘图的渐变对象。\n     * @param lineWidth\t（可选）边框宽度。\n     */\n    drawCircle(x: number, y: number, radius: number, fillColor: any, lineColor: any = null, lineWidth: number = 1): DrawCircleCmd {\n        return this.addCmd(DrawCircleCmd.create(x, y, radius, fillColor, lineColor, lineWidth));\n    }\n    /**\n     * 绘制椭圆形\n     * @param x         圆点X 轴位置。\n     * @param y         圆点Y 轴位置。\n     * @param width     横向半径。\n     * @param height    纵向半径。\n     * @param fillColor 填充颜色，或者填充绘图的渐变对象。\n     * @param lineColor （可选）边框颜色，或者填充绘图的渐变对象。\n     * @param lineWidth （可选）边框宽度。\n     * @param percent   （可选）位置和大小是否是百分比值。\n     */\n    drawEllipse(x: number, y: number, width: number, height: number, fillColor: any, lineColor: any, lineWidth: number, percent?: boolean): DrawEllipseCmd {\n        return this.addCmd(DrawEllipseCmd.create(x, y, width, height, fillColor, lineColor, lineWidth, percent));\n    }\n\n    /**\n     * 绘制扇形。\n     * @param x\t\t\t\t开始绘制的 X 轴位置。\n     * @param y\t\t\t\t开始绘制的 Y 轴位置。\n     * @param radius\t\t扇形半径。\n     * @param startAngle\t开始角度。\n     * @param endAngle\t\t结束角度。\n     * @param fillColor\t\t填充颜色，或者填充绘图的渐变对象。\n     * @param lineColor\t\t（可选）边框颜色，或者填充绘图的渐变对象。\n     * @param lineWidth\t\t（可选）边框宽度。\n     */\n    drawPie(x: number, y: number, radius: number, startAngle: number, endAngle: number, fillColor: any, lineColor: any = null, lineWidth: number = 1): DrawPieCmd {\n        return this.addCmd(DrawPieCmd.create(x, y, radius, Utils.toRadian(startAngle), Utils.toRadian(endAngle), fillColor, lineColor, lineWidth));\n    }\n\n    /**\n     * 绘制多边形。\n     * @param x\t\t\t开始绘制的 X 轴位置。\n     * @param y\t\t\t开始绘制的 Y 轴位置。\n     * @param points\t多边形的点集合。\n     * @param fillColor\t填充颜色，或者填充绘图的渐变对象。\n     * @param lineColor\t（可选）边框颜色，或者填充绘图的渐变对象。\n     * @param lineWidth\t（可选）边框宽度。\n     */\n    drawPoly(x: number, y: number, points: any[], fillColor: any, lineColor: any = null, lineWidth: number = 1): DrawPolyCmd {\n        return this.addCmd(DrawPolyCmd.create(x, y, points, fillColor, lineColor, lineWidth));\n    }\n\n    /**\n     * 绘制路径。\n     * @param x\t\t开始绘制的 X 轴位置。\n     * @param y\t\t开始绘制的 Y 轴位置。\n     * @param paths\t路径集合，路径支持以下格式：[[\"moveTo\",x,y],[\"lineTo\",x,y],[\"arcTo\",x1,y1,x2,y2,r],[\"closePath\"]]。\n     * @param brush\t（可选）刷子定义，支持以下设置{fillStyle:\"#FF0000\"}。\n     * @param pen\t（可选）画笔定义，支持以下设置{strokeStyle,lineWidth,lineJoin:\"bevel|round|miter\",lineCap:\"butt|round|square\",miterLimit}。\n     */\n    drawPath(x: number, y: number, paths: any[], brush: any = null, pen: any = null): DrawPathCmd {\n        return this.addCmd(DrawPathCmd.create(x, y, paths, brush, pen));\n    }\n\n    /**\n     * @private\n     * 绘制带九宫格的图片\n     * @param\ttexture\n     * @param\tx\n     * @param\ty\n     * @param\twidth\n     * @param\theight\n     * @param\tsizeGrid\n     * @param\tcolor\n     */\n    draw9Grid(texture: Texture, x: number = 0, y: number = 0, width: number = 0, height: number = 0, sizeGrid: any[], color?: string): void {\n        this.addCmd(Draw9GridTextureCmd.create(texture, x, y, width, height, sizeGrid, false, color));\n    }\n}\n","import { NodeFlags } from \"../Const\"\nimport { Component } from \"../components/Component\"\nimport { Event } from \"../events/Event\"\nimport { EventDispatcher } from \"../events/EventDispatcher\"\nimport { Pool } from \"../utils/Pool\"\nimport { Stat } from \"../utils/Stat\"\nimport { Timer } from \"../utils/Timer\"\nimport { ILaya } from \"../../ILaya\";\nimport { ComponentDriver } from \"../components/ComponentDriver\";\n\nconst ARRAY_EMPTY: any[] = [];\n\n/**\n * 添加到父对象后调度。\n * @eventType Event.ADDED\n */\n/*[Event(name = \"added\", type = \"laya.events.Event\")]*/\n/**\n * 被父对象移除后调度。\n * @eventType Event.REMOVED\n */\n/*[Event(name = \"removed\", type = \"laya.events.Event\")]*/\n/**\n * 加入节点树时调度。\n * @eventType Event.DISPLAY\n */\n/*[Event(name = \"display\", type = \"laya.events.Event\")]*/\n/**\n * 从节点树移除时调度。\n * @eventType Event.UNDISPLAY\n */\n/*[Event(name = \"undisplay\", type = \"laya.events.Event\")]*/\n\n/**\n *  <code>Node</code> 类是可放在显示列表中的所有对象的基类。该显示列表管理 Laya 运行时中显示的所有对象。使用 Node 类排列显示列表中的显示对象。Node 对象可以有子显示对象。\n */\nexport class Node extends EventDispatcher {\n    static EVENT_SET_ACTIVESCENE: string = \"ActiveScene\";\n    static EVENT_SET_IN_ACTIVESCENE: string = \"InActiveScene\";\n    /**@private */\n    private _bits: number = 0;\n    /**@private */\n    private _hideFlags: number = 0;\n\n    /**@internal 子对象集合，请不要直接修改此对象。*/\n    _children: Node[] = ARRAY_EMPTY;\n    /**@internal 父节点对象*/\n    _parent: Node = null;\n    /**@internal */\n    _destroyed: boolean = false;\n    /**@internal */\n    _conchData: any;\n    /**@internal */\n    _componentDriver: ComponentDriver;\n    /**@internal */\n    _is3D: boolean;\n    _url: string;\n    _extra: INodeExtra;\n\n    /**节点名称。*/\n    name: string = \"\";\n\n    /** 节点标签 */\n    tag: string;\n\n    /**\n     * 如果节点从资源中创建，这里记录是他的url\n     */\n    get url(): string {\n        return this._url;\n    }\n\n    /**\n     * 设置资源的URL\n     */\n    set url(path: string) {\n        this._url = path;\n    }\n\n    get hideFlags(): number {\n        return this._hideFlags;\n    }\n\n    set hideFlags(value: number) {\n        this._hideFlags = value;\n    }\n\n    /** 是否3D节点，即Scene3D和Sprite3D及其衍生类 */\n    get is3D(): boolean {\n        return this._is3D;\n    }\n\n    /** 是否已经销毁。对象销毁后不能再使用。*/\n    get destroyed(): boolean {\n        return this._destroyed;\n    }\n\n    constructor() {\n        super();\n\n        this._initialize();\n    }\n\n    //@internal\n    _initialize(): void {\n        this._extra = {};\n    }\n\n    _setBit(type: number, value: boolean): void {\n        if (type === NodeFlags.DISPLAY) {\n            var preValue: boolean = this._getBit(type);\n            if (preValue != value) this._updateDisplayedInstage();\n        }\n        if (value) this._bits |= type;\n        else this._bits &= ~type;\n    }\n\n    _getBit(type: number): boolean {\n        return (this._bits & type) != 0;\n    }\n\n    /**@internal */\n    _setUpNoticeChain(): void {\n        if (this._getBit(NodeFlags.DISPLAY)) this._setBitUp(NodeFlags.DISPLAY);\n    }\n\n    /**@internal */\n    _setBitUp(type: number): void {\n        var ele: Node = this;\n        ele._setBit(type, true);\n        ele = ele._parent;\n        while (ele) {\n            if (ele._getBit(type)) return;\n            ele._setBit(type, true);\n            ele = ele._parent;\n        }\n    }\n\n    protected onStartListeningToType(type: string) {\n        if (type === Event.DISPLAY || type === Event.UNDISPLAY) {\n            if (!this._getBit(NodeFlags.DISPLAY)) this._setBitUp(NodeFlags.DISPLAY);\n        }\n    }\n\n    bubbleEvent(type: string, data?: any) {\n        let arr: Array<Node> = _bubbleChainPool.length > 0 ? _bubbleChainPool.pop() : [];\n        arr.length = 0;\n\n        let obj: Node = this;\n        while (obj) {\n            if (obj.activeInHierarchy)\n                arr.push(obj);\n            obj = obj.parent;\n        }\n\n        if (data instanceof Event) {\n            data._stopped = false;\n            for (let obj of arr) {\n                data.setTo(type, obj, this);\n                obj.event(type, data);\n                if (data._stopped)\n                    break;\n            }\n        }\n        else {\n            for (let obj of arr)\n                obj.event(type, data);\n        }\n\n        _bubbleChainPool.push(arr);\n    }\n\n    hasHideFlag(flag: number): boolean {\n        return (this._hideFlags & flag) != 0;\n    }\n\n    /**\n     * <p>销毁此对象。destroy对象默认会把自己从父节点移除，并且清理自身引用关系，等待js自动垃圾回收机制回收。destroy后不能再使用。</p>\n     * <p>destroy时会移除自身的事情监听，自身的timer监听，移除子对象及从父节点移除自己。</p>\n     * @param destroyChild\t（可选）是否同时销毁子节点，若值为true,则销毁子节点，否则不销毁子节点。\n     */\n    destroy(destroyChild: boolean = true): void {\n        this._destroyed = true;\n        this.destroyAllComponent();\n        this._parent && this._parent.removeChild(this);\n\n        //销毁子节点\n        if (this._children) {\n            if (destroyChild) this.destroyChildren();\n            else this.removeChildren();\n        }\n        this.onDestroy();\n\n        this._children = null;\n\n        //移除所有事件监听\n        this.offAll();\n    }\n\n    /**\n     * 销毁时执行\n     * 此方法为虚方法，使用时重写覆盖即可\n     */\n    onDestroy(): void {\n        //trace(\"onDestroy node\", this.name);\n    }\n\n    /**\n     * 销毁所有子对象，不销毁自己本身。\n     */\n    destroyChildren(): void {\n        //销毁子节点\n        if (this._children) {\n            //为了保持销毁顺序，所以需要正序销毁\n            for (let i = 0, n = this._children.length; i < n; i++) {\n                this._children[0] && this._children[0].destroy(true);\n            }\n        }\n    }\n\n\n    /**\n     * 添加子节点。\n     * @param\tnode 节点对象\n     * @return\t返回添加的节点\n     */\n    addChild<T extends Node>(node: T): T {\n        if (!node || this._destroyed || node as any === this) return node;\n        if ((<any>node)._zOrder) this._setBit(NodeFlags.HAS_ZORDER, true);\n        if (node._parent === this) {\n            var index: number = this.getChildIndex(node);\n            if (index !== this._children.length - 1) {\n                this._children.splice(index, 1);\n                this._children.push(node);\n                this._childChanged();\n            }\n        } else {\n            node._parent && node._parent.removeChild(node);\n            this._children === ARRAY_EMPTY && (this._children = []);\n            this._children.push(node);\n            node._setParent(this);\n        }\n\n        return node;\n    }\n\n    /**\n     * 批量增加子节点\n     * @param\t...args 无数子节点。\n     */\n    addChildren(...args: any[]): void {\n        var i: number = 0, n: number = args.length;\n        while (i < n) {\n            this.addChild(args[i++]);\n        }\n    }\n\n    /**\n     * 添加子节点到指定的索引位置。\n     * @param\tnode 节点对象。\n     * @param\tindex 索引位置。\n     * @return\t返回添加的节点。\n     */\n    addChildAt(node: Node, index: number): Node {\n        if (!node || this._destroyed || node === this) return node;\n        if ((<any>node)._zOrder) this._setBit(NodeFlags.HAS_ZORDER, true);\n        if (index >= 0 && index <= this._children.length) {\n            if (node._parent === this) {\n                var oldIndex: number = this.getChildIndex(node);\n                this._children.splice(oldIndex, 1);\n                this._children.splice(index, 0, node);\n                this._childChanged();\n            } else {\n                node._parent && node._parent.removeChild(node);\n                this._children === ARRAY_EMPTY && (this._children = []);\n                this._children.splice(index, 0, node);\n                node._setParent(this);\n            }\n            return node;\n        } else {\n            throw new Error(\"appendChildAt:The index is out of bounds\");\n        }\n    }\n\n    /**\n     * 根据子节点对象，获取子节点的索引位置。\n     * @param\tnode 子节点。\n     * @return\t子节点所在的索引位置。\n     */\n    getChildIndex(node: Node): number {\n        return this._children.indexOf(node);\n    }\n\n    /**\n     * 根据子节点的名字，获取子节点对象。\n     * @param\tname 子节点的名字。\n     * @return\t节点对象。\n     */\n    getChildByName(name: string): Node {\n        for (let child of this._children) {\n            if (child && child.name === name)\n                return child;\n        }\n        return null;\n    }\n\n    /**\n     * 根据子节点的索引位置，获取子节点对象。\n     * @param\tindex 索引位置\n     * @return\t子节点\n     */\n    getChildAt(index: number): Node {\n        return this._children[index] || null;\n    }\n\n    /**\n     * 设置子节点的索引位置。\n     * @param\tnode 子节点。\n     * @param\tindex 新的索引。\n     * @return\t返回子节点本身。\n     */\n    setChildIndex(node: Node, index: number): Node {\n        var childs: any[] = this._children;\n        if (index < 0 || index >= childs.length) {\n            throw new Error(\"setChildIndex:The index is out of bounds.\");\n        }\n\n        var oldIndex: number = this.getChildIndex(node);\n        if (oldIndex < 0) throw new Error(\"setChildIndex:node is must child of this object.\");\n        childs.splice(oldIndex, 1);\n        childs.splice(index, 0, node);\n        this._childChanged();\n        return node;\n    }\n\n    /**\n     * 子节点发生改变。\n     * @private\n     * @param\tchild 子节点。\n     */\n    protected _childChanged(child: Node = null): void {\n\n    }\n\n    /**\n     * 删除子节点。\n     * @param\tnode 子节点\n     * @return\t被删除的节点\n     */\n    removeChild(node: Node): Node {\n        if (!this._children) return node;\n        var index: number = this._children.indexOf(node);\n        return this.removeChildAt(index);\n    }\n\n    /**\n     * 从父容器删除自己，如已经被删除不会抛出异常。\n     * @return 当前节点（ Node ）对象。\n     */\n    removeSelf(): Node {\n        this._parent && this._parent.removeChild(this);\n        return this;\n    }\n\n    /**\n     * 根据子节点名字删除对应的子节点对象，如果找不到不会抛出异常。\n     * @param\tname 对象名字。\n     * @return 查找到的节点（ Node ）对象。\n     */\n    removeChildByName(name: string): Node {\n        var node: Node = this.getChildByName(name);\n        node && this.removeChild(node);\n        return node;\n    }\n\n    /**\n     * 根据子节点索引位置，删除对应的子节点对象。\n     * @param\tindex 节点索引位置。\n     * @return\t被删除的节点。\n     */\n    removeChildAt(index: number): Node {\n        var node: Node = this.getChildAt(index);\n        if (node) {\n            this._children.splice(index, 1);\n            node._setParent(null);\n        }\n        return node;\n    }\n\n    /**\n     * 删除指定索引区间的所有子对象。\n     * @param\tbeginIndex 开始索引。\n     * @param\tendIndex 结束索引。\n     * @return 当前节点对象。\n     */\n    removeChildren(beginIndex: number = 0, endIndex: number = 0x7fffffff): Node {\n        if (this._children && this._children.length > 0) {\n            var childs: any[] = this._children;\n            if (beginIndex === 0 && endIndex >= childs.length - 1) {\n                var arr: any[] = childs;\n                this._children = ARRAY_EMPTY;\n            } else {\n                arr = childs.splice(beginIndex, endIndex - beginIndex + 1);\n            }\n            for (var i: number = 0, n: number = arr.length; i < n; i++) {\n                arr[i]._setParent(null);\n            }\n        }\n        return this;\n    }\n\n    /**\n     * 替换子节点。\n     * 将传入的新节点对象替换到已有子节点索引位置处。\n     * @param\tnewNode 新节点。\n     * @param\toldNode 老节点。\n     * @return\t返回新节点。\n     */\n    replaceChild(newNode: Node, oldNode: Node): Node {\n        var index: number = this._children.indexOf(oldNode);\n        if (index > -1) {\n            this._children.splice(index, 1, newNode);\n            oldNode._setParent(null);\n            newNode._setParent(this);\n            return newNode;\n        }\n        return null;\n    }\n\n    /**\n     * 子对象数量。\n     */\n    get numChildren(): number {\n        return this._children ? this._children.length : 0;\n    }\n\n    /**父节点。*/\n    get parent(): Node {\n        return this._parent;\n    }\n\n    /**检查本节点是否是某个节点的上层节点\n     * @param node\n     * @return\n     */\n    isAncestorOf(node: Node): boolean {\n        let p = node.parent;\n        while (p) {\n            if (p == this)\n                return true;\n\n            p = p.parent;\n        }\n        return false;\n    };\n\n    /**@private */\n    protected _setParent(value: Node): void {\n        if (this._parent !== value) {\n            if (value) {\n                this._parent = value;\n                //如果父对象可见，则设置子对象可见\n                this._onAdded();\n                this.event(Event.ADDED);\n                if (this._getBit(NodeFlags.DISPLAY)) {\n                    this._setUpNoticeChain();\n                    value.displayedInStage && this._displayChild(this, true);\n                }\n                value._childChanged(this);\n            } else {\n                //设置子对象不可见\n                this._onRemoved();\n                this.event(Event.REMOVED);\n                let p = this._parent;\n                if (this._getBit(NodeFlags.DISPLAY)) this._displayChild(this, false);\n                this._parent = value;\n                p._childChanged(this);\n            }\n        }\n    }\n\n    /**表示是否在显示列表中显示。*/\n    get displayedInStage(): boolean {\n        if (this._getBit(NodeFlags.DISPLAY)) return this._getBit(NodeFlags.DISPLAYED_INSTAGE);\n        this._setBitUp(NodeFlags.DISPLAY);\n        return this._getBit(NodeFlags.DISPLAYED_INSTAGE);\n    }\n\n    /**@private */\n    private _updateDisplayedInstage(): void {\n        var ele: Node;\n        ele = this;\n        var stage: Node = ILaya.stage;\n        var displayedInStage: boolean = false;\n        while (ele) {\n            if (ele._getBit(NodeFlags.DISPLAY)) {\n                displayedInStage = ele._getBit(NodeFlags.DISPLAYED_INSTAGE);\n                break;\n            }\n            if (ele === stage || ele._getBit(NodeFlags.DISPLAYED_INSTAGE)) {\n                displayedInStage = true;\n                break;\n            }\n            ele = ele._parent;\n        }\n        this._setBit(NodeFlags.DISPLAYED_INSTAGE, displayedInStage);\n    }\n\n    /**@internal */\n    _setDisplay(value: boolean): void {\n        if (this._getBit(NodeFlags.DISPLAYED_INSTAGE) !== value) {\n            this._setBit(NodeFlags.DISPLAYED_INSTAGE, value);\n            if (value) this.event(Event.DISPLAY);\n            else this.event(Event.UNDISPLAY);\n        }\n    }\n\n    /**\n     * 设置指定节点对象是否可见(是否在渲染列表中)。\n     * @private\n     * @param\tnode 节点。\n     * @param\tdisplay 是否可见。\n     */\n    private _displayChild(node: Node, display: boolean): void {\n        var childs: any[] = node._children;\n        if (childs) {\n            for (var i: number = 0, n: number = childs.length; i < n; i++) {\n                var child: Node = childs[i];\n                if (!child) continue;\n                if (!child._getBit(NodeFlags.DISPLAY)) continue;\n                if (child._children.length > 0) {\n                    this._displayChild(child, display);\n                } else {\n                    child._setDisplay(display);\n                }\n            }\n        }\n        node._setDisplay(display);\n    }\n\n    /**\n     * 当前容器是否包含指定的 <code>Node</code> 节点对象 。\n     * @param\tnode  指定的 <code>Node</code> 节点对象 。\n     * @return\t一个布尔值表示是否包含指定的 <code>Node</code> 节点对象 。\n     */\n    contains(node: Node): boolean {\n        if (node === this) return true;\n        while (node) {\n            if (node._parent === this) return true;\n            node = node._parent;\n        }\n        return false;\n    }\n\n    /**\n     * 定时重复执行某函数。功能同Laya.timer.timerLoop()。\n     * @param\tdelay\t\t间隔时间(单位毫秒)。\n     * @param\tcaller\t\t执行域(this)。\n     * @param\tmethod\t\t结束时的回调方法。\n     * @param\targs\t\t（可选）回调参数。\n     * @param\tcoverBefore\t（可选）是否覆盖之前的延迟执行，默认为true。\n     * @param\tjumpFrame 时钟是否跳帧。基于时间的循环回调，单位时间间隔内，如能执行多次回调，出于性能考虑，引擎默认只执行一次，设置jumpFrame=true后，则回调会连续执行多次\n     */\n    timerLoop(delay: number, caller: any, method: Function, args: any[] = null, coverBefore: boolean = true, jumpFrame: boolean = false): void {\n        this.timer.loop(delay, caller, method, args, coverBefore, jumpFrame);\n    }\n\n    /**\n     * 定时执行某函数一次。功能同Laya.timer.timerOnce()。\n     * @param\tdelay\t\t延迟时间(单位毫秒)。\n     * @param\tcaller\t\t执行域(this)。\n     * @param\tmethod\t\t结束时的回调方法。\n     * @param\targs\t\t（可选）回调参数。\n     * @param\tcoverBefore\t（可选）是否覆盖之前的延迟执行，默认为true。\n     */\n    timerOnce(delay: number, caller: any, method: Function, args: any[] = null, coverBefore: boolean = true): void {\n        this.timer._create(false, false, delay, caller, method, args, coverBefore);\n    }\n\n    /**\n     * 定时重复执行某函数(基于帧率)。功能同Laya.timer.frameLoop()。\n     * @param\tdelay\t\t间隔几帧(单位为帧)。\n     * @param\tcaller\t\t执行域(this)。\n     * @param\tmethod\t\t结束时的回调方法。\n     * @param\targs\t\t（可选）回调参数。\n     * @param\tcoverBefore\t（可选）是否覆盖之前的延迟执行，默认为true。\n     */\n    frameLoop(delay: number, caller: any, method: Function, args: any[] = null, coverBefore: boolean = true): void {\n        this.timer._create(true, true, delay, caller, method, args, coverBefore);\n    }\n\n    /**\n     * 定时执行一次某函数(基于帧率)。功能同Laya.timer.frameOnce()。\n     * @param\tdelay\t\t延迟几帧(单位为帧)。\n     * @param\tcaller\t\t执行域(this)\n     * @param\tmethod\t\t结束时的回调方法\n     * @param\targs\t\t（可选）回调参数\n     * @param\tcoverBefore\t（可选）是否覆盖之前的延迟执行，默认为true\n     */\n    frameOnce(delay: number, caller: any, method: Function, args: any[] = null, coverBefore: boolean = true): void {\n        this.timer._create(true, false, delay, caller, method, args, coverBefore);\n    }\n\n    /**\n     * 清理定时器。功能同Laya.timer.clearTimer()。\n     * @param\tcaller 执行域(this)。\n     * @param\tmethod 结束时的回调方法。\n     */\n    clearTimer(caller: any, method: Function): void {\n        this.timer.clear(caller, method);\n    }\n\n    /**\n     * <p>延迟运行指定的函数。</p>\n     * <p>在控件被显示在屏幕之前调用，一般用于延迟计算数据。</p>\n     * @param method 要执行的函数的名称。例如，functionName。\n     * @param args 传递给 <code>method</code> 函数的可选参数列表。\n     *\n     * @see #runCallLater()\n     */\n    callLater(method: Function, args: any[] = null): void {\n        this.timer.callLater(this, method, args);\n    }\n\n    /**\n     * <p>如果有需要延迟调用的函数（通过 <code>callLater</code> 函数设置），则立即执行延迟调用函数。</p>\n     * @param method 要执行的函数名称。例如，functionName。\n     * @see #callLater()\n     */\n    runCallLater(method: Function): void {\n        this.timer.runCallLater(this, method);\n    }\n\n    //============================组件化支持==============================\n    /** @private */\n    protected _components: Component[];\n    /**@private */\n    private _activeChangeScripts: Component[];\n\n\n    _scene: Node;\n\n    /**\n     * 获得所属场景。\n     * @return\t场景。\n     */\n    get scene(): any {\n        return this._scene;\n    }\n\n    /**\n     * 获取自身是否激活。\n     *   @return\t自身是否激活。\n     */\n    get active(): boolean {\n        return !this._getBit(NodeFlags.NOT_READY) && !this._getBit(NodeFlags.NOT_ACTIVE);\n    }\n\n    /**\n     * 设置是否激活。\n     * @param\tvalue 是否激活。\n     */\n    set active(value: boolean) {\n        value = !!value;\n        if (!this._getBit(NodeFlags.NOT_ACTIVE) !== value) {\n            if (this._activeChangeScripts && this._activeChangeScripts.length !== 0) {\n                if (value)\n                    throw \"Node: can't set the main inActive node active in hierarchy,if the operate is in main inActive node or it's children script's onDisable Event.\";\n                else\n                    throw \"Node: can't set the main active node inActive in hierarchy,if the operate is in main active node or it's children script's onEnable Event.\";\n            } else {\n                this._setBit(NodeFlags.NOT_ACTIVE, !value);\n                if (this._parent) {\n                    if (this._parent.activeInHierarchy) {\n                        this._processActive(value, true);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * 获取在场景中是否激活。\n     *   @return\t在场景中是否激活。\n     */\n    get activeInHierarchy(): boolean {\n        return this._getBit(NodeFlags.ACTIVE_INHIERARCHY);\n    }\n\n    /**\n     * @private\n     */\n    protected _onActive(): void {\n        Stat.spriteCount++;\n    }\n\n    /**\n     * @private\n     */\n    protected _onInActive(): void {\n        Stat.spriteCount--;\n    }\n\n    /**\n     * @private\n     */\n    protected _onActiveInScene(): void {\n        this.event(Node.EVENT_SET_ACTIVESCENE, this._scene);\n        //override it.\n    }\n\n    /**\n     * @private\n     */\n    protected _onInActiveInScene(): void {\n        this.event(Node.EVENT_SET_IN_ACTIVESCENE, this._scene);\n        //override it.\n    }\n\n    /**\n    * 组件被激活后执行，此时所有节点和组件均已创建完毕，次方法只执行一次\n    * 此方法为虚方法，使用时重写覆盖即可\n    */\n    onAwake(): void {\n        //this.name  && trace(\"onAwake node \", this.name);\n    }\n\n    /**\n     * 组件被启用后执行，比如节点被添加到舞台后\n     * 此方法为虚方法，使用时重写覆盖即可\n     */\n    onEnable(): void {\n        //this.name  && trace(\"onEnable node \", this.name);\n    }\n\n    /**\n     * 组件被禁用时执行，比如从节点从舞台移除后\n     * 此方法为虚方法，使用时重写覆盖即可\n     */\n    onDisable(): void {\n        //trace(\"onDisable node\", this.name);\n    }\n\n    /**\n     * @internal\n     */\n    _parse(data: any, spriteMap: any): void {\n        //override it.\n    }\n\n    /**\n     * @internal\n     */\n    _setBelongScene(scene: Node): void {\n        if (!this._scene || this.scene != scene) {\n            this._scene = scene;\n            this._onActiveInScene();\n            for (let i = 0, n = this._children.length; i < n; i++)\n                this._children[i]._setBelongScene(scene);\n        }\n    }\n\n    /**\n     * @internal\n     */\n    _setUnBelongScene(): void {\n        if (this._scene !== this) {//移除节点本身是scene不继续派发\n            this._onInActiveInScene();\n            this._scene = null;\n            for (let i = 0, n = this._children.length; i < n; i++)\n                this._children[i]._setUnBelongScene();\n        }\n    }\n\n    _processActive(active: boolean, fromSetter?: boolean) {\n        (this._activeChangeScripts) || (this._activeChangeScripts = []);\n        let arr = this._activeChangeScripts;\n\n        if (active)\n            this._activeHierarchy(arr, fromSetter);\n        else\n            this._inActiveHierarchy(arr, fromSetter);\n\n        for (let i = 0, n = arr.length; i < n; i++) {\n            let comp = arr[i];\n            comp.owner && comp._setActive(active);\n        }\n\n        arr.length = 0;\n    }\n\n    /**\n     * @internal\n     */\n    _activeHierarchy(activeChangeScripts: any[], fromSetter?: boolean): void {\n        this._setBit(NodeFlags.ACTIVE_INHIERARCHY, true);\n        if (this._components) {\n            for (let i = 0, n = this._components.length; i < n; i++) {\n                let comp = this._components[i];\n                if (comp._isScript())\n                    (comp._enabled) && (activeChangeScripts.push(comp));\n                else\n                    comp._setActive(true);\n            }\n        }\n\n        this._onActive();\n        for (let i = 0, n = this._children.length; i < n; i++) {\n            let child = this._children[i];\n            (!child._getBit(NodeFlags.NOT_ACTIVE) && !child._getBit(NodeFlags.NOT_READY)) && (child._activeHierarchy(activeChangeScripts, fromSetter));\n        }\n        if (!this._getBit(NodeFlags.AWAKED)) {\n            this._setBit(NodeFlags.AWAKED, true);\n            this.onAwake();\n        }\n        this.onEnable();\n    }\n\n    /**\n     * @internal\n     */\n    _inActiveHierarchy(activeChangeScripts: any[], fromSetter?: boolean): void {\n        this._onInActive();\n        if (this._components) {\n            for (let i = 0, n = this._components.length; i < n; i++) {\n                let comp = this._components[i];\n                if (comp._isScript())\n                    comp._enabled && (activeChangeScripts.push(comp));\n                else\n                    comp._setActive(false);\n            }\n        }\n        this._setBit(NodeFlags.ACTIVE_INHIERARCHY, false);\n\n        for (let i = 0, n = this._children.length; i < n; i++) {\n            let child = this._children[i];\n            (child && !child._getBit(NodeFlags.NOT_ACTIVE)) && (child._inActiveHierarchy(activeChangeScripts, fromSetter));\n        }\n        this.onDisable();\n    }\n\n    /**\n     * @private\n     */\n    protected _onAdded(): void {\n        if (this._activeChangeScripts && this._activeChangeScripts.length !== 0) {\n            throw \"Node: can't set the main inActive node active in hierarchy,if the operate is in main inActive node or it's children script's onDisable Event.\";\n        } else {\n            let parentScene = this._parent.scene;\n            parentScene && this._setBelongScene(parentScene);\n            (this._parent.activeInHierarchy && this.active) && this._processActive(true);\n        }\n    }\n\n    /**\n     * @private\n     */\n    protected _onRemoved(): void {\n        if (this._activeChangeScripts && this._activeChangeScripts.length !== 0) {\n            throw \"Node: can't set the main active node inActive in hierarchy,if the operate is in main active node or it's children script's onEnable Event.\";\n        } else {\n            (this._parent.activeInHierarchy && this.active) && this._processActive(false);\n            this._parent.scene && this._setUnBelongScene();\n        }\n    }\n\n    /**\n     * @internal\n     */\n    _addComponentInstance(comp: Component): void {\n        if (!this._components)\n            this._components = [];\n        this._components.push(comp);\n\n        comp._setOwner(this);\n        if (this.activeInHierarchy)\n            comp._setActive(true);\n        this._componentsChanged?.(comp, 0);\n    }\n\n    /**\n     * @internal\n     */\n    _destroyComponent(comp: Component) {\n        if (!this._components)\n            return;\n\n        let i = this._components.indexOf(comp);\n        if (i != -1) {\n            this._components.splice(i, 1);\n            comp._destroy();\n            this._componentsChanged?.(comp, 1);\n        }\n    }\n\n    /**\n     * @internal\n     */\n    private destroyAllComponent(): void {\n        if (!this._components)\n            return;\n\n        for (let i = 0, n = this._components.length; i < n; i++) {\n            let item = this._components[i];\n            item && !item.destroyed && item._destroy();\n        }\n        this._components.length = 0;\n        this._componentsChanged?.(null, 2);\n    }\n\n    /**\n     * 组件列表发生改变。\n     * @private\n     */\n    protected _componentsChanged?(comp: Component, action: 0 | 1 | 2): void;\n\n    /**\n     * @internal 克隆。\n     * @param\tdestObject 克隆源。\n     */\n    _cloneTo(destObject: any, srcRoot: Node, dstRoot: Node): void {\n        var destNode: Node = (<Node>destObject);\n        if (this._components) {\n            for (let i = 0, n = this._components.length; i < n; i++) {\n                var destComponent = destNode.addComponent((this._components[i] as any).constructor);\n                this._components[i]._cloneTo(destComponent);\n            }\n        }\n    }\n\n\n    /**\n     * 添加组件实例。\n     * @param\tcomponent 组建实例。\n     * @return\t组件。\n     */\n    addComponentInstance(component: Component): Component {\n        if (component.owner)\n            throw \"Node:the component has belong to other node.\";\n        if (component._singleton && this.getComponent(((<any>component)).constructor))\n            console.warn(\"Node:the component is singleton, can't add the second one.\", component);\n        else\n            this._addComponentInstance(component);\n        return component;\n    }\n\n    /**\n     * 添加组件。\n     * @param\tcomponentType 组件类型。\n     * @return\t组件。\n     */\n    addComponent<T extends Component>(componentType: new () => T): T {\n        let comp: T = Pool.createByClass(componentType);\n        if (!comp) {\n            throw \"missing \" + componentType.toString();\n        }\n\n        if (comp._singleton && this.getComponent(componentType))\n            console.warn(\"Node:the component is singleton, can't add the second one.\", comp);\n        else\n            this._addComponentInstance(comp);\n        return comp;\n    }\n\n    /**\n     * 获得组件实例，如果没有则返回为null\n     * @param\tcomponentType 组建类型\n     * @return\t返回组件\n     */\n    getComponent<T extends Component>(componentType: new () => T): T {\n        if (this._components) {\n            for (let i = 0, n = this._components.length; i < n; i++) {\n                let comp = this._components[i];\n                if (comp instanceof componentType)\n                    return comp;\n            }\n        }\n        return null;\n    }\n\n    /**\n     * 返回所有组件实例。\n     * @return 返回组件实例数组。\n     */\n    get components(): ReadonlyArray<Component> {\n        return this._components || ARRAY_EMPTY;\n    }\n\n    /**\n     * 获得组件实例，如果没有则返回为null\n     * @param\tcomponentType 组件类型\n     * @return\t返回组件数组\n     */\n    getComponents(componentType: typeof Component): Component[] {\n        var arr: any[];\n        if (this._components) {\n            for (let i = 0, n = this._components.length; i < n; i++) {\n                let comp = this._components[i];\n                if (comp instanceof componentType) {\n                    arr = arr || [];\n                    arr.push(comp);\n                }\n            }\n        }\n        return arr;\n    }\n\n    /**\n     * 获取timer\n     */\n    get timer(): Timer {\n        return this._scene ? this._scene.timer : ILaya.timer;\n    }\n\n    /**\n     * 反序列化后会调用\n     */\n    onAfterDeserialize() { }\n}\n\nconst _bubbleChainPool: Array<Array<Node>> = [];\n\nexport interface INodeExtra { }\n","\nconst HALF_PI = Math.PI * 0.5;\nconst PI2 = Math.PI * 2;\n\n/**\n* <code>Ease</code> 类定义了缓动函数，以便实现 <code>Tween</code> 动画的缓动效果。\n*/\nexport class Ease {\n    /**\n     * 定义无加速持续运动。\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\n     * @param\tb 指定动画属性的初始值。\n     * @param\tc 指定动画属性的更改总计。\n     * @param\td 指定运动的持续时间。\n     * @return 指定时间的插补属性的值。\n     */\n    static linearNone(t: number, b: number, c: number, d: number): number {\n        return c * t / d + b;\n    }\n\n    /**\n     * 定义无加速持续运动。\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\n     * @param\tb 指定动画属性的初始值。\n     * @param\tc 指定动画属性的更改总计。\n     * @param\td 指定运动的持续时间。\n     * @return 指定时间的插补属性的值。\n     */\n    static linearIn(t: number, b: number, c: number, d: number): number {\n        return c * t / d + b;\n    }\n\n    /**\n     * 定义无加速持续运动。\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\n     * @param\tb 指定动画属性的初始值。\n     * @param\tc 指定动画属性的更改总计。\n     * @param\td 指定运动的持续时间。\n     * @return 指定时间的插补属性的值。\n     */\n    static linearInOut(t: number, b: number, c: number, d: number): number {\n        return c * t / d + b;\n    }\n\n    /**\n     * 定义无加速持续运动。\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\n     * @param\tb 指定动画属性的初始值。\n     * @param\tc 指定动画属性的更改总计。\n     * @param\td 指定运动的持续时间。\n     * @return 指定时间的插补属性的值。\n     */\n    static linearOut(t: number, b: number, c: number, d: number): number {\n        return c * t / d + b;\n    }\n\n    /**\n     * 方法以零速率开始运动，然后在执行时加快运动速度。\n     * 它的运动是类似一个球落向地板又弹起后，几次逐渐减小的回弹运动。\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\n     * @param\tb 指定动画属性的初始值。\n     * @param\tc 指定动画属性的更改总计。\n     * @param\td 指定运动的持续时间。\n     * @return 指定时间的插补属性的值。\n     */\n    static bounceIn(t: number, b: number, c: number, d: number): number {\n        return c - Ease.bounceOut(d - t, 0, c, d) + b;\n    }\n\n    /**\n     * 开始运动时速率为零，先对运动进行加速，再减速直到速率为零。\n     * 它的运动是类似一个球落向地板又弹起后，几次逐渐减小的回弹运动。\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\n     * @param\tb 指定动画属性的初始值。\n     * @param\tc 指定动画属性的更改总计。\n     * @param\td 指定运动的持续时间。\n     * @return 指定时间的插补属性的值。\n     */\n    static bounceInOut(t: number, b: number, c: number, d: number): number {\n        if (t < d * 0.5) return Ease.bounceIn(t * 2, 0, c, d) * .5 + b;\n        else return Ease.bounceOut(t * 2 - d, 0, c, d) * .5 + c * .5 + b;\n    }\n\n    /**\n     * 以较快速度开始运动，然后在执行时减慢运动速度，直至速率为零。\n     * 它的运动是类似一个球落向地板又弹起后，几次逐渐减小的回弹运动。\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\n     * @param\tb 指定动画属性的初始值。\n     * @param\tc 指定动画属性的更改总计。\n     * @param\td 指定运动的持续时间。\n     * @return 指定时间的插补属性的值。\n     */\n    static bounceOut(t: number, b: number, c: number, d: number): number {\n        if ((t /= d) < (1 / 2.75)) return c * (7.5625 * t * t) + b;\n        else if (t < (2 / 2.75)) return c * (7.5625 * (t -= (1.5 / 2.75)) * t + .75) + b;\n        else if (t < (2.5 / 2.75)) return c * (7.5625 * (t -= (2.25 / 2.75)) * t + .9375) + b;\n        else return c * (7.5625 * (t -= (2.625 / 2.75)) * t + .984375) + b;\n    }\n\n    /**\n     * 开始时往后运动，然后反向朝目标移动。\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\n     * @param\tb 指定动画属性的初始值。\n     * @param\tc 指定动画属性的更改总计。\n     * @param\td 指定运动的持续时间。\n     * @param\ts 指定过冲量，此处数值越大，过冲越大。\n     * @return 指定时间的插补属性的值。\n     */\n    static backIn(t: number, b: number, c: number, d: number, s: number = 1.70158): number {\n        return c * (t /= d) * t * ((s + 1) * t - s) + b;\n    }\n\n    /**\n     * 开始运动时是向后跟踪，再倒转方向并朝目标移动，稍微过冲目标，然后再次倒转方向，回来朝目标移动。\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\n     * @param\tb 指定动画属性的初始值。\n     * @param\tc 指定动画属性的更改总计。\n     * @param\td 指定运动的持续时间。\n     * @param\ts 指定过冲量，此处数值越大，过冲越大。\n     * @return 指定时间的插补属性的值。\n     */\n    static backInOut(t: number, b: number, c: number, d: number, s: number = 1.70158): number {\n        if ((t /= d * 0.5) < 1) return c * 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s)) + b;\n        return c / 2 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2) + b;\n    }\n\n    /**\n     * 开始运动时是朝目标移动，稍微过冲，再倒转方向回来朝着目标。\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\n     * @param\tb 指定动画属性的初始值。\n     * @param\tc 指定动画属性的更改总计。\n     * @param\td 指定运动的持续时间。\n     * @param\ts 指定过冲量，此处数值越大，过冲越大。\n     * @return 指定时间的插补属性的值。\n     */\n    static backOut(t: number, b: number, c: number, d: number, s: number = 1.70158): number {\n        return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\n    }\n\n    /**\n     * 方法以零速率开始运动，然后在执行时加快运动速度。\n     * 其中的运动由按照指数方式衰减的正弦波来定义。\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\n     * @param\tb 指定动画属性的初始值。\n     * @param\tc 指定动画属性的更改总计。\n     * @param\td 指定运动的持续时间。\n     * @param\ta 指定正弦波的幅度。\n     * @param\tp 指定正弦波的周期。\n     * @return 指定时间的插补属性的值。\n     */\n    static elasticIn(t: number, b: number, c: number, d: number, a: number = 0, p: number = 0): number {\n\n        var s: number;\n        if (t == 0) return b;\n        if ((t /= d) == 1) return b + c;\n        if (!p) p = d * .3;\n        if (!a || (c > 0 && a < c) || (c < 0 && a < -c)) {\n            a = c;\n            s = p / 4;\n        } else s = p / PI2 * Math.asin(c / a);\n        return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * d - s) * PI2 / p)) + b;\n    }\n\n    /**\n     * 开始运动时速率为零，先对运动进行加速，再减速直到速率为零。\n     * 其中的运动由按照指数方式衰减的正弦波来定义。\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\n     * @param\tb 指定动画属性的初始值。\n     * @param\tc 指定动画属性的更改总计。\n     * @param\td 指定运动的持续时间。\n     * @param\ta 指定正弦波的幅度。\n     * @param\tp 指定正弦波的周期。\n     * @return 指定时间的插补属性的值。\n     */\n    static elasticInOut(t: number, b: number, c: number, d: number, a: number = 0, p: number = 0): number {\n\n        var s: number;\n        if (t == 0) return b;\n        if ((t /= d * 0.5) == 2) return b + c;\n        if (!p) p = d * (.3 * 1.5);\n        if (!a || (c > 0 && a < c) || (c < 0 && a < -c)) {\n            a = c;\n            s = p / 4;\n        } else s = p / PI2 * Math.asin(c / a);\n        if (t < 1) return -.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * d - s) * PI2 / p)) + b;\n        return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t * d - s) * PI2 / p) * .5 + c + b;\n    }\n\n    /**\n     * 以较快速度开始运动，然后在执行时减慢运动速度，直至速率为零。\n     * 其中的运动由按照指数方式衰减的正弦波来定义。\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\n     * @param\tb 指定动画属性的初始值。\n     * @param\tc 指定动画属性的更改总计。\n     * @param\td 指定运动的持续时间。\n     * @param\ta 指定正弦波的幅度。\n     * @param\tp 指定正弦波的周期。\n     * @return 指定时间的插补属性的值。\n     */\n    static elasticOut(t: number, b: number, c: number, d: number, a: number = 0, p: number = 0): number {\n\n        var s: number;\n        if (t == 0) return b;\n        if ((t /= d) == 1) return b + c;\n        if (!p) p = d * .3;\n        if (!a || (c > 0 && a < c) || (c < 0 && a < -c)) {\n            a = c;\n            s = p / 4;\n        } else s = p / PI2 * Math.asin(c / a);\n        return (a * Math.pow(2, -10 * t) * Math.sin((t * d - s) * PI2 / p) + c + b);\n    }\n\n    /**\n     * 以零速率开始运动，然后在执行时加快运动速度。\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\n     * @param\tb 指定动画属性的初始值。\n     * @param\tc 指定动画属性的更改总计。\n     * @param\td 指定运动的持续时间。\n     * @return 指定时间的插补属性的值。\n     */\n    static strongIn(t: number, b: number, c: number, d: number): number {\n        return c * (t /= d) * t * t * t * t + b;\n    }\n\n    /**\n     * 开始运动时速率为零，先对运动进行加速，再减速直到速率为零。\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\n     * @param\tb 指定动画属性的初始值。\n     * @param\tc 指定动画属性的更改总计。\n     * @param\td 指定运动的持续时间。\n     * @return 指定时间的插补属性的值。\n     */\n    static strongInOut(t: number, b: number, c: number, d: number): number {\n        if ((t /= d * 0.5) < 1) return c * 0.5 * t * t * t * t * t + b;\n        return c * 0.5 * ((t -= 2) * t * t * t * t + 2) + b;\n    }\n\n    /**\n     * 以较快速度开始运动，然后在执行时减慢运动速度，直至速率为零。\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\n     * @param\tb 指定动画属性的初始值。\n     * @param\tc 指定动画属性的更改总计。\n     * @param\td 指定运动的持续时间。\n     * @return 指定时间的插补属性的值。\n     */\n    static strongOut(t: number, b: number, c: number, d: number): number {\n        return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\n    }\n\n    /**\n     * 开始运动时速率为零，先对运动进行加速，再减速直到速率为零。\n     * Sine 缓动方程中的运动加速度小于 Quad 方程中的运动加速度。\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\n     * @param\tb 指定动画属性的初始值。\n     * @param\tc 指定动画属性的更改总计。\n     * @param\td 指定运动的持续时间。\n     * @return 指定时间的插补属性的值。\n     */\n    static sineInOut(t: number, b: number, c: number, d: number): number {\n        return -c * 0.5 * (Math.cos(Math.PI * t / d) - 1) + b;\n    }\n\n    /**\n     * 以零速率开始运动，然后在执行时加快运动速度。\n     * Sine 缓动方程中的运动加速度小于 Quad 方程中的运动加速度。\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\n     * @param\tb 指定动画属性的初始值。\n     * @param\tc 指定动画属性的更改总计。\n     * @param\td 指定运动的持续时间。\n     * @return 指定时间的插补属性的值。\n     */\n    static sineIn(t: number, b: number, c: number, d: number): number {\n        return -c * Math.cos(t / d * HALF_PI) + c + b;\n    }\n\n    /**\n     * 以较快速度开始运动，然后在执行时减慢运动速度，直至速率为零。\n     * Sine 缓动方程中的运动加速度小于 Quad 方程中的运动加速度。\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\n     * @param\tb 指定动画属性的初始值。\n     * @param\tc 指定动画属性的更改总计。\n     * @param\td 指定运动的持续时间。\n     * @return 指定时间的插补属性的值。\n     */\n    static sineOut(t: number, b: number, c: number, d: number): number {\n        return c * Math.sin(t / d * HALF_PI) + b;\n    }\n\n    /**\n     * 以零速率开始运动，然后在执行时加快运动速度。\n     * Quint 缓动方程的运动加速大于 Quart 缓动方程。\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\n     * @param\tb 指定动画属性的初始值。\n     * @param\tc 指定动画属性的更改总计。\n     * @param\td 指定运动的持续时间。\n     * @return 指定时间的插补属性的值。\n     */\n    static quintIn(t: number, b: number, c: number, d: number): number {\n        return c * (t /= d) * t * t * t * t + b;\n    }\n\n    /**\n     * 开始运动时速率为零，先对运动进行加速，再减速直到速率为零。\n     * Quint 缓动方程的运动加速大于 Quart 缓动方程。\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\n     * @param\tb 指定动画属性的初始值。\n     * @param\tc 指定动画属性的更改总计。\n     * @param\td 指定运动的持续时间。\n     * @return 指定时间的插补属性的值。\n     */\n    static quintInOut(t: number, b: number, c: number, d: number): number {\n        if ((t /= d * 0.5) < 1) return c * 0.5 * t * t * t * t * t + b;\n        return c * 0.5 * ((t -= 2) * t * t * t * t + 2) + b;\n    }\n\n    /**\n     * 以较快速度开始运动，然后在执行时减慢运动速度，直至速率为零。\n     * Quint 缓动方程的运动加速大于 Quart 缓动方程。\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\n     * @param\tb 指定动画属性的初始值。\n     * @param\tc 指定动画属性的更改总计。\n     * @param\td 指定运动的持续时间。\n     * @return 指定时间的插补属性的值。\n     */\n    static quintOut(t: number, b: number, c: number, d: number): number {\n        return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\n    }\n\n    /**\n     * 方法以零速率开始运动，然后在执行时加快运动速度。\n     * Quart 缓动方程的运动加速大于 Cubic 缓动方程。\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\n     * @param\tb 指定动画属性的初始值。\n     * @param\tc 指定动画属性的更改总计。\n     * @param\td 指定运动的持续时间。\n     * @return 指定时间的插补属性的值。\n     */\n    static quartIn(t: number, b: number, c: number, d: number): number {\n        return c * (t /= d) * t * t * t + b;\n    }\n\n    /**\n     * 开始运动时速率为零，先对运动进行加速，再减速直到速率为零。\n     * Quart 缓动方程的运动加速大于 Cubic 缓动方程。\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\n     * @param\tb 指定动画属性的初始值。\n     * @param\tc 指定动画属性的更改总计。\n     * @param\td 指定运动的持续时间。\n     * @return 指定时间的插补属性的值。\n     */\n    static quartInOut(t: number, b: number, c: number, d: number): number {\n        if ((t /= d * 0.5) < 1) return c * 0.5 * t * t * t * t + b;\n        return -c * 0.5 * ((t -= 2) * t * t * t - 2) + b;\n    }\n\n    /**\n     * 以较快速度开始运动，然后在执行时减慢运动速度，直至速率为零。\n     * Quart 缓动方程的运动加速大于 Cubic 缓动方程。\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\n     * @param\tb 指定动画属性的初始值。\n     * @param\tc 指定动画属性的更改总计。\n     * @param\td 指定运动的持续时间。\n     * @return 指定时间的插补属性的值。\n     */\n    static quartOut(t: number, b: number, c: number, d: number): number {\n        return -c * ((t = t / d - 1) * t * t * t - 1) + b;\n    }\n\n    /**\n     * 方法以零速率开始运动，然后在执行时加快运动速度。\n     * Cubic 缓动方程的运动加速大于 Quad 缓动方程。\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\n     * @param\tb 指定动画属性的初始值。\n     * @param\tc 指定动画属性的更改总计。\n     * @param\td 指定运动的持续时间。\n     * @return 指定时间的插补属性的值。\n     */\n    static cubicIn(t: number, b: number, c: number, d: number): number {\n        return c * (t /= d) * t * t + b;\n    }\n\n    /**\n     * 开始运动时速率为零，先对运动进行加速，再减速直到速率为零。\n     * Cubic 缓动方程的运动加速大于 Quad 缓动方程。\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\n     * @param\tb 指定动画属性的初始值。\n     * @param\tc 指定动画属性的更改总计。\n     * @param\td 指定运动的持续时间。\n     * @return 指定时间的插补属性的值。\n     */\n    static cubicInOut(t: number, b: number, c: number, d: number): number {\n        if ((t /= d * 0.5) < 1) return c * 0.5 * t * t * t + b;\n        return c * 0.5 * ((t -= 2) * t * t + 2) + b;\n    }\n\n    /**\n     * 以较快速度开始运动，然后在执行时减慢运动速度，直至速率为零。\n     * Cubic 缓动方程的运动加速大于 Quad 缓动方程。\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\n     * @param\tb 指定动画属性的初始值。\n     * @param\tc 指定动画属性的更改总计。\n     * @param\td 指定运动的持续时间。\n     * @return 指定时间的插补属性的值。\n     */\n    static cubicOut(t: number, b: number, c: number, d: number): number {\n        return c * ((t = t / d - 1) * t * t + 1) + b;\n    }\n\n    /**\n     * 方法以零速率开始运动，然后在执行时加快运动速度。\n     * Quad 缓动方程中的运动加速度等于 100% 缓动的时间轴补间的运动加速度，并且显著小于 Cubic 缓动方程中的运动加速度。\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\n     * @param\tb 指定动画属性的初始值。\n     * @param\tc 指定动画属性的更改总计。\n     * @param\td 指定运动的持续时间。\n     * @return 指定时间的插补属性的值。\n     */\n    static quadIn(t: number, b: number, c: number, d: number): number {\n        return c * (t /= d) * t + b;\n    }\n\n    /**\n     * 开始运动时速率为零，先对运动进行加速，再减速直到速率为零。\n     * Quad 缓动方程中的运动加速度等于 100% 缓动的时间轴补间的运动加速度，并且显著小于 Cubic 缓动方程中的运动加速度。\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\n     * @param\tb 指定动画属性的初始值。\n     * @param\tc 指定动画属性的更改总计。\n     * @param\td 指定运动的持续时间。\n     * @return 指定时间的插补属性的值。\n     */\n    static quadInOut(t: number, b: number, c: number, d: number): number {\n        if ((t /= d * 0.5) < 1) return c * 0.5 * t * t + b;\n        return -c * 0.5 * ((--t) * (t - 2) - 1) + b;\n    }\n\n    /**\n     * 以较快速度开始运动，然后在执行时减慢运动速度，直至速率为零。\n     * Quad 缓动方程中的运动加速度等于 100% 缓动的时间轴补间的运动加速度，并且显著小于 Cubic 缓动方程中的运动加速度。\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\n     * @param\tb 指定动画属性的初始值。\n     * @param\tc 指定动画属性的更改总计。\n     * @param\td 指定运动的持续时间。\n     * @return 指定时间的插补属性的值。\n     */\n    static quadOut(t: number, b: number, c: number, d: number): number {\n        return -c * (t /= d) * (t - 2) + b;\n    }\n\n    /**\n     * 方法以零速率开始运动，然后在执行时加快运动速度。\n     * 其中每个时间间隔是剩余距离减去一个固定比例部分。\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\n     * @param\tb 指定动画属性的初始值。\n     * @param\tc 指定动画属性的更改总计。\n     * @param\td 指定运动的持续时间。\n     * @return 指定时间的插补属性的值。\n     */\n    static expoIn(t: number, b: number, c: number, d: number): number {\n        return (t == 0) ? b : c * Math.pow(2, 10 * (t / d - 1)) + b - c * 0.001;\n    }\n\n    /**\n     * 开始运动时速率为零，先对运动进行加速，再减速直到速率为零。\n     * 其中每个时间间隔是剩余距离减去一个固定比例部分。\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\n     * @param\tb 指定动画属性的初始值。\n     * @param\tc 指定动画属性的更改总计。\n     * @param\td 指定运动的持续时间。\n     * @return 指定时间的插补属性的值。\n     */\n    static expoInOut(t: number, b: number, c: number, d: number): number {\n        if (t == 0) return b;\n        if (t == d) return b + c;\n        if ((t /= d * 0.5) < 1) return c * 0.5 * Math.pow(2, 10 * (t - 1)) + b;\n        return c * 0.5 * (-Math.pow(2, -10 * --t) + 2) + b;\n    }\n\n    /**\n     * 以较快速度开始运动，然后在执行时减慢运动速度，直至速率为零。\n     * 其中每个时间间隔是剩余距离减去一个固定比例部分。\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\n     * @param\tb 指定动画属性的初始值。\n     * @param\tc 指定动画属性的更改总计。\n     * @param\td 指定运动的持续时间。\n     * @return 指定时间的插补属性的值。\n     */\n    static expoOut(t: number, b: number, c: number, d: number): number {\n        return (t == d) ? b + c : c * (-Math.pow(2, -10 * t / d) + 1) + b;\n    }\n\n    /**\n     * 方法以零速率开始运动，然后在执行时加快运动速度。\n     * 缓动方程的运动加速会产生突然的速率变化。\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\n     * @param\tb 指定动画属性的初始值。\n     * @param\tc 指定动画属性的更改总计。\n     * @param\td 指定运动的持续时间。\n     * @return 指定时间的插补属性的值。\n     */\n    static circIn(t: number, b: number, c: number, d: number): number {\n        return -c * (Math.sqrt(1 - (t /= d) * t) - 1) + b;\n    }\n\n    /**\n     * 开始运动时速率为零，先对运动进行加速，再减速直到速率为零。\n     * 缓动方程的运动加速会产生突然的速率变化。\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\n     * @param\tb 指定动画属性的初始值。\n     * @param\tc 指定动画属性的更改总计。\n     * @param\td 指定运动的持续时间。\n     * @return 指定时间的插补属性的值。\n     */\n    static circInOut(t: number, b: number, c: number, d: number): number {\n        if ((t /= d * 0.5) < 1) return -c * 0.5 * (Math.sqrt(1 - t * t) - 1) + b;\n        return c * 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1) + b;\n    }\n\n    /**\n     * 以较快速度开始运动，然后在执行时减慢运动速度，直至速率为零。\n     * 缓动方程的运动加速会产生突然的速率变化。\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\n     * @param\tb 指定动画属性的初始值。\n     * @param\tc 指定动画属性的更改总计。\n     * @param\td 指定运动的持续时间。\n     * @return 指定时间的插补属性的值。\n     */\n    static circOut(t: number, b: number, c: number, d: number): number {\n        return c * Math.sqrt(1 - (t = t / d - 1) * t) + b;\n    }\n\n}\n\n","/**\n * <p><code>Handler</code> 是事件处理器类。</p>\n * <p>推荐使用 Handler.create() 方法从对象池创建，减少对象创建消耗。创建的 Handler 对象不再使用后，可以使用 Handler.recover() 将其回收到对象池，回收后不要再使用此对象，否则会导致不可预料的错误。</p>\n * <p><b>注意：</b>由于鼠标事件也用本对象池，不正确的回收及调用，可能会影响鼠标事件的执行。</p>\n */\nexport class Handler {\n\n    /**@private handler对象池*/\n    protected static _pool: Handler[] = [];\n    /**@private */\n    private static _gid: number = 1;\n\n    /** 执行域(this)。*/\n    caller: Object | null;\n    /** 处理方法。*/\n    method: Function | null;\n    /** 参数。*/\n    args: any[] | null;\n    /** 表示是否只执行一次。如果为true，回调后执行recover()进行回收，回收后会被再利用，默认为false 。*/\n    once = false;\n\n    /**@private */\n    protected _id = 0;\n\n    /**\n     * 根据指定的属性值，创建一个 <code>Handler</code> 类的实例。\n     * @param\tcaller 执行域。\n     * @param\tmethod 处理函数。\n     * @param\targs 函数参数。\n     * @param\tonce 是否只执行一次。\n     */\n    constructor(caller: Object | null = null, method: Function | null = null, args: any[] | null = null, once: boolean = false) {\n        this.setTo(caller, method, args, once);\n    }\n\n    /**\n     * 设置此对象的指定属性值。\n     * @param\tcaller 执行域(this)。\n     * @param\tmethod 回调方法。\n     * @param\targs 携带的参数。\n     * @param\tonce 是否只执行一次，如果为true，执行后执行recover()进行回收。\n     * @return  返回 handler 本身。\n     */\n    setTo(caller: any, method: Function | null, args: any[] | null, once = false): Handler {\n        this._id = Handler._gid++;\n        this.caller = caller;\n        this.method = method;\n        this.args = args;\n        this.once = once;\n        return this;\n    }\n\n    /**\n     * 执行处理器。\n     */\n    run(): any {\n        if (this.method == null) return null;\n        var id: number = this._id;\n        var result: any = this.method.apply(this.caller, this.args);\n        this._id === id && this.once && this.recover();\n        return result;\n    }\n\n    /**\n     * 执行处理器，并携带额外数据。\n     * @param\tdata 附加的回调数据，可以是单数据或者Array(作为多参)。\n     */\n    runWith(data: any): any {\n        if (this.method == null) return null;\n        var id: number = this._id;\n        if (data == null)\n            var result: any = this.method.apply(this.caller, this.args);\n        else if (!this.args && !data.unshift) result = this.method.call(this.caller, data);\n        else if (this.args) result = this.method.apply(this.caller, this.args.concat(data));\n        else result = this.method.apply(this.caller, data);\n        this._id === id && this.once && this.recover();\n        return result;\n    }\n\n    /**\n     * 清理对象引用。\n     */\n    clear(): Handler {\n        this.caller = null;\n        this.method = null;\n        this.args = null;\n        return this;\n    }\n\n    /**\n     * 清理并回收到 Handler 对象池内。\n     */\n    recover(): void {\n        if (this._id > 0) {\n            this._id = 0;\n            Handler._pool.push(this.clear());\n        }\n    }\n\n    /**\n     * 从对象池内创建一个Handler，默认会执行一次并立即回收，如果不需要自动回收，设置once参数为false。\n     * @param\tcaller 执行域(this)。\n     * @param\tmethod 回调方法。\n     * @param\targs 携带的参数。\n     * @param\tonce 是否只执行一次，如果为true，回调后执行recover()进行回收，默认为true。\n     * @return  返回创建的handler实例。\n     */\n    static create(caller: any, method: Function | null, args: any[] | null = null, once: boolean = true): Handler {\n        if (Handler._pool.length)\n            return (Handler._pool.pop() as Handler).setTo(caller, method, args, once);\n        return new Handler(caller, method, args, once);\n    }\n}\n\n","import { Handler } from \"./Handler\";\nimport { Pool } from \"./Pool\";\nimport { Browser } from \"./Browser\";\nimport { Utils } from \"./Utils\";\nimport { ILaya } from \"./../../ILaya\";\n\n/**\n * <code>Tween</code>  是一个缓动类。使用此类能够实现对目标对象属性的渐变。\n */\nexport class Tween {\n    /**@private */\n    private static tweenMap: any[] = [];\n    /**@private */\n    private _complete: Handler;\n    /**@private */\n    private _target: any;\n    /**@private */\n    private _ease: Function;\n    /**@private */\n    private _props: any[];\n    /**@private */\n    private _duration: number;\n    /**@private */\n    private _delay: number;\n    /**@private */\n    private _startTimer: number;\n    /**@private */\n    private _usedTimer: number;\n    /**@private */\n    private _usedPool: boolean;\n    /**@private */\n    private _delayParam: any[];\n    /**@private 唯一标识，TimeLintLite用到*/\n    gid: number = 0;\n    /**更新回调，缓动数值发生变化时，回调变化的值*/\n    update: Handler;\n    /**重播次数，如果repeat=0，则表示无限循环播放*/\n    repeat: number = 1;\n    /**当前播放次数*/\n    private _count: number = 0;\n\n    /**\n     * 缓动对象的props属性到目标值。\n     * @param\ttarget 目标对象(即将更改属性值的对象)。\n     * @param\tprops 变化的属性列表，比如{x:100,y:20,ease:Ease.backOut,complete:Handler.create(this,onComplete),update:new Handler(this,onComplete)}。\n     * @param\tduration 花费的时间，单位毫秒。\n     * @param\tease 缓动类型，默认为匀速运动。\n     * @param\tcomplete 结束回调函数。\n     * @param\tdelay 延迟执行时间。\n     * @param\tcoverBefore 是否覆盖之前的缓动。\n     * @param\tautoRecover 是否自动回收，默认为true，缓动结束之后自动回收到对象池。\n     * @return\t返回Tween对象。\n     */\n    static to(target: any, props: any, duration: number, ease: Function|null = null, complete: Handler|null = null, delay: number = 0, coverBefore: boolean = false, autoRecover: boolean = true): Tween {\n        return Pool.getItemByClass(\"tween\", Tween)._create(target, props, duration, ease, complete, delay, coverBefore, true, autoRecover, true);\n    }\n\n    /**\n     * 从props属性，缓动到当前状态。\n     * @param\ttarget 目标对象(即将更改属性值的对象)。\n     * @param\tprops 变化的属性列表，比如{x:100,y:20,ease:Ease.backOut,complete:Handler.create(this,onComplete),update:new Handler(this,onComplete)}。\n     * @param\tduration 花费的时间，单位毫秒。\n     * @param\tease 缓动类型，默认为匀速运动。\n     * @param\tcomplete 结束回调函数。\n     * @param\tdelay 延迟执行时间。\n     * @param\tcoverBefore 是否覆盖之前的缓动。\n     * @param\tautoRecover 是否自动回收，默认为true，缓动结束之后自动回收到对象池。\n     * @return\t返回Tween对象。\n     */\n    static from(target: any, props: any, duration: number, ease: Function = null, complete: Handler = null, delay: number = 0, coverBefore: boolean = false, autoRecover: boolean = true): Tween {\n        return Pool.getItemByClass(\"tween\", Tween)._create(target, props, duration, ease, complete, delay, coverBefore, false, autoRecover, true);\n    }\n\n    /**\n     * 缓动对象的props属性到目标值。\n     * @param\ttarget 目标对象(即将更改属性值的对象)。\n     * @param\tprops 变化的属性列表，比如{x:100,y:20,ease:Ease.backOut,complete:Handler.create(this,onComplete),update:new Handler(this,onComplete)}。\n     * @param\tduration 花费的时间，单位毫秒。\n     * @param\tease 缓动类型，默认为匀速运动。\n     * @param\tcomplete 结束回调函数。\n     * @param\tdelay 延迟执行时间。\n     * @param\tcoverBefore 是否覆盖之前的缓动。\n     * @return\t返回Tween对象。\n     */\n    to(target: any, props: any, duration: number, ease: Function = null, complete: Handler = null, delay: number = 0, coverBefore: boolean = false): Tween {\n        return this._create(target, props, duration, ease, complete, delay, coverBefore, true, false, true);\n    }\n\n    /**\n     * 从props属性，缓动到当前状态。\n     * @param\ttarget 目标对象(即将更改属性值的对象)。\n     * @param\tprops 变化的属性列表，比如{x:100,y:20,ease:Ease.backOut,complete:Handler.create(this,onComplete),update:new Handler(this,onComplete)}。\n     * @param\tduration 花费的时间，单位毫秒。\n     * @param\tease 缓动类型，默认为匀速运动。\n     * @param\tcomplete 结束回调函数。\n     * @param\tdelay 延迟执行时间。\n     * @param\tcoverBefore 是否覆盖之前的缓动。\n     * @return\t返回Tween对象。\n     */\n    from(target: any, props: any, duration: number, ease: Function|null = null, complete: Handler|null = null, delay: number = 0, coverBefore: boolean = false): Tween {\n        return this._create(target, props, duration, ease, complete, delay, coverBefore, false, false, true);\n    }\n\n    /** @internal */\n    _create(target: any, props: any, duration: number, ease: Function|null, complete: Handler|null, delay: number, coverBefore: boolean, isTo: boolean, usePool: boolean, runNow: boolean): Tween {\n        if (!target) throw new Error(\"Tween:target is null\");\n        this._target = target;\n        this._duration = duration;\n        this._ease = ease || props.ease || Tween.easeNone;\n        this._complete = complete || props.complete;\n        this._delay = delay;\n        this._props = [];\n        this._usedTimer = 0;\n        this._startTimer = Browser.now();\n        this._usedPool = usePool;\n        this._delayParam = null;\n        this.update = props.update;\n\n        //判断是否覆盖\t\t\t\n        var gid: number = (target.$_GID || (target.$_GID = Utils.getGID()));\n        if (!Tween.tweenMap[gid]) {\n            Tween.tweenMap[gid] = [this];\n        } else {\n            if (coverBefore) Tween.clearTween(target);\n            Tween.tweenMap[gid].push(this);\n        }\n\n        if (runNow) {\n            if (delay <= 0) this.firstStart(target, props, isTo);\n            else {\n                this._delayParam = [target, props, isTo];\n                ILaya.timer.once(delay, this, this.firstStart, this._delayParam);\n            }\n        } else {\n            this._initProps(target, props, isTo);\n        }\n        return this;\n    }\n\n    private firstStart(target: any, props: any, isTo: boolean): void {\n        this._delayParam = null;\n        if (target.destroyed) {\n            this.clear();\n            return;\n        }\n        this._initProps(target, props, isTo);\n        this._beginLoop();\n    }\n\n    private _initProps(target: any, props: any, isTo: boolean): void {\n        //初始化属性\n        for (var p in props) {\n            if (typeof (target[p]) == 'number') {\n                var start: number = isTo ? target[p] : props[p];\n                var end: number = isTo ? props[p] : target[p];\n                this._props.push([p, start, end - start]);\n                if (!isTo) target[p] = start;\n            }\n        }\n    }\n\n    private _beginLoop(): void {\n        ILaya.timer.frameLoop(1, this, this._doEase);\n    }\n\n    /**执行缓动**/\n    private _doEase(): void {\n        this._updateEase(Browser.now());\n    }\n\n    /**@internal */\n    _updateEase(time: number): void {\n        var target: any = this._target;\n        if (!target) return;\n\n        //如果对象被销毁，则立即停止缓动\n        if (target.destroyed) return Tween.clearTween(target);\n\n        var usedTimer: number = this._usedTimer = time - this._startTimer - this._delay;\n        if (usedTimer < 0) return;\n        if (usedTimer >= this._duration) return this.complete();\n\n        var ratio: number = usedTimer > 0 ? this._ease(usedTimer, 0, 1, this._duration) : 0;\n        var props: any[] = this._props;\n        for (var i: number = 0, n: number = props.length; i < n; i++) {\n            var prop: any[] = props[i];\n            target[prop[0]] = prop[1] + (ratio * prop[2]);\n        }\n        if (this.update) this.update.run();\n    }\n\n    /**设置当前执行比例**/\n    set progress(v: number) {\n        var uTime: number = v * this._duration;\n        this._startTimer = Browser.now() - this._delay - uTime;\n    }\n\n    /**\n     * 立即结束缓动并到终点。\n     */\n    complete(): void {\n        if (!this._target) return;\n\n        //立即执行初始化\n        ILaya.timer.runTimer(this, this.firstStart);\n\n        //缓存当前属性\n        var target: any = this._target;\n        var props: any = this._props;\n        var handler: Handler = this._complete;\n        //设置终点属性\n        for (var i: number = 0, n: number = props.length; i < n; i++) {\n            var prop: any[] = props[i];\n            target[prop[0]] = prop[1] + prop[2];\n        }\n        if (this.update) this.update.run();\n\n        this._count++;\n        if (this.repeat != 0 && this._count >= this.repeat) {\n            //清理\n            this.clear();\n            //回调\n            handler && handler.run();\n        } else {\n            this.restart();\n        }\n    }\n\n    /**\n     * 暂停缓动，可以通过resume或restart重新开始。\n     */\n    pause(): void {\n        ILaya.timer.clear(this, this._beginLoop);\n        ILaya.timer.clear(this, this._doEase);\n        ILaya.timer.clear(this, this.firstStart);\n        var time: number = Browser.now();\n        var dTime: number;\n        dTime = time - this._startTimer - this._delay;\n        if (dTime < 0) {\n            this._usedTimer = dTime;\n        }\n    }\n\n    /**\n     * 设置开始时间。\n     * @param\tstartTime 开始时间。\n     */\n    setStartTime(startTime: number): void {\n        this._startTimer = startTime;\n    }\n\n    /**\n     * 清理指定目标对象上的所有缓动。\n     * @param\ttarget 目标对象。\n     */\n    static clearAll(target: any): void {\n        if (!target || !target.$_GID) return;\n        var tweens: any[] = Tween.tweenMap[target.$_GID];\n        if (tweens) {\n            for (var i: number = 0, n: number = tweens.length; i < n; i++) {\n                tweens[i]._clear();\n            }\n            tweens.length = 0;\n        }\n    }\n\n    /**\n     * 清理某个缓动。\n     * @param\ttween 缓动对象。\n     */\n    static clear(tween: Tween): void {\n        tween.clear();\n    }\n\n    /**@private 同clearAll，废弃掉，尽量别用。*/\n    static clearTween(target: any): void {\n        Tween.clearAll(target);\n    }\n\n    /**\n     * 停止并清理当前缓动。\n     */\n    clear(): void {\n        if (this._target) {\n            this._remove();\n            this._clear();\n        }\n    }\n\n    /**\n     * @internal\n     */\n    _clear(): void {\n        this.pause();\n        ILaya.timer.clear(this, this.firstStart);\n        this._complete = null;\n        this._target = null;\n        this._ease = null;\n        this._props = null;\n        this._delayParam = null;\n    this.repeat = 1;\n\n        if (this._usedPool) {\n            this.update = null;\n            Pool.recover(\"tween\", this);\n        }\n    }\n\n    /** 回收到对象池。*/\n    recover(): void {\n        this._usedPool = true;\n        this._clear();\n    }\n\n    private _remove(): void {\n        var tweens: any[] = Tween.tweenMap[this._target.$_GID];\n        if (tweens) {\n            for (var i: number = 0, n: number = tweens.length; i < n; i++) {\n                if (tweens[i] === this) {\n                    tweens.splice(i, 1);\n                    break;\n                }\n            }\n        }\n    }\n\n    /**\n     * 重新开始暂停的缓动。\n     */\n    restart(): void {\n        this.pause();\n        this._usedTimer = 0;\n        this._startTimer = Browser.now();\n        if (this._delayParam) {\n            ILaya.timer.once(this._delay, this, this.firstStart, this._delayParam);\n            return;\n        }\n        var props: any[] = this._props;\n        for (var i: number = 0, n: number = props.length; i < n; i++) {\n            var prop: any[] = props[i];\n            this._target[prop[0]] = prop[1];\n        }\n        ILaya.timer.once(this._delay, this, this._beginLoop);\n    }\n\n    /**\n     * 恢复暂停的缓动。\n     */\n    resume(): void {\n        if (this._usedTimer >= this._duration) return;\n        this._startTimer = Browser.now() - this._usedTimer - this._delay;\n        if (this._delayParam) {\n            if (this._usedTimer < 0) {\n                ILaya.timer.once(-this._usedTimer, this, this.firstStart, this._delayParam);\n            } else {\n                this.firstStart.apply(this, <any>this._delayParam);\n            }\n        } else {\n            this._beginLoop();\n        }\n    }\n\n    private static easeNone(t: number, b: number, c: number, d: number): number {\n        return c * t / d + b;\n    }\n}\n\n","import { Sprite } from \"../display/Sprite\";\nimport { Event } from \"../events/Event\";\nimport { Point } from \"../maths/Point\";\nimport { Rectangle } from \"../maths/Rectangle\";\nimport { ILaya } from \"./../../ILaya\";\nimport { Ease } from \"./Ease\";\nimport { Handler } from \"./Handler\";\nimport { Tween } from \"./Tween\";\n\n/**\n * @private\n * <code>Dragging</code> 类是触摸滑动控件。\n */\nexport class Dragging {\n    /** 被拖动的对象。*/\n    target: Sprite;\n    /** 缓动衰减系数。*/\n    ratio: number = 0.92;\n    /** 单帧最大偏移量。*/\n    maxOffset: number = 60;\n    /** 滑动范围。*/\n    area: Rectangle;\n    /** 表示拖动是否有惯性。*/\n    hasInertia: boolean;\n    /** 橡皮筋最大值。*/\n    elasticDistance: number;\n    /** 橡皮筋回弹时间，单位为毫秒。*/\n    elasticBackTime: number;\n    /** 事件携带数据。*/\n    data: any;\n\n    private _dragging: boolean = false;\n    private _clickOnly: boolean = true;\n    private _elasticRateX: number;\n    private _elasticRateY: number;\n    private _lastX: number;\n    private _lastY: number;\n    private _offsetX: number;\n    private _offsetY: number;\n    private _offsets: any[];\n    private _tween: Tween;\n    private _parent: Sprite;\n\n    /**\n     * 开始拖拽。\n     * @param\ttarget 待拖拽的 <code>Sprite</code> 对象。\n     * @param\tarea 滑动范围。\n     * @param\thasInertia 拖动是否有惯性。\n     * @param\telasticDistance 橡皮筋最大值。\n     * @param\telasticBackTime 橡皮筋回弹时间，单位为毫秒。\n     * @param\tdata 事件携带数据。\n     * @param\tratio 惯性阻尼系数\n     */\n    start(target: Sprite, area: Rectangle, hasInertia: boolean, elasticDistance: number, elasticBackTime: number, data: any, ratio: number = 0.92): void {\n        this.clearTimer();\n\n        this.target = target;\n        this.area = area;\n        this.hasInertia = hasInertia;\n        this.elasticDistance = area ? elasticDistance : 0;\n        this.elasticBackTime = elasticBackTime;\n        this.data = data;\n        this.ratio = ratio;\n\n        this._parent = (target.parent as Sprite);\n\n        this._clickOnly = true;\n        this._dragging = true;\n        this._elasticRateX = this._elasticRateY = 1;\n        this._lastX = this._parent.mouseX;\n        this._lastY = this._parent.mouseY;\n\n        ILaya.stage.on(Event.MOUSE_UP, this, this.onStageMouseUp);\n        ILaya.stage.on(Event.MOUSE_OUT, this, this.onStageMouseUp);\n        //Laya.stage.on(Event.MOUSE_MOVE, this, onStageMouseMove);\n        ILaya.systemTimer.frameLoop(1, this, this.loop);\n    }\n\n    /**\n     * 清除计时器。\n     */\n    private clearTimer(): void {\n        ILaya.systemTimer.clear(this, this.loop);\n        ILaya.systemTimer.clear(this, this.tweenMove);\n        if (this._tween) {\n            this._tween.recover();\n            this._tween = null;\n        }\n    }\n\n    /**\n     * 停止拖拽。\n     */\n    stop(): void {\n        if (this._dragging) {\n            ILaya.stage.off(Event.MOUSE_UP, this, this.onStageMouseUp);\n            ILaya.stage.off(Event.MOUSE_OUT, this, this.onStageMouseUp);\n            this._dragging = false;\n            this.target && this.area && this.backToArea();\n            this.clear();\n        }\n    }\n\n    /**\n     * 拖拽的循环处理函数。\n     */\n    private loop(): void {\n        var point: Point = this._parent.getMousePoint();\n        var mouseX: number = point.x;\n        var mouseY: number = point.y;\n        var offsetX: number = mouseX - this._lastX;\n        var offsetY: number = mouseY - this._lastY;\n\n        if (this._clickOnly) {\n            if (Math.abs(offsetX * ILaya.stage._canvasTransform.getScaleX()) > 1 || Math.abs(offsetY * ILaya.stage._canvasTransform.getScaleY()) > 1) {\n                this._clickOnly = false;\n                this._offsets || (this._offsets = []);\n                this._offsets.length = 0;\n                this.target.event(Event.DRAG_START, this.data);\n                //TODO:\n                //target._set$P(\"$_MOUSEDOWN\", false);\n            } else return;\n        } else {\n            this._offsets.push(offsetX, offsetY);\n        }\n        if (offsetX === 0 && offsetY === 0) return;\n\n        this._lastX = mouseX;\n        this._lastY = mouseY;\n        this.target.x += offsetX * this._elasticRateX;\n        this.target.y += offsetY * this._elasticRateY;\n\n        this.area && this.checkArea();\n\n        this.target.event(Event.DRAG_MOVE, this.data);\n    }\n\n    /**\n     * 拖拽区域检测。\n     */\n    private checkArea(): void {\n        if (this.elasticDistance <= 0) {\n            this.backToArea();\n        } else {\n            if (this.target._x < this.area.x) {\n                var offsetX: number = this.area.x - this.target._x;\n            } else if (this.target._x > this.area.x + this.area.width) {\n                offsetX = this.target._x - this.area.x - this.area.width;\n            } else {\n                offsetX = 0;\n            }\n            this._elasticRateX = Math.max(0, 1 - (offsetX / this.elasticDistance));\n\n            if (this.target._y < this.area.y) {\n                var offsetY: number = this.area.y - this.target.y;\n            } else if (this.target._y > this.area.y + this.area.height) {\n                offsetY = this.target._y - this.area.y - this.area.height;\n            } else {\n                offsetY = 0;\n            }\n            this._elasticRateY = Math.max(0, 1 - (offsetY / this.elasticDistance));\n        }\n    }\n\n    /**\n     * 移动至设定的拖拽区域。\n     */\n    private backToArea(): void {\n        this.target.x = Math.min(Math.max(this.target._x, this.area.x), this.area.x + this.area.width);\n        this.target.y = Math.min(Math.max(this.target._y, this.area.y), this.area.y + this.area.height);\n    }\n\n    /**\n     * 舞台的抬起事件侦听函数。\n     * @param\te Event 对象。\n     */\n    private onStageMouseUp(e: Event): void {\n        ILaya.stage.off(Event.MOUSE_UP, this, this.onStageMouseUp);\n        ILaya.stage.off(Event.MOUSE_OUT, this, this.onStageMouseUp);\n        //Laya.stage.off(Event.MOUSE_MOVE, this, onStageMouseMove);\n        ILaya.systemTimer.clear(this, this.loop);\n\n        if (this._clickOnly || !this.target) return;\n        //target.mouseEnabled = true;\n\n        if (this.hasInertia) {\n            //计算平均值\n            if (this._offsets.length < 1) {\n                this._offsets.push(this._parent.mouseX - this._lastX, this._parent.mouseY - this._lastY);\n            }\n\n            this._offsetX = this._offsetY = 0;\n            var len: number = this._offsets.length;\n            var n: number = Math.min(len, 6);\n            var m: number = this._offsets.length - n;\n            for (var i: number = len - 1; i > m; i--) {\n                this._offsetY += this._offsets[i--];\n                this._offsetX += this._offsets[i];\n            }\n\n            this._offsetX = this._offsetX / n * 2;\n            this._offsetY = this._offsetY / n * 2;\n\n            if (Math.abs(this._offsetX) > this.maxOffset) this._offsetX = this._offsetX > 0 ? this.maxOffset : -this.maxOffset;\n            if (Math.abs(this._offsetY) > this.maxOffset) this._offsetY = this._offsetY > 0 ? this.maxOffset : -this.maxOffset;\n            ILaya.systemTimer.frameLoop(1, this, this.tweenMove);\n        } else if (this.elasticDistance > 0) {\n            this.checkElastic();\n        } else {\n            this.clear();\n        }\n    }\n\n    /**\n     * 橡皮筋效果检测。\n     */\n    private checkElastic(): void {\n        var tx: number = NaN;\n        var ty: number = NaN;\n        if (this.target.x < this.area.x) tx = this.area.x;\n        else if (this.target._x > this.area.x + this.area.width) tx = this.area.x + this.area.width;\n\n        if (this.target.y < this.area.y) ty = this.area.y;\n        else if (this.target._y > this.area.y + this.area.height) ty = this.area.y + this.area.height;\n\n        if (!isNaN(tx) || !isNaN(ty)) {\n            var obj: any = {};\n            if (!isNaN(tx)) obj.x = tx;\n            if (!isNaN(ty)) obj.y = ty;\n            this._tween = Tween.to(this.target, obj, this.elasticBackTime, Ease.sineOut, Handler.create(this, this.clear), 0, false, false);\n        } else {\n            this.clear();\n        }\n    }\n\n    /**\n     * 移动。\n     */\n    private tweenMove(): void {\n        this._offsetX *= this.ratio * this._elasticRateX;\n        this._offsetY *= this.ratio * this._elasticRateY;\n\n        this.target.x += this._offsetX;\n        this.target.y += this._offsetY;\n\n        this.area && this.checkArea();\n\n        this.target.event(Event.DRAG_MOVE, this.data);\n\n        if ((Math.abs(this._offsetX) < 1 && Math.abs(this._offsetY) < 1) || this._elasticRateX < 0.5 || this._elasticRateY < 0.5) {\n            ILaya.systemTimer.clear(this, this.tweenMove);\n            if (this.elasticDistance > 0) this.checkElastic();\n            else this.clear();\n        }\n    }\n\n    /**\n     * 结束拖拽。\n     */\n    private clear(): void {\n        if (this.target) {\n            this.clearTimer();\n            var sp = this.target;\n            this.target = null;\n            this._parent = null;\n            sp.event(Event.DRAG_END, this.data);\n        }\n    }\n}\n\n","import { ILaya } from \"../../ILaya\";\nimport { Sprite } from \"../display/Sprite\";\nimport { Matrix } from \"../maths/Matrix\";\nimport { Point } from \"../maths/Point\";\nimport { Rectangle } from \"../maths/Rectangle\";\nimport { Utils } from \"./Utils\";\n\nexport class SpriteUtils {\n    /**\n     * @private\n     * 根据传入的显示对象 <code>Sprite</code> 和此显示对象上的 两个点，返回此对象上的两个点在舞台坐标系上组成的最小的矩形区域对象。\n     * @param\tsprite 显示对象 <code>Sprite</code>。\n     * @param\tx0\t点一的 X 轴坐标点。\n     * @param\ty0\t点一的 Y 轴坐标点。\n     * @param\tx1\t点二的 X 轴坐标点。\n     * @param\ty1\t点二的 Y 轴坐标点。\n     * @return 两个点在舞台坐标系组成的矩形对象 <code>Rectangle</code>。\n     */\n    static getGlobalRecByPoints(sprite: Sprite, x0: number, y0: number, x1: number, y1: number): Rectangle {\n        var newLTPoint: Point;\n        newLTPoint = Point.create().setTo(x0, y0);\n        newLTPoint = sprite.localToGlobal(newLTPoint);\n        var newRBPoint: Point;\n        newRBPoint = Point.create().setTo(x1, y1);\n        newRBPoint = sprite.localToGlobal(newRBPoint);\n        var rst: Rectangle = Rectangle._getWrapRec([newLTPoint.x, newLTPoint.y, newRBPoint.x, newRBPoint.y]);\n        newLTPoint.recover();\n        newRBPoint.recover();\n        return rst;\n    }\n\n    /**\n     * 计算传入的显示对象 <code>Sprite</code> 的全局坐标系的坐标和缩放值，返回 <code>Rectangle</code> 对象存放计算出的坐标X值、Y值、ScaleX值、ScaleY值。\n     * @param\tsprite <code>Sprite</code> 对象。\n     * @return  矩形对象 <code>Rectangle</code>\n     */\n    static getGlobalPosAndScale(sprite: Sprite): Rectangle {\n        return SpriteUtils.getGlobalRecByPoints(sprite, 0, 0, 1, 1);\n    }\n\n    /**\n    * 获取指定区域内相对于窗口左上角的transform。\n    * @param\tcoordinateSpace\t坐标空间，不能是Stage引用\n    * @param\tx\t\t\t\t相对于coordinateSpace的x坐标\n    * @param\ty\t\t\t\t相对于coordinateSpace的y坐标\n    * @return\n    */\n    static getTransformRelativeToWindow(coordinateSpace: Sprite, x: number, y: number): any {\n        var stage = ILaya.stage;\n\n        // coordinateSpace的全局缩放、坐标\n        var globalTransform: Rectangle = SpriteUtils.getGlobalPosAndScale(coordinateSpace);\n        // canvas的transform矩阵\n        var canvasMatrix: Matrix = stage._canvasTransform.clone();\n        // 在矩阵变化前前记录的canvas的坐标\n        var canvasLeft: number = canvasMatrix.tx;\n        var canvasTop: number = canvasMatrix.ty;\n\n        // 把矩阵转回0度，得到正确的画布缩放比\n        canvasMatrix.rotate(-Math.PI / 180 * stage.canvasDegree);\n        // 组合画布缩放和舞台适配缩放\n        canvasMatrix.scale(stage.clientScaleX, stage.clientScaleY);\n        // 画布是否处于正常角度的垂直角度，-90或90度\n        var perpendicular: boolean = (stage.canvasDegree % 180 != 0);\n        var tx: number, ty: number;\n\n        if (perpendicular) {\n            // 在舞台上的坐标\n            tx = y + globalTransform.y;\n            ty = x + globalTransform.x;\n\n            // 在画布上的坐标\n            tx *= canvasMatrix.d;\n            ty *= canvasMatrix.a;\n\n            // 设置了screenMode = horizontal\n            if (stage.canvasDegree == 90) {\n                // 在浏览器窗口上的坐标\n                // 此时画布的left是视觉上的right，画布的left是视觉上的top\n                tx = canvasLeft - tx;\n                ty += canvasTop;\n            }\n            // screenMode = vertical并且设备在横屏状态，画布旋转-90度\n            else {\n                // 在浏览器窗口上的坐标\n                // 此时画布的left是视觉上的left，画布的top是视觉上的bottom\n                tx += canvasLeft;\n                ty = canvasTop - ty;\n            }\n        }\n        // 没有canvas旋转\n        else {\n            // 在舞台上的坐标\n            tx = x + globalTransform.x;\n            ty = y + globalTransform.y;\n\n            // 在画布上的坐标\n            tx *= canvasMatrix.a;\n            ty *= canvasMatrix.d;\n\n            // 在浏览器窗口上的坐标\n            tx += canvasLeft;\n            ty += canvasTop;\n        }\n\n        // Safari兼容\n        ty += stage['_safariOffsetY'];\n\n        // 组合画布缩放和舞台适配缩放以及显示对象缩放，得到DOM原因的缩放因子\n        var domScaleX: number, domScaleY: number;\n        if (perpendicular) {\n            domScaleX = canvasMatrix.d * globalTransform.height;\n            domScaleY = canvasMatrix.a * globalTransform.width;\n        } else {\n            domScaleX = canvasMatrix.a * globalTransform.width;\n            domScaleY = canvasMatrix.d * globalTransform.height;\n        }\n\n        return { x: tx, y: ty, scaleX: domScaleX, scaleY: domScaleY };\n    }\n\n    /**\n     * 使DOM元素使用舞台内的某块区域内。\n     * @param\tdom\t\t\t\tDOM元素引用\n     * @param\tcoordinateSpace\t坐标空间，不能是Stage引用\n     * @param\tx\t\t\t\t相对于coordinateSpace的x坐标\n     * @param\ty\t\t\t\t相对于coordinateSpace的y坐标\n     * @param\twidth\t\t\t宽度\n     * @param\theight\t\t\t高度\n     */\n    static fitDOMElementInArea(dom: any, coordinateSpace: Sprite, x: number, y: number, width: number, height: number): void {\n        if (!dom._fitLayaAirInitialized) {\n            dom._fitLayaAirInitialized = true;\n            dom.style.transformOrigin = dom.style.webKittransformOrigin = \"left top\";\n            dom.style.position = \"absolute\"\n        }\n\n        var transform: any = SpriteUtils.getTransformRelativeToWindow(coordinateSpace, x, y);\n\n        // 设置dom样式\n        dom.style.transform = dom.style.webkitTransform = \"scale(\" + transform.scaleX + \",\" + transform.scaleY + \") rotate(\" + (ILaya.stage.canvasDegree) + \"deg)\";\n        dom.style.width = width + 'px';\n        dom.style.height = height + 'px';\n        dom.style.left = transform.x + 'px';\n        dom.style.top = transform.y + 'px';\n    }\n\n\n    /**\n     * @private\n     * 对传入的数组列表，根据子项的属性 Z 值进行重新排序。返回是否已重新排序的 Boolean 值。\n     * @param\tarray 子对象数组。\n     * @return\tBoolean 值，表示是否已重新排序。\n     */\n    static updateOrder(array: any[]): boolean {\n        if (!array || array.length < 2) return false;\n        var i: number = 1, j: number, len: number = array.length, key: number, c: Sprite;\n        while (i < len) {\n            j = i;\n            c = array[j];\n            key = array[j]._zOrder;\n            while (--j > -1) {\n                if (array[j]._zOrder > key) array[j + 1] = array[j];\n                else break;\n            }\n            array[j + 1] = c;\n            i++;\n        }\n        return true;\n    }\n}","import { ILaya } from \"../../ILaya\";\nimport { NodeFlags } from \"../Const\";\nimport { ColorFilter } from \"../filters/ColorFilter\";\nimport { Filter } from \"../filters/Filter\";\nimport { GrahamScan } from \"../maths/GrahamScan\";\nimport { Matrix } from \"../maths/Matrix\";\nimport { Point } from \"../maths/Point\";\nimport { Rectangle } from \"../maths/Rectangle\";\nimport { RenderSprite } from \"../renders/RenderSprite\";\nimport { Context } from \"../resource/Context\";\nimport { HTMLCanvas } from \"../resource/HTMLCanvas\";\nimport { Texture } from \"../resource/Texture\";\nimport { Texture2D } from \"../resource/Texture2D\";\nimport { Handler } from \"../utils/Handler\";\nimport { Utils } from \"../utils/Utils\";\nimport { BoundsStyle } from \"./css/BoundsStyle\";\nimport { CacheStyle } from \"./css/CacheStyle\";\nimport { SpriteStyle } from \"./css/SpriteStyle\";\nimport { Graphics } from \"./Graphics\";\nimport { Node } from \"./Node\";\nimport { SpriteConst } from \"./SpriteConst\";\n// import { Stage } from \"./Stage\";\nimport { RenderTexture2D } from \"../resource/RenderTexture2D\";\nimport { Event } from \"../events/Event\";\nimport { Dragging } from \"../utils/Dragging\";\nimport { URL } from \"../net/URL\";\nimport { Scene } from \"./Scene\";\nimport { LayaEnv } from \"../../LayaEnv\";\nimport { SpriteUtils } from \"../utils/SpriteUtils\";\nimport { IHitArea } from \"../utils/IHitArea\";\nimport type { Material } from \"../resource/Material\";\n\n/**在显示对象上按下后调度。\n * @eventType Event.MOUSE_DOWN\n * */\n/*[Event(name = \"mousedown\", type = \"laya.events.Event\")]*/\n/**在显示对象抬起后调度。\n * @eventType Event.MOUSE_UP\n * */\n/*[Event(name = \"mouseup\", type = \"laya.events.Event\")]*/\n/**鼠标在对象身上进行移动后调度\n * @eventType Event.MOUSE_MOVE\n * */\n/*[Event(name = \"mousemove\", type = \"laya.events.Event\")]*/\n/**鼠标经过对象后调度。\n * @eventType Event.MOUSE_OVER\n * */\n/*[Event(name = \"mouseover\", type = \"laya.events.Event\")]*/\n/**鼠标离开对象后调度。\n * @eventType Event.MOUSE_OUT\n * */\n/*[Event(name = \"mouseout\", type = \"laya.events.Event\")]*/\n/**鼠标点击对象后调度。\n * @eventType Event.CLICK\n * */\n/*[Event(name = \"click\", type = \"laya.events.Event\")]*/\n/**开始拖动后调度。\n * @eventType Event.DRAG_START\n * */\n/*[Event(name = \"dragstart\", type = \"laya.events.Event\")]*/\n/**拖动中调度。\n * @eventType Event.DRAG_MOVE\n * */\n/*[Event(name = \"dragmove\", type = \"laya.events.Event\")]*/\n/**拖动结束后调度。\n * @eventType Event.DRAG_END\n * */\n/*[Event(name = \"dragend\", type = \"laya.events.Event\")]*/\nexport class Sprite extends Node {\n    /**@internal */\n    _x: number = 0;\n    /**@internal */\n    _y: number = 0;\n    /**@internal */\n    _width: number = 0;\n    /**@internal */\n    _height: number = 0;\n    /***@internal X锚点，值为0-1，设置anchorX值最终通过pivotX值来改变节点轴心点。*/\n    _anchorX: number = 0;\n    /***@internal Y锚点，值为0-1，设置anchorY值最终通过pivotY值来改变节点轴心点。*/\n    _anchorY: number = 0;\n    /**@internal */\n    _visible: boolean = true;\n    /**@internal 鼠标状态，0:auto,1:mouseEnabled=false,2:mouseEnabled=true。*/\n    _mouseState: number = 0;\n    /**@internal z排序，数值越大越靠前。*/\n    _zOrder: number = 0;\n    /**@internal */\n    _renderType: number = 0;\n    /**@internal */\n    _transform: Matrix | null = null;\n    /**@internal */\n    protected _tfChanged: boolean = false;\n    /**@internal */\n    protected _repaint: number = SpriteConst.REPAINT_NONE;\n    /**@internal */\n    private _texture: Texture | null = null;\n    /**@internal */\n    private _sizeFlag: number = 0;\n\n    //以下变量为系统调用，请不要直接使用\n    /**@internal */\n    _style: SpriteStyle = SpriteStyle.EMPTY;\n    /**@internal */\n    _cacheStyle: CacheStyle = CacheStyle.EMPTY;\n    /**@internal */\n    _boundStyle: BoundsStyle | null = null;\n    /**@internal */\n    _graphics: Graphics | null = null;\n\n    _ownGraphics: boolean = false;\n\n    /**\n     * <p>鼠标事件与此对象的碰撞检测是否可穿透。碰撞检测发生在鼠标事件的捕获阶段，此阶段引擎会从stage开始递归检测stage及其子对象，直到找到命中的目标对象或者未命中任何对象。</p>\n     * <p>穿透表示鼠标事件发生的位置处于本对象绘图区域内时，才算命中，而与对象宽高和值为Rectangle对象的hitArea属性无关。如果sprite.hitArea值是HitArea对象，表示显式声明了此对象的鼠标事件响应区域，而忽略对象的宽高、mouseThrough属性。</p>\n     * <p>影响对象鼠标事件响应区域的属性为：width、height、hitArea，优先级顺序为：hitArea(type:HitArea)>hitArea(type:Rectangle)>width/height。</p>\n     * @default false\t不可穿透，此对象的鼠标响应区域由width、height、hitArea属性决定。</p>\n     */\n    mouseThrough: boolean = false;\n    /**\n     * <p>指定是否自动计算宽高数据。默认值为 false 。</p>\n     * <p>Sprite宽高默认为0，并且不会随着绘制内容的变化而变化，如果想根据绘制内容获取宽高，可以设置本属性为true，或者通过getBounds方法获取。设置为true，对性能有一定影响。</p>\n     */\n    autoSize: boolean = false;\n    /**\n     * <p>指定鼠标事件检测是优先检测自身，还是优先检测其子对象。鼠标事件检测发生在鼠标事件的捕获阶段，此阶段引擎会从stage开始递归检测stage及其子对象，直到找到命中的目标对象或者未命中任何对象。</p>\n     * <p>如果为false，优先检测子对象，当有子对象被命中时，中断检测，获得命中目标。如果未命中任何子对象，最后再检测此对象；如果为true，则优先检测本对象，如果本对象没有被命中，直接中断检测，表示没有命中目标；如果本对象被命中，则进一步递归检测其子对象，以确认最终的命中目标。</p>\n     * <p>合理使用本属性，能减少鼠标事件检测的节点，提高性能。可以设置为true的情况：开发者并不关心此节点的子节点的鼠标事件检测结果，也就是以此节点作为其子节点的鼠标事件检测依据。</p>\n     * <p>Stage对象和UI的View组件默认为true。</p>\n     * @default false\t优先检测此对象的子对象，当递归检测完所有子对象后，仍然没有找到目标对象，最后再检测此对象。\n     */\n    hitTestPrior: boolean = false;\n\n    /** 如果节点需要加载相关的皮肤，但放在不同域，这里可以设置 **/\n    _skinBaseUrl: string;\n\n    /**\n     * @inheritDoc \n     * @override\n     */\n    destroy(destroyChild: boolean = true): void {\n        super.destroy(destroyChild);\n        this._style && this._style.recover();\n        this._cacheStyle && this._cacheStyle.recover();\n        this._boundStyle && this._boundStyle.recover();\n        this._transform && this._transform.recover();\n        this._style = null;\n        this._cacheStyle = null;\n        this._boundStyle = null;\n        this._transform = null;\n        this._texture && this._texture._removeReference();\n        this._texture = null;\n        this._graphics && this._ownGraphics && this._graphics.destroy();\n        this._graphics = null;\n    }\n\n    constructor() {\n        super();\n    }\n\n    get scene(): Scene {\n        return <Scene>this._scene;\n    }\n\n    /**根据zOrder进行重新排序。*/\n    updateZOrder(): void {\n        SpriteUtils.updateOrder(this._children) && this.repaint();\n    }\n\n    /**\n     * @internal\n     */\n    _getBoundsStyle(): BoundsStyle {\n        if (!this._boundStyle) this._boundStyle = BoundsStyle.create();\n        return this._boundStyle;\n    }\n\n    /**@internal */\n    _setCustomRender(): void {\n\n    }\n\n    /**\n     * 设置是否开启自定义渲染，只有开启自定义渲染，才能使用customRender函数渲染。\n     */\n    set customRenderEnable(b: boolean) {\n        if (b) {\n            this._renderType |= SpriteConst.CUSTOM;\n            this._setCustomRender();\n        }\n    }\n\n    /**\n     * 指定显示对象是否缓存为静态图像，cacheAs时，子对象发生变化，会自动重新缓存，同时也可以手动调用reCache方法更新缓存。\n     * 建议把不经常变化的“复杂内容”缓存为静态图像，能极大提高渲染性能。cacheAs有\"none\"，\"normal\"和\"bitmap\"三个值可选。\n     * 默认为\"none\"，不做任何缓存。\n     * 当值为\"normal\"时，canvas模式下进行画布缓存，webgl模式下进行命令缓存。\n     * 当值为\"bitmap\"时，canvas模式下进行依然是画布缓存，webgl模式下使用renderTarget缓存。\n     * webgl下renderTarget缓存模式缺点：会额外创建renderTarget对象，增加内存开销，缓存面积有最大2048限制，不断重绘时会增加CPU开销。优点：大幅减少drawcall，渲染性能最高。\n     * webgl下命令缓存模式缺点：只会减少节点遍历及命令组织，不会减少drawcall数，性能中等。优点：没有额外内存开销，无需renderTarget支持。\n     */\n    get cacheAs(): string {\n        return this._cacheStyle.userSetCache;\n    }\n\n    /**@internal */\n    _setCacheAs(value: string): void {\n        //_dataf32[SpriteConst.POSCACHE] = value == \"bitmap\"?2:(value == \"normal\"?1:0);\n    }\n\n    set cacheAs(value: string) {\n        if (value === this._cacheStyle.userSetCache) return;\n        if ('bitmap' == value && !(this._cacheStyle.canvas instanceof HTMLCanvas)) {\n            this._cacheStyle.canvas = null;\n        }\n\n        this._getCacheStyle().userSetCache = value;\n\n        if (this.mask && value === 'normal') return;\n        this._setCacheAs(value);\n        this._checkCanvasEnable();\n        this.repaint();\n    }\n\n    /**\n     * 更新_cnavas相关的状态\n     */\n    private _checkCanvasEnable(): void {\n        var tEnable: boolean = this._cacheStyle.needEnableCanvasRender();\n        this._getCacheStyle().enableCanvasRender = tEnable;\n        if (tEnable) {\n            if (this._cacheStyle.needBitmapCache()) {\n                this._cacheStyle.cacheAs = \"bitmap\";\n            } else {\n                this._cacheStyle.cacheAs = this._cacheStyle.userSetCache;\n            }\n            this._cacheStyle.reCache = true;\n            this._renderType |= SpriteConst.CANVAS;\n        } else {\n            this._cacheStyle.cacheAs = \"none\";\n            this._cacheStyle.releaseContext();\n            this._renderType &= ~SpriteConst.CANVAS;\n        }\n        this._setCacheAs(this._cacheStyle.cacheAs);\n    }\n\n    /**设置cacheAs为非空时此值才有效，staticCache=true时，子对象变化时不会自动更新缓存，只能通过调用reCache方法手动刷新。*/\n    get staticCache(): boolean {\n        return this._cacheStyle.staticCache;\n    }\n\n    set staticCache(value: boolean) {\n        this._getCacheStyle().staticCache = value;\n        if (!value) this.reCache();\n    }\n\n    /**在设置cacheAs的情况下，调用此方法会重新刷新缓存。*/\n    reCache(): void {\n        this._cacheStyle.reCache = true;\n        this._repaint |= SpriteConst.REPAINT_CACHE;\n    }\n\n    getRepaint(): number {\n        return this._repaint;\n    }\n\n    /**@internal */\n    _setX(value: number): void {\n        this._x = value;\n    }\n\n    /**@internal */\n    _setY(value: number): void {\n        this._y = value;\n    }\n\n    /**表示显示对象相对于父容器的水平方向坐标值。*/\n    get x(): number {\n        return this._x;\n    }\n\n    set x(value: number) {\n        if (this._destroyed) return;\n        if (this._x !== value) {\n            this._setX(value);\n            if (this.cacheGlobal) {\n                this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Position_X | Sprite.Sprite_GlobalDeltaFlage_Matrix, true)\n                this._syncGlobalFlag(Sprite.Sprite_GlobalDeltaFlage_Position_X | Sprite.Sprite_GlobalDeltaFlage_Matrix, true);\n            }\n            //_setTranformChange();\n            this.parentRepaint(SpriteConst.REPAINT_CACHE);\n            var p: Sprite = this._cacheStyle.maskParent;\n            if (p) {\n                p.repaint(SpriteConst.REPAINT_CACHE);\n            }\n        }\n    }\n\n    /**表示显示对象相对于父容器的垂直方向坐标值。*/\n    get y(): number {\n        return this._y;\n    }\n\n    set y(value: number) {\n        if (this._destroyed) return;\n        if (this._y !== value) {\n            this._setY(value);\n\n            if (this.cacheGlobal) {\n                this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Position_Y | Sprite.Sprite_GlobalDeltaFlage_Matrix, true)\n                this._syncGlobalFlag(Sprite.Sprite_GlobalDeltaFlage_Position_Y | Sprite.Sprite_GlobalDeltaFlage_Matrix, true);\n            }\n            //_setTranformChange();\n            this.parentRepaint(SpriteConst.REPAINT_CACHE);\n            var p: Sprite = this._cacheStyle.maskParent;\n            if (p) {\n                p.repaint(SpriteConst.REPAINT_CACHE);\n            }\n        }\n    }\n\n    /**\n     * <p>显示对象的宽度，单位为像素，默认为0。</p>\n     * <p>此宽度用于鼠标碰撞检测，并不影响显示对象图像大小。需要对显示对象的图像进行缩放，请使用scale、scaleX、scaleY。</p>\n     * <p>可以通过getbounds获取显示对象图像的实际宽度。</p>\n     */\n    get width(): number {\n        return this.get_width();\n    }\n\n    set width(value: number) {\n        this.set_width(value);\n    }\n\n    set_width(value: number): void {\n        let flag = this._sizeFlag;\n        if (value == null) {\n            value = 0;\n            this._sizeFlag &= ~1;\n        }\n        else if (value == 0)\n            this._sizeFlag |= 1;\n        else\n            this._sizeFlag &= ~1;\n        if (this._width !== value || flag != this._sizeFlag) {\n            this._width = value;\n            this._setWidth(value);\n            this._setPivotX(this._anchorX * value);\n            if (this._graphics) this._graphics._clearBoundsCache(true);\n            this._setTranformChange();\n            this._shouldRefreshLayout();\n        }\n    }\n\n    get_width(): number {\n        if (!this.autoSize) return (this._width == 0 && (this._sizeFlag & 1) == 0 && this.texture) ? this.texture.width : this._width;\n        if (this.texture) return this.texture.width;\n        if (!this._graphics && this._children.length === 0) return 0;\n        return this.getSelfBounds().width;\n    }\n\n    /**\n     * <p>显示对象的高度，单位为像素，默认为0。</p>\n     * <p>此高度用于鼠标碰撞检测，并不影响显示对象图像大小。需要对显示对象的图像进行缩放，请使用scale、scaleX、scaleY。</p>\n     * <p>可以通过getbounds获取显示对象图像的实际高度。</p>\n     */\n    get height(): number {\n        return this.get_height();\n    }\n\n    set height(value: number) {\n        this.set_height(value);\n    }\n\n    // for ts\n    set_height(value: number): void {\n        let flag = this._sizeFlag;\n        if (value == null) {\n            value = 0;\n            this._sizeFlag &= ~2;\n        }\n        else if (value == 0)\n            this._sizeFlag |= 2;\n        else\n            this._sizeFlag &= ~2;\n        if (this._height !== value || flag != this._sizeFlag) {\n            this._height = value;\n            this._setHeight(value);\n            this._setPivotY(this._anchorY * value);\n            if (this._graphics) this._graphics._clearBoundsCache(true);\n            this._setTranformChange();\n            this._shouldRefreshLayout();\n        }\n    }\n    get_height(): number {\n        if (!this.autoSize) return (this._height == 0 && (this._sizeFlag & 2) == 0 && this.texture) ? this.texture.height : this._height;\n        if (this.texture) return this.texture.height;\n        if (!this._graphics && this._children.length === 0) return 0;\n        return this.getSelfBounds().height;\n    }\n\n    get _isWidthSet() {\n        return this._width != 0 || (this._sizeFlag & 1) != 0;\n    }\n\n    get _isHeightSet() {\n        return this._height != 0 || (this._sizeFlag & 2) != 0;\n    }\n\n    /**@internal */\n    _setWidth(value: number): void {\n    }\n\n    /**@internal */\n    _setHeight(value: number): void {\n    }\n\n    protected _shouldRefreshLayout() {\n    }\n\n    /**\n     * <p>对象的显示宽度（以像素为单位）。</p>\n     */\n    get displayWidth(): number {\n        return this.width * this.scaleX;\n    }\n\n    /**\n     * <p>对象的显示高度（以像素为单位）。</p>\n     */\n    get displayHeight(): number {\n        return this.height * this.scaleY;\n    }\n\n    /**\n     * 设置对象bounds大小，如果有设置，则不再通过getBounds计算，合理使用能提高性能。\n     * @param\tbound bounds矩形区域\n     */\n    setSelfBounds(bound: Rectangle): void {\n        this._getBoundsStyle().userBounds = bound;\n    }\n\n    /**\n     * <p>获取本对象在父容器坐标系的矩形显示区域。</p>\n     * <p><b>注意：</b>计算量较大，尽量少用。</p>\n     * @return 矩形区域。\n     */\n    getBounds(): Rectangle {\n        return this._getBoundsStyle().bounds = Rectangle._getWrapRec(this._boundPointsToParent());\n    }\n\n    /**\n     * 获取本对象在自己坐标系的矩形显示区域。\n     * <p><b>注意：</b>计算量较大，尽量少用。</p>\n     * @return 矩形区域。\n     */\n    getSelfBounds(): Rectangle {\n        if (this._boundStyle && this._boundStyle.userBounds) return this._boundStyle.userBounds;\n        if (!this._graphics && this._children.length === 0 && !this._texture)\n            return Rectangle.TEMP.setTo(0, 0, this.width, this.height); // 如果没有graphics则取对象指定的大小。原来是0000\n        return this._getBoundsStyle().bounds = Rectangle._getWrapRec(this._getBoundPointsM(false));\n    }\n\n    /**\n     * @internal\n     * 获取本对象在父容器坐标系的显示区域多边形顶点列表。\n     * 当显示对象链中有旋转时，返回多边形顶点列表，无旋转时返回矩形的四个顶点。\n     * @param ifRotate\t（可选）之前的对象链中是否有旋转。\n     * @return 顶点列表。结构：[x1,y1,x2,y2,x3,y3,...]。\n     */\n    _boundPointsToParent(ifRotate: boolean = false): any[] {\n        let pX: number = 0, pY: number = 0;\n        if (this._style) {\n            pX = this.pivotX;\n            pY = this.pivotY;\n            ifRotate = ifRotate || (this._style.rotation !== 0);\n            if (this._style.scrollRect) {\n                pX += this._style.scrollRect.x;\n                pY += this._style.scrollRect.y;\n            }\n        }\n        let pList: any[] = this._getBoundPointsM(ifRotate);\n        if (!pList || pList.length < 1) return pList;\n\n        if (pList.length != 8) {\n            pList = ifRotate ? GrahamScan.scanPList(pList) : Rectangle._getWrapRec(pList, Rectangle.TEMP)._getBoundPoints();\n        }\n\n        if (!this.transform) {\n            Utils.transPointList(pList, this._x - pX, this._y - pY);\n            return pList;\n        }\n        let tPoint = Point.TEMP;\n        let len = pList.length;\n        for (let i = 0; i < len; i += 2) {\n            tPoint.x = pList[i];\n            tPoint.y = pList[i + 1];\n            this.toParentPoint(tPoint);\n            pList[i] = tPoint.x;\n            pList[i + 1] = tPoint.y;\n        }\n        return pList;\n    }\n\n    /**\n     * 返回此实例中的绘图对象（ <code>Graphics</code> ）的显示区域，不包括子对象。\n     * @param realSize\t（可选）使用图片的真实大小，默认为false\n     * @return 一个 Rectangle 对象，表示获取到的显示区域。\n     */\n    getGraphicBounds(realSize: boolean = false): Rectangle {\n        if (!this._graphics) return Rectangle.TEMP.setTo(0, 0, 0, 0);\n        return this._graphics.getBounds(realSize);\n    }\n\n    /**\n     * @internal\n     * 获取自己坐标系的显示区域多边形顶点列表\n     * @param ifRotate\t（可选）当前的显示对象链是否由旋转\n     * @return 顶点列表。结构：[x1,y1,x2,y2,x3,y3,...]。\n     */\n    _getBoundPointsM(ifRotate: boolean = false): any[] {\n        if (this._boundStyle && this._boundStyle.userBounds) return this._boundStyle.userBounds._getBoundPoints();\n        if (!this._boundStyle) this._getBoundsStyle();\n        let rst = this._boundStyle.temBM;\n        if (!rst) rst = this._boundStyle.temBM = [];\n        if (this._style.scrollRect) {\n            rst.length = 0;\n            var rec: Rectangle = Rectangle.TEMP;\n            rec.copyFrom(this._style.scrollRect);\n            rst.push(...rec._getBoundPoints());\n            return rst;\n        }\n        let pList: any[];\n        if (this._graphics) {\n            pList = this._graphics.getBoundPoints();\n        } else {\n            rst.length = 0;\n            pList = rst;\n        }\n        if (this._texture) {\n            rec = Rectangle.TEMP;\n            rec.setTo(0, 0, this.width || this._texture.width, this.height || this._texture.height);\n            pList.push(...rec._getBoundPoints());\n        }\n        //处理子对象区域\n        let chidren = this._children;\n        for (let i = 0, n = chidren.length; i < n; i++) {\n            let child = <Sprite>chidren[i]; //_visible===true隐含了是Sprite\n            if (child._visible === true && child._cacheStyle.maskParent != this) {\n                let cList = child._boundPointsToParent(ifRotate);\n                if (cList) {\n                    if (pList)\n                        pList.push(...cList);\n                    else\n                        pList = cList;\n                }\n            }\n        }\n        return pList;\n    }\n\n    /**\n     * @internal\n     * 获取cache数据。\n     * @return  cache数据 CacheStyle 。\n     */\n    _getCacheStyle(): CacheStyle {\n        this._cacheStyle === CacheStyle.EMPTY && (this._cacheStyle = CacheStyle.create());\n        return this._cacheStyle;\n    }\n\n    /**\n     * @private\n     * 获取样式。\n     * @return  样式 Style 。\n     */\n    getStyle(): SpriteStyle {\n        this._style === SpriteStyle.EMPTY && (this._style = SpriteStyle.create());\n        return this._style;\n    }\n\n    /**\n     * @private\n     * 设置样式。\n     * @param\tvalue 样式。\n     */\n    setStyle(value: SpriteStyle): void {\n        this._style = value;\n    }\n\n    /**X轴缩放值，默认值为1。设置为负数，可以实现水平反转效果，比如scaleX=-1。*/\n    get scaleX(): number {\n        return this._style.scaleX;\n    }\n\n    set scaleX(value: number) {\n        this.set_scaleX(value);\n    }\n\n    /**Y轴缩放值，默认值为1。设置为负数，可以实现垂直反转效果，比如scaleX=-1。*/\n    get scaleY(): number {\n        return this._style.scaleY;\n    }\n\n    set scaleY(value: number) {\n        this.set_scaleY(value);\n    }\n\n    set_scaleX(value: number): void {\n        var style: SpriteStyle = this.getStyle();\n        if (style.scaleX !== value) {\n            if (this.cacheGlobal) {\n                this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Scale_X | Sprite.Sprite_GlobalDeltaFlage_Matrix, true)\n                this._syncGlobalFlag(Sprite.Sprite_GlobalDeltaFlage_Scale_X | Sprite.Sprite_GlobalDeltaFlage_Matrix, true);\n            }\n            this._setScaleX(value);\n            this._setTranformChange();\n            this._shouldRefreshLayout();\n        }\n    }\n    get_scaleX(): number {\n        return this._style.scaleX;\n    }\n\n    set_scaleY(value: number): void {\n        var style: SpriteStyle = this.getStyle();\n        if (style.scaleY !== value) {\n            if (this.cacheGlobal) {\n                this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Scale_Y | Sprite.Sprite_GlobalDeltaFlage_Matrix, true)\n                this._syncGlobalFlag(Sprite.Sprite_GlobalDeltaFlage_Scale_Y | Sprite.Sprite_GlobalDeltaFlage_Matrix, true);\n            }\n            this._setScaleY(value);\n            this._setTranformChange();\n            this._shouldRefreshLayout();\n        }\n    }\n    get_scaleY(): number {\n        return this._style.scaleY;\n    }\n\n\n    /**@internal */\n    _setScaleX(value: number): void {\n        this._style.scaleX = value;\n    }\n\n    /**@internal */\n    _setScaleY(value: number): void {\n        this._style.scaleY = value;\n    }\n\n    /**旋转角度，默认值为0。以角度为单位。*/\n    get rotation(): number {\n        return this._style.rotation;\n    }\n\n    set rotation(value: number) {\n        var style: SpriteStyle = this.getStyle();\n        if (style.rotation !== value) {\n            if (this.cacheGlobal) {\n                this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Rotation | Sprite.Sprite_GlobalDeltaFlage_Matrix, true)\n                this._syncGlobalFlag(Sprite.Sprite_GlobalDeltaFlage_Rotation | Sprite.Sprite_GlobalDeltaFlage_Matrix, true);\n            }\n            this._setRotation(value);\n            this._setTranformChange();\n        }\n    }\n\n    /**@internal */\n    _setRotation(value: number): void {\n        this.getStyle().rotation = value;\n    }\n\n    /**水平倾斜角度，默认值为0。以角度为单位。*/\n    get skewX(): number {\n        return this._style.skewX;\n    }\n\n    set skewX(value: number) {\n        var style: SpriteStyle = this.getStyle();\n        if (style.skewX !== value) {\n            this._setSkewX(value);\n            this._setTranformChange();\n        }\n    }\n\n    /**@internal */\n    _setSkewX(value: number): void {\n        this._style.skewX = value;\n    }\n\n    /**垂直倾斜角度，默认值为0。以角度为单位。*/\n    get skewY(): number {\n        return this._style.skewY;\n    }\n\n    set skewY(value: number) {\n        var style: SpriteStyle = this.getStyle();\n        if (style.skewY !== value) {\n            this._setSkewY(value);\n            this._setTranformChange();\n        }\n    }\n\n    /**@internal */\n    _setSkewY(value: number): void {\n        this._style.skewY = value;\n    }\n\n    /**@internal */\n    _createTransform(): Matrix {\n        return Matrix.create();\n    }\n\n    /**@private */\n    protected _adjustTransform(): Matrix {\n        this._tfChanged = false;\n        var style: SpriteStyle = this._style;\n        var sx: number = style.scaleX, sy: number = style.scaleY;\n        var sskx: number = style.skewX;\n        var ssky: number = style.skewY;\n        var rot: number = style.rotation;\n        var m: Matrix = this._transform || (this._transform = this._createTransform());\n        if (rot || sx !== 1 || sy !== 1 || sskx !== 0 || ssky !== 0) {\n            m._bTransform = true;\n            var skx: number = (rot - sskx) * 0.0174532922222222;//laya.CONST.PI180;\n            var sky: number = (rot + ssky) * 0.0174532922222222;\n            var cx: number = Math.cos(sky);\n            var ssx: number = Math.sin(sky);\n            var cy: number = Math.sin(skx);\n            var ssy: number = Math.cos(skx);\n            m.a = sx * cx;\n            m.b = sx * ssx;\n            m.c = -sy * cy;\n            m.d = sy * ssy;\n            m.tx = m.ty = 0;\n        } else {\n            m.identity();\n            this._renderType &= ~SpriteConst.TRANSFORM;\n        }\n        return m;\n    }\n\n    /**@internal */\n    _setTransform(value: Matrix): void {\n\n    }\n\n    /**\n     * <p>对象的矩阵信息。通过设置矩阵可以实现节点旋转，缩放，位移效果。</p>\n     * <p>矩阵更多信息请参考 <code>Matrix</code></p>\n     */\n    get transform(): Matrix {\n        return this._tfChanged ? this._adjustTransform() : this._transform;\n    }\n\n    set transform(value: Matrix) {\n        this.set_transform(value);\n    }\n\n    get_transform(): Matrix {\n        return this._tfChanged ? this._adjustTransform() : this._transform;\n    }\n\n    set_transform(value: Matrix): void {\n        this._tfChanged = false;\n        var m: Matrix = this._transform || (this._transform = this._createTransform());\n        value.copyTo(m);\n        this._setTransform(m);\n        //设置transform时重置x,y\n        if (value) {\n            this._x = m.tx;\n            this._y = m.ty;\n            m.tx = m.ty = 0;\n        }\n        if (value) this._renderType |= SpriteConst.TRANSFORM;\n        else {\n            this._renderType &= ~SpriteConst.TRANSFORM;\n        }\n        this.parentRepaint();\n    }\n\n    /**@internal */\n    _setPivotX(value: number): void {\n        var style: SpriteStyle = this.getStyle();\n        style.pivotX = value;\n    }\n\n    /**@internal */\n    _getPivotX(): number {\n        return this._style.pivotX;\n    }\n\n    /**@internal */\n    _setPivotY(value: number): void {\n        var style: SpriteStyle = this.getStyle();\n        style.pivotY = value;\n    }\n\n    /**@internal */\n    _getPivotY(): number {\n        return this._style.pivotY;\n    }\n\n    /**X轴 轴心点的位置，单位为像素，默认为0。轴心点会影响对象位置，缩放中心，旋转中心。*/\n    get pivotX(): number {\n        return this._getPivotX();\n    }\n\n    set pivotX(value: number) {\n        var style: SpriteStyle = this.getStyle();\n        if (style.pivotX != value) {\n            this._setPivotX(value);\n            let t = this.width;\n            if (t != 0) this._anchorX = value / t;\n            this._shouldRefreshLayout();\n            this.repaint();\n        }\n    }\n\n    /**Y轴 轴心点的位置，单位为像素，默认为0。轴心点会影响对象位置，缩放中心，旋转中心。*/\n    get pivotY(): number {\n        return this._getPivotY();\n    }\n\n    set pivotY(value: number) {\n        var style: SpriteStyle = this.getStyle();\n        if (style.pivotY != value) {\n            this._setPivotY(value);\n            let t = this.height;\n            if (t != 0) this._anchorY = value / t;\n            this._shouldRefreshLayout();\n            this.repaint();\n        }\n    }\n\n    /**X锚点，值为0-1，设置anchorX值最终通过pivotX值来改变节点轴心点。*/\n    get anchorX(): number {\n        return this.get_anchorX();\n    }\n\n    get_anchorX(): number {\n        return this._anchorX;\n    }\n\n    set anchorX(value: number) {\n        this.set_anchorX(value);\n    }\n\n    set_anchorX(value: number) {\n        if (isNaN(value))\n            value = null;\n        if (this._anchorX != value) {\n            this._anchorX = value;\n            if (value != null) {\n                this._setPivotX(value * this.width);\n                this._shouldRefreshLayout();\n                this.repaint();\n            }\n        }\n    }\n\n    /**Y锚点，值为0-1，设置anchorY值最终通过pivotY值来改变节点轴心点。*/\n    get anchorY(): number {\n        return this.get_anchorY();\n    }\n\n    get_anchorY(): number {\n        return this._anchorY;\n    }\n\n    set anchorY(value: number) {\n        this.set_anchorY(value);\n    }\n\n    set_anchorY(value: number) {\n        if (isNaN(value))\n            value = null;\n        if (this._anchorY != value) {\n            this._anchorY = value;\n            if (value != null) {\n                this._setPivotY(value * this.height);\n                this._shouldRefreshLayout();\n                this.repaint();\n            }\n        }\n    }\n\n    /**@internal */\n    _setAlpha(value: number): void {\n        if (this._style.alpha !== value) {\n            var style: SpriteStyle = this.getStyle();\n            style.alpha = value;\n            if (value !== 1) this._renderType |= SpriteConst.ALPHA;\n            else this._renderType &= ~SpriteConst.ALPHA;\n            this.parentRepaint();\n        }\n    }\n\n    /**@internal */\n    _getAlpha(): number {\n        return this._style.alpha;\n    }\n\n    /**透明度，值为0-1，默认值为1，表示不透明。更改alpha值会影响drawcall。*/\n    get alpha(): number {\n        return this._getAlpha();\n    }\n\n    set alpha(value: number) {\n        value = value < 0 ? 0 : (value > 1 ? 1 : value);\n        this._setAlpha(value);\n    }\n\n    /**表示是否可见，默认为true。如果设置不可见，节点将不被渲染。*/\n    get visible(): boolean {\n        return this.get_visible();\n    }\n\n    set visible(value: boolean) {\n        this.set_visible(value);\n    }\n\n    get_visible(): boolean {\n        return this._visible;\n    }\n\n    set_visible(value: boolean): void {\n        if (this._visible !== value) {\n            this._visible = value;\n            this.parentRepaint(SpriteConst.REPAINT_ALL);\n        }\n    }\n\n    /**指定要使用的混合模式。目前只支持\"lighter\"。*/\n    get blendMode(): string {\n        return this._style.blendMode;\n    }\n\n    set blendMode(value: string) {\n        if (this.getStyle().blendMode != value) {\n            this.getStyle().blendMode = value;\n            if (value && value != \"source-over\")\n                this._renderType |= SpriteConst.BLEND;\n            else\n                this._renderType &= ~SpriteConst.BLEND;\n            this.parentRepaint();\n        }\n    }\n\n    /**绘图对象。封装了绘制位图和矢量图的接口，Sprite所有的绘图操作都通过Graphics来实现的。*/\n    get graphics(): Graphics {\n        if (!this._graphics) {\n            this.graphics = new Graphics();\n            this._ownGraphics = true;\n        }\n        return this._graphics;\n    }\n\n    set graphics(value: Graphics) {\n        this.setGraphics(value, false);\n    }\n\n    setGraphics(value: Graphics, transferOwnership: boolean) {\n        if (this._graphics) {\n            this._graphics._sp = null;\n            if (this._ownGraphics)\n                this._graphics.destroy();\n        }\n        this._ownGraphics = transferOwnership;\n        this._graphics = value;\n        if (value) {\n            this._renderType |= SpriteConst.GRAPHICS;\n            value._sp = this;\n        } else {\n            this._renderType &= ~SpriteConst.GRAPHICS;\n        }\n        this.repaint();\n    }\n\n    get material() {\n        return this._graphics?.material;\n    }\n\n    /**\n     * \n     */\n    set material(value: Material) {\n        if (this._graphics == null && value == null)\n            return;\n\n        this.graphics.material = value;\n    }\n\n    /**\n     * <p>显示对象的滚动矩形范围，具有裁剪效果(如果只想限制子对象渲染区域，请使用viewport)</p>\n     * <p> srollRect和viewport的区别：<br/>\n     * 1.srollRect自带裁剪效果，viewport只影响子对象渲染是否渲染，不具有裁剪效果（性能更高）。<br/>\n     * 2.设置rect的x,y属性均能实现区域滚动效果，但scrollRect会保持0,0点位置不变。</p>\n     */\n    get scrollRect(): Rectangle {\n        return this._style.scrollRect;\n    }\n\n    set scrollRect(value: Rectangle) {\n        if (this.getStyle().scrollRect == null && value == null)\n            return;\n\n        this.getStyle().scrollRect = value;\n        //viewport = value;\n        if (value) {\n            this._renderType |= SpriteConst.CLIP;\n        } else {\n            this._renderType &= ~SpriteConst.CLIP;\n        }\n        this.repaint();\n    }\n\n    /**\n     * <p>设置坐标位置。相当于分别设置x和y属性。</p>\n     * <p>因为返回值为Sprite对象本身，所以可以使用如下语法：spr.pos(...).scale(...);</p>\n     * @param\tx\t\t\tX轴坐标。\n     * @param\ty\t\t\tY轴坐标。\n     * @param \tspeedMode\t（可选）是否极速模式，正常是调用this.x=value进行赋值，极速模式直接调用内部函数处理，如果未重写x,y属性，建议设置为急速模式性能更高。\n     * @return\t返回对象本身。\n     */\n    pos(x: number, y: number, speedMode: boolean = false): Sprite {\n        if (this._x !== x || this._y !== y) {\n            if (this._destroyed) return this;\n            if (speedMode) {\n                this._setX(x);\n                this._setY(y);\n                this.parentRepaint(SpriteConst.REPAINT_CACHE);\n                var p: Sprite = this._cacheStyle.maskParent;\n                if (p) {\n                    p.repaint(SpriteConst.REPAINT_CACHE);\n                }\n\n                if (this.cacheGlobal) {\n                    let flag: number = Sprite.Sprite_GlobalDeltaFlage_Position_X | Sprite.Sprite_GlobalDeltaFlage_Position_Y;\n                    this._setGlobalCacheFlag(flag, true);\n                    this._syncGlobalFlag(flag, true);\n                }\n\n            } else {\n                this.x = x;\n                this.y = y;\n            }\n        }\n        return this;\n    }\n\n    /**\n     * <p>设置轴心点。相当于分别设置pivotX和pivotY属性。</p>\n     * <p>因为返回值为Sprite对象本身，所以可以使用如下语法：spr.pivot(...).pos(50, 100);</p>\n     * @param\tx X轴心点。\n     * @param\ty Y轴心点。\n     * @return\t返回对象本身。\n     */\n    pivot(x: number, y: number): Sprite {\n        this.pivotX = x;\n        this.pivotY = y;\n        return this;\n    }\n\n    /**\n     * <p>设置宽高。相当于分别设置width和height属性。</p>\n     * <p>因为返回值为Sprite对象本身，所以可以使用如下语法：spr.size(...).pos(50, 100);</p>\n     * @param\twidth 宽度值。\n     * @param\thegiht 高度值。\n     * @return\t返回对象本身。\n     */\n    size(width: number, height: number): Sprite {\n        this.width = width;\n        this.height = height;\n        return this;\n    }\n\n    /**\n     * <p>设置缩放。相当于分别设置scaleX和scaleY属性。</p>\n     * <p>因为返回值为Sprite对象本身，所以可以使用如下语法：spr.scale(...).pos(50, 100);</p>\n     * @param\tscaleX\t\tX轴缩放比例。\n     * @param\tscaleY\t\tY轴缩放比例。\n     * @param \tspeedMode\t（可选）是否极速模式，正常是调用this.scaleX=value进行赋值，极速模式直接调用内部函数处理，如果未重写scaleX,scaleY属性，建议设置为急速模式性能更高。\n     * @return\t返回对象本身。\n     */\n    scale(scaleX: number, scaleY: number, speedMode?: boolean): Sprite {\n        if (this._destroyed) return this;\n        var style: SpriteStyle = this.getStyle();\n        if (style.scaleX != scaleX || style.scaleY != scaleY) {\n            if (speedMode) {\n                this._setScaleX(scaleX);\n                this._setScaleY(scaleY);\n                this._setTranformChange();\n                this._shouldRefreshLayout();\n            } else {\n                this.scaleX = scaleX;\n                this.scaleY = scaleY;\n            }\n        }\n        return this;\n    }\n\n    /**\n     * <p>设置倾斜角度。相当于分别设置skewX和skewY属性。</p>\n     * <p>因为返回值为Sprite对象本身，所以可以使用如下语法：spr.skew(...).pos(50, 100);</p>\n     * @param\tskewX 水平倾斜角度。\n     * @param\tskewY 垂直倾斜角度。\n     * @return\t返回对象本身\n     */\n    skew(skewX: number, skewY: number): Sprite {\n        this.skewX = skewX;\n        this.skewY = skewY;\n        return this;\n    }\n\n    /**\n     * 更新、呈现显示对象。由系统调用。\n     * @param\tcontext 渲染的上下文引用。\n     * @param\tx X轴坐标。\n     * @param\ty Y轴坐标。\n     */\n    render(ctx: Context, x: number, y: number): void {\n        RenderSprite.renders[this._renderType]._fun(this, ctx, x + this._x, y + this._y);\n        this._repaint = 0;\n    }\n\n    /**\n     * <p>绘制 当前<code>Sprite</code> 到 <code>Canvas</code> 上，并返回一个HtmlCanvas。</p>\n     * <p>绘制的结果可以当作图片源，再次绘制到其他Sprite里面，示例：</p>\n     *\n     * var htmlCanvas:HTMLCanvas = sprite.drawToCanvas(100, 100, 0, 0);//把精灵绘制到canvas上面\n     * var sp:Sprite = new Sprite();//创建精灵\n     * sp.graphics.drawTexture(htmlCanvas.getTexture());//把截图绘制到精灵上\n     * Laya.stage.addChild(sp);//把精灵显示到舞台\n     *\n     * <p>也可以获取原始图片数据，分享到网上，从而实现截图效果，示例：</p>\n     *\n     * var htmlCanvas:HTMLCanvas = sprite.drawToCanvas(100, 100, 0, 0);//把精灵绘制到canvas上面\n     * htmlCanvas.toBase64(\"image/png\",0.9);//打印图片base64信息，可以发给服务器或者保存为图片\n     *\n     * @param\tcanvasWidth 画布宽度。\n     * @param\tcanvasHeight 画布高度。\n     * @param\tx 绘制的 X 轴偏移量。\n     * @param\ty 绘制的 Y 轴偏移量。\n     * @return  HTMLCanvas 对象。\n     */\n    drawToCanvas(canvasWidth: number, canvasHeight: number, offsetX: number, offsetY: number): HTMLCanvas {\n        //console.log('drawToCanvas is deprecated, please use drawToTexture');\n        return Sprite.drawToCanvas(this, this._renderType, canvasWidth, canvasHeight, offsetX, offsetY);\n    }\n\n    /**\n     * 绘制到一个Texture对象\n     * @param canvasWidth \n     * @param canvasHeight \n     * @param offsetX \n     * @param offsetY \n     */\n    drawToTexture(canvasWidth: number, canvasHeight: number, offsetX: number, offsetY: number, rt: RenderTexture2D | null = null): Texture | RenderTexture2D {\n        let res = Sprite.drawToTexture(this, this._renderType, canvasWidth, canvasHeight, offsetX, offsetY, rt);\n        return res;\n    }\n\n    /**\n     * 把当前对象渲染到指定的贴图上。贴图由外部指定，避免每次都创建。\n     * @param offx \n     * @param offy \n     * @param tex 输出渲染结果\n     */\n    drawToTexture3D(offx: number, offy: number, tex: Texture2D) {\n        throw 'not implement'\n    }\n\n\n    /**\n     * @private\n     * 绘制到画布。\n     */\n    static drawToCanvas(sprite: Sprite, _renderType: number, canvasWidth: number, canvasHeight: number, offsetX: number, offsetY: number): HTMLCanvas {\n        offsetX -= sprite.x;\n        offsetY -= sprite.y;\n        offsetX |= 0;\n        offsetY |= 0;\n        canvasWidth |= 0;\n        canvasHeight |= 0;\n        var ctx: Context = new Context();\n        ctx.size(canvasWidth, canvasHeight);\n        ctx.asBitmap = true;\n        ctx._targets.start();\n        ctx._targets.clear(0, 0, 0, 0);\n        RenderSprite.renders[_renderType]._fun(sprite, ctx, offsetX, offsetY);\n        ctx.flush();\n        ctx._targets.end();\n        ctx._targets.restore();\n        var dt: Uint8Array = ctx._targets.getData(0, 0, canvasWidth, canvasHeight) as Uint8Array;\n        ctx.destroy();\n        var imgdata: any = new ImageData(canvasWidth, canvasHeight);;\t//创建空的imagedata。因为下面要翻转，所以不直接设置内容\n        //翻转getData的结果。\n        var lineLen: number = canvasWidth * 4;\n        var temp: Uint8Array = new Uint8Array(lineLen);\n        var dst: Uint8Array = imgdata.data;\n        var y: number = canvasHeight - 1;\n        var off: number = y * lineLen;\n        var srcoff: number = 0;\n        for (; y >= 0; y--) {\n            dst.set(dt.subarray(srcoff, srcoff + lineLen), off);\n            off -= lineLen;\n            srcoff += lineLen;\n        }\n        //imgdata.data.set(dt);\n        //画到2d画布上\n        var canv: HTMLCanvas = new HTMLCanvas(true);\n        canv.size(canvasWidth, canvasHeight);\n        var ctx2d: CanvasRenderingContext2D = <CanvasRenderingContext2D>(canv.getContext('2d') as any);\n        ctx2d.putImageData(imgdata, 0, 0);;\n        return canv;\n    }\n\n    static drawtocanvCtx: Context;\n    /**\n     * @private \n     * \n     */\n    static drawToTexture(sprite: Sprite, _renderType: number, canvasWidth: number, canvasHeight: number, offsetX: number, offsetY: number, rt: RenderTexture2D | null = null): Texture | RenderTexture2D {\n        if (!Sprite.drawtocanvCtx) {\n            Sprite.drawtocanvCtx = new Context();\n        }\n        offsetX -= sprite.x;\n        offsetY -= sprite.y;\n        offsetX |= 0;\n        offsetY |= 0;\n        canvasWidth |= 0;\n        canvasHeight |= 0;\n        var ctx = rt ? Sprite.drawtocanvCtx : new Context();\n        ctx.clear();\n        ctx.size(canvasWidth, canvasHeight);\n        if (rt) {\n            ctx._targets = rt;\n        } else {\n            ctx.asBitmap = true;\n        }\n        let texRT;\n        if (ctx._targets) {\n            ctx._targets.start();\n            let color = RenderTexture2D._clearColor;\n            ctx._targets.clear(color.r, color.g, color.b, color.a);\n            ctx._drawingToTexture = true;\n            RenderSprite.renders[_renderType]._fun(sprite, ctx, offsetX, offsetY);\n            ctx._drawingToTexture = false;\n            ctx.flush();\n            ctx._targets.end();\n            ctx._targets.restore();\n            if (!rt)\n                texRT = ctx._targets;\n            ctx._targets = null;//IDE闪\n        }\n        if (!rt) {\n            var rtex: Texture = new Texture(((<Texture2D>(ctx._targets as any))) ? ((<Texture2D>(ctx._targets as any))) : texRT, Texture.INV_UV);\n            ctx.destroy(true);// 保留 _targets\n            return rtex;\n        }\n        sprite._repaint = 0;\n        return rt;\n    }\n\n    /**\n     * <p>自定义更新、呈现显示对象。一般用来扩展渲染模式，请合理使用，可能会导致在加速器上无法渲染。</p>\n     * <p><b>注意</b>不要在此函数内增加或删除树节点，否则会对树节点遍历造成影响。</p>\n     * @param\tcontext  渲染的上下文引用。\n     * @param\tx X轴坐标。\n     * @param\ty Y轴坐标。\n     */\n    customRender(context: Context, x: number, y: number): void {\n        //_renderType |= SpriteConst.CUSTOM;\n        this._repaint = SpriteConst.REPAINT_ALL;\n    }\n\n    /**\n     * @internal\n     * 应用滤镜。\n     */\n    _applyFilters(): void {\n        // canvas 模式不支持\n    }\n\n    /**滤镜集合。可以设置多个滤镜组合。*/\n    get filters(): any[] {\n        return this._cacheStyle.filters;\n    }\n\n    set filters(value: any[]) {\n        value && value.length === 0 && (value = null);\n        this._getCacheStyle().filters = value ? value.slice() : null;\n        if (value)\n            this._renderType |= SpriteConst.FILTERS;\n        else\n            this._renderType &= ~SpriteConst.FILTERS;\n\n        if (value && value.length > 0) {\n            if (!this._getBit(NodeFlags.DISPLAY)) this._setBitUp(NodeFlags.DISPLAY);\n            if (!(value.length == 1 && (value[0] instanceof ColorFilter))) {\n                this._getCacheStyle().cacheForFilters = true;\n                this._checkCanvasEnable();\n            }\n        } else {\n            if (this._cacheStyle.cacheForFilters) {\n                this._cacheStyle.cacheForFilters = false;\n                this._checkCanvasEnable();\n            }\n        }\n        this._getCacheStyle().hasGlowFilter = this._isHaveGlowFilter();\n        this.repaint();\n    }\n\n    /**\n     * @internal\n     * 查看当前原件中是否包含发光滤镜。\n     * @return 一个 Boolean 值，表示当前原件中是否包含发光滤镜。\n     */\n    _isHaveGlowFilter(): boolean {\n        var i: number, len: number;\n        if (this.filters) {\n            for (i = 0; i < this.filters.length; i++) {\n                if (this.filters[i].type == Filter.GLOW) {\n                    return true;\n                }\n            }\n        }\n        for (i = 0, len = this._children.length; i < len; i++) {\n            if ((<Sprite>this._children[i])._isHaveGlowFilter()) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /**\n     * 把本地坐标转换为相对stage的全局坐标。\n     * @param point\t\t\t\t本地坐标点。\n     * @param createNewPoint\t（可选）是否创建一个新的Point对象作为返回值，默认为false，使用输入的point对象返回，减少对象创建开销。\n     * @param globalNode\t\tglobal节点，默认为Laya.stage\n     * @return 转换后的坐标的点。\n     */\n    localToGlobal(point: Point, createNewPoint: boolean = false, globalNode: Sprite | null = null): Point {\n        //if (!_displayedInStage || !point) return point;\n        if (createNewPoint === true) {\n            point = new Point(point.x, point.y);\n        }\n        var ele: Sprite = this;\n        globalNode = globalNode || ILaya.stage;\n        while (ele && !ele._destroyed) {\n            if (ele == globalNode) break;\n            point = ele.toParentPoint(point);\n            ele = (<Sprite>ele.parent);\n        }\n\n        return point;\n    }\n\n    /**\n     * 把stage的全局坐标转换为本地坐标。\n     * @param point\t\t\t\t全局坐标点。\n     * @param createNewPoint\t（可选）是否创建一个新的Point对象作为返回值，默认为false，使用输入的point对象返回，减少对象创建开销。\n     * @param globalNode\t\tglobal节点，默认为Laya.stage\n     * @return 转换后的坐标的点。\n     */\n    globalToLocal(point: Point, createNewPoint: boolean = false, globalNode: Sprite | null = null): Point {\n        //if (!_displayedInStage || !point) return point;\n        if (createNewPoint) {\n            point = new Point(point.x, point.y);\n        }\n        var ele: Sprite = this;\n        var list: any[] = [];\n        globalNode = globalNode || ILaya.stage;\n        while (ele && !ele._destroyed) {\n            if (ele == globalNode) break;\n            list.push(ele);\n            ele = (<Sprite>ele.parent);\n        }\n        var i: number = list.length - 1;\n        while (i >= 0) {\n            ele = list[i];\n            point = ele.fromParentPoint(point);\n            i--;\n        }\n        return point;\n    }\n\n    /**\n     * 将本地坐标系坐标转转换到父容器坐标系。\n     * @param point 本地坐标点。\n     * @return  转换后的点。\n     */\n    toParentPoint(point: Point): Point {\n        if (!point) return point;\n        point.x -= this.pivotX;\n        point.y -= this.pivotY;\n        if (this.transform) {\n            this._transform.transformPoint(point);\n        }\n        point.x += this._x;\n        point.y += this._y;\n        var scroll: Rectangle = this._style.scrollRect;\n        if (scroll) {\n            point.x -= scroll.x;\n            point.y -= scroll.y;\n        }\n        return point;\n    }\n\n    /**\n     * 将父容器坐标系坐标转换到本地坐标系。\n     * @param point 父容器坐标点。\n     * @return  转换后的点。\n     */\n    fromParentPoint(point: Point): Point {\n        if (!point) return point;\n        point.x -= this._x;\n        point.y -= this._y;\n        var scroll: Rectangle = this._style.scrollRect;\n        if (scroll) {\n            point.x += scroll.x;\n            point.y += scroll.y;\n        }\n        if (this.transform) {\n            //_transform.setTranslate(0,0);\n            this._transform.invertTransformPoint(point);\n        }\n        point.x += this.pivotX;\n        point.y += this.pivotY;\n        return point;\n    }\n\n    protected onStartListeningToType(type: string) {\n        super.onStartListeningToType(type);\n\n        //如果是鼠标事件，则设置自己和父对象为可接受鼠标交互事件\n        if (this._mouseState !== 1 && Event.isMouseEvent(type)) {\n            this.mouseEnabled = true;\n            this._setBit(NodeFlags.HAS_MOUSE, true);\n            if (this._parent) {\n                this._onDisplay();\n            }\n        }\n    }\n\n    /** @private */\n    protected _onDisplay(v?: boolean): void {\n        if (this._mouseState !== 1) {\n            var ele: Sprite = this;\n            ele = (<Sprite>ele.parent);\n            while (ele && ele._mouseState !== 1) {\n                if (ele._getBit(NodeFlags.HAS_MOUSE)) break;\n                ele.mouseEnabled = true;\n                ele._setBit(NodeFlags.HAS_MOUSE, true);\n                ele = (<Sprite>ele.parent);\n            }\n        }\n    }\n\n    /**@private \n     * @override\n    */\n    protected _setParent(value: Node): void {\n        super._setParent(value);\n        if (value && this._getBit(NodeFlags.HAS_MOUSE)) {\n            this._onDisplay();\n        }\n    }\n\n    /**\n     * <p>加载并显示一个图片。相当于加载图片后，设置texture属性</p>\n     * <p>注意：2.0改动：多次调用，只会显示一个图片（1.0会显示多个图片）,x,y,width,height参数取消。</p>\n     * @param url\t\t图片地址。\n     * @param complete\t（可选）加载完成回调。\n     * @return\t返回精灵对象本身。\n     */\n    loadImage(url: string, complete: Handler = null): Sprite {\n        if (!url) {\n            this.texture = null;\n            this.repaint(SpriteConst.REPAINT_ALL);\n            complete && complete.run();\n        } else {\n            let tex = ILaya.loader.getRes(url);\n            if (tex) {\n                this.texture = tex;\n                this.repaint(SpriteConst.REPAINT_ALL);\n                complete && complete.run();\n            }\n            else {\n                if (this._skinBaseUrl)\n                    url = URL.formatURL(url, this._skinBaseUrl);\n                ILaya.loader.load(url).then((tex: Texture) => {\n                    this.texture = tex;\n                    this.repaint(SpriteConst.REPAINT_ALL);\n                    complete && complete.run();\n                });\n            }\n        }\n\n        return this;\n    }\n\n    /**\n     * 根据图片地址创建一个新的 <code>Sprite</code> 对象用于加载并显示此图片。\n     * @param\turl 图片地址。\n     * @return\t返回新的 <code>Sprite</code> 对象。\n     */\n    static fromImage(url: string): Sprite {\n        return new Sprite().loadImage(url);\n    }\n\n    /**cacheAs后，设置自己和父对象缓存失效。*/\n    repaint(type: number = SpriteConst.REPAINT_CACHE): void {\n        if (!(this._repaint & type)) {\n            this._repaint |= type;\n            this.parentRepaint(type);\n        }\n        if (this._cacheStyle && this._cacheStyle.maskParent) {\n            this._cacheStyle.maskParent.repaint(type);\n        }\n    }\n\n\n    /**\n     * @internal\n     * 获取是否重新缓存。\n     * @return 如果重新缓存值为 true，否则值为 false。\n     */\n    _needRepaint(): boolean {\n        return (this._repaint & SpriteConst.REPAINT_CACHE) && this._cacheStyle.enableCanvasRender && this._cacheStyle.reCache;\n    }\n\n    /**@private\t\n     * @override\n    */\n    protected _childChanged(child: Node = null): void {\n        super._childChanged(child);\n\n        if (this._children.length) this._renderType |= SpriteConst.CHILDS;\n        else this._renderType &= ~SpriteConst.CHILDS;\n        if (child && this._getBit(NodeFlags.HAS_ZORDER)) ILaya.systemTimer.callLater(this, this.updateZOrder);\n        this.repaint(SpriteConst.REPAINT_ALL);\n    }\n\n    /**cacheAs时，设置所有父对象缓存失效。 */\n    parentRepaint(type: number = SpriteConst.REPAINT_CACHE): void {\n        var p: Sprite = (<Sprite>this._parent);\n        if (p && !(p._repaint & type)) {\n            p._repaint |= type;\n            p.parentRepaint(type);\n        }\n    }\n\n    /**对舞台 <code>stage</code> 的引用。*/\n    get stage() {\n        return ILaya.stage;\n    }\n\n    /**\n     * <p>可以设置一个Rectangle区域作为点击区域，或者设置一个<code>HitArea</code>实例作为点击区域，HitArea内可以设置可点击和不可点击区域。</p>\n     * <p>如果不设置hitArea，则根据宽高形成的区域进行碰撞。</p>\n     */\n    get hitArea(): IHitArea {\n        return this._style.hitArea;\n    }\n\n    set hitArea(value: IHitArea) {\n        this.getStyle().hitArea = value;\n    }\n\n    /**@internal */\n    _setMask(value: Sprite): void {\n\n    }\n\n    /**\n     * <p>遮罩，可以设置一个对象(支持位图和矢量图)，根据对象形状进行遮罩显示。</p>\n     * <p>【注意】遮罩对象坐标系是相对遮罩对象本身的，和Flash机制不同</p>\n     */\n    get mask(): Sprite {\n        return this._cacheStyle.mask;\n    }\n\n    set mask(value: Sprite) {\n        if (value && this.mask == value && value._cacheStyle.maskParent == this)\n            return;\n\n        if (this.mask)\n            this.mask._getCacheStyle().maskParent = null;\n\n        this._getCacheStyle().mask = value;\n        this._setMask(value);\n        this._checkCanvasEnable();\n\n        if (value) {\n            value._getCacheStyle().maskParent = this;\n            this._renderType |= SpriteConst.MASK;\n        }\n        else\n            this._renderType &= ~SpriteConst.MASK;\n        this.repaint();\n    }\n\n    /**\n     * 是否接受鼠标事件。\n     * 默认为false，如果监听鼠标事件，则会自动设置本对象及父节点的属性 mouseEnable 的值都为 true（如果父节点手动设置为false，则不会更改）。\n     * */\n    get mouseEnabled(): boolean {\n        return this._mouseState > 1;\n    }\n\n    set mouseEnabled(value: boolean) {\n        this._mouseState = value ? 2 : 1;\n    }\n\n    /**\n     * 开始拖动此对象。\n     * @param area\t\t\t\t（可选）拖动区域，此区域为当前对象注册点活动区域（不包括对象宽高），可选。\n     * @param hasInertia\t\t（可选）鼠标松开后，是否还惯性滑动，默认为false，可选。\n     * @param elasticDistance\t（可选）橡皮筋效果的距离值，0为无橡皮筋效果，默认为0，可选。\n     * @param elasticBackTime\t（可选）橡皮筋回弹时间，单位为毫秒，默认为300毫秒，可选。\n     * @param data\t\t\t\t（可选）拖动事件携带的数据，可选。\n     * @param ratio\t\t\t\t（可选）惯性阻尼系数，影响惯性力度和时长。\n     */\n    startDrag(area: Rectangle = null, hasInertia: boolean = false, elasticDistance: number = 0, elasticBackTime: number = 300, data: any = null, ratio: number = 0.92): void {\n        this._style.dragging || (this.getStyle().dragging = new Dragging());\n        this._style.dragging.start(this, area, hasInertia, elasticDistance, elasticBackTime, data, ratio);\n    }\n\n    /**停止拖动此对象。*/\n    stopDrag(): void {\n        this._style.dragging && this._style.dragging.stop();\n    }\n\n    /**\n     * @internal \n     * @override\n    */\n    _setDisplay(value: boolean): void {\n        if (!value) {\n            if (this._cacheStyle) {\n                this._cacheStyle.releaseContext();\n                this._cacheStyle.releaseFilterCache();\n                if (this._cacheStyle.hasGlowFilter) {\n                    this._cacheStyle.hasGlowFilter = false;\n                }\n            }\n        }\n        super._setDisplay(value);\n    }\n\n    /**\n     * 检测某个点是否在此对象内。\n     * @param\tx 全局x坐标。\n     * @param\ty 全局y坐标。\n     * @return  表示是否在对象内。\n     */\n    hitTestPoint(x: number, y: number): boolean {\n        var point: Point = this.globalToLocal(Point.TEMP.setTo(x, y));\n        x = point.x;\n        y = point.y;\n        var rect: IHitArea = this._style.hitArea ? this._style.hitArea : (this._isWidthSet && this._isHeightSet) ? Rectangle.TEMP.setTo(0, 0, this._width, this._height) : this.getSelfBounds();\n        return rect.contains(x, y);\n    }\n\n    /**获得相对于本对象上的鼠标坐标信息。*/\n    getMousePoint(): Point {\n        return this.globalToLocal(Point.TEMP.setTo(ILaya.stage.mouseX, ILaya.stage.mouseY));\n    }\n\n\n\n    /**\n     * 返回鼠标在此对象坐标系上的 X 轴坐标信息。\n     */\n    get mouseX(): number {\n        return this.getMousePoint().x;\n    }\n\n    /**\n     * 返回鼠标在此对象坐标系上的 Y 轴坐标信息。\n     */\n    get mouseY(): number {\n        return this.getMousePoint().y;\n    }\n\n    /**z排序，更改此值，则会按照值的大小对同一容器的所有对象重新排序。值越大，越靠上。默认为0，则根据添加顺序排序。*/\n    get zOrder(): number {\n        return this._zOrder;\n    }\n\n    set zOrder(value: number) {\n        if (this._zOrder != value) {\n            this._zOrder = value;\n            if (this._parent) {\n                value && this._parent._setBit(NodeFlags.HAS_ZORDER, true);\n                ILaya.systemTimer.callLater(this._parent, this.updateZOrder);\n            }\n        }\n    }\n\n    /**\n     * 设置一个Texture实例，并显示此图片（如果之前有其他绘制，则会被清除掉）。\n     * 等同于graphics.clear();graphics.drawImage()，但性能更高\n     * 还可以赋值一个图片地址，则会自动加载图片，然后显示\n     */\n    get texture(): Texture {\n        return this._texture;\n    }\n\n    /**@internal */\n    _setTexture(value: Texture | string): void {\n\n    }\n\n    set texture(value: Texture) {\n        if (typeof (value) == 'string') {\n            this.loadImage((<string>((<any>value))));\n        } else if (this._texture != value) {\n            this._texture && this._texture._removeReference();\n            this._texture = value;\n            value && value._addReference();\n            this._setTexture(value);\n            this._setWidth(this.width);\n            this._setHeight(this.height);\n            if (value) this._renderType |= SpriteConst.TEXTURE;\n            else this._renderType &= ~SpriteConst.TEXTURE;\n            this.repaint();\n        }\n    }\n\n\n    /**\n     * <p>视口大小，视口外的子对象，将不被渲染(如果想实现裁剪效果，请使用srollRect)，合理使用能提高渲染性能。比如由一个个小图片拼成的地图块，viewport外面的小图片将不渲染</p>\n     * <p>srollRect和viewport的区别：<br/>\n     * 1. srollRect自带裁剪效果，viewport只影响子对象渲染是否渲染，不具有裁剪效果（性能更高）。<br/>\n     * 2. 设置rect的x,y属性均能实现区域滚动效果，但scrollRect会保持0,0点位置不变。</p>\n     * @default null\n     */\n    get viewport(): Rectangle {\n        return this._style.viewport;\n    }\n\n    set viewport(value: Rectangle) {\n        if (typeof (value) == 'string') {\n            let recArr = (<any>value).split(\",\");\n            if (recArr.length > 3) {\n                value = new Rectangle(parseFloat(recArr[0]), parseFloat(recArr[1]), parseFloat(recArr[2]), parseFloat(recArr[3]));\n            }\n        }\n        this.getStyle().viewport = value;\n    }\n\n    /**@internal */\n    _setTranformChange(): void {\n        this._tfChanged = true;\n        this._renderType |= SpriteConst.TRANSFORM;\n        this.parentRepaint(SpriteConst.REPAINT_CACHE);\n    }\n\n    set drawCallOptimize(value: boolean) {\n        this._setBit(NodeFlags.DRAWCALL_OPTIMIZE, value);\n    }\n\n    get drawCallOptimize(): boolean {\n        return this._getBit(NodeFlags.DRAWCALL_OPTIMIZE);\n    }\n\n    onAfterDeserialize() {\n        super.onAfterDeserialize();\n\n        if (LayaEnv.isPlaying) {\n            if ((<any>this)._gcmds) {\n                this.graphics.cmds = (<any>this)._gcmds;\n                delete (<any>this)._gcmds;\n            }\n\n            if ((<any>this)._filters) {\n                this.filters = (<any>this)._filters;\n                delete (<any>this)._filters;\n            }\n        }\n    }\n\n\n    //miner 为了不破坏之前的local性能架构，采用标致开启的方式来增加GlobalMode的更新系统，优化需要高频调用Global数据的\n    //因为此块功能比较集中，顾单独写在下方\n    /**@internal */\n    static Sprite_GlobalDeltaFlage_Position_X: number = 0x01;\n    /**@internal */\n    static Sprite_GlobalDeltaFlage_Position_Y: number = 0x02;\n    /**@internal */\n    static Sprite_GlobalDeltaFlage_Rotation: number = 0x04;\n    /**@internal */\n    static Sprite_GlobalDeltaFlage_Scale_X: number = 0x08;\n    /**@internal */\n    static Sprite_GlobalDeltaFlage_Scale_Y: number = 0x10;\n    /**@internal */\n    static Sprite_GlobalDeltaFlage_Matrix: number = 0x20;\n    /**@internal */\n    private _globalDeltaFlages: number = 0;\n    /**@internal */\n    private _cacheGlobal: boolean = false;\n    /**@internal */\n    private _globalPosx: number = 0.0;\n    /**@internal */\n    private _globalPosy: number = 0.0;\n    /**@internal */\n    private _globalRotate: number = 0.0;\n    /**@internal */\n    private _globalScalex: number = 1.0;\n    /**@internal */\n    private _globalScaley: number = 1.0;\n    /**@internal */\n    private _globalMatrix: Matrix;\n\n    get cacheGlobal(): boolean {\n        return this._cacheGlobal;\n    }\n\n    /**\n     * @internal\n     * 设置cacheGlobal模式\n     * 此模式会获得更高的getGlobal属性性能\n     * 如果此节点为cacheGlobaltrue，那所有父节点直到根节点都会强制改为true\n     * 如果此节点改为false，将强制所有子节点的cacheGlobal改为false\n     */\n    set cacheGlobal(value: boolean) {\n        if (this._cacheGlobal == value)\n            return;\n        this._cacheGlobal = value;\n        if (value) {\n            //缓存全局变量\n            this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Position_X, true);\n            this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Position_Y, true);\n            this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Scale_X, true);\n            this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Scale_Y, true);\n            this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Rotation, true);\n            this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Matrix, true);\n            //更新父节点\n            if (this._parent == ILaya.stage || !this._parent) {\n                return;\n            } else {\n                (this._parent as Sprite).cacheGlobal = value;\n            }\n        } else {\n            //更新子节点\n            this._children.forEach(element => {\n                (element as Sprite).cacheGlobal = value;\n            });\n        }\n    }\n\n    /**\n       * @internal\n       */\n    getGlobalMatrix() {\n        if (this._globalMatrix == null) this._globalMatrix = Matrix.create()\n        if (this._getGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Matrix)) {\n            this._globalMatrix.identity();\n            this._globalMatrix.rotate(Utils.toRadian(this.globalRotation));\n            this._globalMatrix.scale(this.globalScaleX, this.globalScaleY);\n            this._globalMatrix.translate(this.globalPosX, this.globalPosY);\n            this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Matrix, false);\n        }\n        return this._globalMatrix;\n    }\n\n    CustomMaterial() {\n\n    }\n\n    /**\n     * @internal\n     */\n    set globalPosX(value: number) {\n        this.setGlobalPos(value, this._globalPosy);\n    }\n\n    /**\n     * @internal\n     */\n    set globalPosY(value: number) {\n        this.setGlobalPos(this._globalPosx, value);\n    }\n\n    /**\n     * 设置图元锚点世界位置\n     * @internal\n     */\n    setGlobalPos(globalx: number, globaly: number) {\n        if (!this._getGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Matrix) && globalx == this.globalPosX && globaly == this.globalPosY) {\n            return;\n        }\n        if (!this._cacheGlobal) {\n            Point.TEMP.setTo(globalx, globaly);\n            let point = this.globalToLocal(Point.TEMP, false, null);\n            point = this.toParentPoint(point);\n            this.x = point.x;\n            this.y = point.y;\n        } else {\n            let mat = (<Sprite>this.parent).getGlobalMatrix();\n            let point = mat.invertTransformPoint(Point.TEMP.setTo(globalx, globaly));\n            this._setX(point.x);\n            this._setY(point.y);\n            this._globalPosx = globalx;\n            this._globalPosy = globaly;\n            let flag = Sprite.Sprite_GlobalDeltaFlage_Position_X | Sprite.Sprite_GlobalDeltaFlage_Position_Y;\n            this._setGlobalCacheFlag(flag, false);\n            this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Matrix, true);\n            this._syncGlobalFlag(flag | Sprite.Sprite_GlobalDeltaFlage_Matrix, true);\n        }\n\n    }\n\n    /**\n     * 获得图元锚点世界位置\n     * @internal\n     */\n    get globalPosX(): number {\n        if (!this._cacheGlobal) {\n            let point = this.localToGlobal(Point.TEMP.setTo(0, 0), false, null);\n            return point.x;\n        } else {\n            if (this._getGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Matrix | Sprite.Sprite_GlobalDeltaFlage_Position_X)) {\n                this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Position_X, false);\n                let mat = (<Sprite>this.parent).getGlobalMatrix();\n                let point = this.toParentPoint(Point.TEMP.setTo(0, 0));\n                point = mat.transformPoint(point);\n                this._globalPosx = point.x;\n                this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Matrix, true);\n                this._syncGlobalFlag(Sprite.Sprite_GlobalDeltaFlage_Matrix, true);\n            }\n            return this._globalPosx;\n        }\n\n    }\n\n    /**\n     * 获得图元锚点世界位置\n     * @internal\n     */\n    get globalPosY(): number {\n        if (!this._cacheGlobal) {\n            let point = this.localToGlobal(Point.TEMP.setTo(0, 0), false, null);\n            return point.y;\n        } else {\n            if (this._getGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Matrix | Sprite.Sprite_GlobalDeltaFlage_Position_Y)) {\n                this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Position_Y, false);\n                let mat = (<Sprite>this.parent).getGlobalMatrix();\n                let point = this.toParentPoint(Point.TEMP.setTo(0, 0));\n                point = mat.transformPoint(point);\n                this._globalPosy = point.y;\n                this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Matrix, true);\n                this._syncGlobalFlag(Sprite.Sprite_GlobalDeltaFlage_Matrix, true);\n            }\n            return this._globalPosy;\n        }\n    }\n\n    /**\n     * @internal\n     * 获得相对于stage的全局旋转值（会叠加父亲节点的旋转值）。\n     */\n    get globalRotation(): number {\n        if (!this._cacheGlobal) {\n            //循环算法\n            var angle: number = 0;\n            var ele: Sprite = this;\n            while (ele) {\n                if (ele === ILaya.stage) break;\n                angle += ele.rotation;\n                ele = (<Sprite>ele.parent);\n            }\n            return angle;\n        } else {\n            if (this._getGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Rotation)) {\n                this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Rotation, false);\n                if (this._parent == ILaya.stage || !this._parent)\n                    this._globalRotate = this.rotation;\n                else {\n                    this._globalRotate = this.rotation + (this.parent as Sprite).globalRotation;\n                }\n            }\n            return this._globalRotate;\n        }\n    }\n\n    /**@internal */\n    set globalRotation(value: number) {\n        if (!this._getGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Matrix) && value == this.globalRotation) {\n            return;\n        }\n        //set local\n        if (this._parent == ILaya.stage || !this._parent) {\n            this._setRotation(value);\n            this._setTranformChange();\n        } else {\n            this._setRotation(value - (this.parent as Sprite).globalRotation);\n            this._setTranformChange();\n        }\n        if (this._cacheGlobal) {\n            this._globalRotate = value;\n            this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Rotation, false);\n            this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Matrix, true);\n            this._syncGlobalFlag(Sprite.Sprite_GlobalDeltaFlage_Matrix, true);\n        }\n    }\n\n    /**\n     * 获得相对于stage的全局X轴缩放值（会叠加父亲节点的缩放值）。\n     */\n    get globalScaleX(): number {\n        if (!this._cacheGlobal) {\n            var scale: number = 1;\n            var ele: Sprite = this;\n            while (ele) {\n                if (ele === ILaya.stage) break;\n                scale *= ele.scaleX;\n                ele = (<Sprite>ele.parent);\n            }\n            return scale;\n        } else {\n            if (this._getGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Scale_X)) {\n                this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Scale_X, false);\n                this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Matrix, true);\n                if (this._parent == ILaya.stage || !this._parent)\n                    this._globalScalex = this.scaleX;\n                else {\n                    this._globalScalex = this.scaleX * (this.parent as Sprite).globalScaleX;\n                }\n                this._syncGlobalFlag(Sprite.Sprite_GlobalDeltaFlage_Matrix, true);\n            }\n            return this._globalScalex;\n        }\n    }\n\n    /**\n     * 获得相对于stage的全局Y轴缩放值（会叠加父亲节点的缩放值）。\n     */\n    get globalScaleY(): number {\n        if (!this._cacheGlobal) {\n            var scale: number = 1;\n            var ele: Sprite = this;\n            while (ele) {\n                if (ele === ILaya.stage) break;\n                scale *= ele.scaleY;\n                ele = (<Sprite>ele.parent);\n            }\n            return scale;\n        } else {\n            if (this._getGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Scale_Y)) {\n                this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Scale_Y, false);\n                this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Matrix, true);\n                if (this._parent == ILaya.stage || !this._parent)\n                    this._globalScaley = this.scaleY;\n                else {\n                    this._globalScaley = this.scaleY * (this.parent as Sprite).globalScaleY;\n                }\n                this._syncGlobalFlag(Sprite.Sprite_GlobalDeltaFlage_Matrix, true);\n            }\n            return this._globalScaley;\n        }\n    }\n\n    /**\n     * @internal\n     */\n    _getGlobalCacheFlag(type: number): boolean {\n        return (this._globalDeltaFlages & type) != 0;\n    }\n\n    /**\n     * @internal \n     */\n    private _setGlobalCacheFlag(type: number, value: boolean): void {\n        if (value)\n            this._globalDeltaFlages |= type;\n        else\n            this._globalDeltaFlages &= ~type;\n        if (value) {\n            this.event(\"GlobaChange\", type)\n        }\n    }\n\n    /**\n    * @internal \n    */\n    get globalDeltaFlages(): number {\n        return this._globalDeltaFlages;\n    }\n\n    /**\n     * @internal\n     * @param flag \n     * @param value \n     */\n    _syncGlobalFlag(flag: number, value: boolean) {\n        if (this.cacheGlobal) {\n            this._children.forEach(element => {\n                (element as Sprite)._setGlobalCacheFlag(flag, value);\n                (element as Sprite)._syncGlobalFlag(flag, value);\n            });\n        }\n    }\n}","import { Sprite } from \"./Sprite\";\nimport { Config } from \"./../../Config\";\nimport { NodeFlags } from \"../Const\"\nimport { Event } from \"../events/Event\"\n\n/**\n * 动画播放完毕后调度。\n * @eventType Event.COMPLETE\n */\n/*[Event(name = \"complete\", type = \"laya.events.Event\")]*/\n\n/**\n * 播放到某标签后调度。\n * @eventType Event.LABEL\n */\n/*[Event(name = \"label\", type = \"laya.events.Event\")]*/\n\n/**\n * <p>动画基类，提供了基础的动画播放控制方法和帧标签事件相关功能。</p>\n * <p>可以继承此类，但不要直接实例化此类，因为有些方法需要由子类实现。</p>\n */\nexport class AnimationBase extends Sprite {\n    /**动画播放顺序类型：正序播放。 */\n    static WRAP_POSITIVE: number = 0;\n    /**动画播放顺序类型：逆序播放。 */\n    static WRAP_REVERSE: number = 1;\n    /**动画播放顺序类型：pingpong播放(当按指定顺序播放完结尾后，如果继续播放，则会改变播放顺序)。 */\n    static WRAP_PINGPONG: number = 2;\n\n    /**是否循环播放，调用play(...)方法时，会将此值设置为指定的参数值。*/\n    loop: boolean;\n    /**播放顺序类型：AnimationBase.WRAP_POSITIVE为正序播放(默认值)，AnimationBase.WRAP_REVERSE为倒序播放，AnimationBase.WRAP_PINGPONG为pingpong播放(当按指定顺序播放完结尾后，如果继续播发，则会改变播放顺序)。*/\n    wrapMode: number = 0;\n    /**@private 播放间隔(单位：毫秒)。*/\n    protected _interval: number = Config.animationInterval;\n    /**@private */\n    protected _index: number;\n    /**@private */\n    protected _count: number;\n    /**@private */\n    protected _isPlaying: boolean;\n    /**@private */\n    protected _labels: any;\n    /**是否是逆序播放*/\n    protected _isReverse: boolean = false;\n    /**@private */\n    protected _frameRateChanged: boolean = false;\n    /**@private */\n    protected _actionName: string;\n    /**@private */\n    private _controlNode: Sprite;\n\n    /**\n     * 可以继承此类，但不要直接实例化此类，因为有些方法需要由子类实现。\n     */\n    constructor() {\n        super();\n        this._setBitUp(NodeFlags.DISPLAY);\n    }\n\n    /**\n     * <p>开始播放动画。play(...)方法被设计为在创建实例后的任何时候都可以被调用，当相应的资源加载完毕、调用动画帧填充方法(set frames)或者将实例显示在舞台上时，会判断是否正在播放中，如果是，则进行播放。</p>\n     * <p>配合wrapMode属性，可设置动画播放顺序类型。</p>\n     * @param\tstart\t（可选）指定动画播放开始的索引(int)或帧标签(String)。帧标签可以通过addLabel(...)和removeLabel(...)进行添加和删除。\n     * @param\tloop\t（可选）是否循环播放。\n     * @param\tname\t（可选）动画名称。\n     */\n    play(start: any = 0, loop: boolean = true, name: string = \"\"): void {\n        this._isPlaying = true;\n        this._actionName = name;\n        this.index = (typeof (start) == 'string') ? this._getFrameByLabel(<string>start) : start;\n        this.loop = loop;\n        this._isReverse = this.wrapMode === AnimationBase.WRAP_REVERSE;\n        if (this.index == 0 && this._isReverse) {\n            this.index = this.count - 1;\n        }\n        if (this.interval > 0) this.timerLoop(this.interval, this, this._frameLoop, null, true, true);\n    }\n\n    /**\n     * <p>动画播放的帧间隔时间(单位：毫秒)。默认值依赖于Config.animationInterval=50，通过Config.animationInterval可以修改默认帧间隔时间。</p>\n     * <p>要想为某动画设置独立的帧间隔时间，可以使用set interval，注意：如果动画正在播放，设置后会重置帧循环定时器的起始时间为当前时间，也就是说，如果频繁设置interval，会导致动画帧更新的时间间隔会比预想的要慢，甚至不更新。</p>\n     */\n    get interval(): number {\n        return this._interval;\n    }\n\n    set interval(value: number) {\n        if (this._interval != value) {\n            this._frameRateChanged = true;\n            this._interval = value;\n            if (this._isPlaying && value > 0) {\n                this.timerLoop(value, this, this._frameLoop, null, true, true);\n            }\n        }\n    }\n\n    /**@private */\n    protected _getFrameByLabel(label: string): number {\n        for (var i: number = 0; i < this._count; i++) {\n            var item: any = this._labels[i];\n            if (item && ((<any[]>item)).indexOf(label) > -1) return i;\n        }\n        return 0;\n    }\n\n    /**@private */\n    protected _frameLoop(): void {\n        if (!this._controlNode || this._controlNode._destroyed) {\n            this.clearTimer(this, this._frameLoop);\n            return;\n        }\n        if (this._isReverse) {\n            this._index--;\n            if (this._index < 0) {\n                if (this.loop) {\n                    if (this.wrapMode == AnimationBase.WRAP_PINGPONG) {\n                        this._index = this._count > 0 ? 1 : 0;\n                        this._isReverse = false;\n                    } else {\n                        this._index = this._count - 1;\n                    }\n                    this.event(Event.COMPLETE);\n                } else {\n                    this._index = 0;\n                    this.stop();\n                    this.event(Event.COMPLETE);\n                    return;\n                }\n            }\n        } else {\n            this._index++;\n            if (this._index >= this._count) {\n                if (this.loop) {\n                    if (this.wrapMode == AnimationBase.WRAP_PINGPONG) {\n                        this._index = this._count - 2 >= 0 ? this._count - 2 : 0;\n                        this._isReverse = true;\n                    } else {\n                        this._index = 0;\n                    }\n                    this.event(Event.COMPLETE);\n                } else {\n                    this._index--;\n                    this.stop();\n                    this.event(Event.COMPLETE);\n                    return;\n                }\n            }\n        }\n        this.index = this._index;\n    }\n\n    /**@internal */\n    _setControlNode(node: Sprite): void {\n        if (this._controlNode) {\n            this._controlNode.off(Event.DISPLAY, this, this._resumePlay);\n            this._controlNode.off(Event.UNDISPLAY, this, this._resumePlay);\n        }\n        this._controlNode = node;\n        if (node && node != this) {\n            node.on(Event.DISPLAY, this, this._resumePlay);\n            node.on(Event.UNDISPLAY, this, this._resumePlay);\n        }\n    }\n\n    /**@internal \n     * @override\n    */\n    _setDisplay(value: boolean): void {\n        super._setDisplay(value);\n        this._resumePlay();\n    }\n\n    /**@private */\n    protected _resumePlay(): void {\n        if (this._isPlaying) {\n            if (this._controlNode.displayedInStage) this.play(this._index, this.loop, this._actionName);\n            else this.clearTimer(this, this._frameLoop);\n        }\n    }\n\n    /**\n     * 停止动画播放。\n     */\n    stop(): void {\n        this._isPlaying = false;\n        this.clearTimer(this, this._frameLoop);\n    }\n\n    /**\n     * 是否正在播放中。\n     */\n    get isPlaying(): boolean {\n        return this._isPlaying;\n    }\n\n    /**\n     * 增加一个帧标签到指定索引的帧上。当动画播放到此索引的帧时会派发Event.LABEL事件，派发事件是在完成当前帧画面更新之后。\n     * @param\tlabel\t帧标签名称\n     * @param\tindex\t帧索引\n     */\n    addLabel(label: string, index: number): void {\n        if (!this._labels) this._labels = {};\n        if (!this._labels[index]) this._labels[index] = [];\n        this._labels[index].push(label);\n    }\n\n    /**\n     * 删除指定的帧标签。\n     * @param\tlabel 帧标签名称。注意：如果为空，则删除所有帧标签！\n     */\n    removeLabel(label: string): void {\n        if (!label) this._labels = null;\n        else if (this._labels) {\n            for (var name in this._labels) {\n                this._removeLabelFromList(this._labels[name], label);\n            }\n        }\n    }\n\n    /**@private */\n    private _removeLabelFromList(list: any[], label: string): void {\n        if (!list) return;\n        for (var i: number = list.length - 1; i >= 0; i--) {\n            if (list[i] == label) {\n                list.splice(i, 1);\n            }\n        }\n    }\n\n    /**\n     * 将动画切换到指定帧并停在那里。\n     * @param\tposition 帧索引或帧标签\n     */\n    gotoAndStop(position: any): void {\n        this.index = (typeof (position) == 'string') ? this._getFrameByLabel(<string>position) : position;\n        this.stop();\n    }\n\n    /**\n     * 动画当前帧的索引。\n     */\n    get index(): number {\n        return this._index;\n    }\n\n    set index(value: number) {\n        this._index = value;\n        this._displayToIndex(value);\n        if (this._labels && this._labels[value]) {\n            var tArr: any[] = this._labels[value];\n            for (var i: number = 0, len: number = tArr.length; i < len; i++) {\n                this.event(Event.LABEL, tArr[i]);\n            }\n        }\n    }\n\n    /**\n     * @private\n     * 显示到某帧\n     * @param value 帧索引\n     */\n    protected _displayToIndex(value: number): void {\n    }\n\n    /**\n     * 当前动画中帧的总数。\n     */\n    get count(): number {\n        return this._count;\n    }\n\n    /**\n     * 停止动画播放，并清理对象属性。之后可存入对象池，方便对象复用。\n     * @return 返回对象本身\n     */\n    clear(): AnimationBase {\n        this.stop();\n        this._labels = null;\n        return this;\n    }\n}","import { Handler } from \"../utils/Handler\";\nimport { ILaya } from \"./../../ILaya\";\nimport { URL } from \"./URL\";\n\n/**\n * 自动图集管理类\n * @private\n */\nexport class AtlasInfoManager {\n\n    static _fileLoadDic: Record<string, { url: string, baseUrl?: string }> = {};\n\n    static enable(infoFile: string, callback: Handler | null = null): void {\n        ILaya.loader.fetch(infoFile, \"json\").then(data => {\n            if (!data)\n                return;\n\n            AtlasInfoManager.addAtlases(data);\n            callback && callback.run();\n        });\n    }\n\n    static addAtlases(data: Record<string, [string, string[]]>) {\n        let dic = AtlasInfoManager._fileLoadDic;\n        for (let key in data) {\n            let arr = data[key];\n            let prefix = URL.formatURL(arr[0]);\n            let frames = arr[1];\n            let len = frames.length;\n            let entry = { url: key };\n            for (let i = 0; i < len; i++) {\n                dic[prefix + frames[i]] = entry;\n            }\n        }\n    }\n\n    static addAtlas(atlasUrl: string, prefix: string, frames: Array<string>) {\n        prefix = URL.formatURL(prefix);\n        let dic = AtlasInfoManager._fileLoadDic;\n        let entry = { url: atlasUrl };\n        for (let i of frames) {\n            dic[prefix + i] = entry;\n        }\n    }\n\n    static getFileLoadPath(file: string): { url: string, baseUrl?: string } {\n        return AtlasInfoManager._fileLoadDic[file];\n    }\n}\n\n\n","import { EventDispatcher } from \"../events/EventDispatcher\"\n\n/**\n * Worker Image加载器\n */\nexport class WorkerLoader {\n\n    /**worker.js的路径 */\n    static workerPath: string = \"libs/laya.workerloader.js\";\n\n    private static _worker: Worker;\n    private static _dispatcher: EventDispatcher;\n    private static _enable: boolean = false;\n\n    /**\n     * 是否支持worker\n     * @return 是否支持worker\n     */\n    static workerSupported(): boolean {\n        return Worker ? true : false;\n    }\n\n    /**\n     * 是否启用。\n     */\n    static set enable(value: boolean) {\n        if (WorkerLoader._enable != value) {\n            if (value) {\n                if (!Worker)\n                    return;\n\n                if (!WorkerLoader._worker) {\n                    WorkerLoader._worker = new Worker(WorkerLoader.workerPath);\n                    WorkerLoader._worker.onmessage = WorkerLoader.workerMessage;\n                    WorkerLoader._dispatcher = new EventDispatcher();\n                }\n            }\n            WorkerLoader._enable = value;\n        }\n    }\n\n    static get enable(): boolean {\n        return WorkerLoader._enable;\n    }\n\n    static load(url: string, options: any): Promise<any> {\n        return new Promise(resolve => {\n            WorkerLoader._worker.postMessage({ url, options });\n            WorkerLoader._dispatcher.once(url, resolve);\n        });\n    }\n\n    private static workerMessage(evt: any): void {\n        let data = evt.data;\n        if (data) {\n            switch (data.type) {\n                case \"Image\":\n                    WorkerLoader._dispatcher.event(data.url, data.imageBitmap);\n                    break;\n                case \"Disable\":\n                    WorkerLoader.enable = false;\n                    break;\n            }\n        }\n    }\n}\n\n","import { Resource } from \"./Resource\";\nimport { Texture } from \"./Texture\";\n/**\n * 大图合集资源\n */\nexport class AtlasResource extends Resource {\n    readonly dir: string;\n    readonly textures: Array<Texture>;\n    readonly frames: Array<Texture>;\n\n    /**\n     * 实例化体格大图合集资源\n     * @param dir \n     * @param textures \n     * @param frames \n     */\n    constructor(dir: string, textures: Array<Texture>, frames: Array<Texture>) {\n        super();\n\n        this.dir = dir;\n        this.textures = textures;\n        this.frames = frames;\n        this.lock = true;\n    }\n\n    /**\n     * @internal\n     */\n    protected _disposeResource(): void {\n        for (let tex of this.textures) {\n            if (tex)\n                tex.destroy();\n        }\n\n        for (let tex of this.frames)\n            tex.destroy();\n\n        this.frames.length = 0;\n        this.textures.length = 0;\n    }\n}","export type ProgressCallback = (progress: number) => void;\n\nexport interface IBatchProgress {\n    readonly itemCount: number;\n    createCallback(weight?: number): ProgressCallback;\n    update(index: number, progress: number): void;\n}\n\nexport class BatchProgress implements IBatchProgress {\n    private _callback: ProgressCallback;\n    private _items: Array<number>;\n    private _weights: Array<number>;\n    private _progress: number;\n\n    constructor(callback: ProgressCallback) {\n        this._callback = callback;\n        this._items = [];\n        this._weights = [];\n        this._progress = 0;\n    }\n\n    get itemCount() {\n        return this._items.length;\n    }\n\n    reset() {\n        this._items.length = 0;\n        this._weights.length = 0;\n        this._progress = 0;\n    }\n\n    createCallback(weight?: number): ProgressCallback {\n        let index = this._items.length;\n        this._items.push(0);\n        if (weight == null)\n            this._weights.push(null);\n        else\n            this._weights.push(Math.max(0, Math.min(weight, 1)));\n\n        return (progress: number) => this.update(index, progress);\n    }\n\n    update(index: number, value: number) {\n        if (index != -1) {\n            this._items[index] = Math.max(0, Math.min(value, 1));\n\n            let np = 0;\n            let col = this._items;\n            let ws = this._weights;\n            let perc = 1 / col.length;\n            for (let i = 0; i < col.length; i++) {\n                let p = col[i];\n                let w = ws[i];\n                if (p != null)\n                    np += p * (w != null ? w : perc);\n            }\n            value = np;\n            if (value > 1) value = 1;\n        }\n\n        if (value > this._progress) {\n            this._progress = value;\n            this._callback(value);\n        }\n    }\n}","import { Browser } from \"./Browser\";\r\n\r\n/**\r\n* 图片二进制处理类\r\n* @ author:xs\r\n* @ data: 2021-11-03 10:54\r\n*/\r\nexport class ImgUtils {\r\n\r\n    /**存储数据池*/\r\n    static data: any = {};\r\n    /**是否保存使用的数据*/\r\n    static isSavaData: boolean = false;\r\n\r\n    /**\r\n     * 比较版本内容\r\n     * @param curVersion 当前版本\r\n     * @param needVersion 要求的版本\r\n     * @returns \r\n     */\r\n    private static compareVersion(curVersion: string, needVersion: string) {\r\n        let curVersionArr = curVersion.split('.');\r\n        let needVersionArr = needVersion.split('.');\r\n        const len = Math.max(curVersionArr.length, needVersionArr.length);\r\n        while (curVersionArr.length < len) {\r\n            curVersionArr.push('0');\r\n        }\r\n        while (needVersionArr.length < len) {\r\n            needVersionArr.push('0');\r\n        }\r\n        for (let i = 0; i < len; i++) {\r\n            const num1 = parseInt(curVersionArr[i]);\r\n            const num2 = parseInt(needVersionArr[i]);\r\n            if (num1 > num2) {\r\n                return true;\r\n            } else if (num1 < num2) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 是否支持数据预处理\r\n     */\r\n    static get isSupport(): boolean {\r\n        if (Browser._isMiniGame) {\r\n            var version: string = Browser.window.wx.getSystemInfoSync().SDKVersion;\r\n            return ImgUtils.compareVersion(version, '2.14.0');\r\n        }\r\n        else if (Browser.onLayaRuntime) {\r\n            return true;\r\n        } else if (Browser.window.Blob)\r\n            return Browser.window.Blob ? true : false;\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * 通过二进制获取URL对象\r\n     * @param url \r\n     * @param arrayBuffer \r\n     * @returns \r\n     */\r\n    static arrayBufferToURL(url: string, arrayBuffer: ArrayBuffer) {\r\n        if (!ImgUtils.isSupport) return url;\r\n        if (ImgUtils.data[url])\r\n            return ImgUtils.data[url];\r\n        var newurl: string = \"\";\r\n        if (Browser._isMiniGame || Browser.onLayaRuntime) {\r\n            newurl = Browser.window.wx.createBufferURL(arrayBuffer);//是一个字符串内存地址\r\n        } else if (Browser.window.Blob) {\r\n            let blob = new Blob([arrayBuffer], { type: 'application/octet-binary' });\r\n            newurl = Browser.window.URL.createObjectURL(blob);\r\n        }\r\n        if (ImgUtils.isSavaData)\r\n            ImgUtils.data[url] = newurl;\r\n        return newurl;\r\n    }\r\n\r\n    static _arrayBufferToURL(arrayBuffer: ArrayBuffer) {\r\n        if (!ImgUtils.isSupport) return null;\r\n        var newurl: string = \"\";\r\n        if (Browser._isMiniGame || Browser.onLayaRuntime) {\r\n            newurl = Browser.window.wx.createBufferURL(arrayBuffer);//是一个字符串内存地址\r\n        } else if (Browser.window.Blob) {\r\n            let blob = new Blob([arrayBuffer], { type: 'application/octet-binary' });\r\n            newurl = Browser.window.URL.createObjectURL(blob);\r\n        }\r\n        return newurl;\r\n    }\r\n\r\n    /**\r\n     * 销毁指定URL的二进制内存数据\r\n     * @param url \r\n     */\r\n    static destroy(url: string) {\r\n        if (!ImgUtils.isSupport) return;\r\n        var newurl: string = ImgUtils.data[url];\r\n        if (newurl) {\r\n            if (Browser._isMiniGame || Browser.onLayaRuntime)\r\n                Browser.window.wx.revokeBufferURL(newurl);\r\n            else if (Browser.window.Blob)\r\n                Browser.window.URL.revokeObjectURL(newurl);\r\n            delete ImgUtils.data[url];\r\n        }\r\n    }\r\n}","export class XMLUtils {\n    public static decodeString(aSource: string): string {\n        let len = aSource.length;\n        let sb: string = \"\";\n        let pos1 = 0, pos2 = 0;\n\n        while (true) {\n            pos2 = aSource.indexOf('&', pos1);\n            if (pos2 == -1) {\n                sb += aSource.substring(pos1);\n                break;\n            }\n            sb += aSource.substring(pos1, pos2);\n\n            pos1 = pos2 + 1;\n            pos2 = pos1;\n            let end = Math.min(len, pos2 + 10);\n            for (; pos2 < end; pos2++) {\n                if (aSource[pos2] == ';')\n                    break;\n            }\n            if (pos2 < end && pos2 > pos1) {\n                let entity: string = aSource.substring(pos1, pos2);\n                let u = 0;\n                if (entity[0] == '#') {\n                    if (entity.length > 1) {\n                        if (entity[1] == 'x')\n                            u = parseInt(entity.substring(2), 16);\n                        else\n                            u = parseInt(entity.substring(1));\n                        sb += String.fromCharCode(u);\n                        pos1 = pos2 + 1;\n                    }\n                    else\n                        sb += '&';\n                }\n                else {\n                    switch (entity) {\n                        case \"amp\":\n                            u = 38;\n                            break;\n\n                        case \"apos\":\n                            u = 39;\n                            break;\n\n                        case \"gt\":\n                            u = 62;\n                            break;\n\n                        case \"lt\":\n                            u = 60;\n                            break;\n\n                        case \"nbsp\":\n                            u = 32;\n                            break;\n\n                        case \"quot\":\n                            u = 34;\n                            break;\n                    }\n                    if (u > 0) {\n                        sb += String.fromCharCode(u);\n                        pos1 = pos2 + 1;\n                    }\n                    else\n                        sb += '&';\n                }\n            }\n            else {\n                sb += '&';\n            }\n        }\n\n        return sb;\n    }\n\n    public static encodeString(str: string): string {\n        return str.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\")\n            .replace(/>/g, \"&gt;\").replace(/'/g, \"&apos;\").replace(/\"/g, \"&quot;\");\n    }\n\n    public static getString(attrs: any, attrName: string, defValue?: string): string {\n        if (attrs == null)\n            return defValue == null ? null : defValue;\n\n        let ret = attrs[attrName];\n        if (ret != null)\n            return \"\" + ret;\n        else\n            return defValue == null ? null : defValue;\n    }\n\n    public static getInt(attrs: any, attrName: string, defValue?: number): number {\n        let value: string = this.getString(attrs, attrName);\n        if (value != null && value.length > 0) {\n            if (value[value.length - 1] == '%') {\n                let ret = parseInt(value.substring(0, value.length - 1));\n                if (!isNaN(ret))\n                    return Math.ceil(ret / 100.0 * defValue);\n            }\n            else {\n                let ret = parseInt(value);\n                if (!isNaN(ret))\n                    return ret;\n            }\n        }\n\n        return defValue == null ? 0 : defValue;\n    }\n\n    public static getFloat(attrs: any, attrName: string, defValue?: number): number {\n        let value: string = this.getString(attrs, attrName);\n        if (value == null || value.length == 0)\n            return defValue == null ? 0 : defValue;\n\n        let ret = parseFloat(value);\n        if (isNaN(ret))\n            return defValue == null ? 0 : defValue;\n        else\n            return ret;\n    }\n\n    public static getBool(attrs: any, attrName: string, defValue?: boolean): boolean {\n        let value: string = this.getString(attrs, attrName);\n        if (value == null || value.length == 0)\n            return defValue == null ? false : defValue;\n\n        if (value == \"true\" || value == \"1\")\n            return true;\n        else if (value == \"false\" || value == \"0\")\n            return false;\n        else\n            return defValue == null ? false : defValue;\n    }\n}","import { XMLUtils } from \"./XMLUtils\";\n\nexport enum XMLTagType {\n    Start,\n    End,\n    Void,\n    CDATA,\n    Comment,\n    Instruction\n};\n\nconst CDATA_START = \"<![CDATA[\";\nconst CDATA_END = \"]]>\";\nconst COMMENT_START = \"<!--\";\nconst COMMENT_END = \"-->\";\n\nexport class XMLIterator {\n    public static tagName: string;\n    public static tagType: XMLTagType;\n    public static lastTagName: string;\n\n    static source: string;\n    static sourceLen: number;\n    static parsePos: number;\n    static tagPos: number;\n    static tagLength: number;\n    static lastTagEnd: number;\n    static attrParsed: boolean;\n    static lowerCaseName: boolean;\n\n    private static _attrs: any = {};\n\n    public static begin(source: string, lowerCaseName?: boolean) {\n        XMLIterator.source = source;\n        XMLIterator.lowerCaseName = lowerCaseName;\n        this.sourceLen = source.length;\n        this.parsePos = 0;\n        this.lastTagEnd = 0;\n        this.tagPos = 0;\n        this.tagLength = 0;\n        this.tagName = null;\n    }\n\n    public static nextTag(): boolean {\n        let pos: number;\n        let c: string;\n        let buffer = \"\";\n\n        this.tagType = XMLTagType.Start;\n        this.lastTagEnd = this.parsePos;\n        this.attrParsed = false;\n        this.lastTagName = this.tagName;\n\n        while ((pos = this.source.indexOf('<', this.parsePos)) != -1) {\n            this.parsePos = pos;\n            pos++;\n\n            if (pos == this.sourceLen)\n                break;\n\n            c = this.source[pos];\n            if (c == '!') {\n                if (this.sourceLen > pos + 7 && this.source.substring(pos - 1, pos + 8) == CDATA_START) {\n                    pos = this.source.indexOf(CDATA_END, pos);\n                    this.tagType = XMLTagType.CDATA;\n                    this.tagName = \"\";\n                    this.tagPos = this.parsePos;\n                    if (pos == -1)\n                        this.tagLength = this.sourceLen - this.parsePos;\n                    else\n                        this.tagLength = pos + 3 - this.parsePos;\n                    this.parsePos += this.tagLength;\n                    return true;\n                }\n                else if (this.sourceLen > pos + 2 && this.source.substring(pos - 1, pos + 3) == COMMENT_START) {\n                    pos = this.source.indexOf(COMMENT_END, pos);\n                    this.tagType = XMLTagType.Comment;\n                    this.tagName = \"\";\n                    this.tagPos = this.parsePos;\n                    if (pos == -1)\n                        this.tagLength = this.sourceLen - this.parsePos;\n                    else\n                        this.tagLength = pos + 3 - this.parsePos;\n                    this.parsePos += this.tagLength;\n                    return true;\n                }\n                else {\n                    pos++;\n                    this.tagType = XMLTagType.Instruction;\n                }\n            }\n            else if (c == '/') {\n                pos++;\n                this.tagType = XMLTagType.End;\n            }\n            else if (c == '?') {\n                pos++;\n                this.tagType = XMLTagType.Instruction;\n            }\n\n            for (; pos < this.sourceLen; pos++) {\n                c = this.source[pos];\n                if (' \\t\\n\\r\\v'.indexOf(c) != -1 || c == '>' || c == '/')\n                    break;\n            }\n            if (pos == this.sourceLen)\n                break;\n\n            buffer += this.source.substring(this.parsePos + 1, pos);\n            if (buffer.length > 0 && buffer[0] == '/')\n                buffer = buffer.substring(1);\n\n            let singleQuoted: boolean = false, doubleQuoted: boolean = false;\n            let possibleEnd: number = -1;\n            for (; pos < this.sourceLen; pos++) {\n                c = this.source[pos];\n                if (c == '\"') {\n                    if (!singleQuoted)\n                        doubleQuoted = !doubleQuoted;\n                }\n                else if (c == '\\'') {\n                    if (!doubleQuoted)\n                        singleQuoted = !singleQuoted;\n                }\n\n                if (c == '>') {\n                    if (!(singleQuoted || doubleQuoted)) {\n                        possibleEnd = -1;\n                        break;\n                    }\n\n                    possibleEnd = pos;\n                }\n                else if (c == '<')\n                    break;\n            }\n            if (possibleEnd != -1)\n                pos = possibleEnd;\n\n            if (pos == this.sourceLen)\n                break;\n\n            if (this.source[pos - 1] == '/')\n                this.tagType = XMLTagType.Void;\n\n            this.tagName = buffer;\n            if (this.lowerCaseName)\n                this.tagName = this.tagName.toLowerCase();\n            this.tagPos = this.parsePos;\n            this.tagLength = pos + 1 - this.parsePos;\n            this.parsePos += this.tagLength;\n\n            return true;\n        }\n\n        this.tagPos = this.sourceLen;\n        this.tagLength = 0;\n        this.tagName = null;\n        return false;\n    }\n\n    public static getTagSource(): string {\n        return this.source.substring(this.tagPos, this.tagPos + this.tagLength);\n    }\n\n    public static getRawText(trim?: boolean) {\n        if (this.lastTagEnd == this.tagPos)\n            return \"\";\n        else if (trim) {\n            let i = this.lastTagEnd;\n            for (; i < this.tagPos; i++) {\n                let c = this.source[i];\n                if (' \\t\\n\\r\\v'.indexOf(c) == -1)\n                    break;\n            }\n\n            if (i == this.tagPos)\n                return \"\";\n            else\n                return this.source.substring(i, this.tagPos).trim();\n        }\n        else\n            return this.source.substring(this.lastTagEnd, this.tagPos);\n    }\n\n    public static getText(trim?: boolean): string {\n        if (this.lastTagEnd == this.tagPos)\n            return \"\";\n        else if (trim) {\n            let i = this.lastTagEnd;\n            for (; i < this.tagPos; i++) {\n                let c = this.source[i];\n                if (' \\t\\n\\r\\v'.indexOf(c) == -1)\n                    break;\n            }\n\n            if (i == this.tagPos)\n                return \"\";\n            else\n                return XMLUtils.decodeString(this.source.substring(i, this.tagPos)).trimEnd();\n        }\n        else\n            return XMLUtils.decodeString(this.source.substring(this.lastTagEnd, this.tagPos));\n    }\n\n    public static get attributes() {\n        if (!this.attrParsed) {\n            for (let key in this._attrs) {\n                delete this._attrs[key];\n            }\n            this.parseAttributes(this._attrs);\n            this.attrParsed = true;\n        }\n\n        return this._attrs;\n    }\n\n    public static getAttribute(attrName: string): string {\n        return this.attributes[attrName];\n    }\n\n    static parseAttributes(attrs: any) {\n        let attrName: string;\n        let valueStart: number = 0;\n        let valueEnd: number = 0;\n        let waitValue: boolean = false;\n        let quoted: number = 0;\n        let buffer: string = \"\";\n        let i = this.tagPos;\n        let attrEnd = this.tagPos + this.tagLength;\n\n        if (i < attrEnd && this.source[i] == '<') {\n            for (; i < attrEnd; i++) {\n                let c = this.source[i];\n                if (' \\t\\n\\r\\v'.indexOf(c) != -1 || c == '>' || c == '/')\n                    break;\n            }\n        }\n\n        for (; i < attrEnd; i++) {\n            let c: string = this.source[i];\n            if (c == '=') {\n                valueStart = -1;\n                valueEnd = -1;\n                quoted = 0;\n                for (let j = i + 1; j < attrEnd; j++) {\n                    let c2 = this.source[j];\n                    if (' \\t\\n\\r\\v'.indexOf(c2) != -1) {\n                        if (valueStart != -1 && quoted == 0) {\n                            valueEnd = j - 1;\n                            break;\n                        }\n                    }\n                    else if (c2 == '>') {\n                        if (quoted == 0) {\n                            valueEnd = j - 1;\n                            break;\n                        }\n                    }\n                    else if (c2 == '\"') {\n                        if (valueStart != -1) {\n                            if (quoted != 1) {\n                                valueEnd = j - 1;\n                                break;\n                            }\n                        }\n                        else {\n                            quoted = 2;\n                            valueStart = j + 1;\n                        }\n                    }\n                    else if (c2 == '\\'') {\n                        if (valueStart != -1) {\n                            if (quoted != 2) {\n                                valueEnd = j - 1;\n                                break;\n                            }\n                        }\n                        else {\n                            quoted = 1;\n                            valueStart = j + 1;\n                        }\n                    }\n                    else if (valueStart == -1) {\n                        valueStart = j;\n                    }\n                }\n\n                if (valueStart != -1 && valueEnd != -1) {\n                    attrName = buffer;\n                    if (this.lowerCaseName)\n                        attrName = attrName.toLowerCase();\n                    buffer = \"\";\n                    attrs[attrName] = XMLUtils.decodeString(this.source.substring(valueStart, valueEnd + 1));\n                    i = valueEnd + 1;\n                }\n                else\n                    break;\n            }\n            else if (' \\t\\n\\r\\v'.indexOf(c) == -1) {\n                if (waitValue || c == '/' || c == '>') {\n                    if (buffer.length > 0) {\n                        attrName = buffer;\n                        if (this.lowerCaseName)\n                            attrName = attrName.toLowerCase();\n                        attrs[attrName] = \"\";\n                        buffer = \"\";\n                    }\n\n                    waitValue = false;\n                }\n\n                if (c != '/' && c != '>')\n                    buffer += c;\n            }\n            else {\n                if (buffer.length > 0)\n                    waitValue = true;\n            }\n        }\n    }\n}\n\nif (!String.prototype.trimEnd) {\n    String.prototype.trimEnd = function (this: string) {\n        return this.replace(/\\s+$/g, \"\");\n    }\n}","import { XMLIterator, XMLTagType } from \"./XMLIterator\";\nimport { XMLUtils } from \"./XMLUtils\";\n\nexport class XML {\n    public name: string;\n    public text: string;\n\n    private _attrs: Record<string, string>;\n    private _children: Array<XML>;\n\n    public constructor(XmlString?: string) {\n        if (XmlString)\n            this.parse(XmlString);\n    }\n\n    public get attributes(): Record<string, string> {\n        if (!this._attrs)\n            this._attrs = {};\n        return this._attrs;\n    }\n\n    public getAttrString(attrName: string, defValue?: string) {\n        return XMLUtils.getString(this._attrs, attrName, defValue);\n    }\n\n    public getAttrInt(attrName: string, defValue?: number): number {\n        return XMLUtils.getInt(this._attrs, attrName, defValue);\n    }\n\n    public getAttrFloat(attrName: string, defValue?: number): number {\n        return XMLUtils.getFloat(this._attrs, attrName, defValue);\n    }\n\n    public getAttrBool(attrName: string, defValue?: boolean): boolean {\n        return XMLUtils.getBool(this._attrs, attrName, defValue);\n    }\n\n    public setAttribute(attrName: string, attrValue: string) {\n        if (!this._attrs)\n            this._attrs = {};\n\n        this._attrs[attrName] = attrValue;\n    }\n\n    public getNode(selector: string): XML {\n        if (!this._children)\n            return null;\n        else\n            return this._children.find(value => {\n                return value.name == selector;\n            });\n    }\n\n    public elements(selector?: string): Array<XML> {\n        if (!this._children)\n            this._children = new Array<XML>();\n        if (selector)\n            return this._children.filter(value => {\n                return value.name == selector;\n            });\n        else\n            return this._children;\n    }\n\n    public parse(aSource: string) {\n        this.reset();\n\n        let lastOpenNode: XML;\n        let nodeStack: Array<XML> = new Array<XML>();\n\n        XMLIterator.begin(aSource);\n        while (XMLIterator.nextTag()) {\n            if (XMLIterator.tagType == XMLTagType.Start || XMLIterator.tagType == XMLTagType.Void) {\n                let childNode: XML;\n                if (lastOpenNode)\n                    childNode = new XML();\n                else {\n                    if (this.name != null) {\n                        this.reset();\n                        throw new Error(\"Invalid xml format - no root node.\");\n                    }\n                    childNode = this;\n                }\n\n                childNode.name = XMLIterator.tagName;\n                childNode._attrs = Object.assign({}, XMLIterator.attributes);\n\n                if (lastOpenNode) {\n                    if (XMLIterator.tagType != XMLTagType.Void)\n                        nodeStack.push(lastOpenNode);\n                    if (lastOpenNode._children == null)\n                        lastOpenNode._children = new Array<XML>();\n                    lastOpenNode._children.push(childNode);\n                }\n                if (XMLIterator.tagType != XMLTagType.Void)\n                    lastOpenNode = childNode;\n            }\n            else if (XMLIterator.tagType == XMLTagType.End) {\n                if (lastOpenNode == null || lastOpenNode.name != XMLIterator.tagName) {\n                    this.reset();\n                    throw new Error(\"Invalid xml format - <\" + XMLIterator.tagName + \"> dismatched.\");\n                }\n\n                if (lastOpenNode._children == null || lastOpenNode._children.length == 0) {\n                    lastOpenNode.text = XMLIterator.getText();\n                }\n\n                if (nodeStack.length > 0)\n                    lastOpenNode = nodeStack.pop();\n                else\n                    lastOpenNode = null;\n            }\n        }\n    }\n\n    public reset() {\n        this._attrs = null;\n        if (this._children != null)\n            this._children.length == 0;\n        this.text = null;\n    }\n}","import { Event } from \"../events/Event\"\nimport { EventDispatcher } from \"../events/EventDispatcher\"\nimport { Browser } from \"../utils/Browser\";\nimport { XML } from \"../html/XML\";\n\n/**\n * 请求进度改变时调度。\n * @eventType Event.PROGRESS\n * */\n/*[Event(name = \"progress\", type = \"laya.events.Event\")]*/\n/**\n * 请求结束后调度。\n * @eventType Event.COMPLETE\n * */\n/*[Event(name = \"complete\", type = \"laya.events.Event\")]*/\n/**\n * 请求出错时调度。\n * @eventType Event.ERROR\n * */\n/*[Event(name = \"error\", type = \"laya.events.Event\")]*/\n\n/**\n * <p> <code>HttpRequest</code> 通过封装 HTML <code>XMLHttpRequest</code> 对象提供了对 HTTP 协议的完全的访问，包括做出 POST 和 HEAD 请求以及普通的 GET 请求的能力。 <code>HttpRequest</code> 只提供以异步的形式返回 Web 服务器的响应，并且能够以文本或者二进制的形式返回内容。</p>\n * <p><b>注意：</b>建议每次请求都使用新的 <code>HttpRequest</code> 对象，因为每次调用该对象的send方法时，都会清空之前设置的数据，并重置 HTTP 请求的状态，这会导致之前还未返回响应的请求被重置，从而得不到之前请求的响应结果。</p>\n */\nexport class HttpRequest extends EventDispatcher {\n    /**@private */\n    protected _http = new XMLHttpRequest();\n    /**@private */\n    private static _urlEncode: Function = encodeURI;\n    /**@private */\n    protected _responseType: string;\n    /**@private */\n    protected _data: any;\n    /**@private */\n    protected _url: string;\n\n    /**\n     * 发送 HTTP 请求。\n     * @param\turl\t\t\t\t请求的地址。大多数浏览器实施了一个同源安全策略，并且要求这个 URL 与包含脚本的文本具有相同的主机名和端口。\n     * @param\tdata\t\t\t(default = null)发送的数据。\n     * @param\tmethod\t\t\t(default = \"get\")用于请求的 HTTP 方法。值包括 \"get\"、\"post\"、\"head\"。\n     * @param\tresponseType\t(default = \"text\")Web 服务器的响应类型，可设置为 \"text\"、\"json\"、\"xml\"、\"arraybuffer\"。\n     * @param\theaders\t\t\t(default = null) HTTP 请求的头部信息。参数形如key-value数组：key是头部的名称，不应该包括空白、冒号或换行；value是头部的值，不应该包括换行。比如[\"Content-Type\", \"application/json\"]。\n     */\n    send(url: string, data: any = null,\n        method: \"get\" | \"post\" | \"head\" = \"get\",\n        responseType: \"text\" | \"json\" | \"xml\" | \"arraybuffer\" = \"text\",\n        headers?: string[]): void {\n        this._responseType = responseType;\n        this._data = null;\n\n        if (Browser.onVVMiniGame || Browser.onQGMiniGame || Browser.onQQMiniGame || Browser.onAlipayMiniGame || Browser.onBLMiniGame || Browser.onHWMiniGame || Browser.onTTMiniGame || Browser.onTBMiniGame) {\n            url = HttpRequest._urlEncode(url);\n        }\n        this._url = url;\n\n        let http = this._http;\n        http.open(method, url, true);\n\n        if (data) {\n            if (typeof (data) == 'string') {\n                http.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\n            }\n            else {\n                http.setRequestHeader(\"Content-Type\", \"application/json\");\n                if (!(data instanceof ArrayBuffer))\n                    data = JSON.stringify(data);\n            }\n        }\n        else if (Browser.onBLMiniGame && Browser.onAndroid)\n            data = {};\n\n        if (headers) {\n            for (let i = 0; i < headers.length; i++) {\n                http.setRequestHeader(headers[i++], headers[i]);\n            }\n        }\n\n        let restype: XMLHttpRequestResponseType = responseType !== \"arraybuffer\" ? \"text\" : \"arraybuffer\";\n        http.responseType = restype;\n        if ((http as any).dataType) {//for Ali\n            (http as any).dataType = restype;\n        }\n        http.onerror = (e: any) => {\n            this._onError(e);\n        }\n        http.onabort = (e: any) => {\n            this._onAbort(e);\n        }\n        http.onprogress = (e: any) => {\n            this._onProgress(e);\n        }\n        http.onload = (e: any) => {\n            this._onLoad(e);\n        }\n\n        http.send(data);\n    }\n\n    /**\n     * @private\n     * 请求进度的侦听处理函数。\n     * @param\te 事件对象。\n     */\n    protected _onProgress(e: any): void {\n        if (e && e.lengthComputable) this.event(Event.PROGRESS, e.loaded / e.total);\n    }\n\n    /**\n     * @private\n     * 请求中断的侦听处理函数。\n     * @param\te 事件对象。\n     */\n    protected _onAbort(e: any): void {\n        this.error(\"Request was aborted by user\");\n    }\n\n    /**\n     * @private\n     * 请求出错侦的听处理函数。\n     * @param\te 事件对象。\n     */\n    protected _onError(e: any): void {\n        this.error(\"Request failed Status:\" + this._http.status + \" text:\" + this._http.statusText);\n    }\n\n    /**\n     * @private\n     * 请求消息返回的侦听处理函数。\n     * @param\te 事件对象。\n     */\n    protected _onLoad(e: any): void {\n        var http: any = this._http;\n        var status: number = http.status !== undefined ? http.status : 200;\n\n        if (status === 200 || status === 204 || status === 0) {\n            this.complete();\n        } else {\n            this.error(\"[\" + http.status + \"]\" + http.statusText + \":\" + http.responseURL);\n        }\n    }\n\n    /**\n     * @private\n     * 请求错误的处理函数。\n     * @param\tmessage 错误信息。\n     */\n    protected error(message: string): void {\n        this.clear();\n        //console.warn(this.url, message);\n        this.event(Event.ERROR, message);\n    }\n\n    /**\n     * @private\n     * 请求成功完成的处理函数。\n     */\n    protected complete(): void {\n        this.clear();\n        var flag: boolean = true;\n        try {\n            if (this._responseType === \"json\") {\n                this._data = JSON.parse(this._http.responseText);\n            } else if (this._responseType === \"xml\") {\n                this._data = new XML(this._http.responseText);\n            } else {\n                this._data = this._http.response || this._http.responseText;\n            }\n        } catch (e: any) {\n            flag = false;\n            this.error(e.message);\n        }\n        flag && this.event(Event.COMPLETE, this._data instanceof Array ? [this._data] : this._data);\n    }\n\n    /**\n     * @private\n     * 清除当前请求。\n     */\n    protected clear(): void {\n        var http: any = this._http;\n        http.onerror = http.onabort = http.onprogress = http.onload = null;\n    }\n\n    /** 请求的地址。*/\n    get url(): string {\n        return this._url;\n    }\n\n    /** 返回的数据。*/\n    get data(): any {\n        return this._data;\n    }\n\n    /**\n     * 本对象所封装的原生 XMLHttpRequest 引用。\n     */\n    get http(): any {\n        return this._http;\n    }\n\n    reset() {\n        this.offAll();\n        this._data = null;\n    }\n}\n\n","import { Event } from \"../events/Event\";\nimport { Browser } from \"../utils/Browser\";\nimport { ImgUtils } from \"../utils/ImgUtils\";\nimport { HttpRequest } from \"./HttpRequest\";\nimport { WorkerLoader } from \"./WorkerLoader\";\n\nexport class Downloader {\n    common(owner: any, url: string, originalUrl: string, contentType: string, onProgress: (progress: number) => void, onComplete: (data: any, error?: string) => void): void {\n        let http = this.getRequestInst();\n        http.on(Event.COMPLETE, () => {\n            let data = http.data;\n            this.returnRequestInst(http);\n\n            onComplete(data);\n        });\n        http.on(Event.ERROR, null, (error: string) => {\n            this.returnRequestInst(http);\n\n            onComplete(null, error);\n        });\n        if (onProgress)\n            http.on(Event.PROGRESS, onProgress);\n        http.send(url, null, \"get\", <any>contentType);\n        owner.$ref = http; //保持引用避免gc掉\n    }\n\n    image(owner: any, url: string, originalUrl: string, onProgress: (progress: number) => void, onComplete: (data: any, error?: string) => void): void {\n        let image: HTMLImageElement = new Browser.window.Image();\n        image.crossOrigin = \"\";\n        image.onload = () => {\n            image.onload = null;\n            image.onerror = null;\n            onComplete(image);\n        };\n        image.onerror = () => {\n            image.onload = null;\n            image.onerror = null;\n            onComplete(null, \"\");\n        };\n        image.src = url;\n        owner.$ref = image; //保持引用避免gc掉\n    }\n\n    imageWithBlob(owner: any, blob: ArrayBuffer, originalUrl: string, onProgress: (progress: number) => void, onComplete: (data: any, error?: string) => void): void {\n        let url = ImgUtils.arrayBufferToURL(originalUrl, blob);\n        this.image(owner, url, originalUrl, onProgress, onComplete);\n    }\n\n    imageWithWorker(owner: any, url: string, originalUrl: string, onProgress: (progress: number) => void, onComplete: (data: any, error?: string) => void): void {\n        WorkerLoader.enable = true;\n        if (WorkerLoader.enable) {\n            WorkerLoader.load(url, owner.workerLoaderOptions).then(ret => {\n                if (ret)\n                    onComplete(ret);\n                else\n                    onComplete(null, \"workerloader failed!\");\n            });\n        }\n        else\n            this.image(owner, url, originalUrl, onProgress, onComplete);\n    }\n\n    audio(owner: any, url: string, originalUrl: string, onProgress: (progress: number) => void, onComplete: (data: any, error?: string) => void) {\n        let audio = (<HTMLAudioElement>Browser.createElement(\"audio\"));\n        audio.crossOrigin = \"\";\n        audio.oncanplaythrough = () => {\n            audio.oncanplaythrough = null;\n            audio.onerror = null;\n            onComplete(audio);\n        };\n        audio.onerror = () => {\n            audio.oncanplaythrough = null;\n            audio.onerror = null;\n            onComplete(null, \"\");\n        };\n        audio.src = url;\n        owner.$ref = audio; //保持引用避免gc掉\n    }\n\n    httpRequestPool: Array<HttpRequest> = [];\n    protected getRequestInst() {\n        if (this.httpRequestPool.length == 0\n            || Browser.onVVMiniGame || Browser.onHWMiniGame /*临时修复vivo复用xmlhttprequest的bug*/) {\n            return new HttpRequest();\n        } else {\n            return this.httpRequestPool.pop();\n        }\n    }\n\n    protected returnRequestInst(inst: HttpRequest) {\n        inst.reset();\n        if (this.httpRequestPool.length < 10)\n            this.httpRequestPool.push(inst);\n    }\n}\n\n","import { ILaya } from \"../../ILaya\";\nimport { Event } from \"../events/Event\";\nimport { URL } from \"../net/URL\";\nimport { Texture } from \"../resource/Texture\";\nimport { Delegate } from \"../utils/Delegate\";\nimport { AtlasInfoManager } from \"./AtlasInfoManager\";\nimport { WorkerLoader } from \"./WorkerLoader\";\nimport { Utils } from \"../utils/Utils\";\nimport { AtlasResource } from \"../resource/AtlasResource\";\nimport { Texture2D, TextureConstructParams, TexturePropertyParams } from \"../resource/Texture2D\";\nimport { IBatchProgress, ProgressCallback, BatchProgress } from \"./BatchProgress\";\nimport { Handler } from \"../utils/Handler\";\nimport { EventDispatcher } from \"../events/EventDispatcher\";\nimport { Prefab } from \"../resource/HierarchyResource\";\nimport { Node } from \"../display/Node\";\nimport { Resource } from \"../resource/Resource\";\nimport { Downloader } from \"./Downloader\";\nimport { AssetDb } from \"../resource/AssetDb\";\nimport { BaseTexture } from \"../resource/BaseTexture\";\nimport { LayaEnv } from \"../../LayaEnv\";\nimport { XML } from \"../html/XML\";\n\nexport interface ILoadTask {\n    readonly type: string;\n    readonly url: string;\n    readonly uuid: string;\n    readonly ext: string;\n    readonly loader: Loader;\n    readonly obsoluteInst: Resource;\n    readonly options: Readonly<ILoadOptions>;\n    readonly progress: IBatchProgress;\n}\n\nexport interface IResourceLoader {\n    load(task: ILoadTask): Promise<any>;\n}\n\nexport interface ILoadOptions {\n    type?: string;\n    priority?: number;\n    group?: string;\n    cache?: boolean;\n    ignoreCache?: boolean;\n    noRetry?: boolean;\n    silent?: boolean;\n    useWorkerLoader?: boolean;\n    constructParams?: TextureConstructParams;\n    propertyParams?: TexturePropertyParams;\n    blob?: ArrayBuffer;\n    initiator?: ILoadTask;\n    [key: string]: any;\n}\n\nexport interface ILoadURL extends ILoadOptions {\n    url: string;\n}\n\ninterface ContentTypeMap {\n    \"text\": string,\n    \"json\": any,\n    \"xml\": XML,\n    \"arraybuffer\": ArrayBuffer,\n    \"image\": HTMLImageElement | ImageBitmap,\n    \"sound\": HTMLAudioElement\n}\n\nvar typeIdCounter = 0;\ntype TypeMapEntry = { typeId: number, loaderType: new () => IResourceLoader };\n\ninterface URLInfo {\n    ext: string,\n    typeId: number,\n    main: boolean,\n    loaderType: new () => IResourceLoader,\n}\nconst NullURLInfo: Readonly<URLInfo> = { ext: null, typeId: null, main: false, loaderType: null };\n\n/**\n * <code>Loader</code> 类可用来加载文本、JSON、XML、二进制、图像等资源。\n */\nexport class Loader extends EventDispatcher {\n    /**文本类型，加载完成后返回包含string的TextResource对象。*/\n    static TEXT = \"text\";\n    /**JSON 类型，加载完成后返回包含json数据的TextResource对象。*/\n    static JSON = \"json\";\n    /**XML 类型，加载完成后返回包含domXML的TextResource对象。*/\n    static XML = \"xml\";\n    /**二进制类型，加载完成后返回包含arraybuffer的TextResource对象。*/\n    static BUFFER = \"arraybuffer\";\n    /**纹理类型，加载完成后返回Texture。*/\n    static IMAGE = \"image\";\n    /**声音类型，加载完成后返回Sound。*/\n    static SOUND = \"sound\";\n    /**视频类型，加载完成后返回VideoTexture。*/\n    static VIDEO = \"video\";\n    /**图集类型，加载完成后返回图集json信息(并创建图集内小图Texture)。*/\n    static ATLAS = \"atlas\";\n    /**位图字体类型，加载完成后返回BitmapFont，加载后，会根据文件名自动注册为位图字体。*/\n    static FONT = \"font\";\n    /** TTF字体类型，加载完成后返回一个对象。*/\n    static TTF = \"ttf\";\n    /**Hierarchy资源。*/\n    static HIERARCHY = \"HIERARCHY\";\n    /**Mesh资源。*/\n    static MESH = \"MESH\";\n    /**Material资源。*/\n    static MATERIAL = \"MATERIAL\";\n    /**Texture2D资源。*/\n    static TEXTURE2D = \"TEXTURE2D\"; //这里是为了兼容，实际应该是BaseTexture\n    /**TextureCube资源。*/\n    static TEXTURECUBE = \"TEXTURE2D\"; //兼容处理，现在TEXTURE2D类型可以载入Texture或者TextureCube\n    static TEXTURE2DARRAY = \"TEXTURE2D\";\n    /**AnimationClip资源。*/\n    static ANIMATIONCLIP = \"ANIMATIONCLIP\";\n    /**Terrain资源。*/\n    static TERRAINHEIGHTDATA = \"TERRAINHEIGHTDATA\";\n    /**Terrain资源。*/\n    static TERRAINRES = \"TERRAIN\";\n    /** Spine 资源 */\n    static SPINE = \"SPINE\";\n\n    /** 加载出错后的重试次数，默认重试一次*/\n    retryNum: number = 1;\n    /** 延迟时间多久再进行错误重试，默认立即重试*/\n    retryDelay: number = 0;\n    /** 最大下载线程，默认为5个*/\n    maxLoader: number = 5;\n\n    static readonly extMap: { [ext: string]: Array<TypeMapEntry> } = {};\n    static readonly typeMap: { [type: string]: TypeMapEntry } = {};\n\n    static downloader = new Downloader();\n\n    /**\n     * 注册一种资源装载器。\n     * @param exts 扩展名\n     * @param cls\n     * @param type 类型标识。如果这种资源需要支持识别没有扩展名的情况，或者一个扩展名对应了多种资源类型的情况，那么指定type参数是个最优实践。\n     */\n    static registerLoader(exts: string[], cls: new () => IResourceLoader, type?: string) {\n        let typeEntry: TypeMapEntry;\n        if (type) {\n            typeEntry = <TypeMapEntry>Loader.typeMap[type];\n            if (!typeEntry)\n                Loader.typeMap[type] = typeEntry = { typeId: typeIdCounter++, loaderType: cls };\n            else if (typeEntry.loaderType != cls)\n                typeEntry = { typeId: typeEntry.typeId, loaderType: cls };\n        }\n        else\n            typeEntry = { typeId: typeIdCounter++, loaderType: cls };\n\n        for (let ext of exts) {\n            let entry = Loader.extMap[ext];\n            if (entry && type) { //这个扩展名已经被注册为其他资源类型\n                let i = entry.findIndex(e => e.typeId == typeEntry.typeId);\n                if (i == -1) //注册为次类型\n                    entry.push(typeEntry);\n                else //覆盖旧的设置\n                    entry[i].loaderType = cls;\n            }\n            else {\n                Loader.extMap[ext] = [typeEntry];\n            }\n        }\n    }\n\n    /**资源分组对应表。*/\n    static groupMap: { [name: string]: Set<string> } = {};\n    /**已加载的资源池。*/\n    static loadedMap: { [url: string]: Array<any> } = {};\n    /** 预加载的数据文件。如果一个url在这里有记录，则请求时直接使用这里的数据，放弃网络加载。*/\n    static preLoadedMap: { [url: string]: any } = {};\n\n    /**@private */\n    private _loadings: Map<string, LoadTask>;\n    /**@private */\n    private _queue: Array<DownloadItem>;\n    /**@private */\n    private _downloadings: Set<DownloadItem>;\n\n    /**\n     * <p>创建一个新的 <code>Loader</code> 实例。</p>\n     * <p><b>注意：</b>请使用Laya.loader加载资源，这是一个单例，不要手动实例化此类，否则会导致不可预料的问题。</p>\n     */\n    constructor() {\n        super();\n\n        this._loadings = new Map();\n        this._queue = [];\n        this._downloadings = new Set();\n    }\n\n    /**\n     * 是否有任何的加载任务在进行\n     */\n    public get loading(): boolean {\n        return this._loadings.size > 0;\n    }\n\n    /**\n     * <p>加载资源。</p>\n     * @param url 要加载的资源地址或资源地址数组。\n     * @param type 资源类型。比如：Loader.IMAGE。\n     * @param onProgress 进度回调函数。\n     * @return 根据url类型不同分为2种情况：1. url为String或ILoadURL类型，也就是单个资源地址，如果加载成功，则回调参数值为加载完成的资源，否则为null；2. url为数组类型，则返回一个数组，数组每个元素为加载完成的资源或null。\n     */\n    load(url: string | ILoadURL | (string | Readonly<ILoadURL>)[], type?: string, onProgress?: ProgressCallback): Promise<any>;\n    /**\n     * <p>加载资源。</p>\n     * @param url 要加载的资源地址或资源地址数组。\n     * @param options 加载选项。\n     * @param onProgress 进度回调函数。\n     * @return 根据url类型不同分为2种情况：1. url为String或ILoadURL类型，也就是单个资源地址，如果加载成功，则回调参数值为加载完成的资源，否则为null；2. url为数组类型，则返回一个数组，数组每个元素为加载完成的资源或null。\n     */\n    load(url: string | ILoadURL | (string | Readonly<ILoadURL>)[], options?: Readonly<ILoadOptions>, onProgress?: ProgressCallback): Promise<any>;\n    /**\n     * <p>这是兼容2.0引擎的加载接口</p>\n     * <p>加载资源。</p>\n     * @param url\t\t要加载的单个资源地址或资源信息数组。比如：简单数组：[\"a.png\",\"b.png\"]；复杂数组[{url:\"a.png\",type:Loader.IMAGE,size:100,priority:1},{url:\"b.json\",type:Loader.JSON,size:50,priority:1}]。\n     * @param complete\t加载结束回调。根据url类型不同分为2种情况：1. url为String类型，也就是单个资源地址，如果加载成功，则回调参数值为加载完成的资源，否则为null；2. url为数组类型，则返回一个数组，数组每个元素为加载完成的资源或null。\n     * @param progress\t加载进度回调。回调参数值为当前资源的加载进度信息(0-1)。\n     * @param type\t\t资源类型。比如：Loader.IMAGE。\n     * @param priority\t(default = 0)加载的优先级，数字越大优先级越高，优先级高的优先加载。\n     * @param cache\t\t是否缓存。\n     * @param group\t\t分组，方便对资源进行管理。\n     * @param ignoreCache\t是否忽略缓存。\n     * @param useWorkerLoader(default = false)是否使用worker加载（只针对IMAGE类型和ATLAS类型，并且浏览器支持的情况下生效）\n     * @return Promise对象\n     */\n    load(url: string | ILoadURL | (string | Readonly<ILoadURL>)[], complete?: Handler, progress?: Handler, type?: string, priority?: number, cache?: boolean, group?: string, ignoreCache?: boolean, useWorkerLoader?: boolean): Promise<any>;\n    load(url: string | ILoadURL | (string | Readonly<ILoadURL>)[], arg1?: string | Readonly<ILoadOptions> | Handler, arg2?: ProgressCallback | Handler, arg3?: string, priority?: number, cache?: boolean, group?: string, ignoreCache?: boolean, useWorkerLoader?: boolean): Promise<any> {\n        let complete: Handler;\n        let type: string;\n        let options: ILoadOptions = dummyOptions;\n        if (arg1 instanceof Handler) {\n            complete = arg1;\n            type = arg3;\n        }\n        else if (typeof (arg1) === \"string\")\n            type = arg1;\n        else if (arg1 != null) {\n            type = arg1.type;\n            options = arg1;\n        }\n\n        if (priority != null || cache != null || ignoreCache != null || group != null || useWorkerLoader != null) {\n            if (options === dummyOptions)\n                options = { priority, cache, ignoreCache, group, useWorkerLoader };\n            else\n                options = Object.assign(options, { priority, cache, ignoreCache, group, useWorkerLoader });\n        }\n        if (options.cache === false)\n            options.ignoreCache = true;\n\n        let onProgress: ProgressCallback;\n        if (arg2 instanceof Handler)\n            onProgress = (value: number) => arg2.runWith(value);\n        else\n            onProgress = arg2;\n\n        let promise: Promise<any>;\n        if (Array.isArray(url)) {\n            let pd: BatchProgress;\n            if (onProgress)\n                pd = new BatchProgress(onProgress);\n\n            let promises: Array<Promise<any>> = [];\n            for (let i = 0; i < url.length; i++) {\n                let url2 = url[i];\n                if (!url2)\n                    continue;\n\n                if (typeof (url2) === \"string\") {\n                    promises.push(this._load1(url2, type, options, pd?.createCallback()));\n                }\n                else {\n                    promises.push(this._load1(url2.url, url2.type || type,\n                        options !== dummyOptions ? Object.assign({}, options, url2) : url2, pd?.createCallback()));\n                }\n            }\n\n            promise = Promise.all(promises);\n        }\n        else if (typeof (url) === \"string\")\n            promise = this._load1(url, type, options, onProgress);\n        else\n            promise = this._load1(url.url, url.type || type,\n                options !== dummyOptions ? Object.assign({}, options, url) : url, onProgress);\n\n        if (complete)\n            return promise.then(result => {\n                complete.runWith(result);\n                return result;\n            });\n        else\n            return promise;\n    }\n\n    private _load1(url: string, type: string, options: ILoadOptions, onProgress: ProgressCallback): Promise<any> {\n        if (LayaEnv.isPreview) {\n            if (url.startsWith(\"res://\")) {\n                let uuid = url.substring(6);\n                return AssetDb.inst.UUID_to_URL_async(uuid).then(url2 => {\n                    if (url2)\n                        return this._load2(url2, uuid, type, options, onProgress);\n                    else {\n                        !options.silent && Loader.warnFailed(url);\n                        return Promise.resolve(null);\n                    }\n                });\n            }\n            else {\n                return AssetDb.inst.URL_to_UUID_async(url).then(uuid => {\n                    return this._load2(url, uuid, type, options, onProgress);\n                });\n            }\n        }\n        else\n            return this._load2(url, null, type, options, onProgress);\n    }\n\n    private _load2(url: string, uuid: string, type: string, options: ILoadOptions, onProgress: ProgressCallback): Promise<any> {\n        let { ext, typeId, main, loaderType } = Loader.getURLInfo(url, type);\n        if (!loaderType) {\n            !options.silent && Loader.warnFailed(url);\n            return Promise.resolve(null);\n        }\n        let formattedUrl = URL.formatURL(url);\n\n        if (options.group) {\n            let set = Loader.groupMap[options.group];\n            if (!set)\n                set = Loader.groupMap[options.group] = new Set();\n            set.add(formattedUrl);\n        }\n\n        let obsoluteRes: Resource;\n        if (!options.ignoreCache) {\n            let cacheRes = Loader._getRes(formattedUrl, type);\n            if (cacheRes !== undefined) {\n                if (cacheRes == null)\n                    return Promise.resolve(null);\n                else {\n                    if (!(cacheRes instanceof Resource))\n                        return Promise.resolve(cacheRes);\n\n                    if (cacheRes.obsolute)\n                        obsoluteRes = cacheRes;\n\n                    if (!obsoluteRes && (!cacheRes.uuid || !uuid || uuid == cacheRes.uuid))\n                        return Promise.resolve(cacheRes);\n                }\n            }\n        }\n\n        let loadingKey = formattedUrl;\n        if (!main)\n            loadingKey += \"@\" + typeId;\n        let task = this._loadings.get(loadingKey);\n        if (task) {\n            //fix recursive dependency\n            if (options.initiator === task) {\n                return Promise.resolve();\n            }\n            if (onProgress)\n                task.onProgress.add(onProgress);\n            return new Promise((resolve) => task.onComplete.add(resolve));\n        }\n\n        //判断是否在自动图集里\n        let atlasInfo = AtlasInfoManager.getFileLoadPath(formattedUrl);\n        if (atlasInfo) {\n            return this.load(atlasInfo.url, { type: Loader.ATLAS, baseUrl: atlasInfo.baseUrl }).then(() => {\n                return Loader.getRes(url, type);\n            });\n        }\n\n        if (loadTaskPool.length > 0)\n            task = loadTaskPool.pop();\n        else\n            task = new LoadTask();\n        task.type = type;\n        task.url = url;\n        task.uuid = uuid;\n        task.ext = ext;\n        options = Object.assign(task.options, options);\n        delete options.type;\n        if (options.priority == null)\n            options.priority = 0;\n        if (options.useWorkerLoader == null)\n            options.useWorkerLoader = WorkerLoader.enable;\n        if (onProgress)\n            task.onProgress.add(onProgress);\n        task.loader = this;\n        task.obsoluteInst = obsoluteRes;\n\n        let assetLoader = new loaderType();\n        this._loadings.set(loadingKey, task);\n\n        let promise: Promise<any>;\n        try {\n            promise = assetLoader.load(task);\n        }\n        catch (err: any) {\n            !options.silent && Loader.warnFailed(url, err);\n\n            promise = Promise.resolve(null);\n        }\n\n        return promise.then(content => {\n            if (content instanceof Resource) {\n                content._setCreateURL(url, uuid);\n            }\n\n            if (task.options.cache !== false)\n                Loader._cacheRes(formattedUrl, content, typeId, main);\n\n            task.progress.update(-1, 1);\n\n            //console.log(\"Loaded \" + url);\n            task.onComplete.invoke(content);\n            return content;\n        }).catch(error => {\n            !options.silent && Loader.warnFailed(url, error);\n\n            if (task.options.cache !== false)\n                Loader._cacheRes(formattedUrl, null, typeId, main);\n\n            task.onComplete.invoke(null);\n            return null;\n        }).then((result: any) => {\n            this._loadings.delete(loadingKey);\n            task.reset();\n            loadTaskPool.push(task);\n            if (this._loadings.size == 0)\n                this.event(Event.COMPLETE);\n            return result;\n        });\n    }\n\n    /**\n     * 从指定URL下载。这是较为底层的下载资源的方法，它和load方法不同，不对返回的数据进行解析，也不会缓存下载的内容。\n     * 成功则返回下载的数据，失败返回null。\n     */\n    fetch<K extends keyof ContentTypeMap>(url: string, contentType: K, onProgress?: ProgressCallback, options?: Readonly<ILoadOptions>): Promise<ContentTypeMap[K]> {\n        options = options || dummyOptions;\n        let task: DownloadItem = {\n            originalUrl: url,\n            url: url,\n            contentType: contentType,\n            priority: options.priority ?? 1,\n            retryCnt: 0,\n            onProgress: onProgress,\n            onComplete: null,\n        };\n        if (options.useWorkerLoader) {\n            task.useWorkerLoader = true;\n            task.workerLoaderOptions = options.workerLoaderOptions;\n        }\n        if (options.blob)\n            task.blob = options.blob;\n        if (options.noRetry)\n            task.retryCnt = -1;\n        if (options.silent)\n            task.silent = true;\n\n        return AssetDb.inst.resolveURL(url).then(url => {\n            return new Promise((resolve) => {\n                task.url = URL.formatURL(url);\n                task.onComplete = resolve;\n                this.queueToDownload(task);\n            });\n        });\n    }\n\n    private queueToDownload(item: DownloadItem) {\n        if (this._downloadings.size < this.maxLoader) {\n            this.download(item);\n            return;\n        }\n\n        let priority = item.priority;\n        if (priority == 0)\n            this._queue.push(item);\n        else {\n            let i = this._queue.findIndex(e => e.priority < priority);\n            if (i != -1)\n                this._queue.splice(i, 0, item);\n            else\n                this._queue.push(item);\n        }\n    }\n\n    private download(item: DownloadItem) {\n        this._downloadings.add(item);\n        let url = URL.postFormatURL(item.url);\n\n        if (item.contentType == \"image\") {\n            let preloadedContent = Loader.preLoadedMap[item.url];\n            if (preloadedContent) {\n                if (!(preloadedContent instanceof ArrayBuffer)) {\n                    this.completeItem(item, preloadedContent);\n                    return;\n                }\n\n                //cache as arraybuffer\n                item.blob = preloadedContent;\n            }\n\n            if (item.blob) {\n                Loader.downloader.imageWithBlob(item, item.blob, item.originalUrl, item.onProgress, (data: any, error: string) => {\n                    if (!data)\n                        item.retryCnt = -1; //失败无需重试\n                    this.completeItem(item, data, error);\n                });\n            }\n            else if (item.useWorkerLoader) {\n                Loader.downloader.imageWithWorker(item, url, item.originalUrl, item.onProgress, (data: any, error: string) => {\n                    if (!data)\n                        item.useWorkerLoader = false; //重试不用worker\n                    this.completeItem(item, data, error);\n                });\n            }\n            else {\n                Loader.downloader.image(item, url, item.originalUrl, item.onProgress, (data: any, error: string) =>\n                    this.completeItem(item, data, error));\n            }\n        }\n        else if (item.contentType == \"sound\") {\n            Loader.downloader.audio(item, url, item.originalUrl, item.onProgress, (data: any, error: string) =>\n                this.completeItem(item, data, error));\n        }\n        else {\n            let preloadedContent = Loader.preLoadedMap[item.url];\n            if (preloadedContent) {\n                this.completeItem(item, preloadedContent);\n                return;\n            }\n\n            Loader.downloader.common(item, url, item.originalUrl, item.contentType, item.onProgress, (data: any, error: string) =>\n                this.completeItem(item, data, error));\n        }\n    }\n\n    private completeItem(item: DownloadItem, content: any, error?: string) {\n        this._downloadings.delete(item);\n        if (content) {\n            if (this._downloadings.size < this.maxLoader && this._queue.length > 0)\n                this.download(this._queue.shift());\n\n            if (item.onProgress)\n                item.onProgress(1);\n\n            item.onComplete(content);\n        }\n        else if (item.retryCnt != -1 && item.retryCnt < this.retryNum) {\n            item.retryCnt++;\n            if (!item.silent)\n                console.debug(`Retry to load ${item.url} (${item.retryCnt})`);\n            ILaya.systemTimer.once(this.retryDelay, this, this.queueToDownload, [item], false);\n        }\n        else {\n            !item.silent && Loader.warnFailed(item.url);\n            if (item.onProgress)\n                item.onProgress(1);\n\n            if (this._downloadings.size < this.maxLoader && this._queue.length > 0)\n                this.download(this._queue.shift());\n\n            item.onComplete(null);\n        }\n    }\n\n    private static getURLInfo(url: string, type?: string): URLInfo {\n        //先根据扩展名获得注册信息A\n        let ext = url.startsWith(\"data:\") ? \"png\" : Utils.getFileExtension(url);\n        let extEntry: Array<TypeMapEntry>;\n        if (ext.length > 0)\n            extEntry = Loader.extMap[ext];\n\n        let typeId: number;\n        let main: boolean;\n        let loaderType: new () => IResourceLoader;\n\n        if (type) { //指定了类型\n            let typeEntry = Loader.typeMap[type];\n            if (!typeEntry)\n                return NullURLInfo;\n\n            typeId = typeEntry.typeId;\n\n            let i: number = 0;\n            if (extEntry) {\n                if (extEntry[0].typeId === typeId //优化，大部分情况均为如此\n                    || (i = extEntry.findIndex(e => e.typeId === typeId)) != -1) {\n                    main = i == 0;\n                    loaderType = extEntry[i].loaderType;\n                }\n                else {\n                    //未与扩展名匹配的情况，例如a.lh试图以Loader.JSON类型加载，这种组合没有注册，但仍然允许加载为副资源\n                    main = false;\n                    loaderType = typeEntry.loaderType;\n                }\n            }\n            else { //扩展名没有注册的情况\n                main = type != Loader.TEXTURE2D;\n                loaderType = typeEntry.loaderType;\n            }\n        }\n        else {\n            if (!extEntry)\n                return NullURLInfo;\n\n            //没有自定类型，则认为是主资源\n            main = true;\n            typeId = extEntry[0].typeId;\n            loaderType = extEntry[0].loaderType;\n        }\n\n        return { ext, main, typeId, loaderType };\n    }\n\n    private static warnFailed(url: string, err?: any) {\n        this.warn(`Failed to load '${url}'`, err);\n    }\n\n    public static warn(msg: string, err?: any) {\n        if (err)\n            console.warn(msg, err);\n        else\n            console.warn(msg);\n    }\n\n    /**\n     * 获取指定资源地址的资源。\n     * @param url 资源地址。\n     * @return 返回资源。\n     */\n    static getRes(url: string, type?: string): any {\n        url = URL.formatURL(url);\n        let ret = Loader._getRes(url, type);\n        return ret || null;\n    }\n\n    private static _getRes(url: string, type?: string): any {\n        let resArr = Loader.loadedMap[url];\n        if (!resArr)\n            return undefined;\n\n        let ret: any;\n        if (type) {\n            let typeEntry = <TypeMapEntry>Loader.typeMap[type];\n            if (!typeEntry)\n                return undefined;\n\n            if (resArr.length == 2) { //优化，大部分情况都是只有主资源，也就是两个元素\n                if (resArr[0] == typeEntry.typeId)\n                    ret = resArr[1];\n            }\n            else {\n                let i = resArr.indexOf(typeEntry.typeId);\n                if (i != -1)\n                    ret = resArr[i + 1];\n            }\n        }\n        else\n            ret = resArr[1]; //主资源\n\n        if ((ret instanceof Resource) && ret.destroyed)\n            return undefined;\n        else\n            return ret;\n    }\n\n    /**\n     * \n     */\n    static getTexture2D(url: string): Texture2D {\n        return Loader.getRes(url, Loader.TEXTURE2D);\n    }\n\n    /**\n     * \n     */\n    static getBaseTexture<T extends BaseTexture>(url: string): T {\n        return Loader.getRes(url, Loader.TEXTURE2D);\n    }\n\n    /**\n     * 获取指定资源地址的图集地址列表。\n     * @param url 图集地址。\n     * @return 返回地址集合。\n     */\n    static getAtlas(url: string): AtlasResource {\n        return Loader.getRes(url, Loader.ATLAS);\n    }\n\n    getRes(url: string, type?: string): any {\n        return Loader.getRes(url, type);\n    }\n\n    static createNodes<T extends Node>(url: string): T {\n        return <T>(<Prefab>Loader.getRes(url))?.create();\n    }\n\n    /**\n     * 缓存资源。\n     * @param url 资源地址。\n     * @param data 要缓存的内容。\n     */\n    static cacheRes(url: string, data: any, type?: string): void {\n        url = URL.formatURL(url);\n        let urlInfo = Loader.getURLInfo(url, type);\n        if (urlInfo.typeId != null)\n            Loader._cacheRes(url, data, urlInfo.typeId, urlInfo.main);\n    }\n\n    /**\n     * @private\n     */\n    private static _cacheRes(url: string, data: any, typeId: number, main: boolean) {\n        let entry: Array<any> = Loader.loadedMap[url];\n        if (main) {\n            if (entry) {\n                entry[0] = typeId;\n                entry[1] = data;\n            }\n            else\n                entry = Loader.loadedMap[url] = [typeId, data];\n        }\n        else {\n            if (entry) {\n                let i = entry.findIndex(e => e === typeId);\n                if (i != -1)\n                    entry[i + 1] = data;\n                else\n                    entry.push(typeId, data);\n            }\n            else\n                entry = Loader.loadedMap[url] = [null, undefined, typeId, data];\n        }\n    }\n\n    cacheRes(url: string, data: any, type?: string): void {\n        Loader.cacheRes(url, data, type);\n    }\n\n    /**\n     * 清理指定资源地址缓存。\n     * @param url 资源地址。\n     * @param checkObj 如果缓存中的对象是这个，才清除，否则不清除\n     */\n    static clearRes(url: string, checkObj?: any): void {\n        url = URL.formatURL(url);\n        Loader._clearRes(url, checkObj);\n    }\n\n    /**\n     * 清理指定资源地址缓存。\n     * @param url 资源地址。\n     * @param checkObj 如果缓存中的对象是这个，才清除，否则不清除\n     */\n    clearRes(url: string, checkObj?: any): void {\n        url = URL.formatURL(url);\n        Loader._clearRes(url, checkObj);\n    }\n\n    /**\n     * @private\n     */\n    private static _clearRes(url: string, checkObj?: any) {\n        let entry = Loader.loadedMap[url];\n        if (!entry)\n            return;\n\n        if (checkObj) {\n            if (entry[1] == checkObj) {\n                if (entry.length == 2)\n                    delete Loader.loadedMap[url];\n                else\n                    entry[1] = undefined;\n            }\n            else {\n                let i = entry.indexOf(checkObj);\n                if (i == -1)\n                    return;\n\n                if (entry.length == 4 && entry[0] == null)\n                    delete Loader.loadedMap[url];\n                else\n                    entry.splice(i - 1, 2);\n            }\n\n            if ((checkObj instanceof Resource) && !checkObj.destroyed) {\n                checkObj.destroy();\n            }\n        }\n        else {\n            delete Loader.loadedMap[url];\n\n            if (entry.length > 2) {\n                for (let i = 1; i < entry.length; i += 2) {\n                    let obj = entry[i];\n                    if ((obj instanceof Resource) && !obj.destroyed) {\n                        obj.destroy();\n                    }\n                }\n            }\n            else {\n                let obj = entry[1];\n                if ((obj instanceof Resource) && !obj.destroyed) {\n                    obj.destroy();\n                }\n            }\n        }\n    }\n\n    /**\n     * 销毁Texture使用的图片资源，保留texture壳，如果下次渲染的时候，发现texture使用的图片资源不存在，则会自动恢复\n     * 相比clearRes，clearTextureRes只是清理texture里面使用的图片资源，并不销毁texture，再次使用到的时候会自动恢复图片资源\n     * 而clearRes会彻底销毁texture，导致不能再使用；clearTextureRes能确保立即销毁图片资源，并且不用担心销毁错误\n     * @param url 图集地址或者texture地址，比如 \"res/atlas/comp.atlas\"或\"hall/bg.jpg\"\n     */\n    clearTextureRes(url: string): void {\n        url = URL.formatURL(url);\n        let entry = Loader.loadedMap[url];\n        if (!entry)\n            return;\n        let res = entry[1];\n        if (res instanceof Texture) {\n            res.disposeBitmap();\n        }\n        else if (res instanceof AtlasResource) {\n            for (let tex of res.textures)\n                tex.disposeBitmap();\n        }\n    }\n\n    /**\n     * 设置资源分组。\n     * @param url 资源地址。\n     * @param group 分组名。\n     */\n    static setGroup(url: string, group: string): void {\n        url = URL.formatURL(url);\n        let set = Loader.groupMap[group];\n        if (!set)\n            set = Loader.groupMap[group] = new Set();\n        set.add(url);\n    }\n\n    /**\n     * 根据分组清理资源。\n     * @param group 分组名\n     */\n    static clearResByGroup(group: string): void {\n        let set = Loader.groupMap[group];\n        if (set) {\n            for (let k of set)\n                Loader._clearRes(k);\n        }\n    }\n\n    /** 清理当前未完成的加载，所有未加载的内容全部停止加载。*/\n    clearUnLoaded(): void {\n        if (this._queue.length == 0)\n            return;\n\n        let arr = this._queue.concat();\n        this._queue.length = 0;\n        for (let item of arr)\n            item.onComplete(null);\n    }\n\n    /**\n     * 根据地址集合清理掉未加载的内容\n     * @param urls 资源地址集合\n     */\n    cancelLoadByUrls(urls: any[]): void {\n        if (!urls) return;\n        for (var i: number = 0, n: number = urls.length; i < n; i++) {\n            this.cancelLoadByUrl(urls[i]);\n        }\n    }\n\n    /**\n     * 根据地址清理掉未加载的内容\n     * @param url 资源地址\n     */\n    cancelLoadByUrl(url: string): void {\n        url = URL.formatURL(url);\n        let i = this._queue.findIndex(item => item.url == url);\n        if (i != -1) {\n            let item = this._queue[i];\n            this._queue.splice(i, 1);\n            item.onComplete(null);\n        }\n    }\n\n    /**\n     * 载入一个分包\n     * @path 小游戏的分包路径\n     * @onProgress 加载进度回调\n     */\n    loadPackage(path: string, onProgress?: ProgressCallback): Promise<void>;\n    /**\n     * 载入一个分包。\n     * @path 分包路径\n     * @remoteUrl 如果分包是一个远程包，那需要提供远程资源服务器的地址，例如\"http://cdn.com/\"\n     * @onProgress 加载进度回调\n     */\n    loadPackage(path: string, remoteUrl?: string, onProgress?: ProgressCallback): Promise<void>;\n    loadPackage(path: string, arg2?: string | ProgressCallback, arg3?: ProgressCallback): Promise<void> {\n        let progress: ProgressCallback;\n        let remoteUrl: string;\n\n        if (typeof (arg2) === \"string\") {\n            remoteUrl = arg2;\n            progress = arg3;\n        } else {\n            progress = arg2;\n        }\n\n        if (remoteUrl) {\n            if (!remoteUrl.endsWith(\"/\"))\n                remoteUrl += \"/\";\n            let tmpPath: string = path + \"/\";\n            URL.basePaths[tmpPath] = remoteUrl;\n            return this._loadSubFileConfig(path, progress);\n        } else {\n            if (LayaEnv.isPreview)\n                return Promise.resolve();\n            let plat: any = null;\n            if (ILaya.Browser.onMiniGame) {\n                // wechat\n                plat = ILaya.Browser.window.wx;\n            } else if (ILaya.Browser.onTTMiniGame) {\n                // bytedance\n                plat = ILaya.Browser.window.tt;\n            } else if (ILaya.Browser.onKGMiniGame || ILaya.Browser.onVVMiniGame || ILaya.Browser.onQGMiniGame) {\n                // mi/vivo/oppo\n                plat = ILaya.Browser.window.qg;\n            } else if (ILaya.Browser.onAlipayMiniGame || ILaya.Browser.onTBMiniGame) {\n                // alipay\n                plat = ILaya.Browser.window.my;\n            } else {\n                return this._loadSubFileConfig(path, progress);\n            }\n\n            return this._loadMiniPackage(plat, path, progress).then(() =>\n                this._loadSubFileConfig(path, progress)\n            );\n        }\n    }\n\n\n    private _loadMiniPackage(mini: any, packName: string, progress?: ProgressCallback): Promise<any> {\n        if (!(packName.length > 0)) return Promise.resolve();\n        return new Promise((resolve: (value: any) => void, reject: (reason?: any) => void) => {\n            let loadTask: any = mini.loadSubpackage({\n                name: packName,\n                success: (res: any) => {\n                    resolve(res);\n                },\n                fail: (res: any) => {\n                    resolve(res);\n                }\n            });\n\n            loadTask.onProgressUpdate && loadTask.onProgressUpdate((res: any) => {\n                progress && progress(res);\n            });\n        })\n    }\n\n\n    private _loadSubFileConfig(path: string, onProgress: ProgressCallback): Promise<any> {\n        if (path.length > 0)\n            path += \"/\";\n\n        return this.fetch(path + \"fileconfig.json\", \"json\", onProgress).then(fileConfig => {\n            let files: Array<string> = [];\n            let col = fileConfig.files;\n            for (let k in col) {\n                if (k.length > 0) {\n                    for (let file of col[k])\n                        files.push(k + \"/\" + file);\n                }\n                else {\n                    for (let file of col[k])\n                        files.push(file);\n                }\n            }\n\n            if (fileConfig.hash) {\n                let i = 0;\n                let version = URL.version;\n                for (let k of fileConfig.hash) {\n                    if (k != null)\n                        version[files[i]] = k;\n                    i++;\n                }\n            }\n\n            let configs: Array<any> = fileConfig.config;\n            let len = configs.length;\n            let i = 0, j = 0, m = 0, k = 0, n = 0;\n            let indice: Array<number>;\n            let c: any;\n            let metaMap = AssetDb.inst.metaMap;\n            while (true) {\n                if (indice == null) {\n                    if (i >= len)\n                        break;\n                    c = configs[i];\n                    indice = c.i;\n                    if (Array.isArray(indice))\n                        n = indice.length;\n                    else {\n                        m = indice;\n                        n = 0;\n                        k = 1;\n                    }\n                    j = 0;\n                }\n                if (k == 0) {\n                    if (j >= n) {\n                        i++;\n                        indice = null;\n                        continue;\n                    }\n                    k = indice[j++];\n                    if (k > 0) {\n                        m = k;\n                        k = 0;\n                    }\n                    else\n                        k = -k;\n                }\n                else\n                    k--;\n\n                let file = files[m + k];\n                switch (c.t) {\n                    case 0: //图片\n                        metaMap[file] = c;\n                        break;\n                    case 1: //自动图集\n                        AtlasInfoManager.addAtlas(file, c.prefix, c.frames);\n                        break;\n                    case 2: //Shader\n                        AssetDb.inst.shaderNameMap[c.shaderName] = file;\n                        break;\n                    case 3: //render texture\n                        Loader.preLoadedMap[URL.formatURL(file)] = c;\n                        break;\n                }\n            }\n        });\n    }\n}\n\nclass LoadTask implements ILoadTask {\n    type: string;\n    url: string;\n    uuid: string;\n    ext: string;\n    options: ILoadOptions;\n    loader: Loader;\n    progress: BatchProgress;\n    obsoluteInst: Resource;\n\n    onProgress: Delegate;\n    onComplete: Delegate;\n\n    constructor() {\n        this.options = {};\n        this.onProgress = new Delegate();\n        this.onComplete = new Delegate();\n        this.progress = new BatchProgress((progress: number) => this.onProgress.invoke(progress));\n    }\n\n    public reset() {\n        for (let k in this.options)\n            delete this.options[k];\n        this.onProgress.clear();\n        this.onComplete.clear();\n        this.progress.reset();\n        this.obsoluteInst = null;\n    }\n}\n\nconst loadTaskPool: Array<LoadTask> = [];\nconst dummyOptions: ILoadOptions = {};\n\ninterface DownloadItem {\n    url: string;\n    originalUrl: string;\n    contentType: string;\n    priority: number;\n    useWorkerLoader?: boolean;\n    workerLoaderOptions?: Record<string, any>;\n    blob?: ArrayBuffer;\n    retryCnt?: number;\n    silent?: boolean;\n    onComplete: (content: any) => void;\n    onProgress: ProgressCallback;\n}","/**\n\t * @private\n\t * <code>MathUtil</code> 是一个数据处理工具类。\n\t */\nexport class MathUtil {\n\n    static subtractVector3(l: Float32Array, r: Float32Array, o: Float32Array): void {\n        o[0] = l[0] - r[0];\n        o[1] = l[1] - r[1];\n        o[2] = l[2] - r[2];\n    }\n\n    static lerp(left: number, right: number, amount: number): number {\n        return left * (1 - amount) + right * amount;\n    }\n\n    static scaleVector3(f: Float32Array, b: number, e: Float32Array): void {\n        e[0] = f[0] * b;\n        e[1] = f[1] * b;\n        e[2] = f[2] * b;\n    }\n\n    static lerpVector3(l: Float32Array, r: Float32Array, t: number, o: Float32Array): void {\n        var ax: number = l[0], ay: number = l[1], az: number = l[2];\n        o[0] = ax + t * (r[0] - ax);\n        o[1] = ay + t * (r[1] - ay);\n        o[2] = az + t * (r[2] - az);\n    }\n\n    static lerpVector4(l: Float32Array, r: Float32Array, t: number, o: Float32Array): void {\n        var ax: number = l[0], ay: number = l[1], az: number = l[2], aw: number = l[3];\n        o[0] = ax + t * (r[0] - ax);\n        o[1] = ay + t * (r[1] - ay);\n        o[2] = az + t * (r[2] - az);\n        o[3] = aw + t * (r[3] - aw);\n    }\n\n    static slerpQuaternionArray(a: Float32Array, Offset1: number, b: Float32Array, Offset2: number, t: number, out: Float32Array, Offset3: number): Float32Array {\n\n        var ax: number = a[Offset1 + 0], ay: number = a[Offset1 + 1], az: number = a[Offset1 + 2], aw: number = a[Offset1 + 3], bx: number = b[Offset2 + 0], by: number = b[Offset2 + 1], bz: number = b[Offset2 + 2], bw: number = b[Offset2 + 3];\n\n        var omega: number, cosom: number, sinom: number, scale0: number, scale1: number;\n\n        // calc cosine \n        cosom = ax * bx + ay * by + az * bz + aw * bw;\n        // adjust signs (if necessary) \n        if (cosom < 0.0) {\n            cosom = -cosom;\n            bx = -bx;\n            by = -by;\n            bz = -bz;\n            bw = -bw;\n        }\n        // calculate coefficients \n        if ((1.0 - cosom) > 0.000001) {\n            // standard case (slerp) \n            omega = Math.acos(cosom);\n            sinom = Math.sin(omega);\n            scale0 = Math.sin((1.0 - t) * omega) / sinom;\n            scale1 = Math.sin(t * omega) / sinom;\n        } else {\n            // \"from\" and \"to\" quaternions are very close  \n            //  ... so we can do a linear interpolation \n            scale0 = 1.0 - t;\n            scale1 = t;\n        }\n        // calculate final values \n        out[Offset3 + 0] = scale0 * ax + scale1 * bx;\n        out[Offset3 + 1] = scale0 * ay + scale1 * by;\n        out[Offset3 + 2] = scale0 * az + scale1 * bz;\n        out[Offset3 + 3] = scale0 * aw + scale1 * bw;\n\n        return out;\n\n    }\n\n    /**\n     * 获取指定的两个点组成的线段的角度值。\n     * @param\tx0 点一的 X 轴坐标值。\n     * @param\ty0 点一的 Y 轴坐标值。\n     * @param\tx1 点二的 X 轴坐标值。\n     * @param\ty1 点二的 Y 轴坐标值。\n     * @return 角度值。\n     */\n    static getRotation(x0: number, y0: number, x1: number, y1: number): number {\n        return Math.atan2(y1 - y0, x1 - x0) / Math.PI * 180;\n    }\n\n    /**\n     * 一个用来确定数组元素排序顺序的比较函数。\n     * @param\ta 待比较数字。\n     * @param\tb 待比较数字。\n     * @return 如果a等于b 则值为0；如果b>a则值为1；如果b<则值为-1。\n     */\n    static sortBigFirst(a: number, b: number): number {\n        if (a == b) return 0;\n        return b > a ? 1 : -1;\n    }\n\n    /**\n     * 一个用来确定数组元素排序顺序的比较函数。\n     * @param\ta 待比较数字。\n     * @param\tb 待比较数字。\n     * @return 如果a等于b 则值为0；如果b>a则值为-1；如果b<则值为1。\n     */\n    static sortSmallFirst(a: number, b: number): number {\n        if (a == b) return 0;\n        return b > a ? -1 : 1;\n    }\n\n    /**\n     * 将指定的元素转为数字进行比较。\n     * @param\ta 待比较元素。\n     * @param\tb 待比较元素。\n     * @return b、a转化成数字的差值 (b-a)。\n     */\n    static sortNumBigFirst(a: any, b: any): number {\n        return parseFloat(b) - parseFloat(a);\n    }\n\n    /**\n     * 将指定的元素转为数字进行比较。\n     * @param\ta 待比较元素。\n     * @param\tb 待比较元素。\n     * @return a、b转化成数字的差值 (a-b)。\n     */\n    static sortNumSmallFirst(a: any, b: any): number {\n        return parseFloat(a) - parseFloat(b);\n    }\n\n    /**\n     * 返回根据对象指定的属性进行排序的比较函数。\n     * @param\tkey 排序要依据的元素属性名。\n     * @param\tbigFirst 如果值为true，则按照由大到小的顺序进行排序，否则按照由小到大的顺序进行排序。\n     * @param\tforceNum 如果值为true，则将排序的元素转为数字进行比较。\n     * @return 排序函数。\n     */\n    static sortByKey(key: string, bigFirst: boolean = false, forceNum: boolean = true): (a: any, b: any) => number {\n        var _sortFun: Function;\n        if (bigFirst) {\n            _sortFun = forceNum ? MathUtil.sortNumBigFirst : MathUtil.sortBigFirst;\n        } else {\n            _sortFun = forceNum ? MathUtil.sortNumSmallFirst : MathUtil.sortSmallFirst;\n        }\n        return function (a: any, b: any): number {\n            return _sortFun(a[key], b[key]);\n        }\n    }\n}\n\n\n","import { AnimationBase } from \"./AnimationBase\";\nimport { MathUtil } from \"../maths/MathUtil\"\nimport { Ease } from \"../utils/Ease\"\n\n/**\n * 动画播放完毕后调度。\n * @eventType Event.COMPLETE\n */\n/*[Event(name = \"complete\", type = \"laya.events.Event\")]*/\n\n/**\n * 播放到某标签后调度。\n * @eventType Event.LABEL\n */\n/*[Event(name = \"label\", type = \"laya.events.Event\")]*/\n/**\n * 节点关键帧动画播放类。解析播放IDE内制作的节点动画。\n */\nexport class FrameAnimation extends AnimationBase {\n\n    /**@private */\n    private static _sortIndexFun(objpre: any, objnext: any) {\n        return objpre.index - objnext.index\n    }\n\n    /**@internal id对象表*/\n    _targetDic: any;\n    /**@internal 动画数据*/\n    _animationData: any;\n    /**@private */\n    protected _usedFrames: any[];\n\n    constructor() {\n        super();\n        if (FrameAnimation._sortIndexFun === undefined) {\n            FrameAnimation._sortIndexFun = MathUtil.sortByKey(\"index\", false, true);\n        }\n    }\n\n    /**\n     * @internal\n     * 初始化动画数据\n     * @param targetDic 节点ID索引\n     * @param animationData 动画数据\n     */\n    _setUp(targetDic: any, animationData: any): void {\n        this._targetDic = targetDic;\n        this._animationData = animationData;\n        this.interval = 1000 / animationData.frameRate;\n        if (animationData.parsed) {\n            this._count = animationData.count;\n            this._labels = animationData.labels;\n            this._usedFrames = animationData.animationNewFrames;\n        } else {\n            this._usedFrames = [];\n            this._calculateDatas();\n\n            animationData.parsed = true;\n            animationData.labels = this._labels;\n            animationData.count = this._count;\n            animationData.animationNewFrames = this._usedFrames;\n        }\n    }\n\n    /**@inheritDoc \n     * @override\n    */\n    clear(): AnimationBase {\n        super.clear();\n        this._targetDic = null;\n        this._animationData = null;\n        return this;\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n     */\n    protected _displayToIndex(value: number): void {\n        if (!this._animationData) return;\n        if (value < 0) value = 0;\n        if (value > this._count) value = this._count;\n        var nodes: any[] = this._animationData.nodes, i: number, len: number = nodes.length;\n        for (i = 0; i < len; i++) {\n            this._displayNodeToFrame(nodes[i], value);\n        }\n    }\n\n    /**\n     * @private\n     * 将节点设置到某一帧的状态\n     * @param node 节点ID\n     * @param frame\n     * @param targetDic 节点表\n     */\n    protected _displayNodeToFrame(node: any, frame: number, targetDic: any = null): void {\n        if (!targetDic) targetDic = this._targetDic;\n        var target: any = targetDic[node.target];\n        if (!target) {\n            //trace(\"loseTarget:\",node.target);\n            return;\n        }\n        var frames: any = node.frames, key: string, propFrames: any[], value: any;\n        var keys: any[] = node.keys, i: number, len: number = keys.length;\n        for (i = 0; i < len; i++) {\n            key = keys[i];\n            propFrames = frames[key];\n            if (propFrames.length > frame) {\n                value = propFrames[frame];\n            } else {\n                value = propFrames[propFrames.length - 1];\n            }\n            target[key] = value;\n        }\n        var funkeys: any[] = node.funkeys;\n        len = funkeys.length;\n        var funFrames: any;\n        if (len == 0) return;\n        for (i = 0; i < len; i++) {\n            key = funkeys[i];\n            funFrames = frames[key];\n            if (funFrames[frame] !== undefined) {\n                target[key] && target[key].apply(target, funFrames[frame]);\n            }\n        }\n\n    }\n\n    /**\n     * @private\n     * 计算帧数据\n     */\n    private _calculateDatas(): void {\n        if (!this._animationData) return;\n        var nodes: any[] = this._animationData.nodes, i: number, len: number = nodes.length, tNode: any;\n        this._count = 0;\n        for (i = 0; i < len; i++) {\n            tNode = nodes[i];\n            this._calculateKeyFrames(tNode);\n        }\n        this._count += 1;\n    }\n\n    /**\n     * @private\n     * 计算某个节点的帧数据\n     */\n    protected _calculateKeyFrames(node: any): void {\n        var keyFrames: any = node.keyframes, key: string, tKeyFrames: any[], target: number = node.target;\n        if (!node.frames) node.frames = {};\n        if (!node.keys) node.keys = [];\n        else node.keys.length = 0;\n\n        if (!node.funkeys) node.funkeys = [];\n        else node.funkeys.length = 0;\n\n        if (!node.initValues) node.initValues = {};\n        for (key in keyFrames) {\n            var isFun: boolean = key.indexOf(\"()\") != -1;\n            tKeyFrames = keyFrames[key];\n            if (isFun) key = key.substr(0, key.length - 2);\n            if (!node.frames[key]) {\n                node.frames[key] = [];\n            }\n            if (!isFun) {\n                if (this._targetDic && this._targetDic[target]) {\n                    node.initValues[key] = this._targetDic[target][key];\n                }\n\n                tKeyFrames.sort(FrameAnimation._sortIndexFun);\n                node.keys.push(key);\n                this._calculateNodePropFrames(tKeyFrames, node.frames[key], key, target);\n            }\n            else {\n                node.funkeys.push(key);\n                var map: any[] = node.frames[key];\n                for (var i: number = 0; i < tKeyFrames.length; i++) {\n                    var temp: any = tKeyFrames[i];\n                    map[temp.index] = temp.value;\n                    if (temp.index > this._count) this._count = temp.index;\n                }\n            }\n\n        }\n    }\n\n    /**\n     * 重置节点，使节点恢复到动画之前的状态，方便其他动画控制\n     */\n    resetNodes(): void {\n        if (!this._targetDic) return;\n        if (!this._animationData) return;\n        var nodes: any[] = this._animationData.nodes, i: number, len: number = nodes.length;\n        var tNode: any;\n        var initValues: any;\n        for (i = 0; i < len; i++) {\n            tNode = nodes[i];\n            initValues = tNode.initValues;\n            if (!initValues) continue;\n            var target: any = this._targetDic[tNode.target];\n            if (!target) continue;\n            var key: string;\n            for (key in initValues) {\n                target[key] = initValues[key];\n            }\n        }\n    }\n\n    /**\n     * @private\n     * 计算节点某个属性的帧数据\n     */\n    private _calculateNodePropFrames(keyframes: any[], frames: any[], key: string, target: number): void {\n        var i: number, len: number = keyframes.length - 1;\n        frames.length = keyframes[len].index + 1;\n        for (i = 0; i < len; i++) {\n            this._dealKeyFrame(keyframes[i]);\n            this._calculateFrameValues(keyframes[i], keyframes[i + 1], frames);\n        }\n        if (len == 0) {\n            frames[0] = keyframes[0].value;\n            if (this._usedFrames) this._usedFrames[keyframes[0].index] = true;\n        }\n        this._dealKeyFrame(keyframes[i]);\n    }\n\n    /**\n     * @private\n     */\n    private _dealKeyFrame(keyFrame: any): void {\n        if (keyFrame.label && keyFrame.label != \"\") this.addLabel(keyFrame.label, keyFrame.index);\n    }\n\n    /**\n     * @private\n     * 计算两个关键帧直接的帧数据\n     */\n    private _calculateFrameValues(startFrame: any, endFrame: any, result: any[]): void {\n        var i: number, easeFun: Function;\n        var start: number = startFrame.index, end: number = endFrame.index;\n        var startValue: number = startFrame.value;\n        var dValue: number = endFrame.value - startFrame.value;\n        var dLen: number = end - start;\n        var frames: any[] = this._usedFrames;\n        if (end > this._count) this._count = end;\n        if (startFrame.tween) {\n            easeFun = (Ease as any)[startFrame.tweenMethod];\n            if (easeFun == null) easeFun = Ease.linearNone;\n            for (i = start; i < end; i++) {\n                result[i] = easeFun(i - start, startValue, dValue, dLen);\n                if (frames) frames[i] = true;\n            }\n        } else {\n            for (i = start; i < end; i++) {\n                result[i] = startValue;\n            }\n        }\n        if (frames) {\n            frames[startFrame.index] = true;\n            frames[endFrame.index] = true;\n        }\n        result[endFrame.index] = endFrame.value;\n    }\n}\n","import { FrameAnimation } from \"./FrameAnimation\"\nimport { Graphics } from \"./Graphics\"\nimport { Matrix } from \"../maths/Matrix\"\nimport { Loader } from \"../net/Loader\"\nimport { Texture } from \"../resource/Texture\"\n\n/**\n * Graphics动画解析器\n * @private\n */\nexport class GraphicAnimation extends FrameAnimation {\n    /**@private */\n    animationList: any[];\n    /**@private */\n    animationDic: any;\n    /**@private */\n    protected _nodeList: any[];\n    /**@private */\n    protected _nodeDefaultProps: any;\n    /**@private */\n    protected _gList: any[];\n    /**@private */\n    protected _nodeIDAniDic: any = {};\n\n    /**@private */\n    protected static _drawTextureCmd: any[] = [[\"skin\", null], [\"x\", 0], [\"y\", 0], [\"width\", -1], [\"height\", -1], [\"pivotX\", 0], [\"pivotY\", 0], [\"scaleX\", 1], [\"scaleY\", 1], [\"rotation\", 0], [\"alpha\", 1], [\"skewX\", 0], [\"skewY\", 0], [\"anchorX\", 0], [\"anchorY\", 0]];\n    /**@private */\n    protected static _temParam: any[] = [];\n    /**@private */\n    private static _I: GraphicAnimation;\n    /**@private */\n    private static _rootMatrix: Matrix;\n    /**@private */\n    private _rootNode: any;\n    /**@private */\n    protected _nodeGDic: any;\n\n    /**@private */\n    private _parseNodeList(uiView: any): void {\n        if (!this._nodeList) this._nodeList = [];\n        this._nodeDefaultProps[uiView.compId] = uiView.props;\n        if (uiView.compId) this._nodeList.push(uiView.compId);\n        var childs: any[] = uiView.child;\n        if (childs) {\n            var i: number, len: number = childs.length;\n            for (i = 0; i < len; i++) {\n                this._parseNodeList(childs[i]);\n            }\n        }\n    }\n\n    /**@private */\n    private _calGraphicData(aniData: any): void {\n        this._setUp(null, aniData);\n        this._createGraphicData();\n        if (this._nodeIDAniDic) {\n            var key: string;\n            for (key in this._nodeIDAniDic) {\n                this._nodeIDAniDic[key] = null;\n            }\n        }\n    }\n\n    /**@private */\n    private _createGraphicData(): void {\n        var gList: any[] = [];\n        var i: number, len: number = this.count;\n        var animationDataNew: any[] = this._usedFrames;\n        if (!animationDataNew) animationDataNew = [];\n        var preGraphic: Graphics;\n        for (i = 0; i < len; i++) {\n            if (animationDataNew[i] || !preGraphic) {\n                preGraphic = this._createFrameGraphic(i);\n            }\n            gList.push(preGraphic);\n        }\n        this._gList = gList;\n    }\n\n    /**@private */\n    protected _createFrameGraphic(frame: number): any {\n        var g: Graphics = new Graphics();\n        if (!GraphicAnimation._rootMatrix) GraphicAnimation._rootMatrix = new Matrix();\n        this._updateNodeGraphic(this._rootNode, frame, GraphicAnimation._rootMatrix, g);\n        //_updateNodeGraphic2(_rootNode, frame, g);\n        return g;\n    }\n\n    protected _updateNodeGraphic(node: any, frame: number, parentTransfrom: Matrix, g: Graphics, alpha: number = 1): void {\n        var tNodeG: GraphicNode;\n        tNodeG = this._nodeGDic[node.compId] = this._getNodeGraphicData(node.compId, frame, this._nodeGDic[node.compId]);\n        if (!tNodeG.resultTransform)\n            tNodeG.resultTransform = new Matrix();\n        var tResultTransform: Matrix;\n        tResultTransform = tNodeG.resultTransform;\n        Matrix.mul(tNodeG.transform, parentTransfrom, tResultTransform);\n        var tTex: Texture;\n        var tGraphicAlpha: number = tNodeG.alpha * alpha;\n        if (tGraphicAlpha < 0.01) return;\n        if (tNodeG.skin) {\n            tTex = this._getTextureByUrl(tNodeG.skin);\n            if (tTex) {\n                if (tResultTransform._checkTransform()) {\n                    g.drawTexture(tTex, 0, 0, tNodeG.width, tNodeG.height, tResultTransform, tGraphicAlpha);\n                    tNodeG.resultTransform = null;\n                } else {\n                    g.drawTexture(tTex, tResultTransform.tx, tResultTransform.ty, tNodeG.width, tNodeG.height, null, tGraphicAlpha);\n                }\n            }\n        }\n        var childs: any[] = node.child;\n        if (!childs) return;\n        var i: number, len: number;\n        len = childs.length;\n        for (i = 0; i < len; i++) {\n            this._updateNodeGraphic(childs[i], frame, tResultTransform, g, tGraphicAlpha);\n        }\n    }\n    /**\n     * @internal\n     * @param tNodeG \n     * @param g \n     */\n    protected _updateNoChilds(tNodeG: GraphicNode, g: Graphics): void {\n        if (!tNodeG.skin) return;\n        var tTex: Texture = this._getTextureByUrl(tNodeG.skin);\n        if (!tTex) return;\n        var tTransform: Matrix = tNodeG.transform;\n        tTransform._checkTransform();\n        var onlyTranslate: boolean;\n        onlyTranslate = !tTransform._bTransform;\n        if (!onlyTranslate) {\n            g.drawTexture(tTex, 0, 0, tNodeG.width, tNodeG.height, tTransform.clone(), tNodeG.alpha);\n        } else {\n            g.drawTexture(tTex, tTransform.tx, tTransform.ty, tNodeG.width, tNodeG.height, null, tNodeG.alpha);\n        }\n    }\n\n    protected _updateNodeGraphic2(node: any, frame: number, g: Graphics): void {\n        var tNodeG: GraphicNode;\n        tNodeG = this._nodeGDic[node.compId] = this._getNodeGraphicData(node.compId, frame, this._nodeGDic[node.compId]);\n        if (!node.child) {\n            this._updateNoChilds(tNodeG, g);\n            return;\n        }\n        var tTransform: Matrix = tNodeG.transform;\n        tTransform._checkTransform();\n        var onlyTranslate: boolean;\n        onlyTranslate = !tTransform._bTransform;\n        var hasTrans: boolean;\n        hasTrans = onlyTranslate && (tTransform.tx != 0 || tTransform.ty != 0);\n        var ifSave: boolean;\n        ifSave = (tTransform._bTransform) || tNodeG.alpha != 1;\n        if (ifSave) g.save();\n        if (tNodeG.alpha != 1) g.alpha(tNodeG.alpha);\n        if (!onlyTranslate) g.transform(tTransform.clone());\n        else if (hasTrans) g.translate(tTransform.tx, tTransform.ty);\n\n        var childs: any[] = node.child;\n        var tTex: Texture;\n        if (tNodeG.skin) {\n            tTex = this._getTextureByUrl(tNodeG.skin);\n            if (tTex) {\n                g.drawImage(tTex, 0, 0, tNodeG.width, tNodeG.height);\n            }\n        }\n\n        if (childs) {\n            var i: number, len: number;\n            len = childs.length;\n            for (i = 0; i < len; i++) {\n                this._updateNodeGraphic2(childs[i], frame, g);\n            }\n        }\n\n        if (ifSave) {\n            g.restore();\n        } else {\n            if (!onlyTranslate) {\n                g.transform(tTransform.clone().invert());\n            } else if (hasTrans) {\n                g.translate(-tTransform.tx, -tTransform.ty);\n            }\n        }\n    }\n\n    /**\n     * @private \n     * @override\n    */\n    protected _calculateKeyFrames(node: any): void {\n        super._calculateKeyFrames(node);\n        this._nodeIDAniDic[node.target] = node;\n    }\n\n    /**@private */\n    protected getNodeDataByID(nodeID: number): any {\n        return this._nodeIDAniDic[nodeID];\n    }\n\n    /**@private */\n    protected _getParams(obj: any, params: any[], frame: number, obj2: any): any[] {\n        var rst: any[] = GraphicAnimation._temParam;\n        rst.length = params.length;\n        var i: number, len: number = params.length;\n        for (i = 0; i < len; i++) {\n            rst[i] = this._getObjVar(obj, params[i][0], frame, params[i][1], obj2);\n        }\n        return rst;\n    }\n\n    /**@private */\n    private _getObjVar(obj: any, key: string, frame: number, noValue: any, obj2: any): any {\n        if (key in obj) {\n            var vArr: any[] = obj[key];\n            if (frame >= vArr.length) frame = vArr.length - 1;\n            return obj[key][frame];\n        }\n        if (key in obj2) {\n            return obj2[key];\n        }\n        return noValue;\n    }\n    /**\n     * @internal\n     * @param nodeID \n     * @param frame \n     * @param rst \n     */\n    protected _getNodeGraphicData(nodeID: number, frame: number, rst: GraphicNode): GraphicNode {\n        if (!rst)\n            rst = new GraphicNode();\n        if (!rst.transform) {\n            rst.transform = new Matrix();\n        } else {\n            rst.transform.identity();\n        }\n\n        var node: any = this.getNodeDataByID(nodeID);\n        if (!node) return rst;\n        var frameData: any = node.frames;\n        var params: any[] = this._getParams(frameData, GraphicAnimation._drawTextureCmd, frame, this._nodeDefaultProps[nodeID]);\n        var url: string = params[0];\n        var width: number, height: number;\n        var px: number = params[5], py: number = params[6];\n        var aX: number = params[13], aY: number = params[14];\n        var sx: number = params[7], sy: number = params[8];\n        var rotate: number = params[9];\n        var skewX: number = params[11], skewY: number = params[12]\n        width = params[3];\n        height = params[4];\n        if (width == 0 || height == 0) url = null;\n        if (width == -1) width = 0;\n        if (height == -1) height = 0;\n        var tex: Texture;\n        rst.skin = url;\n        rst.width = width;\n        rst.height = height;\n        if (url) {\n            tex = this._getTextureByUrl(url);\n            if (tex) {\n                if (!width)\n                    width = tex.sourceWidth;\n                if (!height)\n                    height = tex.sourceHeight;\n            } else {\n                console.warn(\"lost skin:\", url, \",you may load pics first\");\n            }\n        }\n\n        rst.alpha = params[10];\n\n        var m: Matrix = rst.transform;\n        if (aX != 0) {\n            px = aX * width;\n        }\n        if (aY != 0) {\n            py = aY * height;\n        }\n        if (px != 0 || py != 0) {\n            m.translate(-px, -py);\n        }\n        var tm: Matrix = null;\n        if (rotate || sx !== 1 || sy !== 1 || skewX || skewY) {\n            tm = GraphicAnimation._tempMt;\n            tm.identity();\n            tm._bTransform = true;\n            var skx: number = (rotate - skewX) * 0.0174532922222222; //laya.CONST.PI180;\n            var sky: number = (rotate + skewY) * 0.0174532922222222;\n            var cx: number = Math.cos(sky);\n            var ssx: number = Math.sin(sky);\n            var cy: number = Math.sin(skx);\n            var ssy: number = Math.cos(skx);\n            tm.a = sx * cx;\n            tm.b = sx * ssx;\n            tm.c = -sy * cy;\n            tm.d = sy * ssy;\n            tm.tx = tm.ty = 0;\n        }\n        if (tm) {\n            m = Matrix.mul(m, tm, m);\n        }\n\n        m.translate(params[1], params[2]);\n\n        return rst;\n    }\n    private static _tempMt: Matrix = new Matrix();\n\n    /**@private */\n    protected _getTextureByUrl(url: string): any {\n        return Loader.getRes(url);\n    }\n\n    /**@private */\n    setAniData(uiView: any, aniName: string = null): void {\n        if (uiView.animations) {\n            this._nodeDefaultProps = {};\n            this._nodeGDic = {};\n            if (this._nodeList) this._nodeList.length = 0;\n            this._rootNode = uiView;\n            this._parseNodeList(uiView);\n            var aniDic: any = {};\n            var anilist: any[] = [];\n            var animations: any[] = uiView.animations;\n            var i: number, len: number = animations.length;\n            var tAniO: any;\n            for (i = 0; i < len; i++) {\n                tAniO = animations[i];\n                this._labels = null;\n                if (aniName && aniName != tAniO.name) {\n                    continue;\n                }\n                if (!tAniO)\n                    continue;\n                try {\n                    this._calGraphicData(tAniO);\n                } catch (e) {\n                    console.warn(\"parse animation fail:\" + tAniO.name + \",empty animation created\");\n                    this._gList = [];\n                }\n                var frameO: any = {};\n                frameO.interval = 1000 / tAniO[\"frameRate\"];\n                frameO.frames = this._gList;\n                frameO.labels = this._labels;\n                frameO.name = tAniO.name;\n                anilist.push(frameO);\n                aniDic[tAniO.name] = frameO;\n            }\n            this.animationList = anilist;\n            this.animationDic = aniDic;\n        }\n        GraphicAnimation._temParam.length = 0;\n\n    }\n\n    parseByData(aniData: any): any {\n        var rootNode: any, aniO: any;\n        rootNode = aniData.nodeRoot;\n        aniO = aniData.aniO;\n        delete aniData.nodeRoot;\n        delete aniData.aniO;\n        this._nodeDefaultProps = {};\n        this._nodeGDic = {};\n        if (this._nodeList) this._nodeList.length = 0;\n        this._rootNode = rootNode;\n        this._parseNodeList(rootNode);\n        this._labels = null;\n        try {\n            this._calGraphicData(aniO);\n        } catch (e) {\n            console.warn(\"parse animation fail:\" + aniO.name + \",empty animation created\");\n            this._gList = [];\n        }\n        var frameO: any = aniData;\n        frameO.interval = 1000 / aniO[\"frameRate\"];\n        frameO.frames = this._gList;\n        frameO.labels = this._labels;\n        frameO.name = aniO.name;\n        return frameO;\n    }\n\n    /**@private */\n    setUpAniData(uiView: any): void {\n        if (uiView.animations) {\n            var aniDic: any = {};\n            var anilist: any[] = [];\n            var animations: any[] = uiView.animations;\n            var i: number, len: number = animations.length;\n            var tAniO: any;\n            for (i = 0; i < len; i++) {\n                tAniO = animations[i];\n                if (!tAniO) continue;\n                var frameO: any = {};\n                frameO.name = tAniO.name;\n                frameO.aniO = tAniO;\n                frameO.nodeRoot = uiView;\n                anilist.push(frameO);\n                aniDic[tAniO.name] = frameO;\n            }\n            this.animationList = anilist;\n            this.animationDic = aniDic;\n        }\n    }\n\n    /**@private */\n    protected _clear(): void {\n        this.animationList = null;\n        this.animationDic = null;\n        this._gList = null;\n        this._nodeGDic = null;\n    }\n\n    static parseAnimationByData(animationObject: any): any {\n        if (!GraphicAnimation._I) GraphicAnimation._I = new GraphicAnimation();\n        var rst: any;\n        rst = GraphicAnimation._I.parseByData(animationObject);\n        GraphicAnimation._I._clear();\n        return rst;\n    }\n\n    static parseAnimationData(aniData: any): any {\n        if (!GraphicAnimation._I) GraphicAnimation._I = new GraphicAnimation();\n        GraphicAnimation._I.setUpAniData(aniData);\n        var rst: any;\n        rst = {};\n        rst.animationList = GraphicAnimation._I.animationList;\n        rst.animationDic = GraphicAnimation._I.animationDic;\n        GraphicAnimation._I._clear();\n        return rst;\n    }\n}\n\n\n/**@internal */\nclass GraphicNode {\n    skin: string;\n    transform: Matrix;\n    resultTransform: Matrix;\n    width: number;\n    height: number;\n    alpha: number = 1;\n}\n","import { AnimationBase } from \"./AnimationBase\";\nimport { Graphics } from \"./Graphics\";\nimport { Loader } from \"../net/Loader\"\nimport { GraphicAnimation } from \"./GraphicAnimation\"\nimport { Handler } from \"../utils/Handler\"\nimport { Utils } from \"../utils/Utils\"\nimport { ILaya } from \"../../ILaya\";\nimport { AtlasResource } from \"../resource/AtlasResource\";\n\n/**\n * 动画播放完毕后调度。\n * @eventType Event.COMPLETE\n */\n/*[Event(name = \"complete\", type = \"laya.events.Event\")]*/\n\n/**\n * 播放到某标签后调度。\n * @eventType Event.LABEL\n */\n/*[Event(name = \"label\", type = \"laya.events.Event\")]*/\n\n/**\n * <p> <code>Animation</code> 是Graphics动画类。实现了基于Graphics的动画创建、播放、控制接口。</p>\n * <p>本类使用了动画模版缓存池，它以一定的内存开销来节省CPU开销，当相同的动画模版被多次使用时，相比于每次都创建新的动画模版，使用动画模版缓存池，只需创建一次，缓存之后多次复用，从而节省了动画模版创建的开销。</p>\n * <p>动画模版缓存池，以key-value键值对存储，key可以自定义，也可以从指定的配置文件中读取，value为对应的动画模版，是一个Graphics对象数组，每个Graphics对象对应一个帧图像，动画的播放实质就是定时切换Graphics对象。</p>\n * <p>使用set source、loadImages(...)、loadAtlas(...)、loadAnimation(...)方法可以创建动画模版。使用play(...)可以播放指定动画。</p>\n * @example <caption>以下示例代码，创建了一个 <code>Text</code> 实例。</caption>\n * package\n * {\n * \timport laya.display.Animation;\n * \timport laya.net.Loader;\n * \timport laya.utils.Handler;\n * \tpublic class Animation_Example\n * \t{\n * \t\tpublic function Animation_Example()\n * \t\t{\n * \t\t\tLaya.init(640, 800);//设置游戏画布宽高、渲染模式。\n * \t\t\tLaya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\n * \t\t\tinit();//初始化\n * \t\t}\n * \t\tprivate function init():void\n * \t\t{\n * \t\t\tvar animation:Animation = new Animation();//创建一个 Animation 类的实例对象 animation 。\n * \t\t\tanimation.loadAtlas(\"resource/ani/fighter.json\");//加载图集并播放\n * \t\t\tanimation.x = 200;//设置 animation 对象的属性 x 的值，用于控制 animation 对象的显示位置。\n * \t\t\tanimation.y = 200;//设置 animation 对象的属性 x 的值，用于控制 animation 对象的显示位置。\n * \t\t\tanimation.interval = 50;//设置 animation 对象的动画播放间隔时间，单位：毫秒。\n * \t\t\tanimation.play();//播放动画。\n * \t\t\tLaya.stage.addChild(animation);//将 animation 对象添加到显示列表。\n * \t\t}\n * \t}\n * }\n *\n * @example\n * Animation_Example();\n * function Animation_Example(){\n *     Laya.init(640, 800);//设置游戏画布宽高、渲染模式。\n *     Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\n *     init();//初始化\n * }\n * function init()\n * {\n *     var animation = new Laya.Animation();//创建一个 Animation 类的实例对象 animation 。\n *     animation.loadAtlas(\"resource/ani/fighter.json\");//加载图集并播放\n *     animation.x = 200;//设置 animation 对象的属性 x 的值，用于控制 animation 对象的显示位置。\n *     animation.y = 200;//设置 animation 对象的属性 x 的值，用于控制 animation 对象的显示位置。\n *     animation.interval = 50;//设置 animation 对象的动画播放间隔时间，单位：毫秒。\n *     animation.play();//播放动画。\n *     Laya.stage.addChild(animation);//将 animation 对象添加到显示列表。\n * }\n *\n * @example\n * import Animation = laya.display.Animation;\n * class Animation_Example {\n *     constructor() {\n *         Laya.init(640, 800);//设置游戏画布宽高、渲染模式。\n *         Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\n *         this.init();\n *     }\n *     private init(): void {\n *         var animation:Animation = new Laya.Animation();//创建一个 Animation 类的实例对象 animation 。\n *         animation.loadAtlas(\"resource/ani/fighter.json\");//加载图集并播放\n *         animation.x = 200;//设置 animation 对象的属性 x 的值，用于控制 animation 对象的显示位置。\n *         animation.y = 200;//设置 animation 对象的属性 x 的值，用于控制 animation 对象的显示位置。\n *         animation.interval = 50;//设置 animation 对象的动画播放间隔时间，单位：毫秒。\n *         animation.play();//播放动画。\n *         Laya.stage.addChild(animation);//将 animation 对象添加到显示列表。\n *     }\n * }\n * new Animation_Example();\n */\nexport class Animation extends AnimationBase {\n    /**\n     * <p>动画模版缓存池，以key-value键值对存储，key可以自定义，也可以从指定的配置文件中读取，value为对应的动画模版，是一个Graphics对象数组，每个Graphics对象对应一个帧图像，动画的播放实质就是定时切换Graphics对象。</p>\n     * <p>使用loadImages(...)、loadAtlas(...)、loadAnimation(...)、set source方法可以创建动画模版。使用play(...)可以播放指定动画。</p>\n     */\n    static framesMap: any = {};\n    /**@private */\n    protected _frames: any[];\n\n    private _source: string;\n\n    private _autoPlay = false;\n\n\n    /**\n     * 创建一个新的 <code>Animation</code> 实例。\n     */\n    constructor() {\n        super();\n        this._setControlNode(this);\n    }\n\n    /** @inheritDoc\n     *  @override\n     */\n    destroy(destroyChild: boolean = true): void {\n        this.stop();\n        super.destroy(destroyChild);\n        this._frames = null;\n        this._labels = null;\n    }\n\n    /**\n     * <p>开始播放动画。会在动画模版缓存池中查找key值为name的动画模版，存在则用此动画模版初始化当前序列帧， 如果不存在，则使用当前序列帧。</p>\n     * <p>play(...)方法被设计为在创建实例后的任何时候都可以被调用，调用后就处于播放状态，当相应的资源加载完毕、调用动画帧填充方法(set frames)或者将实例显示在舞台上时，会判断是否处于播放状态，如果是，则开始播放。</p>\n     * <p>配合wrapMode属性，可设置动画播放顺序类型。</p>\n     * @param\tstart\t（可选）指定动画播放开始的索引(int)或帧标签(String)。帧标签可以通过addLabel(...)和removeLabel(...)进行添加和删除。\n     * @param\tloop\t（可选）是否循环播放。\n     * @param\tname\t（可选）动画模板在动画模版缓存池中的key，也可认为是动画名称。如果name为空，则播放当前动画序列帧；如果不为空，则在动画模版缓存池中寻找key值为name的动画模版，如果存在则用此动画模版初始化当前序列帧并播放，如果不存在，则仍然播放当前动画序列帧；如果没有当前动画的帧数据，则不播放，但该实例仍然处于播放状态。\n     * @override\n     */\n    play(start: any = 0, loop: boolean = true, name: string = \"\"): void {\n        if (name) this._setFramesFromCache(name, true);\n        super.play(start, loop, name);\n    }\n\n    /**@private */\n    protected _setFramesFromCache(name: string, showWarn: boolean = false): boolean {\n        if (this._url) name = this._url + \"#\" + name;\n        if (name && Animation.framesMap[name]) {\n            var tAniO: any = Animation.framesMap[name];\n            if (tAniO instanceof Array) {\n                this._frames = Animation.framesMap[name];\n                this._count = this._frames.length;\n            } else {\n                if (tAniO.nodeRoot) {\n                    //如果动画数据未解析过,则先进行解析\n                    Animation.framesMap[name] = GraphicAnimation.parseAnimationByData(tAniO);\n                    tAniO = Animation.framesMap[name];\n                }\n                this._frames = tAniO.frames;\n                this._count = this._frames.length;\n                //如果读取的是动画配置信息，帧率按照动画设置的帧率播放\n                if (!this._frameRateChanged) this._interval = tAniO.interval;\n                this._labels = this._copyLabels(tAniO.labels);\n            }\n            return true;\n        } else {\n            if (showWarn) console.log(\"ani not found:\", name);\n        }\n        return false;\n    }\n\n    /**@private */\n    private _copyLabels(labels: any): any {\n        if (!labels) return null;\n        var rst: any;\n        rst = {};\n        var key: string;\n        for (key in labels) {\n            rst[key] = Utils.copyArray([], labels[key]);\n        }\n        return rst;\n    }\n\n    /**@private \n    *  @override\n    */\n    protected _frameLoop(): void {\n        if (this._visible && this._style.alpha > 0.01 && this._frames) {\n            super._frameLoop();\n        }\n    }\n\n    /**@private \n     * @override\n    */\n    protected _displayToIndex(value: number): void {\n        if (this._frames) this.graphics = this._frames[value];\n    }\n\n    /**\n     * 当前动画的帧图像数组。本类中，每个帧图像是一个Graphics对象，而动画播放就是定时切换Graphics对象的过程。\n     */\n    get frames(): any[] {\n        return this._frames;\n    }\n\n    set frames(value: any[]) {\n        this._frames = value;\n        if (value) {\n            this._count = value.length;\n            //if (_isPlaying) play(_index, loop, _actionName);\n            if (this._actionName) this._setFramesFromCache(this._actionName, true);\n            this.index = this._index;\n        }\n    }\n\n    /**\n     * <p>动画数据源。</p>\n     * <p>类型如下：<br/>\n     * 1. LayaAir IDE动画文件路径：使用此类型需要预加载所需的图集资源，否则会创建失败，如果不想预加载或者需要创建完毕的回调，请使用loadAnimation(...)方法；<br/>\n     * 2. 图集路径：使用此类型创建的动画模版不会被缓存到动画模版缓存池中，如果需要缓存或者创建完毕的回调，请使用loadAtlas(...)方法；<br/>\n     * 3. 图片路径集合：使用此类型创建的动画模版不会被缓存到动画模版缓存池中，如果需要缓存，请使用loadImages(...)方法。</p>\n     * @param value\t数据源。比如：图集：\"xx/a1.atlas\"；图片集合：\"a1.png,a2.png,a3.png\"；LayaAir IDE动画\"xx/a1.ani\"。\n     */\n    get source(): string {\n        return this._source;\n    }\n\n    set source(value: string) {\n        this._source = value;\n\n        if (!value)\n            this.clear();\n        else if (value.indexOf(\".ani\") > -1)\n            this.loadAnimation(value);\n        else if (value.startsWith(\"res://\") || value.indexOf(\".json\") > -1 || value.indexOf(\"als\") > -1 || value.indexOf(\"atlas\") > -1)\n            this.loadAtlas(value);\n        else\n            this.loadImages(value.split(\",\"));\n    }\n\n    /**\n     * 是否自动播放，默认为false。如果设置为true，则动画被创建并添加到舞台后自动播放。\n     */\n    set autoPlay(value: boolean) {\n        this._autoPlay = value;\n        if (value)\n            this.play();\n        else\n            this.stop();\n    }\n\n    get autoPlay() {\n        return this._autoPlay;\n    }\n\n    /**\n     * 停止动画播放，并清理对象属性。之后可存入对象池，方便对象复用。\n     * @override\n     */\n    clear(): AnimationBase {\n        super.clear();\n        this.stop();\n        this.graphics = null;\n        this._frames = null;\n        this._labels = null;\n        return this;\n    }\n\n    /**\n     * <p>根据指定的动画模版初始化当前动画序列帧。选择动画模版的过程如下：1. 动画模版缓存池中key为cacheName的动画模版；2. 如果不存在，则加载指定的图片集合并创建动画模版。注意：只有指定不为空的cacheName，才能将创建好的动画模版以此为key缓存到动画模版缓存池，否则不进行缓存。</p>\n     * <p>动画模版缓存池是以一定的内存开销来节省CPU开销，当相同的动画模版被多次使用时，相比于每次都创建新的动画模版，使用动画模版缓存池，只需创建一次，缓存之后多次复用，从而节省了动画模版创建的开销。</p>\n     * <p>因为返回值为Animation对象本身，所以可以使用如下语法：loadImages(...).loadImages(...).play(...);。</p>\n     * @param\turls\t\t图片路径集合。需要创建动画模版时，会以此为数据源。参数形如：[url1,url2,url3,...]。\n     * @param\tcacheName\t（可选）动画模板在动画模版缓存池中的key。如果此参数不为空，表示使用动画模版缓存池。如果动画模版缓存池中存在key为cacheName的动画模版，则使用此模版。否则，创建新的动画模版，如果cacheName不为空，则以cacheName为key缓存到动画模版缓存池中，如果cacheName为空，不进行缓存。\n     * @return \t返回Animation对象本身。\n     */\n    loadImages(urls: any[], cacheName: string = \"\"): Animation {\n        this._url = \"\";\n        if (!this._setFramesFromCache(cacheName)) {\n            this.frames = Animation.framesMap[cacheName] ? Animation.framesMap[cacheName] : Animation.createFrames(urls, cacheName);\n        }\n        if (!this._isPlaying && this._autoPlay)\n            this.play();\n        return this;\n    }\n\n    /**\n     * <p>根据指定的动画模版初始化当前动画序列帧。选择动画模版的过程如下：1. 动画模版缓存池中key为cacheName的动画模版；2. 如果不存在，则加载指定的图集并创建动画模版。</p>\n     * <p>注意：只有指定不为空的cacheName，才能将创建好的动画模版以此为key缓存到动画模版缓存池，否则不进行缓存。</p>\n     * <p>动画模版缓存池是以一定的内存开销来节省CPU开销，当相同的动画模版被多次使用时，相比于每次都创建新的动画模版，使用动画模版缓存池，只需创建一次，缓存之后多次复用，从而节省了动画模版创建的开销。</p>\n     * <p>因为返回值为Animation对象本身，所以可以使用如下语法：loadAtlas(...).loadAtlas(...).play(...);。</p>\n     * @param\turl\t\t\t图集路径。需要创建动画模版时，会以此为数据源。\n     * @param\tloaded\t\t（可选）使用指定图集初始化动画完毕的回调。\n     * @param\tcacheName\t（可选）动画模板在动画模版缓存池中的key。如果此参数不为空，表示使用动画模版缓存池。如果动画模版缓存池中存在key为cacheName的动画模版，则使用此模版。否则，创建新的动画模版，如果cacheName不为空，则以cacheName为key缓存到动画模版缓存池中，如果cacheName为空，不进行缓存。\n     * @return \t返回动画本身。\n     */\n    loadAtlas(url: string, loaded: Handler = null, cacheName: string = \"\"): Animation {\n        this._url = \"\";\n        if (!this._setFramesFromCache(cacheName)) {\n            let onLoaded = (loadUrl: string) => {\n                if (url === loadUrl) {\n                    this.frames = Animation.framesMap[cacheName] ? Animation.framesMap[cacheName] : Animation.createFrames(url, cacheName);\n                    if (!this._isPlaying && this._autoPlay)\n                        this.play();\n                    if (loaded) loaded.run();\n                }\n            }\n            if (Loader.getAtlas(url)) onLoaded(url);\n            else ILaya.loader.load(url, Handler.create(null, onLoaded, [url]), null, Loader.ATLAS);\n        }\n        return this;\n    }\n\n    /**\n     * <p>加载并解析由LayaAir IDE制作的动画文件，此文件中可能包含多个动画。默认帧率为在IDE中设计的帧率，如果调用过set interval，则使用此帧间隔对应的帧率。加载后创建动画模版，并缓存到动画模版缓存池，key \"url#动画名称\" 对应相应动画名称的动画模板，key \"url#\" 对应动画模版集合的默认动画模版。</p>\n     * <p>注意：如果调用本方法前，还没有预加载动画使用的图集，请将atlas参数指定为对应的图集路径，否则会导致动画创建失败。</p>\n     * <p>动画模版缓存池是以一定的内存开销来节省CPU开销，当相同的动画模版被多次使用时，相比于每次都创建新的动画模版，使用动画模版缓存池，只需创建一次，缓存之后多次复用，从而节省了动画模版创建的开销。</p>\n     * <p>因为返回值为Animation对象本身，所以可以使用如下语法：loadAnimation(...).loadAnimation(...).play(...);。</p>\n     * @param\turl \t动画文件路径。可由LayaAir IDE创建并发布。\n     * @param\tloaded\t（可选）使用指定动画资源初始化动画完毕的回调。\n     * @param\tatlas\t（可选）动画用到的图集地址（可选）。\n     * @return \t返回动画本身。\n     * @deprecated\n     */\n    loadAnimation(url: string, loaded: Handler = null, atlas: string = null): Animation {\n        this._url = url;\n        var _this: Animation = this;\n        if (!this._actionName) this._actionName = \"\";\n        if (!_this._setFramesFromCache(this._actionName)) {\n            if (!atlas || Loader.getAtlas(atlas)) {\n                this._loadAnimationData(url, loaded, atlas);\n            } else {\n                ILaya.loader.load(atlas, Handler.create(this, this._loadAnimationData, [url, loaded, atlas]), null, Loader.ATLAS)\n            }\n        } else {\n            _this._setFramesFromCache(this._actionName, true);\n            this.index = 0;\n            if (loaded) loaded.run();\n        }\n        return this;\n    }\n\n    /**@private */\n    private _loadAnimationData(url: string, loaded: Handler = null, atlas: string = null): void {\n        if (atlas && !Loader.getAtlas(atlas)) {\n            console.warn(\"atlas load fail:\" + atlas);\n            return;\n        }\n\n        ILaya.loader.fetch(url, \"json\").then(data => {\n            if (this._url !== url)\n                return;\n\n            if (!data) {\n                // 如果getRes失败了，有可能是相同的文件已经被删掉了，因为下面在用完后会立即删除\n                // 这时候可以取frameMap中去找，如果找到了，走正常流程。--王伟\n                if (Animation.framesMap[url + \"#\"]) {\n                    this._setFramesFromCache(this._actionName, true);\n                    this.index = 0;\n                    this._resumePlay();\n                    if (loaded) loaded.run();\n                }\n                return;\n            }\n\n            let tAniO: any;\n            if (!Animation.framesMap[url + \"#\"]) {\n                //此次解析仅返回动画数据，并不真正解析动画graphic数据\n                let aniData: any = GraphicAnimation.parseAnimationData(data);\n                if (!aniData) return;\n                //缓存动画数据\n                let aniList: any[] = aniData.animationList;\n                let len: number = aniList.length;\n                let defaultO: any;\n                for (let i = 0; i < len; i++) {\n                    tAniO = aniList[i];\n                    Animation.framesMap[url + \"#\" + tAniO.name] = tAniO;\n                    if (!defaultO) defaultO = tAniO;\n                }\n                if (defaultO) {\n                    Animation.framesMap[url + \"#\"] = defaultO;\n                    this._setFramesFromCache(this._actionName, true);\n                    this.index = 0;\n                }\n                this._resumePlay();\n            } else {\n                this._setFramesFromCache(this._actionName, true);\n                this.index = 0;\n                this._resumePlay();\n            }\n            if (loaded) loaded.run();\n        });\n    }\n\n    /**\n     * <p>创建动画模板，多个动画可共享同一份动画模板，而不必每次都创建一份新的，从而节省创建Graphics集合的开销。</p>\n     * @param\turl\t\t\t图集路径或者图片路径数组。如果是图集路径，需要相应图集已经被预加载，如果没有预加载，会导致创建失败。\n     * @param\tname\t\t动画模板在动画模版缓存池中的key。如果不为空，则以此为key缓存动画模板，否则不缓存。\n     * @return\t动画模板。\n     */\n    static createFrames(url: string | string[], name: string): any[] {\n        var arr: any[];\n        if (typeof (url) == 'string') {\n            var atlas: AtlasResource = Loader.getAtlas(<string>url);\n            if (atlas && atlas.frames.length) {\n                let frames = atlas.frames;\n                arr = [];\n                for (var i: number = 0, n: number = frames.length; i < n; i++) {\n                    var g: Graphics = new Graphics();\n                    g.drawImage(frames[i], 0, 0);\n                    arr.push(g);\n                }\n            }\n        } else if (url instanceof Array) {\n            arr = [];\n            for (i = 0, n = url.length; i < n; i++) {\n                g = new Graphics();\n                g.loadImage(url[i], 0, 0);\n                arr.push(g);\n            }\n        }\n        if (name) Animation.framesMap[name] = arr;\n        return arr;\n    }\n\n    /**\n     * <p>从动画模版缓存池中清除指定key值的动画数据。</p>\n     * <p>开发者在调用创建动画模版函数时，可以手动指定此值。而如果是由LayaAir IDE创建的动画集，解析后的key格式为：\"url#\"：表示动画集的默认动画模版，如果以此值为参数，会清除整个动画集数据；\"url#aniName\"：表示相应名称的动画模版。</p>\n     * @param key 动画模板在动画模版缓存池中的key。\n     */\n    static clearCache(key: string): void {\n        var cache: any = Animation.framesMap;\n        var val: string;\n        var key2: string = key + \"#\";\n        for (val in cache) {\n            if (val === key || val.indexOf(key2) === 0) {\n                delete Animation.framesMap[val];\n            }\n        }\n    }\n\n    /** @internal */\n    onAfterDeserialize(): void {\n        super.onAfterDeserialize();\n\n        if ((<any>this).images) {\n            if (!this._source)\n                this.loadImages((<any>this).images);\n            delete (<any>this).images;\n        }\n    }\n}\n\n","import { Texture } from \"../resource/Texture\"\nimport { Handler } from \"../utils/Handler\"\nimport { ILaya } from \"../../ILaya\";\nimport { Loader } from \"../net/Loader\";\nimport { Resource } from \"../resource/Resource\";\nimport { XML } from \"../html/XML\";\n\n/**\n * <code>BitmapFont</code> 是位图字体类，用于定义位图字体信息。\n * 字体制作及使用方法，请参考文章\n * @see http://ldc2.layabox.com/doc/?nav=ch-js-1-2-5\n */\nexport class BitmapFont extends Resource {\n    texture: Texture;\n    dict: Record<string, BMGlyph> = {};\n\n    padding: any[];\n\n    /**当前位图字体字号，使用时，如果字号和设置不同，并且autoScaleSize=true，则按照设置字号比率进行缩放显示。*/\n    fontSize: number = 12;\n    /**表示是否根据实际使用的字体大小缩放位图字体大小。*/\n    autoScaleSize: boolean = false;\n    tint: boolean = true;\n    maxWidth: number = 0;\n    lineHeight: number = 12;\n    letterSpacing = 0;\n\n    /**\n     * 通过指定位图字体文件路径，加载位图字体文件，加载完成后会自动解析。\n     * @param\tpath\t\t位图字体文件的路径。\n     * @param\tcomplete\t加载并解析完成的回调。\n     */\n    static loadFont(path: string, complete: Handler): void {\n        ILaya.loader.load(path, Loader.FONT).then(font => {\n            complete && complete.runWith(font);\n        });\n    }\n\n    constructor() {\n        super(false);\n    }\n\n    /**\n     * 解析字体文件。\n     * @param\txml\t\t\t字体文件XML。\n     * @param\ttexture\t\t字体的纹理。\n     */\n    parseFont(xml: XML, texture: Texture): void {\n        if (xml == null || texture == null) return;\n        this.texture = texture;\n        texture._addReference();\n\n        let scale: number = 1;\n        let info = xml.getNode(\"info\");\n        this.fontSize = info.getAttrInt(\"size\", 12);\n        this.autoScaleSize = info.getAttrBool(\"autoScaleSize\");\n        this.lineHeight = info.getAttrInt(\"lineHeight\", this.fontSize);\n        if (this.lineHeight == 0)\n            this.lineHeight = this.fontSize;\n\n        let padding: string = info.getAttrString(\"padding\", \"\");\n        let paddingArray: any[] = padding.split(\",\");\n        this.padding = [parseInt(paddingArray[0]), parseInt(paddingArray[1]), parseInt(paddingArray[2]), parseInt(paddingArray[3])];\n\n        let chars = xml.getNode(\"chars\")?.elements(\"char\") || [];\n        let maxWidth = 0;\n        let dict = this.dict;\n        for (let i = 0, n = chars.length; i < n; i++) {\n            let ct = chars[i];\n            let id = ct.getAttrInt(\"id\");\n\n            let xOffset = ct.getAttrInt(\"xoffset\") / scale;\n            let yOffset = ct.getAttrInt(\"yoffset\") / scale;\n            let advance = ct.getAttrInt(\"xadvance\") / scale;\n\n            let x = ct.getAttrInt(\"x\");\n            let y = ct.getAttrInt(\"y\");\n            let width = ct.getAttrInt(\"width\");\n            let height = ct.getAttrInt(\"height\");\n\n            let tex = Texture.create(texture, x, y, width, height, xOffset, yOffset);\n\n            if (advance == 0)\n                advance = width;\n            advance += this.letterSpacing;\n            maxWidth = Math.max(maxWidth, advance);\n\n            dict[id] = { x: 0, y: 0, width, height, advance, texture: tex };\n        }\n\n        if (maxWidth > 0)\n            this.maxWidth = maxWidth;\n        else\n            this.maxWidth = this.fontSize;\n\n        if (!dict[32]) //space\n            dict[32] = { x: 0, y: 0, advance: Math.floor(this.fontSize * 0.5) + this.letterSpacing };\n    }\n\n    /**\n     * 销毁位图字体，调用Text.unregisterBitmapFont 时，默认会销毁。\n     */\n    protected _disposeResource(): void {\n        if (this.texture) {\n            for (let k in this.dict) {\n                this.dict[k].texture?.destroy();\n            }\n            this.texture._removeReference();\n            this.dict = null;\n            this.texture = null;\n            this.padding = null;\n        }\n    }\n\n    /**\n     * 获取指定文本内容的宽度。\n     * @param\ttext 文本内容。\n     * @return  宽度。\n     */\n    getTextWidth(text: string, fontSize?: number): number {\n        let w = 0;\n        for (let i = 0, n = text.length; i < n; i++) {\n            let g = this.dict[text.charCodeAt(i)];\n            if (g) {\n                let scale = this.autoScaleSize ? (fontSize / this.fontSize) : 1;\n                w += Math.round(g.advance * scale);\n            }\n        }\n        return w;\n    }\n\n    /**\n     * 获取最大字符宽度。\n     */\n    getMaxWidth(fontSize?: number): number {\n        if (fontSize != null && this.autoScaleSize)\n            return Math.round(this.maxWidth * (fontSize / this.fontSize));\n        else\n            return this.maxWidth;\n    }\n\n    /**\n     * 获取最大字符高度。\n     */\n    getMaxHeight(fontSize?: number): number {\n        if (fontSize != null && this.autoScaleSize)\n            return Math.round(this.lineHeight * (fontSize / this.fontSize));\n        else\n            return this.lineHeight;\n    }\n}\n\nexport interface BMGlyph {\n    x?: number;\n    y?: number;\n    width?: number;\n    height?: number;\n    advance?: number;\n    texture?: Texture;\n}","import { FrameAnimation } from \"./FrameAnimation\";\nimport { ClassUtils } from \"../utils/ClassUtils\"\nimport { Ease } from \"../utils/Ease\"\n\n/**\n * <p> 动效模板。用于为指定目标对象添加动画效果。每个动效有唯一的目标对象，而同一个对象可以添加多个动效。 当一个动效开始播放时，其他动效会自动停止播放。</p>\n * <p> 可以通过LayaAir IDE创建。 </p>\n */\nexport class EffectAnimation extends FrameAnimation {\n    /**\n     * @private\n     * 动效开始事件。\n     */\n    private static EFFECT_BEGIN: string = \"effectbegin\";\n\n    /**@internal */\n    private _target: any;\n    /**@internal */\n    private _playEvent: string;\n    /**@internal */\n    private _initData: any = {};\n    /**@internal */\n    private _aniKeys: any[];\n    /**@internal */\n    private _effectClass: new () => any;\n\n    /**\n     * 本实例的目标对象。通过本实例控制目标对象的属性变化。\n     * @param v 指定的目标对象。\n     */\n    set target(v: any) {\n        if (this._target) this._target.off(EffectAnimation.EFFECT_BEGIN, this, this._onOtherBegin);\n        this._target = v;\n        if (this._target) this._target.on(EffectAnimation.EFFECT_BEGIN, this, this._onOtherBegin);\n        this._addEvent();\n    }\n\n    get target(): any {\n        return this._target;\n    }\n\n    /**@private */\n    private _onOtherBegin(effect: any): void {\n        if (effect === this) return;\n        this.stop();\n    }\n\n    /**\n     * 设置开始播放的事件。本实例会侦听目标对象的指定事件，触发后播放相应动画效果。\n     * @param event\n     */\n    set playEvent(event: string) {\n        this._playEvent = event;\n        if (!event) return;\n        this._addEvent();\n    }\n\n    /**@internal */\n    private _addEvent(): void {\n        if (!this._target || !this._playEvent) return;\n        this._setControlNode(this._target);\n        this._target.on(this._playEvent, this, this._onPlayAction);\n    }\n\n    /**@internal */\n    private _onPlayAction(): void {\n        this.play(0, false);\n    }\n    /**\n     * @param start \n     * @param loop \n     * @param name \n     * @override\n     */\n    play(start: any = 0, loop: boolean = true, name: string = \"\"): void {\n        if (!this._target)\n            return;\n        this._target.event(EffectAnimation.EFFECT_BEGIN, [this]);\n        this._recordInitData();\n        super.play(start, loop, name);\n    }\n\n    /**@private */\n    private _recordInitData(): void {\n        if (!this._aniKeys) return;\n        var i: number, len: number;\n        len = this._aniKeys.length;\n        var key: string;\n        for (i = 0; i < len; i++) {\n            key = this._aniKeys[i];\n            this._initData[key] = this._target[key];\n        }\n    }\n\n    /**\n     * 设置提供数据的类。\n     * @param classStr 类路径\n     */\n    set effectClass(classStr: string) {\n        this._effectClass = ClassUtils.getClass(classStr);\n        if (this._effectClass) {\n            var uiData: any = (this._effectClass as any)[\"uiView\"];\n            if (uiData) {\n                var aniData: any[] = uiData[\"animations\"];\n                if (aniData && aniData[0]) {\n                    var data: any = aniData[0];\n                    this._setUp({}, data);\n                    if (data.nodes && data.nodes[0]) {\n                        this._aniKeys = data.nodes[0].keys;\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * 设置动画数据。\n     * @param uiData\n     */\n    set effectData(uiData: any) {\n        if (uiData) {\n            var aniData: any[] = uiData[\"animations\"];\n            if (aniData && aniData[0]) {\n                var data: any = aniData[0];\n                this._setUp({}, data);\n                if (data.nodes && data.nodes[0]) {\n                    this._aniKeys = data.nodes[0].keys;\n                }\n            }\n        }\n    }\n\n    /**\n     * @internal\n    */\n    protected _displayToIndex(value: number): void {\n        if (!this._animationData) return;\n        if (value < 0) value = 0;\n        if (value > this._count) value = this._count;\n        var nodes: any[] = this._animationData.nodes, i: number, len: number = nodes.length;\n        len = len > 1 ? 1 : len;\n        for (i = 0; i < len; i++) {\n            this._displayNodeToFrame(nodes[i], value);\n        }\n    }\n\n    /**\n     * @override\n    */\n    protected _displayNodeToFrame(node: any, frame: number, targetDic: any = null): void {\n        if (!this._target) return;\n        var target: any = this._target;\n        var frames: any = node.frames, key: string, propFrames: any[], value: any;\n        var keys: any[] = node.keys, i: number, len: number = keys.length;\n        var secondFrames: any = node.secondFrames;\n        var tSecondFrame: number;\n        var easeFun: Function;\n        var tKeyFrames: any[];\n        var startFrame: any;\n        var endFrame: any;\n        for (i = 0; i < len; i++) {\n            key = keys[i];\n            propFrames = frames[key];\n            tSecondFrame = secondFrames[key];\n            if (tSecondFrame == -1) {\n                value = this._initData[key];\n            } else {\n                if (frame < tSecondFrame) {\n                    tKeyFrames = node.keyframes[key];\n                    startFrame = tKeyFrames[0];\n                    if (startFrame.tween) {\n                        easeFun = (Ease as any)[startFrame.tweenMethod];\n                        if (easeFun == null) easeFun = Ease.linearNone;\n                        endFrame = tKeyFrames[1];\n                        value = easeFun(frame, this._initData[key], endFrame.value - this._initData[key], endFrame.index);\n                    } else {\n                        value = this._initData[key];\n                    }\n\n                } else {\n                    if (propFrames.length > frame) value = propFrames[frame];\n                    else value = propFrames[propFrames.length - 1];\n                }\n            }\n            target[key] = value;\n        }\n    }\n\n    /**\n     * @internal\n    */\n    protected _calculateKeyFrames(node: any): void {\n        super._calculateKeyFrames(node);\n        var keyFrames: any = node.keyframes, key: string, tKeyFrames: any[], target: number = node.target;\n\n        var secondFrames: any = {};\n        node.secondFrames = secondFrames;\n        for (key in keyFrames) {\n            tKeyFrames = keyFrames[key];\n            if (tKeyFrames.length <= 1) secondFrames[key] = -1;\n            else secondFrames[key] = tKeyFrames[1].index;\n        }\n    }\n}","/**\n * 文本的样式类\n */\nexport class TextStyle {\n    /**字体*/\n    font: string;\n    /**字号*/\n    fontSize: number;\n    /**文字颜色*/\n    color: string;\n    /**是否为粗体*/\n    bold: boolean;\n    /**\n     * 表示使用此文本格式的文本是否为斜体。\n     * @default false\n     */\n    italic: boolean;\n\n    /**是否显示下划线*/\n    underline: boolean;\n    /**下划线颜色*/\n    underlineColor: string;\n\n    /**\n     * <p>表示使用此文本格式的文本段落的水平对齐方式。</p>\n     * @default  \"left\"\n     */\n    align: string;\n\n    /**\n     * <p>表示使用此文本格式的文本段落的垂直对齐方式。</p>\n     * @default  \"top\"\n     */\n    valign: string;\n\n    /**\n     * 图文混排时图片和文字的对齐方式。可选值是top,middle,bottom\n     */\n    alignItems: string;\n\n    /**\n     * <p>垂直行间距（以像素为单位）</p>\n     */\n    leading: number;\n\n    /**\n     * <p>描边宽度（以像素为单位）。</p>\n     * 默认值0，表示不描边。\n     * @default 0\n     */\n    stroke: number;\n    /**\n     * <p>描边颜色，以字符串表示。</p>\n     * @default \"#000000\";\n     */\n    strokeColor: string;\n\n    strikethrough: boolean;\n\n    constructor() {\n        this.font = \"\";\n        this.fontSize = 12;\n        this.color = \"#000000\";\n        this.bold = false;\n        this.italic = false;\n        this.underline = false;\n        this.underlineColor = null;\n        this.align = \"left\";\n        this.valign = \"top\";\n        this.alignItems = \"middle\";\n        this.leading = 2;\n        this.stroke = 0;\n        this.strokeColor = \"#000000\";\n    }\n}\n\n","import { XMLIterator } from \"./XMLIterator\";\nimport { XMLUtils } from \"./XMLUtils\";\nimport { IHtmlObject } from \"./IHtmlObject\";\nimport { TextStyle } from \"../display/css/TextStyle\";\nimport { Pool } from \"../utils/Pool\";\n\nexport enum HtmlElementType {\n    Text,\n    Link,\n    Image,\n    Input,\n    Select,\n    Object,\n\n    //internal\n    LinkEnd,\n}\n\nexport class HtmlElement {\n    public type: HtmlElementType;\n    public name: string;\n    public text: string;\n    public style: TextStyle;\n\n    public obj: IHtmlObject;\n    public space: number;\n\n    public _attrs: Record<string, any>;\n\n    public constructor() {\n        this.style = new TextStyle();\n    }\n\n    public getAttr(attrName: string): any {\n        if (this._attrs == null)\n            return null;\n\n        return this._attrs[attrName];\n    }\n\n    public setAttr(attrName: string, attrValue: any) {\n        if (this._attrs == null)\n            this._attrs = {};\n\n        this._attrs[attrName] = attrValue;\n    }\n\n    public getAttrString(attrName: string, defValue?: string) {\n        return XMLUtils.getString(this._attrs, attrName, defValue);\n    }\n\n    public getAttrInt(attrName: string, defValue?: number): number {\n        return XMLUtils.getInt(this._attrs, attrName, defValue);\n    }\n\n    public getAttrFloat(attrName: string, defValue?: number): number {\n        return XMLUtils.getFloat(this._attrs, attrName, defValue);\n    }\n\n    public getAttrBool(attrName: string, defValue?: boolean): boolean {\n        return XMLUtils.getBool(this._attrs, attrName, defValue);\n    }\n\n    public fetchAttributes() {\n        this._attrs = Object.assign({}, XMLIterator.attributes);\n    }\n\n    public reset() {\n        this.name = null;\n        this.text = null;\n        if (this.obj) {\n            this.obj.release();\n            Pool.recoverByClass(this.obj);\n            this.obj = null;\n        }\n        this._attrs = null;\n    }\n\n    static pool: Array<HtmlElement> = [];\n    static getFromPool(type: HtmlElementType): HtmlElement {\n        let ele: HtmlElement;\n        if (this.pool.length > 0)\n            ele = this.pool.pop();\n        else\n            ele = new HtmlElement();\n        ele.type = type;\n        if (ele.type != HtmlElementType.Text && !ele._attrs)\n            ele._attrs = {};\n        return ele;\n    }\n\n    static returnToPool(ele: HtmlElement | Array<HtmlElement>) {\n        if (Array.isArray(ele)) {\n            for (let e of ele)\n                e.reset();\n            this.pool.push(...ele);\n            ele.length = 0;\n        }\n        else {\n            ele.reset();\n            this.pool.push(ele);\n        }\n    }\n}","import { ILaya } from \"../../ILaya\";\nimport { Sprite } from \"../display/Sprite\";\nimport { Text } from \"../display/Text\";\nimport { Loader } from \"../net/Loader\";\nimport { HtmlElement } from \"./HtmlElement\";\nimport { IHtmlObject } from \"./IHtmlObject\";\n\nexport class HtmlImage implements IHtmlObject {\n    public readonly obj: Sprite;\n\n    private _owner: Text;\n    private _element: HtmlElement;\n\n    public constructor() {\n        this.obj = new Sprite();\n    }\n\n    public get element(): HtmlElement {\n        return this._element;\n    }\n\n    public get width(): number {\n        return this.obj.width;\n    }\n\n    public get height(): number {\n        return this.obj.height;\n    }\n\n    public create(owner: Text, element: HtmlElement): void {\n        this._owner = owner;\n        this._element = element;\n        this._owner.objContainer.addChild(this.obj);\n\n        let src = this._element.getAttrString(\"src\");\n        if (src)\n            this.loadTexture(src);\n    }\n\n    protected loadTexture(src: string) {\n        let width = this._element.getAttrInt(\"width\", -1);\n        let height = this._element.getAttrInt(\"height\", -1);\n        if (width != -1)\n            this.obj.width = width;\n        if (height != -1)\n            this.obj.height = height;\n\n        let tex = Loader.getRes(src);\n        if (tex) {\n            this.obj.texture = tex;\n            if (width == -1)\n                this.obj.width = tex.sourceWidth;\n            if (height == -1)\n                this.obj.height = tex.sourceHeight;\n        }\n        else {\n            ILaya.loader.load(src, { silent: true }).then(tex => {\n                if (this.obj.destroyed) return;\n                let w = this.obj.width;\n                let h = this.obj.height;\n                this.obj.texture = tex;\n                if (width == -1)\n                    this.obj.width = tex ? tex.sourceWidth : 0;\n                if (height == -1)\n                    this.obj.height = tex ? tex.sourceHeight : 0;\n                if (this._owner && (w != this.obj.width || h != this.obj.height))\n                    this._owner.refreshLayout();\n            });\n        }\n    }\n\n    public pos(x: number, y: number): void {\n        this.obj.pos(x, y);\n    }\n\n    public release(): void {\n        this.obj.removeSelf();\n        this.obj.offAll();\n        this.obj.texture = null;\n        this._owner = null;\n        this._element = null;\n    }\n\n    public destroy(): void {\n        this.obj.destroy();\n    }\n}","import { Sprite } from \"../display/Sprite\";\nimport { Text } from \"../display/Text\";\nimport { Event } from \"../events/Event\";\nimport { Rectangle } from \"../maths/Rectangle\";\nimport { IHitArea } from \"../utils/IHitArea\";\nimport { HtmlElement } from \"./HtmlElement\";\nimport { IHtmlObject } from \"./IHtmlObject\";\n\nexport class HtmlLink implements IHtmlObject, IHitArea {\n    private _owner: Text;\n    private _element: HtmlElement;\n    private _shape: Sprite;\n    private _rects: Array<Rectangle>;\n    private _rectCnt: number;\n\n    public constructor() {\n        this._shape = new Sprite();\n        this._shape.hitArea = this;\n        this._shape.on(Event.CLICK, () => {\n            this._owner.bubbleEvent(Event.LINK, this._element.getAttrString(\"href\"));\n        });\n\n        this._rects = [];\n        this._rectCnt = 0;\n    }\n\n    public get element(): HtmlElement {\n        return this._element;\n    }\n\n    public get width(): number {\n        return 0;\n    }\n\n    public get height(): number {\n        return 0;\n    }\n\n    public create(owner: Text, element: HtmlElement): void {\n        this._owner = owner;\n        this._element = element;\n        this._owner.objContainer.addChild(this._shape);\n    }\n\n    public resetArea() {\n        this._rectCnt = 0;\n    }\n\n    public addRect(x: number, y: number, width: number, height: number) {\n        let rect = this._rects[this._rectCnt];\n        if (!rect)\n            rect = this._rects[this._rectCnt] = new Rectangle();\n        this._rectCnt++;\n        rect.setTo(x, y, width, height);\n    }\n\n    public contains(x: number, y: number): boolean {\n        for (let i = 0; i < this._rectCnt; i++) {\n            if (this._rects[i].contains(x, y))\n                return true;\n        }\n        return false;\n    }\n\n    public pos(x: number, y: number): void {\n    }\n\n    public release(): void {\n        this._shape.removeSelf();\n        this._owner = null;\n        this._element = null;\n    }\n\n    public destroy(): void {\n        this._shape.destroy();\n    }\n}","import { ClassUtils } from \"../utils/ClassUtils\";\n\nexport class HtmlParseOptions {\n    public linkUnderline: boolean;\n    public linkColor: string;\n    public ignoreWhiteSpace: boolean;\n\n    public static defaultLinkUnderline: boolean = true;\n    public static defaultLinkColor: string = null;\n\n    public constructor() {\n        this.linkUnderline = HtmlParseOptions.defaultLinkUnderline;\n        this.linkColor = HtmlParseOptions.defaultLinkColor;\n    }\n}\n\nClassUtils.regClass(\"HtmlParseOptions\", HtmlParseOptions);","import { TextStyle } from \"../display/css/TextStyle\";\nimport { HtmlElement, HtmlElementType } from \"./HtmlElement\";\nimport { HtmlImage } from \"./HtmlImage\";\nimport { HtmlLink } from \"./HtmlLink\";\nimport { HtmlParseOptions } from \"./HtmlParseOptions\";\nimport { IHtmlObject } from \"./IHtmlObject\";\nimport { XMLIterator, XMLTagType } from \"./XMLIterator\";\nimport { XMLUtils } from \"./XMLUtils\";\n\nconst s_list1 = new Array<string>();\nconst s_list2 = new Array<string>();\n\nexport class HtmlParser {\n    static defaultParser: HtmlParser = new HtmlParser();\n\n    static classMap: Record<number, new () => IHtmlObject> = {\n        [HtmlElementType.Image]: HtmlImage,\n        [HtmlElementType.Link]: HtmlLink\n    };\n\n    protected _styleStack: Array<TextStyle>;\n    protected _styleStackTop: number;\n    protected _style: TextStyle;\n    protected _elements: Array<HtmlElement>;\n    protected _options: HtmlParseOptions;\n\n    public constructor() {\n        this._styleStack = new Array<TextStyle>();\n        this._style = new TextStyle();\n        this._options = new HtmlParseOptions();\n    }\n\n    public parse(aSource: string, style: TextStyle, out: Array<HtmlElement>, options?: HtmlParseOptions): void {\n        if (options == null)\n            options = this._options;\n\n        this._elements = out;\n        this._styleStackTop = 0;\n        Object.assign(this._style, style);\n        (<any>this._style).colorChanged = false;\n        let skipText: number = 0;\n        let ignoreWhiteSpace: boolean = options.ignoreWhiteSpace;\n        let skipNextCR: boolean = false;\n        let text: string\n\n        XMLIterator.begin(aSource, true);\n        while (XMLIterator.nextTag()) {\n            if (skipText == 0) {\n                text = XMLIterator.getText(ignoreWhiteSpace);\n                if (text.length > 0) {\n                    if (skipNextCR && text[0] == '\\n')\n                        text = text.substring(1);\n                    this.appendText(text);\n                }\n            }\n\n            skipNextCR = false;\n            switch (XMLIterator.tagName) {\n                case \"b\":\n                    if (XMLIterator.tagType == XMLTagType.Start) {\n                        this.pushStyle();\n                        this._style.bold = true;\n                    }\n                    else\n                        this.popStyle();\n                    break;\n\n                case \"i\":\n                    if (XMLIterator.tagType == XMLTagType.Start) {\n                        this.pushStyle();\n                        this._style.italic = true;\n                    }\n                    else\n                        this.popStyle();\n                    break;\n\n                case \"u\":\n                    if (XMLIterator.tagType == XMLTagType.Start) {\n                        this.pushStyle();\n                        this._style.underline = true;\n                    }\n                    else\n                        this.popStyle();\n                    break;\n\n                case \"strike\":\n                    if (XMLIterator.tagType == XMLTagType.Start) {\n                        this.pushStyle();\n                        this._style.strikethrough = true;\n                    }\n                    else\n                        this.popStyle();\n                    break;\n\n                // case \"sub\":\n                //     {\n                //         if (XMLIterator.tagType == XMLTagType.Start) {\n                //             this.pushTextFormat();\n                //             this._format.specialStyle = TextFormat.SpecialStyle.Subscript;\n                //         }\n                //         else\n                //             this.popTextFormat();\n                //     }\n                //     break;\n\n                // case \"sup\":\n                //     {\n                //         if (XMLIterator.tagType == XMLTagType.Start) {\n                //             this.pushTextFormat();\n                //             this._format.specialStyle = TextFormat.SpecialStyle.Superscript;\n                //         }\n                //         else\n                //             this.popTextFormat();\n                //     }\n                //     break;\n\n                case \"font\":\n                    if (XMLIterator.tagType == XMLTagType.Start) {\n                        this.pushStyle();\n\n                        this._style.fontSize = XMLUtils.getInt(XMLIterator.attributes, \"size\", this._style.fontSize);\n                        let color: string = XMLIterator.getAttribute(\"color\");\n                        if (color != null) {\n                            this._style.color = color;\n                            (<any>this._style).colorChanged = true;\n                        }\n                    }\n                    else if (XMLIterator.tagType == XMLTagType.End)\n                        this.popStyle();\n                    break;\n\n                case \"br\":\n                    this.appendText(\"\\n\");\n                    break;\n\n                case \"img\":\n                    if (XMLIterator.tagType == XMLTagType.Start || XMLIterator.tagType == XMLTagType.Void) {\n                        let element: HtmlElement = HtmlElement.getFromPool(HtmlElementType.Image);\n                        element.fetchAttributes();\n                        element.name = element.getAttrString(\"name\");\n                        element.style.align = this._style.align;\n                        element.style.underline = this._style.underline;\n                        element.style.underlineColor = this._style.underlineColor;\n                        this._elements.push(element);\n                    }\n                    break;\n\n                case \"a\":\n                    if (XMLIterator.tagType == XMLTagType.Start) {\n                        this.pushStyle();\n\n                        this._style.underline = this._style.underline || options.linkUnderline;\n                        if (!(<any>this._style).colorChanged && options.linkColor != null)\n                            this._style.color = options.linkColor;\n\n                        let element = HtmlElement.getFromPool(HtmlElementType.Link);\n                        element.fetchAttributes();\n                        element.name = element.getAttrString(\"name\");\n                        element.style.align = this._style.align;\n                        this._elements.push(element);\n                    }\n                    else if (XMLIterator.tagType == XMLTagType.End) {\n                        this.popStyle();\n\n                        let element = HtmlElement.getFromPool(HtmlElementType.LinkEnd);\n                        this._elements.push(element);\n                    }\n                    break;\n\n                case \"input\":\n                    {\n                        let element = HtmlElement.getFromPool(HtmlElementType.Input);\n                        element.fetchAttributes();\n                        element.name = element.getAttrString(\"name\");\n                        Object.assign(element.style, this._style);\n                        this._elements.push(element);\n                    }\n                    break;\n\n                case \"select\":\n                    {\n                        if (XMLIterator.tagType == XMLTagType.Start || XMLIterator.tagType == XMLTagType.Void) {\n                            let element = HtmlElement.getFromPool(HtmlElementType.Select);\n                            element.fetchAttributes();\n                            if (XMLIterator.tagType == XMLTagType.Start) {\n                                s_list1.length = 0;\n                                s_list2.length = 0;\n                                while (XMLIterator.nextTag()) {\n                                    if (XMLIterator.tagName == \"select\")\n                                        break;\n\n                                    if (XMLIterator.tagName == \"option\") {\n                                        if (XMLIterator.tagType == XMLTagType.Start || XMLIterator.tagType == XMLTagType.Void)\n                                            s_list2.push(XMLUtils.getString(XMLIterator.attributes, \"value\", \"\"));\n                                        else\n                                            s_list1.push(XMLIterator.getText());\n                                    }\n                                }\n                                element.setAttr(\"items\", s_list1.slice());\n                                element.setAttr(\"values\", s_list2.slice());\n                            }\n                            element.name = element.getAttrString(\"name\");\n                            Object.assign(element.style, this._style);\n                            this._elements.push(element);\n                        }\n                    }\n                    break;\n\n                case \"p\":\n                    if (XMLIterator.tagType == XMLTagType.Start) {\n                        this.pushStyle();\n                        this._style.align = XMLIterator.getAttribute(\"align\");\n                        if (!this.isNewLine())\n                            this.appendText(\"\\n\");\n                    }\n                    else if (XMLIterator.tagType == XMLTagType.End) {\n                        this.appendText(\"\\n\");\n                        skipNextCR = true;\n\n                        this.popStyle();\n                    }\n                    break;\n\n                case \"ui\":\n                case \"div\":\n                case \"li\":\n                    if (XMLIterator.tagType == XMLTagType.Start) {\n                        if (!this.isNewLine())\n                            this.appendText(\"\\n\");\n                    }\n                    else {\n                        this.appendText(\"\\n\");\n                        skipNextCR = true;\n                    }\n                    break;\n\n                case \"html\":\n                case \"body\":\n                    //full html\n                    ignoreWhiteSpace = true;\n                    break;\n\n                case \"head\":\n                case \"style\":\n                case \"script\":\n                case \"form\":\n                    if (XMLIterator.tagType == XMLTagType.Start)\n                        skipText++;\n                    else if (XMLIterator.tagType == XMLTagType.End)\n                        skipText--;\n                    break;\n            }\n        }\n\n        if (skipText == 0) {\n            text = XMLIterator.getText(ignoreWhiteSpace);\n            if (text.length > 0) {\n                if (skipNextCR && text[0] == '\\n')\n                    text = text.substring(1);\n                this.appendText(text);\n            }\n        }\n\n        this._elements = null;\n    }\n\n    protected pushStyle() {\n        let tf: TextStyle;\n        if (this._styleStack.length <= this._styleStackTop) {\n            tf = new TextStyle();\n            this._styleStack.push(tf);\n        }\n        else\n            tf = this._styleStack[this._styleStackTop];\n        Object.assign(tf, this._style);\n        this._styleStackTop++;\n    }\n\n    protected popStyle() {\n        if (this._styleStackTop > 0) {\n            let tf = this._styleStack[this._styleStackTop - 1];\n            Object.assign(this._style, tf);\n            this._styleStackTop--;\n        }\n    }\n\n    protected isNewLine(): boolean {\n        if (this._elements.length > 0) {\n            let element: HtmlElement = this._elements[this._elements.length - 1];\n            if (element && element.type == HtmlElementType.Text)\n                return element.text.endsWith(\"\\n\");\n            else\n                return false;\n        }\n\n        return true;\n    }\n\n    protected appendText(text: string) {\n        let element: HtmlElement;\n        if (this._elements.length > 0) {\n            element = this._elements[this._elements.length - 1];\n            if (element.type == HtmlElementType.Text && equalStyle(element.style, this._style)) {\n                element.text += text;\n                return;\n            }\n        }\n\n        element = HtmlElement.getFromPool(HtmlElementType.Text);\n        element.text = text;\n        Object.assign(element.style, this._style);\n        this._elements.push(element);\n    }\n}\n\nfunction equalStyle(s1: TextStyle, s2: TextStyle) {\n    for (let k in s1) {\n        if (!k.startsWith(\"_\") && (<any>s1)[k] != (<any>s2)[k])\n            return false;\n    }\n    return true;\n}\n","export interface ITagHandler {\n    (tagName: string, end: boolean, attr: string): string;\n}\n\nexport class UBBParser {\n    static defaultParser: UBBParser = new UBBParser();\n\n    private _text: string;\n    private _readPos: number = 0;\n\n    protected _handlers: Record<string, ITagHandler>;\n\n    public defaultImgWidth: number = 0;\n    public defaultImgHeight: number = 0;\n    public lastColor: string;\n    public lastSize: string;\n\n    constructor() {\n        this._handlers = {};\n        this._handlers[\"url\"] = this.onTag_URL;\n        this._handlers[\"img\"] = this.onTag_IMG;\n        this._handlers[\"b\"] = this.onTag_B;\n        this._handlers[\"i\"] = this.onTag_I;\n        this._handlers[\"u\"] = this.onTag_U;\n        this._handlers[\"sup\"] = this.onTag_Simple;\n        this._handlers[\"sub\"] = this.onTag_Simple;\n        this._handlers[\"color\"] = this.onTag_COLOR;\n        this._handlers[\"font\"] = this.onTag_FONT;\n        this._handlers[\"size\"] = this.onTag_SIZE;\n    }\n\n    protected onTag_URL(tagName: string, end: boolean, attr: string): string {\n        if (!end) {\n            if (attr != null)\n                return \"<a href=\\\"\" + attr + \"\\\">\";\n            else {\n                var href: string = this.getTagText();\n                return \"<a href=\\\"\" + href + \"\\\">\";\n            }\n        }\n        else\n            return \"</a>\";\n    }\n\n    protected onTag_IMG(tagName: string, end: boolean, attr: string): string {\n        if (!end) {\n            var src: string = this.getTagText(true);\n            if (!src)\n                return null;\n\n            if (this.defaultImgWidth)\n                return \"<img src=\\\"\" + src + \"\\\" width=\\\"\" + this.defaultImgWidth + \"\\\" height=\\\"\" + this.defaultImgHeight + \"\\\"/>\";\n            else\n                return \"<img src=\\\"\" + src + \"\\\"/>\";\n        }\n        else\n            return null;\n    }\n\n    protected onTag_B(tagName: string, end: boolean, attr: string): string {\n        return end ? (\"</b>\") : (\"<b>\");\n    }\n\n    protected onTag_I(tagName: string, end: boolean, attr: string): string {\n        return end ? (\"</i>\") : (\"<i>\");\n    }\n\n    protected onTag_U(tagName: string, end: boolean, attr: string): string {\n        return end ? (\"</u>\") : (\"<u>\");\n    }\n\n    protected onTag_Simple(tagName: string, end: boolean, attr: string): string {\n        return end ? (\"</\" + tagName + \">\") : (\"<\" + tagName + \">\");\n    }\n\n    protected onTag_COLOR(tagName: string, end: boolean, attr: string): string {\n        if (!end) {\n            this.lastColor = attr;\n            return \"<font color=\\\"\" + attr + \"\\\">\";\n        }\n        else\n            return \"</font>\";\n    }\n\n    protected onTag_FONT(tagName: string, end: boolean, attr: string): string {\n        if (!end)\n            return \"<font face=\\\"\" + attr + \"\\\">\";\n        else\n            return \"</font>\";\n    }\n\n    protected onTag_SIZE(tagName: string, end: boolean, attr: string): string {\n        if (!end) {\n            this.lastSize = attr;\n            return \"<font size=\\\"\" + attr + \"\\\">\";\n        }\n        else\n            return \"</font>\";\n    }\n\n    protected getTagText(remove?: boolean): string {\n        var pos1: number = this._readPos;\n        var pos2: number;\n        var result: string = \"\";\n        while ((pos2 = this._text.indexOf(\"[\", pos1)) != -1) {\n            if (this._text.charCodeAt(pos2 - 1) == 92)//\\\n            {\n                result += this._text.substring(pos1, pos2 - 1);\n                result += \"[\";\n                pos1 = pos2 + 1;\n            }\n            else {\n                result += this._text.substring(pos1, pos2);\n                break;\n            }\n        }\n        if (pos2 == -1)\n            return null;\n\n        if (remove)\n            this._readPos = pos2;\n\n        return result;\n    }\n\n    public parse(text: string, remove?: boolean): string {\n        this._text = text;\n        this.lastColor = null;\n        this.lastSize = null;\n\n        var pos1: number = 0, pos2: number, pos3: number;\n        var end: boolean;\n        var tag: string, attr: string;\n        var repl: string;\n        var func: Function;\n        var result: string = \"\";\n        while ((pos2 = text.indexOf(\"[\", pos1)) != -1) {\n            if (pos2 > 0 && text.charCodeAt(pos2 - 1) == 92)//\\\n            {\n                result += text.substring(pos1, pos2 - 1);\n                result += \"[\";\n                pos1 = pos2 + 1;\n                continue;\n            }\n\n            result += text.substring(pos1, pos2);\n            pos1 = pos2;\n            pos2 = text.indexOf(\"]\", pos1);\n            if (pos2 == -1)\n                break;\n\n            end = text.charAt(pos1 + 1) == '/';\n            tag = text.substring(end ? pos1 + 2 : pos1 + 1, pos2);\n            this._readPos = pos2 + 1;\n            attr = null;\n            repl = null;\n            pos3 = tag.indexOf(\"=\");\n            if (pos3 != -1) {\n                attr = tag.substring(pos3 + 1);\n                tag = tag.substring(0, pos3);\n            }\n            tag = tag.toLowerCase();\n            func = this._handlers[tag];\n            if (func != null) {\n                if (!remove) {\n                    repl = func.call(this, tag, end, attr);\n                    if (repl != null)\n                        result += repl;\n                }\n            }\n            else\n                result += text.substring(pos1, this._readPos);\n            pos1 = this._readPos;\n        }\n\n        if (pos1 < text.length)\n            result += text.substring(pos1);\n\n        this._text = null;\n\n        return result;\n    }\n}","import { Sprite } from \"./Sprite\";\nimport { BitmapFont } from \"./BitmapFont\";\nimport { TextStyle } from \"./css/TextStyle\"\nimport { Event } from \"../events/Event\"\nimport { Point } from \"../maths/Point\"\nimport { Rectangle } from \"../maths/Rectangle\"\nimport { WordText } from \"../utils/WordText\"\nimport { ILaya } from \"../../ILaya\";\nimport { LayaEnv } from \"../../LayaEnv\";\nimport { Config } from \"../../Config\";\nimport { Utils } from \"../utils/Utils\";\nimport { DrawRectCmd } from \"./cmd/DrawRectCmd\";\nimport { HtmlElement, HtmlElementType } from \"../html/HtmlElement\";\nimport { HtmlLink } from \"../html/HtmlLink\";\nimport { Pool } from \"../utils/Pool\";\nimport { IHtmlObject } from \"../html/IHtmlObject\";\nimport { HideFlags } from \"../Const\";\nimport { HtmlParser } from \"../html/HtmlParser\";\nimport { UBBParser } from \"../html/UBBParser\";\nimport { HtmlParseOptions } from \"../html/HtmlParseOptions\";\n\n/**\n * 文本内容发生改变后调度。\n * @eventType Event.CHANGE\n */\n/*[Event(name = \"change\", type = \"laya.events.Event\")]*/\n\n/**\n * <p> <code>Text</code> 类用于创建显示对象以显示文本。</p>\n * <p>\n * 注意：如果运行时系统找不到设定的字体，则用系统默认的字体渲染文字，从而导致显示异常。(通常电脑上显示正常，在一些移动端因缺少设置的字体而显示异常)。\n * </p>\n * @example\n * package\n * {\n * \timport laya.display.Text;\n * \tpublic class Text_Example\n * \t{\n * \t\tpublic function Text_Example()\n * \t\t{\n * \t\t\tLaya.init(640, 800);//设置游戏画布宽高、渲染模式。\n * \t\t\tLaya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\n * \t\t\tonInit();\n * \t\t}\n * \t\tprivate function onInit():void\n * \t\t{\n * \t\t\tvar text:Text = new Text();//创建一个 Text 类的实例对象 text 。\n * \t\t\ttext.text = \"这个是一个 Text 文本示例。\";\n * \t\t\ttext.color = \"#008fff\";//设置 text 的文本颜色。\n * \t\t\ttext.font = \"Arial\";//设置 text 的文本字体。\n * \t\t\ttext.bold = true;//设置 text 的文本显示为粗体。\n * \t\t\ttext.fontSize = 30;//设置 text 的字体大小。\n * \t\t\ttext.wordWrap = true;//设置 text 的文本自动换行。\n * \t\t\ttext.x = 100;//设置 text 对象的属性 x 的值，用于控制 text 对象的显示位置。\n * \t\t\ttext.y = 100;//设置 text 对象的属性 y 的值，用于控制 text 对象的显示位置。\n * \t\t\ttext.width = 300;//设置 text 的宽度。\n * \t\t\ttext.height = 200;//设置 text 的高度。\n * \t\t\ttext.italic = true;//设置 text 的文本显示为斜体。\n * \t\t\ttext.borderColor = \"#fff000\";//设置 text 的文本边框颜色。\n * \t\t\tLaya.stage.addChild(text);//将 text 添加到显示列表。\n * \t\t}\n * \t}\n * }\n * @example\n * Text_Example();\n * function Text_Example()\n * {\n *     Laya.init(640, 800);//设置游戏画布宽高、渲染模式。\n *     Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\n *     onInit();\n * }\n * function onInit()\n * {\n *     var text = new laya.display.Text();//创建一个 Text 类的实例对象 text 。\n *     text.text = \"这个是一个 Text 文本示例。\";\n *     text.color = \"#008fff\";//设置 text 的文本颜色。\n *     text.font = \"Arial\";//设置 text 的文本字体。\n *     text.bold = true;//设置 text 的文本显示为粗体。\n *     text.fontSize = 30;//设置 text 的字体大小。\n *     text.wordWrap = true;//设置 text 的文本自动换行。\n *     text.x = 100;//设置 text 对象的属性 x 的值，用于控制 text 对象的显示位置。\n *     text.y = 100;//设置 text 对象的属性 y 的值，用于控制 text 对象的显示位置。\n *     text.width = 300;//设置 text 的宽度。\n *     text.height = 200;//设置 text 的高度。\n *     text.italic = true;//设置 text 的文本显示为斜体。\n *     text.borderColor = \"#fff000\";//设置 text 的文本边框颜色。\n *     Laya.stage.addChild(text);//将 text 添加到显示列表。\n * }\n * @example\n * class Text_Example {\n *     constructor() {\n *         Laya.init(640, 800);//设置游戏画布宽高、渲染模式。\n *         Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\n *         this.onInit();\n *     }\n *     private onInit(): void {\n *         var text: laya.display.Text = new laya.display.Text();//创建一个 Text 类的实例对象 text 。\n *         text.text = \"这个是一个 Text 文本示例。\";\n *         text.color = \"#008fff\";//设置 text 的文本颜色。\n *         text.font = \"Arial\";//设置 text 的文本字体。\n *         text.bold = true;//设置 text 的文本显示为粗体。\n *         text.fontSize = 30;//设置 text 的字体大小。\n *         text.wordWrap = true;//设置 text 的文本自动换行。\n *         text.x = 100;//设置 text 对象的属性 x 的值，用于控制 text 对象的显示位置。\n *         text.y = 100;//设置 text 对象的属性 y 的值，用于控制 text 对象的显示位置。\n *         text.width = 300;//设置 text 的宽度。\n *         text.height = 200;//设置 text 的高度。\n *         text.italic = true;//设置 text 的文本显示为斜体。\n *         text.borderColor = \"#fff000\";//设置 text 的文本边框颜色。\n *         Laya.stage.addChild(text);//将 text 添加到显示列表。\n *     }\n * }\n */\nexport class Text extends Sprite {\n\n    /**visible不进行任何裁切。*/\n    static VISIBLE: string = \"visible\";\n    /**scroll 不显示文本域外的字符像素，并且支持 scroll 接口。*/\n    static SCROLL: string = \"scroll\";\n    /**hidden 不显示超出文本域的字符。*/\n    static HIDDEN: string = \"hidden\";\n    /**shrink 超出文本域时，文本整体缩小以适应文本框。*/\n    static SHRINK: string = \"shrink\";\n    /**ellipsis 超出文本域时，文本被截断，并且文本最后显示省略号。*/\n    static ELLIPSIS: string = \"ellipsis\";\n\n    /**语言包，是一个包含key:value的集合，用key索引，替换为目标value语言*/\n    static langPacks: Record<string, string>;\n    /**是否是从右向左的显示顺序*/\n    static RightToLeft: boolean = false;\n\n    /**@internal 预测长度的文字，用来提升计算效率，不同语言找一个最大的字符即可*/\n    static _testWord: string = \"游\";\n    static _passwordChar = \"●\";\n\n    /**@private 位图字体字典。*/\n    private static _bitmapFonts: Record<string, BitmapFont> = {};\n\n    /** 标记此文本是否忽略语言包 */\n    ignoreLang: boolean;\n\n    /**表示文本内容字符串。*/\n    protected _text: string;\n    protected _overflow: string = Text.VISIBLE;\n    protected _singleCharRender: boolean = false;\t// 拆分渲染\n    protected _textStyle: TextStyle;\n    protected _prompt: string = '';\n    /**输入提示符颜色。*/\n    protected _promptColor: string;\n    /**\n     * 文本背景颜色，以字符串表示。\n     */\n    protected _bgColor: string;\n    /**\n     * 文本边框背景颜色，以字符串表示。\n     */\n    protected _borderColor: string;\n    /**\n     * <p>默认边距信息</p>\n     * <p>[上边距，右边距，下边距，左边距]（边距以像素为单位）</p>\n     */\n    protected _padding: number[];\n    /**\n     * <p>表示使用此文本格式的文本字段是否自动换行。</p>\n     * 如果 wordWrap 的值为 true，则该文本字段自动换行；如果值为 false，则该文本字段不自动换行。\n     * @default false。\n     */\n    protected _wordWrap: boolean;\n\n    /**\n     * <p>指定文本字段是否是密码文本字段。</p>\n     * 如果此属性的值为 true，则文本字段被视为密码文本字段，并使用星号而不是实际字符来隐藏输入的字符。如果为 false，则不会将文本字段视为密码文本字段。\n     */\n    protected _asPassword: boolean;\n\n    protected _htmlParseOptions: HtmlParseOptions;\n\n    protected _templateVars: Record<string, string>;\n\n    /**表示文本内容是否发生改变。*/\n    protected _isChanged: boolean;\n    /**表示文本的宽度，以像素为单位。*/\n    protected _textWidth: number = 0;\n    /**表示文本的高度，以像素为单位。*/\n    protected _textHeight: number = 0;\n    protected _realFont: string;\n    protected _bitmapFont: BitmapFont;\n    protected _scrollPos: Point | null;\n    protected _bgDrawCmd: DrawRectCmd;\n    protected _html: boolean;\n    protected _ubb: boolean;\n    protected _lines: Array<ITextLine>;\n    protected _elements: Array<HtmlElement>;\n    protected _objContainer: Sprite;\n    protected _maxWidth: number;\n    protected _hideText: boolean;\n\n    private _updatingLayout: boolean;\n    private _fontSizeScale: number;\n\n    /**是否将字符串中的\\n,\\t转换为实际功能的字符 */\n    _parseEscapeChars: boolean;\n    _onPostLayout: () => void;\n\n    /**\n     * 创建一个新的 <code>Text</code> 实例。\n     */\n    constructor() {\n        super();\n\n        this._textStyle = new TextStyle();\n        this._textStyle.fontSize = Config.defaultFontSize;\n        this._text = \"\";\n        this.font = \"\";\n        this._elements = [];\n        this._lines = [];\n        this._padding = [0, 0, 0, 0];\n        this._fontSizeScale = 1;\n    }\n\n    /**\n     * 注册位图字体。\n     * @param\tname\t\t位图字体的名称。\n     * @param\tbitmapFont\t位图字体文件。\n     */\n    static registerBitmapFont(name: string, bitmapFont: BitmapFont): void {\n        bitmapFont._addReference();\n        Text._bitmapFonts[name] = bitmapFont;\n    }\n\n    /**\n     * 移除注册的位图字体文件。\n     * @param\tname\t\t位图字体的名称。\n     * @param\tdestroy\t\t是否销毁指定的字体文件。\n     */\n    static unregisterBitmapFont(name: string, destroy: boolean = true): void {\n        let font = Text._bitmapFonts[name];\n        if (font) {\n            font._removeReference();\n            if (destroy) font.destroy();\n            delete Text._bitmapFonts[name];\n        }\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n    */\n    destroy(destroyChild: boolean = true): void {\n        recoverLines(this._lines);\n        HtmlElement.returnToPool(this._elements);\n\n        super.destroy(destroyChild);\n    }\n\n    /**\n     * @internal\n     * @inheritDoc\n     * @override\n     */\n    _getBoundPointsM(ifRotate: boolean = false): any[] {\n        var rec: Rectangle = Rectangle.TEMP;\n        rec.setTo(0, 0, this.width, this.height);\n        return rec._getBoundPoints();\n    }\n\n    /**\n     * @inheritDoc\n     * @override\n     */\n    getGraphicBounds(realSize: boolean = false): Rectangle {\n        var rec: Rectangle = Rectangle.TEMP;\n        rec.setTo(0, 0, this.width, this.height);\n        return rec;\n    }\n\n    /**\n     * @inheritDoc\n     * @override\n     */\n    get_width(): number {\n        if (this._isWidthSet) return this._width;\n        return this.textWidth;\n    }\n    /**\n     * @override\n     */\n    _setWidth(value: number) {\n        super._setWidth(value);\n        if (!this._updatingLayout)\n            this.markChanged();\n        else\n            this.drawBg();\n    }\n\n    /**\n     * @inheritDoc\n     * @override\n     */\n    get_height(): number {\n        if (this._isHeightSet) return this._height;\n        return this.textHeight;\n    }\n    /**\n     * @override\n     */\n    _setHeight(value: number) {\n        super._setHeight(value);\n        if (!this._updatingLayout)\n            this.markChanged();\n        else\n            this.drawBg();\n    }\n\n    /**\n     * 表示文本的宽度，以像素为单位。\n     */\n    get textWidth(): number {\n        this.typeset();\n        return this._textWidth;\n    }\n\n    /**\n     * 表示文本的高度，以像素为单位。\n     */\n    get textHeight(): number {\n        this.typeset();\n        return this._textHeight;\n    }\n\n    /** 当前文本的内容字符串。*/\n    get text(): string {\n        return this._text;\n    }\n\n    set text(value: string) {\n        if (value == null)\n            value = \"\";\n        else if (typeof (value) !== \"string\")\n            value = '' + value;\n\n        if (!this.ignoreLang && Text.langPacks)\n            value = Text.langPacks[value] || value;\n\n        if (this._text != value) {\n            this._text = value;\n            this.markChanged();\n            this.event(Event.CHANGE);\n        }\n    }\n\n    /** @deprecated **/\n    changeText(text: string): void {\n        this.text = text;\n    }\n\n    /**\n     * <p>文本的字体名称，以字符串形式表示。</p>\n     * <p>默认值为：\"Arial\"，可以通过Config.defaultFont设置默认字体。</p>\n     * <p>如果运行时系统找不到设定的字体，则用系统默认的字体渲染文字，从而导致显示异常。(通常电脑上显示正常，在一些移动端因缺少设置的字体而显示异常)。</p>\n     */\n    get font(): string {\n        return this._textStyle.font;\n    }\n\n    set font(value: string) {\n        this._textStyle.font = value;\n        if (!value) {\n            value = Config.defaultFont;\n            if (!value)\n                value = \"Arial\";\n        }\n\n        this._realFont = value;\n        this._bitmapFont = Text._bitmapFonts[value];\n\n        if (this._bitmapFont) {\n            if (this._text)\n                this.markChanged();\n        }\n        else if (value && (Utils.getFileExtension(value) || value.startsWith(\"res://\"))) {\n            let t = value;\n            let fontObj = ILaya.loader.getRes(value);\n            if (!fontObj || fontObj.obsolute) {\n                ILaya.loader.load(value).then(fontObj => {\n                    if (!fontObj || this._realFont != t)\n                        return;\n\n                    if (fontObj instanceof BitmapFont)\n                        this._bitmapFont = fontObj;\n                    else\n                        this._realFont = fontObj.family;\n                    if (this._text)\n                        this.markChanged();\n                });\n            }\n            else {\n                if (fontObj instanceof BitmapFont)\n                    this._bitmapFont = fontObj;\n                else\n                    this._realFont = fontObj.family;\n                if (this._text)\n                    this.markChanged();\n            }\n        }\n        else {\n            this._realFont = (ILaya.Browser.onIPhone ? (Config.fontFamilyMap[value] || value) : value);\n            if (this._text)\n                this.markChanged();\n        }\n    }\n\n    /**\n     * <p>指定文本的字体大小（以像素为单位）。</p>\n     * <p>默认为20像素，可以通过 <code>Config.defaultFontSize</code> 设置默认大小。</p>\n     */\n    get fontSize(): number {\n        return this._textStyle.fontSize;\n    }\n\n    set fontSize(value: number) {\n        if (this._textStyle.fontSize != value) {\n            this._textStyle.fontSize = value;\n            this.markChanged();\n        }\n    }\n\n    /**\n     * <p>表示文本的颜色值。可以通过 <code>Text.defaultColor</code> 设置默认颜色。</p>\n     * <p>默认值为黑色。</p>\n     */\n    get color(): string {\n        return this._textStyle.color;\n    }\n\n    set color(value: string) {\n        this.set_color(value);\n    }\n\n    set_color(value: string): void {\n        if (this._textStyle.color != value) {\n            this._textStyle.color = value;\n            //如果仅仅更新颜色，无需重新排版\n            if (!this._isChanged && this._graphics && this._elements.length == 0)\n                this._graphics.replaceTextColor(this._textStyle.color);\n            else\n                this.markChanged();\n        }\n    }\n\n    /**\n     * <p>指定文本是否为粗体字。</p>\n     * <p>默认值为 false，这意味着不使用粗体字。如果值为 true，则文本为粗体字。</p>\n     */\n    get bold(): boolean {\n        return this._textStyle.bold;\n    }\n\n    set bold(value: boolean) {\n        if (this._textStyle.bold != value) {\n            this._textStyle.bold = value;\n            this.markChanged();\n        }\n    }\n\n    /**\n     * <p>表示使用此文本格式的文本是否为斜体。</p>\n     * <p>默认值为 false，这意味着不使用斜体。如果值为 true，则文本为斜体。</p>\n     */\n    get italic(): boolean {\n        return this._textStyle.italic;\n    }\n\n    set italic(value: boolean) {\n        if (this._textStyle.italic != value) {\n            this._textStyle.italic = value;\n            this.markChanged();\n        }\n    }\n\n    /**\n     * <p>表示文本的水平显示方式。</p>\n     * <p><b>取值：</b>\n     * <li>\"left\"： 居左对齐显示。</li>\n     * <li>\"center\"： 居中对齐显示。</li>\n     * <li>\"right\"： 居右对齐显示。</li>\n     * </p>\n     */\n    get align(): string {\n        return this._textStyle.align;\n    }\n\n    set align(value: string) {\n        if (this._textStyle.align != value) {\n            this._textStyle.align = value;\n            this.markChanged();\n        }\n    }\n\n    /**\n     * <p>表示文本的垂直显示方式。</p>\n     * <p><b>取值：</b>\n     * <li>\"top\"： 居顶部对齐显示。</li>\n     * <li>\"middle\"： 居中对齐显示。</li>\n     * <li>\"bottom\"： 居底部对齐显示。</li>\n     * </p>\n     */\n    get valign(): string {\n        return this._textStyle.valign;\n    }\n\n    set valign(value: string) {\n        if (this._textStyle.valign != value) {\n            this._textStyle.valign = value;\n            this.markChanged();\n        }\n    }\n\n    /**\n     * 图文混排时图片和文字的对齐方式。可选值是top,middle,bottom\n     */\n    get alignItems(): string {\n        return this._textStyle.alignItems;\n    }\n\n    set alignItems(value: string) {\n        if (this._textStyle.alignItems != value) {\n            this._textStyle.alignItems = value;\n            this.markChanged();\n        }\n    }\n\n    /**\n     * <p>表示文本是否自动换行，默认为false。</p>\n     * <p>若值为true，则自动换行；否则不自动换行。</p>\n     */\n    get wordWrap(): boolean {\n        return this._wordWrap;\n    }\n\n    set wordWrap(value: boolean) {\n        if (this._wordWrap != value) {\n            this._wordWrap = value;\n            this.markChanged();\n        }\n    }\n\n    /**\n     * 垂直行间距（以像素为单位）。\n     */\n    get leading(): number {\n        return this._textStyle.leading;\n    }\n\n    set leading(value: number) {\n        if (this._textStyle.leading != value) {\n            this._textStyle.leading = value;\n            this.markChanged();\n        }\n    }\n\n    /**\n     * <p>边距信息。</p>\n     * <p>数据格式：[上边距，右边距，下边距，左边距]（边距以像素为单位）。</p>\n     */\n    get padding(): number[] {\n        return this._padding;\n    }\n\n    set padding(value: number[] | string) {\n        if (typeof (value) == 'string') {\n            let arr = value.split(\",\");\n            this._padding.length = 0;\n            for (let i = 0; i < 4; i++) {\n                let v = parseFloat(arr[i]);\n                if (isNaN(v))\n                    v = 0;\n                this._padding.push(v);\n            }\n        }\n        else\n            this._padding = value;\n        this.markChanged();\n    }\n\n    /**\n     * 文本背景颜色，以字符串表示。\n     */\n    get bgColor(): string {\n        return this._bgColor;\n    }\n\n    set bgColor(value: string) {\n        this._bgColor = value;\n        this.drawBg();\n    }\n\n    /**\n     * 文本边框背景颜色，以字符串表示。\n     */\n    get borderColor(): string {\n        return this._borderColor;\n    }\n\n    set borderColor(value: string) {\n        this._borderColor = value;\n        this.drawBg();\n    }\n\n    /**\n     * <p>描边宽度（以像素为单位）。</p>\n     * <p>默认值0，表示不描边。</p>\n     */\n    get stroke(): number {\n        return this._textStyle.stroke;\n    }\n\n    set stroke(value: number) {\n        if (this._textStyle.stroke != value) {\n            this._textStyle.stroke = value;\n            this.markChanged();\n        }\n    }\n\n    /**\n     * <p>描边颜色，以字符串表示。</p>\n     * <p>默认值为 \"#000000\"（黑色）;</p>\n     */\n    get strokeColor(): string {\n        return this._textStyle.strokeColor;\n    }\n\n    set strokeColor(value: string) {\n        if (this._textStyle.strokeColor != value) {\n            this._textStyle.strokeColor = value;\n            this.markChanged();\n        }\n    }\n\n    /**\n     * 指定文本超出文本域后的行为\n     * @tips: <p>值为:可见visible、隐藏hidden、滚动:scroll、自动收缩shrink、显示省略号ellipsis。</p>\n     * @tips: <p>作用：可见，表示文本不受文本宽高约束全部可见；隐藏，超过文本宽高就会被裁切掉，性能最好；\n     * 滚动，表示超出宽高的部分被隐藏，可以通过划动控制显示在宽高内区域；自动收缩，表示文本会跟随宽高的大小而自动调整文本的大小，始终全部显示在文本宽高内。\n     * 显示省略号，表示当文本超出宽高后，未尾的几位字符会替换为省略号，表示当前文本还有未显示的内容</p>\n     */\n    get overflow(): string {\n        return this._overflow;\n    }\n\n    set overflow(value: string) {\n        if (this._overflow != value) {\n            this._overflow = value;\n            this.markChanged();\n        }\n    }\n\n    /**是否显示下划线。*/\n    get underline(): boolean {\n        return this._textStyle.underline;\n    }\n\n    set underline(value: boolean) {\n        if (this._textStyle.underline != value) {\n            this._textStyle.underline = value;\n            this.markChanged();\n        }\n    }\n\n    /**下划线的颜色，为null则使用字体颜色。*/\n    get underlineColor(): string {\n        return this._textStyle.underlineColor;\n    }\n\n    set underlineColor(value: string) {\n        if (this._textStyle.underlineColor != value) {\n            this._textStyle.underlineColor = value;\n            this.markChanged();\n        }\n    }\n\n    get singleCharRender(): boolean {\n        return this._singleCharRender;\n    }\n\n    /** 设置是否单个字符渲染，如果Textd的内容一直改变，例如是一个增加的数字，就设置这个，防止无效占用缓存 */\n    set singleCharRender(value: boolean) {\n        this._singleCharRender = value;\n    }\n\n    get html(): boolean {\n        return this._html;\n    }\n\n    /** 设置是否富文本，支持html语法 */\n    set html(value: boolean) {\n        if (this._html != value) {\n            this._html = value;\n            this.markChanged();\n        }\n    }\n\n    get ubb(): boolean {\n        return this._ubb;\n    }\n\n    /** 设置是否使用UBB语法解析文本 */\n    set ubb(value: boolean) {\n        if (this._ubb != value) {\n            this._ubb = value;\n            this.markChanged();\n        }\n    }\n\n    get maxWidth(): number {\n        return this._maxWidth;\n    }\n\n    /** 设置当文本达到最大允许的宽度时，自定换行，设置为0则此限制不生效。*/\n    set maxWidth(value: number) {\n        if (this._maxWidth != value) {\n            this._maxWidth = value;\n            this.markChanged();\n        }\n    }\n\n    get htmlParseOptions(): HtmlParseOptions {\n        return this._htmlParseOptions;\n    }\n\n    set htmlParseOptions(value: HtmlParseOptions) {\n        this._htmlParseOptions = value;\n    }\n\n    protected parseTemplate(template: string): string {\n        let pos1: number = 0, pos2: number, pos3: number;\n        let tag: string;\n        let value: string;\n        let result: string = \"\";\n        while ((pos2 = template.indexOf(\"{\", pos1)) != -1) {\n            if (pos2 > 0 && template.charCodeAt(pos2 - 1) == 92)//\\\n            {\n                result += template.substring(pos1, pos2 - 1);\n                result += \"{\";\n                pos1 = pos2 + 1;\n                continue;\n            }\n\n            result += template.substring(pos1, pos2);\n            pos1 = pos2;\n            pos2 = template.indexOf(\"}\", pos1);\n            if (pos2 == -1)\n                break;\n\n            if (pos2 == pos1 + 1) {\n                result += template.substring(pos1, pos1 + 2);\n                pos1 = pos2 + 1;\n                continue;\n            }\n\n            tag = template.substring(pos1 + 1, pos2);\n            pos3 = tag.indexOf(\"=\");\n            if (pos3 != -1) {\n                value = this._templateVars[tag.substring(0, pos3)];\n                if (value == null)\n                    result += tag.substring(pos3 + 1);\n                else\n                    result += value;\n            }\n            else {\n                value = this._templateVars[tag];\n                if (value != null)\n                    result += value;\n            }\n            pos1 = pos2 + 1;\n        }\n\n        if (pos1 < template.length)\n            result += template.substring(pos1);\n\n        return result;\n    }\n\n    public get templateVars(): Record<string, any> {\n        return this._templateVars;\n    }\n\n    public set templateVars(value: Record<string, any> | boolean) {\n        if (!this._templateVars && !value)\n            return;\n\n        if (value === true)\n            this._templateVars = {};\n        else if (value === false)\n            this._templateVars = null;\n        else\n            this._templateVars = value;\n        this.markChanged();\n    }\n\n    public setVar(name: string, value: any): Text {\n        if (!this._templateVars)\n            this._templateVars = {};\n        this._templateVars[name] = value;\n        this.markChanged();\n\n        return this;\n    }\n\n    /**\n    * <p>设置横向滚动量。</p>\n    * <p>即使设置超出滚动范围的值，也会被自动限制在可能的最大值处。</p>\n    */\n    set scrollX(value: number) {\n        this.typeset();\n        if (!this._scrollPos) return;\n\n        let maxScrollX = this.maxScrollX;\n        value = value < 0 ? 0 : value;\n        value = value > maxScrollX ? maxScrollX : value;\n\n        this._scrollPos.x = value;\n        this.renderText();\n    }\n\n    /**\n     * 获取横向滚动量。\n     */\n    get scrollX(): number {\n        if (!this._scrollPos) return 0;\n        return this._scrollPos.x;\n    }\n\n    /**\n     * 设置纵向滚动量（px)。即使设置超出滚动范围的值，也会被自动限制在可能的最大值处。\n     */\n    set scrollY(value: number) {\n        this.typeset();\n        if (!this._scrollPos) return;\n\n        let maxScrollY = this.maxScrollY;\n        value = value < 0 ? 0 : value;\n        value = value > maxScrollY ? maxScrollY : value;\n\n        this._scrollPos.y = value;\n        this.renderText();\n    }\n\n    /**\n     * 获取纵向滚动量。\n     */\n    get scrollY(): number {\n        if (!this._scrollPos) return 0;\n        return this._scrollPos.y;\n    }\n\n    /**\n     * 获取横向可滚动最大值。\n     */\n    get maxScrollX(): number {\n        let r = this.textWidth - this._width;\n        return r < 0 ? 0 : r;\n    }\n\n    /**\n     * 获取纵向可滚动最大值。\n     */\n    get maxScrollY(): number {\n        let r = this.textHeight - this._height;\n        return r < 0 ? 0 : r;\n    }\n\n    /**返回文字行信息*/\n    get lines(): ReadonlyArray<ITextLine> {\n        this.typeset();\n        return this._lines;\n    }\n\n    /**\n     * @private\n     */\n    protected markChanged() {\n        if (!this._isChanged) {\n            this._isChanged = true;\n            ILaya.systemTimer.callLater(this, this._typeset);\n        }\n    }\n\n    typeset() {\n        this._isChanged && ILaya.systemTimer.runCallLater(this, this._typeset);\n    }\n\n    refreshLayout() {\n        ILaya.systemTimer.callLater(this, this.doLayout);\n    }\n\n    get objContainer(): Sprite {\n        if (!this._objContainer) {\n            this._objContainer = new Sprite();\n            this._objContainer.hideFlags |= HideFlags.HideAndDontSave;\n            this.addChild(this._objContainer);\n        }\n        return this._objContainer;\n    }\n\n    /**\n     * <p>排版文本。</p>\n     * <p>进行宽高计算，渲染、重绘文本。</p>\n     */\n    protected _typeset(): void {\n        this._isChanged = false;\n        if (this._hideText || this._destroyed)\n            return;\n\n        HtmlElement.returnToPool(this._elements);\n        if (this._objContainer)\n            this._objContainer.removeChildren();\n\n        let text = this._text;\n        let isPrompt: boolean;\n        if (!text && this._prompt) {\n            text = this._prompt;\n            isPrompt = true;\n        }\n\n        if (!text) {\n            this.graphics.clear(true);\n            this.drawBg();\n\n            this._textWidth = this._textHeight = 0;\n            this._scrollPos = null;\n            if (this._onPostLayout) {\n                this._updatingLayout = true;\n                this._onPostLayout();\n                this._updatingLayout = false;\n            }\n            return;\n        }\n\n        let html = this._html;\n        text = text.replace(normalizeCR, \"\\n\");\n        if (this._parseEscapeChars)\n            text = text.replace(escapeCharsPattern, getReplaceStr);\n        if (!isPrompt && this._templateVars)\n            text = this.parseTemplate(text);\n\n        if (this._ubb) {\n            text = UBBParser.defaultParser.parse(text);\n            html = true;\n        }\n        if (!isPrompt && this._asPassword)\n            text = Text._passwordChar.repeat(text.length);\n\n        let saveColor: string;\n        if (isPrompt) {\n            saveColor = this._textStyle.color;\n            this._textStyle.color = this._promptColor;\n        }\n        if (html)\n            HtmlParser.defaultParser.parse(text, this._textStyle, this._elements, this._htmlParseOptions);\n        else {\n            let ele = HtmlElement.getFromPool(HtmlElementType.Text);\n            Object.assign(ele.style, this._textStyle);\n            ele.text = text;\n            this._elements.push(ele);\n        }\n        if (isPrompt)\n            this._textStyle.color = saveColor;\n\n        this.doLayout();\n    }\n\n    /**\n     * @private\n     * 分析文本换行。\n     */\n    protected doLayout(): void {\n        if (this._destroyed)\n            return;\n\n        this._updatingLayout = true;\n        this._fontSizeScale = 1;\n\n        let wordWrap = this._wordWrap || this._overflow == Text.ELLIPSIS;\n        let padding = this._padding;\n        let rectWidth: number;\n        if (this._isWidthSet)\n            rectWidth = this._width - padding[3] - padding[1];\n        else\n            rectWidth = Number.MAX_VALUE;\n        if (this._maxWidth > 0) {\n            let m = this._maxWidth - padding[3] - padding[1];\n            if (!wordWrap || m < rectWidth)\n                rectWidth = m;\n            wordWrap = true;\n        }\n        let rectHeight = this._isHeightSet ? (this._height - padding[0] - padding[2]) : Number.MAX_VALUE;\n        let bfont = this._bitmapFont;\n        let alignItems = this._textStyle.alignItems == \"middle\" ? 1 : (this._textStyle.alignItems == \"bottom\" ? 2 : 0);\n\n        let lineX: number, lineY: number;\n        let curLine: ITextLine;\n        let lastCmd: ITextCmd;\n        let charWidth: number, charHeight: number;\n        let fontSize: number;\n\n        let getTextWidth = (text: string) => {\n            if (bfont)\n                return bfont.getTextWidth(text, fontSize);\n            else {\n                let ret = ILaya.Browser.context.measureText(text);\n                return ret ? ret.width : 100;\n            }\n        };\n\n        let buildLines = (text: string, style: TextStyle) => {\n            if (bfont) {\n                charWidth = bfont.getMaxWidth(fontSize);\n                charHeight = bfont.getMaxHeight(fontSize);\n            } else {\n                let ctxFont = (style.italic ? \"italic \" : \"\") + (style.bold ? \"bold \" : \"\") + fontSize + \"px \" + this._realFont;\n                (<any>style)._ctxFont = ctxFont; //缓存起来，避免renderText里又拼一次\n\n                ILaya.Browser.context.font = ctxFont;\n                let mr: any = ILaya.Browser.context.measureText(Text._testWord);\n\n                if (mr) {\n                    charWidth = mr.width;\n                    charHeight = Math.ceil(mr.height || fontSize);\n                }\n                else {\n                    charWidth = 100;\n                    charHeight = fontSize;\n                }\n            }\n\n            let lines = text.split(\"\\n\");\n            if (wordWrap) {\n                for (let i = 0, n = lines.length; i < n; i++) {\n                    let line = lines[i];\n                    if (line.length > 0)\n                        wrapText(line, style);\n                    if (i != n - 1) {\n                        endLine();\n                        startLine();\n                    }\n                }\n            }\n            else {\n                for (let i = 0, n = lines.length; i < n; i++) {\n                    let line = lines[i];\n                    if (line.length > 0)\n                        addCmd(line, style, null);\n                    if (i != n - 1) {\n                        endLine();\n                        startLine();\n                    }\n                }\n            }\n        };\n\n        let addCmd = (target: string | IHtmlObject, style: TextStyle, width?: number) => {\n            let cmd: ITextCmd = cmdPool.length > 0 ? cmdPool.pop() : <any>{};\n            cmd.x = lineX;\n            cmd.y = lineY;\n            if (typeof (target) === \"string\") {\n                if (!width)\n                    width = getTextWidth(target);\n                if (!cmd.wt)\n                    cmd.wt = new WordText();\n                cmd.wt.setText(target);\n                cmd.wt.width = width;\n                cmd.wt.splitRender = this._singleCharRender;\n                cmd.width = width;\n                cmd.height = charHeight;\n            }\n            else {\n                cmd.obj = target;\n                cmd.x++;\n                cmd.width = target.width + 2;\n                cmd.height = target.height;\n            }\n            cmd.style = style;\n            cmd.linkEnd = false;\n            cmd.next = null;\n            lineX += Math.round(cmd.width);\n\n            if (!curLine.cmd)\n                curLine.cmd = cmd;\n            else\n                lastCmd.next = cmd;\n            lastCmd = cmd;\n        };\n\n        let endLine = () => {\n            //计算行高\n            let lineHeight = 0;\n            let cmd = curLine.cmd;\n            while (cmd) {\n                if (cmd.height > lineHeight) lineHeight = cmd.height;\n                cmd = cmd.next;\n            }\n\n            //调整元素y位置\n            cmd = curLine.cmd;\n            while (cmd) {\n                if (alignItems == 1)\n                    cmd.y = Math.floor((lineHeight - cmd.height) * 0.5);\n                else if (alignItems == 2)\n                    cmd.y = Math.floor((lineHeight - cmd.height));\n                else\n                    cmd.y = 0;\n                cmd = cmd.next;\n            }\n\n            if (lineHeight == 0)\n                lineHeight = charHeight;\n            lineHeight++; //预览一个像素用来放下划线\n\n            curLine.height = lineHeight;\n            curLine.width = lineX;\n        };\n\n        let startLine = () => {\n            lineX = 0;\n            if (curLine)\n                lineY += curLine.height + Math.floor(this._textStyle.leading * this._fontSizeScale);\n\n            curLine = linePool.length > 0 ? linePool.pop() : <any>{ cmds: [] };\n            curLine.x = 0;\n            curLine.y = lineY;\n            this._lines.push(curLine);\n\n            return curLine;\n        };\n\n        let wrapText = (text: string, style: TextStyle) => {\n            let remainWidth = Math.max(0, rectWidth - lineX);\n\n            let tw = getTextWidth(text);\n            //优化1，如果一行小于宽度，则直接跳过遍历\n            if (tw <= remainWidth) {\n                addCmd(text, style, tw);\n                return;\n            }\n\n            let maybeIndex = 0;\n            let wordWidth = 0;\n            let startIndex = 0;\n\n            let isEmoji = testEmoji(text);\n            if (!bfont && !isEmoji) {\n                //优化2，预算第几个字符会超出，减少遍历及字符宽度度量\n                maybeIndex = Math.floor(remainWidth / charWidth);\n                (maybeIndex == 0) && (maybeIndex = 1);\n                wordWidth = getTextWidth(text.substring(0, maybeIndex));\n                if (remainWidth < wordWidth && lineX != 0) {\n                    endLine();\n                    startLine();\n                    remainWidth = rectWidth;\n                }\n            }\n\n            let len = text.length;\n            for (let j = maybeIndex; j < len; j++) {\n                // 逐字符测量后加入到总宽度中，在某些情况下自动换行不准确。\n                // 目前已知在全是字符1的自动换行就会出现这种情况。\n                // 考虑性能，保留这种非方式。\n                tw = getTextWidth(text.charAt(j));\n                wordWidth += tw;\n                let isEmojiChar = false;\n                if (isEmoji && j + 1 < len && testEmoji(text.charAt(j) + text.charAt(j + 1))) {\n                    wordWidth += tw >> 1;\n                    j++;\n                    isEmojiChar = true;\n                }\n\n                // 如果j的位置已经超出范围，要从startIndex到j找到一个能拆分的地方\n                if (wordWidth > remainWidth) {\n                    if (isEmojiChar) {\n                        if (wordWidth == tw + (tw >> 1)) {\n                            //这里是代表第一个就是emoji表情的逻辑\n                            j++;\n                        } else {\n                            j--;\n                        }\n                    }\n\n                    if (j == 0) {\n                        if (lineX > 0) {\n                            endLine();\n                            startLine();\n                            remainWidth = rectWidth;\n                        }\n                        continue;\n                    }\n\n                    //截断换行单词\n                    let newLine = text.substring(startIndex, j);\n                    wordWidth -= tw;\n\n                    // 如果最后一个是中文则直接截断，否则找空格或者-来拆分\n                    let ccode = newLine.charCodeAt(newLine.length - 1);\n                    if (isEnglishChar(ccode)) {\n                        //按照英文单词字边界截取 因此将会无视中文\n                        let execResult = wordBoundaryTest.exec(newLine);// 找不是 空格和标点符号的\n                        if (execResult) {\n                            j = execResult.index + startIndex;\n                            //此行只够容纳这一个单词 强制换行\n                            if (execResult.index == 0)\n                                j += newLine.length;\n                            //此行有多个单词 按单词分行\n                            else {\n                                wordWidth = null;\n                                newLine = text.substring(startIndex, j);\n                            }\n                        }\n                    }\n\n                    //如果自动换行，则另起一行\n                    addCmd(newLine, style, wordWidth);\n                    endLine();\n                    startLine();\n                    remainWidth = rectWidth;\n                    //如果非自动换行，则只截取字符串\n\n                    startIndex = j;\n                    if (j + maybeIndex < len) {\n                        if (maybeIndex != 0)\n                            j += maybeIndex - 1;\n                        wordWidth = getTextWidth(text.substring(startIndex, j + 1));\n                    } else {\n                        //此处执行将不会在循环结束后再push一次\n                        addCmd(text.substring(startIndex, len), style);\n                        startIndex = -1;\n                        break;\n                    }\n                }\n            }\n            if (startIndex != -1)\n                addCmd(text.substring(startIndex, len), style);\n        };\n\n        let calcTextSize = () => {\n            let nw: number = 0, nh: number = 0;\n            for (let line of this._lines) {\n                if (line.width > nw)\n                    nw = line.width;\n            }\n            if (nw > 0)\n                nw += padding[1] + padding[3];\n            this._textWidth = nw;\n\n            let lastLine = this._lines[this._lines.length - 1];\n            if (lastLine)\n                nh = lastLine.y + lastLine.height;\n            if (nh > 0)\n                nh += padding[0] + padding[2];\n            this._textHeight = nh;\n        };\n\n        let run = () => {\n            lineX = lineY = charWidth = charHeight = 0;\n            curLine = null;\n            lastCmd = null;\n\n            recoverLines(this._lines);\n            startLine();\n\n            let elements = this._elements;\n            for (let i = 0, n = elements.length; i < n; i++) {\n                let ele = elements[i];\n                if (ele.type == HtmlElementType.Text) {\n                    fontSize = Math.floor(ele.style.fontSize * this._fontSizeScale);\n                    if (fontSize == 0)\n                        fontSize = 1;\n                    buildLines(ele.text, ele.style);\n                }\n                else if (ele.type == HtmlElementType.LinkEnd) {\n                    if (lastCmd)\n                        lastCmd.linkEnd = true;\n                }\n                else {\n                    let htmlObj = ele.obj;\n                    if (!htmlObj) {\n                        let cls = HtmlParser.classMap[ele.type];\n                        if (cls) {\n                            htmlObj = Pool.createByClass(cls);\n                            htmlObj.create(this, ele);\n                            ele.obj = htmlObj;\n                        }\n                    }\n\n                    if (htmlObj) {\n                        if (wordWrap) {\n                            let remainWidth = rectWidth - lineX;\n                            if (remainWidth < htmlObj.width + 1) {\n                                if (lineX > 0) { //如果已经是开始位置了，就算放不下也不换行\n                                    endLine();\n                                    startLine();\n                                }\n                            }\n                        }\n                        addCmd(htmlObj, ele.style);\n                    }\n                }\n            }\n\n            endLine();\n            calcTextSize();\n        };\n\n        run();\n\n        if (this._overflow == Text.SHRINK) {\n            if (this._lines.length > 1 && this._textHeight > rectHeight) {\n                //多行的情况，涉及到自动换行，得用二分法查找最合适的比例，会消耗多一点计算资源\n                let low = 0;\n                let high = this._textStyle.fontSize;\n\n                //先尝试猜测一个比例\n                this._fontSizeScale = Math.sqrt(rectHeight / this._textHeight);\n                let cur = Math.floor(this._fontSizeScale * this._textStyle.fontSize);\n\n                while (true) {\n                    run();\n\n                    if (this._textWidth > rectWidth || this._textHeight > rectHeight)\n                        high = cur;\n                    else\n                        low = cur;\n                    if (high - low > 1 || high != low && cur == high) {\n                        cur = low + (high - low) / 2;\n                        this._fontSizeScale = cur / this._textStyle.fontSize;\n                    }\n                    else\n                        break;\n                }\n            }\n            else if (this._textWidth > rectWidth) {\n                this._fontSizeScale = rectWidth / this._textWidth;\n\n                run();\n\n                if (this._textWidth > rectWidth) //如果还超出，缩小一点再来一次\n                {\n                    let size = Math.floor(this._textStyle.fontSize * this._fontSizeScale);\n                    size--;\n                    this._fontSizeScale = size / this._textStyle.fontSize;\n\n                    run();\n                }\n            }\n        }\n        else if (this._overflow == Text.ELLIPSIS && (this._textWidth > rectWidth || this._textHeight > rectHeight)) {\n            //删掉超出的行\n            let i = this._lines.findIndex(line => line.y + line.height > rectHeight);\n            if (i == 0) i = 1;\n            let linesDeleted = false;\n            if (i != -1 && this._lines.length > i) {\n                recoverLines(this._lines.splice(i, this._lines.length - i));\n                linesDeleted = true;\n            }\n\n            //在最后一行加省略号\n            let lastLine = this._lines[this._lines.length - 1];\n            let cmd = lastLine.cmd;\n            let next: ITextCmd;\n            let done = false;\n            while (cmd) {\n                next = cmd.next;\n\n                if (done) {\n                    if (cmd.obj)\n                        cmd.obj = null;\n                    else if (cmd.wt)\n                        cmd.wt.cleanCache();\n                    cmdPool.push(cmd);\n                }\n                else if ((!next && linesDeleted) || cmd.x + cmd.width > rectWidth) {\n                    if (cmd.obj) //如果最后是个图片，那就删除图片，换成省略号\n                        cmd.obj = null;\n                    if (!cmd.wt)\n                        cmd.wt = new WordText();\n\n                    cmd.wt.setText(cmd.wt.text.substring(0, Math.max(0, cmd.wt.text.length - 2)) + ellipsisStr);\n                    fontSize = cmd.style.fontSize;\n                    cmd.width = cmd.wt.width = getTextWidth(cmd.wt.text);\n                    cmd.wt.splitRender = this._singleCharRender;\n                    cmd.next = null;\n                    done = true;\n                }\n\n                cmd = next;\n            }\n\n            if (done)\n                calcTextSize();\n        }\n\n        if (this._onPostLayout)\n            this._onPostLayout();\n\n        //处理水平对齐\n        let align = this._textStyle.align == \"center\" ? 1 : (this._textStyle.align == \"right\" ? 2 : 0);\n        if (align != 0 && this._isWidthSet) {\n            let rectWidth = this._width - padding[3] - padding[1];\n            for (let line of this._lines) {\n                let offsetX = 0;\n                if (align == 1)\n                    offsetX = Math.floor((rectWidth - line.width) * 0.5);\n                else if (align == 2)\n                    offsetX = rectWidth - line.width;\n\n                if (offsetX > 0)\n                    line.x = offsetX;\n            }\n        }\n\n        //处理垂直对齐\n        if (this._isHeightSet && this._textHeight < this._height) {\n            let offsetY = 0;\n            if (this._textStyle.valign === \"middle\")\n                offsetY = Math.floor((this._height - this._textHeight) * 0.5);\n            else if (this._textStyle.valign === \"bottom\")\n                offsetY = this._height - this._textHeight;\n\n            if (offsetY > 0) {\n                for (let line of this._lines) {\n                    line.y += offsetY;\n                }\n            }\n        }\n\n        if (this._overflow == Text.SCROLL\n            && (this._isWidthSet && this._textWidth > this._width || this._isHeightSet && this._textHeight > this._height)) {\n            if (!this._scrollPos)\n                this._scrollPos = new Point(0, 0);\n            else {\n                let maxScrollX = this.maxScrollX;\n                let maxScrollY = this.maxScrollY;\n                if (this._scrollPos.x > maxScrollX)\n                    this._scrollPos.x = maxScrollX;\n                if (this._scrollPos.y > maxScrollY)\n                    this._scrollPos.y = maxScrollY;\n            }\n        }\n        else\n            this._scrollPos = null;\n\n        if (this._objContainer) {\n            this._objContainer.size(this._width, this._height);\n\n            if (this._scrollPos || this._overflow == Text.HIDDEN && this._objContainer.numChildren > 0) {\n                if (!this._objContainer.scrollRect)\n                    this._objContainer.scrollRect = new Rectangle();\n                this._objContainer.scrollRect.setTo(0, 0, this._width, this._height);\n            }\n            else\n                this._objContainer.scrollRect = null;\n        }\n\n        this._updatingLayout = false;\n\n        this.renderText();\n    }\n\n    /**\n    * @private\n    * 渲染文字。\n    * @param\tbegin 开始渲染的行索引。\n    * @param\tvisibleLineCount 渲染的行数。\n    */\n    protected renderText(): void {\n        let graphics = this.graphics;\n        graphics.clear(true);\n        this.drawBg();\n\n        let padding = this._padding;\n        let paddingLeft = padding[3];\n        let paddingTop = padding[0];\n        let bfont = this._bitmapFont;\n        let scrollPos = this._scrollPos;\n        let rectWidth = this._isWidthSet ? this._width : this._textWidth;\n        let rectHeight = this._isHeightSet ? this._height : this._textHeight;\n        let bottom = rectHeight - padding[2];\n        let clipped = this._overflow == Text.HIDDEN || this._overflow == Text.SCROLL;\n\n        if (clipped) {\n            graphics.save();\n            graphics.clipRect(0, 0, rectWidth, rectHeight);\n            this.repaint();\n        }\n\n        rectWidth -= (padding[3] + padding[1]);\n        rectHeight -= (padding[0] + padding[2]);\n\n        let x = 0, y = 0;\n        let lines = this._lines;\n        let lineCnt = lines.length;\n        let curLink: HtmlLink;\n        let linkStartX: number;\n        for (let i = 0; i < lineCnt; i++) {\n            let line = lines[i];\n            x = paddingLeft + line.x;\n            y = paddingTop + line.y;\n            if (scrollPos) {\n                x -= scrollPos.x;\n                y -= scrollPos.y;\n            }\n            let lineClipped = clipped && ((y + line.height) <= paddingTop || y >= bottom);\n\n            let cmd = line.cmd;\n            while (cmd) {\n                if (cmd.linkEnd) {\n                    if (curLink) {\n                        curLink.addRect(linkStartX, y, x + cmd.x + cmd.width - linkStartX, line.height);\n                        curLink = null;\n                    }\n                }\n\n                if (cmd.obj) {\n                    cmd.obj.pos(x + cmd.x, y + cmd.y);\n\n                    if (cmd.obj.element.type == HtmlElementType.Link) {\n                        curLink = <HtmlLink>cmd.obj;\n                        curLink.resetArea();\n                        linkStartX = x + cmd.x;\n                    }\n                }\n                else if (!lineClipped) {\n                    if (bfont) {\n                        let tx: number = 0;\n                        let str = cmd.wt.text;\n                        let color = bfont.tint ? cmd.style.color : \"#FFFFFF\";\n                        let scale = Math.floor((bfont.autoScaleSize ? cmd.style.fontSize : bfont.fontSize) * this._fontSizeScale) / bfont.fontSize;\n                        for (let i = 0, n = str.length; i < n; i++) {\n                            let c = str.charCodeAt(i);\n                            let g = bfont.dict[c];\n                            if (g) {\n                                if (g.texture)\n                                    graphics.drawImage(g.texture, x + cmd.x + tx + g.x * scale, y + cmd.y + g.y * scale, g.width * scale, g.height * scale, color);\n                                tx += Math.round(g.advance * scale);\n                            }\n                        }\n                    } else {\n                        let ctxFont = (<any>cmd.style)._ctxFont;\n                        if (cmd.style.stroke)\n                            graphics.fillBorderText(cmd.wt, x + cmd.x, y + cmd.y, ctxFont, cmd.style.color, null, cmd.style.stroke, cmd.style.strokeColor);\n                        else\n                            graphics.fillText(cmd.wt, x + cmd.x, y + cmd.y, ctxFont, cmd.style.color, null);\n                    }\n                }\n\n                if (!lineClipped && cmd.style.underline) {\n                    let thickness = Math.max(1, cmd.style.fontSize * this._fontSizeScale / 16);\n                    graphics.drawLine(x + cmd.x, y + line.height - thickness, x + cmd.x + cmd.width, y + line.height - thickness, cmd.style.underlineColor || cmd.style.color, thickness);\n                }\n\n                cmd = cmd.next;\n            }\n\n            if (curLink) {\n                curLink.addRect(linkStartX, y, rectWidth - linkStartX + paddingLeft, line.height);\n                linkStartX = paddingLeft;\n            }\n        }\n\n        if (clipped)\n            graphics.restore();\n    }\n\n    protected drawBg() {\n        let cmd = this._bgDrawCmd;\n        if (this._bgColor || this._borderColor) {\n            if (!cmd) {\n                cmd = new DrawRectCmd();\n                cmd.x = cmd.y = 0;\n                cmd.width = cmd.height = 1;\n                cmd.percent = true;\n                this._bgDrawCmd = cmd;\n            }\n            cmd.fillColor = this._bgColor;\n            cmd.lineColor = this._borderColor;\n            cmd.lineWidth = this._borderColor ? 1 : 0;\n\n            let cmds = this.graphics.cmds;\n            let i = cmds.indexOf(cmd);\n            if (i != 0) {\n                if (i != -1)\n                    cmds.splice(i, 1);\n                cmds.unshift(cmd);\n                this.graphics.cmds = cmds;\n            }\n        }\n        else if (cmd) {\n            this.graphics.removeCmd(cmd);\n        }\n    }\n}\nexport interface ITextCmd {\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n    style: TextStyle;\n    wt: WordText;\n    obj: IHtmlObject;\n    linkEnd: boolean;\n    next: ITextCmd;\n}\n\nexport interface ITextLine {\n    x: number;\n    y: number;\n    height: number;\n    width: number;\n    cmd: ITextCmd;\n}\n\nconst cmdPool: Array<ITextCmd> = [];\nconst linePool: Array<ITextLine> = [];\n\nfunction recoverLines(lines: Array<ITextLine>) {\n    for (let line of lines) {\n        let cmd = line.cmd;\n        while (cmd) {\n            if (cmd.obj)\n                cmd.obj = null;\n            else if (cmd.wt)\n                cmd.wt.cleanCache();\n            cmdPool.push(cmd);\n            cmd = cmd.next;\n        }\n        line.cmd = null;\n    }\n\n    linePool.push(...lines);\n    lines.length = 0;\n}\n\nconst emojiTest = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\nfunction testEmoji(str: string) {\n    if (null == str) return false;\n    return emojiTest.test(str);\n}\nfunction isEnglishChar(unicode: number): boolean {\n    return (unicode >= 65 && unicode <= 90) ||  // A-Z\n        (unicode >= 97 && unicode <= 122) || // a-z\n        unicode === 39; // 单引号\n}\n\n\nconst wordBoundaryTest = /(?:[^\\s\\!-\\/])+$/;\nconst normalizeCR = /\\r\\n/g;\nconst escapeCharsPattern = /\\\\(\\w)/g;\nconst escapeSequence: any = { \"\\\\n\": \"\\n\", \"\\\\t\": \"\\t\" };\nconst ellipsisStr = \"…\";\n\nfunction getReplaceStr(word: string): string {\n    return escapeSequence[word];\n}","import { HideFlags, NodeFlags } from \"../Const\";\nimport { Node } from \"../display/Node\";\nimport { Sprite } from \"../display/Sprite\";\nimport { Stage } from \"../display/Stage\";\nimport { Point } from \"../maths/Point\";\nimport { Rectangle } from \"../maths/Rectangle\";\nimport { Browser } from \"../utils/Browser\";\nimport { Event, ITouchInfo } from \"./Event\";\n\nvar _isFirstTouch = true;\nconst _tempPoint = new Point();\nconst _tempRect = new Rectangle();\nconst _rollOverChain: Array<Node> = [];\nconst _rollOutChain: Array<Node> = [];\nvar _inst: InputManager;\n\nexport class InputManager {\n\n    /**是否开启多点触控*/\n    static multiTouchEnabled: boolean = true;\n    /**是否开启鼠标/触摸事件，默认为true*/\n    static mouseEventsEnabled: boolean = true;\n    /**是否开启键盘事件，默认为true*/\n    static keyEventsEnabled: boolean = true;\n    /**如果鼠标按下的位置和弹起的位置距离超过这个阀值，则不视为一次点击*/\n    static clickTestThreshold = 10;\n\n    /** canvas 上的鼠标X坐标。*/\n    static mouseX: number = 0;\n    /** canvas 上的鼠标Y坐标。*/\n    static mouseY: number = 0;\n    /** 当前是否正在输入文字 */\n    static isTextInputting = false;\n    static isiOSWKwebView: boolean = false;\n    protected _stage: Stage;\n    protected _mouseTouch: TouchInfo;\n    protected _touches: TouchInfo[];\n    protected _touchPool: TouchInfo[];\n    protected _touchTarget: Node;\n\n    //用于IDE处理\n    protected _eventType: number;\n    protected _nativeEvent: MouseEvent | WheelEvent | TouchEvent;\n\n    protected _pressKeys: Set<string | number>;\n    protected _keyEvent: Event;\n\n    private _touchInput: boolean;\n\n    constructor() {\n        this._touches = [];\n        this._touchPool = [];\n        this._mouseTouch = new TouchInfo(this._touches);\n        this._pressKeys = new Set();\n        this._keyEvent = new Event();\n        this._keyEvent._touches = this._touches;\n    }\n\n    static get inst() {\n        return _inst;\n    }\n\n    static getTouchPos(touchId?: number): Readonly<Point> {\n        if (touchId == null)\n            return _inst._touches[0]?.pos || Point.EMPTY;\n        else\n            return _inst.getTouch(touchId)?.pos || Point.EMPTY;\n    }\n\n    static get touchTarget(): Node {\n        return _inst._touchTarget;\n    }\n\n    static get touches(): ReadonlyArray<Readonly<ITouchInfo>> {\n        return _inst._touches;\n    }\n\n    static get touchCount(): number {\n        return _inst._touches.length;\n    }\n\n    static cancelClick(touchId?: number): void {\n        let touch = touchId == null ? _inst._touches[0] : _inst.getTouch(touchId);\n        if (touch)\n            touch.clickCancelled = true;\n    }\n\n    /**\n     * 返回指定键是否被按下。\n     * @param\tkey 键值。参考：https://developer.mozilla.org/en-US/docs/Web/API/UI_Events/Keyboard_event_key_values\n     * @return 是否被按下。\n     */\n    static hasKeyDown(key: string | number): boolean {\n        return _inst._pressKeys.has(key);\n    }\n\n    /**\n     * @private\n     * 初始化。\n     */\n    static __init__(stage: Stage, canvas: HTMLCanvasElement): void {\n        let inst = _inst = new InputManager();\n        inst._stage = stage;\n\n        canvas.oncontextmenu = () => {\n            return false;\n        };\n        canvas.addEventListener(\"mousedown\", ev => {\n            if (!Browser.onIE)\n                (ev.cancelable) && (ev.preventDefault());\n            if (!inst._touchInput)\n                inst.handleMouse(ev, 0);\n        }, { passive: false });\n        canvas.addEventListener(\"mouseup\", ev => {\n            (ev.cancelable) && (ev.preventDefault());\n            if (!inst._touchInput)\n                inst.handleMouse(ev, 1);\n        }, { passive: false });\n        canvas.addEventListener(\"mousemove\", ev => {\n            (ev.cancelable) && (ev.preventDefault());\n            if (!inst._touchInput)\n                inst.handleMouse(ev, 2);\n        }, { passive: false });\n        canvas.addEventListener(\"mouseout\", ev => {\n            if (!inst._touchInput)\n                inst.handleMouse(ev, 3);\n        }, { passive: false });\n        // canvas.addEventListener(\"mouseover\", ev => {\n        // });\n\n        canvas.addEventListener(\"touchstart\", ev => {\n            inst._touchInput = true;\n            if (!_isFirstTouch && !InputManager.isTextInputting)\n                (ev.cancelable) && (ev.preventDefault());\n            inst.handleTouch(ev, 0);\n        }, { passive: false });\n        canvas.addEventListener(\"touchend\", ev => {\n            if (!_isFirstTouch && !InputManager.isTextInputting)\n                (ev.cancelable) && (ev.preventDefault());\n            _isFirstTouch = false;\n            inst.handleTouch(ev, 1);\n        }, { passive: false });\n        canvas.addEventListener(\"touchmove\", ev => {\n            (ev.cancelable) && (ev.preventDefault());\n            inst.handleTouch(ev, 2);\n        }, { passive: false });\n        canvas.addEventListener(\"touchcancel\", ev => {\n            (ev.cancelable) && (ev.preventDefault());\n            inst.handleTouch(ev, 3);\n        }, { passive: false });\n\n        canvas.addEventListener(\"wheel\", ev => {\n            inst.handleMouse(ev, 4);\n        }, { passive: false });\n\n        canvas.addEventListener(\"pointerdown\", ev => {\n            canvas.setPointerCapture(ev.pointerId);\n        });\n        canvas.addEventListener(\"pointerup\", ev => {\n            canvas.releasePointerCapture(ev.pointerId);\n        }, true);\n\n        let document = <Document>Browser.document;\n        document.addEventListener(\"keydown\", ev => {\n            inst.handleKeys(ev);\n        }, true);\n        document.addEventListener(\"keypress\", ev => {\n            inst.handleKeys(ev);\n        }, true);\n        document.addEventListener(\"keyup\", ev => {\n            inst.handleKeys(ev);\n        }, true);\n    }\n\n    handleMouse(ev: MouseEvent | WheelEvent, type: number) {\n        this._eventType = type;\n        this._nativeEvent = ev;\n\n        //console.log(\"handleMouse\", type);\n        let touch: TouchInfo = this._mouseTouch;\n\n        _tempPoint.setTo(ev.pageX || ev.clientX, ev.pageY || ev.clientY);\n        if (this._stage._canvasTransform)\n            this._stage._canvasTransform.invertTransformPoint(_tempPoint);\n        InputManager.mouseX = _tempPoint.x;\n        InputManager.mouseY = _tempPoint.y;\n        let x = _tempPoint.x / this._stage.clientScaleX;\n        let y = _tempPoint.y / this._stage.clientScaleY;\n\n        touch.event.nativeEvent = ev;\n        if (type == 3 || !InputManager.mouseEventsEnabled)\n            touch.target = this._touchTarget = null;\n        else {\n            touch.target = this._touchTarget = this.getNodeUnderPoint(x, y);\n\n            let ix = Math.round(x);\n            let iy = Math.round(y);\n\n            if (ix != touch.pos.x || iy != touch.pos.y) {\n                this._stage._mouseMoveTime = Browser.now();\n\n                touch.pos.setTo(ix, iy);\n                touch.move();\n\n                if (InputManager.mouseEventsEnabled) {\n                    touch.target.bubbleEvent(Event.MOUSE_MOVE, touch.event);\n\n                    for (let t of touch.downTargets)\n                        t.event(Event.MOUSE_DRAG, touch.event);\n                }\n            }\n        }\n\n        if (touch.lastRollOver != touch.target)\n            this.handleRollOver(touch);\n\n        if (type == 0) {\n            if (!touch.began) {\n                touch.begin();\n                this._touches[0] = touch;\n                touch.event.button = ev.button;\n\n                if (InputManager.mouseEventsEnabled) {\n                    this.handleFocus();\n\n                    if (ev.button == 0)\n                        touch.target?.bubbleEvent(Event.MOUSE_DOWN, touch.event);\n                    else\n                        touch.target?.bubbleEvent(Event.RIGHT_MOUSE_DOWN, touch.event);\n                }\n            }\n        }\n        else if (type == 1) {\n            if (touch.began) {\n                touch.end();\n                this._touches.length = 0;\n                touch.event.button = ev.button;\n\n                if (InputManager.mouseEventsEnabled) {\n                    if (ev.button == 0)\n                        touch.target?.bubbleEvent(Event.MOUSE_UP, touch.event);\n                    else\n                        touch.target?.bubbleEvent(Event.RIGHT_MOUSE_UP, touch.event);\n\n                    if (touch.moved) {\n                        for (let t of touch.downTargets)\n                            t.event(Event.MOUSE_DRAG_END, touch.event);\n                    }\n\n                    let clickTarget = touch.clickTest();\n                    if (clickTarget) {\n                        if (ev.button == 0) {\n                            touch.event.isDblClick = touch.clickCount == 2;\n\n                            clickTarget.bubbleEvent(Event.CLICK, touch.event);\n\n                            if (touch.clickCount == 2)\n                                clickTarget.bubbleEvent(Event.DOUBLE_CLICK, touch.event);\n\n                            touch.event.isDblClick = false;\n                        }\n                        else {\n                            touch.event.isDblClick = touch.clickCount == 2;\n                            clickTarget.bubbleEvent(Event.RIGHT_CLICK, touch.event);\n                            touch.event.isDblClick = false;\n                        }\n                    }\n                }\n\n                touch.event.button = 0;\n            }\n        }\n        else if (type == 4) {\n            if (InputManager.mouseEventsEnabled) {\n                touch.event.delta = (<WheelEvent>ev).deltaY * 0.025;\n                touch.target?.bubbleEvent(Event.MOUSE_WHEEL, touch.event);\n                touch.event.delta = 0;\n            }\n        }\n    }\n\n    handleTouch(ev: TouchEvent, type: number) {\n        this._eventType = type;\n        this._nativeEvent = ev;\n\n        let touches = ev.changedTouches;\n        for (let i = 0; i < touches.length; ++i) {\n            let uTouch: Touch = touches[i];\n\n            if (!InputManager.multiTouchEnabled\n                && this._touches.length > 0\n                && this._touches[0].touchId != uTouch.identifier)\n                continue;\n\n            _tempPoint.setTo(uTouch.pageX, uTouch.pageY);\n            if (this._stage._canvasTransform)\n                this._stage._canvasTransform.invertTransformPoint(_tempPoint);\n            InputManager.mouseX = _tempPoint.x;\n            InputManager.mouseY = _tempPoint.y;\n            let x = _tempPoint.x / this._stage.clientScaleX;\n            let y = _tempPoint.y / this._stage.clientScaleY;\n\n            let touch = this.getTouch(uTouch.identifier, type == 0);\n            if (!touch)\n                continue;\n\n            touch.event.nativeEvent = ev;\n            touch.event.touchId = touch.touchId;\n            if (type == 3 || !InputManager.mouseEventsEnabled)\n                touch.target = this._touchTarget = null;\n            else {\n                touch.target = this._touchTarget = this.getNodeUnderPoint(x, y);\n                this._stage._mouseMoveTime = Browser.now();\n\n                let ix = Math.round(x);\n                let iy = Math.round(y);\n\n                if (Math.abs(ix - touch.pos.x) > 1.5 || Math.abs(iy - touch.pos.y) > 1.5) {\n                    touch.pos.setTo(ix, iy);\n\n                    if (type == 2) {\n                        touch.move();\n\n                        if (InputManager.mouseEventsEnabled) {\n\n                            touch.target.bubbleEvent(Event.MOUSE_MOVE, touch.event);\n\n                            for (let t of touch.downTargets)\n                                t.event(Event.MOUSE_DRAG, touch.event);\n                        }\n                    }\n                }\n            }\n\n            if (touch.lastRollOver != touch.target)\n                this.handleRollOver(touch);\n\n            if (type == 0) {\n                if (!touch.began) {\n                    touch.begin();\n\n                    if (InputManager.mouseEventsEnabled) {\n                        this.handleFocus();\n                        touch.target?.bubbleEvent(Event.MOUSE_DOWN, touch.event);\n                    }\n                }\n            }\n            else if (type == 1 || type == 3) {\n                if (touch.began) {\n                    touch.end();\n\n                    if (InputManager.mouseEventsEnabled) {\n                        touch.target?.bubbleEvent(Event.MOUSE_UP, touch.event);\n\n                        if (touch.moved) {\n                            for (let t of touch.downTargets)\n                                t.event(Event.MOUSE_DRAG_END, touch.event);\n                        }\n\n                        if (type != 3) {\n                            let clickTarget = touch.clickTest();\n                            if (clickTarget != null) {\n                                touch.event.isDblClick = touch.clickCount == 2;\n\n                                clickTarget.bubbleEvent(Event.CLICK, touch.event);\n\n                                if (touch.clickCount == 2)\n                                    clickTarget.bubbleEvent(Event.DOUBLE_CLICK, touch.event);\n\n                                touch.event.isDblClick = false;\n                            }\n                        }\n                    }\n\n                    touch.target = null;\n                    this.handleRollOver(touch);\n                }\n\n                touch.reset();\n                this._touches.splice(this._touches.indexOf(touch), 1);\n                this._touchPool.push(touch);\n            }\n        }\n    }\n\n    private getTouch(touchId: number, shouldCreate?: boolean): TouchInfo {\n        let touch = this._touches.find(e => e.touchId == touchId);\n        if (touch || !shouldCreate)\n            return touch;\n\n        touch = this._touchPool.length > 0 ? this._touchPool.pop() : new TouchInfo(this._touches);\n        touch.touchId = touchId;\n        this._touches.push(touch);\n\n        return touch;\n    }\n\n    private handleFocus() {\n        if (InputManager.isTextInputting\n            && this._stage.focus && (<any>this._stage.focus)[\"focus\"]\n            && !this._stage.focus.contains(this._touchTarget)) {\n            // 从UI Input组件中取得Input引用\n            // _tf 是TextInput的属性\n            let pre_input: any = (<any>this._stage.focus)['_tf'] || this._stage.focus;\n            let new_input = (<any>this._touchTarget)['_tf'] || this._touchTarget;\n\n            // 新的焦点是Input的情况下，不需要blur；\n            // 不过如果是Input和TextArea之间的切换，还是需要重新弹出输入法；\n            if (new_input.nativeInput && new_input.multiline == pre_input.multiline)\n                pre_input['_focusOut']();\n            else\n                pre_input.focus = false;\n        }\n    }\n\n    handleKeys(ev: KeyboardEvent): void {\n        let type = ev.type;\n        let keyCode = ev.keyCode;\n        //判断同时按下的键\n        if (type === \"keydown\") {\n            if (keyCode != 0)\n                this._pressKeys.add(keyCode);\n            this._pressKeys.add(ev.key);\n        }\n        else if (type === \"keyup\") {\n            if (keyCode != 0)\n                this._pressKeys.delete(keyCode);\n            this._pressKeys.delete(ev.key);\n        }\n\n        this._keyEvent.nativeEvent = ev;\n\n        if (InputManager.keyEventsEnabled) {\n            let target = (this._stage.focus && (this._stage.focus.event != null) && this._stage.focus.displayedInStage) ? this._stage.focus : this._stage;\n            let ct = target;\n            while (ct) {\n                ct.event(type, this._keyEvent.setTo(type, ct, target));\n                ct = ct.parent;\n            }\n        }\n\n        this._keyEvent.nativeEvent = null;\n    }\n\n    getNodeUnderPoint(x: number, y: number): Node {\n        let target: Node = this.getSpriteUnderPoint(this._stage, x, y);\n        if (!target)\n            target = this.getSprite3DUnderPoint(x, y);\n        return target || this._stage;\n    }\n\n    /**\n     * 获取指定坐标下的sprite。x/y值是sp的本地坐标\n     * @param sp\n     * @param x\n     * @param y\n     */\n    getSpriteUnderPoint(sp: Sprite, x: number, y: number): Sprite {\n        //如果有裁剪，则先判断是否在裁剪范围内\n        let scrollRect = sp._style.scrollRect;\n        if (scrollRect && !sp._getBit(NodeFlags.DISABLE_INNER_CLIPPING)) {\n            _tempRect.setTo(scrollRect.x, scrollRect.y, scrollRect.width, scrollRect.height);\n            if (!_tempRect.contains(x, y))\n                return null;\n        }\n\n        let editing = sp._getBit(NodeFlags.EDITING_NODE);\n\n        if (!editing && sp.hitTestPrior && !sp.mouseThrough && sp != this._stage && !this.hitTest(sp, x, y))\n            return null;\n\n        for (let i = sp._children.length - 1; i > -1; i--) {\n            let child = <Sprite>sp._children[i];\n            let childEditing = editing || child._getBit(NodeFlags.EDITING_NODE);\n            //只有接受交互事件的，才进行处理\n            if (!child._destroyed\n                && (childEditing ? ((!child.hasHideFlag(HideFlags.HideInHierarchy) || child.mouseThrough) && !child._getBit(NodeFlags.HIDE_BY_EDITOR)) : child._mouseState > 1)\n                && (child._visible || child._getBit(NodeFlags.DISABLE_VISIBILITY))) {\n                _tempPoint.setTo(x, y);\n                child.fromParentPoint(_tempPoint);\n                let ret = this.getSpriteUnderPoint(child, _tempPoint.x, _tempPoint.y);\n                if (ret)\n                    return ret;\n            }\n        }\n\n        if (editing) {\n            if (!sp._getBit(NodeFlags.LOCK_BY_EDITOR)\n                && !sp.hasHideFlag(HideFlags.HideInHierarchy)\n                && this.hitTest(sp, x, y, editing))\n                return sp;\n        }\n        else if (sp != this._stage) {\n            if (sp.hitTestPrior && !sp.mouseThrough || this.hitTest(sp, x, y))\n                return sp;\n        }\n\n        return null;\n    }\n\n    getSprite3DUnderPoint(x: number, y: number): Node {\n        return null;\n    }\n\n    hitTest(sp: Sprite, x: number, y: number, editing?: boolean): boolean {\n        let isHit: boolean = false;\n        if (sp.scrollRect) {\n            x -= sp._style.scrollRect.x;\n            y -= sp._style.scrollRect.y;\n        }\n        let hitArea = sp._style.hitArea;\n        let mouseThrough = sp.mouseThrough;\n        if (editing) {\n            hitArea = null;\n            mouseThrough = false;\n        }\n\n        if (hitArea) {\n            return hitArea.contains(x, y, sp);\n        }\n\n        if (sp.width > 0 && sp.height > 0 || mouseThrough || hitArea) {\n            //判断是否在矩形区域内\n            if (!mouseThrough)\n                isHit = (hitArea ? hitArea : _tempRect.setTo(0, 0, sp.width, sp.height)).contains(x, y);\n            else //如果可穿透，则根据子对象实际大小进行碰撞\n                isHit = sp.getGraphicBounds().contains(x, y);\n        }\n        return isHit;\n    }\n\n    private handleRollOver(touch: TouchInfo) {\n        if (!InputManager.mouseEventsEnabled) {\n            touch.lastRollOver = touch.target;\n            return;\n        }\n\n        _rollOverChain.length = 0;\n        _rollOutChain.length = 0;\n\n        let ele = touch.lastRollOver;\n        while (ele) {\n            _rollOutChain.push(ele);\n            ele = ele.parent;\n        }\n        touch.lastRollOver = touch.target;\n\n        ele = touch.target;\n        while (ele) {\n            let i = _rollOutChain.indexOf(ele);\n            if (i != -1) {\n                _rollOutChain.splice(i, _rollOutChain.length - i);\n                break;\n            }\n\n            _rollOverChain.push(ele);\n\n            ele = ele.parent;\n        }\n\n        let cnt = _rollOutChain.length;\n        if (cnt > 0) {\n            for (let i = 0; i < cnt; i++) {\n                ele = _rollOutChain[i];\n                if (!ele._destroyed)\n                    ele.event(Event.MOUSE_OUT, touch.event.setTo(Event.MOUSE_OUT, ele, ele));\n            }\n            _rollOutChain.length = 0;\n        }\n\n        cnt = _rollOverChain.length;\n        if (cnt > 0) {\n            for (let i = 0; i < cnt; i++) {\n                ele = _rollOverChain[i];\n                if (ele.activeInHierarchy)\n                    ele.event(Event.MOUSE_OVER, touch.event.setTo(Event.MOUSE_OVER, ele, ele));\n            }\n            _rollOverChain.length = 0;\n        };\n    }\n}\n\nconst clickTrack: Record<number, { pos: Point, time: number, button: number }> = {};\n\nclass TouchInfo implements ITouchInfo {\n    readonly event: Event;\n    readonly pos: Point;\n    touchId: number;\n    clickCount: number;\n    began: boolean;\n    target: Node;\n    lastRollOver: Node;\n    clickCancelled: boolean;\n    moved: boolean;\n    readonly downTargets: Node[];\n\n    private downPos: Point;\n\n    constructor(touches: Array<TouchInfo>) {\n        this.downPos = new Point();\n        this.downTargets = [];\n        this.event = new Event();\n        this.event._touches = touches;\n        this.pos = this.event.touchPos;\n        this.reset();\n    }\n\n    begin() {\n        this.began = true;\n        this.clickCancelled = false;\n        this.moved = false;\n        this.downPos.copy(this.pos);\n\n        this.downTargets.length = 0;\n        if (this.target) {\n            let ele = this.target;\n            while (ele) {\n                this.downTargets.push(ele);\n                ele = ele.parent;\n            }\n        }\n    }\n\n    move() {\n        this.moved = true;\n\n        if (Math.abs(this.pos.x - this.downPos.x) > InputManager.clickTestThreshold\n            || Math.abs(this.pos.y - this.downPos.y) > InputManager.clickTestThreshold)\n            this.clickCancelled = true;\n    }\n\n    end() {\n        this.began = false;\n        let now = performance.now();\n\n        let lastClick = clickTrack[this.touchId];\n        if (!lastClick) {\n            lastClick = { pos: new Point(), time: 0, button: 0 };\n            clickTrack[this.touchId] = lastClick;\n        }\n\n        if (this.downTargets.length == 0\n            || this.clickCancelled\n            || Math.abs(this.pos.x - this.downPos.x) > InputManager.clickTestThreshold\n            || Math.abs(this.pos.y - this.downPos.y) > InputManager.clickTestThreshold) {\n            this.clickCancelled = true;\n            lastClick.time = 0;\n            this.clickCount = 1;\n        }\n        else {\n            if (now - lastClick.time < 350\n                && Math.abs(this.pos.x - lastClick.pos.x) < InputManager.clickTestThreshold\n                && Math.abs(this.pos.y - lastClick.pos.y) < InputManager.clickTestThreshold\n                && lastClick.button == this.event.button) {\n                this.clickCount = 2;\n            }\n            else\n                this.clickCount = 1;\n            lastClick.time = now;\n            lastClick.pos.copy(this.pos);\n            lastClick.button = this.event.button;\n        }\n    }\n\n    clickTest(): Node {\n        if (this.clickCancelled) {\n            this.downTargets.length = 0;\n            return null;\n        }\n\n        let obj = this.downTargets[0];\n        if (obj.activeInHierarchy) {\n            this.downTargets.length = 0;\n            return obj;\n        }\n\n        obj = this.target;\n        while (obj) {\n            let i = this.downTargets.indexOf(obj);\n            if (i != -1 && obj.activeInHierarchy)\n                break;\n\n            obj = obj.parent;\n        }\n\n        this.downTargets.length = 0;\n\n        return obj;\n    }\n\n    reset() {\n        this.pos.setTo(0, 0);\n        this.touchId = 0;\n        this.clickCount = 0;\n        this.began = false;\n        this.moved = false;\n        this.target = null;\n        this.downTargets.length = 0;\n        this.lastRollOver = null;\n        this.clickCancelled = false;\n    }\n}\n","import { ILaya } from \"./../../ILaya\";\nimport { Config } from \"./../../Config\";\nimport { Context } from \"../resource/Context\";\nimport { HTMLCanvas } from \"../resource/HTMLCanvas\";\nimport { BlendMode } from \"../webgl/canvas/BlendMode\";\nimport { Shader2D } from \"../webgl/shader/d2/Shader2D\";\nimport { ShaderDefines2D } from \"../webgl/shader/d2/ShaderDefines2D\";\nimport { SubmitBase } from \"../webgl/submit/SubmitBase\";\nimport { IRenderEngine } from \"../RenderEngine/RenderInterface/IRenderEngine\";\nimport { LayaEnv } from \"../../LayaEnv\";\nimport { VertexElementFormat } from \"./VertexElementFormat\";\n\n/**\n * <code>Render</code> 是渲染管理类。它是一个单例，可以使用 Laya.render 访问。\n */\nexport class Render {\n    /** @internal */\n    static _context: Context;\n    /** @internal 主画布。canvas和webgl渲染都用这个画布*/\n    static _mainCanvas: HTMLCanvas;\n    /** 表示是否是 3D 模式。*/\n    static is3DMode: boolean;\n    /**自定义帧循环 */\n    static _customRequestAnimationFrame: any;\n    /**帧循环函数 */\n    static _loopFunction: any;\n\n    /** 当前的帧数 */\n    private static lastFrm = 0;\n    /** 第一次运行标记 */\n    private _first = true;\n    /** 刚启动的时间。由于微信的rAF不标准，传入的stamp参数不对，因此自己计算一个从启动开始的相对时间 */\n    private _startTm = 0;\n\n    /** @internal */\n    private static ifps = 1000 / 60;\n\n    static _Render: Render;\n\n    static customRequestAnimationFrame(value: any, loopFun: any) {\n        Render._customRequestAnimationFrame = value;\n        Render._loopFunction = loopFun;\n    }\n\n    private static _customEngine: IRenderEngine;\n    static set customRenderEngine(engine: IRenderEngine) {\n        Render._customEngine = engine;\n    }\n    static get customRenderEngine() {\n        return Render._customEngine;\n    }\n\n\n    /**\n     * 初始化引擎。\n     * @param\twidth 游戏窗口宽度。\n     * @param\theight\t游戏窗口高度。\n     */\n    constructor(width: number, height: number, mainCanv: HTMLCanvas) {\n        Render._Render = this;\n        Render._mainCanvas = mainCanv;\n        let source: HTMLCanvasElement = Render._mainCanvas.source as HTMLCanvasElement;\n        //创建主画布。改到Browser中了，因为为了runtime，主画布必须是第一个\n        source.id = \"layaCanvas\";\n        source.width = width;\n        source.height = height;\n        if (LayaEnv.isConch) {\n            document.body.appendChild(source);\n        }\n\n        this.initRender(Render._mainCanvas, width, height);\n        window.requestAnimationFrame(loop);\n        let me = this;\n        let lastFrmTm = performance.now();\n        let fps = Config.FPS;\n        let ifps = Render.ifps = 1000 / fps; //如果VR的话，需要改这个\n        function loop(stamp: number) {\n            //let perf = PerfHUD.inst;\n            let sttm = performance.now();\n            //perf && perf.updateValue(0, sttm-lastFrmTm);\n            lastFrmTm = sttm;\n            if (me._first) {\n                // 把starttm转成帧对齐\n                me._startTm = Math.floor(stamp / ifps) * ifps;\n                me._first = false;\n            }\n            // 与第一帧开始时间的delta\n            stamp -= me._startTm;\n            // 计算当前帧数\n            let frm = Math.floor(stamp / ifps);    // 不能|0 在微信下会变成负的\n            // 是否已经跨帧了\n            let dfrm = frm - Render.lastFrm;\n            if (dfrm > 0 || LayaEnv.isConch || !Config.fixedFrames) {\n                //不限制\n                Render.lastFrm = frm;\n                ILaya.stage._loop();\n            }\n            //perf && perf.updateValue(1, performance.now()-sttm);\n\n            if (!!Render._customRequestAnimationFrame && !!Render._loopFunction) {\n                Render._customRequestAnimationFrame(Render._loopFunction);\n            }\n            else\n                window.requestAnimationFrame(loop);\n        }\n        ILaya.stage.on(\"visibilitychange\", this, this._onVisibilitychange);\n    }\n\n    /**@private */\n    private _timeId: number = 0;\n\n    /**@private */\n    private _onVisibilitychange(): void {\n        if (!ILaya.stage.isVisibility) {\n            this._timeId = window.setInterval(this._enterFrame, 1000);\n        } else if (this._timeId != 0) {\n            window.clearInterval(this._timeId);\n        }\n    }\n\n    /**\n     * 获取帧对齐的时间。\n     * 用这个做动画的时间参数会更平滑。\n     * 从render构造开始算起。\n     * @returns \n     */\n    static vsyncTime() {\n        return Render.lastFrm * Render.ifps;\n    }\n\n    initRender(canvas: HTMLCanvas, w: number, h: number): boolean {\n\n        canvas.size(w, h);\t//在ctx之后调用。\n        ShaderDefines2D.__init__();\n        VertexElementFormat.__init__();\n        Context.__init__();\n        SubmitBase.__init__();\n\n        var ctx: Context = new Context();\n        Context._rendercontex = ctx;\n        ctx.isMain = true;\n        Render._context = ctx;\n        canvas._setContext(ctx);\n\n\n        Shader2D.__init__();\n        BlendMode._init_();\n\n        return true;\n    }\n\n\n    /**@private */\n    private _enterFrame(e: any = null): void {\n        ILaya.stage._loop();\n    }\n\n    /** 目前使用的渲染器。*/\n    static get context(): Context {\n        return Render._context;\n    }\n\n    /** 渲染使用的原生画布引用。 */\n    static get canvas(): any {\n        return Render._mainCanvas.source;\n    }\n}\n","import { ILaya } from \"../../ILaya\";\nimport { Node } from \"../display/Node\";\nimport { Loader } from \"../net/Loader\";\nimport { URL } from \"../net/URL\";\nimport { ClassUtils } from \"../utils/ClassUtils\";\n\nexport const TypedArrayClasses: Record<string, any> = {\n    \"Int8Array\": Int8Array,\n    \"Uint8Array\": Uint8Array,\n    \"Int16Array\": Int16Array,\n    \"Uint16Array\": Uint16Array,\n    \"Int32Array\": Int32Array,\n    \"Uint32Array\": Uint32Array,\n    \"Float32Array\": Float32Array,\n    \"Float64Array\": Float64Array\n};\n\nexport interface IDecodeObjOptions {\n    outErrors?: Array<string>;\n    getNodeByRef?: (id: string | string[]) => Node;\n    getNodeData?: (node: Node) => any;\n}\n\nvar _errors: Array<string>;\nvar _getNodeByRef: (id: string | string[]) => Node;\nvar _getNodeData: (node: Node) => any;\n\nexport class SerializeUtil {\n    public static isDeserializing = false;\n\n    public static decodeObj(data: any, obj?: any, options?: IDecodeObjOptions) {\n        if (options) {\n            _errors = options.outErrors;\n            _getNodeByRef = options.getNodeByRef;\n            _getNodeData = options.getNodeData;\n        }\n        else {\n            _errors = null;\n            _getNodeByRef = null;\n            _getNodeData = null;\n        }\n\n        SerializeUtil.isDeserializing = true;\n        try {\n            return SerializeUtil._decodeObj(data, obj);\n        } finally {\n            SerializeUtil.isDeserializing = false;\n        }\n    }\n\n    private static _decodeObj(data: any, obj?: any): any {\n        if (data == null)\n            return null;\n        else if (Array.isArray(data)) {\n            let arr: any[] = [];\n            for (let i = 0; i < data.length; i++) {\n                let v = data[i];\n                if (v != null) {\n                    try {\n                        arr[i] = SerializeUtil._decodeObj(v);\n                    }\n                    catch (error: any) {\n                        if (_errors)\n                            _errors.push(error);\n                        arr[i] = null;\n                    }\n                }\n                else\n                    arr[i] = null;\n            }\n            return arr;\n        }\n        else if (typeof (data) === \"object\") {\n            if (data._$uuid != null) {\n                let url = URL.getResURLByUUID(data._$uuid);\n                return ILaya.loader.getRes(url, SerializeUtil.getLoadTypeByEngineType(data._$type));\n            }\n\n            if (data._$ref != null) {\n                let node = _getNodeByRef?.(data._$ref);\n                if (node && data._$type) {\n                    let cls: any = ClassUtils.getClass(data._$type);\n                    if (cls)\n                        return node.getComponent(cls);\n                    else\n                        return null;\n                }\n                else\n                    return node;\n            }\n\n            let type = data._$type;\n\n            if (type === \"any\") {\n                if (data._$type)\n                    return data.value;\n                else\n                    return data;\n            }\n\n            let typedArray = TypedArrayClasses[type];\n            if (typedArray != null) {\n                if (data._$type)\n                    return new typedArray(data.value);\n                else\n                    return new typedArray(data);\n            }\n\n            if (!obj) {\n                let cls: any = ClassUtils.getClass(type);\n                if (!cls) {\n                    //this._errors.push(new Error(`missing type '${type}'`));\n                    return null;\n                }\n\n                obj = new cls();\n            }\n\n            for (let key in data) {\n                if (key.startsWith(\"_$\"))\n                    continue;\n\n                let v = data[key];\n                if (v == null || typeof (v) !== \"object\" || Array.isArray(v)\n                    || v._$type || v._$uuid || v._$ref) {\n                    try {\n                        let v2 = SerializeUtil._decodeObj(v);\n                        obj[key] = v2;\n\n                        if (v2 != null && v != null && v._$tmpl)\n                            obj[v._$tmpl] = _getNodeData(v2);\n                    }\n                    catch (error: any) {\n                        if (_errors)\n                            _errors.push(error);\n                    }\n                }\n                else {\n                    let childObj = obj[key];\n                    if (childObj) {\n                        try {\n                            SerializeUtil._decodeObj(v, childObj);\n                        }\n                        catch (error: any) {\n                            if (_errors)\n                                _errors.push(error);\n                        }\n                    }\n                }\n            }\n\n            if (obj.onAfterDeserialize)\n                obj.onAfterDeserialize();\n\n            return obj;\n        }\n        else\n            return data;\n    }\n\n    static getLoadTypeByEngineType(type: string) {\n        switch (type) {\n            case \"Texture2D\":\n            case \"RenderTexture\":\n                return Loader.TEXTURE2D;\n            case \"TextureCube\":\n                return Loader.TEXTURECUBE;\n            case \"Prefab\":\n                return Loader.HIERARCHY;\n            default:\n                return null;\n        }\n    }\n\n\n    static bakeOverrideData(overrideData: any) {\n        let dataMap: Record<string, Array<any>> = null;\n        for (let n = overrideData.length, i = n - 1; i >= 0; i--) {\n            let arr = overrideData[i];\n            if (arr && arr.length > 0) {\n                for (let d of arr) {\n                    let od = d._$override || d._$parent;\n                    let k: string;\n                    if (Array.isArray(od))\n                        k = od[n - i - 1];\n                    else if (i == n - 1)\n                        k = od;\n\n                    if (k != null) {\n                        if (!dataMap) dataMap = {};\n                        let arr2 = dataMap[k];\n                        if (!arr2)\n                            dataMap[k] = arr2 = [];\n                        arr2.push(n - i, d);\n                    }\n                }\n            }\n        }\n\n        return dataMap;\n    }\n\n    static applyOverrideData(nodeData: any, overrideDataMap: Record<string, Array<any>>) {\n        function test(obj: any) {\n            if (overrideDataMap[obj._$id])\n                return true;\n\n            let children: Array<any> = obj._$child;\n            if (children && children.find(child => test(child)))\n                return true;\n\n            return false;\n        }\n\n        function cloneTree(obj: any) {\n            let ret = Object.assign({}, obj);\n            let children: Array<any> = ret._$child;\n            if (children)\n                ret._$child = children.map(c => cloneTree(c));\n            let comps: Array<any> = ret._$comp;\n            if (comps)\n                ret._$comp = comps.map(c => Object.assign({}, c));\n            return ret;\n        }\n\n        function visit(data: any) {\n            let children: Array<any> = data._$child;\n            if (children) {\n                for (let child of children) {\n                    if (child._$id)\n                        visit(child);\n                }\n            }\n\n            let od = overrideDataMap[data._$id];\n            if (od) {\n                for (let i = 0; i < od.length; i += 2) {\n                    let j = od[i];\n                    let e = od[i + 1];\n                    let idPath: string | string[];\n                    if (idPath = e._$override) {\n                        let toWrite: any;\n                        if (Array.isArray(idPath)) {\n                            if (j == idPath.length - 1) {\n                                let k = idPath[j];\n                                if (!children)\n                                    data._$child = children = [];\n                                else\n                                    toWrite = children.find(c => c._$override == k);\n                                if (!toWrite) {\n                                    toWrite = { _$override: k };\n                                    children.push(toWrite);\n                                }\n                            }\n                            else if (j < idPath.length - 1) {\n                                let k = idPath.slice(j);\n                                if (!children)\n                                    data._$child = children = [];\n                                else {\n                                    toWrite = children.find(c => {\n                                        let o = c._$override;\n                                        return Array.isArray(o) && arrayEquals(o, k);\n                                    });\n                                }\n                                if (!toWrite) {\n                                    toWrite = { _$override: k };\n                                    children.push(toWrite);\n                                }\n                            }\n                            else\n                                toWrite = data;\n                        }\n                        else\n                            toWrite = data;\n\n                        mergeData(toWrite, e);\n                        if (e._$comp) {\n                            let comps: Array<any> = toWrite._$comp;\n                            if (!comps)\n                                toWrite._$comp = comps = [];\n                            for (let comp of e._$comp) {\n                                let compType = comp._$type || comp._$override;\n                                let c = comps.find(c => c._$override == compType || c._$type == compType);\n                                if (!c) {\n                                    c = {};\n                                    if (comp._$type)\n                                        c._$type = compType;\n                                    else\n                                        c._$override = compType;\n                                    comps.push(c);\n                                }\n                                mergeData(c, comp);\n                            }\n                        }\n                    }\n                    else if (idPath = e._$parent) { //增加的节点\n                        if (!children)\n                            data._$child = children = [];\n                        let k: string | string[];\n                        if (j < idPath.length) { //挂接的节点在嵌套预制体内部\n                            if (j == idPath.length - 1)\n                                k = idPath[j];\n                            else\n                                k = idPath.slice(j);\n                            let toWrite = Object.assign({}, e);\n                            //todo: toWrite._$id有极小几率重复？\n                            toWrite._$parent = k;\n                            children.push(toWrite);\n                        }\n                        else {\n                            let toWrite = Object.assign({}, e);\n                            //todo: toWrite._$id有极小几率重复？\n                            delete toWrite._$parent;\n                            if (data._$prefab) {\n                                children.push(toWrite);\n                            }\n                            else {\n                                delete toWrite._$index;\n                                if (e._$index < children.length)\n                                    children.splice(e._$index, 0, toWrite);\n                                else\n                                    children.push(toWrite);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        if (test(nodeData)) {\n            nodeData = cloneTree(nodeData);\n            visit(nodeData);\n        }\n\n        return nodeData;\n    }\n}\n\nfunction mergeData(target: any, overrided: any) {\n    for (let k in overrided) {\n        if (k.startsWith(\"_$\"))\n            continue;\n\n        let v = overrided[k];\n        if (v != null && typeof (v) === \"object\" && !Array.isArray(v) && !(v._$type || v._$uuid || v._$ref)) {\n            let v2 = target[k];\n            if (v2 != null && typeof (v2) === \"object\") {\n                target[k] = v2 = Object.assign({}, v2);\n                mergeData(v2, v);\n            }\n            else\n                target[k] = v;\n        }\n        else\n            target[k] = v;\n    }\n}\n\nfunction arrayEquals(a: ReadonlyArray<any>, b: ReadonlyArray<any>): boolean {\n    if (a.length === b.length) {\n        for (var i = 0; i < a.length; i++) {\n            if (a[i] !== b[i]) {\n                return false;\n            }\n        }\n        return true;\n    } else {\n        return false;\n    }\n}","import { Text } from \"./Text\";\nimport { Event } from \"../events/Event\"\nimport { Matrix } from \"../maths/Matrix\"\nimport { ILaya } from \"../../ILaya\";\nimport { LayaEnv } from \"../../LayaEnv\";\nimport { InputManager } from \"../events/InputManager\";\nimport { Render } from \"../renders/Render\";\nimport { Config } from \"../../Config\";\nimport { SpriteUtils } from \"../utils/SpriteUtils\";\nimport { SerializeUtil } from \"../loaders/SerializeUtil\";\n\n/**\n * 用户输入一个或多个文本字符时后调度。\n * @eventType Event.INPUT\n * */\n/*[Event(name = \"input\", type = \"laya.events.Event\")]*/\n/**\n * 文本发生变化后调度。\n * @eventType Event.CHANGE\n * */\n/*[Event(name = \"change\", type = \"laya.events.Event\")]*/\n/**\n * 用户在输入框内敲回车键后，将会调度 <code>enter</code> 事件。\n * @eventType Event.ENTER\n * */\n/*[Event(name = \"enter\", type = \"laya.events.Event\")]*/\n/**\n * 显示对象获得焦点后调度。\n * @eventType Event.FOCUS\n * */\n/*[Event(name = \"focus\", type = \"laya.events.Event\")]*/\n/**\n * 显示对象失去焦点后调度。\n * @eventType Event.BLUR\n * */\n/*[Event(name = \"blur\", type = \"laya.events.Event\")]*/\n\n/**\n * <p><code>Input</code> 类用于创建显示对象以显示和输入文本。</p>\n * <p>Input 类封装了原生的文本输入框，由于不同浏览器的差异，会导致此对象的默认文本的位置与用户点击输入时的文本的位置有少许的偏差。</p>\n */\nexport class Input extends Text {\n    /** 常规文本域。*/\n    static TYPE_TEXT: string = \"text\";\n    /** password 类型用于密码域输入。*/\n    static TYPE_PASSWORD: string = \"password\";\n    /** email 类型用于应该包含 e-mail 地址的输入域。*/\n    static TYPE_EMAIL: string = \"email\";\n    /** url 类型用于应该包含 URL 地址的输入域。*/\n    static TYPE_URL: string = \"url\";\n    /** number 类型用于应该包含数值的输入域。*/\n    static TYPE_NUMBER: string = \"number\";\n    /**\n     * <p>range 类型用于应该包含一定范围内数字值的输入域。</p>\n     * <p>range 类型显示为滑动条。</p>\n     * <p>您还能够设定对所接受的数字的限定。</p>\n     */\n    static TYPE_RANGE: string = \"range\";\n    /**  选取日、月、年。*/\n    static TYPE_DATE: string = \"date\";\n    /** month - 选取月、年。*/\n    static TYPE_MONTH: string = \"month\";\n    /** week - 选取周和年。*/\n    static TYPE_WEEK: string = \"week\";\n    /** time - 选取时间（小时和分钟）。*/\n    static TYPE_TIME: string = \"time\";\n    /** datetime - 选取时间、日、月、年（UTC 时间）。*/\n    static TYPE_DATE_TIME: string = \"datetime\";\n    /** datetime-local - 选取时间、日、月、年（本地时间）。*/\n    static TYPE_DATE_TIME_LOCAL: string = \"datetime-local\";\n    /**\n     * <p>search 类型用于搜索域，比如站点搜索或 Google 搜索。</p>\n     * <p>search 域显示为常规的文本域。</p>\n     */\n    static TYPE_SEARCH: string = \"search\";\n\n    /**@private */\n    protected static input: HTMLInputElement;\n    /**@private */\n    protected static area: HTMLTextAreaElement;\n    /**@private */\n    protected static inputElement: HTMLInputElement | HTMLTextAreaElement;\n    /**@private */\n    protected static inputContainer: HTMLDivElement;\n    /**@private */\n    protected static confirmButton: any;\n    /**@private */\n    protected static promptStyleDOM: any;\n\n    protected _focus: boolean;\n    protected _multiline: boolean = false;\n    protected _editable: boolean = true;\n    protected _restrict: string;\n    protected _restrictPattern: any;\n    protected _maxChars: number = 0;\n\n    private _type: string = \"text\";\n\n    /**@private */\n    static IOS_IFRAME: boolean = false;\n\n    static isAppUseNewInput: boolean = false;\n\n    /**创建一个新的 <code>Input</code> 类实例。*/\n    constructor() {\n        super();\n        Input.IOS_IFRAME = (ILaya.Browser.onIOS && ILaya.Browser.window.top != ILaya.Browser.window.self);\n        this._width = 100;\n        this._height = 20;\n\n        this.multiline = false;\n        this.overflow = Text.SCROLL;\n        this._promptColor = \"#A9A9A9\";\n\n        this.on(Event.MOUSE_DOWN, this, this._onMouseDown);\n        this.on(Event.UNDISPLAY, this, this._onUnDisplay);\n    }\n\n    /**@internal */\n    static __init__(): void {\n        Input._createInputElement();\n\n        // 移动端通过画布的touchend调用focus\n        if (ILaya.Browser.onMobile) {\n            var isTrue: boolean = false;\n            if (ILaya.Browser.onMiniGame || ILaya.Browser.onBDMiniGame || ILaya.Browser.onQGMiniGame || ILaya.Browser.onKGMiniGame || ILaya.Browser.onVVMiniGame || ILaya.Browser.onAlipayMiniGame || ILaya.Browser.onQQMiniGame || ILaya.Browser.onBLMiniGame || ILaya.Browser.onTTMiniGame || ILaya.Browser.onHWMiniGame || ILaya.Browser.onTBMiniGame) {\n                isTrue = true;\n            }\n            Render.canvas.addEventListener(Input.IOS_IFRAME ? (isTrue ? \"touchend\" : \"click\") : \"touchend\", Input._popupInputMethod);\n        }\n    }\n\n    // 移动平台在单击事件触发后弹出输入法\n    private static _popupInputMethod(e: any): void {\n        //e.preventDefault();\n        if (!InputManager.isTextInputting) return;\n\n        var input: any = Input.inputElement;\n\n        // 弹出输入法。\n        input.focus();\n    }\n\n    private static _createInputElement(): void {\n        Input._initInput(Input.area = ILaya.Browser.createElement(\"textarea\"));\n        Input._initInput(Input.input = ILaya.Browser.createElement(\"input\"));\n\n        Input.inputContainer = ILaya.Browser.createElement(\"div\");\n        Input.inputContainer.style.position = \"absolute\";\n        Input.inputContainer.style.zIndex = '1E5';\n        ILaya.Browser.container.appendChild(Input.inputContainer);\n        (Input.inputContainer as any).setPos = function (x: number, y: number): void {\n            Input.inputContainer.style.left = x + 'px';\n            Input.inputContainer.style.top = y + 'px';\n        };\n    }\n\n    private static _initInput(input: HTMLInputElement): void {\n        var style = input.style;\n        style.cssText = \"position:absolute;overflow:hidden;resize:none;transform-origin:0 0;-webkit-transform-origin:0 0;-moz-transform-origin:0 0;-o-transform-origin:0 0;\";\n        style.resize = 'none';\n        style.backgroundColor = 'transparent';\n        style.border = 'none';\n        style.outline = 'none';\n        style.zIndex = '1';\n\n        input.addEventListener('input', Input._processInputting);\n\n        input.addEventListener('mousemove', Input._stopEvent, { passive: false });\n        input.addEventListener('mousedown', Input._stopEvent, { passive: false });\n        input.addEventListener('touchmove', Input._stopEvent, { passive: false });\n\n        (input as any).setFontFace = function (fontFace: string): void { input.style.fontFamily = fontFace; };\n        if (!(LayaEnv.isConch && !Input.isAppUseNewInput)) {\n            (input as any).setColor = function (color: string): void { input.style.color = color; };\n            (input as any).setFontSize = function (fontSize: number): void { input.style.fontSize = fontSize + 'px'; };\n        }\n    }\n\n    private static _processInputting(e: any): void {\n        var input: Input = (Input.inputElement as any).target;\n        if (!input) return;\n\n        var value = Input.inputElement.value;\n\n        // 对输入字符进行限制\n        if (input._restrictPattern) {\n            // 部分输入法兼容\n            value = value.replace(/\\u2006|\\x27/g, \"\");\n\n            if (input._restrictPattern.test(value)) {\n                value = value.replace(input._restrictPattern, \"\");\n                Input.inputElement.value = value;\n            }\n        }\n\n        if (value == null) value = \"\";\n        input._text = value;\n        input.event(Event.INPUT);\n    }\n\n    private static _stopEvent(e: any): void {\n        if (e.type == 'touchmove')\n            e.preventDefault();\n        e.stopPropagation && e.stopPropagation();\n    }\n\n    /**\n     * 设置光标位置和选取字符。\n     * @param\tstartIndex\t光标起始位置。\n     * @param\tendIndex\t光标结束位置。\n     */\n    setSelection(startIndex: number, endIndex: number): void {\n        this.focus = true;\n        Input.inputElement.selectionStart = startIndex;\n        Input.inputElement.selectionEnd = endIndex;\n    }\n\n    /**表示是否是多行输入框。*/\n    get multiline(): boolean {\n        return this._multiline;\n    }\n\n    set multiline(value: boolean) {\n        this._multiline = value;\n        if (!SerializeUtil.isDeserializing)\n            this.valign = value ? \"top\" : \"middle\";\n    }\n\n    /**\n     * 获取对输入框的引用实例。\n     */\n    get nativeInput(): HTMLInputElement | HTMLTextAreaElement {\n        return this._multiline ? Input.area : Input.input;\n    }\n\n    private _onUnDisplay(e: Event = null): void {\n        this.focus = false;\n    }\n\n    private _onMouseDown(e: Event): void {\n        this.focus = true;\n    }\n    /**\n     * 在输入期间，如果 Input 实例的位置改变，调用_syncInputTransform同步输入框的位置。\n     */\n    private _syncInputTransform(): void {\n        var inputElement = this.nativeInput;\n        var transform = SpriteUtils.getTransformRelativeToWindow(this, this._padding[3], this._padding[0]);\n        var inputWid = this._width - this._padding[1] - this._padding[3];\n        var inputHei = this._height - this._padding[0] - this._padding[2];\n        if (LayaEnv.isConch && !Input.isAppUseNewInput) {\n            (inputElement as any).setScale(transform.scaleX, transform.scaleY);\n            (inputElement as any).setSize(inputWid, inputHei);\n            (inputElement as any).setPos(transform.x, transform.y);\n        } else {\n            Input.inputContainer.style.transform = Input.inputContainer.style.webkitTransform = \"scale(\" + transform.scaleX + \",\" + transform.scaleY + \") rotate(\" + (ILaya.stage.canvasDegree) + \"deg)\";\n            inputElement.style.width = inputWid + 'px';\n            inputElement.style.height = inputHei + 'px';\n            Input.inputContainer.style.left = transform.x + 'px';\n            Input.inputContainer.style.top = transform.y + 'px';\n        }\n    }\n\n    /**选中当前实例的所有文本。*/\n    select(): void {\n        this.nativeInput.select();\n    }\n\n    /**\n     * 表示焦点是否在此实例上。\n     */\n    get focus(): boolean {\n        return this._focus;\n    }\n\n    // 移动平台最后单击画布才会调用focus\n    // 因此 调用focus接口是无法都在移动平台立刻弹出键盘的\n    set focus(value: boolean) {\n        var input = this.nativeInput;\n\n        if (this._focus !== value) {\n            if (value) {\n                if ((input as any).target) {\n                    (input as any).target._focusOut();\n                } else {\n                    this._setInputMethod();\n                }\n                input = this.nativeInput;\n                (input as any).target = this;\n                this._focusIn();\n            } else {\n                (input as any).target = null;\n                this._focusOut();\n                ILaya.Browser.document.body.scrollTop = 0;\n                input.blur();\n\n                if (LayaEnv.isConch && !Input.isAppUseNewInput) (input as any).setPos(-10000, -10000);\n                else if (Input.inputContainer.contains(input)) Input.inputContainer.removeChild(input);\n            }\n        }\n    }\n\n    private _setInputMethod(): void {\n        Input.input.parentElement && (Input.inputContainer.removeChild(Input.input));\n        Input.area.parentElement && (Input.inputContainer.removeChild(Input.area));\n\n        // 安卓的安全键盘的问题；\n        // 如果设置type='password' 则会弹安全键盘\n        // 就算以后设置type='text' 还是会弹安全键盘，所以对于安卓，干脆全部重新生成\n        if (ILaya.Browser.onAndroid) {\n            Input.input = Input.inputElement = ILaya.Browser.createElement('input');\n            Input._initInput(Input.input);\n        }\n\n        Input.inputElement = (this._multiline ? Input.area : Input.input);\n        Input.inputContainer.appendChild(Input.inputElement);\n        if (Text.RightToLeft) {\n            Input.inputElement.style.direction = \"rtl\";\n        }\n    }\n\n    private _focusIn(): void {\n        InputManager.isTextInputting = true;\n        var input = this.nativeInput;\n\n        Input.input && (Input.input.type = this._type);\t\t// 设置input控件的 password\n\n        this._focus = true;\n\n        var cssStyle = input.style;\n        cssStyle.whiteSpace = (this.wordWrap ? \"pre-wrap\" : \"nowrap\");\n        this._setPromptColor();\n\n        input.readOnly = !this._editable;\n        if (LayaEnv.isConch && !Input.isAppUseNewInput) {\n            (input as any).setType(this._type);\n            (input as any).setForbidEdit(!this._editable);\n        }\n        input.maxLength = this._maxChars <= 0 ? 1E5 : this._maxChars;\n\n        input.value = this._text;\n        input.placeholder = this._prompt;\n\n        ILaya.stage.off(Event.KEY_DOWN, this, this._onKeyDown);\n        ILaya.stage.on(Event.KEY_DOWN, this, this._onKeyDown);\n        ILaya.stage.focus = this;\n        this.event(Event.FOCUS);\n\n        // PC端直接调用focus进入焦点。\n        if (ILaya.Browser.onPC) input.focus();\n\n        // PC浏览器隐藏文字\n        if (!(LayaEnv.isConch && Input.isAppUseNewInput) && !ILaya.Browser.onMiniGame && !ILaya.Browser.onBDMiniGame && !ILaya.Browser.onQGMiniGame && !ILaya.Browser.onKGMiniGame && !ILaya.Browser.onVVMiniGame && !ILaya.Browser.onAlipayMiniGame && !ILaya.Browser.onQQMiniGame && !ILaya.Browser.onBLMiniGame && !ILaya.Browser.onTTMiniGame && !ILaya.Browser.onHWMiniGame && !ILaya.Browser.onTBMiniGame) {\n            this.graphics.clear(true);\n            this.drawBg();\n            this._hideText = true;\n        }\n\n        // PC同步输入框外观。\n        (input as any).setColor(this.color);\n        (input as any).setFontSize(this.fontSize);\n        (input as any).setFontFace(this._realFont);\n        if (LayaEnv.isConch && !Input.isAppUseNewInput) {\n            (input as any).setMultiAble && (input as any).setMultiAble(this._multiline);\n        }\n        cssStyle.lineHeight = (this.leading + this.fontSize) + \"px\";\n        cssStyle.fontStyle = (this.italic ? \"italic\" : \"normal\");\n        cssStyle.fontWeight = (this.bold ? \"bold\" : \"normal\");\n        cssStyle.textAlign = this.align;\n        cssStyle.padding = \"0 0\";\n\n        // 输入框重定位。\n        this._syncInputTransform();\n        if (!LayaEnv.isConch && ILaya.Browser.onPC)\n            ILaya.systemTimer.frameLoop(1, this, this._syncInputTransform);\n    }\n\n    // 设置DOM输入框提示符颜色。\n    private _setPromptColor(): void {\n        // 创建style标签\n        Input.promptStyleDOM = ILaya.Browser.getElementById(\"promptStyle\");\n        if (!Input.promptStyleDOM) {\n            Input.promptStyleDOM = ILaya.Browser.createElement(\"style\");\n            Input.promptStyleDOM.setAttribute(\"id\", \"promptStyle\");\n            ILaya.Browser.document.head.appendChild(Input.promptStyleDOM);\n        }\n\n        // 设置style标签\n        Input.promptStyleDOM.innerText = \"input::-webkit-input-placeholder, textarea::-webkit-input-placeholder {\" + \"color:\" + this._promptColor + \"}\" + \"input:-moz-placeholder, textarea:-moz-placeholder {\" + \"color:\" + this._promptColor + \"}\" + \"input::-moz-placeholder, textarea::-moz-placeholder {\" + \"color:\" + this._promptColor + \"}\" + \"input:-ms-input-placeholder, textarea:-ms-input-placeholder {\" + \"color:\" + this._promptColor + \"}\";\n    }\n\n    /**@private */\n    private _focusOut(): void {\n        if (!InputManager.isTextInputting) return;\n        if (!InputManager.isiOSWKwebView)\n            InputManager.isTextInputting = false;\n        this._focus = false;\n        this._hideText = false;\n\n        this.text = this.nativeInput.value;\n        this.markChanged();\n        this.typeset();\n\n        ILaya.stage.off(Event.KEY_DOWN, this, this._onKeyDown);\n        ILaya.stage.focus = null;\n        this.event(Event.BLUR);\n        this.event(Event.CHANGE);\n        if (LayaEnv.isConch && !Input.isAppUseNewInput) this.nativeInput.blur();\n        // 只有PC会注册此事件。\n        ILaya.Browser.onPC && ILaya.systemTimer.clear(this, this._syncInputTransform);\n    }\n\n    /**@private */\n    private _onKeyDown(e: any): void {\n        if (e.keyCode === 13) {\n            // 移动平台单行输入状态下点击回车收回输入法。 \n            if (ILaya.Browser.onMobile && !this._multiline)\n                this.focus = false;\n\n            this.event(Event.ENTER);\n        }\n    }\n\n    /**\n     * 小游戏专用(解决键盘输入框内容和游戏输入框内容不同步的bug)\n     * @param value \n     */\n    miniGameTxt(value: string) {\n        value += '';\n        if (!this._multiline)\n            value = value.replace(/\\r?\\n/g, '');\n        this.text = value;\n    }\n\n    /**@inheritDoc \n     * @override\n    */\n    set text(value: string) {\n        if (value == null)\n            value = \"\";\n        else if (typeof (value) !== \"string\")\n            value = '' + value;\n\n        if (this._focus) {\n            this.nativeInput.value = value;\n            this.event(Event.CHANGE);\n        } else {\n            // 单行时不允许换行\n            if (!this._multiline)\n                value = value.replace(/\\r?\\n/g, '');\n\n            super.text = value;\n        }\n    }\n    /**\n     * @override\n     */\n    get text(): string {\n        if (this._focus)\n            return this.nativeInput.value;\n        else\n            return super.text;\n    }\n\n    /**@inheritDoc \n     * @override\n    */\n    set_color(value: string) {\n        if (this._focus)\n            (this.nativeInput as any).setColor(value);\n\n        super.set_color(value);\n    }\n\n    /**@inheritDoc \n     * @override\n    */\n    set bgColor(value: string) {\n        super.bgColor = value;\n        if (LayaEnv.isConch && !Input.isAppUseNewInput)\n            (this.nativeInput as any).setBgColor(value);\n    }\n\n    get bgColor() {\n        return super.bgColor;\n    }\n\n    /**限制输入的字符。*/\n    get restrict(): string {\n        return this._restrict;\n    }\n\n    set restrict(value: string) {\n        this._restrict = value;\n        // H5保存RegExp\n        if (value) {\n            value = \"[^\" + value + \"]\";\n\n            // 如果pattern为^\\00-\\FF，则我们需要的正则表达式是\\00-\\FF\n            if (value.indexOf(\"^^\") > -1)\n                value = value.replace(\"^^\", \"\");\n\n            this._restrictPattern = new RegExp(value, \"g\");\n        } else\n            this._restrictPattern = null;\n    }\n\n    /**\n     * 是否可编辑。\n     */\n    set editable(value: boolean) {\n        this._editable = value;\n        if (LayaEnv.isConch && !Input.isAppUseNewInput) {\n            (Input.input as any).setForbidEdit(!value);\n        }\n    }\n\n    get editable(): boolean {\n        return this._editable;\n    }\n\n    /**\n     * <p>字符数量限制，默认为10000。</p>\n     * <p>设置字符数量限制时，小于等于0的值将会限制字符数量为10000。</p>\n     */\n    get maxChars(): number {\n        return this._maxChars;\n    }\n\n    set maxChars(value: number) {\n        this._maxChars = value;\n    }\n\n    /**\n     * 设置输入提示符。\n     */\n    get prompt(): string {\n        return this._prompt;\n    }\n\n    set prompt(value: string) {\n        value = Text.langPacks?.[value] || value;\n        if (this._prompt != value) {\n            this._prompt = value;\n            this.markChanged();\n        }\n    }\n\n    /**\n     * 设置输入提示符颜色。\n     */\n    get promptColor(): string {\n        return this._promptColor;\n    }\n\n    set promptColor(value: string) {\n        if (this._promptColor != value) {\n            this._promptColor = value;\n            this.markChanged();\n        }\n    }\n\n    /**\n     * <p>输入框类型为Input静态常量之一。</p>\n     * <ul>\n     * <li>TYPE_TEXT</li>\n     * <li>TYPE_PASSWORD</li>\n     * <li>TYPE_EMAIL</li>\n     * <li>TYPE_URL</li>\n     * <li>TYPE_NUMBER</li>\n     * <li>TYPE_RANGE</li>\n     * <li>TYPE_DATE</li>\n     * <li>TYPE_MONTH</li>\n     * <li>TYPE_WEEK</li>\n     * <li>TYPE_TIME</li>\n     * <li>TYPE_DATE_TIME</li>\n     * <li>TYPE_DATE_TIME_LOCAL</li>\n     * </ul>\n     * <p>平台兼容性参见http://www.w3school.com.cn/html5/html_5_form_input_types.asp。</p>\n     */\n    get type(): string {\n        return this._type;\n    }\n\n    set type(value: string) {\n        this._asPassword = value === \"password\";\n        this._type = value;\n        this.markChanged();\n    }\n}","import { Component } from \"./Component\"\nimport { HideFlags } from \"../Const\";\nimport { Sprite } from \"../display/Sprite\"\nimport { Event } from \"../events/Event\"\n\n/**\n * 相对布局插件\n */\nexport class Widget extends Component {\n    /**一个已初始化的 <code>Widget</code> 实例。*/\n    static EMPTY: Widget = null;// new Widget();\n\n    private _top: number = null;\n    private _bottom: number = null;\n    private _left: number = null;\n    private _right: number = null;\n    private _centerX: number = null;\n    private _centerY: number = null;\n\n    constructor() {\n        super();\n\n        this.runInEditor = true;\n        this.hideFlags |= HideFlags.HideAndDontSave;\n    }\n\n    onReset(): void {\n        this._top = this._bottom = this._left = this._right = this._centerX = this._centerY = null;\n    }\n\n    protected _onEnable(): void {\n        if (this.owner.parent) this._onAdded();\n        else this.owner.once(Event.ADDED, this, this._onAdded);\n    }\n\n    protected _onDisable(): void {\n        this.owner.off(Event.ADDED, this, this._onAdded);\n        if (this.owner.parent) this.owner.parent.off(Event.RESIZE, this, this._onParentResize);\n    }\n\n    protected _onAdded(): void {\n        if (this.owner.parent)\n            this.owner.parent.on(Event.RESIZE, this, this._onParentResize);\n        this.resetLayoutX();\n        this.resetLayoutY();\n    }\n\n    /**\n     * 父容器的 <code>Event.RESIZE</code> 事件侦听处理函数。\n     */\n    protected _onParentResize(): void {\n        var flagX = this.resetLayoutX();\n        var flagY = this.resetLayoutY();\n        if (flagX || flagY) this.owner.event(Event.RESIZE);\n    }\n\n    /**\n     * <p>重置对象的 <code>X</code> 轴（水平方向）布局。</p>\n     * @private\n     */\n    resetLayoutX(): boolean {\n        var owner: Sprite = (<Sprite>this.owner);\n        if (!owner) return false;\n        var parent: Sprite = (<Sprite>owner.parent);\n        if (parent) {\n            if (this._centerX != null) {\n                owner.x = Math.round((parent.width - owner.displayWidth) * 0.5 + this._centerX + owner.pivotX * owner.scaleX);\n            } else if (this._left != null) {\n                owner.x = Math.round(this._left + owner.pivotX * owner.scaleX);\n                if (this._right != null) {\n                    if (!parent._width) return false;\n                    //TODO:如果用width，会死循环\n                    var temp: number = (parent._width - this._left - this._right) / (owner.scaleX || 0.01);\n                    if (temp != owner._width) {\n                        owner.width = temp;\n                        return true;\n                    }\n                }\n            } else if (this._right != null) {\n                owner.x = Math.round(parent.width - owner.displayWidth - this._right + owner.pivotX * owner.scaleX);\n            }\n        }\n        return false;\n    }\n\n    /**\n     * <p>重置对象的 <code>Y</code> 轴（垂直方向）布局。</p>\n     * @private\n     */\n    resetLayoutY(): boolean {\n        var owner: Sprite = (<Sprite>this.owner);\n        if (!owner) return false;\n        var parent: Sprite = (<Sprite>owner.parent);\n        if (parent) {\n            if (this._centerY != null) {\n                owner.y = Math.round((parent.height - owner.displayHeight) * 0.5 + this._centerY + owner.pivotY * owner.scaleY);\n            } else if (this._top != null) {\n                owner.y = Math.round(this._top + owner.pivotY * owner.scaleY);\n                if (this._bottom != null) {\n                    if (!parent._height) return false;\n                    //TODO:\n                    var temp: number = (parent._height - this._top - this._bottom) / (owner.scaleY || 0.01);\n                    if (temp != owner._height) {\n                        owner.height = temp;\n                        return true;\n                    }\n                }\n            } else if (this._bottom != null) {\n                owner.y = Math.round(parent.height - owner.displayHeight - this._bottom + owner.pivotY * owner.scaleY);\n            }\n        }\n        return false;\n    }\n\n    /**\n     * 重新计算布局\n     */\n    resetLayout(): void {\n        if (this.owner) {\n            this.resetLayoutX();\n            this.resetLayoutY();\n        }\n    }\n\n    /**表示距顶边的距离（以像素为单位）。*/\n    get top(): number {\n        return this._top;\n    }\n\n    set top(value: number) {\n        if (isNaN(value)) //兼容2.0\n            value = null;\n        if (this._top != value) {\n            this._top = value;\n            this.resetLayoutY();\n        }\n    }\n\n    /**表示距底边的距离（以像素为单位）。*/\n    get bottom(): number {\n        return this._bottom;\n    }\n\n    set bottom(value: number) {\n        if (isNaN(value)) //兼容2.0\n            value = null;\n        if (this._bottom != value) {\n            this._bottom = value;\n            this.resetLayoutY();\n        }\n    }\n\n    /**表示距左边的距离（以像素为单位）。*/\n    get left(): number {\n        return this._left;\n    }\n\n    set left(value: number) {\n        if (isNaN(value)) //兼容2.0\n            value = null;\n        if (this._left != value) {\n            this._left = value;\n            this.resetLayoutX();\n        }\n    }\n\n    /**表示距右边的距离（以像素为单位）。*/\n    get right(): number {\n        return this._right;\n    }\n\n    set right(value: number) {\n        if (isNaN(value)) //兼容2.0\n            value = null;\n        if (this._right != value) {\n            this._right = value;\n            this.resetLayoutX();\n        }\n    }\n\n    /**表示距水平方向中心轴的距离（以像素为单位）。*/\n    get centerX(): number {\n        return this._centerX;\n    }\n\n    set centerX(value: number) {\n        if (isNaN(value)) //兼容2.0\n            value = null;\n        if (this._centerX != value) {\n            this._centerX = value;\n            this.resetLayoutX();\n        }\n    }\n\n    /**表示距垂直方向中心轴的距离（以像素为单位）。*/\n    get centerY(): number {\n        return this._centerY;\n    }\n\n    set centerY(value: number) {\n        if (isNaN(value)) //兼容2.0\n            value = null;\n        if (this._centerY != value) {\n            this._centerY = value;\n            this.resetLayoutY();\n        }\n    }\n}\n\nWidget.EMPTY = new Widget();\n","import { LayaEnv } from \"../../LayaEnv\";\nimport { Graphics } from \"../display/Graphics\"\nimport { Sprite } from \"../display/Sprite\";\nimport { Point } from \"../maths/Point\"\nimport { Rectangle } from \"../maths/Rectangle\"\nimport { ClassUtils } from \"./ClassUtils\";\nimport { IHitArea } from \"./IHitArea\";\n\nconst _rect: Rectangle = new Rectangle();\nconst _ptPoint: Point = new Point();\n\n/**\n * 鼠标点击区域，可以设置绘制一系列矢量图作为点击区域和非点击区域（目前只支持圆形，矩形，多边形）\n *\n */\nexport class HitArea implements IHitArea {\n    _hit: Graphics;\n    _unHit: Graphics;\n\n    /**\n     * 检测对象是否包含指定的点。\n     * @param\tx\t点的 X 轴坐标值（水平位置）。\n     * @param\ty\t点的 Y 轴坐标值（垂直位置）。\n     * @return\t如果包含指定的点，则值为 true；否则为 false。\n     */\n    contains(x: number, y: number, sp: Sprite): boolean {\n        if (!HitArea._isHitGraphic(x, y, sp, this._hit))\n            return false;\n        return !HitArea._isHitGraphic(x, y, sp, this._unHit);\n    }\n\n    /**\n     * @internal\n     * 是否击中Graphic\n     */\n    static _isHitGraphic(x: number, y: number, sp: Sprite, graphic: Graphics): boolean {\n        if (!graphic) return false;\n        let cmds = graphic.cmds;\n        if (cmds.length == 0) return false;\n        let len = cmds.length;\n        for (let i = 0; i < len; i++) {\n            let cmd = cmds[i];\n            if (!cmd) continue;\n            switch (cmd.cmdID) {\n                case \"Translate\":\n                    x -= cmd.tx;\n                    y -= cmd.ty;\n            }\n            if (HitArea._isHitCmd(x, y, sp, cmd)) return true;\n        }\n        return false;\n    }\n\n    /**\n     * @internal\n     * 是否击中绘图指令\n     */\n    static _isHitCmd(x: number, y: number, sp: Sprite, cmd: any): boolean {\n        if (!cmd) return false;\n        var rst: boolean = false;\n        switch (cmd.cmdID) {\n            case \"DrawRect\":\n                if (cmd.percent)\n                    _rect.setTo(cmd.x * sp.width, cmd.y * sp.height, cmd.width * sp.width, cmd.height * sp.height);\n                else\n                    _rect.setTo(cmd.x, cmd.y, cmd.width, cmd.height);\n                rst = _rect.contains(x, y);\n                break;\n            case \"DrawCircle\":\n                let r = cmd.radius;\n                var d: number;\n                if (cmd.percent) {\n                    x -= cmd.x * sp.width;\n                    y -= cmd.y * sp.height;\n                    r *= sp.width;\n                }\n                else {\n                    x -= cmd.x;\n                    y -= cmd.y;\n                }\n                d = x * x + y * y;\n                rst = d < r * r;\n                break;\n            case \"DrawPoly\":\n                x -= cmd.x;\n                y -= cmd.y;\n                rst = HitArea._ptInPolygon(x, y, cmd.points);\n                break;\n        }\n        return rst;\n    }\n\n    /**\n     * @internal\n     * 坐标是否在多边形内\n     */\n    static _ptInPolygon(x: number, y: number, areaPoints: any[]): boolean {\n        var p: Point = _ptPoint;\n        p.setTo(x, y);\n        // 交点个数\n        var nCross: number = 0;\n        var p1x: number, p1y: number, p2x: number, p2y: number;\n        var len: number;\n        len = areaPoints.length;\n        for (var i: number = 0; i < len; i += 2) {\n            p1x = areaPoints[i];\n            p1y = areaPoints[i + 1];\n            p2x = areaPoints[(i + 2) % len];\n            p2y = areaPoints[(i + 3) % len];\n            //var p1:Point = areaPoints[i];\n            //var p2:Point = areaPoints[(i + 1) % areaPoints.length]; // 最后一个点与第一个点连线\n            if (p1y == p2y) continue;\n            if (p.y < Math.min(p1y, p2y)) continue;\n            if (p.y >= Math.max(p1y, p2y)) continue;\n            // 求交点的x坐标\n            var tx: number = (p.y - p1y) * (p2x - p1x) / (p2y - p1y) + p1x;\n            // 只统计p1p2与p向右射线的交点\n            if (tx > p.x) nCross++;\n        }\n        // 交点为偶数，点在多边形之外\n        return (nCross % 2 == 1);\n    }\n\n    /**\n     * 可点击区域，可以设置绘制一系列矢量图作为点击区域（目前只支持圆形，矩形，多边形）\n     */\n    get hit(): Graphics {\n        if (!this._hit) this._hit = new Graphics();\n        return this._hit;\n    }\n\n    set hit(value: Graphics) {\n        this._hit = value;\n    }\n\n    /**\n     * 不可点击区域，可以设置绘制一系列矢量图作为非点击区域（目前只支持圆形，矩形，多边形）\n     */\n    get unHit(): Graphics {\n        if (!this._unHit) this._unHit = new Graphics();\n        return this._unHit;\n    }\n\n    set unHit(value: Graphics) {\n        this._unHit = value;\n    }\n\n    onAfterDeserialize() {\n        if (LayaEnv.isPlaying) {\n            if ((<any>this)._hitCmds) {\n                this.hit.cmds = (<any>this)._hitCmds;\n                delete (<any>this)._hitCmds;\n            }\n\n            if ((<any>this)._unHitCmds) {\n                this.unHit.cmds = (<any>this)._unHitCmds;\n                delete (<any>this)._unHitCmds;\n            }\n        }\n    }\n}\n\nClassUtils.regClass(\"HitArea\", HitArea);\n\n","import { Utils } from \"./Utils\";\nimport { ILaya } from \"../../ILaya\";\n\n/**\n * 封装弱引用WeakMap\n * 如果支持WeakMap，则使用WeakMap，如果不支持，则用Object代替\n * 注意：如果采用Object，为了防止内存泄漏，则采用定时清理缓存策略\n * \n * 这里的设计是错误的，为了兼容，先不删掉这个类，直接采用Object\n */\nexport class WeakObject {\n    /**是否支持WeakMap*/\n    static supportWeakMap = false;\n    /**如果不支持WeakMap，则多少时间清理一次缓存，默认10分钟清理一次*/\n    static delInterval = 10 * 60 * 1000;\n    /**全局WeakObject单例*/\n    static I: WeakObject;\n    /**@private */\n    private static _maps: any[] = [];\n    /**@internal */\n    _obj: any;\n\n    /**@internal */\n    static __init__(): void {\n        WeakObject.I = new WeakObject();\n        //WeakObject.supportWeakMap = Browser.window.WeakMap != null;\n        //如果不支持，10分钟回收一次\n        if (!WeakObject.supportWeakMap) ILaya.systemTimer.loop(WeakObject.delInterval, null, WeakObject.clearCache);\n    }\n\n    /**清理缓存，回收内存*/\n    static clearCache(): void {\n        for (var i = 0, n = WeakObject._maps.length; i < n; i++) {\n            var obj = WeakObject._maps[i];\n            obj._obj = {};\n        }\n    }\n\n    constructor() {\n        this._obj = {};\n        WeakObject._maps.push(this);\n    }\n\n\t/**\n\t * 设置缓存\n\t * @param\tkey kye对象，可被回收\n\t * @param\tvalue object对象，可被回收\n\t */\n    set(key: any, value: any): void {\n        if (key == null) return;\n        if (WeakObject.supportWeakMap) {\n        } else {\n            if (typeof (key) == 'string' || typeof (key) == 'number') {\n                this._obj[key as any] = value;\n            } else {\n                key.$_GID || (key.$_GID = Utils.getGID());\n                this._obj[key.$_GID] = value;\n            }\n        }\n    }\n\n\t/**\n\t * 获取缓存\n\t * @param\tkey kye对象，可被回收\n\t */\n    get(key: any): any {\n        if (key == null) return null;\n        if (WeakObject.supportWeakMap) {\n        } else {\n            if (typeof (key) == 'string' || typeof (key) == 'number') return this._obj[key as any];\n            return this._obj[key.$_GID];\n        }\n    }\n\n\t/**\n\t * 删除缓存\n\t */\n    del(key: any): void {\n        if (key == null) return;\n        if (WeakObject.supportWeakMap) {\n        } else {\n            if (typeof (key) == 'string' || typeof (key) == 'number') delete this._obj[key as any];\n            else delete this._obj[this._obj.$_GID];\n        }\n    }\n\n\t/**\n\t * 是否有缓存\n\t */\n    has(key: any): boolean {\n        if (key == null) return false;\n        if (WeakObject.supportWeakMap) {\n            return false;\n        } else {\n            if (typeof (key) == 'string' || typeof (key) == 'number') return this._obj[key as any] != null;\n            return this._obj[this._obj.$_GID] != null;\n        }\n    }\n}\n\n//WeakObject.__init__();","import { LayaEnv } from \"../../LayaEnv\";\nimport { Node } from \"../display/Node\";\nimport { Scene } from \"../display/Scene\";\nimport { LegacyUIParser } from \"../loaders/LegacyUIParser\";\nimport { Resource } from \"./Resource\";\n\nexport class Prefab extends Resource {\n    public readonly version: number;\n    protected _deps: Array<Resource>;\n\n    /**@private */\n    json: any; //兼容2.0\n\n    constructor(version?: number) {\n        super();\n\n        this.version = version;\n        this._deps = [];\n    }\n\n    /**\n     * 创建实例\n     */\n    create(options?: Record<string, any>, errors?: Array<any>): Node {\n        if (this.json) //兼容2.0\n            return LegacyUIParser.createByData(null, this.json);\n        else\n            return null;\n    }\n\n    get deps(): ReadonlyArray<Resource> {\n        return this._deps;\n    }\n\n    addDep(res: Resource) {\n        if (res instanceof Resource) {\n            res._addReference();\n            this._deps.push(res);\n\n            if (!LayaEnv.isPlaying && (res instanceof Prefab))\n                res.on(\"obsolute\", this, this.onDepObsolute);\n        }\n    }\n\n    addDeps(resArr: Array<Resource>) {\n        for (let res of resArr) {\n            if (res instanceof Resource) {\n                res._addReference();\n                this._deps.push(res);\n\n                if (!LayaEnv.isPlaying && (res instanceof Prefab))\n                    res.on(\"obsolute\", this, this.onDepObsolute);\n            }\n        }\n    }\n\n    protected _disposeResource(): void {\n        for (let res of this._deps) {\n            res._removeReference();\n\n            if (!LayaEnv.isPlaying && (res instanceof Prefab))\n                res.off(\"obsolute\", this, this.onDepObsolute);\n        }\n    }\n\n    public get obsolute(): boolean {\n        return this._obsolute;\n    }\n\n    public set obsolute(value: boolean) {\n        if (this._obsolute != value) {\n            this._obsolute = value;\n            if (value && !LayaEnv.isPlaying)\n                this.event(\"obsolute\");\n        }\n    }\n\n    private onDepObsolute() {\n        this.obsolute = true;\n    }\n}\n\n//旧版本兼容\nexport type HierarchyResource = Prefab;\nexport var HierarchyResource = Prefab;","import { Component } from \"../components/Component\"\nimport { FrameAnimation } from \"../display/FrameAnimation\"\nimport { Node } from \"../display/Node\"\nimport { ILaya } from \"../../ILaya\";\nimport { Graphics } from \"../display/Graphics\";\nimport { Sprite } from \"../display/Sprite\";\nimport { Matrix } from \"../maths/Matrix\";\nimport { Loader } from \"../net/Loader\";\nimport { ClassUtils } from \"../utils/ClassUtils\";\nimport { HitArea } from \"../utils/HitArea\";\nimport { Pool } from \"../utils/Pool\";\nimport { WeakObject } from \"../utils/WeakObject\";\nimport { Handler } from \"laya/utils/Handler\";\nimport { NodeFlags } from \"../Const\";\nimport { PrefabImpl } from \"../resource/PrefabImpl\";\nimport { Scene } from \"../display/Scene\";\nimport { LayaEnv } from \"../../LayaEnv\";\n\nvar _listClass: any;\nvar _viewClass: any;\n\n/**\n * @private 场景辅助类\n */\nexport class LegacyUIParser {\n    /**@private */\n    private static _funMap: WeakObject;\n    /**@private */\n    private static _parseWatchData: RegExp = /\\${(.*?)}/g;\n    /**@private */\n    private static _parseKeyWord: RegExp = /[a-zA-Z_][a-zA-Z0-9_]*(?:(?:\\.[a-zA-Z_][a-zA-Z0-9_]*)+)/g;\n    /**@internal */\n    static _sheet: any;\n\n    static parse(data: any, options: any) {\n        let root: Sprite = options?.root;\n        if (!root) {\n            let runtime: string = (LayaEnv.isPlaying && data.props.runtime) ? data.props.runtime : data.type;\n            let clas = ClassUtils.getClass(runtime);\n\n            if (data.props.renderType == \"instance\")\n                root = clas.instance || (clas.instance = new clas());\n            else\n                root = new clas();\n        }\n\n        if (root && (<any>root)._viewCreated)\n            return root;\n\n        return LegacyUIParser.createByData(root, data);\n    }\n\n    /**\n     * @private 根据字符串，返回函数表达式\n     */\n    //TODO:coverage\n    static getBindFun(value: string): Function {\n        let map = LegacyUIParser._funMap;\n        if (!map)\n            map = LegacyUIParser._funMap = new WeakObject();\n        var fun: Function = LegacyUIParser._funMap.get(value);\n        if (fun == null) {\n            var temp: string = \"\\\"\" + value + \"\\\"\";\n            temp = temp.replace(/^\"\\${|}\"$/g, \"\").replace(/\\${/g, \"\\\"+\").replace(/}/g, \"+\\\"\");\n            var str: string = \"(function(data){if(data==null)return;with(data){try{\\nreturn \" + temp + \"\\n}catch(e){}}})\";\n            fun = (window as any).Laya._runScript(str);\n            LegacyUIParser._funMap.set(value, fun);\n        }\n        return fun;\n    }\n\n    /**\n     * @private\n     * 通过视图数据创建视图。\n     * @param uiView 视图数据信息。\n     */\n    //TODO:coverage\n    static createByData(root: Sprite, uiView: any): Sprite {\n        var tInitTool: InitTool = InitTool.create();\n\n        //递归创建节点\n        root = LegacyUIParser.createComp(uiView, root, root, null, tInitTool);\n        if (\"_idMap\" in root) {\n            (<any>root)[\"_idMap\"] = tInitTool._idMap;\n        }\n\n        //处理动画信息\n        if (uiView.animations) {\n            var anilist: any[] = [];\n            var animations: any[] = uiView.animations;\n            var i: number, len: number = animations.length;\n            var tAni: FrameAnimation;\n            var tAniO: any;\n            for (i = 0; i < len; i++) {\n                tAni = new FrameAnimation();\n                tAniO = animations[i];\n                tAni._setUp(tInitTool._idMap, tAniO);\n                (<any>root)[tAniO.name] = tAni;\n                tAni._setControlNode(root);\n                switch (tAniO.action) {\n                    case 1:\n                        tAni.play(0, false);\n                        break;\n                    case 2:\n                        tAni.play(0, true);\n                        break;\n                }\n                anilist.push(tAni);\n            }\n            (<any>root)._aniList = anilist;\n        }\n\n        //设置页面穿透\n        if ((root instanceof Scene) && root._width > 0 && uiView.props.hitTestPrior == null && !root.mouseThrough)\n            root.hitTestPrior = true;\n\n        //设置组件\n        tInitTool.finish();\n        root._setBit(NodeFlags.NOT_READY, false);\n        if (root.parent && root.parent.activeInHierarchy && root.active)\n            root._processActive(true);\n        return root;\n    }\n\n    static createInitTool(): InitTool {\n        return InitTool.create();\n    }\n\n    /**\n     * 根据UI数据实例化组件。\n     * @param uiView UI数据。\n     * @param comp 组件本体，如果为空，会新创建一个。\n     * @param view 组件所在的视图实例，用来注册var全局变量，如果值为空则不注册。\n     * @return 一个 Component 对象。\n     */\n    static createComp(uiView: any, comp: Sprite = null, view: Sprite = null, dataMap: any[] = null, initTool: InitTool = null): any {\n        comp = comp || LegacyUIParser.getCompInstance(uiView);\n        if (!comp) {\n            if (uiView.props && uiView.props.runtime)\n                console.warn(\"runtime not found:\" + uiView.props.runtime);\n            else\n                console.warn(\"can not create:\" + uiView.type);\n            return null;\n        }\n\n        var child: any[] = uiView.child;\n        if (child) {\n            var isList: boolean = comp instanceof (_listClass || (_listClass = ClassUtils.getClass(\"List\")));\n            for (var i: number = 0, n: number = child.length; i < n; i++) {\n                var node: any = child[i];\n                if ('itemRender' in comp && (node.props.name == \"render\" || node.props.renderType === \"render\")) {\n                    //如果list的itemRender\n                    (<any>comp)[\"itemRender\"] = node;\n                } else if (node.type == \"Graphic\") {\n                    //绘制矢量图\n                    this._addGraphicsToSprite(node, comp);\n                } else if (this._isDrawType(node.type)) {\n                    this._addGraphicToSprite(node, comp, true);\n                } else {\n                    if (isList) {\n                        //收集数据绑定信息\n                        var arr: any[] = [];\n                        var tChild: any = LegacyUIParser.createComp(node, null, view, arr, initTool);\n                        if (arr.length)\n                            tChild[\"_$bindData\"] = arr;\n                    } else {\n                        tChild = LegacyUIParser.createComp(node, null, view, dataMap, initTool);\n                    }\n\n                    //处理脚本\n                    if (node.type == \"Script\") {\n                        if (tChild instanceof Component) {\n                            comp.addComponentInstance(tChild);\n                        } else {\n                            //兼容老版本\n                            if (\"owner\" in tChild) {\n                                tChild[\"owner\"] = comp;\n                            } else if (\"target\" in tChild) {\n                                tChild[\"target\"] = comp;\n                            }\n                        }\n                    } else if (node.props.renderType == \"mask\" || node.props.name == \"mask\") {\n                        comp.mask = tChild;\n                    } else {\n                        tChild instanceof Node && comp.addChild(tChild);\n                    }\n                }\n            }\n        }\n\n        var props: any = uiView.props;\n        for (var prop in props) {\n            var value: any = props[prop];\n            if (typeof (value) == 'string' && (value.indexOf(\"@node:\") >= 0 || value.indexOf(\"@Prefab:\") >= 0)) {\n                if (initTool) {\n                    initTool.addNodeRef(comp, prop, <string>value);\n                }\n            } else\n                LegacyUIParser.setCompValue(comp, prop, value, view, dataMap);\n        }\n\n        if ((<any>comp)._afterInited) {\n            //if (initTool) {\n            //initTool.addInitItem(comp);\n            //} else {\n            (<any>comp)._afterInited();\n            //}\n        }\n\n        if (uiView.compId && initTool && initTool._idMap) {\n            initTool._idMap[uiView.compId] = comp;\n        }\n\n        return comp;\n    }\n\n    /**\n     * @private\n     * 设置组件的属性值。\n     * @param comp 组件实例。\n     * @param prop 属性名称。\n     * @param value 属性值。\n     * @param view 组件所在的视图实例，用来注册var全局变量，如果值为空则不注册。\n     */\n    private static setCompValue(comp: any, prop: string, value: any, view: any = null, dataMap: any[] = null): void {\n        //处理数据绑定\n        if (typeof (value) == 'string' && value.indexOf(\"${\") > -1) {\n            LegacyUIParser._sheet || (LegacyUIParser._sheet = ClassUtils.getClass(\"laya.data.Table\"));\n            if (!LegacyUIParser._sheet) {\n                console.warn(\"Can not find class Sheet\");\n                return;\n            }\n            //list的item处理\n            if (dataMap) {\n                dataMap.push(comp, prop, value);\n            } else if (view) {\n                if (value.indexOf(\"].\") == -1) {\n                    //TODO\n                    value = value.replace(\".\", \"[0].\");\n                }\n                var watcher: DataWatcher = new DataWatcher(comp, prop, value);\n\n                //执行第一次数据赋值\n                watcher.exe(view);\n                var one: any[], temp: any[];\n                var str: string = value.replace(/\\[.*?\\]\\./g, \".\");\n                while ((one = LegacyUIParser._parseWatchData.exec(str)) != null) {\n                    var key1: string = one[1];\n                    while ((temp = LegacyUIParser._parseKeyWord.exec(key1)) != null) {\n                        var key2: string = temp[0];\n                        var arr: any[] = (view._watchMap[key2] || (view._watchMap[key2] = []));\n                        arr.push(watcher);\n                        //监听数据变化\n                        LegacyUIParser._sheet.I.notifer.on(key2, view, view.changeData, [key2]);\n                    }\n                    //TODO\n                    arr = (view._watchMap[key1] || (view._watchMap[key1] = []));\n                    arr.push(watcher);\n                    LegacyUIParser._sheet.I.notifer.on(key1, view, view.changeData, [key1]);\n                }\n                //trace(view._watchMap);\n            }\n            return;\n        }\n\n        if (prop === \"var\" && view) {\n            view[value] = comp;\n        } else {\n            comp[prop] = (value === \"true\" ? true : (value === \"false\" ? false : value));\n        }\n    }\n\n    /**\n     * @private\n     * 通过组建UI数据，获取组件实例。\n     * @param json UI数据。\n     * @return Component 对象。\n     */\n    static getCompInstance(json: any): any {\n        if (json.type == \"UIView\") {\n            if (json.props && json.props.pageData) {\n                return LegacyUIParser.createByData(null, json.props.pageData);\n            }\n        }\n        var runtime: string = LayaEnv.isPlaying ? ((json.props && json.props.runtime) || json.type) : json.type;\n        var compClass = ClassUtils.getClass(runtime);\n        if (!compClass) throw \"Can not find class \" + runtime;\n        if (json.type === \"Script\" && compClass.prototype._doAwake) {\n            var comp: any = Pool.createByClass(compClass);\n            comp._destroyed = false;\n            return comp;\n        }\n        if (json.props && \"renderType\" in json.props && json.props[\"renderType\"] == \"instance\") {\n            if (!(compClass as any)[\"instance\"]) (compClass as any)[\"instance\"] = new compClass();\n            return (compClass as any)[\"instance\"];\n        }\n\n        let ret = new compClass();\n        if (ret instanceof (_viewClass || (_viewClass = ClassUtils.getClass(\"View\")))) //3.0取消了View的_scene属性，因为它不应该是一个scene。但兼容2.0的代码，这里补回去\n            (<any>ret)._scene = ret;\n        return ret;\n    }\n\n    public static collectResourceLinks(uiView: any) {\n        let test = new Set();\n        let innerUrls: string[] = [];\n\n        function addInnerUrl(url: string) {\n            if (!test.has(url)) {\n                test.add(url);\n                innerUrls.push(url);\n            }\n        }\n\n        function check(uiView: any) {\n            let props: any = uiView.props;\n            for (let prop in props) {\n                let value: any = props[prop];\n                if (typeof (value) == 'string' && value.indexOf(\"@Prefab:\") >= 0) {\n                    let url = value.replace(\"@Prefab:\", \"\");\n                    addInnerUrl(url);\n                }\n            }\n\n            let child: any[] = uiView.child;\n            if (child) {\n                for (let i: number = 0, n: number = child.length; i < n; i++) {\n                    let node: any = child[i];\n                    check(node);\n                }\n            }\n        }\n\n        if (uiView.loadList) {\n            for (let url of uiView.loadList)\n                addInnerUrl(url);\n        }\n\n        if (uiView.loadList3D) {\n            for (let url of uiView.loadList3D)\n                addInnerUrl(url);\n        }\n\n        check(uiView);\n        return innerUrls;\n    }\n\n    /**\n     * 根据指定的 json 数据创建节点对象。\n     * 比如:\n     * {\n     * \t\"type\":\"Sprite\",\n     * \t\"props\":{\n     * \t\t\"x\":100,\n     * \t\t\"y\":50,\n     * \t\t\"name\":\"item1\",\n     * \t\t\"scale\":[2,2]\n     * \t},\n     * \t\"customProps\":{\n     * \t\t\"x\":100,\n     * \t\t\"y\":50,\n     * \t\t\"name\":\"item1\",\n     * \t\t\"scale\":[2,2]\n     * \t},\n     * \t\"child\":[\n     * \t\t{\n     * \t\t\t\"type\":\"Text\",\n     * \t\t\t\"props\":{\n     * \t\t\t\t\"text\":\"this is a test\",\n     * \t\t\t\t\"var\":\"label\",\n     * \t\t\t\t\"rumtime\":\"\"\n     * \t\t\t}\n     * \t\t}\n     * \t]\n     * }\n     * @param\tjson json字符串或者Object对象。\n     * @param\tnode node节点，如果为空，则新创建一个。\n     * @param\troot 根节点，用来设置var定义。\n     * @return\t生成的节点。\n     */\n    static createByJson(json: any, node: any = null, root: Node = null, customHandler: Handler = null, instanceHandler: Handler = null): any {\n        if (typeof (json) == 'string') json = JSON.parse((<string>json));\n        var props: any = json.props;\n\n        if (!node) {\n            node = instanceHandler ? instanceHandler.runWith(json) : ClassUtils.getInstance(LayaEnv.isPlaying ? (props.runtime || json.type) : json.type);\n            if (!node) return null;\n        }\n\n        var child: any[] = json.child;\n        if (child) {\n            for (var i: number = 0, n: number = child.length; i < n; i++) {\n                var data: any = child[i];\n                if ((data.props.name === \"render\" || data.props.renderType === \"render\") && node[\"_$set_itemRender\"])\n                    node.itemRender = data;\n                else {\n                    if (data.type == \"Graphic\") {\n                        this._addGraphicsToSprite(data, node);\n                    } else if (this._isDrawType(data.type)) {\n                        this._addGraphicToSprite(data, node, true);\n                    } else {\n                        var tChild: any = this.createByJson(data, null, root, customHandler, instanceHandler)\n                        if (data.type === \"Script\") {\n                            if (\"owner\" in tChild) {\n                                tChild[\"owner\"] = node;\n                            } else if (\"target\" in tChild) {\n                                tChild[\"target\"] = node;\n                            }\n                        } else if (data.props.renderType == \"mask\") {\n                            node.mask = tChild;\n                        } else {\n                            node.addChild(tChild);\n                        }\n                    }\n                }\n            }\n        }\n\n        if (props) {\n            for (var prop in props) {\n                var value: any = props[prop];\n                if (prop === \"var\" && root) {\n                    (root as any)[value] = node;\n                } else if (value instanceof Array && node[prop] instanceof Function) {\n                    node[prop].apply(node, value);\n                } else {\n                    node[prop] = value;\n                }\n            }\n        }\n\n        if (customHandler && json.customProps) {\n            customHandler.runWith([node, json]);\n        }\n\n        if (node[\"created\"]) node.created();\n\n        return node;\n    }\n\n    /**\n     * @internal\n     * 将graphic对象添加到Sprite上\n     * @param graphicO graphic对象描述\n     */\n    static _addGraphicsToSprite(graphicO: any, sprite: Sprite): void {\n        var graphics: any[] = graphicO.child;\n        if (!graphics || graphics.length < 1) return;\n        var g: Graphics = this._getGraphicsFromSprite(graphicO, sprite);\n        var ox: number = 0;\n        var oy: number = 0;\n        if (graphicO.props) {\n            ox = this._getObjVar(graphicO.props, \"x\", 0);\n            oy = this._getObjVar(graphicO.props, \"y\", 0);\n        }\n        if (ox != 0 && oy != 0) {\n            g.translate(ox, oy);\n        }\n        var i: number, len: number;\n        len = graphics.length;\n        for (i = 0; i < len; i++) {\n            this._addGraphicToGraphics(graphics[i], g);\n        }\n        if (ox != 0 && oy != 0) {\n            g.translate(-ox, -oy);\n        }\n    }\n\n    /**\n     * @internal\n     * 将graphic绘图指令添加到sprite上\n     * @param graphicO 绘图指令描述\n     */\n    static _addGraphicToSprite(graphicO: any, sprite: Sprite, isChild: boolean = false): void {\n        var g: Graphics = isChild ? this._getGraphicsFromSprite(graphicO, sprite) : sprite.graphics;\n        this._addGraphicToGraphics(graphicO, g);\n    }\n\n    /**\n     * @private\n     */\n    private static _getGraphicsFromSprite(dataO: any, sprite: Sprite): Graphics {\n        if (!dataO || !dataO.props) return sprite.graphics;\n        var propsName: string = dataO.props.renderType;\n        if (propsName === \"hit\" || propsName === \"unHit\") {\n            var hitArea: HitArea = <HitArea>sprite._style.hitArea || (sprite.hitArea = new HitArea());\n            if (!hitArea[propsName]) {\n                hitArea[propsName] = new Graphics();\n            }\n            var g: Graphics = hitArea[propsName];\n        }\n        if (!g) g = sprite.graphics;\n        return g;\n    }\n\n    /**\n     * @private\n     */\n    private static _getTransformData(propsO: any): Matrix {\n        var m: Matrix;\n\n        if (\"pivotX\" in propsO || \"pivotY\" in propsO) {\n            m = m || new Matrix();\n            m.translate(-this._getObjVar(propsO, \"pivotX\", 0), -this._getObjVar(propsO, \"pivotY\", 0));\n        }\n\n        var sx: number = this._getObjVar(propsO, \"scaleX\", 1), sy: number = this._getObjVar(propsO, \"scaleY\", 1);\n        var rotate: number = this._getObjVar(propsO, \"rotation\", 0);\n        var skewX: number = this._getObjVar(propsO, \"skewX\", 0);\n        var skewY: number = this._getObjVar(propsO, \"skewY\", 0);\n\n        if (sx != 1 || sy != 1 || rotate != 0) {\n            m = m || new Matrix();\n            m.scale(sx, sy);\n            m.rotate(rotate * 0.0174532922222222);\n        }\n\n        return m;\n    }\n\n    /**\n     * @private\n     */\n    private static _addGraphicToGraphics(graphicO: any, graphic: Graphics): void {\n        var propsO: any;\n        propsO = graphicO.props;\n        if (!propsO) return;\n        var drawConfig: any;\n        drawConfig = this.DrawTypeDic[graphicO.type];\n        if (!drawConfig) return;\n\n        var g: Graphics = graphic;\n        var params: any = this._getParams(propsO, drawConfig[1], drawConfig[2], drawConfig[3]);\n        var m: Matrix = this._tM;\n        if (m || this._alpha != 1) {\n            g.save();\n            if (m) g.transform(m);\n            if (this._alpha != 1) g.alpha(this._alpha);\n        }\n        (g as any)[drawConfig[0]].apply(g, params);\n        if (m || this._alpha != 1) {\n            g.restore();\n        }\n    }\n\n    /**\n     * @private\n     */\n    private static _adptLineData(params: any[]): any[] {\n        params[2] = parseFloat(params[0]) + parseFloat(params[2]);\n        params[3] = parseFloat(params[1]) + parseFloat(params[3]);\n        return params;\n    }\n\n    /**\n     * @private\n     */\n    private static _adptTextureData(params: any[]): any[] {\n        params[0] = ILaya.Loader.getRes(params[0]);\n        return params;\n    }\n\n    /**\n     * @private\n     */\n    private static _adptLinesData(params: any[]): any[] {\n        params[2] = this._getPointListByStr(params[2]);\n        return params;\n    }\n\n    /**\n     * @internal\n     */\n    static _isDrawType(type: string): boolean {\n        if (type === \"Image\") return false;\n        return type in this.DrawTypeDic;\n    }\n\n    /**\n     * @private\n     */\n    private static _getParams(obj: any, params: any[], xPos: number = 0, adptFun: string = null): any[] {\n        var rst: any = this._temParam;\n        rst.length = params.length;\n        var i: number, len: number;\n        len = params.length;\n        for (i = 0; i < len; i++) {\n            rst[i] = this._getObjVar(obj, params[i][0], params[i][1]);\n        }\n        this._alpha = this._getObjVar(obj, \"alpha\", 1);\n        var m: Matrix;\n        m = this._getTransformData(obj);\n        if (m) {\n            if (!xPos) xPos = 0;\n\n            m.translate(rst[xPos], rst[xPos + 1]);\n            rst[xPos] = rst[xPos + 1] = 0;\n            this._tM = m;\n        } else {\n            this._tM = null;\n        }\n        if (adptFun && (this as any)[adptFun]) {\n            rst = (this as any)[adptFun](rst);\n        }\n        return rst;\n    }\n    /**@private */\n    private static DrawTypeDic: any = { \"Rect\": [\"drawRect\", [[\"x\", 0], [\"y\", 0], [\"width\", 0], [\"height\", 0], [\"fillColor\", null], [\"lineColor\", null], [\"lineWidth\", 1]]], \"Circle\": [\"drawCircle\", [[\"x\", 0], [\"y\", 0], [\"radius\", 0], [\"fillColor\", null], [\"lineColor\", null], [\"lineWidth\", 1]]], \"Pie\": [\"drawPie\", [[\"x\", 0], [\"y\", 0], [\"radius\", 0], [\"startAngle\", 0], [\"endAngle\", 0], [\"fillColor\", null], [\"lineColor\", null], [\"lineWidth\", 1]]], \"Image\": [\"drawTexture\", [[\"x\", 0], [\"y\", 0], [\"width\", 0], [\"height\", 0]]], \"Texture\": [\"drawTexture\", [[\"skin\", null], [\"x\", 0], [\"y\", 0], [\"width\", 0], [\"height\", 0]], 1, \"_adptTextureData\"], \"FillTexture\": [\"fillTexture\", [[\"skin\", null], [\"x\", 0], [\"y\", 0], [\"width\", 0], [\"height\", 0], [\"repeat\", null]], 1, \"_adptTextureData\"], \"FillText\": [\"fillText\", [[\"text\", \"\"], [\"x\", 0], [\"y\", 0], [\"font\", null], [\"color\", null], [\"textAlign\", null]], 1], \"Line\": [\"drawLine\", [[\"x\", 0], [\"y\", 0], [\"toX\", 0], [\"toY\", 0], [\"lineColor\", null], [\"lineWidth\", 0]], 0, \"_adptLineData\"], \"Lines\": [\"drawLines\", [[\"x\", 0], [\"y\", 0], [\"points\", \"\"], [\"lineColor\", null], [\"lineWidth\", 0]], 0, \"_adptLinesData\"], \"Curves\": [\"drawCurves\", [[\"x\", 0], [\"y\", 0], [\"points\", \"\"], [\"lineColor\", null], [\"lineWidth\", 0]], 0, \"_adptLinesData\"], \"Poly\": [\"drawPoly\", [[\"x\", 0], [\"y\", 0], [\"points\", \"\"], [\"fillColor\", null], [\"lineColor\", null], [\"lineWidth\", 1]], 0, \"_adptLinesData\"] };\n    /**@private */\n    private static _temParam: any[] = [];\n    /**@private */\n    private static _tM: Matrix;\n    /**@private */\n    private static _alpha: number;\n\n    /**\n     * @internal\n     */\n    static _getPointListByStr(str: string): any[] {\n        var pointArr: any[] = str.split(\",\");\n        var i: number, len: number;\n        len = pointArr.length;\n        for (i = 0; i < len; i++) {\n            pointArr[i] = parseFloat(pointArr[i]);\n        }\n        return pointArr;\n    }\n\n    /**\n     * @private\n     */\n    private static _getObjVar(obj: any, key: string, noValue: any): any {\n        if (key in obj) {\n            return obj[key];\n        }\n        return noValue;\n    }\n}\n\n/**\n * @private 场景辅助类\n */\nclass DataWatcher {\n    comp: any;\n    prop: string;\n    value: string;\n\n    //TODO:coverage\n    constructor(comp: any, prop: string, value: string) {\n        this.comp = comp;\n        this.prop = prop;\n        this.value = value;\n    }\n\n    exe(view: any): void {\n        var fun: Function = LegacyUIParser.getBindFun(this.value);\n        this.comp[this.prop] = fun.call(this, view);\n    }\n}\n\n/**\n * @private 场景辅助类\n */\nclass InitTool {\n    /**@private */\n    private _nodeRefList: any[];\n    /**@private */\n    private _initList: any[];\n    /**@internal */\n    _idMap: { [key: string]: Sprite };\n\n    //TODO:coverage\n    reset(): void {\n        this._nodeRefList = null;\n        this._initList = null;\n        this._idMap = null;\n    }\n\n    //TODO:coverage\n    recover(): void {\n        this.reset();\n        Pool.recover(\"InitTool\", this);\n    }\n\n    static create(): InitTool {\n        var tool: InitTool = Pool.getItemByClass(\"InitTool\", InitTool);\n        tool._idMap = {};\n        return tool;\n    }\n\n    /**@private */\n    //TODO:coverage\n    addNodeRef(node: any, prop: string, referStr: string): void {\n        if (!this._nodeRefList) this._nodeRefList = [];\n        this._nodeRefList.push([node, prop, referStr]);\n    }\n\n    /**@private */\n    //TODO:coverage\n    setNodeRef(): void {\n        if (!this._nodeRefList) return;\n        if (!this._idMap) {\n            this._nodeRefList = null;\n            return;\n        }\n        var i: number, len: number;\n        len = this._nodeRefList.length;\n        var tRefInfo: any[];\n        for (i = 0; i < len; i++) {\n            tRefInfo = this._nodeRefList[i];\n            tRefInfo[0][tRefInfo[1]] = this.getReferData(tRefInfo[2]);\n        }\n        this._nodeRefList = null;\n    }\n\n    /**@private */\n    //TODO:coverage\n    getReferData(referStr: string): any {\n        if (referStr.indexOf(\"@Prefab:\") >= 0) {\n            return new PrefabImpl(LegacyUIParser, Loader.getRes(referStr.replace(\"@Prefab:\", \"\")), 2);\n        } else if (referStr.indexOf(\"@arr:\") >= 0) {\n            referStr = referStr.replace(\"@arr:\", \"\");\n            var list: string[];\n            list = referStr.split(\",\");\n            var i: number, len: number;\n            var tStr: string;\n            len = list.length;\n            var list2: Sprite[] = [];\n            for (i = 0; i < len; i++) {\n                tStr = list[i];\n                if (tStr) {\n                    list2.push(this._idMap[tStr.replace(\"@node:\", \"\")]);\n                } else {\n                    list2.push(null);\n                }\n            }\n            return list2;\n        } else {\n            return this._idMap[referStr.replace(\"@node:\", \"\")];\n        }\n    }\n\n    /**@private */\n    //TODO:coverage\n    addInitItem(item: any): void {\n        if (!this._initList) this._initList = [];\n        this._initList.push(item);\n    }\n\n    /**@private */\n    //TODO:coverage\n    doInits(): void {\n        if (!this._initList) return;\n        this._initList = null;\n    }\n\n    /**@private */\n    //TODO:coverage\n    finish(): void {\n        this.setNodeRef();\n        this.doInits();\n        this.recover();\n    }\n}","import { Node } from \"../display/Node\";\nimport { ILoadURL } from \"../net/Loader\";\nimport { Prefab } from \"./HierarchyResource\";\n\n/**\n * 层次结构分析器API\n */\nexport interface IHierarchyParserAPI {\n    /**收集资源链接 */\n    collectResourceLinks: (data: any, basePath: string) => (string | ILoadURL)[],\n    /**解析 */\n    parse: (data: any, options?: Record<string, any>, errors?: Array<any>) => Array<Node> | Node;\n}\n\n/**\n * 预制体导入\n */\nexport class PrefabImpl extends Prefab {\n    /**数据 */\n    data: any;\n    /**层次结构API */\n    api: IHierarchyParserAPI;\n\n    /**\n     * 实例化一个预制体\n     * @param api 层次结构API\n     * @param data 数据\n     * @param version 版本\n     */\n    constructor(api: IHierarchyParserAPI, data: any, version: number) {\n        super(version);\n\n        this.api = api;\n        this.data = data;\n    }\n\n    /**\n     * 创建一个\n     * @param options \n     * @param errors \n     * @returns \n     */\n    create(options?: Record<string, any>, errors?: any[]): Node {\n        let ret = this.api.parse(this.data, options, errors);\n        if (Array.isArray(ret)) {\n            if (ret.length == 1) {\n                ret[0].url = this.url;\n            }\n            return ret[0];\n        }\n        else {\n            ret.url = this.url;\n            return ret;\n        }\n    }\n}\n","import { Sprite } from \"./Sprite\";\nimport { Widget } from \"../components/Widget\";\nimport { Event } from \"../events/Event\"\nimport { Resource } from \"../resource/Resource\"\nimport { Handler } from \"../utils/Handler\"\nimport { Timer } from \"../utils/Timer\"\nimport { ILaya } from \"../../ILaya\";\nimport { Prefab } from \"../resource/HierarchyResource\";\nimport { LegacyUIParser } from \"../loaders/LegacyUIParser\";\nimport { NodeFlags } from \"../Const\";\n\n/**\n * 场景类，负责场景创建，加载，销毁等功能\n * 场景被从节点移除后，并不会被自动垃圾机制回收，如果想回收，请调用destroy接口，可以通过unDestroyedScenes属性查看还未被销毁的场景列表\n */\nexport class Scene extends Sprite {\n    /**创建后，还未被销毁的场景列表，方便查看还未被销毁的场景列表，方便内存管理，本属性只读，请不要直接修改*/\n    static readonly unDestroyedScenes: Set<Scene> = new Set();\n    /**获取根节点*/\n    private static _root: Sprite;\n    /**@private */\n    private static _loadPage: Sprite;\n\n    /**场景被关闭后，是否自动销毁（销毁节点和使用到的资源），默认为false*/\n    autoDestroyAtClosed: boolean = false;\n    /**@internal */\n    _idMap?: any;\n    _scene3D: any;\n\n    /**@private 相对布局组件*/\n    protected _widget: Widget;\n\n    /**场景时钟*/\n    private _timer: Timer;\n    /**@private */\n    private _viewCreated: boolean = false;\n\n    constructor(createChildren = true) {\n        super();\n\n        this._timer = ILaya.timer;\n        this._widget = Widget.EMPTY;\n\n        this._scene = this;\n        if (createChildren)\n            this.createChildren();\n    }\n\n    /**\n     * @private 兼容老项目\n     */\n    protected createChildren(): void {\n    }\n\n    /**\n     * 兼容加载模式\n     * 加载模式设置uimap\n     * @param url uimapJosn的url\n     */\n    static setUIMap(url: string): void {\n        let uimap = ILaya.loader.getRes(url);\n        if (uimap) {\n            for (let key in uimap) {\n                ILaya.Loader.loadedMap[key + \".scene\"] = uimap[key];\n            }\n        } else {\n            throw \"请提前加载uimap的json，再使用该接口设置！\";\n        }\n    }\n\n    /**\n     * @private 兼容老项目\n     * 装载场景视图。用于加载模式。\n     * @param path 场景地址。\n     */\n    loadScene(path: string): void {\n        Scene.unDestroyedScenes.add(this);\n        let url: string = path.indexOf(\".\") > -1 ? path : path + \".scene\";\n        let content: Prefab = ILaya.loader.getRes(url);\n        if (content) {\n            if (!this._viewCreated) {\n                content.create({ root: this });\n                this._viewCreated = true;\n                Scene.unDestroyedScenes.add(this);\n            }\n        } else {\n            this._setBit(NodeFlags.NOT_READY, true);\n            ILaya.loader.load(url, null, value => {\n                if (Scene._loadPage) Scene._loadPage.event(\"progress\", value);\n            }).then((content: Prefab) => {\n                if (!content) throw \"Can not find scene:\" + path;\n                if (!this._viewCreated) {\n                    this.url = url;\n                    Scene.hideLoadingPage();\n\n                    content.create({ root: this });\n                    this._viewCreated = true;\n                    Scene.unDestroyedScenes.add(this);\n                }\n                else\n                    this._setBit(NodeFlags.NOT_READY, false);\n            });\n        }\n    }\n\n    /**\n     * @private 兼容老项目\n     * 通过视图数据创建视图。\n     * @param uiView 视图数据信息。\n     */\n    createView(view: any): void {\n        if (view && !this._viewCreated) {\n            this._viewCreated = true;\n            LegacyUIParser.createByData(this, view);\n        }\n    }\n\n    /**\n    * 根据IDE内的节点id，获得节点实例\n    */\n    getNodeByID(id: number): any {\n        if (this._idMap) return this._idMap[id];\n        return null;\n    }\n\n    /**\n     * 打开场景。【注意】被关闭的场景，如果没有设置autoDestroyAtRemoved=true，则资源可能不能被回收，需要自己手动回收\n     * @param\tcloseOther\t是否关闭其他场景，默认为true（可选）\n     * @param\tparam\t\t打开页面的参数，会传递给onOpened方法（可选）\n     */\n    open(closeOther: boolean = true, param: any = null): void {\n        if (closeOther) Scene.closeAll();\n        Scene.root.addChild(this);\n        if (this._scene3D)\n            ILaya.stage.addChildAt(this._scene3D, 0);\n        this.onOpened(param);\n    }\n\n    /**场景打开完成后，调用此方法（如果有弹出动画，则在动画完成后执行）*/\n    onOpened(param: any): void {\n        //trace(\"onOpened\");\n    }\n\n    /**\n     * 关闭场景\n     * 【注意】被关闭的场景，如果没有设置autoDestroyAtRemoved=true，则资源可能不能被回收，需要自己手动回收\n     * @param type 关闭的原因，会传递给onClosed函数\n     */\n    close(type: string = null): void {\n        this.onClosed(type);\n        if (this.autoDestroyAtClosed) {\n            this.destroy();\n            if (this._scene3D)\n                this._scene3D.destroy();\n        }\n        else {\n            this.removeSelf();\n            if (this._scene3D)\n                this._scene3D.removeSelf();\n        }\n    }\n\n    /**\n     * 关闭完成后，调用此方法（如果有关闭动画，则在动画完成后执行）\n     * @param type 如果是点击默认关闭按钮触发，则传入关闭按钮的名字(name)，否则为null。\n     */\n    onClosed(type: string = null): void {\n        //trace(\"onClosed\");\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n     */\n    destroy(destroyChild: boolean = true): void {\n        super.destroy(destroyChild);\n        if (this._scene3D) {\n            this._scene3D.destroy();\n            this._scene3D = null;\n        }\n\n        this._idMap = null;\n        Scene.unDestroyedScenes.delete(this);\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n     */\n    get_width(): number {\n        if (this._isWidthSet) return this._width;\n        var max: number = 0;\n        for (var i: number = this.numChildren - 1; i > -1; i--) {\n            var comp: Sprite = (<Sprite>this.getChildAt(i));\n            if (comp._visible) {\n                max = Math.max(comp._x + comp.width * comp.scaleX, max);\n            }\n        }\n        return max;\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n     */\n    get_height(): number {\n        if (this._isHeightSet) return this._height;\n        var max: number = 0;\n        for (var i: number = this.numChildren - 1; i > -1; i--) {\n            var comp: Sprite = (<Sprite>this.getChildAt(i));\n            if (comp._visible) {\n                max = Math.max(comp._y + comp.height * comp.scaleY, max);\n            }\n        }\n        return max;\n    }\n\n    /**\n     * 场景时钟\n     * @override\n     */\n    get timer(): Timer {\n        return this._timer;\n    }\n\n    set timer(value: Timer) {\n        this._timer = value;\n    }\n\n    /**\n     * 场景包含的3D场景实例\n     */\n    get scene3D() {\n        return this._scene3D;\n    }\n\n    /**\n     * <p>从组件顶边到其内容区域顶边之间的垂直距离（以像素为单位）。</p>\n     */\n    get top(): number {\n        return this._widget.top;\n    }\n\n    set top(value: number) {\n        if (value != this._widget.top) {\n            this._getWidget().top = value;\n        }\n    }\n\n    /**\n     * <p>从组件底边到其内容区域底边之间的垂直距离（以像素为单位）。</p>\n     */\n    get bottom(): number {\n        return this._widget.bottom;\n    }\n\n    set bottom(value: number) {\n        if (value != this._widget.bottom) {\n            this._getWidget().bottom = value;\n        }\n    }\n\n    /**\n     * <p>从组件左边到其内容区域左边之间的水平距离（以像素为单位）。</p>\n     */\n    get left(): number {\n        return this._widget.left;\n    }\n\n    set left(value: number) {\n        if (value != this._widget.left) {\n            this._getWidget().left = value;\n        }\n    }\n\n    /**\n     * <p>从组件右边到其内容区域右边之间的水平距离（以像素为单位）。</p>\n     */\n    get right(): number {\n        return this._widget.right;\n    }\n\n    set right(value: number) {\n        if (value != this._widget.right) {\n            this._getWidget().right = value;\n        }\n    }\n\n    /**\n     * <p>在父容器中，此对象的水平方向中轴线与父容器的水平方向中心线的距离（以像素为单位）。</p>\n     */\n    get centerX(): number {\n        return this._widget.centerX;\n    }\n\n    set centerX(value: number) {\n        if (value != this._widget.centerX) {\n            this._getWidget().centerX = value;\n        }\n    }\n\n    /**\n     * <p>在父容器中，此对象的垂直方向中轴线与父容器的垂直方向中心线的距离（以像素为单位）。</p>\n     */\n    get centerY(): number {\n        return this._widget.centerY;\n    }\n\n    set centerY(value: number) {\n        if (value != this._widget.centerY) {\n            this._getWidget().centerY = value;\n        }\n    }\n\n    protected _shouldRefreshLayout(): void {\n        super._shouldRefreshLayout();\n        this.callLater(this._sizeChanged);\n    }\n\n    /**\n     * @private \n     * @override\n    */\n    protected _sizeChanged(): void {\n        this.event(Event.RESIZE);\n        if (this._widget !== Widget.EMPTY) this._widget.resetLayout();\n    }\n\n    /**\n     * 重新排版\n     */\n    freshLayout() {\n        if (this._widget != Widget.EMPTY) {\n            this._widget.resetLayout();\n        }\n    }\n\n    /**\n     * @private\n     * <p>获取对象的布局样式。请不要直接修改此对象</p>\n     */\n    private _getWidget(): Widget {\n        this._widget === Widget.EMPTY && (this._widget = this.addComponent(Widget));\n        return this._widget;\n    }\n\n    //////////////////////////////////////静态方法//////////////////////////////////////////\n\n    /**获取场景根容器*/\n    static get root(): Sprite {\n        let root = Scene._root;\n        if (!root) {\n            root = Scene._root = (<Sprite>ILaya.stage.addChild(new Sprite()));\n            root.name = \"root\";\n            root.mouseThrough = true;\n            ILaya.stage.on(\"resize\", null, () => {\n                root.size(ILaya.stage.width, ILaya.stage.height);\n                root.event(Event.RESIZE);\n            });\n            root.size(ILaya.stage.width, ILaya.stage.height);\n            root.event(Event.RESIZE);\n        }\n        return root;\n    }\n\n    /**\n     * 加载场景及场景使用到的资源\n     * @param\turl\t\t\t场景地址\n     * @param\tcomplete\t加载完成回调，返回场景实例（可选）\n     * @param\tprogress\t加载进度回调（可选）\n     */\n    static load(url: string, complete: Handler = null, progress: Handler = null): Promise<Scene> {\n        return ILaya.loader.load(url, null, value => {\n            if (Scene._loadPage) Scene._loadPage.event(\"progress\", value);\n            progress && progress.runWith(value);\n        }).then((content: Prefab) => {\n            if (!content) throw \"Can not find scene:\" + url;\n\n            let scene: Scene;\n            let errors: Array<any> = [];\n            let ret = content.create(null, errors);\n            if (errors.length > 0)\n                console.warn(`Error loading ${url}: \\n${errors.join(\"\\n\")}`);\n\n            if (ret instanceof Scene)\n                scene = ret;\n            else if (ret._is3D) {\n                scene = new Scene();\n                scene.left = scene.right = scene.top = scene.bottom = 0;\n                scene._scene3D = ret;\n            }\n            else\n                throw \"Not a scene:\" + url;\n\n            scene._viewCreated = true;\n            if (scene._scene3D)\n                scene._scene3D._scene2D = scene;\n            Scene.unDestroyedScenes.add(scene);\n            Scene.hideLoadingPage();\n            complete && complete.runWith(scene);\n\n            return scene;\n        });\n    }\n\n    /**\n     * 加载并打开场景\n     * @param\turl\t\t\t场景地址\n     * @param\tcloseOther\t是否关闭其他场景，默认为true（可选），【注意】被关闭的场景，如果没有设置autoDestroyAtRemoved=true，则资源可能不能被回收，需要自己手动回收\n     * @param\tparam\t\t打开页面的参数，会传递给onOpened方法（可选）\n     * @param\tcomplete\t打开完成回调，返回场景实例（可选）\n     * @param\tprogress\t加载进度回调（可选）\n     */\n    static open(url: string, closeOther: boolean = true, param: any = null, complete: Handler = null, progress: Handler = null): Promise<Scene> {\n        //兼容处理\n        if (param instanceof Handler) {\n            var temp: any = complete;\n            complete = param;\n            param = temp;\n        }\n        Scene.showLoadingPage();\n        return Scene.load(url, Handler.create(null, this._onSceneLoaded, [closeOther, complete, param]), progress);\n    }\n\n    /**@private */\n    private static _onSceneLoaded(closeOther: boolean, complete: Handler, param: any, scene: Scene): void {\n        scene.open(closeOther, param);\n        if (complete) complete.runWith(scene);\n    }\n\n    /**\n     * 根据地址，关闭场景（包括对话框）\n     * @param\turl\t\t场景地址\n     * @param\tname\t如果name不为空，name必须相同才能关闭\n     * @return\t返回是否关闭成功，如果url找不到，则不成功\n     */\n    static close(url: string, name?: string): boolean {\n        let flag: boolean = false;\n        for (let scene of Scene.unDestroyedScenes) {\n            if (scene && scene.parent && scene.url === url && (name == null || scene.name == name)) {\n                scene.close();\n                flag = true;\n                break;\n            }\n        }\n        return flag;\n    }\n\n    /**\n     * 关闭所有场景，不包括对话框，如果关闭对话框，请使用Dialog.closeAll()\n     * 【注意】被关闭的场景，如果没有设置autoDestroyAtRemoved=true，则资源可能不能被回收，需要自己手动回收\n     */\n    static closeAll(): void {\n        let root: Sprite = Scene.root;\n        for (let i = 0, n = root.numChildren; i < n; i++) {\n            var scene = root.getChildAt(0);\n            if (scene instanceof Scene)\n                scene.close();\n            else\n                scene.removeSelf();\n        }\n    }\n\n    /**\n     * 根据地址，销毁场景（包括对话框）\n     * @param\turl\t\t场景地址\n     * @param\tname\t如果name不为空，name必须相同才能关闭\n     * @return\t返回是否销毁成功，如果url找不到，则不成功\n     */\n    static destroy(url: string, name?: string): boolean {\n        let flag: boolean = false;\n        for (let scene of Scene.unDestroyedScenes) {\n            if (scene.url === url && (name == null || scene.name == name) && !scene._destroyed) {\n                scene.destroy();\n                flag = true;\n                break;\n            }\n        }\n        return flag;\n    }\n\n    /**\n     * 销毁当前没有被使用的资源,该函数会忽略lock=true的资源。\n     */\n    static gc(): void {\n        Resource.destroyUnusedResources();\n    }\n\n    /**\n     * 设置loading界面，引擎会在调用open方法后，延迟打开loading界面，在页面添加到舞台之后，关闭loading界面\n     * @param\tloadPage \tload界面实例\n     */\n    static setLoadingPage(loadPage: Sprite): void {\n        Scene._loadPage = loadPage;\n    }\n\n    /**\n     * 显示loading界面\n     * @param\tparam 打开参数，如果是scene，则会传递给onOpened方法\n     * @param\tdelay 延迟打开时间，默认500毫秒\n     */\n    static showLoadingPage(param: any = null, delay: number = 500): void {\n        if (Scene._loadPage) {\n            ILaya.systemTimer.clear(null, Scene._showLoading);\n            ILaya.systemTimer.clear(null, Scene._hideLoading);\n            ILaya.systemTimer.once(delay, null, Scene._showLoading, [param], false);\n        }\n    }\n\n    private static _showLoading(param: any): void {\n        ILaya.stage.addChild(Scene._loadPage);\n        if (Scene._loadPage instanceof Scene)\n            Scene._loadPage.onOpened(param);\n    }\n\n    private static _hideLoading(): void {\n        if (Scene._loadPage instanceof Scene)\n            Scene._loadPage.close();\n        else\n            Scene._loadPage.removeSelf();\n    }\n\n    /**\n     * 隐藏loading界面\n     * @param\tdelay 延迟关闭时间，默认500毫秒\n     */\n    static hideLoadingPage(delay: number = 500): void {\n        if (Scene._loadPage) {\n            ILaya.systemTimer.clear(null, Scene._showLoading);\n            ILaya.systemTimer.clear(null, Scene._hideLoading);\n            ILaya.systemTimer.once(delay, null, Scene._hideLoading);\n        }\n    }\n}","import { CallLater } from \"./CallLater\";\nimport { Utils } from \"./Utils\";\n\n/**\n * <code>Timer</code> 是时钟管理类。它是一个单例，不要手动实例化此类，应该通过 Laya.timer 访问。\n */\nexport class Timer {\n    /**@private */\n    static gSysTimer: Timer = null;\n\n    /**@private */\n    private static _pool: any[] = [];\n    /**@private */\n    static _mid: number = 1;\n\n\n    /** 时针缩放。*/\n    scale: number = 1;\n    /** 当前帧开始的时间。*/\n    currTimer: number;\n    /** 当前的帧数。*/\n    currFrame: number = 0;\n    /**@internal 两帧之间的时间间隔,单位毫秒。*/\n    _delta: number = 0;\n    /**@internal */\n    _lastTimer: number;\n    /**@private */\n    private _map: { [key: string]: TimerHandler } = {};\n    /**@private */\n    private _handlers: any[] = [];\n    /**@private */\n    private _temp: any[] = [];\n    /**@private */\n    private _count: number = 0;\n\n    /**\n     * 创建 <code>Timer</code> 类的一个实例。\n     */\n    constructor(autoActive: boolean = true) {\n        autoActive && Timer.gSysTimer && Timer.gSysTimer.frameLoop(1, this, this._update);\n        this.currTimer = this._getNowData();\n        this._lastTimer = this._getNowData();\n    }\n\n    /**两帧之间的时间间隔,单位毫秒。*/\n    get delta(): number {\n        return this._delta;\n    }\n\n\n    /**\n     * @internal\n     * 帧循环处理函数。\n     */\n    _update(): void {\n        if (this.scale <= 0) {\n            this._lastTimer = this._getNowData();\n            this._delta = 0;\n            return;\n        }\n        var frame: number = this.currFrame = this.currFrame + this.scale;\n        var now: number = this._getNowData();\n        var awake: boolean = (now - this._lastTimer) > 30000;\n        this._delta = (now - this._lastTimer) * this.scale;\n        var timer: number = this.currTimer = this.currTimer + this._delta;\n        this._lastTimer = now;\n\n        //处理handler\n        var handlers: any[] = this._handlers;\n        this._count = 0;\n        for (var i: number = 0, n: number = handlers.length; i < n; i++) {\n            var handler: TimerHandler = handlers[i];\n            if (handler.method !== null) {\n                var t: number = handler.userFrame ? frame : timer;\n                if (t >= handler.exeTime) {\n                    if (handler.repeat) {\n                        if (!handler.jumpFrame || awake) {\n                            handler.exeTime += handler.delay;\n                            handler.run(false);\n                            if (t > handler.exeTime) {\n                                //如果执行一次后还能再执行，做跳出处理，如果想用多次执行，需要设置jumpFrame=true\n                                handler.exeTime += Math.ceil((t - handler.exeTime) / handler.delay) * handler.delay;\n                            }\n                        } else {\n                            while (t >= handler.exeTime) {\n                                handler.exeTime += handler.delay;\n                                handler.run(false);\n                            }\n                        }\n                    } else {\n                        handler.run(true);\n                    }\n                }\n            } else {\n                this._count++;\n            }\n        }\n\n        if (this._count > 30 || frame % 200 === 0) this._clearHandlers();\n    }\n\n    /** @private */\n    private _clearHandlers(): void {\n        var handlers: any[] = this._handlers;\n        for (var i: number = 0, n: number = handlers.length; i < n; i++) {\n            var handler: TimerHandler = handlers[i];\n            if (handler.method !== null) this._temp.push(handler);\n            else this._recoverHandler(handler);\n        }\n        this._handlers = this._temp;\n        handlers.length = 0;\n        this._temp = handlers;\n    }\n\n    /** @private */\n    private _recoverHandler(handler: TimerHandler): void {\n        if (this._map[handler.key] == handler) delete this._map[handler.key];\n        handler.clear();\n        Timer._pool.push(handler);\n    }\n\n    /**\n     * @private\n     * get now time data\n     * @returns \n     */\n    public _getNowData(): number {\n        return Date.now();\n    }\n\n    /** @internal */\n    _create(useFrame: boolean, repeat: boolean, delay: number, caller: any, method: Function, args: any[], coverBefore: boolean): TimerHandler {\n        //如果延迟为0，则立即执行\n        if (!delay) {\n            method.apply(caller, args);\n            return null;\n        }\n\n        //先覆盖相同函数的计时\n        if (coverBefore) {\n            var handler: TimerHandler = this._getHandler(caller, method);\n            if (handler) {\n                handler.repeat = repeat;\n                handler.userFrame = useFrame;\n                handler.delay = delay;\n                handler.caller = caller;\n                handler.method = method;\n                handler.args = args;\n                handler.exeTime = delay + (useFrame ? this.currFrame : this.currTimer + this._getNowData() - this._lastTimer);\n                return handler;\n            }\n        }\n\n        //找到一个空闲的timerHandler\n        handler = Timer._pool.length > 0 ? Timer._pool.pop() : new TimerHandler();\n        handler.repeat = repeat;\n        handler.userFrame = useFrame;\n        handler.delay = delay;\n        handler.caller = caller;\n        handler.method = method;\n        handler.args = args;\n        handler.exeTime = delay + (useFrame ? this.currFrame : this.currTimer + this._getNowData() - this._lastTimer);\n\n        //索引handler\n        this._indexHandler(handler);\n\n        //插入数组\n        this._handlers.push(handler);\n\n        return handler;\n    }\n\n    /** @private */\n    private _indexHandler(handler: TimerHandler): void {\n        var caller: any = handler.caller;\n        var method: any = handler.method;\n        var cid: number = caller ? caller.$_GID || (caller.$_GID = Utils.getGID()) : 0;\n        var mid: number = method.$_TID || (method.$_TID = Timer._mid++);\n        handler.key = cid + \"_\" + mid;\n        this._map[handler.key] = handler;\n    }\n\n    /**\n     * 定时执行一次。\n     * @param\tdelay\t延迟时间(单位为毫秒)。\n     * @param\tcaller\t执行域(this)。\n     * @param\tmethod\t定时器回调函数。\n     * @param\targs\t回调参数。\n     * @param\tcoverBefore\t是否覆盖之前的延迟执行，默认为 true 。\n     */\n    once(delay: number, caller: any, method: Function, args: any[] = null, coverBefore: boolean = true): void {\n        this._create(false, false, delay, caller, method, args, coverBefore);\n    }\n\n    /**\n     * 定时重复执行。\n     * @param\tdelay\t间隔时间(单位毫秒)。\n     * @param\tcaller\t执行域(this)。\n     * @param\tmethod\t定时器回调函数。\n     * @param\targs\t回调参数。\n     * @param\tcoverBefore\t是否覆盖之前的延迟执行，默认为 true 。\n     * @param\tjumpFrame 时钟是否跳帧。基于时间的循环回调，单位时间间隔内，如能执行多次回调，出于性能考虑，引擎默认只执行一次，设置jumpFrame=true后，则回调会连续执行多次\n     */\n    loop(delay: number, caller: any, method: Function, args: any[] = null, coverBefore: boolean = true, jumpFrame: boolean = false): void {\n        var handler: TimerHandler = this._create(false, true, delay, caller, method, args, coverBefore);\n        if (handler) handler.jumpFrame = jumpFrame;\n    }\n\n    /**\n     * 定时执行一次(基于帧率)。\n     * @param\tdelay\t延迟几帧(单位为帧)。\n     * @param\tcaller\t执行域(this)。\n     * @param\tmethod\t定时器回调函数。\n     * @param\targs\t回调参数。\n     * @param\tcoverBefore\t是否覆盖之前的延迟执行，默认为 true 。\n     */\n    frameOnce(delay: number, caller: any, method: Function, args: any[] = null, coverBefore: boolean = true): void {\n        this._create(true, false, delay, caller, method, args, coverBefore);\n    }\n\n    /**\n     * 定时重复执行(基于帧率)。\n     * @param\tdelay\t间隔几帧(单位为帧)。\n     * @param\tcaller\t执行域(this)。\n     * @param\tmethod\t定时器回调函数。\n     * @param\targs\t回调参数。\n     * @param\tcoverBefore\t是否覆盖之前的延迟执行，默认为 true 。\n     */\n    frameLoop(delay: number, caller: any, method: Function, args: any[] = null, coverBefore: boolean = true): void {\n        this._create(true, true, delay, caller, method, args, coverBefore);\n    }\n\n    /** 返回统计信息。*/\n    toString(): string {\n        return \" handlers:\" + this._handlers.length + \" pool:\" + Timer._pool.length;\n    }\n\n    /**\n     * 清理定时器。\n     * @param\tcaller 执行域(this)。\n     * @param\tmethod 定时器回调函数。\n     */\n    clear(caller: any, method: Function): void {\n        var handler: TimerHandler = this._getHandler(caller, method);\n        if (handler) {\n            handler.clear();\n        }\n    }\n\n    /**\n     * 清理对象身上的所有定时器。\n     * @param\tcaller 执行域(this)。\n     */\n    clearAll(caller: any): void {\n        if (!caller) return;\n        for (var i: number = 0, n: number = this._handlers.length; i < n; i++) {\n            var handler: TimerHandler = this._handlers[i];\n            if (handler.caller === caller) {\n                handler.clear();\n            }\n        }\n    }\n\n    /** @private */\n    private _getHandler(caller: any, method: any): TimerHandler {\n        var cid: number = caller ? caller.$_GID || (caller.$_GID = Utils.getGID()) : 0;\n        var mid: number = method.$_TID || (method.$_TID = Timer._mid++);\n        var key: any = cid + \"_\" + mid;\n        return this._map[key];\n    }\n\n    /**\n     * 延迟执行。\n     * @param\tcaller 执行域(this)。\n     * @param\tmethod 定时器回调函数。\n     * @param\targs 回调参数。\n     */\n    callLater(caller: any, method: Function, args: any[] = null): void {\n        CallLater.I.callLater(caller, method, args);\n    }\n\n    /**\n     * 立即执行 callLater 。\n     * @param\tcaller 执行域(this)。\n     * @param\tmethod 定时器回调函数。\n     */\n    runCallLater(caller: any, method: Function): void {\n        CallLater.I.runCallLater(caller, method);\n    }\n\n    /**\n     * 取消执行 callLater 。\n     * @param\tcaller 执行域(this)。\n     * @param\tmethod 定时器回调函数。\n     */\n    clearCallLater(caller: any, method: Function): void {\n        CallLater.I.clear(caller, method);\n    }\n\n    /**\n     * 立即提前执行定时器，执行之后从队列中删除\n     * @param\tcaller 执行域(this)。\n     * @param\tmethod 定时器回调函数。\n     */\n    runTimer(caller: any, method: Function): void {\n        var handler: TimerHandler = this._getHandler(caller, method);\n        if (handler && handler.method != null) {\n            this._map[handler.key] = null;\n            handler.run(true);\n        }\n    }\n\n    /**\n     * 暂停时钟\n     */\n    pause(): void {\n        this.scale = 0;\n    }\n\n    /**\n     * 恢复时钟\n     */\n    resume(): void {\n        this.scale = 1;\n    }\n\n\n    destroy() {\n        for (var i = 0, n = this._handlers.length; i < n; i++) {\n            var handler = this._handlers[i];\n            handler.clear();\n        }\n        this._handlers.length = 0;\n        this._map = {};\n        this._temp.length = 0;\n    }\n}\n\n\n\n/** @private */\nclass TimerHandler {\n    key: string;\n    repeat: boolean;\n    delay: number;\n    userFrame: boolean;\n    exeTime: number;\n    caller: any\n    method: Function;\n    args: any[];\n    jumpFrame: boolean;\n\n    clear(): void {\n        this.caller = null;\n        this.method = null;\n        this.args = null;\n    }\n\n    run(withClear: boolean): void {\n        var caller: any = this.caller;\n        if (caller && caller.destroyed) return this.clear();\n        var method: Function = this.method;\n        var args: any[] = this.args;\n        withClear && this.clear();\n        if (method == null) return;\n        args ? method.apply(caller, args) : method.call(caller);\n    }\n}\n","import { Timer } from \"./Timer\";\nimport { Utils } from \"./Utils\";\n\n/**\n * @private\n */\nexport class CallLater {\n    static I = new CallLater();\n    /**@private */\n    private _pool: LaterHandler[] = [];\n    /**@private */\n    private _map: { [key: string]: LaterHandler } = {};\n    /**@private */\n    private _laters: LaterHandler[] = [];\n\n    /**\n     * @internal\n     * 帧循环处理函数。\n     */\n    _update(): void {\n        let laters = this._laters;\n        let len = laters.length;\n        if (len > 0) {\n            for (let i = 0, n = len - 1; i <= n; i++) {\n                let handler = laters[i];\n                this._map[handler.key] = null;\n                if (handler.method !== null) {\n                    handler.run();\n                    handler.clear();\n                }\n                this._pool.push(handler);\n                i === n && (n = laters.length - 1);\n            }\n            laters.length = 0;\n        }\n    }\n\n    /** @private */\n    private _getHandler(caller: any, method: any): LaterHandler {\n        var cid: number = caller ? caller.$_GID || (caller.$_GID = Utils.getGID()) : 0;\n        var mid: number = method.$_TID || (method.$_TID = (Timer._mid++));\n        return this._map[cid + '.' + mid]\n    }\n\n    /**\n     * 延迟执行。\n     * @param\tcaller 执行域(this)。\n     * @param\tmethod 定时器回调函数。\n     * @param\targs 回调参数。\n     */\n    callLater(caller: any, method: Function, args: any[] = null): void {\n        if (this._getHandler(caller, method) == null) {\n            let handler: LaterHandler;\n            if (this._pool.length)\n                handler = this._pool.pop();\n            else\n                handler = new LaterHandler();\n            //设置属性\n            handler.caller = caller;\n            handler.method = method;\n            handler.args = args;\n            //索引handler\n            var cid: number = caller ? caller.$_GID : 0;\n            var mid: number = (method as any)[\"$_TID\"];\n            handler.key = cid + '.' + mid;\n            this._map[handler.key] = handler\n            //插入队列\n            this._laters.push(handler);\n        }\n    }\n\n    /**\n     * 立即执行 callLater 。\n     * @param\tcaller 执行域(this)。\n     * @param\tmethod 定时器回调函数。\n     */\n    runCallLater(caller: any, method: Function): void {\n        var handler = this._getHandler(caller, method);\n        if (handler && handler.method != null) {\n            this._map[handler.key] = null;\n            handler.run();\n            handler.clear();\n        }\n    }\n\n    clear(caller: any, method: Function) {\n        var handler = this._getHandler(caller, method);\n        if (handler) {\n            this._map[handler.key] = null;\n            handler.key = \"\";\n            handler.clear();\n            return true;\n        }\n        return false;\n    }\n\n    clearAll(caller: any) {\n        if (!caller) return;\n        for (var i = 0, n = this._laters.length; i < n; i++) {\n            var handler = this._laters[i];\n            if (handler.caller === caller) {\n                this._map[handler.key] = null;\n                handler.key = \"\";\n                handler.clear();\n            }\n        }\n    }\n}\n\n\n\n/** @private */\nclass LaterHandler {\n    key: string;\n    caller: any\n    method: Function;\n    args: any[];\n\n    clear(): void {\n        this.caller = null;\n        this.method = null;\n        this.args = null;\n    }\n\n    run(): void {\n        var caller = this.caller;\n        if (caller && caller.destroyed) return this.clear();\n        var method = this.method;\n        var args = this.args;\n        if (method == null) return;\n        args ? method.apply(caller, args) : method.call(caller);\n    }\n}\n","import { LayaGL } from \"../layagl/LayaGL\";\nimport { RenderState2D } from \"./utils/RenderState2D\"\n\n/**\n * @private\n */\nexport class WebGL {\n    static isNativeRender_enable: boolean = false;\n\n    static _nativeRender_enable(): void {\n    }\n\n    //使用webgl渲染器\n    static enable(): boolean {\n        return true;\n    }\n\n    static onStageResize(width: number, height: number): void {\n        LayaGL.renderEngine.viewport(0, 0, width, height);\n        RenderState2D.width = width;\n        RenderState2D.height = height;\n    }\n}\n\n\n\n","import { WebGL } from \"../webgl/WebGL\"\n\n\n/**\n * @private\n */\nexport class RunDriver {\n\n    /**\n     * 用于改变 WebGL宽高信息。\n     */\n    static changeWebGLSize: Function = function (w: number, h: number): void {\n        WebGL.onStageResize(w, h);\n    }\n}\n\n\n","import { Component } from \"./Component\";\n\nexport class ComponentDriver {\n    private _onUpdates: Set<Component> = new Set();\n    private _onLateUpdates: Set<Component> = new Set();\n    private _onPreRenders: Set<Component> = new Set();\n    private _onPostRenders: Set<Component> = new Set();\n\n    private _toStarts: Set<Component> = new Set();\n    readonly _toDestroys: Set<Component> = new Set();\n    /**\n     * @internal\n     * 调用组件Onstart\n     */\n    callStart() {\n        for (let ele of this._toStarts) {\n            if (ele._status == 2) {\n                ele._status = 3;\n\n                try {\n                    ele.onStart();\n                }\n                catch (err: any) {\n                    console.log(err);\n                }\n            }\n        }\n        this._toStarts.clear();\n    }\n    /**\n     * @internal\n     * 调用组件OnUpdate\n     */\n    callUpdate() {\n        for (let ele of this._onUpdates) {\n            if (ele._status == 3) {\n                try {\n                    ele.onUpdate();\n                }\n                catch (err: any) {\n                    console.log(err);\n                }\n            }\n        }\n    }\n\n    /**\n     * @internal\n     * 调用组件LayeUpdate\n     */\n    callLateUpdate() {\n        for (let ele of this._onLateUpdates) {\n            if (ele._status == 3) {\n                try {\n                    ele.onLateUpdate();\n                }\n                catch (err: any) {\n                    console.log(err);\n                }\n            }\n        }\n    }\n\n    /**\n     * @internal\n     * 调用组件onPreRender\n     */\n    callPreRender() {\n        for (let ele of this._onPreRenders) {\n            if (ele._status == 3) {\n                try {\n                    ele.onPreRender();\n                }\n                catch (err: any) {\n                    console.log(err);\n                }\n            }\n        }\n    }\n\n    /**\n     * @internal\n     * 调用组件onPostRender\n     */\n    callPostRender() {\n        for (let ele of this._onPostRenders) {\n            if (ele._status == 3) {\n                try {\n                    ele.onPostRender();\n                }\n                catch (err: any) {\n                    console.log(err);\n                }\n            }\n        }\n    }\n\n    /**\n     * @internal\n     * 调用销毁\n     */\n    callDestroy(): void {\n        for (let ele of this._toDestroys) {\n            try {\n                ele._destroy(true);\n            }\n            catch (err: any) {\n                console.log(err);\n            }\n        }\n        this._toDestroys.clear();\n    }\n\n    /**\n     * @internal\n     * 添加一个组件\n     * @param comp 组件\n     */\n    add(comp: Component) {\n        if (comp._status == 1) {\n            if (comp.onStart) {\n                comp._status = 2;\n                this._toStarts.add(comp);\n            }\n            else\n                comp._status = 3;\n        }\n\n        if (comp.onUpdate)\n            this._onUpdates.add(comp);\n        if (comp.onLateUpdate)\n            this._onLateUpdates.add(comp);\n\n        if (comp.onPreRender)\n            this._onPreRenders.add(comp);\n        if (comp.onPostRender)\n            this._onPostRenders.add(comp);\n    }\n\n    /**\n     * @internal\n     * 移除一个组件\n     * @param comp 组件\n     */\n    remove(comp: Component) {\n        if (comp._status == 2) //starting\n            comp._status = 1; //cancel start\n\n        if (comp.onUpdate)\n            this._onUpdates.delete(comp);\n        if (comp.onLateUpdate)\n            this._onLateUpdates.delete(comp);\n\n        if (comp.onPreRender)\n            this._onPreRenders.delete(comp);\n        if (comp.onPostRender)\n            this._onPostRenders.delete(comp);\n    }\n\n    /**\n     * @internal\n     * 删除组件Driver\n     */\n    destroy() {\n        //TODO:\n    }\n}","import { Sprite } from \"./Sprite\";\nimport { Node } from \"./Node\";\nimport { Config } from \"./../../Config\";\nimport { Input } from \"./Input\";\nimport { SpriteConst } from \"./SpriteConst\";\nimport { NodeFlags } from \"../Const\"\nimport { Event } from \"../events/Event\"\nimport { InputManager } from \"../events/InputManager\"\nimport { Matrix } from \"../maths/Matrix\"\nimport { Point } from \"../maths/Point\"\nimport { Render } from \"../renders/Render\"\nimport { RenderInfo } from \"../renders/RenderInfo\"\nimport { Context } from \"../resource/Context\"\nimport { HTMLCanvas } from \"../resource/HTMLCanvas\"\nimport { Browser } from \"../utils/Browser\"\nimport { CallLater } from \"../utils/CallLater\"\nimport { ColorUtils } from \"../utils/ColorUtils\"\nimport { RunDriver } from \"../utils/RunDriver\"\nimport { VectorGraphManager } from \"../utils/VectorGraphManager\"\nimport { RenderState2D } from \"../webgl/utils/RenderState2D\";\nimport { Stat } from \"../utils/Stat\";\nimport { ILaya } from \"../../ILaya\";\nimport { ComponentDriver } from \"../components/ComponentDriver\";\nimport { LayaEnv } from \"../../LayaEnv\";\nimport { LayaGL } from \"../layagl/LayaGL\";\n\n/**\n * stage大小经过重新调整时进行调度。\n * @eventType Event.RESIZE\n */\n/*[Event(name = \"resize\", type = \"laya.events.Event\")]*/\n/**\n * 舞台获得焦点时调度。比如浏览器或者当前标签处于后台，重新切换回来时进行调度。\n * @eventType Event.FOCUS\n */\n/*[Event(name = \"focus\", type = \"laya.events.Event\")]*/\n/**\n * 舞台失去焦点时调度。比如浏览器或者当前标签被切换到后台后调度。\n * @eventType Event.BLUR\n */\n/*[Event(name = \"blur\", type = \"laya.events.Event\")]*/\n/**\n * 舞台焦点变化时调度，使用Laya.stage.isFocused可以获取当前舞台是否获得焦点。\n * @eventType Event.FOCUS_CHANGE\n */\n/*[Event(name = \"focuschange\", type = \"laya.events.Event\")]*/\n/**\n * 舞台可见性发生变化时调度（比如浏览器或者当前标签被切换到后台后调度），使用Laya.stage.isVisibility可以获取当前是否处于显示状态。\n * @eventType Event.VISIBILITY_CHANGE\n */\n/*[Event(name = \"visibilitychange\", type = \"laya.events.Event\")]*/\n/**\n * 浏览器全屏更改时调度，比如进入全屏或者退出全屏。\n * @eventType Event.FULL_SCREEN_CHANGE\n */\n/*[Event(name = \"fullscreenchange\", type = \"laya.events.Event\")]*/\n\n/**\n * <p> <code>Stage</code> 是舞台类，显示列表的根节点，所有显示对象都在舞台上显示。通过 Laya.stage 单例访问。</p>\n * <p>Stage提供几种适配模式，不同的适配模式会产生不同的画布大小，画布越大，渲染压力越大，所以要选择合适的适配方案。</p>\n * <p>Stage提供不同的帧率模式，帧率越高，渲染压力越大，越费电，合理使用帧率甚至动态更改帧率有利于改进手机耗电。</p>\n */\nexport class Stage extends Sprite {\n    /**应用保持设计宽高不变，不缩放不变形，stage的宽高等于设计宽高。*/\n    static SCALE_NOSCALE: string = \"noscale\";\n    /**应用根据屏幕大小铺满全屏，非等比缩放会变形，stage的宽高等于设计宽高。*/\n    static SCALE_EXACTFIT: string = \"exactfit\";\n    /**应用显示全部内容，按照最小比率缩放，等比缩放不变形，一边可能会留空白，stage的宽高等于设计宽高。*/\n    static SCALE_SHOWALL: string = \"showall\";\n    /**应用按照最大比率缩放显示，宽或高方向会显示一部分，等比缩放不变形，stage的宽高等于设计宽高。*/\n    static SCALE_NOBORDER: string = \"noborder\";\n    /**应用保持设计宽高不变，不缩放不变形，stage的宽高等于屏幕宽高。*/\n    static SCALE_FULL: string = \"full\";\n    /**应用保持设计宽度不变，高度根据屏幕比缩放，stage的宽度等于设计高度，高度根据屏幕比率大小而变化*/\n    static SCALE_FIXED_WIDTH: string = \"fixedwidth\";\n    /**应用保持设计高度不变，宽度根据屏幕比缩放，stage的高度等于设计宽度，宽度根据屏幕比率大小而变化*/\n    static SCALE_FIXED_HEIGHT: string = \"fixedheight\";\n    /**应用保持设计比例不变，全屏显示全部内容(类似showall，但showall非全屏，会有黑边)，根据屏幕长宽比，自动选择使用SCALE_FIXED_WIDTH或SCALE_FIXED_HEIGHT*/\n    static SCALE_FIXED_AUTO: string = \"fixedauto\";\n\n    static SCALE_FIXED_AUTO_LAYAME: string = \"fixedauto_layame\";\n    static SCALE_FIXED_AUTO_LAYAVERSE: string = \"fixedauto_layaverse\";\n\n    /**画布水平居左对齐。*/\n    static ALIGN_LEFT: string = \"left\";\n    /**画布水平居右对齐。*/\n    static ALIGN_RIGHT: string = \"right\";\n    /**画布水平居中对齐。*/\n    static ALIGN_CENTER: string = \"center\";\n    /**画布垂直居上对齐。*/\n    static ALIGN_TOP: string = \"top\";\n    /**画布垂直居中对齐。*/\n    static ALIGN_MIDDLE: string = \"middle\";\n    /**画布垂直居下对齐。*/\n    static ALIGN_BOTTOM: string = \"bottom\";\n\n    /**不更改屏幕。*/\n    static SCREEN_NONE: string = \"none\";\n    /**自动横屏。*/\n    static SCREEN_HORIZONTAL: string = \"horizontal\";\n    /**自动竖屏。*/\n    static SCREEN_VERTICAL: string = \"vertical\";\n\n    /**全速模式，以60的帧率运行。*/\n    static FRAME_FAST: string = \"fast\";\n    /**慢速模式，以30的帧率运行。*/\n    static FRAME_SLOW: string = \"slow\";\n    /**自动模式，以30的帧率运行，但鼠标活动后会自动加速到60，鼠标不动2秒后降低为30帧，以节省消耗。*/\n    static FRAME_MOUSE: string = \"mouse\";\n    /**休眠模式，以1的帧率运行*/\n    static FRAME_SLEEP: string = \"sleep\";\n\n    /**当前焦点对象，此对象会影响当前键盘事件的派发主体。*/\n    focus: Node;\n    /**@private 相对浏览器左上角的偏移，弃用，请使用_canvasTransform。*/\n    offset: Point = new Point();\n    /**帧率类型，支持三种模式：fast-60帧(默认)，slow-30帧，mouse-30帧（鼠标活动后会自动加速到60，鼠标不动2秒后降低为30帧，以节省消耗），sleep-1帧。*/\n    private _frameRate: string = \"fast\";\n    /**设计宽度（初始化时设置的宽度Laya.init(width,height)）*/\n    designWidth: number = 0;\n    /**设计高度（初始化时设置的高度Laya.init(width,height)）*/\n    designHeight: number = 0;\n    /**画布是否发生翻转。*/\n    canvasRotation: boolean = false;\n    /**画布的旋转角度。*/\n    canvasDegree: number = 0;\n    /**\n     * <p>设置是否渲染，设置为false，可以停止渲染，画面会停留到最后一次渲染上，减少cpu消耗，此设置不影响时钟。</p>\n     * <p>比如非激活状态，可以设置renderingEnabled=false以节省消耗。</p>\n     * */\n    renderingEnabled: boolean = true;\n    /**是否启用屏幕适配，可以适配后，在某个时候关闭屏幕适配，防止某些操作导致的屏幕意外改变*/\n    screenAdaptationEnabled: boolean = true;\n    /**@internal */\n    _canvasTransform: Matrix = new Matrix();\n    /**@private */\n    private _screenMode: string = \"none\";\n    /**@private */\n    private _scaleMode: string = \"noscale\";\n    /**@private */\n    private _alignV: string = \"top\";\n    /**@private */\n    private _alignH: string = \"left\";\n    /**@private */\n    private _bgColor: string = \"black\";\n    /**@internal */\n    _mouseMoveTime: number = 0;\n    /**@private */\n    private _renderCount: number = 0;\n    /**@private */\n    private _safariOffsetY: number = 0;\n    /**@private */\n    private _frameStartTime: number = 0;\n    /**@private */\n    private _previousOrientation: number = Browser.window.orientation;\n    /**@private */\n    private _isFocused: boolean;\n    /**@private */\n    private _isVisibility: boolean;\n    /**@internal webgl Color*/\n    _wgColor: number[] | null = [0, 0, 0, 1];\n    /**@internal */\n    _scene3Ds: Node[] = [];\n\n    /**@private */\n    private _globalRepaintSet: boolean = false;\t\t// 设置全局重画标志。这个是给IDE用的。IDE的Image无法在onload的时候通知对应的sprite重画。\n    /**@private */\n    private _globalRepaintGet: boolean = false;\t\t// 一个get一个set是为了把标志延迟到下一帧的开始，防止部分对象接收不到。\n\n    /**使用物理分辨率作为canvas大小，会改进渲染效果，但是会降低性能*/\n    useRetinalCanvas: boolean = false;\n\n    /**场景类，引擎中只有一个stage实例，此实例可以通过Laya.stage访问。*/\n    constructor() {\n        super();\n        super.set_transform(this._createTransform());\n        //重置默认值，请不要修改\n        this.mouseEnabled = true;\n        this.hitTestPrior = true;\n        this.autoSize = false;\n        this._setBit(NodeFlags.DISPLAYED_INSTAGE, true);\n        this._setBit(NodeFlags.ACTIVE_INHIERARCHY, true);\n        this._isFocused = true;\n        this._isVisibility = true;\n\n        //this.drawCallOptimize=true;\n        this.useRetinalCanvas = Config.useRetinalCanvas;\n\n        var window: any = Browser.window;\n        //var _me = this;\t\n\n        window.addEventListener(\"focus\", () => {\n            this._isFocused = true;\n            this.event(Event.FOCUS);\n            this.event(Event.FOCUS_CHANGE);\n        });\n        window.addEventListener(\"blur\", () => {\n            this._isFocused = false;\n            this.event(Event.BLUR);\n            this.event(Event.FOCUS_CHANGE);\n            if (this._isInputting()) (Input[\"inputElement\"] as any).target.focus = false;\n        });\n\n        // 各种浏览器兼容\n        var state = \"visibilityState\", visibilityChange = \"visibilitychange\";\n        var document: any = window.document;\n        if (typeof document.hidden !== \"undefined\") {\n            visibilityChange = \"visibilitychange\";\n            state = \"visibilityState\";\n        } else if (typeof document.mozHidden !== \"undefined\") {\n            visibilityChange = \"mozvisibilitychange\";\n            state = \"mozVisibilityState\";\n        } else if (typeof document.msHidden !== \"undefined\") {\n            visibilityChange = \"msvisibilitychange\";\n            state = \"msVisibilityState\";\n        } else if (typeof document.webkitHidden !== \"undefined\") {\n            visibilityChange = \"webkitvisibilitychange\";\n            state = \"webkitVisibilityState\";\n        }\n\n        window.document.addEventListener(visibilityChange, () => {\n            if (Browser.document[state] == \"hidden\") {\n                this._isVisibility = false;\n                if (this._isInputting()) (Input[\"inputElement\"] as any).target.focus = false;\n            } else {\n                this._isVisibility = true;\n            }\n            this.renderingEnabled = this._isVisibility;\n            this.event(Event.VISIBILITY_CHANGE);\n        });\n        window.addEventListener(\"resize\", () => {\n            // 处理屏幕旋转。旋转后收起输入法。\n            var orientation: any = Browser.window.orientation;\n            if (orientation != null && orientation != this._previousOrientation && this._isInputting()) {\n                (Input[\"inputElement\"] as any).target.focus = false;\n            }\n            this._previousOrientation = orientation;\n\n            // 弹出输入法不应对画布进行resize。\n            if (this._isInputting()) return;\n\n            // Safari横屏工具栏偏移\n            if (Browser.onSafari)\n                this._safariOffsetY = Browser.getSafariToolbarOffset();\n\n            if (this.screenAdaptationEnabled) {\n                this.event(Event.WILL_RESIZE);\n                this.updateCanvasSize();\n            }\n        });\n\n        // 微信的iframe不触发orientationchange。\n        window.addEventListener(\"orientationchange\", (e: any) => {\n            if (this.screenAdaptationEnabled) {\n                this.event(Event.WILL_RESIZE);\n                this.updateCanvasSize();\n            }\n        });\n\n        this._componentDriver = new ComponentDriver();\n    }\n\n    /**\n     * @private\n     * 在移动端输入时，输入法弹出期间不进行画布尺寸重置。\n     */\n    private _isInputting(): boolean {\n        return (Browser.onMobile && InputManager.isTextInputting);\n    }\n\n    /**@inheritDoc @override*/\n    set_width(value: number) {\n        this.designWidth = value;\n        super.set_width(value);\n        this.updateCanvasSize(true);\n    }\n    /**\n     * @inheritDoc \n     * @override\n     */\n    get_width(): number {\n        this.needUpdateCanvasSize();\n        return super.get_width();\n    }\n\n    /**@inheritDoc @override */\n    set_height(value: number) {\n        this.designHeight = value;\n        super.set_height(value);\n        this.updateCanvasSize(true);\n    }\n\n    /** @override*/\n    get_height(): number {\n        this.needUpdateCanvasSize();\n        return super.get_height();\n    }\n\n    /**@override*/\n    set transform(value: Matrix) {\n        super.set_transform(value);\n    }\n    /**@inheritDoc @override*/\n    get transform(): Matrix {\n        if (this._tfChanged) this._adjustTransform();\n        return (this._transform = this._transform || this._createTransform());\n    }\n\n    /**\n     * 舞台是否获得焦点。\n     */\n    get isFocused(): boolean {\n        return this._isFocused;\n    }\n\n    /**\n     * 舞台是否处于可见状态(是否进入后台)。\n     */\n    get isVisibility(): boolean {\n        return this._isVisibility;\n    }\n\n    private _needUpdateCanvasSize: boolean = false;\n    updateCanvasSize(delay?: boolean): void {\n        if (delay) {\n            if (!this._needUpdateCanvasSize) {\n                this._needUpdateCanvasSize = true;\n                ILaya.systemTimer.callLater(this, this.updateCanvasSize);\n            }\n        }\n        else {\n            this.setScreenSize(Browser.clientWidth * Browser.pixelRatio, Browser.clientHeight * Browser.pixelRatio);\n        }\n    }\n\n    needUpdateCanvasSize() {\n        if (this._needUpdateCanvasSize)\n            this.updateCanvasSize();\n    }\n\n    /**\n     * 设置屏幕大小，场景会根据屏幕大小进行适配。可以动态调用此方法，来更改游戏显示的大小。\n     * @param\tscreenWidth\t\t屏幕宽度。\n     * @param\tscreenHeight\t屏幕高度。\n     */\n    setScreenSize(screenWidth: number, screenHeight: number): void {\n        this._needUpdateCanvasSize = false;\n\n        //计算是否旋转\n        var rotation: boolean = false;\n        if (this._screenMode !== Stage.SCREEN_NONE) {\n            var screenType: string = screenWidth / screenHeight < 1 ? Stage.SCREEN_VERTICAL : Stage.SCREEN_HORIZONTAL;\n            rotation = screenType !== this._screenMode;\n            if (rotation) {\n                //宽高互换\n                var temp: number = screenHeight;\n                screenHeight = screenWidth;\n                screenWidth = temp;\n            }\n        }\n        this.canvasRotation = rotation;\n\n        var canvas: HTMLCanvas = Render._mainCanvas;\n        var mat: Matrix = this._canvasTransform.identity();\n        var scaleMode: string = this._scaleMode;\n        var scaleX: number = screenWidth / this.designWidth;\n        var scaleY: number = screenHeight / this.designHeight;\n        var canvasWidth: number = this.useRetinalCanvas ? screenWidth : this.designWidth;\n        var canvasHeight: number = this.useRetinalCanvas ? screenHeight : this.designHeight;\n        var realWidth: number = screenWidth;\n        var realHeight: number = screenHeight;\n        var pixelRatio: number = Browser.pixelRatio;\n        this._width = this.designWidth;\n        this._height = this.designHeight;\n\n        //处理缩放模式\n        switch (scaleMode) {\n            case Stage.SCALE_NOSCALE:\n                scaleX = scaleY = 1;\n                realWidth = this.designWidth;\n                realHeight = this.designHeight;\n                break;\n            case Stage.SCALE_SHOWALL:\n                scaleX = scaleY = Math.min(scaleX, scaleY);\n                canvasWidth = realWidth = Math.round(this.designWidth * scaleX);\n                canvasHeight = realHeight = Math.round(this.designHeight * scaleY);\n                break;\n            case Stage.SCALE_NOBORDER:\n                scaleX = scaleY = Math.max(scaleX, scaleY);\n                realWidth = Math.round(this.designWidth * scaleX);\n                realHeight = Math.round(this.designHeight * scaleY);\n                break;\n            // case Stage.SCALE_FULL:\n            //     scaleX = scaleY = 1;\n            //     this._width = canvasWidth = screenWidth;\n            //     this._height = canvasHeight = screenHeight;\n            //     break;\n            case Stage.SCALE_FULL:\n                scaleX = scaleY = pixelRatio;\n                canvasWidth = screenWidth;\n                canvasHeight = screenHeight;\n                this._width = screenWidth / pixelRatio;\n                this._height = screenHeight / pixelRatio;\n                break;\n            case Stage.SCALE_FIXED_WIDTH:\n                scaleY = scaleX;\n                this._height = canvasHeight = Math.round(screenHeight / scaleX);\n                break;\n            case Stage.SCALE_FIXED_HEIGHT:\n                scaleX = scaleY;\n                this._width = canvasWidth = Math.round(screenWidth / scaleY);\n                break;\n            case Stage.SCALE_FIXED_AUTO:\n                if ((screenWidth / screenHeight) < (this.designWidth / this.designHeight)) {\n                    scaleY = scaleX;\n                    this._height = canvasHeight = Math.round(screenHeight / scaleX);\n                } else {\n                    scaleX = scaleY;\n                    this._width = canvasWidth = Math.round(screenWidth / scaleY);\n                }\n                break;\n            case Stage.SCALE_FIXED_AUTO_LAYAME:\n                if (screenWidth < screenHeight) {\n                    scaleY = scaleX;\n                    this._height = canvasHeight = Math.round(screenHeight / scaleX);\n                } else {\n                    scaleX = screenHeight / this.designWidth;\n                    scaleY = scaleX;\n                    this._width = canvasWidth = Math.round(screenWidth / scaleX);\n                    this._height = canvasHeight = Math.round(screenHeight / scaleY);\n                }\n                break;\n            case Stage.SCALE_FIXED_AUTO_LAYAVERSE:\n                if (screenWidth > screenHeight) {\n                    scaleX = scaleY;\n                    this._width = canvasWidth = Math.round(screenWidth / scaleY);\n                }\n                else {\n                    scaleX = screenWidth / this.designHeight;\n                    scaleY = scaleX;\n                    this._width = canvasWidth = Math.round(screenWidth / scaleX);\n                    this._height = canvasHeight = Math.round(screenHeight / scaleY);\n                }\n                break;\n        }\n\n        if (this.useRetinalCanvas) {\n            realWidth = canvasWidth = screenWidth;\n            realHeight = canvasHeight = screenHeight;\n        }\n\n        //根据不同尺寸缩放stage画面\n        scaleX *= this.scaleX;\n        scaleY *= this.scaleY;\n        if (scaleX === 1 && scaleY === 1) {\n            this.transform.identity();\n        } else {\n            this.transform.a = this._formatData(scaleX / (realWidth / canvasWidth));\n            this.transform.d = this._formatData(scaleY / (realHeight / canvasHeight));\n        }\n\n        //处理canvas大小\n        canvas.size(canvasWidth, canvasHeight);\n        RunDriver.changeWebGLSize(canvasWidth, canvasHeight);\n        mat.scale(realWidth / canvasWidth / pixelRatio, realHeight / canvasHeight / pixelRatio);\n\n        //处理水平对齐\n        if (this._alignH === Stage.ALIGN_LEFT) this.offset.x = 0;\n        else if (this._alignH === Stage.ALIGN_RIGHT) this.offset.x = screenWidth - realWidth;\n        else this.offset.x = (screenWidth - realWidth) * 0.5 / pixelRatio;\n\n        //处理垂直对齐\n        if (this._alignV === Stage.ALIGN_TOP) this.offset.y = 0;\n        else if (this._alignV === Stage.ALIGN_BOTTOM) this.offset.y = screenHeight - realHeight;\n        else this.offset.y = (screenHeight - realHeight) * 0.5 / pixelRatio;\n\n        //处理用户自行设置的画布偏移\n        this.offset.x = Math.round(this.offset.x);\n        this.offset.y = Math.round(this.offset.y);\n        mat.translate(this.offset.x, this.offset.y);\n        if (this._safariOffsetY) mat.translate(0, this._safariOffsetY);\n\n        //处理横竖屏\n        this.canvasDegree = 0;\n        if (rotation) {\n            if (this._screenMode === Stage.SCREEN_HORIZONTAL) {\n                mat.rotate(Math.PI / 2);\n                mat.translate(screenHeight / pixelRatio, 0);\n                this.canvasDegree = 90;\n            } else {\n                mat.rotate(-Math.PI / 2);\n                mat.translate(0, screenWidth / pixelRatio);\n                this.canvasDegree = -90;\n            }\n        }\n\n        mat.a = this._formatData(mat.a);\n        mat.d = this._formatData(mat.d);\n        mat.tx = this._formatData(mat.tx);\n        mat.ty = this._formatData(mat.ty);\n\n        super.set_transform(this.transform);\n        Stage._setStageStyle(canvas, canvasWidth, canvasHeight, mat);\n        //修正用户自行设置的偏移\n        if (this._safariOffsetY) mat.translate(0, -this._safariOffsetY);\n        this.visible = true;\n        this._repaint |= SpriteConst.REPAINT_CACHE;\n\n        this.event(Event.RESIZE);\n    }\n\n    /**\n     * @internal\n     * 适配淘宝小游戏\n     * @param mainCanv \n     */\n    static _setStageStyle(mainCanv: HTMLCanvas, canvasWidth: number, canvasHeight: number, mat: Matrix) {\n        var canvasStyle: any = mainCanv.source.style;\n        canvasStyle.transformOrigin = canvasStyle.webkitTransformOrigin = canvasStyle.msTransformOrigin = canvasStyle.mozTransformOrigin = canvasStyle.oTransformOrigin = \"0px 0px 0px\";\n        canvasStyle.transform = canvasStyle.webkitTransform = canvasStyle.msTransform = canvasStyle.mozTransform = canvasStyle.oTransform = \"matrix(\" + mat.toString() + \")\";\n        canvasStyle.width = canvasWidth;\n        canvasStyle.height = canvasHeight;\n        mat.translate(parseInt(canvasStyle.left) || 0, parseInt(canvasStyle.top) || 0);\n    }\n\n    /**\n     * 屏幕旋转用layaverse 需要\n     * @param screenWidth \n     * @param screenHeight \n     * @param _screenMode \n     * @returns \n     */\n    setScreenSizeForScene(screenWidth: number, screenHeight: number, _screenMode: string) {\n        //计算是否旋转\n        var rotation: boolean = false;\n        if (/**this.*/_screenMode !== Stage.SCREEN_NONE) {\n            var screenType: string = screenWidth / screenHeight < 1 ? Stage.SCREEN_VERTICAL : Stage.SCREEN_HORIZONTAL;\n            rotation = screenType !== /**this.*/_screenMode;\n            if (rotation) {\n                //宽高互换\n                var temp: number = screenHeight;\n                screenHeight = screenWidth;\n                screenWidth = temp;\n            }\n        }\n        this.canvasRotation = rotation;\n\n        var canvas: HTMLCanvas = Render._mainCanvas;\n        var canvasStyle: any = canvas.source.style;\n        var mat: Matrix = this._canvasTransform/**add */.clone().identity();\n        var scaleMode: string = this._scaleMode;\n        var scaleX: number = screenWidth / this.designWidth\n        var scaleY: number = screenHeight / this.designHeight;\n        var canvasWidth: number = this.useRetinalCanvas ? screenWidth : this.designWidth;\n        var canvasHeight: number = this.useRetinalCanvas ? screenHeight : this.designHeight;\n        var realWidth: number = screenWidth;\n        var realHeight: number = screenHeight;\n        var pixelRatio: number = Browser.pixelRatio;\n        let /**this.*/_width = this.designWidth;\n        let /**this.*/_height = this.designHeight;\n\n        //处理缩放模式\n        switch (scaleMode) {\n            case Stage.SCALE_NOSCALE:\n                scaleX = scaleY = 1;\n                realWidth = this.designWidth;\n                realHeight = this.designHeight;\n                break;\n            case Stage.SCALE_SHOWALL:\n                scaleX = scaleY = Math.min(scaleX, scaleY);\n                canvasWidth = realWidth = Math.round(this.designWidth * scaleX);\n                canvasHeight = realHeight = Math.round(this.designHeight * scaleY);\n                break;\n            case Stage.SCALE_NOBORDER:\n                scaleX = scaleY = Math.max(scaleX, scaleY);\n                realWidth = Math.round(this.designWidth * scaleX);\n                realHeight = Math.round(this.designHeight * scaleY);\n                break;\n            case Stage.SCALE_FULL:\n                scaleX = scaleY = 1;\n\t\t\t\t/**this.*/_width = canvasWidth = screenWidth;\n\t\t\t\t/**this.*/_height = canvasHeight = screenHeight;\n                break;\n            case Stage.SCALE_FIXED_WIDTH:\n                scaleY = scaleX;\n\t\t\t\t/**this.*/_height = canvasHeight = Math.round(screenHeight / scaleX);\n                break;\n            case Stage.SCALE_FIXED_HEIGHT:\n                scaleX = scaleY;\n\t\t\t\t/**this.*/_width = canvasWidth = Math.round(screenWidth / scaleY);\n                break;\n            case Stage.SCALE_FIXED_AUTO:\n                if ((screenWidth / screenHeight) < (this.designWidth / this.designHeight)) {\n                    scaleY = scaleX;\n\t\t\t\t\t/**this.*/_height = canvasHeight = Math.round(screenHeight / scaleX);\n                } else {\n                    scaleX = scaleY;\n\t\t\t\t\t/**this.*/_width = canvasWidth = Math.round(screenWidth / scaleY);\n                }\n                break;\n        }\n\n        if (this.useRetinalCanvas) {\n            realWidth = canvasWidth = screenWidth;\n            realHeight = canvasHeight = screenHeight;\n        }\n\n        return {\n            stageWidth: _width,\n            stageHeight: _height,\n            canvasWidth: canvasWidth,\n            canvasHeight: canvasHeight,\n            scaleX: scaleX / (realWidth / canvasWidth),\n            scaleY: scaleY / (realHeight / canvasHeight),\n        }\n    }\n\n    /**@private */\n    private _formatData(value: number): number {\n        if (Math.abs(value) < 0.000001) return 0;\n        if (Math.abs(1 - value) < 0.001) return value > 0 ? 1 : -1;\n        return value;\n    }\n\n    /**\n     * <p>缩放模式。默认值为 \"noscale\"。</p>\n     * <p><ul>取值范围：\n     * <li>\"noscale\" ：不缩放；</li>\n     * <li>\"exactfit\" ：全屏不等比缩放；</li>\n     * <li>\"showall\" ：最小比例缩放；</li>\n     * <li>\"noborder\" ：最大比例缩放；</li>\n     * <li>\"full\" ：不缩放，stage的宽高等于屏幕宽高；</li>\n     * <li>\"fixedwidth\" ：宽度不变，高度根据屏幕比缩放；</li>\n     * <li>\"fixedheight\" ：高度不变，宽度根据屏幕比缩放；</li>\n     * <li>\"fixedauto\" ：根据宽高比，自动选择使用fixedwidth或fixedheight；</li>\n     * </ul></p>\n     */\n    get scaleMode(): string {\n        return this._scaleMode;\n    }\n\n    set scaleMode(value: string) {\n        this._scaleMode = value;\n        this.updateCanvasSize(true);\n    }\n\n    /**\n     * <p>水平对齐方式。默认值为\"left\"。</p>\n     * <p><ul>取值范围：\n     * <li>\"left\" ：居左对齐；</li>\n     * <li>\"center\" ：居中对齐；</li>\n     * <li>\"right\" ：居右对齐；</li>\n     * </ul></p>\n     */\n    get alignH(): string {\n        this.needUpdateCanvasSize();\n        return this._alignH;\n    }\n\n    set alignH(value: string) {\n        this._alignH = value;\n        this.updateCanvasSize(true);\n    }\n\n    /**\n     * <p>垂直对齐方式。默认值为\"top\"。</p>\n     * <p><ul>取值范围：\n     * <li>\"top\" ：居顶部对齐；</li>\n     * <li>\"middle\" ：居中对齐；</li>\n     * <li>\"bottom\" ：居底部对齐；</li>\n     * </ul></p>\n     */\n    get alignV(): string {\n        this.needUpdateCanvasSize();\n        return this._alignV;\n    }\n\n    set alignV(value: string) {\n        this._alignV = value;\n        this.updateCanvasSize(true);\n    }\n\n    /**舞台的背景颜色，默认为黑色，null为透明。*/\n    get bgColor(): string {\n        return this._bgColor;\n    }\n\n    set bgColor(value: string) {\n        this._bgColor = value;\n        if (value)\n            this._wgColor = ColorUtils.create(value).arrColor;\n        else\n            this._wgColor = null;\n\n        Stage._setStyleBgColor(value);\n    }\n\n    /**\n     * @internal\n     * 适配淘宝小游戏\n     * @param value \n     */\n    static _setStyleBgColor(value: string) {\n        if (value) {\n            Render.canvas.style.background = value;\n        } else {\n            Render.canvas.style.background = \"none\";\n        }\n    }\n\n    /**鼠标在 Stage 上的 X 轴坐标。@override*/\n    get mouseX(): number {\n        return Math.round(InputManager.mouseX / this.clientScaleX);\n    }\n\n    /**鼠标在 Stage 上的 Y 轴坐标。@override*/\n    get mouseY(): number {\n        return Math.round(InputManager.mouseY / this.clientScaleY);\n    }\n\n    /**@inheritDoc @override*/\n    getMousePoint(): Point {\n        return Point.TEMP.setTo(this.mouseX, this.mouseY);\n    }\n\n    /**当前视窗由缩放模式导致的 X 轴缩放系数。*/\n    get clientScaleX(): number {\n        this.needUpdateCanvasSize();\n        return this._transform ? this._transform.getScaleX() : 1;\n    }\n\n    /**当前视窗由缩放模式导致的 Y 轴缩放系数。*/\n    get clientScaleY(): number {\n        this.needUpdateCanvasSize();\n        return this._transform ? this._transform.getScaleY() : 1;\n    }\n\n    /**\n     * <p>场景布局类型。</p>\n     * <p><ul>取值范围：\n     * <li>\"none\" ：不更改屏幕</li>\n     * <li>\"horizontal\" ：自动横屏</li>\n     * <li>\"vertical\" ：自动竖屏</li>\n     * </ul></p>\n     */\n    get screenMode(): string {\n        return this._screenMode;\n    }\n\n    set screenMode(value: string) {\n        this._screenMode = value;\n    }\n\n    /**@inheritDoc @override*/\n    repaint(type: number = SpriteConst.REPAINT_CACHE): void {\n        this._repaint |= type;\n    }\n\n    /**@inheritDoc @override*/\n    parentRepaint(type: number = SpriteConst.REPAINT_CACHE): void {\n    }\n\n    /**@internal */\n    _loop(): boolean {\n        this._globalRepaintGet = this._globalRepaintSet;\n        this._globalRepaintSet = false;\n        this.render(Render._context, 0, 0);\n        return true;\n    }\n\n    /**@private */\n    getFrameTm(): number {\n        return this._frameStartTime;\n    }\n\n    /**\n     * <p>获得距当前帧开始后，过了多少时间，单位为毫秒。</p>\n     * <p>可以用来判断函数内时间消耗，通过合理控制每帧函数处理消耗时长，避免一帧做事情太多，对复杂计算分帧处理，能有效降低帧率波动。</p>\n     */\n    getTimeFromFrameStart(): number {\n        return Browser.now() - this._frameStartTime;\n    }\n\n    /**@inheritDoc @override*/\n    set visible(value: boolean) {\n        if (this.visible !== value) {\n            super.set_visible(value);\n            Stage._setVisibleStyle(value);\n        }\n    }\n\n    /**\n     * @internal\n     * 适配淘宝小游戏\n     * @param value \n     */\n    static _setVisibleStyle(value: boolean) {\n        var style: any = Render._mainCanvas.source.style;\n        style.visibility = value ? \"visible\" : \"hidden\";\n    }\n\n    /**\n     * @inheritDoc \n     * @override\n     */\n    get visible() {\n        return super.visible;\n    }\n\n    /** @private */\n    static clear: Function = function (value: string): void {\n        //修改需要同步到上面的native实现中\n        Context.set2DRenderConfig();//渲染2D前要还原2D状态,否则可能受3D影响\n        RenderState2D.worldScissorTest && LayaGL.renderEngine.scissorTest(false);\n        var ctx: Context = Render.context;\n        //兼容浏览器\n        var c: any[] = (ctx._submits._length == 0 || Config.preserveDrawingBuffer) ? ColorUtils.create(value).arrColor : ILaya.stage._wgColor;\n        if (c)\n            ctx.clearBG(c[0], c[1], c[2], c[3]);\n        else\n            ctx.clearBG(0, 0, 0, 0);\n        RenderState2D.clear();\n    };\n\n    /**@inheritDoc @override*/\n    render(context: Context, x: number, y: number): void {\n        if (LayaEnv.isConch) {\n            this.renderToNative(context, x, y);\n            return;\n        }\n\n        let delta: number = ILaya.timer._delta / 1000;\n        if (this._frameRate === Stage.FRAME_SLEEP) {\n            var now: number = Browser.now();\n            if (now - this._frameStartTime < 1000)\n                return;\n            this._frameStartTime = now;\n        } else {\n            if (!this._visible) {\n                this._renderCount++;\n                if (this._renderCount % 5 === 0) {\n                    CallLater.I._update();\n                    Stat.loopCount++;\n                    RenderInfo.loopCount = Stat.loopCount;\n                    this._runComponents();\n                    this._updateTimers();\n                }\n                return;\n            }\n            this._frameStartTime = Browser.now();\n            RenderInfo.loopStTm = this._frameStartTime;\n        }\n\n        this._renderCount++;\n        var frameMode: string = this._frameRate === Stage.FRAME_MOUSE ? (((this._frameStartTime - this._mouseMoveTime) < 2000) ? Stage.FRAME_FAST : Stage.FRAME_SLOW) : this._frameRate;\n        var isFastMode: boolean = (frameMode !== Stage.FRAME_SLOW);\n        var isDoubleLoop: boolean = (this._renderCount % 2 === 0);\n\n        Stat.renderSlow = !isFastMode;\n        if (!isFastMode && !isDoubleLoop)//统一双帧处理渲染\n            return;\n\n        CallLater.I._update();\n        Stat.loopCount++;\n        RenderInfo.loopCount = Stat.loopCount;\n\n        if (this.renderingEnabled) {\n            for (let i = 0, n = this._scene3Ds.length; i < n; i++)//更新3D场景,必须提出来,否则在脚本中移除节点会导致BUG\n                (<any>this._scene3Ds[i])._update(delta);\n            this._runComponents();\n\n            context.clear();\n\n            this._componentDriver.callPreRender();\n\n            super.render(context, x, y);\n\n            Stat.render(context, x, y);\n\n            Stage.clear(this._bgColor);\n\n            context.flush();\n\n            this._componentDriver.callPostRender();\n\n            VectorGraphManager.instance && VectorGraphManager.getInstance().endDispose();\n        }\n        else\n            this._runComponents();\n\n        this._updateTimers();\n    }\n\n    renderToNative(context: Context, x: number, y: number): void {\n        this._renderCount++;\n\n        if (!this._visible) {\n            if (this._renderCount % 5 === 0) {\n                CallLater.I._update();\n                Stat.loopCount++;\n                RenderInfo.loopCount = Stat.loopCount;\n                this._runComponents();\n                this._updateTimers();\n            }\n            return;\n        }\n        this._frameStartTime = Browser.now();\n        //update\n        CallLater.I._update();\n        Stat.loopCount++;\n        RenderInfo.loopCount = Stat.loopCount;\n\n        //render\n        if (this.renderingEnabled) {\n            for (let i: number = 0, n: number = this._scene3Ds.length; i < n; i++)//更新3D场景,必须提出来,否则在脚本中移除节点会导致BUG\n                (<any>this._scene3Ds[i])._update();\n\n            this._runComponents();\n\n            this._componentDriver.callPreRender();\n\n            context.clear();\n            super.render(context, x, y);\n            Stat.render(context, x, y);\n\n            this._componentDriver.callPostRender();\n        }\n        else\n            this._runComponents();\n\n        //commit submit\n        if (this.renderingEnabled) {\n            Stage.clear(this._bgColor);\n            context.flush();\n            VectorGraphManager.instance && VectorGraphManager.getInstance().endDispose();\n        }\n        this._updateTimers();\n    }\n\n    private _runComponents() {\n        this._componentDriver.callStart();\n        this._componentDriver.callUpdate();\n        this._componentDriver.callLateUpdate();\n        this._componentDriver.callDestroy();\n    }\n\n    private _updateTimers(): void {\n        ILaya.systemTimer._update();\n        ILaya.physicsTimer._update();\n        ILaya.timer._update();\n    }\n\n    /**\n     * <p>是否开启全屏，用户点击后进入全屏。</p>\n     * <p>兼容性提示：部分浏览器不允许点击进入全屏，比如Iphone等。</p>\n     */\n    set fullScreenEnabled(value: boolean) {\n        var document: any = Browser.document;\n        var canvas: any = Render.canvas;\n        if (value) {\n            canvas.addEventListener('mousedown', requestFullscreen);\n            canvas.addEventListener('touchstart', requestFullscreen);\n            document.addEventListener(\"fullscreenchange\", fullScreenChanged);\n            document.addEventListener(\"mozfullscreenchange\", fullScreenChanged);\n            document.addEventListener(\"webkitfullscreenchange\", fullScreenChanged);\n            document.addEventListener(\"msfullscreenchange\", fullScreenChanged);\n        } else {\n            canvas.removeEventListener('mousedown', requestFullscreen);\n            canvas.removeEventListener('touchstart', requestFullscreen);\n            document.removeEventListener(\"fullscreenchange\", fullScreenChanged);\n            document.removeEventListener(\"mozfullscreenchange\", fullScreenChanged);\n            document.removeEventListener(\"webkitfullscreenchange\", fullScreenChanged);\n            document.removeEventListener(\"msfullscreenchange\", fullScreenChanged);\n        }\n    }\n\n    /**退出全屏模式*/\n    exitFullscreen(): void {\n        var document: any = Browser.document;\n        if (document.exitFullscreen) {\n            document.exitFullscreen();\n        } else if (document.mozCancelFullScreen) {\n            document.mozCancelFullScreen();\n        } else if (document.webkitExitFullscreen) {\n            document.webkitExitFullscreen();\n        }\n    }\n\n    get frameRate(): string {\n        if (!LayaEnv.isConch) {\n            return this._frameRate;\n        } else {\n            return ((<any>this))._frameRateNative;\n        }\n    }\n\n    set frameRate(value: string) {\n        if (!LayaEnv.isConch) {\n            this._frameRate = value;\n        } else {\n            var c: any = ((<any>window)).conch;\n            switch (value) {\n                case Stage.FRAME_FAST:\n                    c.config.setLimitFPS(60);\n                    break;\n                case Stage.FRAME_MOUSE:\n                    c.config.setMouseFrame(2000);\n                    break;\n                case Stage.FRAME_SLOW:\n                    c.config.setSlowFrame(true);\n                    break;\n                case Stage.FRAME_SLEEP:\n                    c.config.setLimitFPS(1);\n                    break;\n            }\n            ((<any>this))._frameRateNative = value;\n        }\n    }\n\n    /**@private */\n    isGlobalRepaint(): boolean {\n        return this._globalRepaintGet;\n    }\n\n    /**@private */\n    setGlobalRepaint(): void {\n        this._globalRepaintSet = true;\n    }\n}\n\nfunction requestFullscreen(): void {\n    var element: any = Browser.document.documentElement;\n    if (element.requestFullscreen) {\n        element.requestFullscreen();\n    } else if (element.mozRequestFullScreen) {\n        element.mozRequestFullScreen();\n    } else if (element.webkitRequestFullscreen) {\n        element.webkitRequestFullscreen();\n    } else if (element.msRequestFullscreen) {\n        element.msRequestFullscreen();\n    }\n\n    var canvas: any = Render.canvas;\n    canvas.removeEventListener('mousedown', requestFullscreen);\n    canvas.removeEventListener('touchstart', requestFullscreen);\n}\n\nfunction fullScreenChanged(): void {\n    ILaya.stage.event(Event.FULL_SCREEN_CHANGE);\n}","import { Matrix } from \"../maths/Matrix\"\nimport { Context } from \"../resource/Context\"\nimport { RenderTexture2D } from \"../resource/RenderTexture2D\"\nimport { ShaderDefines2D } from \"../webgl/shader/d2/ShaderDefines2D\"\nimport { RenderSpriteData, Value2D } from \"../webgl/shader/d2/value/Value2D\"\nimport { BlurFilter } from \"./BlurFilter\";\nimport { Vector2 } from \"../maths/Vector2\";\nimport { TextureSV } from \"../webgl/shader/d2/value/TextureSV\";\nimport { Vector4 } from \"../maths/Vector4\";\n\n/**\n * @private\n */\nexport class BlurFilterGLRender {\n    private static blurinfo = new Vector2();\n    render(rt: RenderTexture2D, ctx: Context, width: number, height: number, filter: BlurFilter): void {\n        var shaderValue: Value2D = Value2D.create(RenderSpriteData.Texture2D);\n        this.setShaderInfo(shaderValue, filter, rt.width, rt.height);\n        ctx.drawTarget(rt, 0, 0, width, height, Matrix.EMPTY.identity(), shaderValue);\n    }\n\n    setShaderInfo(shader: Value2D, filter: BlurFilter, w: number, h: number): void {\n        shader.defines.addDefine(ShaderDefines2D.FILTERBLUR);\n        var sv = <TextureSV>shader;\n        BlurFilterGLRender.blurinfo.x = w; BlurFilterGLRender.blurinfo.y = h;\n        sv.blurInfo = BlurFilterGLRender.blurinfo;\n        var sigma: number = filter.strength / 3.0;//3σ以外影响很小。即当σ=1的时候，半径为3;\n        var sigma2: number = sigma * sigma;\n        Vector4.tempVec4.x = filter.strength_sig2_2sig2_gauss1[0] = filter.strength;\n        Vector4.tempVec4.y = filter.strength_sig2_2sig2_gauss1[1] = sigma2;\t\t\t//做一些预计算传给shader，提高效率\n        Vector4.tempVec4.z = filter.strength_sig2_2sig2_gauss1[2] = 2.0 * sigma2;\n        Vector4.tempVec4.w = filter.strength_sig2_2sig2_gauss1[3] = 1.0 / (2.0 * Math.PI * sigma2);\n\n        sv.strength_sig2_2sig2_gauss1 = Vector4.tempVec4;\n    }\n}\n\n","import { Filter } from \"./Filter\";\nimport { BlurFilterGLRender } from \"./BlurFilterGLRender\";\n\n/**\n * 模糊滤镜\n */\nexport class BlurFilter extends Filter {\n\n    /**模糊滤镜的强度(值越大，越不清晰 */\n    strength: number;\n    strength_sig2_2sig2_gauss1: number[] = [];//给shader用的。避免创建对象\n    strength_sig2_native: Float32Array;//给native用的\n    renderFunc: any;//\n\n    /**\n     * 模糊滤镜\n     * @param\tstrength\t模糊滤镜的强度值\n     */\n    constructor(strength: number = 4) {\n        super();\n        this.strength = strength;\n        this._glRender = new BlurFilterGLRender();\n    }\n\n    /**\n     * @private\n     * 当前滤镜的类型\n     * @override\n     */\n    get type(): number {\n        return Filter.BLUR;\n    }\n\n    getStrenth_sig2_2sig2_native(): Float32Array {\n        if (!this.strength_sig2_native) {\n            this.strength_sig2_native = new Float32Array(4);\n        }\n        //TODO James 不要每次进行计算\n        var sigma: number = this.strength / 3.0;\n        var sigma2: number = sigma * sigma;\n        this.strength_sig2_native[0] = this.strength;\n        this.strength_sig2_native[1] = sigma2;\n        this.strength_sig2_native[2] = 2.0 * sigma2;\n        this.strength_sig2_native[3] = 1.0 / (2.0 * Math.PI * sigma2);\n        return this.strength_sig2_native;\n    }\n}\n\n","import { BlendFactor } from \"../RenderEngine/RenderEnum/BlendFactor\"\nimport { RenderStateContext } from \"../RenderEngine/RenderStateContext\"\nimport { Matrix } from \"../maths/Matrix\"\nimport { Vector4 } from \"../maths/Vector4\";\nimport { Context } from \"../resource/Context\"\nimport { RenderTexture2D } from \"../resource/RenderTexture2D\"\nimport { TextureSV } from \"../webgl/shader/d2/value/TextureSV\";\nimport { RenderSpriteData, Value2D } from \"../webgl/shader/d2/value/Value2D\"\nimport { GlowFilter } from \"./GlowFilter\";\n/**\n * @private\n */\nexport class GlowFilterGLRender {\n\tprivate setShaderInfo(shader: Value2D, w: number, h: number, data: GlowFilter): void {\n\t\tshader.defines.addDefine(data.typeDefine);\n\t\tvar sv = <TextureSV>shader;\n\t\t//data._sv_blurInfo1;// [data.blur, data.blur, data.offX, -data.offY];\n\t\tVector4.tempVec4.setValue(data._sv_blurInfo1[0], data._sv_blurInfo1[1], data._sv_blurInfo1[2], data._sv_blurInfo1[3]);\n\t\tsv.u_blurInfo1 = Vector4.tempVec4;\n\t\tvar info2 = data._sv_blurInfo2;\n\t\tinfo2[0] = w; info2[1] = h;\n\t\tVector4.tempVec4.setValue(info2[0], info2[1], info2[2], info2[3]);\n\t\tsv.u_blurInfo2 = Vector4.tempVec4;\n\t\tvar arry = data.getColor();\n\t\tVector4.tempVec4.setValue(arry[0], arry[1], arry[2], arry[3]);\n\t\tsv.color = Vector4.tempVec4;\n\t}\n\trender(rt: RenderTexture2D, ctx: Context, width: number, height: number, filter: GlowFilter): void {\n\t\tvar w: number = width, h: number = height;\n\t\tvar svBlur: Value2D = Value2D.create(RenderSpriteData.Texture2D);\n\t\tthis.setShaderInfo(svBlur, w, h, filter);\n\t\tvar svCP: Value2D = Value2D.create(RenderSpriteData.Texture2D);\n\t\tvar matI: Matrix = Matrix.TEMP.identity();\n\t\tctx.drawTarget(rt, 0, 0, w, h, matI, svBlur);\t//先画模糊的底\n\t\tctx.drawTarget(rt, 0, 0, w, h, matI, svCP, null, 9);\t\t//再画原始图片,blend为9是为了解决文字边缘锯齿问题，主要是由于预乘alpha导致的，暂时先用这种方法解决\n\t\t//ctx.drawTarget(rt, 0, 0, w, h, matI, svCP);\n\t}\n}\n\n","import { Filter } from \"./Filter\";\nimport { GlowFilterGLRender } from \"./GlowFilterGLRender\";\nimport { ColorUtils } from \"../utils/ColorUtils\"\nimport { BlurFilter } from \"./BlurFilter\";\nimport { ShaderDefine } from \"../RenderEngine/RenderShader/ShaderDefine\";\nimport { ShaderDefines2D } from \"../webgl/shader/d2/ShaderDefines2D\";\n\n/**\n *  发光滤镜(也可以当成阴影滤使用）\n */\nexport class GlowFilter extends Filter {\n\n    /**数据的存储，顺序R,G,B,A,blurWidth,offX,offY;*/\n    private _elements: Float32Array = new Float32Array(9);\n    /**@internal */\n    _sv_blurInfo1: number[] = new Array(4);\t//给shader用\n    /**@internal */\n    _sv_blurInfo2: number[] = [0, 0, 1, 0];\n    /**滤镜的颜色*/\n    private _color: ColorUtils;\n    /**@internal */\n    _color_native: Float32Array;\n    /**@internal */\n    _blurInof1_native: Float32Array;\n    /**@internal */\n    _blurInof2_native: Float32Array;\n\n    /**\n     * 创建发光滤镜\n     * @param\tcolor\t滤镜的颜色\n     * @param\tblur\t边缘模糊的大小\n     * @param\toffX\tX轴方向的偏移\n     * @param\toffY\tY轴方向的偏移\n     */\n    constructor(color: string, blur: number = 4, offX: number = 6, offY: number = 6) {\n        super();\n        this._color = new ColorUtils(color || \"#000\");\n        //限制最大效果为20\n        this.blur = Math.min(blur, 20);\n        this.offX = offX;\n        this.offY = offY;\n        this._sv_blurInfo1[0] = this._sv_blurInfo1[1] = this.blur; this._sv_blurInfo1[2] = offX; this._sv_blurInfo1[3] = -offY;\n        this._glRender = new GlowFilterGLRender();\n    }\n\n    /**\n     * @private\n     * 滤镜类型\n     * @override\n     */\n    get type(): number {\n        return BlurFilter.GLOW;\n    }\n\n    /**@internal */\n    get typeDefine(): ShaderDefine {\n        return ShaderDefines2D.FILTERGLOW;\n    }\n\n    /**@private */\n    get offY(): number {\n        return this._elements[6];\n    }\n\n    /**@private */\n    set offY(value: number) {\n        this._elements[6] = value;\n        this._sv_blurInfo1[3] = -value;\n    }\n\n    /**@private */\n    get offX(): number {\n        return this._elements[5];\n    }\n\n    /**@private */\n    set offX(value: number) {\n        this._elements[5] = value;\n        this._sv_blurInfo1[2] = value;\n    }\n\n    /**@private */\n    get color(): string {\n        return this._color.strColor;\n    }\n\n    /**@private */\n    set color(value: string) {\n        this._color = new ColorUtils(value);\n    }\n\n    /**@private */\n    getColor(): any[] {\n        return this._color.arrColor;\n    }\n\n    /**@private */\n    get blur(): number {\n        return this._elements[4];\n    }\n\n    /**@private */\n    set blur(value: number) {\n        this._elements[4] = value;\n        this._sv_blurInfo1[0] = this._sv_blurInfo1[1] = value;\n    }\n\n    getColorNative(): Float32Array {\n        if (!this._color_native) {\n            this._color_native = new Float32Array(4);\n        }\n        //TODO James 不用每次赋值\n        var color: any[] = this.getColor();\n        this._color_native[0] = color[0];\n        this._color_native[1] = color[1];\n        this._color_native[2] = color[2];\n        this._color_native[3] = color[3];\n        return this._color_native;\n    }\n    getBlurInfo1Native(): Float32Array {\n        if (!this._blurInof1_native) {\n            this._blurInof1_native = new Float32Array(4);\n        }\n        //TODO James 不用每次赋值\n        this._blurInof1_native[0] = this._blurInof1_native[1] = this.blur;\n        this._blurInof1_native[2] = this.offX;\n        this._blurInof1_native[3] = this.offY;\n        return this._blurInof1_native;\n    }\n    getBlurInfo2Native(): Float32Array {\n        if (!this._blurInof2_native) {\n            this._blurInof2_native = new Float32Array(4);\n        }\n        //TODO James 不用每次赋值\n        this._blurInof2_native[2] = 1;\n        return this._blurInof2_native;\n    }\n}\n\n","import { EventDispatcher } from \"../events/EventDispatcher\"\nimport { Handler } from \"../utils/Handler\"\n\n/**\n * <p> <code>SoundChannel</code> 用来控制程序中的声音。每个声音均分配给一个声道，而且应用程序可以具有混合在一起的多个声道。</p>\n * <p> <code>SoundChannel</code> 类包含控制声音的播放、暂停、停止、音量的方法，以及获取声音的播放状态、总时间、当前播放时间、总循环次数、播放地址等信息的方法。</p>\n */\nexport class SoundChannel extends EventDispatcher {\n    /**\n     * 声音地址。\n     */\n    url: string;\n    /**\n     * 循环次数。\n     */\n    loops: number;\n    /**\n     * 播放声音开始时间。\n     */\n    startTime: number;\n    /**\n     * 表示声音是否已暂停。\n     */\n    isStopped: boolean = false;\n    /**\n     * 播放完成处理器。\n     */\n    completeHandler: Handler;\n\n    /**\n     * 音量范围从 0（静音）至 1（最大音量）。\n     */\n    set volume(v: number) {\n\n    }\n\n    get volume(): number {\n        return 1;\n    }\n\n    /**\n     * 获取当前播放时间，单位是秒。\n     */\n    get position(): number {\n        return 0;\n    }\n\n    /**\n     * 获取总时间，单位是秒。\n     */\n    get duration(): number {\n        return 0;\n    }\n\n    /**\n     * 播放声音。\n     */\n    play(): void {\n\n    }\n\n    /**\n     * 停止播放。\n     */\n    stop(): void {\n        if (this.completeHandler) this.completeHandler.runWith(false);\n    }\n\n    /**\n     * 暂停播放。\n     */\n    pause(): void {\n    }\n\n    /**\n     * 继续播放。\n     */\n    resume(): void {\n    }\n\n    /**\n     * private\n     */\n    protected __runComplete(handler: Handler): void {\n        if (handler) {\n            handler.runWith(true);\n        }\n    }\n}\n\n","import { Event as LayaEvent } from \"../../events/Event\"\nimport { SoundChannel } from \"../SoundChannel\"\n//import { SoundManager } from \"../SoundManager\"\nimport { Browser } from \"../../utils/Browser\"\nimport { ILaya } from \"../../../ILaya\";\nimport { Pool } from \"../../utils/Pool\";\nimport { LayaEnv } from \"../../../LayaEnv\";\nimport { SoundManager } from \"../SoundManager\";\nimport { AudioSound } from \"./AudioSound\";\n\n/**\n * @private\n * audio标签播放声音的音轨控制\n */\nexport class AudioSoundChannel extends SoundChannel {\n\n    /**\n     * 播放用的audio标签\n     */\n    private _audio: HTMLAudioElement = null;\n    private _onEnd: (evt: Event) => void;\n    private _resumePlay: (evt: Event) => void;\n    private _src: string;\n\n    constructor(audio: HTMLAudioElement) {\n        super();\n        this._onEnd = this.__onEnd.bind(this);\n        this._resumePlay = this.__resumePlay.bind(this);\n        audio.addEventListener(\"ended\", this._onEnd);\n        this._audio = audio;\n        this._src = audio.src;\n    }\n\n    private __onEnd(evt: Event): void {\n        if (this.loops == 1) {\n            if (this.completeHandler) {\n                ILaya.systemTimer.once(10, this, this.__runComplete, [this.completeHandler], false);\n                this.completeHandler = null;\n            }\n            this.stop();\n            this.event(LayaEvent.COMPLETE);\n            return;\n        }\n        if (this.loops > 0) {\n            this.loops--;\n        }\n        this.startTime = 0;\n        this.play();\n    }\n\n    private __resumePlay(): void {\n        if (this._audio) this._audio.removeEventListener(\"canplay\", this._resumePlay as any);\n        if (this.isStopped) return;\n        try {\n            this._audio.currentTime = this.startTime;\n            Browser.container.appendChild(this._audio);\n            this._audio.play();\n        } catch (e) {\n            //this.audio.play();\n            this.event(LayaEvent.ERROR);\n        }\n    }\n\n    /**\n     * 播放\n     * @override\n     */\n    play(): void {\n        this.isStopped = false;\n        try {\n            this._audio.playbackRate = SoundManager.playbackRate;\n            this._audio.currentTime = this.startTime;\n        } catch (e) {\n            this._audio.addEventListener(\"canplay\", this._resumePlay as any);\n            return;\n        }\n        SoundManager.addChannel(this);\n        Browser.container.appendChild(this._audio);\n        if (\"play\" in this._audio) {\n            let p = this._audio.play();\n            if (p)\n                p.catch(e => { /*Auto-play was prevented*/ });\n        }\n    }\n\n    /**\n     * 当前播放到的位置\n     * @return\n     * @override\n     *\n     */\n    get position(): number {\n        if (!this._audio)\n            return 0;\n        return this._audio.currentTime;\n    }\n\n    /**\n     * 获取总时间。\n     * @override\n     */\n    get duration(): number {\n        if (!this._audio)\n            return 0;\n        return this._audio.duration;\n    }\n\n    /**\n     * 停止播放\n     * @override\n     */\n    stop(): void {\n        //trace(\"stop and remove event\");\n        super.stop();\n        this.isStopped = true;\n        SoundManager.removeChannel(this);\n        this.completeHandler = null;\n        if (!this._audio)\n            return;\n        if (\"pause\" in this._audio)\n            //理论上应该全部使用stop，但是不知为什么，使用pause，为了安全我只修改在加速器模式下再调用一次stop\n            if (LayaEnv.isConch) {\n                (this._audio as any).stop();\n            }\n        this._audio.pause();\n        this._audio.removeEventListener(\"ended\", this._onEnd as EventListener);\n        this._audio.removeEventListener(\"canplay\", this._resumePlay);\n        //ie下使用对象池可能会导致后面的声音播放不出来\n        if (!ILaya.Browser.onIE) {\n            if (this._audio != AudioSound._musicAudio) {\n                Pool.recover(\"audio:\" + this.url, this._audio);\n            }\n        }\n        Browser.removeElement(this._audio);\n        this._audio = null;\n        if (SoundManager.autoReleaseSound)\n            SoundManager.disposeSoundLater(this.url);\n    }\n    /**\n     * @override\n     */\n    pause(): void {\n        this.isStopped = true;\n        SoundManager.removeChannel(this);\n        if (!this._audio)\n            return;\n        if (\"pause\" in this._audio)\n            this._audio.pause();\n        if (SoundManager.autoReleaseSound)\n            SoundManager.disposeSoundLater(this.url);\n    }\n    /**\n     * @override\n     */\n    resume(): void {\n        var audio = this._audio;\n        if (!audio)\n            return;\n        this.isStopped = false;\n        if (audio.readyState == 0) { //当音频放到后台一定时间后，会被卸载，音频会断开连接，并将readyState重置为0\n            audio.src = this._src;\n            audio.addEventListener(\"canplay\", this._resumePlay as any);\n            audio.load();\n        }\n        SoundManager.addChannel(this);\n        if (\"play\" in audio) {\n            audio.play();\n        }\n    }\n\n    /**\n     * 设置音量\n     * @param v\n     * @override\n     *\n     */\n    set volume(v: number) {\n        if (!this._audio) return;\n        this._audio.volume = v;\n    }\n\n    /**\n     * 获取音量\n     * @return\n     * @override\n     *\n     */\n    get volume(): number {\n        if (!this._audio) return 1;\n        return this._audio.volume;\n    }\n\n}\n\n\n","import { AudioSoundChannel } from \"./AudioSoundChannel\";\nimport { Event } from \"../../events/Event\"\nimport { EventDispatcher } from \"../../events/EventDispatcher\"\nimport { SoundChannel } from \"../SoundChannel\"\nimport { URL } from \"../../net/URL\"\nimport { Browser } from \"../../utils/Browser\"\nimport { Pool } from \"../../utils/Pool\"\nimport { LayaEnv } from \"../../../LayaEnv\";\nimport { SoundManager } from \"../SoundManager\";\nimport { AssetDb } from \"../../resource/AssetDb\";\n\n/**\n * @private\n * 使用Audio标签播放声音\n */\nexport class AudioSound extends EventDispatcher {\n\n    /**@private */\n    private static _audioCache: any = {};\n    /**\n     * 声音URL\n     */\n    url: string;\n    /**\n     * 播放用的audio标签\n     */\n    audio: HTMLAudioElement;\n    /**\n     * 是否已加载完成\n     */\n    loaded: boolean = false;\n    /**@internal */\n    static _musicAudio: HTMLAudioElement;\n    /**\n     * 释放声音\n     *\n     */\n    dispose(): void {\n        var ad: HTMLAudioElement = AudioSound._audioCache[this.url];\n        Pool.clearBySign(\"audio:\" + this.url);\n        if (ad) {\n            if (!LayaEnv.isConch) {\n                ad.src = \"\";\n            }\n            delete AudioSound._audioCache[this.url];\n        }\n    }\n\n    /**@internal */\n    static _initMusicAudio(): void {\n        if (AudioSound._musicAudio) return;\n        if (!AudioSound._musicAudio) AudioSound._musicAudio = (<HTMLAudioElement>Browser.createElement(\"audio\"));\n        if (!LayaEnv.isConch) {\n            Browser.document.addEventListener(\"mousedown\", AudioSound._makeMusicOK);\n        }\n    }\n\n    /**@private */\n    private static _makeMusicOK(): void {\n        Browser.document.removeEventListener(\"mousedown\", AudioSound._makeMusicOK);\n        if (!AudioSound._musicAudio.src) {\n            AudioSound._musicAudio.src = \"\";\n            AudioSound._musicAudio.load();\n        } else {\n            AudioSound._musicAudio.play();\n        }\n    }\n\n\n    /**\n     * 加载声音\n     * @param url\n     *\n     */\n    load(url: string): void {\n        this.url = url;\n        var ad: HTMLAudioElement;\n        if (url == SoundManager._bgMusic) {\n            AudioSound._initMusicAudio();\n            ad = AudioSound._musicAudio;\n            if ((<any>ad).originalUrl != url) {\n                delete AudioSound._audioCache[(<any>ad).originalUrl];\n                ad = null;\n            }\n        } else {\n            ad = AudioSound._audioCache[url];\n        }\n        if (ad && ad.readyState >= 2) {\n            this.event(Event.COMPLETE);\n            return;\n        }\n        if (!ad) {\n            if (url == SoundManager._bgMusic) {\n                AudioSound._initMusicAudio();\n                ad = AudioSound._musicAudio;\n            } else {\n                ad = (<HTMLAudioElement>Browser.createElement(\"audio\"));\n            }\n            AudioSound._audioCache[url] = ad;\n            AssetDb.inst.resolveURL(url, url => {\n                ad.src = URL.postFormatURL(URL.formatURL(url));\n            });\n        }\n        (<any>ad).originalUrl = url;\n\n        ad.addEventListener(\"canplaythrough\", onLoaded);\n        ad.addEventListener(\"error\", onErr);\n        var me: AudioSound = this;\n        function onLoaded(): void {\n            offs();\n            me.loaded = true;\n            me.event(Event.COMPLETE);\n        }\n\n        function onErr(): void {\n            ad.load = null;\n            offs();\n            me.event(Event.ERROR);\n        }\n\n        function offs(): void {\n            ad.removeEventListener(\"canplaythrough\", onLoaded);\n            ad.removeEventListener(\"error\", onErr);\n        }\n\n        this.audio = ad;\n        if (ad.load) {\n            ad.load();\n        } else {\n            onErr();\n        }\n\n    }\n\n    /**\n     * 播放声音\n     * @param startTime 起始时间\n     * @param loops 循环次数\n     * @return\n     *\n     */\n    play(startTime: number = 0, loops: number = 0): SoundChannel {\n        //trace(\"playAudioSound\");\n        if (!this.url)\n            return null;\n\n        var ad: HTMLAudioElement;\n        if (this.url == SoundManager._bgMusic) {\n            ad = AudioSound._musicAudio;\n            if (ad.src != \"\" && (<any>ad).originalUrl != this.url) {  //@fix 清除上一次记录 防止它释放时把音乐暂停了\n                delete AudioSound._audioCache[(<any>ad).originalUrl];\n                AudioSound._audioCache[this.url] = ad;\n            }\n        } else {\n            ad = AudioSound._audioCache[this.url];\n        }\n\n        if (!ad) return null;\n        var tAd: HTMLAudioElement;\n\n        tAd = Pool.getItem(\"audio:\" + this.url);\n\n        if (LayaEnv.isConch) {\n            if (!tAd) {\n                tAd = (<HTMLAudioElement>Browser.createElement(\"audio\"));\n                AssetDb.inst.resolveURL(this.url, url => {\n                    tAd.src = URL.postFormatURL(URL.formatURL(url));\n                });\n            }\n        }\n        else {\n            if (this.url == SoundManager._bgMusic) {\n                AudioSound._initMusicAudio();\n                tAd = AudioSound._musicAudio;\n                AssetDb.inst.resolveURL(this.url, url => {\n                    tAd.src = URL.postFormatURL(URL.formatURL(url));\n                });\n            } else {\n                tAd = tAd ? tAd : ad.cloneNode(true) as HTMLAudioElement;\n            }\n        }\n        (<any>tAd).originalUrl = this.url;\n\n        var channel: AudioSoundChannel = new AudioSoundChannel(tAd);\n        channel.url = this.url;\n        channel.loops = loops;\n        channel.startTime = startTime;\n        channel.play();\n        SoundManager.addChannel(channel);\n        return channel;\n    }\n\n    /**\n     * 获取总时间。\n     */\n    get duration(): number {\n        var ad: HTMLAudioElement;\n        ad = AudioSound._audioCache[this.url];\n        if (!ad)\n            return 0;\n        return ad.duration;\n    }\n}\n\n\n","import { Event } from \"../../events/Event\"\nimport { SoundChannel } from \"../SoundChannel\"\nimport { Browser } from \"../../utils/Browser\"\nimport { ILaya } from \"../../../ILaya\";\nimport { SoundManager } from \"../SoundManager\";\nimport { WebAudioSound } from \"./WebAudioSound\";\n\n/**\n * @private\n * web audio api方式播放声音的音轨控制\n */\nexport class WebAudioSoundChannel extends SoundChannel {\n    /**\n     * 声音原始文件数据\n     */\n    audioBuffer: any;\n\n    /**\n     * gain节点\n     */\n    private gain: any;\n\n    /**\n     * 播放用的数据\n     */\n    private bufferSource: any = null;\n    /**\n     * 当前时间\n     */\n    private _currentTime: number = 0;\n\n    /**\n     * 当前音量\n     */\n    private _volume: number = 1;\n\n    /**\n     * 播放开始时的时间戳\n     */\n    private _startTime: number = 0;\n\n    private _pauseTime: number = 0;\n\n    /**\n     * 播放设备\n     */\n    private context: AudioContext;\n\n    private _onPlayEnd: Function;\n    private static _tryCleanFailed: boolean = false;\n    static SetTargetDelay: number = 0.001;\n\n    constructor() {\n        super();\n\n        this.context = WebAudioSound.ctx;\n\n        this._onPlayEnd = this.__onPlayEnd.bind(this);\n        if (this.context[\"createGain\"]) {\n            this.gain = this.context[\"createGain\"]();\n        } else {\n            this.gain = (<any>this.context)[\"createGainNode\"]();\n        }\n    }\n    /**\n     * 播放声音\n     * @override\n     */\n    play(): void {\n        SoundManager.addChannel(this);\n        this.isStopped = false;\n        this._clearBufferSource();\n        if (!this.audioBuffer) return;\n        if (this.startTime >= this.duration) return this.stop();\n        var context: any = this.context;\n        var gain: any = this.gain;\n        var bufferSource: any = context.createBufferSource();\n        this.bufferSource = bufferSource;\n        bufferSource.buffer = this.audioBuffer;\n        bufferSource.connect(gain);\n        if (gain)\n            gain.disconnect();\n        gain.connect(context.destination);\n        bufferSource.onended = this._onPlayEnd;\n        // if (this.startTime >= this.duration) this.startTime = 0;\n        this._startTime = Browser.now();\n        if (this.gain.gain.setTargetAtTime) {\n            this.gain.gain.setTargetAtTime(this._volume, this.context.currentTime, WebAudioSoundChannel.SetTargetDelay);\n        } else\n            this.gain.gain.value = this._volume;\n        if (this.loops == 0) {\n            bufferSource.loop = true;\n        }\n        if (bufferSource.playbackRate.setTargetAtTime) {\n            bufferSource.playbackRate.setTargetAtTime(SoundManager.playbackRate, this.context.currentTime, WebAudioSoundChannel.SetTargetDelay)\n        } else\n            bufferSource.playbackRate.value = SoundManager.playbackRate;\n        bufferSource.start(0, this.startTime);\n        this._currentTime = 0;\n    }\n\n\n\n    private __onPlayEnd(): void {\n        if (this.loops == 1) {\n\n            if (this.completeHandler) {\n                ILaya.timer.once(10, this, this.__runComplete, [this.completeHandler], false);\n                this.completeHandler = null;\n            }\n            this.stop();\n            this.event(Event.COMPLETE);\n            return;\n        }\n        if (this.loops > 0) {\n            this.loops--;\n        }\n        this.startTime = 0;\n        this.play();\n    }\n\n    /**\n     * 获取当前播放位置\n     * @override\n     */\n    get position(): number {\n        if (this.bufferSource) {\n            return (Browser.now() - this._startTime) / 1000 + this.startTime;\n        }\n        return 0;\n    }\n    /**\n     * @override\n     */\n    get duration(): number {\n        if (this.audioBuffer) {\n            return this.audioBuffer.duration;\n        }\n        return 0;\n    }\n\n    private _clearBufferSource(): void {\n        if (this.bufferSource) {\n            var sourceNode: any = this.bufferSource;\n            if (sourceNode.stop) {\n                sourceNode.stop(0);\n            } else {\n                sourceNode.noteOff(0);\n            }\n            sourceNode.disconnect(0);\n            sourceNode.onended = null;\n            if (!WebAudioSoundChannel._tryCleanFailed) this._tryClearBuffer(sourceNode);\n            this.bufferSource = null;\n        }\n    }\n\n    private _tryClearBuffer(sourceNode: any): void {\n        try {//已经支持buffer=null\n            sourceNode.buffer = null;\n        } catch (e) {\n            WebAudioSoundChannel._tryCleanFailed = true;\n        }\n    }\n\n    /**\n     * 停止播放\n     * @override\n     */\n    stop(): void {\n        super.stop();\n        this._clearBufferSource();\n        this.audioBuffer = null;\n        if (this.gain)\n            this.gain.disconnect();\n        this.isStopped = true;\n        SoundManager.removeChannel(this);\n        this.completeHandler = null;\n        if (SoundManager.autoReleaseSound)\n            SoundManager.disposeSoundLater(this.url);\n    }\n    /**\n     * @override\n     */\n    pause(): void {\n        if (!this.isStopped) {\n            this._pauseTime = this.position;\n        }\n        this._clearBufferSource();\n        if (this.gain)\n            this.gain.disconnect();\n        this.isStopped = true;\n        SoundManager.removeChannel(this);\n        if (SoundManager.autoReleaseSound)\n            SoundManager.disposeSoundLater(this.url);\n    }\n    /**\n     * @override\n     */\n    resume(): void {\n        this.startTime = this._pauseTime;\n        this.play();\n    }\n\n    /**\n     * 设置音量\n     * @override\n     */\n    set volume(v: number) {\n        this._volume = v;\n        if (this.isStopped) {\n            return;\n        }\n        if (this.gain.gain.setTargetAtTime) {\n            this.gain.gain.setTargetAtTime(v, this.context.currentTime, WebAudioSoundChannel.SetTargetDelay);\n        } else\n            this.gain.gain.value = v;\n    }\n\n    /**\n     * 获取音量\n     * @override\n     */\n    get volume(): number {\n        return this._volume;\n    }\n\n}\n\n\n","import { WebAudioSoundChannel } from \"./WebAudioSoundChannel\";\nimport { Event } from \"../../events/Event\"\nimport { EventDispatcher } from \"../../events/EventDispatcher\"\nimport { SoundChannel } from \"../SoundChannel\"\nimport { SoundManager } from \"../SoundManager\";\nimport { ILaya } from \"../../../ILaya\";\nimport { Loader } from \"../../net/Loader\";\n\n/**\n * @private\n * web audio api方式播放声音\n */\nexport class WebAudioSound extends EventDispatcher {\n\n    /**\n     * 播放设备\n     */\n    static ctx: AudioContext;\n\n    /**\n     * 用于播放解锁声音以及解决Ios9版本的内存释放\n     */\n    static _miniBuffer: any = WebAudioSound.ctx ? WebAudioSound.ctx.createBuffer(1, 1, 22050) : undefined;\n\n    /**\n     * 是否已解锁声音播放\n     */\n    private static _unlocked: boolean = false;\n\n    /**\n     * 声音URL\n     */\n    url: string;\n    /**\n     * 是否已加载完成\n     */\n    loaded: boolean = false;\n    /**\n     * 声音原始文件数据\n     */\n    audioBuffer: AudioBuffer;\n    /**\n     * 待播放的声音列表\n     */\n    private __toPlays: any[];\n    /**\n     * @private\n     */\n    private _disposed: boolean = false;\n\n\n    /**\n     * 播放声音以解锁IOS的声音\n     *\n     */\n    private static _playEmptySound(): void {\n        if (WebAudioSound.ctx == null) {\n            return;\n        }\n        var source: any = WebAudioSound.ctx.createBufferSource();\n        source.buffer = WebAudioSound._miniBuffer;\n        source.connect(WebAudioSound.ctx.destination);\n        source.start(0, 0, 0);\n    }\n\n    /**\n     * 尝试解锁声音\n     *\n     */\n    private static _unlock(): void {\n        if (WebAudioSound._unlocked) {\n            return;\n        }\n        WebAudioSound._playEmptySound();\n        if (WebAudioSound.ctx.state == \"running\") {\n            window.document.removeEventListener(\"mousedown\", WebAudioSound._unlock, true);\n            window.document.removeEventListener(\"touchend\", WebAudioSound._unlock, true);\n            window.document.removeEventListener(\"touchstart\", WebAudioSound._unlock, true);\n            WebAudioSound._unlocked = true;\n        }\n    }\n    /*;*/\n\n    static initWebAudio(): void {\n        WebAudioSound.ctx = new (window[\"AudioContext\"] || (window as any)[\"webkitAudioContext\"] || (window as any)[\"mozAudioContext\"])();\n\n        if (WebAudioSound.ctx.state != \"running\") {\n            WebAudioSound._unlock(); // When played inside of a touch event, this will enable audio on iOS immediately.\n            window.document.addEventListener(\"mousedown\", WebAudioSound._unlock, true);\n            window.document.addEventListener(\"touchend\", WebAudioSound._unlock, true);\n            window.document.addEventListener(\"touchstart\", WebAudioSound._unlock, true);\n        }\n    }\n\n    /**\n     * 加载声音\n     * @param url\n     *\n     */\n    load(url: string): void {\n        this.url = url;\n        this.audioBuffer = ILaya.loader.getRes(url);\n        if (this.audioBuffer) {\n            this._loaded(this.audioBuffer);\n            return;\n        }\n        ILaya.loader.load(url, Loader.SOUND).then(audioBuffer => this._loaded(audioBuffer));\n    }\n\n    private _loaded(audioBuffer: any): void {\n        if (this._disposed)\n            return;\n\n        this.audioBuffer = audioBuffer;\n        this.loaded = true;\n        this.event(Event.COMPLETE);\n    }\n\n    private __playAfterLoaded(): void {\n        if (!this.__toPlays) return;\n        var i: number, len: number;\n        var toPlays: any[];\n        toPlays = this.__toPlays;\n        len = toPlays.length;\n        var tParams: any[];\n        for (i = 0; i < len; i++) {\n            tParams = toPlays[i];\n            if (tParams[2] && !((<WebAudioSoundChannel>tParams[2])).isStopped) {\n                this.play(tParams[0], tParams[1], tParams[2]);\n            }\n        }\n        this.__toPlays.length = 0;\n    }\n\n    /**\n     * 播放声音\n     * @param startTime 起始时间\n     * @param loops 循环次数\n     * @return\n     *\n     */\n    play(startTime: number = 0, loops: number = 0, channel: WebAudioSoundChannel = null): SoundChannel {\n        channel = channel ? channel : new WebAudioSoundChannel();\n        if (!this.audioBuffer) {\n            if (this.url) {\n                if (!this.__toPlays) this.__toPlays = [];\n                this.__toPlays.push([startTime, loops, channel]);\n                this.once(Event.COMPLETE, this, this.__playAfterLoaded);\n                this.load(this.url);\n            }\n        }\n        channel.url = this.url;\n        channel.loops = loops;\n        channel.audioBuffer = this.audioBuffer;\n        channel.startTime = startTime;\n        channel.play();\n        SoundManager.addChannel(channel);\n        return channel;\n    }\n\n    get duration(): number {\n        if (this.audioBuffer) {\n            return this.audioBuffer.duration;\n        }\n        return 0;\n    }\n\n    dispose(): void {\n        this._disposed = true;\n        if (this.audioBuffer) {\n            ILaya.loader.clearRes(this.url, this.audioBuffer);\n            this.audioBuffer = null;\n        }\n        this.__toPlays = [];\n    }\n}\n\n\n","import { SoundChannel } from \"./SoundChannel\";\nimport { Event } from \"../events/Event\"\nimport { AudioSound } from \"./h5audio/AudioSound\"\nimport { WebAudioSound } from \"./webaudio/WebAudioSound\"\nimport { URL } from \"../net/URL\"\nimport { Handler } from \"../utils/Handler\"\nimport { Sound } from \"./Sound\";\nimport { ILaya } from \"../../ILaya\";\nimport { Browser } from \"../utils/Browser\";\nimport { LayaEnv } from \"../../LayaEnv\";\n\n/**\n * <code>SoundManager</code> 是一个声音管理类。提供了对背景音乐、音效的播放控制方法。\n * 引擎默认有两套声音方案：WebAudio和H5Audio\n * 播放音效，优先使用WebAudio播放声音，如果WebAudio不可用，则用H5Audio播放，H5Audio在部分机器上有兼容问题（比如不能混音，播放有延迟等）。\n * 播放背景音乐，则使用H5Audio播放（使用WebAudio会增加特别大的内存，并且要等加载完毕后才能播放，有延迟）\n * 建议背景音乐用mp3类型，音效用wav或者mp3类型（如果打包为app，音效只能用wav格式）。\n * 详细教程及声音格式请参考：http://ldc2.layabox.com/doc/?nav=ch-as-1-7-0\n */\nexport class SoundManager {\n    /**\n     * 背景音乐音量。\n     * @default 1\n     */\n    static musicVolume: number = 1;\n    /**\n     * 音效音量。\n     * @default 1\n     */\n    static soundVolume: number = 1;\n    /**\n     * 声音播放速率。\n     * @default 1\n     */\n    static playbackRate: number = 1;\n    /**\n     * 背景音乐使用Audio标签播放。\n     * @default true\n     */\n    private static _useAudioMusic: boolean = true;\n    /**@private 是否静音，默认为false。*/\n    private static _muted: boolean = false;\n    /**@private 是否音效静音，默认为false。*/\n    private static _soundMuted: boolean = false;\n    /**@private 是否背景音乐静音，默认为false。*/\n    private static _musicMuted: boolean = false;\n    /**@internal 当前背景音乐url。*/\n    static _bgMusic: string = null;\n    /**@private 当前背景音乐声道。*/\n    static _musicChannel: SoundChannel = null;\n    /**@private 当前播放的Channel列表。*/\n    private static _channels: any[] = [];\n    /**@private */\n    private static _autoStopMusic: boolean;\n    /**@private */\n    private static _blurPaused: boolean = false;\n    /**@private */\n    private static _isActive: boolean = true;\n    /**@internal */\n    static _soundClass: new () => any;\n    /**@internal */\n    static _musicClass: new () => any;\n    /**@private */\n    private static _lastSoundUsedTimeDic: any = {};\n    /**@private */\n    private static _isCheckingDispose: boolean = false;\n    /**@private */\n    private static _soundCache: Record<string, Sound> = {};\n\n    /**@internal */\n    static __init__(): boolean {\n        var win: any = ILaya.Browser.window;\n        var supportWebAudio = win[\"AudioContext\"] || win[\"webkitAudioContext\"] || win[\"mozAudioContext\"] ? true : false;\n        if (supportWebAudio)\n            WebAudioSound.initWebAudio();\n        SoundManager._soundClass = supportWebAudio ? WebAudioSound : AudioSound;\n\n        if (!Browser.onTBMiniGame) {\n            AudioSound._initMusicAudio();\n        }\n        SoundManager._musicClass = AudioSound;\n\n        return supportWebAudio;\n    }\n\n    /**\n     * 音效播放后自动删除。\n     * @default true\n     */\n    static autoReleaseSound: boolean = true;\n\n    /**\n     * 添加播放的声音实例。\n     * @param channel <code>SoundChannel</code> 对象。\n     */\n    static addChannel(channel: SoundChannel): void {\n        if (SoundManager._channels.indexOf(channel) >= 0) return;\n        SoundManager._channels.push(channel);\n    }\n\n    /**\n     * 移除播放的声音实例。\n     * @param channel <code>SoundChannel</code> 对象。\n     */\n    static removeChannel(channel: SoundChannel): void {\n        for (let i = SoundManager._channels.length - 1; i >= 0; i--) {\n            if (SoundManager._channels[i] == channel) {\n                SoundManager._channels.splice(i, 1);\n            }\n        }\n    }\n\n    /**@private */\n    static disposeSoundLater(url: string): void {\n        SoundManager._lastSoundUsedTimeDic[url] = ILaya.Browser.now();\n        if (!SoundManager._isCheckingDispose) {\n            SoundManager._isCheckingDispose = true;\n            ILaya.timer.loop(5000, null, SoundManager._checkDisposeSound);\n        }\n    }\n\n    /**@private */\n    private static _checkDisposeSound(): void {\n        let tTime: number = ILaya.Browser.now();\n        let hasCheck: boolean = false;\n        for (let key in SoundManager._lastSoundUsedTimeDic) {\n            if (tTime - SoundManager._lastSoundUsedTimeDic[key] > 30000) {\n                delete SoundManager._lastSoundUsedTimeDic[key];\n                SoundManager.disposeSoundIfNotUsed(key);\n            } else {\n                hasCheck = true;\n            }\n        }\n        if (!hasCheck) {\n            SoundManager._isCheckingDispose = false;\n            ILaya.timer.clear(null, SoundManager._checkDisposeSound);\n        }\n    }\n\n    /**@private */\n    static disposeSoundIfNotUsed(url: string): void {\n        for (let i = SoundManager._channels.length - 1; i >= 0; i--) {\n            if (SoundManager._channels[i].url == url) {\n                return;\n            }\n        }\n        SoundManager.destroySound(url);\n    }\n\n    /**\n     * 失去焦点后是否自动停止背景音乐。\n     * @param v Boolean 失去焦点后是否自动停止背景音乐。\n     *\n     */\n    static set autoStopMusic(v: boolean) {\n        ILaya.stage.off(Event.BLUR, null, SoundManager._stageOnBlur);\n        ILaya.stage.off(Event.FOCUS, null, SoundManager._stageOnFocus);\n        ILaya.stage.off(Event.VISIBILITY_CHANGE, null, SoundManager._visibilityChange);\n        SoundManager._autoStopMusic = v;\n        if (v) {\n            ILaya.stage.on(Event.BLUR, null, SoundManager._stageOnBlur);\n            ILaya.stage.on(Event.FOCUS, null, SoundManager._stageOnFocus);\n            ILaya.stage.on(Event.VISIBILITY_CHANGE, null, SoundManager._visibilityChange);\n        }\n    }\n\n    /**\n     * 失去焦点后是否自动停止背景音乐。\n     */\n    static get autoStopMusic(): boolean {\n        return SoundManager._autoStopMusic;\n    }\n\n    private static _visibilityChange(): void {\n        if (ILaya.stage.isVisibility) {\n            SoundManager._stageOnFocus();\n        } else {\n            SoundManager._stageOnBlur();\n        }\n    }\n\n    private static _stageOnBlur(): void {\n        SoundManager._isActive = false;\n        if (SoundManager._musicChannel) {\n            if (!SoundManager._musicChannel.isStopped) {\n                SoundManager._blurPaused = true;\n                SoundManager._musicChannel.pause();\n\n            }\n\n        }\n        SoundManager.stopAllSound();\n        ILaya.stage.once(Event.MOUSE_DOWN, null, SoundManager._stageOnFocus);\n    }\n\n    private static _recoverWebAudio(): void {\n        if (WebAudioSound.ctx && WebAudioSound.ctx.state != \"running\" && WebAudioSound.ctx.resume)\n            WebAudioSound.ctx.resume();\n    }\n\n    private static _stageOnFocus(): void {\n        SoundManager._isActive = true;\n        SoundManager._recoverWebAudio();\n        ILaya.stage.off(Event.MOUSE_DOWN, null, SoundManager._stageOnFocus);\n        if (SoundManager._blurPaused) {\n            if (SoundManager._musicChannel && SoundManager._musicChannel.isStopped) {\n                SoundManager._blurPaused = false;\n                SoundManager._musicChannel.resume();\n            }\n        }\n    }\n\n    /**\n     * 背景音乐和所有音效是否静音。\n     */\n    static set muted(value: boolean) {\n        if (value == SoundManager._muted) return;\n        if (value) {\n            SoundManager.stopAllSound();\n        }\n        SoundManager.musicMuted = value;\n        SoundManager._muted = value;\n    }\n\n    static get muted(): boolean {\n        return SoundManager._muted;\n    }\n\n    /**\n     * 所有音效（不包括背景音乐）是否静音。\n     */\n    static set soundMuted(value: boolean) {\n        SoundManager._soundMuted = value;\n    }\n\n    static get soundMuted(): boolean {\n        return SoundManager._soundMuted;\n    }\n\n    /**\n     * 背景音乐（不包括音效）是否静音。\n     */\n    static set musicMuted(value: boolean) {\n        if (value == SoundManager._musicMuted) return;\n        if (value) {\n            if (SoundManager._bgMusic) {\n                if (SoundManager._musicChannel && !SoundManager._musicChannel.isStopped) {\n                    if (LayaEnv.isConch) {\n                        if ((SoundManager._musicChannel as any)._audio) (SoundManager._musicChannel as any)._audio.muted = true;;\n                    }\n                    else {\n                        SoundManager._musicChannel.pause();\n                    }\n                } else {\n                    SoundManager._musicChannel = null;\n                }\n            } else {\n                SoundManager._musicChannel = null;\n            }\n\n            SoundManager._musicMuted = value;\n        } else {\n            SoundManager._musicMuted = value;\n            if (SoundManager._bgMusic) {\n                if (SoundManager._musicChannel) {\n                    if (LayaEnv.isConch) {\n                        if ((SoundManager._musicChannel as any)._audio) (SoundManager._musicChannel as any)._audio.muted = false;;\n                    }\n                    else {\n                        SoundManager._musicChannel.resume();\n                    }\n                }\n            }\n        }\n\n    }\n\n    static get musicMuted(): boolean {\n        return SoundManager._musicMuted;\n    }\n\n    static get useAudioMusic(): boolean {\n        return SoundManager._useAudioMusic;\n    }\n\n    static set useAudioMusic(value: boolean) {\n        SoundManager._useAudioMusic = value;\n        if (value) {\n            SoundManager._musicClass = AudioSound;\n        } else {\n            SoundManager._musicClass = null;\n        }\n    }\n\n    /**\n     * 播放音效。音效可以同时播放多个。\n     * @param url\t\t\t声音文件地址。\n     * @param loops\t\t\t循环次数,0表示无限循环。\n     * @param complete\t\t声音播放完成回调  Handler对象。\n     * @param soundClass\t使用哪个声音类进行播放，null表示自动选择。\n     * @param startTime\t\t声音播放起始时间。\n     * @return SoundChannel对象，通过此对象可以对声音进行控制，以及获取声音信息。\n     */\n    static playSound(url: string, loops: number = 1, complete: Handler = null, soundClass: new () => any = null, startTime: number = 0): SoundChannel {\n        if (!SoundManager._isActive || !url) return null;\n        if (SoundManager._muted) return null;\n        SoundManager._recoverWebAudio();\n        if (url == SoundManager._bgMusic) {\n            if (SoundManager._musicMuted) return null;\n        } else {\n            if (SoundManager._soundMuted) return null;\n        }\n        let tSound: Sound;\n        if (!Browser._isMiniGame) {\n            tSound = SoundManager._soundCache[url];\n        }\n        if (!soundClass) soundClass = SoundManager._soundClass;\n        if (!tSound) {\n            tSound = new soundClass();\n            tSound.load(url);\n            if (!Browser._isMiniGame) {\n                SoundManager._soundCache[url] = tSound;\n            }\n        }\n        let channel = tSound.play(startTime, loops);\n        if (!channel) return null;\n        channel.url = url;\n        channel.volume = (url == SoundManager._bgMusic) ? SoundManager.musicVolume : SoundManager.soundVolume;\n        channel.completeHandler = complete;\n        return channel;\n    }\n\n    /**\n     * 释放声音资源。\n     * @param url\t声音播放地址。\n     */\n    static destroySound(url: string): void {\n        let tSound = SoundManager._soundCache[url];\n        if (tSound) {\n            delete SoundManager._soundCache[url];\n            tSound.dispose();\n        }\n    }\n\n    /**\n     * 播放背景音乐。背景音乐同时只能播放一个，如果在播放背景音乐时再次调用本方法，会先停止之前的背景音乐，再播放当前的背景音乐。\n     * @param url\t\t声音文件地址。\n     * @param loops\t\t循环次数,0表示无限循环。\n     * @param complete\t声音播放完成回调,complete 结果参数 true: 播放完成, false/undefined ：stop触发的complete。\n     * @param startTime\t声音播放起始时间。\n     * @return SoundChannel对象，通过此对象可以对声音进行控制，以及获取声音信息。\n     */\n    static playMusic(url: string, loops: number = 0, complete: Handler = null, startTime: number = 0): SoundChannel {\n        SoundManager._bgMusic = url;\n        if (SoundManager._musicChannel) SoundManager._musicChannel.stop();\n        return SoundManager._musicChannel = SoundManager.playSound(url, loops, complete, SoundManager._musicClass, startTime);\n    }\n\n    /**\n     * 停止声音播放。此方法能够停止任意声音的播放（包括背景音乐和音效），只需传入对应的声音播放地址。\n     * @param url  声音文件地址。\n     */\n    static stopSound(url: string): void {\n        for (let i = SoundManager._channels.length - 1; i >= 0; i--) {\n            let channel = SoundManager._channels[i];\n            if (channel.url == url) {\n                channel.stop();\n            }\n        }\n    }\n\n    /**\n     * 停止播放所有声音（包括背景音乐和音效）。\n     */\n    static stopAll(): void {\n        SoundManager._bgMusic = null;\n        var i: number;\n        var channel: SoundChannel;\n        for (i = SoundManager._channels.length - 1; i >= 0; i--) {\n            channel = SoundManager._channels[i];\n            channel.stop();\n        }\n    }\n\n    /**\n     * 停止播放所有音效（不包括背景音乐）。\n     */\n    static stopAllSound(): void {\n        for (let i = SoundManager._channels.length - 1; i >= 0; i--) {\n            let channel = SoundManager._channels[i];\n            if (channel.url != SoundManager._bgMusic) {\n                channel.stop();\n            }\n        }\n    }\n\n    /**\n     * 停止播放背景音乐（不包括音效）。\n     * @param url  声音文件地址。\n     */\n    static stopMusic(): void {\n        if (SoundManager._musicChannel) SoundManager._musicChannel.stop();\n        SoundManager._bgMusic = null;\n    }\n\n    /**\n     * 设置声音音量。根据参数不同，可以分别设置指定声音（背景音乐或音效）音量或者所有音效（不包括背景音乐）音量。\n     * @param volume\t音量。初始值为1。音量范围从 0（静音）至 1（最大音量）。\n     * @param url\t\t(default = null)声音播放地址。默认为null。为空表示设置所有音效（不包括背景音乐）的音量，不为空表示设置指定声音（背景音乐或音效）的音量。\n     */\n    static setSoundVolume(volume: number, url: string = null): void {\n        if (url) {\n            SoundManager._setVolume(url, volume);\n        } else {\n            SoundManager.soundVolume = volume;\n            for (let i = SoundManager._channels.length - 1; i >= 0; i--) {\n                let channel = SoundManager._channels[i];\n                if (channel.url != SoundManager._bgMusic) {\n                    channel.volume = volume;\n                }\n            }\n        }\n    }\n\n    /**\n     * 设置背景音乐音量。音量范围从 0（静音）至 1（最大音量）。\n     * @param volume\t音量。初始值为1。音量范围从 0（静音）至 1（最大音量）。\n     */\n    static setMusicVolume(volume: number): void {\n        SoundManager.musicVolume = volume;\n        SoundManager._setVolume(SoundManager._bgMusic, volume);\n    }\n\n    /**\n     * 设置指定声音的音量。\n     * @param url\t\t声音文件url\n     * @param volume\t音量。初始值为1。\n     */\n    private static _setVolume(url: string, volume: number): void {\n        for (let i = SoundManager._channels.length - 1; i >= 0; i--) {\n            let channel = SoundManager._channels[i];\n            if (channel.url == url) {\n                channel.volume = volume;\n            }\n        }\n    }\n}\n\n","import { SoundChannel } from \"./SoundChannel\";\nimport { SoundManager } from \"./SoundManager\";\nimport { Sprite } from \"../display/Sprite\"\nimport { Event } from \"../events/Event\"\nimport { Handler } from \"../utils/Handler\"\nimport { LayaEnv } from \"../../LayaEnv\";\n\n/**\n * 用于播放背景音乐或者音效的节点\n */\nexport class SoundNode extends Sprite {\n    private _channel: SoundChannel;\n    private _tar: Sprite;\n    private _playEvents: string;\n    private _stopEvents: string;\n    private _source: string;\n    private _isMusic: boolean;\n    private _autoPlay: boolean;\n    private _loop: number;\n\n    constructor() {\n        super();\n\n        this._loop = 1;\n\n        this.on(Event.ADDED, this, this._onParentChange);\n        this.on(Event.REMOVED, this, this._onParentChange);\n    }\n\n    get source() {\n        return this._source;\n    }\n\n    set source(value: string) {\n        this._source = value;\n        if (value) {\n            if (this._autoPlay && (!this._channel || this._channel.isStopped) && LayaEnv.isPlaying)\n                this.play();\n        }\n        else\n            this.stop();\n    }\n\n    /**\n     * 如果是，音乐类型为背景音乐，否则为音效\n     */\n    get isMusic() {\n        return this._isMusic;\n    }\n\n    set isMusic(value: boolean) {\n        this._isMusic = value;\n    }\n\n    /**\n     * 循环次数\n     */\n    get loop() {\n        return this._loop;\n    }\n\n    set loop(value: number) {\n        this._loop = value;\n    }\n\n    /**\n     * 是否自动播放\n     */\n    get autoPlay() {\n        return this._autoPlay;\n    }\n\n    set autoPlay(value: boolean) {\n        this._autoPlay = value;\n        if (value && this._source && (!this._channel || this._channel.isStopped) && LayaEnv.isPlaying)\n            this.play();\n    }\n\n    /**@private */\n    private _onParentChange(): void {\n        this.target = (<Sprite>this.parent);\n    }\n\n    /**\n     * 播放\n     * @param loops 循环次数\n     * @param complete 完成回调\n     *\n     */\n    play(loops?: number, complete?: Handler): void {\n        if (!this._source) return;\n\n        if (loops == null || isNaN(loops))\n            loops = this._loop;\n\n        this.stop();\n\n        if (this._isMusic)\n            this._channel = SoundManager.playMusic(this._source, loops, complete);\n        else\n            this._channel = SoundManager.playSound(this._source, loops, complete);\n    }\n\n    /**\n     * 停止播放\n     *\n     */\n    stop(): void {\n        if (this._channel && !this._channel.isStopped) {\n            this._channel.stop();\n        }\n        this._channel = null;\n    }\n\n    /**@private */\n    private _setPlayAction(tar: Sprite, event: string, action: string, add: boolean = true): void {\n        if (!(this as any)[action]) return;\n        if (!tar) return;\n        if (add) {\n            tar.on(event, this, (this as any)[action]);\n        } else {\n            tar.off(event, this, (this as any)[action]);\n        }\n\n    }\n\n    /**@private */\n    private _setPlayActions(tar: Sprite, events: string, action: string, add: boolean = true): void {\n        if (!tar) return;\n        if (!events) return;\n        let eventArr = events.split(\",\");\n        let len = eventArr.length;\n        for (let i = 0; i < len; i++) {\n            this._setPlayAction(tar, eventArr[i], action, add);\n        }\n    }\n\n    /**\n     * 设置触发播放的事件\n     * @param events\n     *\n     */\n    set playEvent(events: string) {\n        this._playEvents = events;\n        if (!events) return;\n        if (this._tar) {\n            this._setPlayActions(this._tar, events, \"play\");\n        }\n    }\n\n    /**\n     * 设置控制播放的对象\n     * @param tar\n     *\n     */\n    set target(tar: Sprite) {\n        if (this._tar) {\n            this._setPlayActions(this._tar, this._playEvents, \"play\", false);\n            this._setPlayActions(this._tar, this._stopEvents, \"stop\", false);\n        }\n        this._tar = tar;\n        if (this._tar) {\n            this._setPlayActions(this._tar, this._playEvents, \"play\", true);\n            this._setPlayActions(this._tar, this._stopEvents, \"stop\", true);\n        }\n    }\n\n    /**\n     * 设置触发停止的事件\n     * @param events\n     *\n     */\n    set stopEvent(events: string) {\n        this._stopEvents = events;\n        if (!events) return;\n        if (this._tar) {\n            this._setPlayActions(this._tar, events, \"stop\");\n        }\n    }\n}\n","import { BaseTexture } from \"../resource/BaseTexture\";\nimport { ILaya } from \"../../ILaya\";\nimport { Utils } from \"../utils/Utils\";\nimport { URL } from \"../net/URL\";\nimport { TextureDimension } from \"../RenderEngine/RenderEnum/TextureDimension\";\nimport { TextureFormat } from \"../RenderEngine/RenderEnum/TextureFormat\";\nimport { RenderTargetFormat } from \"../RenderEngine/RenderEnum/RenderTargetFormat\";\nimport { FilterMode } from \"../RenderEngine/RenderEnum/FilterMode\";\nimport { WrapMode } from \"../RenderEngine/RenderEnum/WrapMode\";\nimport { LayaEnv } from \"../../LayaEnv\";\nimport { Texture2D } from \"../resource/Texture2D\";\nimport { AssetDb } from \"../resource/AssetDb\";\nimport { Event as LayaEvent } from \"../events/Event\";\nimport { Browser } from \"../utils/Browser\";\nimport { LayaGL } from \"../layagl/LayaGL\";\n\n\n/**\n * <code>VideoTexture</code> 多媒体纹理\n */\nexport class VideoTexture extends BaseTexture {\n    public readonly element: HTMLVideoElement;\n\n    private _source: string;\n    private _listeningEvents: Record<string, (evt: Event) => void>;\n    private immediatelyPlay: boolean;\n    /**\n     * 是否开发者自己调用Render\n     */\n    private _frameRender: boolean;\n    /** @inernal 避免重复的加载 */\n    _isLoaded: boolean;\n    _needUpdate: boolean;\n    /** @inernal 是否使用了requestVideoFrameCallback 接口 */\n    _requestVideoFrame: boolean = false;\n\n    /**\n     * 创建VideoTexture对象，\n     */\n    constructor() {\n        let ele: HTMLVideoElement = ILaya.Browser.createElement(\"video\");\n        super(ele.videoWidth, ele.videoHeight, RenderTargetFormat.R8G8B8);\n        this._frameRender = true;\n        this._isLoaded = false;\n        this._needUpdate = false;\n        this.immediatelyPlay = false;\n        this.element = ele;\n\n        this._listeningEvents = {};\n\n        this._dimension = TextureDimension.Tex2D;\n\n\n        // ele.setAttribute('crossorigin', 'Anonymous');\n\n        var style: any = this.element.style;\n        style.position = 'absolute';\n        style.top = '0px';\n        style.left = '0px';\n\n        // 默认放开webGL对纹理数据的跨域限制\n        ele.setAttribute('crossorigin', 'anonymous');\n        if (ILaya.Browser.onMobile) {\n            //@ts-ignore\n            ele[\"x5-playsInline\"] = true;\n            //@ts-ignore\n            ele[\"x5-playsinline\"] = true;\n            //@ts-ignore\n            ele.x5PlaysInline = true;\n            //@ts-ignore\n            ele.playsInline = true;\n            //@ts-ignore\n            ele[\"webkit-playsInline\"] = true;\n            //@ts-ignore\n            ele[\"webkit-playsinline\"] = true;\n            //@ts-ignore\n            ele.webkitPlaysInline = true;\n            //@ts-ignore\n            ele.playsinline = true;\n            //@ts-ignore\n            ele.style.playsInline = true;\n            ele.crossOrigin = \"anonymous\";\n            ele.setAttribute('playsinline', 'true');\n            ele.setAttribute('x5-playsinline', 'true');\n            ele.setAttribute('webkit-playsinline', 'true');\n            ele.autoplay = true;\n        }\n\n        ele.addEventListener(\"loadedmetadata\", () => {\n            this.loadedmetadata();\n        });\n\n        if ('requestVideoFrameCallback' in ele) {\n            const scope = this;\n            function updateVideo() {\n                scope._needUpdate = true;\n                ele.requestVideoFrameCallback(updateVideo);\n            }\n            ele.requestVideoFrameCallback(updateVideo);\n            this._requestVideoFrame = true\n        } else {\n            this._needUpdate = true;\n        }\n      \n    }\n\n    private isNeedUpdate() {\n        return !this._requestVideoFrame || this._needUpdate;\n    }\n\n    loadedmetadata() {\n        if (this._isLoaded)\n            return;\n        //flag only TODO\n        this._width = this.element.videoWidth;\n        this._height = this.element.videoHeight;\n        if (Browser.onLayaRuntime) {\n            this._texture = LayaGL.textureContext.createTextureInternal(this._dimension, this.element.videoWidth, this.element.videoHeight, TextureFormat.R8G8B8A8, false, false, false);\n        }\n        else {\n            this._texture = LayaGL.textureContext.createTextureInternal(this._dimension, this.element.videoWidth, this.element.videoHeight, TextureFormat.R8G8B8, false, false, false);\n        }\n        this.wrapModeU = WrapMode.Clamp;\n        this.wrapModeV = WrapMode.Clamp;\n        this.filterMode = FilterMode.Bilinear;\n        LayaGL.textureContext.initVideoTextureData(this._texture);\n        this._texture.gammaCorrection = 2.2;//这里使用srgb会变得特别的卡，所以srgb的转换放入Shader中进行\n        if (this.immediatelyPlay) {\n            this.play();\n        }\n        this._isLoaded = true;\n        this.event(LayaEvent.READY, this);\n    }\n\n    get source(): string {\n        return this._source;\n    }\n\n    get gammaCorrection() {\n        return 2.2;\n    }\n\n    /**\n    * 设置播放源路径\n    * @param url 播放源路径\n    */\n    set source(url: string) {\n        this._source = url;\n        if (!url)\n            return;\n\n        AssetDb.inst.resolveURL(url, url => {\n            while (this.element.childElementCount)\n                this.element.firstChild.remove();\n\n            if (url.startsWith(\"blob:\"))\n                this.element.src = url;\n            else\n                this.appendSource(url);\n        });\n    }\n\n    private appendSource(source: string): void {\n        var sourceElement: HTMLSourceElement = ILaya.Browser.createElement(\"source\");\n        sourceElement.src = URL.postFormatURL(URL.formatURL(source));\n        let extension = Utils.getFileExtension(source);\n        sourceElement.type = extension == \"m3u8\" ? \"application/vnd.apple.mpegurl\" : (\"video/\" + extension);\n        this.element.appendChild(sourceElement);\n    }\n\n    /**\n     * @internal\n     */\n    render() {\n\n        if (this.element.readyState == 0)\n            return;\n        if (this.isNeedUpdate() || Browser.onLayaRuntime) {\n            LayaGL.textureContext.updateVideoTexture(this._texture, this.element, false, false);\n            this._needUpdate = false;\n        }\n    }\n\n    /**\n     * 是否每一帧都渲染\n     */\n    set frameRender(value: boolean) {\n        if (this._frameRender && !value) {\n            ILaya.timer.clear(this, this.render);\n        }\n        if (!this._frameRender && value) {\n            ILaya.timer.frameLoop(1, this, this.render);\n        }\n        this._frameRender = value;\n    }\n\n    get frameRender() {\n        return this._frameRender;\n    }\n\n\n    /**\n     * 开始播放视频\n     */\n    play() {\n        if (!this._texture) {\n            this.immediatelyPlay = true;\n        } else {\n            this.element.play().catch(() => {\n                this.event(\"NotAllowedError\");\n            });\n            if (this._frameRender) {\n                ILaya.timer.frameLoop(1, this, this.render);\n            }\n        }\n\n    }\n\n    _getSource() {\n        return this._texture ? this._texture.resource : null;\n    }\n\n    get defaultTexture() {\n        return Texture2D.whiteTexture;\n    }\n\n    /**\n     * 暂停播放视频\n     */\n    pause() {\n        this.element.pause();\n        if (this._frameRender) {\n            ILaya.timer.clear(this, this.render);\n        }\n\n    }\n\n    /**\n     * 重新加载视频。\n     */\n    load(): void {\n        this.element.load();\n    }\n\n    /**\n     * 检测是否支持播放指定格式视频。\n     * @param type\t\"mp4\",\"ogg\",\"webm\",\"m3u8\"等。\n     * @return 表示支持的级别。可能的值：\n     * <ul>\n     * <li>\"probably\" - 浏览器最可能支持该音频/视频类型</li>\n     * <li>\"maybe\" - 浏览器也许支持该音频/视频类型</li>\n     * <li>\"\" - （空字符串）浏览器不支持该音频/视频类型</li>\n     * </ul>\n     */\n    canPlayType(type: string): CanPlayTypeResult {\n        type = type == \"m3u8\" ? \"application/vnd.apple.mpegurl\" : (\"video/\" + type);\n        return this.element.canPlayType(type);\n    }\n\n    /**\n     * buffered 属性返回 TimeRanges(JS)对象。TimeRanges 对象表示用户的音视频缓冲范围。缓冲范围指的是已缓冲音视频的时间范围。如果用户在音视频中跳跃播放，会得到多个缓冲范围。\n     * <p>buffered.length返回缓冲范围个数。如获取第一个缓冲范围则是buffered.start(0)和buffered.end(0)。以秒计。</p>\n     * @return TimeRanges(JS)对象\n     */\n    get buffered(): any {\n        return this.element.buffered;\n    }\n\n    /**\n     * 获取当前播放源路径。\n     */\n    get currentSrc(): string {\n        return this.element.currentSrc;\n    }\n\n    /**\n     * 设置和获取当前播放头位置。\n     */\n    get currentTime(): number {\n        return this.element.currentTime;\n    }\n\n    set currentTime(value: number) {\n        if (!this.element)\n            return;\n\n        this.element.currentTime = value;\n        this.render();\n    }\n\n    /**\n     * 设置和获取当前音量。\n     */\n    set volume(value: number) {\n        if (!this.element)\n            return;\n        this.element.volume = value;\n    }\n\n    get volume(): number {\n        return this.element.volume;\n    }\n\n    /**\n     * 表示视频元素的就绪状态：\n     * <ul>\n     * <li>0 = HAVE_NOTHING - 没有关于音频/视频是否就绪的信息</li>\n     * <li>1 = HAVE_METADATA - 关于音频/视频就绪的元数据</li>\n     * <li>2 = HAVE_CURRENT_DATA - 关于当前播放位置的数据是可用的，但没有足够的数据来播放下一帧/毫秒</li>\n     * <li>3 = HAVE_FUTURE_DATA - 当前及至少下一帧的数据是可用的</li>\n     * <li>4 = HAVE_ENOUGH_DATA - 可用数据足以开始播放</li>\n     * </ul>\n     */\n    get readyState(): any {\n        return this.element.readyState;\n    }\n\n    /**\n     * 获取视频源尺寸。ready事件触发后可用。\n     */\n    get videoWidth(): number {\n        return this.element.videoWidth;\n    }\n\n    get videoHeight(): number {\n        return this.element.videoHeight;\n    }\n\n    /**\n     * 获取视频长度（秒）。ready事件触发后可用。\n     */\n    get duration(): number {\n        return this.element.duration;\n    }\n\n    /**\n     * 返回音频/视频的播放是否已结束\n     */\n    get ended(): boolean {\n        return this.element.ended;\n    }\n\n    /**\n     * 返回表示音频/视频错误状态的 MediaError（JS）对象。\n     */\n    get error(): MediaError {\n        return this.element.error;\n    }\n\n    /**\n     * 设置或返回音频/视频是否应在结束时重新播放。\n     */\n    get loop(): boolean {\n        return this.element.loop;\n    }\n\n    set loop(value: boolean) {\n        if (!this.element)\n            return;\n        this.element.loop = value;\n    }\n\n    /**\n     * playbackRate 属性设置或返回音频/视频的当前播放速度。如：\n     * <ul>\n     * <li>1.0 正常速度</li>\n     * <li>0.5 半速（更慢）</li>\n     * <li>2.0 倍速（更快）</li>\n     * <li>-1.0 向后，正常速度</li>\n     * <li>-0.5 向后，半速</li>\n     * </ul>\n     * <p>只有 Google Chrome 和 Safari 支持 playbackRate 属性。</p>\n     */\n    get playbackRate(): number {\n        return this.element.playbackRate;\n    }\n\n    set playbackRate(value: number) {\n        if (!this.element)\n            return;\n        this.element.playbackRate = value;\n    }\n\n    /**\n     * 获取和设置静音状态。\n     */\n    get muted(): boolean {\n        return this.element.muted;\n    }\n\n    set muted(value: boolean) {\n        if (!this.element)\n            return;\n        this.element.muted = value;\n    }\n\n    /**\n     * 返回视频是否暂停\n     */\n    get paused(): boolean {\n        return this.element.paused;\n    }\n\n    /**\n     * preload 属性设置或返回是否在页面加载后立即加载视频。可赋值如下：\n     * <ul>\n     * <li>auto\t指示一旦页面加载，则开始加载视频。</li>\n     * <li>metadata\t指示当页面加载后仅加载音频/视频的元数据。</li>\n     * <li>none\t指示页面加载后不应加载音频/视频。</li>\n     * </ul>\n     */\n    get preload(): string {\n        return this.element.preload;\n    }\n\n    set preload(value: string) {\n        if (!this.element)\n            return;\n        //@ts-ignore\n        this.element.preload = value;\n    }\n\n    /**\n     * 参见 <i>http://www.w3school.com.cn/tags/av_prop_seekable.asp</i>。\n     */\n    get seekable(): any {\n        return this.element.seekable;\n    }\n\n    /**\n     * seeking 属性返回用户目前是否在音频/视频中寻址。\n     * 寻址中（Seeking）指的是用户在音频/视频中移动/跳跃到新的位置。\n     */\n    get seeking(): boolean {\n        return this.element.seeking;\n    }\n\n    protected onStartListeningToType(type: string): void {\n        if (videoEvents.has(type)) {\n            let func = this._listeningEvents[type];\n            if (!func)\n                func = this._listeningEvents[type] = () => {\n                    this.event(type);\n                };\n\n            this.element.addEventListener(type, func);\n        }\n    }\n\n    destroy() {\n        var isConchApp: boolean = LayaEnv.isConch;\n        if (this.element) {\n            if (LayaEnv.isConch) {\n                (<any>this.element)._destroy();\n            }\n            else {\n                this.element.pause();\n                this.element.src = \"\";\n                while (this.element.childElementCount)\n                    this.element.firstChild.remove();\n            }\n        }\n\n        ILaya.timer.clear(this, this.render);\n        super.destroy();\n    }\n}\n\nconst videoEvents = new Set([\n    \"abort\", \"canplay\", \"canplaythrough\", \"durationchange\", \"emptied\", \"error\", \"loadeddata\",\n    \"loadedmetadata\", \"loadstart\", \"pause\", \"play\", \"playing\", \"progress\", \"ratechange\", \"seeked\", \"seeking\",\n    \"stalled\", \"suspend\", \"timeupdate\", \"volumechange\", \"waiting\", \"ended\"\n]);","import { Sprite } from \"../display/Sprite\";\nimport { Texture } from \"../resource/Texture\";\nimport { ILaya } from \"../../ILaya\";\nimport { Browser } from \"../utils/Browser\";\nimport { VideoTexture } from \"./VideoTexture\";\nimport { LayaEnv } from \"../../LayaEnv\";\nimport { SpriteUtils } from \"../utils/SpriteUtils\";\nimport { Event } from \"../events/Event\";\n\n/**\n * <code>VideoNode</code>将视频显示到Canvas上。<code>Video</code>可能不会在所有浏览器有效。\n * <p>关于Video支持的所有事件参见：<i>http://www.w3school.com.cn/tags/html_ref_audio_video_dom.asp</i>。</p>\n * <p>\n * <b>注意：</b><br/>\n * 在PC端可以在任何时机调用<code>play()</code>因此，可以在程序开始运行时就使Video开始播放。但是在移动端，只有在用户第一次触碰屏幕后才可以调用play()，所以移动端不可能在程序开始运行时就自动开始播放Video。\n * </p>\n *\n * <p>MDN Video链接： <i>https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video</i></p>\n */\nexport class VideoNode extends Sprite {\n    private _videoTexture: VideoTexture;\n    private _internalTex: Texture;\n\n    constructor() {\n        super();\n\n        this.texture = this._internalTex = new Texture();\n\n        if (LayaEnv.isPlaying && ILaya.Browser.onMobile) {\n            let func = () => {\n                ILaya.Browser.document.removeEventListener(\"touchend\", func);\n\n                if (!this._videoTexture)\n                    return;\n\n                if (Browser.onIOS) {\n                    this._videoTexture.load();\n                } else {\n                    this._videoTexture.play();\n                    this._videoTexture.pause();\n                }\n            }\n\n            ILaya.Browser.document.addEventListener(\"touchend\", func);\n        }\n    }\n\n    get videoTexture(): VideoTexture {\n        return this._videoTexture;\n    }\n\n    set videoTexture(value: VideoTexture) {\n        if (this._videoTexture) {\n            this._videoTexture._removeReference();\n            this._videoTexture.off(Event.READY, this, this.onVideoMetaLoaded);\n        }\n\n        this._videoTexture = value;\n        if (value) {\n            this._videoTexture._addReference();\n            this._videoTexture.on(Event.READY, this, this.onVideoMetaLoaded);\n            if (this._videoTexture._isLoaded)\n                this._internalTex.setTo(this._videoTexture);\n        }\n        else {\n            this._internalTex.setTo(null);\n        }\n    }\n\n    get source() {\n        return this._videoTexture?.source;\n    }\n\n    set source(value: string) {\n        if (value) {\n            if (!this._videoTexture)\n                this.videoTexture = new VideoTexture();\n            this._videoTexture.source = value;\n        }\n        else if (this._videoTexture)\n            this._videoTexture.source = value;\n    }\n\n    /**\n     * 设置播放源。\n     * @param url\t播放源路径。\n     */\n    load(url: string): void {\n        this.source = url;\n    }\n\n    /**\n     * 开始播放视频。\n     */\n    play(): void {\n        if (!this._videoTexture)\n            return;\n\n        this._videoTexture.play();\n    }\n\n    /**\n     * 暂停视频播放。\n     */\n    pause(): void {\n        if (!this._videoTexture)\n            return;\n\n        this._videoTexture.pause();\n    }\n\n    /**\n     * 重新加载视频。\n     */\n    reload(): void {\n        if (!this._videoTexture)\n            return;\n\n        this._videoTexture.load();\n    }\n\n    /**\n     * 检测是否支持播放指定格式视频。\n     * @param type\t\"mp4\",\"ogg\",\"webm\",\"m3u8\"等。\n     * @return 表示支持的级别。可能的值：\n     * <ul>\n     * <li>\"probably\" - 浏览器最可能支持该音频/视频类型</li>\n     * <li>\"maybe\" - 浏览器也许支持该音频/视频类型</li>\n     * <li>\"\" - （空字符串）浏览器不支持该音频/视频类型</li>\n     * </ul>\n     */\n    canPlayType(type: string): CanPlayTypeResult {\n        if (!this._videoTexture)\n            this.videoTexture = new VideoTexture();\n        return this._videoTexture.canPlayType(type);\n    }\n\n    private onVideoMetaLoaded(): void {\n        this._internalTex.setTo(this._videoTexture);\n    }\n\n    /**\n     * buffered 属性返回 TimeRanges(JS)对象。TimeRanges 对象表示用户的音视频缓冲范围。缓冲范围指的是已缓冲音视频的时间范围。如果用户在音视频中跳跃播放，会得到多个缓冲范围。\n     * <p>buffered.length返回缓冲范围个数。如获取第一个缓冲范围则是buffered.start(0)和buffered.end(0)。以秒计。</p>\n     * @return TimeRanges(JS)对象\n     */\n    get buffered(): any {\n        return this._videoTexture?.buffered;\n    }\n\n    /**\n     * 获取当前播放源路径。\n     */\n    get currentSrc(): string {\n        return this._videoTexture?.currentSrc;\n    }\n\n    /**\n     * 设置和获取当前播放头位置。\n     */\n    get currentTime(): number {\n        return this._videoTexture?.currentTime;\n    }\n\n    set currentTime(value: number) {\n        if (!this._videoTexture)\n            return;\n\n        this._videoTexture.currentTime = value;\n    }\n\n    /**\n     * 设置和获取当前音量。\n     */\n    set volume(value: number) {\n        if (!this._videoTexture)\n            return;\n        this._videoTexture.volume = value;\n    }\n\n    get volume(): number {\n        return this._videoTexture?.volume;\n    }\n\n    /**\n     * 表示视频元素的就绪状态：\n     * <ul>\n     * <li>0 = HAVE_NOTHING - 没有关于音频/视频是否就绪的信息</li>\n     * <li>1 = HAVE_METADATA - 关于音频/视频就绪的元数据</li>\n     * <li>2 = HAVE_CURRENT_DATA - 关于当前播放位置的数据是可用的，但没有足够的数据来播放下一帧/毫秒</li>\n     * <li>3 = HAVE_FUTURE_DATA - 当前及至少下一帧的数据是可用的</li>\n     * <li>4 = HAVE_ENOUGH_DATA - 可用数据足以开始播放</li>\n     * </ul>\n     */\n    get readyState(): any {\n        return this._videoTexture?.readyState;\n    }\n\n    /**\n     * 获取视频源尺寸。ready事件触发后可用。\n     */\n    get videoWidth(): number {\n        return this._videoTexture?.videoWidth;\n    }\n\n    get videoHeight(): number {\n        return this._videoTexture?.videoHeight;\n    }\n\n    /**\n     * 获取视频长度（秒）。ready事件触发后可用。\n     */\n    get duration(): number {\n        return this._videoTexture?.duration;\n    }\n\n    /**\n     * 返回音频/视频的播放是否已结束\n     */\n    get ended(): boolean {\n        return this._videoTexture?.ended;\n    }\n\n    /**\n     * 返回表示音频/视频错误状态的 MediaError（JS）对象。\n     */\n    get error(): MediaError {\n        return this._videoTexture?.error;\n    }\n\n    /**\n     * 设置或返回音频/视频是否应在结束时重新播放。\n     */\n    get loop(): boolean {\n        return this._videoTexture?.loop;\n    }\n\n    set loop(value: boolean) {\n        if (!this._videoTexture)\n            return;\n        this._videoTexture.loop = value;\n    }\n\n    /**\n     * playbackRate 属性设置或返回音频/视频的当前播放速度。如：\n     * <ul>\n     * <li>1.0 正常速度</li>\n     * <li>0.5 半速（更慢）</li>\n     * <li>2.0 倍速（更快）</li>\n     * <li>-1.0 向后，正常速度</li>\n     * <li>-0.5 向后，半速</li>\n     * </ul>\n     * <p>只有 Google Chrome 和 Safari 支持 playbackRate 属性。</p>\n     */\n    get playbackRate(): number {\n        return this._videoTexture?.playbackRate;\n    }\n\n    set playbackRate(value: number) {\n        if (!this._videoTexture)\n            return;\n        this._videoTexture.playbackRate = value;\n    }\n\n    /**\n     * 获取和设置静音状态。\n     */\n    get muted(): boolean {\n        return this._videoTexture?.muted;\n    }\n\n    set muted(value: boolean) {\n        if (!this._videoTexture)\n            return;\n        this._videoTexture.muted = value;\n    }\n\n    /**\n     * 返回视频是否暂停\n     */\n    get paused(): boolean {\n        return this._videoTexture?.paused;\n    }\n\n    /**\n     * preload 属性设置或返回是否在页面加载后立即加载视频。可赋值如下：\n     * <ul>\n     * <li>auto\t指示一旦页面加载，则开始加载视频。</li>\n     * <li>metadata\t指示当页面加载后仅加载音频/视频的元数据。</li>\n     * <li>none\t指示页面加载后不应加载音频/视频。</li>\n     * </ul>\n     */\n    get preload(): string {\n        return this._videoTexture?.preload;\n    }\n\n    set preload(value: string) {\n        if (!this._videoTexture)\n            return;\n        //@ts-ignore\n        this._videoTexture.preload = value;\n    }\n\n    /**\n     * 参见 <i>http://www.w3school.com.cn/tags/av_prop_seekable.asp</i>。\n     */\n    get seekable(): any {\n        return this._videoTexture?.seekable;\n    }\n\n    /**\n     * seeking 属性返回用户目前是否在音频/视频中寻址。\n     * 寻址中（Seeking）指的是用户在音频/视频中移动/跳跃到新的位置。\n     */\n    get seeking(): boolean {\n        return this._videoTexture?.seeking;\n    }\n\n    /**\n    * @override\n    */\n    _setX(value: number): void {\n        super._setX(value);\n        if (this._videoTexture && LayaEnv.isConch) {\n            var transform: any = SpriteUtils.getTransformRelativeToWindow(this, 0, 0);\n            this._videoTexture.element.style.left = transform.x;\n        }\n    }\n\n    /**\n     * @override\n     */\n    _setY(value: number): void {\n        super._setY(value);\n        if (this._videoTexture && LayaEnv.isConch) {\n            var transform: any = SpriteUtils.getTransformRelativeToWindow(this, 0, 0);\n            this._videoTexture.element.style.top = transform.y;\n        }\n    }\n\n    /**\n     * @override\n     */\n    set_width(value: number): void {\n        super.set_width(value);\n\n        if (!this._videoTexture)\n            return;\n        if (LayaEnv.isConch) {\n            var transform: any = SpriteUtils.getTransformRelativeToWindow(this, 0, 0);\n            this._videoTexture.element.width = value * transform.scaleX;\n        }\n        else {\n            this._videoTexture.element.width = this.width / ILaya.Browser.pixelRatio;\n        }\n    }\n\n    /**\n     * @override\n     */\n    set_height(value: number) {\n        super.set_height(value);\n\n        if (!this._videoTexture)\n            return;\n        if (LayaEnv.isConch) {\n            var transform: any = SpriteUtils.getTransformRelativeToWindow(this, 0, 0);\n            this._videoTexture.element.height = value * transform.scaleY;\n\n        }\n        else {\n            this._videoTexture.element.height = this.height / ILaya.Browser.pixelRatio;\n        }\n    }\n\n    /**\n     * 销毁内部事件绑定。\n     * @override\n     */\n    destroy(detroyChildren: boolean = true): void {\n        this.videoTexture = null;\n        super.destroy(detroyChildren);\n    }\n}","import { AnimatorState2D } from \"./AnimatorState2D\";\n\nexport class AnimatorPlayState2D {\n\t_finish: boolean;\n\t/**@internal */\n\t_startPlayTime: number;\n\t/**@internal */\n\t_lastElapsedTime: number;\n\t/**@internal 动画播放时间*/\n\t_elapsedTime: number;\n\t/**@internal 播放的次数*/\n\t_playNum: number;\n\n\t/**播放总时间，不受speed为负数的影响 */\n\t_playAllTime: number;\n\n\t/**@internal 单词播放归一化时间 */\n\t_normalizedPlayTime: number;\n\t/**@internal */\n\t_duration: number;\n\t/**@internal 上次播放的时间，event事件使用*/\n\t_parentPlayTime: number;\n\t/**@internal */\n\t_lastIsFront: boolean;\n\t/**@internal */\n\t_currentState: AnimatorState2D | null = null;\n\n\t/**是为正向播放 */\n\t_frontPlay = true;\n\n\n\t/**\n\t * 当前动画的持续时间，以秒为单位。\n\t */\n\tget duration(): number {\n\t\treturn this._duration;\n\t}\n\n\t// checkPlayNext(): Animation2DNext {\n\t//     var nexts = this._currentState.nexts;\n\t//     if (nexts) {\n\t//         for (var i = 0, len = nexts.length; i < len; i++) {\n\t//             var no = nexts[i];\n\t//             //TODO 需要检测next的条件\n\t//             return no;\n\t//         }\n\t//     }\n\t//     return null;\n\t// }\n\n\t/**\n\t * 动画状态机。\n\t */\n\tget animatorState(): AnimatorState2D {\n\t\treturn this._currentState!;\n\t}\n\n\t/**\n\t * 创建一个 <code>AnimatorPlayState</code> 实例。\n\t */\n\tconstructor() {\n\t}\n\n\t/**\n\t * @internal\n\t */\n\t_resetPlayState(startTime: number, clipDuration: number): void {\n\t\tthis._finish = false;\n\t\tthis._startPlayTime = startTime;\n\t\tthis._elapsedTime = startTime;\n\t\tthis._lastIsFront = true;\n\t\tthis._parentPlayTime = null;\n\t\tthis._playNum = 0;\n\t\tthis._playAllTime = 0;\n\t\tvar playTime = (this._elapsedTime / clipDuration) % 1.0;\n\t\tthis._normalizedPlayTime = playTime < 0 ? playTime + 1.0 : playTime;\n\t\tthis._frontPlay = true;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\t_cloneTo(dest: AnimatorPlayState2D): void {\n\t\tdest._finish = this._finish;\n\t\tdest._startPlayTime = this._startPlayTime;\n\t\tdest._elapsedTime = this._elapsedTime;\n\t\tdest._playNum = this._playNum;\n\t\tdest._parentPlayTime = this._parentPlayTime;\n\t\tdest._normalizedPlayTime = this._normalizedPlayTime;\n\t\tdest._lastIsFront = this._lastIsFront;\n\t\tdest._frontPlay = this._frontPlay;\n\t\tdest._playAllTime = this._playAllTime;\n\t}\n\n}","import { IClone } from \"../utils/IClone\";\nimport { AnimatorPlayState2D } from \"./AnimatorPlayState2D\";\nimport { AnimatorState2D } from \"./AnimatorState2D\";\nimport { AnimatorTransition2D } from \"./AnimatorTransition2D\";\n\nexport class AnimatorControllerLayer2D implements IClone {\n\n    /**混合模式_覆盖。 */\n    static BLENDINGMODE_OVERRIDE: number = 0;\n\n    /**混合模式_叠加。 */\n    static BLENDINGMODE_ADDTIVE: number = 1;\n\n    /**@internal */\n    private _defaultState: AnimatorState2D | null;\n\n    /**@internal */\n    private _referenceCount = 0;\n\n    /**@internal */\n    private _defaultStateNameCatch: string;\n\n    /**@internal*/\n    _playStateInfo: AnimatorPlayState2D | null = new AnimatorPlayState2D();\n\n    /**@internal*/\n    _crossPlayStateInfo: AnimatorPlayState2D | null = new AnimatorPlayState2D();\n\n    /**@internal*/\n    _crossMark: number = 0;\n\n    /**@internal */\n    _crossNodesOwnersCount: number = 0;\n\n    /**@internal */\n    _crossNodesOwnersIndicesMap: any = {};\n\n    /**@internal */\n    _srcCrossClipNodeIndices: number[] = [];\n\n    /**@internal */\n    _destCrossClipNodeIndices: number[] = [];\n    \n    /**@internal */\n    _enterTransition: AnimatorTransition2D;\n\n    /**\n     * 层的名字\n     */\n    name: string;\n\n    /**\n     * 是否开始时播放\n     */\n    playOnWake = true;\n\n    /**\n     * 默认权重\n     */\n    defaultWeight = 1.0;\n\n    /**\n     * 混合模式\n     */\n    blendingMode = AnimatorControllerLayer2D.BLENDINGMODE_OVERRIDE;\n\n    /**\n     * 是否开启\n     */\n    enable = true;\n\n    /**\n     * @internal\n     */\n    _states: AnimatorState2D[] = [];\n\n    /**\n     * @internal \n     * 0:常规播放、1:动态融合播放、2:固定融合播放\n     */\n    _playType = -1;\n\n    /**\n     * 实例化一个2D动画控制器\n     * @param name \n     */\n    constructor(name: string) {\n        this.name = name;\n    }\n\n    /**\n     * 设置状态机\n     */\n    set states(states: ReadonlyArray<AnimatorState2D>) {\n        if (this._states === states)\n            return;\n        for (let i = this.states.length - 1; i >= 0; i--) {\n            this.removeState(this.states[i]);\n        }\n        for (let i = states.length - 1; i >= 0; i--) {\n            this.addState(states[i]);\n        }\n    }\n\n    get states(): ReadonlyArray<AnimatorState2D> {\n        return this._states;\n    }\n\n    /**\n     * 默认状态名称\n     */\n    set defaultStateName(str: string) {\n        this._defaultState = this.getStateByName(str);\n        if (null == this._defaultState) {\n            if (0 == this._states.length) {\n                this._defaultStateNameCatch = str;\n            } else {\n                for (var i = this._states.length - 1; i >= 0; i--) {\n                    if (this._states[i].name == str) {\n                        this._defaultState = this._states[i];\n                        break;\n                    }\n                }\n            }\n        }\n    }\n\n    get defaultStateName() {\n        if (!this._defaultState) {\n            return null;\n        }\n        return this._defaultState.name;\n    }\n\n    /**\n     * 默认动画状态机。\n     */\n    get defaultState(): AnimatorState2D {\n        return this._defaultState!;\n    }\n\n    set defaultState(value: AnimatorState2D) {\n        this._defaultState = value;\n        //this._statesMap[value.name] = value;\n    }\n\n    /**\n     * 移除Clip\n     * @param clipStateInfos \n     * @param index \n     * @param state \n     */\n    private _removeClip(clipStateInfos: AnimatorState2D[], index: number, state: AnimatorState2D): void {\n        clipStateInfos.splice(index, 1);\n    }\n\n\n    /**\n     * @internal\n     * @returns \n     */\n    _getReferenceCount(): number {\n        return this._referenceCount;\n    }\n\n    /**\n     * @internal\n     * @param count \n     */\n    _addReference(count: number): void {\n        for (var i = 0, n = this._states.length; i < n; i++)\n            this._states[i]._addReference(count);\n        this._referenceCount += count;\n    }\n\n    /**\n     * @internal\n     * @param count \n     */\n    _removeReference(count = 1): void {\n        for (var i = 0, n = this._states.length; i < n; i++)\n            this._states[i]._removeReference(count);\n        this._referenceCount -= count;\n    }\n\n    /**\n     * @internal\n     */\n    _clearReference(): void {\n        this._removeReference(-this._referenceCount);\n    }\n\n\n    /**\n    * 获取当前的播放状态。\n    * @return 动画播放状态。\n    */\n    getCurrentPlayState(): AnimatorPlayState2D {\n        return this._playStateInfo!;\n    }\n\n    /**\n     * 状态机名称\n     * @param str \n     * @returns \n     */\n    getStateByName(str: string) {\n        for (let i = this._states.length - 1; i >= 0; i--) {\n            if (this._states[i].name == str) {\n                return this._states[i];\n            }\n        }\n        return null;\n    }\n\n    /**\n     * 添加动画状态。\n     * @param\tstate 动画状态。\n     * @param   layerIndex 层索引。\n     */\n    addState(state: AnimatorState2D): void {\n        var stateName = state.name;\n        if (this.getStateByName(stateName)) {\n            throw \"AnimatorControllerLayer:this stat's name has exist.\";\n        } else {\n            this._states.push(state);\n            if (stateName == this._defaultStateNameCatch) {\n                this._defaultState = state;\n                this._defaultStateNameCatch = null;\n            }\n        }\n    }\n\n    /**\n     * 移除动画状态。\n     * @param\tstate 动画状态。\n     * @param   layerIndex 层索引。\n     */\n    removeState(state: AnimatorState2D): void {\n        var states = this._states;\n        var index = -1;\n        for (var i = 0, n = states.length; i < n; i++) {\n            if (states[i] === state) {\n                index = i;\n                break;\n            }\n        }\n        if (-1 != index)\n            this._removeClip(states, index, state);\n    }\n\n    /**\n         * 克隆。\n         * @return\t 克隆副本。\n         */\n    clone() {\n        var dest: AnimatorControllerLayer2D = new AnimatorControllerLayer2D(this.name);\n        this.cloneTo(dest);\n        return dest;\n    }\n    /**\n     * 克隆。\n     * @param\tdestObject 克隆源。\n     */\n    cloneTo(destObject: any): void {\n        var dest: AnimatorControllerLayer2D = (<AnimatorControllerLayer2D>destObject);\n        dest.name = this.name;\n\n\n    }\n\n    /**\n     * 销毁\n     */\n    destroy() {\n        this._removeReference();\n        for (var i = 0, n = this._states.length; i < n; i++) {\n            this._states[i].destroy();\n        }\n        this._states.length = 0;\n    }\n}","import { AvatarMask } from \"../d3/component/Animator/AvatarMask\";\n\nexport interface TypeAnimatorControllerData {\n    layerW: number,\n    controllerLayers: TypeAnimatorLayer[];\n    cullingMode?: number,\n    enable?: boolean,\n    animatorParams?: TypeAnimatorParams[],\n}\nexport interface TypeAnimatorParams {\n    id: number,\n    name: string,\n    type: AniParmType,\n    val: number | boolean,\n}\nexport interface TypeAnimatorLayer {\n    defaultStateName?: string,\n    name: string,\n    blendingMode: number,\n    states: TypeAnimatorState[],\n    playOnWake: boolean,\n    defaultWeight: number,\n    avatarMask?: any,\n\n    stageX?: number,\n    stageY?: number,\n    stageScale?: number,\n}\n\nexport enum AniParmType {\n    Float,\n    Bool,\n    Trigger,\n}\n\n/**\n * 动画状态条件类型\n */\nexport enum AniStateConditionType {\n    Number,\n    Bool,\n    Trigger\n}\n\nexport interface TypeAnimatorState {\n    x: number,\n    y: number,\n    /**-1代表enter，-2代表exit，-3代表anyState */\n    id: string,\n    name: string,\n    speed?: number,\n    clipStart?: number,\n    clipEnd?: number,\n    loop?: number,\n    yoyo?: boolean,\n    soloTransitions?: TypeAnimatorTransition[],\n    clip?: { _$uuid: string, },\n    scripts?: string[],\n\n\n    states?: TypeAnimatorState[],\n    defaultStateName?: string,\n    stageX?: number,\n    stageY?: number,\n    stageScale?: number,\n}\nexport interface TypeAnimatorTransition {\n    id: string,\n    name?: string,\n    mute?: boolean,\n    solo?: boolean,\n    exitTime?: number,\n    transduration?: number,\n    transstartoffset?: number,\n    exitByTime?: boolean,\n    conditions?: TypeAnimatorConditions[],\n}\nexport interface TypeAnimatorConditions {\n    id?: number,\n    type?: AniStateConditionNumberCompressType,\n    checkValue?: number | boolean,\n    name?: string,\n}\n\nexport enum AniStateConditionNumberCompressType {\n    Less,\n    Greater\n}\n\nexport class AnimatorControllerParse {\n    static parse(data: TypeAnimatorControllerData) {\n        //let ret: TypeAnimatorControllerData = JSON.parse(JSON.stringify(data));\n        let ret = data;\n        let layers = ret.controllerLayers;\n        if (null == layers) {\n            layers = [];\n        }\n\n        let clipsID: string[] = [];\n\n\n        for (let i = layers.length - 1; i >= 0; i--) {\n            let l = layers[i];\n            let states = l.states;\n            if (!states) {\n                states = [];\n                l.states = states;\n            }\n\n            l.defaultStateName = null;\n            let retobj = this.checkStates(states, clipsID, ret);\n            if (retobj) {\n                l.defaultStateName = retobj.enterName;\n            } else {\n                layers.splice(i, 1);\n            }\n        }\n        return { ret: ret, clipsID: clipsID };\n    }\n\n\n    private static checkStates(states: TypeAnimatorState[], clipsID: string[], data: TypeAnimatorControllerData) {\n        let clipState: TypeAnimatorState[] = null;\n        let enterState: TypeAnimatorState = null;\n        for (let j = states.length - 1; j >= 0; j--) {\n            let state = states[j];\n            if (state.states) {\n                if (null == this.checkStates(state.states, clipsID, data)) {\n                    states.splice(j, 1);\n                } else {\n                    if (null == clipState) {\n                        clipState = [];\n                    }\n                    clipState.push(state);\n                }\n            } else if (\"-1\" == state.id) {\n                enterState = state;\n                // let defName = this.checkDefault(state, states);\n                // if (null != defName) {\n                //     l.defaultStateName = defName;\n                // }\n            } else if (\"-2\" == state.id) {\n                //TODO any\n            } else if (\"-3\" == state.id) {\n                //TODO exit\n            } else if (null == state.clip || null == state.clip._$uuid || \"\" == state.clip._$uuid) {\n                states.splice(j, 1);\n            } else {\n                if (0 > clipsID.indexOf(state.clip._$uuid)) {\n                    clipsID.push(state.clip._$uuid);\n                }\n\n                this.checkNext(state, states, data);\n                if (null == clipState) {\n                    clipState = [];\n                }\n                clipState.push(state);\n            }\n        }\n        let ret: { states: TypeAnimatorState[], enterName: string } = null;\n        if (clipState && enterState) {\n            let defName = this.checkDefault(enterState, clipState);\n            if (null != defName) {\n                ret = { states: clipState, enterName: defName };\n            }\n        }\n\n\n        return ret;\n    }\n\n    private static checkNext(state: TypeAnimatorState, states: TypeAnimatorState[], data: TypeAnimatorControllerData) {\n        let nexts = state.soloTransitions;\n        if (nexts) {\n            for (let i = nexts.length - 1; i >= 0; i--) {\n                let next = nexts[i];\n                let nState = this.getStateByID(states, next.id);\n                if (!nState || (null == nState.clip && \"-3\" != nState.id && null == nState.states)) {\n                    nexts.splice(i, 1);\n                } else {\n                    next.name = nState.name;\n\n                    next.conditions = this.checkConditions(next.conditions, data);\n\n\n                }\n            }\n        }\n    }\n\n\n    private static checkConditions(conditions: TypeAnimatorConditions[], data: TypeAnimatorControllerData) {\n        if (!conditions || 0 == conditions.length || null == data.animatorParams || 0 == data.animatorParams.length) {\n            return [];\n        }\n\n        let parms = data.animatorParams;\n\n        for (let i = conditions.length - 1; i >= 0; i--) {\n            let o = conditions[i];\n            let parm: TypeAnimatorParams = null;\n            for (let j = parms.length - 1; j >= 0; j--) {\n                if (parms[j].id == o.id) {\n                    parm = parms[j];\n                    break;\n                }\n            }\n            if (null == parm) {\n                conditions.splice(i, 1);\n            } else {\n                o.name = parm.name;\n                if (parm.type == AniParmType.Float) {\n                    let num = Number(o.checkValue);\n                    if (isNaN(num)) {\n                        o.checkValue = 0;\n                    }\n                    num = Number(o.type);\n                    if (isNaN(num)) {\n                        o.type = 0;\n                    }\n                }\n\n\n            }\n\n\n        }\n\n\n\n        return conditions;\n\n\n    }\n\n\n\n    private static checkDefault(state: TypeAnimatorState, states: TypeAnimatorState[]) {\n        let nexts = state.soloTransitions;\n        let id: string = null;\n        if (nexts && 0 < nexts.length) {\n            id = nexts[0].id;\n        }\n\n        let defState: TypeAnimatorState = null;\n        if (null != id) {\n            defState = this.getStateByID(states, id);\n        }\n        if (null != defState && (null != defState.clip || null != defState.states)) {\n            return defState.name;\n        }\n\n        for (let i = states.length - 1; i >= 0; i--) {\n            if (states[i].clip) {\n                return states[i].name;\n            }\n        }\n\n\n        return null;\n\n    }\n\n\n    private static getStateByID(states: TypeAnimatorState[], id: string) {\n        if (states) {\n            for (let i = states.length - 1; i >= 0; i--) {\n                if (states[i].id == id) {\n                    return states[i];\n                }\n            }\n        }\n        return null;\n    }\n\n}","/**\n * 动画更新模式\n */\nexport enum AnimatorUpdateMode {\n    /**正常更新。*/\n    Normal = 0,\n    /**低频率更新 */\n    LowFrame = 1,\n    /**不更新 */\n    UnScaleTime = 2\n}\n","\n/**\n * 动画条件类型\n */\nexport enum AniConditionType {\n    /**\n     * 大于\n     */\n    Greater,\n    /**\n     * 小于\n     */\n    Less,\n    /**\n     * 等于\n     */\n    Equals,\n    /**\n     * 不等于\n     */\n    NotEqual,//不等于\n}\n\n/**\n * 2D动画类型\n */\nexport class Animation2DCondition {\n    /**\n     * id编号\n     */\n    id: number;\n    /**\n     * 动画条件\n     */\n    type: AniConditionType;\n    /**\n     * 检测值\n     */\n    checkValue: any\n}","import { Resource } from \"./Resource\";\n/**\n * 文字资源格式\n */\nexport enum TextResourceFormat {\n    /**Buffer */\n    Buffer,\n    /**TODO */\n    Plain,\n    /**Json */\n    JSON,\n    /**XML */\n    XML\n}\n\n/**\n * 文字资源\n */\nexport class TextResource extends Resource {\n    /**数据 */\n    public readonly data: any;\n    /**格式 */\n    public readonly format: TextResourceFormat;\n    /**\n     * 实例化文字资源\n     * @param data \n     * @param format \n     */\n    constructor(data: any, format: TextResourceFormat) {\n        super();\n        this.data = data;\n        this.format = format;\n    }\n}","\nimport { Stat } from \"../utils/Stat\";\nimport { AnimatorControllerLayer2D } from \"./AnimatorControllerLayer2D\";\nimport { AnimatorPlayState2D } from \"./AnimatorPlayState2D\";\nimport { AnimatorState2D } from \"./AnimatorState2D\";\nimport { Component } from \"./Component\";\nimport { KeyframeNode2D } from \"./KeyframeNode2D\";\nimport { Node } from \"../../laya/display/Node\";\nimport { ClassUtils } from \"../utils/ClassUtils\";\nimport { Animation2DParm } from \"./Animation2DParm\";\nimport { AnimatorController2D } from \"./AnimatorController2D\";\nimport { AniParmType } from \"./AnimatorControllerParse\";\nimport { AnimatorTransition2D } from \"./AnimatorTransition2D\";\nimport { Animation2DEvent } from \"./Animation2DEvent\";\nimport { AnimatorUpdateMode } from \"./AnimatorUpdateMode\";\n\n/**\n * <code>Animator2D<code/>2D动画组件\n */\nexport class Animator2D extends Component {\n    /**@internal */\n    private _speed = 1;\n    /**@internal 更新模式*/\n    private _updateMode = AnimatorUpdateMode.Normal;\n    /**@internal 降低更新频率调整值*/\n    private _lowUpdateDelty = 20;\n    /**@internal */\n    private _isPlaying = true;\n    /**@internal */\n    private _ownerMap: Map<KeyframeNode2D, { ower: Node, pro?: { ower: any, key: string, defVal: any } }>\n    /**@internal */\n    _parameters: Record<string, Animation2DParm>;\n    /**@internal */\n    _controllerLayers: AnimatorControllerLayer2D[];\n    /**@internal */\n    _controller: AnimatorController2D;\n    /**@internal */\n    _checkEnterIndex: number[];\n\n    /**\n     * 实例化2D动画组件\n     */\n    constructor() {\n        super();\n        this._controllerLayers = [];\n        this._parameters = {};\n    }\n\n    /**\n     * 2D动画控制器\n     */\n    set controller(val: AnimatorController2D) {\n        this._controller = val;\n        if (val) {\n            val.updateTo(this);\n        }\n    }\n\n    get controller() {\n        return this._controller;\n    }\n\n    /**\n     * 动画参数\n     */\n    set parameters(val: Record<string, Animation2DParm>) {\n        this._parameters = val;\n    }\n\n    get parameters() {\n        return this._parameters;\n    }\n\n    /**\n     * 播放速度\n     */\n    set speed(num: number) {\n        this._speed = num;\n    }\n\n    get speed() {\n        return this._speed;\n    }\n\n    /**\n     * 是否正在播放中\n     */\n    get isPlaying() {\n        return this._isPlaying;\n    }\n\n    /**\n     * @internal\n     * @param animatorState \n     * @param playState \n     */\n    private _updateStateFinish(animatorState: AnimatorState2D, playState: AnimatorPlayState2D): void {\n        if (playState._finish) {\n            animatorState._eventExit();//派发播放完成的事件\n        }\n    }\n\n    /**\n     * 赋值Node数据\n     * @param stateInfo 动画状态\n     * @param additive 是否为addtive\n     * @param weight state权重\n     * @param isFirstLayer 是否是第一层\n     */\n    private _setClipDatasToNode(stateInfo: AnimatorState2D, additive: boolean, weight: number, controllerLayer: AnimatorControllerLayer2D = null): void {\n        var realtimeDatas = stateInfo._realtimeDatas;\n        var nodes = stateInfo._clip!._nodes!;\n        for (var i = 0, n = nodes.count; i < n; i++) {\n            if (null == realtimeDatas[i]) continue;\n            var node = nodes.getNodeByIndex(i);\n            var o = this.getOwner(node);\n            o && this._applyFloat(o, additive, weight, realtimeDatas[i]);\n        }\n    }\n\n    /**\n     * @internal\n     * @param o \n     * @param additive \n     * @param weight \n     * @param isFirstLayer \n     * @param data \n     */\n    private _applyFloat(o: { ower: Node, pro?: { ower: any, key: string, defVal: any } }, additive: boolean, weight: number, data: string | number | boolean): void {\n        var pro = o.pro;\n        if (pro && pro.ower) {\n            if (additive && \"number\" == typeof data) {\n                pro.ower[pro.key] = pro.defVal + weight * data;\n            } else if (\"number\" == typeof data) {\n                pro.ower[pro.key] = weight * data;\n            } else {\n                pro.ower[pro.key] = data;\n            }\n        }\n    }\n\n    /**\n     * @internal\n     * @param node \n     * @returns \n     */\n    private getOwner(node: KeyframeNode2D) {\n        var ret: { ower: Node, pro?: { ower: any, key: string, defVal: any } };\n        if (this._ownerMap) {\n            ret = this._ownerMap.get(node);\n            if (ret) {\n                return ret;\n            }\n        }\n\n        var property = this.owner;\n        for (var j = 0, m = node.ownerPathCount; j < m; j++) {\n            var ownPat = node.getOwnerPathByIndex(j);\n            if (\"\" == ownPat) {\n                continue;\n            } else {\n                property = property.getChildByName(ownPat);\n                if (!property)\n                    break;\n            }\n        }\n\n        ret = { ower: property };\n\n        if (property) {\n            var pobj: any = property;\n            var propertyCount = node.propertyCount;\n\n            if (1 == propertyCount) {\n                var pname = node.getPropertyByIndex(0);\n                ret.pro = { ower: property, key: pname, defVal: (property as any)[pname] };\n            } else {\n                for (var i = 0; i < propertyCount; i++) {\n                    var pname = node.getPropertyByIndex(i);\n\n                    if (i == propertyCount - 1 || null == pobj) {\n                        ret.pro = { ower: pobj, key: pname, defVal: pobj ? pobj[pname] : null }\n                        break;\n                    }\n\n                    if (null == pobj[pname] && property == pobj) {\n                        //有可能是组件,查找组件逻辑\n                        pobj = null;\n                        var classObj = ClassUtils.getClass(pname);\n                        if (classObj) {\n                            pobj = property.getComponent(classObj);\n                        }\n\n                    } else {\n                        pobj = pobj[pname];\n                    }\n                }\n            }\n\n        }\n        if (null == this._ownerMap) {\n            this._ownerMap = new Map();\n        }\n        this._ownerMap.set(node, ret);\n        return ret;\n\n\n    }\n\n    /**\n     * 更新clip数据\n     * @internal\n     */\n    private _updateClipDatas(animatorState: AnimatorState2D, addtive: boolean, playStateInfo: AnimatorPlayState2D): void {\n        var clip = animatorState._clip;\n        var clipDuration = clip!._duration;\n\n        var curPlayTime = animatorState.clipStart * clipDuration + playStateInfo._normalizedPlayTime * playStateInfo._duration;\n        var currentFrameIndices = animatorState._currentFrameIndices;\n        //var frontPlay = playStateInfo._frontPlay;\n        let frontPlay = true;\n        clip!._evaluateClipDatasRealTime(curPlayTime, currentFrameIndices, addtive, frontPlay, animatorState._realtimeDatas);\n    }\n\n    /**\n     * @internal\n     * @param animatorState \n     * @param playState \n     * @param elapsedTime \n     * @param loop \n     * @param layerIndex \n     * @returns \n     */\n    private _updatePlayer(animatorState: AnimatorState2D, playState: AnimatorPlayState2D, elapsedTime: number, loop: number, layerIndex: number): void {\n\n        let isReplay = false;\n        var clipDuration = animatorState._clip!._duration * (animatorState.clipEnd - animatorState.clipStart);\n\n        var lastElapsedTime = playState._elapsedTime;\n\n        let pAllTime = playState._playAllTime;\n\n        playState._playAllTime += Math.abs(elapsedTime);\n\n        //动画播放总时间\n        elapsedTime = lastElapsedTime + elapsedTime;\n        //动画播放的上次总时间\n        playState._lastElapsedTime = lastElapsedTime;\n        playState._elapsedTime = elapsedTime;\n        var normalizedTime = elapsedTime / clipDuration;\n\n        let scale = 1;\n        if (animatorState.yoyo) {\n            scale = 2;\n        }\n\n        //总播放次数\n        let pTime = playState._playAllTime / (clipDuration * scale);\n\n        if (Math.floor(pAllTime / (clipDuration * scale)) < Math.floor(pTime)) {\n            isReplay = true;\n        }\n\n        var playTime = normalizedTime % 1.0;\n        let normalizedPlayTime = playTime < 0 ? playTime + 1.0 : playTime;\n        playState._normalizedPlayTime = normalizedPlayTime;\n        playState._duration = clipDuration;\n\n        if (1 != scale) {\n            normalizedTime = playState._playAllTime / (clipDuration * scale);\n            playTime = normalizedTime % 1.0;\n            normalizedPlayTime = playTime < 0 ? playTime + 1.0 : playTime;\n\n            if (animatorState.yoyo) {\n                if (0.5 > normalizedPlayTime) {\n                    if (!playState._frontPlay) {\n                        if (0 > animatorState.speed) {\n                            playState._elapsedTime = animatorState.clipEnd * pAllTime;\n                            playState._normalizedPlayTime = animatorState.clipEnd;\n                        } else {\n                            playState._elapsedTime = animatorState.clipStart * pAllTime;\n                            playState._normalizedPlayTime = animatorState.clipStart;\n                        }\n                        playState._frontPlay = true;\n                    }\n                } else {\n                    if (playState._frontPlay) {\n                        playState._frontPlay = false;\n                        if (0 > animatorState.speed) {\n                            playState._elapsedTime = animatorState.clipStart * pAllTime;\n                            playState._normalizedPlayTime = animatorState.clipStart;\n                        } else {\n                            playState._elapsedTime = animatorState.clipEnd * pAllTime;\n                            playState._normalizedPlayTime = animatorState.clipEnd;\n                        }\n                    }\n                }\n            }\n        }\n\n        animatorState._eventStateUpdate(normalizedPlayTime);\n        let ret = this._applyTransition(layerIndex, animatorState._eventtransition(normalizedPlayTime, this.parameters, isReplay));\n\n        if (!ret && isReplay) {\n            let absTime = playState._playAllTime / (clipDuration * scale);\n            if (0 < loop && loop <= absTime) {\n                playState._finish = true;\n\n                if (0 > animatorState.speed) {\n                    if (animatorState.yoyo) {\n                        playState._elapsedTime = animatorState.clipEnd * pAllTime;\n                        playState._normalizedPlayTime = animatorState.clipEnd;\n                    } else {\n                        playState._elapsedTime = animatorState.clipStart * pAllTime;\n                        playState._normalizedPlayTime = animatorState.clipStart;\n                    }\n                } else {\n                    if (animatorState.yoyo) {\n                        playState._elapsedTime = animatorState.clipStart * pAllTime;\n                        playState._normalizedPlayTime = animatorState.clipStart;\n                    } else {\n                        playState._elapsedTime = animatorState.clipEnd * pAllTime;\n                        playState._normalizedPlayTime = animatorState.clipEnd;\n                    }\n                }\n                return;\n            } else {\n                animatorState._eventLoop();\n            }\n        }\n    }\n\n    /**\n     * @internal\n     * @param stateInfo \n     * @param playStateInfo \n     */\n    private _updateEventScript(stateInfo: AnimatorState2D, playStateInfo: AnimatorPlayState2D): void {\n        let clip = stateInfo._clip;\n        let events = clip!._animationEvents;\n        if (!events || 0 == events.length) return;\n        let clipDuration = clip!._duration;\n        let time = playStateInfo._normalizedPlayTime * clipDuration;\n        let frontPlay = playStateInfo._frontPlay;\n        let pTime = playStateInfo._parentPlayTime;\n        let parentPlayTime = playStateInfo._parentPlayTime;\n        if (null == parentPlayTime) {\n            if (frontPlay) {\n                parentPlayTime = clipDuration * playStateInfo.animatorState.clipStart;\n            } else {\n                parentPlayTime = clipDuration * playStateInfo.animatorState.clipEnd;\n            }\n        }\n        if (frontPlay) {\n            if (time < parentPlayTime) {\n                this._eventScript(events, parentPlayTime, clipDuration * playStateInfo.animatorState.clipEnd, frontPlay);\n                parentPlayTime = clipDuration * playStateInfo.animatorState.clipStart;\n            }\n        } else {\n            if (time > parentPlayTime) {\n                this._eventScript(events, parentPlayTime, clipDuration * playStateInfo.animatorState.clipStart, frontPlay);\n                parentPlayTime = clipDuration * playStateInfo.animatorState.clipEnd;\n            }\n        }\n\n        this._eventScript(events, parentPlayTime, time, frontPlay);\n        /**如果不相等，应该是event事件里面跳转了，被重置了动画 */\n        if(pTime == playStateInfo._parentPlayTime){\n            playStateInfo._parentPlayTime = time;\n        }\n    }\n    /**\n    * @internal\n    */\n    private _eventScript(events: Animation2DEvent[], parentPlayTime: number, currPlayTime: number, frontPlay: boolean) {\n        let scripts = this.owner.components;\n        if (frontPlay) {\n            for (let i = 0, len = events.length; i < len; i++) {\n                let e = events[i];\n                if (e.time > parentPlayTime && e.time <= currPlayTime) {\n                    for (let j = 0, m = scripts.length; j < m; j++) {\n                        let script = scripts[j];\n                        if (script._isScript()) {\n                            let fun: Function = (script as any)[e.eventName];\n                            (fun) && (fun.apply(script, e.params));\n                        }\n                    }\n                } else if (e.time > currPlayTime) {\n                    break;\n                }\n            }\n        } else {\n            for (let i = events.length - 1; i >= 0; i--) {\n                let e = events[i];\n                if (e.time < parentPlayTime && e.time >= currPlayTime) {\n                    for (let j = 0, m = scripts.length; j < m; j++) {\n                        let script = scripts[j];\n                        if (script._isScript()) {\n                            let fun: Function = (script as any)[e.eventName];\n                            (fun) && (fun.apply(script, e.params));\n                        }\n                    }\n                } else if (e.time < currPlayTime) {\n                    break;\n                }\n            }\n        }\n    }\n\n    /**\n     * @internal\n     */\n    // private _eventScript(events: Animation2DEvent[], eventIndex: number, endTime: number, front: boolean, startTime = 0): number {\n    //     let scripts = this.owner.components;\n    //     if (front) {\n    //         for (let n = events.length; eventIndex < n; eventIndex++) {\n    //             let event = events[eventIndex];\n    //             if (event.time <= endTime) {\n    //                 if (event.time >= startTime) {\n    //                     for (let j = 0, m = scripts.length; j < m; j++) {\n    //                         let script = scripts[j];\n    //                         if (script._isScript()) {\n    //                             let fun: Function = (script as any)[event.eventName];\n    //                             (fun) && (fun.apply(script, event.params));\n    //                         }\n    //                     }\n    //                 }\n    //             } else {\n    //                 break;\n    //             }\n    //         }\n    //     } else {\n    //         for (; eventIndex >= 0; eventIndex--) {\n    //             let event = events[eventIndex];\n    //             if (event.time >= endTime) {\n    //                 for (let j = 0, m = scripts.length; j < m; j++) {\n    //                     let script = scripts[j];\n    //                     if (script._isScript()) {\n    //                         let fun = (script as any)[event.eventName];\n    //                         (fun) && (fun.apply(script, event.params));\n    //                     }\n    //                 }\n    //             } else {\n    //                 break;\n    //             }\n    //         }\n    //     }\n    //     return eventIndex;\n    // }\n\n    /**\n     * 启用过渡\n     * @param layerindex \n     * @param transition \n     * @returns \n     */\n    private _applyTransition(layerindex: number, transition: AnimatorTransition2D) {\n        if (!transition)\n            return false;\n        return this.crossFade(transition.destState.name, transition.transduration, layerindex, transition.transstartoffset);\n    }\n\n    /**\n     * @internal\n     * @param delta \n     * @returns \n     */\n    private _applyUpdateMode(delta: number): number {\n        let ret;\n        switch (this._updateMode) {\n            case AnimatorUpdateMode.Normal:\n                ret = delta;\n                break;\n            case AnimatorUpdateMode.LowFrame:\n                ret = (Stat.loopCount % this._lowUpdateDelty == 0) ? delta * this._lowUpdateDelty : 0;\n                break;\n            case AnimatorUpdateMode.UnScaleTime:\n                ret = 0;\n                break;\n        }\n        return ret;\n    }\n\n    gotoAndStopByFrame(name: string, layerIndex: number, frame: number) {\n        var controllerLayer = this._controllerLayers[layerIndex];\n        if (controllerLayer) {\n            var animatorState = controllerLayer.getStateByName(name);\n            if (!animatorState || !animatorState._clip)\n                return;\n            var allFrame = animatorState._clip!._duration * animatorState._clip!._frameRate;\n            let normalizedTime = frame / allFrame;\n            if (1 < normalizedTime) normalizedTime = 1;\n            this.gotoAndStop(name, layerIndex, normalizedTime);\n        }\n    }\n\n    gotoAndStop(name: string, layerIndex: number, normalizedTime: number) {\n        var controllerLayer = this._controllerLayers[layerIndex];\n        if (controllerLayer) {\n            var animatorState = controllerLayer.getStateByName(name);\n            if (!animatorState || !animatorState._clip)\n                return;\n\n            var playStateInfo = controllerLayer._playStateInfo!;\n            var curPlayState = playStateInfo._currentState!;\n\n            var clipDuration = animatorState._clip!._duration;\n            var calclipduration = animatorState._clip!._duration * (animatorState.clipEnd - animatorState.clipStart);\n\n            playStateInfo._resetPlayState(clipDuration * normalizedTime, calclipduration);\n            playStateInfo._normalizedPlayTime = normalizedTime;\n            controllerLayer._playType = 0;\n            if (curPlayState !== animatorState) {\n                playStateInfo._currentState = animatorState;\n            }\n            animatorState._eventStart(this, layerIndex);\n            let addtive = controllerLayer.blendingMode != AnimatorControllerLayer2D.BLENDINGMODE_OVERRIDE;\n            this._updateClipDatas(animatorState, addtive, playStateInfo);\n            this._setClipDatasToNode(animatorState, addtive, controllerLayer.defaultWeight, controllerLayer);\n            this.stop();\n        }\n    }\n\n    /**\n     * 播放动画\n     * @param name 动画名称\n     * @param layerIndex 层索引\n     * @param normalizedTime 归一化时间\n     * @returns \n     */\n    play(name?: string, layerIndex = 0, normalizedTime: number = Number.NEGATIVE_INFINITY) {\n        if (this._checkEnterIndex) {\n            let i = this._checkEnterIndex.indexOf(layerIndex);\n            if (0 <= i) {\n                this._checkEnterIndex.splice(i, 1);\n            }\n        }\n        this._isPlaying = true;\n        var controllerLayer = this._controllerLayers[layerIndex];\n        if (controllerLayer) {\n            var defaultState = controllerLayer.defaultState;\n            if (!name && !defaultState)\n                throw new Error(\"Animator:must have default clip value,please set clip property.\");\n\n            var playStateInfo = controllerLayer._playStateInfo!;\n            var curPlayState = playStateInfo._currentState!;\n            var animatorState = name ? controllerLayer.getStateByName(name) : defaultState;\n\n            if (!animatorState._clip)\n                return;\n\n            var clipDuration = animatorState._clip!._duration;\n            var calclipduration = animatorState._clip!._duration * (animatorState.clipEnd - animatorState.clipStart);\n\n            // this.resetDefOwerVal();\n            // playStateInfo._resetPlayState(0.0, calclipduration);\n            // if (curPlayState != animatorState) {\n            //     playStateInfo._currentState = animatorState;\n            // }\n            // controllerLayer._playType = 0;、\n\n            if (curPlayState !== animatorState) {\n                if (normalizedTime !== Number.NEGATIVE_INFINITY)\n                    playStateInfo._resetPlayState(clipDuration * normalizedTime, calclipduration);\n                else\n                    playStateInfo._resetPlayState(0.0, calclipduration);\n                (curPlayState !== null && curPlayState !== animatorState);\n                controllerLayer._playType = 0;\n                playStateInfo._currentState = animatorState;\n            } else {\n                if (normalizedTime !== Number.NEGATIVE_INFINITY) {\n                    playStateInfo._resetPlayState(clipDuration * normalizedTime, calclipduration);\n                    controllerLayer._playType = 0;\n                }\n            }\n            animatorState._eventStart(this, layerIndex);\n        }\n        // var scripts = animatorState._scripts!;\n        // if (scripts) {\n        //     for (var i = 0, n = scripts.length; i < n; i++)\n        //         scripts[i].onStateEnter();\n        // }\n    }\n\n    /**\n     * 停止播放动画\n     */\n    stop() {\n        this._isPlaying = false;\n    }\n\n    /**\n     * 帧循环\n     * @returns \n     */\n    onUpdate(): void {\n        if (!this._isPlaying) return;\n\n        if (this._checkEnterIndex) {\n            for (let i = this._checkEnterIndex.length - 1; i >= 0; i--) {\n                let index = this._checkEnterIndex[i];\n                let enterTransition = this._controllerLayers[index]._enterTransition;\n                if (enterTransition.check(0, this.parameters, true)) {\n                    var defaultClip = this.getDefaultState(index);\n                    this.play(null, index, defaultClip.cycleOffset);\n                }\n            }\n        }\n\n\n        var delta = this.owner.timer._delta / 1000.0;\n        delta = this._applyUpdateMode(delta);\n        if (0 == this.speed || 0 == delta) return;\n        var needRender = true;//TODO:有渲染节点才可将needRender变为true\n\n        for (var i = 0, n = this._controllerLayers.length; i < n; i++) {\n            var controllerLayer = this._controllerLayers[i];\n            if (!controllerLayer.enable)\n                continue;\n\n\n            var playStateInfo = controllerLayer._playStateInfo!;\n            //var crossPlayStateInfo = controllerLayer._crossPlayStateInfo!;\n            var addtive = controllerLayer.blendingMode != AnimatorControllerLayer2D.BLENDINGMODE_OVERRIDE;\n            switch (controllerLayer._playType) {\n                case 0:\n                    var animatorState = playStateInfo._currentState!;\n                    var speed = this._speed * animatorState.speed;\n                    var finish = playStateInfo._finish;\n\n                    var loop = animatorState.loop;\n                    if (-1 >= loop) {\n                        var clip = animatorState._clip!;\n                        if (clip.islooping) {\n                            loop = 0;\n                        } else {\n                            loop = 1;\n                        }\n                    }\n\n                    let dir = 1;\n                    if (!playStateInfo._frontPlay) {\n                        dir = -1;\n                    }\n\n\n                    finish || this._updatePlayer(animatorState, playStateInfo, delta * speed * dir, loop, i);\n                    playStateInfo = controllerLayer._playStateInfo!;\n                    animatorState = playStateInfo._currentState!;\n                    if (needRender) {\n                        this._updateClipDatas(animatorState, addtive, playStateInfo);\n                        if (!finish) {\n                            this._setClipDatasToNode(animatorState, addtive, controllerLayer.defaultWeight, controllerLayer);\n                            this._updateEventScript(animatorState, playStateInfo);\n                        }\n                    }\n                    finish || this._updateStateFinish(animatorState, playStateInfo);\n                    break;\n            }\n        }\n    }\n\n    /**\n     * 添加控制器层。\n     */\n    addControllerLayer(controllderLayer: AnimatorControllerLayer2D): void {\n        this._controllerLayers.push(controllderLayer);\n    }\n\n    /**\n     * 在当前动画状态和目标动画状态之间进行融合过渡播放。\n     * @param\tname 目标动画状态。\n     * @param\ttransitionDuration 过渡时间,该值为当前动画状态的归一化时间，值在0.0~1.0之间。\n     * @param\tlayerIndex 层索引。\n     * @param\tnormalizedTime 归一化的播放起始时间。\n     */\n    crossFade(name: string, transitionDuration: number, layerIndex: number = 0, normalizedTime: number = Number.NEGATIVE_INFINITY) {\n        var controllerLayer = this._controllerLayers[layerIndex];\n        if (controllerLayer) {\n            var destAnimatorState = controllerLayer.getStateByName(name);\n            if (destAnimatorState) {\n\n                this.play(name, layerIndex, normalizedTime);\n                return true;\n\n            }\n            else {\n                console.warn(\"Invalid layerIndex \" + layerIndex + \".\");\n            }\n        }\n        return false;\n    }\n\n    /**\n     * @internal\n     * @returns \n     */\n    onAfterDeserialize(): void {\n        let arr = (<any>this).controllerLayers;\n        if (!arr || null != this.controller)\n            return;\n        delete (<any>this).controllerLayers;\n        this._controllerLayers.length = 0;\n        for (let layer of arr) {\n            this.addControllerLayer(layer);\n        }\n    }\n\n    /**\n     * @internal\n     */\n    onEnable() {\n        if (this._checkEnterIndex) this._checkEnterIndex.length = 0;\n        else this._checkEnterIndex = [];\n\n        if (this._isPlaying) {\n            for (var i = 0, n = this._controllerLayers.length; i < n; i++) {\n                if (this._controllerLayers[i].playOnWake) {\n                    var defaultClip = this.getDefaultState(i);\n                    //(defaultClip) && (this.play(null, i, defaultClip.cycleOffset));\n                    if (defaultClip) {\n                        let enterTransition = this._controllerLayers[i]._enterTransition;\n                        if (enterTransition) {\n                            this._isPlaying = true;\n                            if (enterTransition.check(0, this.parameters, true)) {\n                                this.play(null, i, defaultClip.cycleOffset);\n                            } else {\n                                this._checkEnterIndex.push(i);\n                            }\n                        } else {\n                            this.play(null, i, defaultClip.cycleOffset);\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * 默认状态机\n     * @param layerIndex \n     * @returns \n     */\n    getDefaultState(layerIndex = 0) {\n        var controllerLayer = this._controllerLayers[layerIndex];\n        return controllerLayer.defaultState;\n    }\n\n    /**\n     * 设置参数Trigger值\n     * @param name 名字\n     */\n    setParamsTrigger(name: string) {\n        this._parameters[name] = { name: name, type: AniParmType.Trigger, value: true };\n    }\n\n    /**\n     * 设置参数Number值\n     * @param name 名字\n     * @param value 值\n     */\n    setParamsNumber(name: string, value: number) {\n        this._parameters[name] = { name: name, type: AniParmType.Float, value: value };\n    }\n\n    /**\n     * 设置参数Bool值\n     * @param name 名字\n     * @param value 值\n     */\n    setParamsBool(name: string, value: boolean) {\n        this._parameters[name] = { name: name, type: AniParmType.Float, value: value };\n    }\n\n    /**\n     * 得到参数值\n     * @param name 名字\n     * @returns \n     */\n    getParamsvalue(name: number) {\n        let parm = this._parameters[name];\n        if (parm) {\n            return parm.value;\n        }\n        return null;\n    }\n\n    /**\n     * @internal\n     */\n    onDestroy() {\n        for (var i = 0, n = this._controllerLayers.length; i < n; i++)\n            this._controllerLayers[i].destroy();\n        this._controllerLayers.length = 0;\n        this._isPlaying = false;\n        this._parameters = null;\n    }\n}","import { AnimatorStateScript } from \"../d3/animation/AnimatorStateScript\";\nimport { EventDispatcher } from \"../events/EventDispatcher\";\nimport { IClone } from \"../utils/IClone\";\nimport { Animation2DParm } from \"./Animation2DParm\";\nimport { AnimationClip2D } from \"./AnimationClip2D\";\nimport { Animator2D } from \"./Animator2D\";\nimport { AnimatorTransition2D } from \"./AnimatorTransition2D\";\n\n/**\n * <code>Animator</code> 类用于创建动画组件。\n */\nexport class AnimatorState2D extends EventDispatcher implements IClone {\n    /**@internal */\n    static EVENT_OnStateEnter = \"OnStartEnter\";\n\n    /**@internal */\n    static EVENT_OnStateUpdate = \"OnStateUpdate\";\n\n    /**@internal */\n    static EVENT_OnStateExit = \"OnStateExit\";\n\n    /**@internal */\n    static EVENT_OnStateLoop = 'OnStateLoop';\n\n    /** @internal */\n    private _referenceCount = 0;\n\n    /** @internal */\n    _clip: AnimationClip2D | null = null;\n\n    /**@internal */\n    _currentFrameIndices: Int16Array | null = null;\n\n    /**play on awake start offset*/\n    cycleOffset: number = 0;\n\n    /**\n     * 名称\n     */\n    name: string;\n\n    /**\n     * 动画播放速度\n     */\n    speed = 1.0;\n\n    /**\n     * 动作播放起始时间。\n     */\n    clipStart = 0.0;\n\n    /**\n     * 动作播放结束时间。\n     */\n    clipEnd = 1.0;\n\n    /**\n     *  动画循环次数，-1或者小于-1为使用clip的循环状态，1为播放一次，2为播放2次，0为无限循环\n     */\n    loop = -1;\n\n    /**\n     * 是否为一次正播放，一次倒播放模式 \n     */\n    yoyo = false;\n\n    /**@internal 过渡列表*/\n    transitions: AnimatorTransition2D[] = [];\n\n    /**@internal 优先过渡列表only play this transition */\n    soloTransitions: AnimatorTransition2D[] = [];\n\n    /**@internal */\n    _scripts: AnimatorStateScript[] | null = null;\n\n    /**@internal */\n    _realtimeDatas: Array<number | string | boolean> = [];\n\n    /**\n     * 动作。\n     */\n    get clip(): AnimationClip2D | null {\n        return this._clip;\n    }\n\n    set clip(value: AnimationClip2D | null) {\n        if (this._clip != value) {\n            if (this._clip)\n                (this._referenceCount > 0) && (this._clip._removeReference(this._referenceCount));\n            if (value) {\n                var clipNodes = value._nodes!;\n                var count = clipNodes.count;\n                this._currentFrameIndices = new Int16Array(count);\n                this._resetFrameIndices();\n                (this._referenceCount > 0) && (value._addReference(this._referenceCount));\n                this._realtimeDatas.length = count;\n            }\n            this._clip = value;\n        }\n    }\n\n    /**\n     * @internal\n     */\n    _eventStateUpdate(value: number) {\n        this.event(AnimatorState2D.EVENT_OnStateUpdate, value);\n        if (this._scripts) {\n            for (var i = 0, n = this._scripts.length; i < n; i++)\n                this._scripts[i].onStateUpdate(value);\n        }\n    }\n\n    /**\n     * @internal\n     */\n    _eventStart(animator: Animator2D, layerIndex: number) {\n        this.event(AnimatorState2D.EVENT_OnStateEnter);\n        if (this._scripts) {\n            for (var i: number = 0, n: number = this._scripts.length; i < n; i++) {\n                this._scripts[i].setPlayScriptInfo(animator, layerIndex, this);\n                this._scripts[i].onStateEnter();\n            }\n        }\n    }\n\n    /**\n     * @internal\n     */\n    _eventExit() {\n        this.event(AnimatorState2D.EVENT_OnStateExit);\n        if (this._scripts) {\n            for (let i = 0, n = this._scripts.length; i < n; i++) {\n                this._scripts[i].onStateExit();\n            }\n        }\n    }\n    /**\n     * @internal\n     */\n    _eventLoop() {\n        this.event(AnimatorState2D.EVENT_OnStateLoop);\n        if (this._scripts) {\n            for (let i = 0, n = this._scripts.length; i < n; i++) {\n                if (this._scripts[i].onStateLoop)\n                    this._scripts[i].onStateLoop();\n            }\n        }\n    }\n\n    /**\n     * 派发过渡事件\n     * @internal\n     * @param normalizeTime \n     * @param paramsMap \n     */\n    _eventtransition(normalizeTime: number, paramsMap: Record<string, Animation2DParm>, isReplay: boolean): AnimatorTransition2D {\n        let soloNums = this.soloTransitions.length;\n        if (soloNums > 0) {\n            for (var i = 0; i < soloNums; i++) {\n                if (this.soloTransitions[i].check(normalizeTime, paramsMap, isReplay))\n                    return this.soloTransitions[i];\n            }\n            return null;\n        }\n        let transNums = this.transitions.length;\n        for (var i = 0; i < transNums; i++) {\n            if (this.transitions[i].check(normalizeTime, paramsMap, isReplay))\n                return this.transitions[i];\n        }\n        return null;\n    }\n\n    /**\n     * @internal\n     */\n    _resetFrameIndices(): void {\n        for (var i = 0, n = this._currentFrameIndices!.length; i < n; i++)\n            this._currentFrameIndices![i] = -1;\n    }\n\n    /**\n     * @internal\n     * @returns \n     */\n    _getReferenceCount(): number {\n        return this._referenceCount;\n    }\n\n    /**\n     * @internal\n     * @param count \n     */\n    _addReference(count: number): void {\n        (this._clip) && (this._clip._addReference(count));\n        this._referenceCount += count;\n    }\n\n    /**\n     * @internal\n     * @param count \n     */\n    _removeReference(count: number): void {\n        (this._clip) && (this._clip._removeReference(count));\n        this._referenceCount -= count;\n    }\n\n    /**\n     * @internal\n     */\n    _clearReference(): void {\n        this._removeReference(-this._referenceCount);\n    }\n\n    /**\n     * 添加脚本。\n     * @param\ttype  组件类型。\n     * @return 脚本。\n     */\n    addScript(type: typeof AnimatorStateScript): AnimatorStateScript {\n        var script: AnimatorStateScript = new type();\n        this._scripts = this._scripts || [];\n        this._scripts.push(script);\n        return script;\n    }\n\n    /**\n     * 获取脚本。\n     * @param\ttype  组件类型。\n     * @return 脚本。\n     */\n    getScript(type: typeof AnimatorStateScript): AnimatorStateScript | null {\n        if (this._scripts) {\n            for (var i: number = 0, n: number = this._scripts.length; i < n; i++) {\n                var script: AnimatorStateScript = this._scripts[i];\n                if (script instanceof type)\n                    return script;\n            }\n        }\n        return null;\n    }\n\n    /**\n     * 获取脚本集合。\n     * @param\ttype  组件类型。\n     * @return 脚本集合。\n     */\n    getScripts(type: typeof AnimatorStateScript): AnimatorStateScript[] | null {\n        var coms: AnimatorStateScript[] | null = null;\n        if (this._scripts) {\n            for (var i: number = 0, n: number = this._scripts.length; i < n; i++) {\n                var script: AnimatorStateScript = this._scripts[i];\n                if (script instanceof type) {\n                    coms = coms || [];\n                    coms.push(script);\n                }\n            }\n        }\n        return coms;\n    }\n\n    /**\n     * 克隆\n     * @returns \n     */\n    clone() {\n        var dest: AnimatorState2D = new AnimatorState2D();\n        this.cloneTo(dest);\n        return dest;\n    }\n\n    /**\n     * 拷贝到目标\n     * @param destObject 目标节点\n     */\n    cloneTo(destObject: any): void {\n        var dest: AnimatorState2D = <AnimatorState2D>destObject;\n        dest.name = this.name;\n        dest.speed = this.speed;\n        dest.clip = this._clip;\n    }\n\n    /**\n     * 删除\n     */\n    destroy() {\n        this._clip = null;\n        this._currentFrameIndices = null;\n        this._scripts = null;\n        //this.nexts = null;\n        this._realtimeDatas.length = 0;\n    }\n\n}","import { Keyframe2D } from \"./KeyFrame2D\";\n\nexport class KeyframeNode2D {\n    _ownerPath: string[] = [];\n    _propertys: string[] = [];\n    fullPath: string;\n    nodePath: string;\n    _indexInList: number;\n\n\n\n    _keyFrames: Keyframe2D[] = [];\n    /**\n    * 帧个数。\n    */\n    get keyFramesCount(): number {\n        return this._keyFrames.length;\n    }\n    _setOwnerPathCount(value: number) {\n        this._ownerPath.length = value;\n    }\n    _setOwnerPathByIndex(index: number, value: string) {\n        this._ownerPath[index] = value;\n    }\n    _setPropertyCount(value: number) {\n        this._propertys.length = value;\n    }\n    _setPropertyByIndex(index: number, value: string) {\n        this._propertys[index] = value;\n    }\n    _setKeyframeCount(value: number) {\n        this._keyFrames.length = value;\n    }\n\n    _joinOwnerPath(sep: string): string {\n        return this._ownerPath.join(sep);\n    }\n    _joinProperty(sep: string): string {\n        return this._propertys.join(sep);\n    }\n\n    /**\n    * 通过索引获取帧。\n    * @param index 索引。\n    */\n    getKeyframeByIndex(index: number): Keyframe2D {\n        return this._keyFrames[index];\n    }\n    /**\n    * 精灵路径个数。\n    */\n    get ownerPathCount(): number {\n        return this._ownerPath.length;\n    }\n    /**\n     * 属性路径个数。\n     */\n    get propertyCount(): number {\n        return this._propertys.length;\n    }\n\n    /**\n     * 通过索引获取精灵路径。\n     * @param index 索引。\n     */\n    getOwnerPathByIndex(index: number): string {\n        return this._ownerPath[index];\n    }\n    /**\n     * 通过索引获取属性路径。\n     * @param index 索引。\n     */\n    getPropertyByIndex(index: number): string {\n        return this._propertys[index];\n    }\n\n\n}","import { IClone } from \"../utils/IClone\";\n\nexport interface TypeAniKey {\n    /**第几帧 */\n    f: number,\n    val: number | string | boolean,\n    /**目前用于2D动画，用于记录动画补间的类型，比如(Linear|Quad_EaseIn)... */\n    tweenType?: string,\n    /**扩展，如果有一些其它数据需要加入到关键帧中可以写在这里 */\n    extend?: any,\n    /**tween的信息 */\n    tweenInfo?: TypeTweenInfo,\n}\n\nexport interface TypeTweenInfo {\n    outTangent?: number,\n    outWeight?: number,\n    inTangent?: number,\n    inWeight?: number,\n    inWeightLock?: boolean,\n    outWeightLock?: boolean,\n    broken?: boolean,\n}\n\nexport class Keyframe2D implements IClone {\n    static defaultWeight = 0.33333;\n    /**时间。*/\n    time: number;\n    /**帧里面的具体数据 */\n    data: TypeAniKey;\n\n\n\n    clone() {\n        var dest = new Keyframe2D();\n        this.cloneTo(dest);\n        return dest;\n    }\n    cloneTo(destObject: any): void {\n        var destKeyFrame: Keyframe2D = (<Keyframe2D>destObject);\n        destKeyFrame.time = this.time;\n    }\n\n}","/**\n * <code>Animation2DEvent</code> 类用于实现动画事件。\n */\nexport class Animation2DEvent {\n    /** 事件触发时间。*/\n    time: number;\n    /** 事件触发名称。*/\n    eventName: string;\n    /** 事件触发参数。*/\n    params: any[];\n\n    /**\n     * 创建一个 <code>Animation2DEvent</code> 实例。\n     */\n    constructor() {\n    }\n\n}\n","import { AnimationClip2D } from \"./AnimationClip2D\";\nimport { KeyframeNode2D } from \"./KeyframeNode2D\";\nimport { Keyframe2D } from \"./KeyFrame2D\";\nimport { Animation2DEvent } from \"./Animation2DEvent\";\nimport { Byte } from \"../utils/Byte\";\n\n/**\n * <code>AnimationClip2DParse01</code>\n * AnimationClip资源解析\n */\nexport class AnimationClip2DParse01 {\n    \n    /**@internal */\n    private static _clip: AnimationClip2D | null;\n    /**@internal */\n    private static _reader: Byte | null;\n    /**@internal */\n    private static _version: string | null;\n    /**@internal */\n    private static _strings: string[] = [];\n    /**@internal */\n    private static _DATA = { offset: 0, size: 0 };\n    /**@internal */\n    private static _BLOCK: { count: number, blockStarts?: number[], blockLengths?: number[] } = { count: 0 };\n\n    /**\n     * @internal\n     */\n    private static READ_DATA() {\n        this._DATA.offset = this._reader!.getUint32();\n        this._DATA.size = this._reader!.getUint32();\n    }\n\n    /**\n     * @internal\n     */\n    private static READ_BLOCK() {\n        var count = this._BLOCK.count = this._reader!.getUint16();\n        var blockStarts: number[] = this._BLOCK.blockStarts = [];\n        var blockLengths: number[] = this._BLOCK.blockLengths = [];\n        for (var i = 0; i < count; i++) {\n            blockStarts.push(this._reader!.getUint32());\n            blockLengths.push(this._reader!.getUint32());\n        }\n    }\n    \n    /**\n     * @internal\n     */\n    private static READ_STRINGS() {\n        var offset = this._reader!.getUint32();\n        var count = this._reader!.getUint16();\n        var prePos = this._reader!.pos;\n        this._reader!.pos = offset + this._DATA.offset;\n\n        for (var i = 0; i < count; i++)\n            this._strings[i] = this._reader!.readUTFString();\n        this._reader!.pos = prePos;\n    }\n\n    /**\n     * @internal\n     * @param clip \n     * @param reader \n     * @param version \n     */\n    static parse(clip: AnimationClip2D, reader: Byte, version: string) {\n        this._clip = clip;\n        this._reader = reader;\n        this._version = version;\n        this.READ_DATA();\n        this.READ_BLOCK();\n        this.READ_STRINGS();\n\n        for (var i = 0, n = this._BLOCK.count; i < n; i++) {\n            var index = reader.getUint16();\n            var blockName = this._strings[index];\n            var fn: () => void = (this as any)[\"READ_\" + blockName];\n            if (!fn) {\n                throw new Error(\"model file err,no this function:\" + index + \" \" + blockName);\n            }\n            else\n                fn.call(this);\n        }\n\n        this._version = null;\n        this._reader = null;\n        this._clip = null;\n        this._strings.length = 0;\n\n    }\n\n    /**\n     * @internal\n     * @param second \n     * @param fps \n     * @returns \n     */\n    private static timeToFrame(second: number, fps: number): number {\n        return Math.round(second * fps);\n    }\n\n    /**\n     * @internal\n     */\n    static READ_ANIMATIONS2D(): void {\n        var i: number, j: number;\n\n        var reader = this._reader!;\n        var clip = this._clip!;\n        var node: KeyframeNode2D;\n\n        var numList: number[] = [];\n        var numCount = reader.getUint16();\n        numList.length = numCount;\n        for (i = 0; i < numCount; i++) {\n            numList[i] = reader.getFloat32();\n        }\n\n        var clipDur = clip._duration = numList[reader.getInt16()];\n        clip.islooping = !!reader.getByte();\n        clip._frameRate = reader.getInt16();\n        var nodeCount = reader.getInt16();\n\n        var nodes = clip._nodes!;\n        nodes.count = nodeCount;\n        var nodesMap: Record<string, KeyframeNode2D[]> = clip._nodesMap = {};\n        var nodesDic: Record<string, KeyframeNode2D> = clip._nodesDic = {};\n\n        for (i = 0; i < nodeCount; i++) {\n            node = new KeyframeNode2D();\n            nodes.setNodeByIndex(i, node);\n            node._indexInList = i;\n\n            var pathLength = reader.getUint16();\n            node._setOwnerPathCount(pathLength);\n\n            for (j = 0; j < pathLength; j++) {\n                node._setOwnerPathByIndex(j, this._strings[reader.getUint16()]);\n            }\n            var nodePath = node._joinOwnerPath(\"/\");\n            var mapArray = nodesMap[nodePath];\n            (mapArray) || (nodesMap[nodePath] = mapArray = []);\n            mapArray.push(node);\n\n\n            var propertyLength = reader.getUint16();\n            node._setPropertyCount(propertyLength);\n            for (j = 0; j < propertyLength; j++) {\n                node._setPropertyByIndex(j, this._strings[reader.getUint16()]);\n            }\n            var fullPath = nodePath + \".\" + node._joinProperty(\".\");\n            nodesDic[fullPath] = node;\n            node.fullPath = fullPath;\n            node.nodePath = nodePath;\n\n            var keyframeCount = reader.getUint16();\n            //node._setKeyframeCount(keyframeCount);\n            for (j = 0; j < keyframeCount; j++) {\n                var k = new Keyframe2D();\n                k.time = numList[reader.getUint16()];\n                k.data = { f: this.timeToFrame(k.time, clip._frameRate), val: 0 };\n\n                if (1 == reader.getByte()) {\n                    k.data.tweenType = this._strings[reader.getUint16()];\n                }\n\n                if (1 == reader.getByte()) {\n                    k.data.tweenInfo = {};\n\n                    k.data.tweenInfo.inTangent = numList[reader.getUint16()];\n                    k.data.tweenInfo.outTangent = numList[reader.getUint16()];\n\n                    // if (Infinity == Math.abs(k.data.tweenInfo.inTangent)) {\n                    //     k.data.tweenInfo.inTangent = Number.MAX_VALUE;\n                    //     if (0 > k.data.tweenInfo.inTangent) {\n                    //         k.data.tweenInfo.inTangent *= -1;\n                    //     }\n                    // }\n                    // if (Infinity == Math.abs(k.data.tweenInfo.outTangent)) {\n                    //     k.data.tweenInfo.outTangent = Number.MAX_VALUE;\n                    //     if (0 > k.data.tweenInfo.outTangent) {\n                    //         k.data.tweenInfo.outTangent *= -1;\n                    //     }\n                    // }\n\n\n                    if (1 == reader.getByte()) {\n                        k.data.tweenInfo.inWeight = numList[reader.getUint16()];\n                    }\n\n                    if (1 == reader.getByte()) {\n                        k.data.tweenInfo.outWeight = numList[reader.getUint16()];\n                    }\n                }\n                var num = reader.getByte();\n                if (0 == num) {\n                    k.data.val = numList[reader.getUint16()];\n                } else if (1 == num) {\n                    k.data.val = this._strings[reader.getUint16()];\n                } else if (2 == num) {\n                    k.data.val = !!reader.getByte();\n                }\n\n                if (1 == reader.getByte()) {\n                    try {\n                        k.data.extend = JSON.parse(this._strings[reader.getUint16()])\n                    } catch (err) { }\n                }\n                node._keyFrames.push(k);\n            }\n        }\n        var eventCount = reader.getUint16();\n        for (i = 0; i < eventCount; i++) {\n            var event = new Animation2DEvent();\n            //event.time = Math.min(clipDur, numList[reader.getUint16()]);\n            event.time = numList[reader.getUint16()];\n            event.eventName = this._strings[reader.getUint16()];\n            var params: Array<number | string | boolean> = [];\n            var paramCount: number = reader.getUint16();\n            (paramCount > 0) && (event.params = params = []);\n\n            for (j = 0; j < paramCount; j++) {\n                var eventType: number = reader.getByte();\n                switch (eventType) {\n                    case 0:\n                        params.push(!!reader.getByte());\n                        break;\n                    case 1:\n                        params.push(reader.getInt32());\n                        break;\n                    case 2:\n                        params.push(numList[reader.getUint16()]);\n                        break;\n                    case 3:\n                        params.push(this._strings[reader.getUint16()]);\n                        break;\n                    default:\n                        throw new Error(\"unknown type.\");\n                }\n            }\n            clip.addEvent(event);\n        }\n\n    }\n}","import { KeyframeNode2D } from \"./KeyframeNode2D\";\n\nexport class KeyframeNodeList2D {\n    private _nodes: KeyframeNode2D[] = [];\n    /**\n    *\t节点个数。\n    */\n    get count(): number {\n        return this._nodes.length;\n    }\n    set count(value: number) {\n        this._nodes.length = value;\n    }\n    /**\n     * 通过索引获取节点。\n     * @param\tindex 索引。\n     * @return 节点。\n     */\n    getNodeByIndex(index: number): KeyframeNode2D {\n        return this._nodes[index];\n    }\n\n    /**\n     * 通过索引设置节点。\n     * @param\tindex 索引。\n     * @param 节点。\n     */\n    setNodeByIndex(index: number, node: KeyframeNode2D): void {\n        this._nodes[index] = node;\n    }\n}","import { AnimationClip2DParse01 } from \"./AnimationClip2DParser01\";\nimport { KeyframeNode2D } from \"./KeyframeNode2D\";\nimport { KeyframeNodeList2D } from \"./KeyframeNodeList2D\";\nimport { Keyframe2D } from \"./KeyFrame2D\";\nimport { Animation2DEvent } from \"./Animation2DEvent\";\nimport { Resource } from \"../resource/Resource\";\nimport { Byte } from \"../utils/Byte\";\n\nexport class AnimationClip2D extends Resource {\n\n    /**\n     * @param data \n     * @returns \n     */\n    static _parse(data: ArrayBuffer): AnimationClip2D {\n        var clip = new AnimationClip2D();\n        var reader = new Byte(data);\n        var version = reader.readUTFString();\n        switch (version) {\n            case \"LAYAANIMATION2D:01\":\n                AnimationClip2DParse01.parse(clip, reader, version);\n                break;\n            default:\n                throw \"unknown animationClip version.\";\n        }\n        return clip;\n    }\n\n    /**\n     * 动画补帧函数\n     */\n    static tween = {\n        Linear: function (t: number, b: number, c: number, d: number): number { return c * t / d + b; },\n        Quad_EaseIn: function (t: number, b: number, c: number, d: number): number {\n            return c * (t /= d) * t + b;\n        },\n        Quad_EaseOut: function (t: number, b: number, c: number, d: number): number {\n            return -c * (t /= d) * (t - 2) + b;\n        },\n        Quad_EaseInOut: function (t: number, b: number, c: number, d: number): number {\n            if ((t /= d / 2) < 1) return c / 2 * t * t + b;\n            return -c / 2 * ((--t) * (t - 2) - 1) + b;\n        },\n\n        Cubic_EaseIn: function (t: number, b: number, c: number, d: number): number {\n            return c * (t /= d) * t * t + b;\n        },\n        Cubic_EaseOut: function (t: number, b: number, c: number, d: number): number {\n            return c * ((t = t / d - 1) * t * t + 1) + b;\n        },\n        Cubic_EaseInOut: function (t: number, b: number, c: number, d: number): number {\n            if ((t /= d / 2) < 1) return c / 2 * t * t * t + b;\n            return c / 2 * ((t -= 2) * t * t + 2) + b;\n        },\n\n        Quart_EaseIn: function (t: number, b: number, c: number, d: number): number {\n            return c * (t /= d) * t * t * t + b;\n        },\n        Quart_EaseOut: function (t: number, b: number, c: number, d: number): number {\n            return -c * ((t = t / d - 1) * t * t * t - 1) + b;\n        },\n        Quart_EaseInOut: function (t: number, b: number, c: number, d: number): number {\n            if ((t /= d / 2) < 1) return c / 2 * t * t * t * t + b;\n            return -c / 2 * ((t -= 2) * t * t * t - 2) + b;\n        },\n\n        Quint_EaseIn: function (t: number, b: number, c: number, d: number): number {\n            return c * (t /= d) * t * t * t * t + b;\n        },\n        Quint_EaseOut: function (t: number, b: number, c: number, d: number): number {\n            return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\n        },\n        Quint_EaseInOut: function (t: number, b: number, c: number, d: number): number {\n            if ((t /= d / 2) < 1) return c / 2 * t * t * t * t * t + b;\n            return c / 2 * ((t -= 2) * t * t * t * t + 2) + b;\n        },\n\n        Sine_EaseIn: function (t: number, b: number, c: number, d: number): number {\n            return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;\n        },\n        Sine_EaseOut: function (t: number, b: number, c: number, d: number): number {\n            return c * Math.sin(t / d * (Math.PI / 2)) + b;\n        },\n        Sine_EaseInOut: function (t: number, b: number, c: number, d: number): number {\n            return -c / 2 * (Math.cos(Math.PI * t / d) - 1) + b;\n        },\n\n        Expo_EaseIn: function (t: number, b: number, c: number, d: number): number {\n            return (t == 0) ? b : c * Math.pow(2, 10 * (t / d - 1)) + b;\n        },\n        Expo_EaseOut: function (t: number, b: number, c: number, d: number): number {\n            return (t == d) ? b + c : c * (-Math.pow(2, -10 * t / d) + 1) + b;\n        },\n        Expo_EaseInOut: function (t: number, b: number, c: number, d: number): number {\n            if (t == 0) return b;\n            if (t == d) return b + c;\n            if ((t /= d / 2) < 1) return c / 2 * Math.pow(2, 10 * (t - 1)) + b;\n            return c / 2 * (-Math.pow(2, -10 * --t) + 2) + b;\n        },\n\n        Circ_EaseIn: function (t: number, b: number, c: number, d: number): number {\n            return -c * (Math.sqrt(1 - (t /= d) * t) - 1) + b;\n        },\n        Circ_EaseOut: function (t: number, b: number, c: number, d: number): number {\n            return c * Math.sqrt(1 - (t = t / d - 1) * t) + b;\n        },\n        Circ_EaseInOut: function (t: number, b: number, c: number, d: number): number {\n            if ((t /= d / 2) < 1) return -c / 2 * (Math.sqrt(1 - t * t) - 1) + b;\n            return c / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1) + b;\n        },\n\n        Elastic_EaseIn: function (t: number, b: number, c: number, d: number, a: number, p: number): number {\n            if (t == 0) return b; if ((t /= d) == 1) return b + c; if (!p) p = d * .3;\n            if (!a || a < Math.abs(c)) { a = c; var s = p / 4; }\n            else var s = p / (2 * Math.PI) * Math.asin(c / a);\n            return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * d - s) * (2 * Math.PI) / p)) + b;\n        },\n        Elastic_EaseOut: function (t: number, b: number, c: number, d: number, a: number, p: number): number {\n            if (t == 0) return b; if ((t /= d) == 1) return b + c; if (!p) p = d * .3;\n            if (!a || a < Math.abs(c)) { a = c; var s = p / 4; }\n            else var s = p / (2 * Math.PI) * Math.asin(c / a);\n            return (a * Math.pow(2, -10 * t) * Math.sin((t * d - s) * (2 * Math.PI) / p) + c + b);\n        },\n        Elastic_EaseInOut: function (t: number, b: number, c: number, d: number, a: number, p: number): number {\n            if (t == 0) return b; if ((t /= d / 2) == 2) return b + c; if (!p) p = d * (.3 * 1.5);\n            if (!a || a < Math.abs(c)) { a = c; var s = p / 4; }\n            else var s = p / (2 * Math.PI) * Math.asin(c / a);\n            if (t < 1) return -.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * d - s) * (2 * Math.PI) / p)) + b;\n            return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t * d - s) * (2 * Math.PI) / p) * .5 + c + b;\n        },\n\n        Back_EaseIn: function (t: number, b: number, c: number, d: number, s: number = undefined): number {\n            if (s == undefined) s = 1.70158;\n            return c * (t /= d) * t * ((s + 1) * t - s) + b;\n        },\n        Back_EaseOut: function (t: number, b: number, c: number, d: number, s: number = undefined): number {\n            if (s == undefined) s = 1.70158;\n            return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\n        },\n        Back_EaseInOut: function (t: number, b: number, c: number, d: number, s: number = undefined): number {\n            if (s == undefined) s = 1.70158;\n            if ((t /= d / 2) < 1) return c / 2 * (t * t * (((s *= (1.525)) + 1) * t - s)) + b;\n            return c / 2 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2) + b;\n        },\n\n        Bounce_EaseIn: function (t: number, b: number, c: number, d: number): number {\n            return c - AnimationClip2D.tween.Bounce_EaseOut(d - t, 0, c, d) + b;\n        },\n        Bounce_EaseOut: function (t: number, b: number, c: number, d: number): number {\n            if ((t /= d) < (1 / 2.75)) {\n                return c * (7.5625 * t * t) + b;\n            } else if (t < (2 / 2.75)) {\n                return c * (7.5625 * (t -= (1.5 / 2.75)) * t + .75) + b;\n            } else if (t < (2.5 / 2.75)) {\n                return c * (7.5625 * (t -= (2.25 / 2.75)) * t + .9375) + b;\n            } else {\n                return c * (7.5625 * (t -= (2.625 / 2.75)) * t + .984375) + b;\n            }\n        },\n        Bounce_EaseInOut: function (t: number, b: number, c: number, d: number): number {\n            if (t < d / 2) return AnimationClip2D.tween.Bounce_EaseIn(t * 2, 0, c, d) * .5 + b;\n            else return AnimationClip2D.tween.Bounce_EaseOut(t * 2 - d, 0, c, d) * .5 + c * .5 + b;\n        },\n\n        hermiteInterpolate: function (outTangent: number, inTangent: number, startValue: number, endValue: number, t: number, dur: number): number {\n            if (Math.abs(outTangent) == Infinity || Math.abs(inTangent) == Infinity) {\n                if (0 > outTangent || 0 < inTangent) return startValue;\n                return startValue;\n            }\n            var t2 = t * t;\n            var t3 = t2 * t;\n            var a = 2.0 * t3 - 3.0 * t2 + 1.0;\n            var b = t3 - 2.0 * t2 + t;\n            var c = t3 - t2;\n            var d = -2.0 * t3 + 3.0 * t2;\n            return a * startValue + b * outTangent * dur + c * inTangent * dur + d * endValue;\n        }\n    }\n\n    /**\n     * @internal\n     */\n    _frameRate: number;\n\n    /**\n     * @internal\n     */\n    _duration: number;\n\n    /**\n     * @internal\n     */\n    _animationEvents: Animation2DEvent[];\n\n    /**\n     * @internal\n     */\n    _nodesDic: Record<string, KeyframeNode2D>;\n\n    /**\n     * @internal\n     */\n    _nodesMap: Record<string, KeyframeNode2D[]>;\n\n    /**\n     * @internal\n     */\n    _nodes: KeyframeNodeList2D | null = new KeyframeNodeList2D();\n\n    /**\n     * 是否循环\n     */\n    islooping: boolean;\n\n    /**\n     * 实例化一个2D动画clip类\n     */\n    constructor() {\n        super();\n        this._animationEvents = [];\n    }\n\n    /**\n     * 动画时长\n     * @returns \n     */\n    duration() {\n        return this._duration;\n    }\n\n\n\n    /**\n     * @internal\n     * @param playCurTime \n     * @param realTimeCurrentFrameIndexes \n     * @param addtive \n     * @param frontPlay \n     * @param outDatas \n     */\n    _evaluateClipDatasRealTime(playCurTime: number, realTimeCurrentFrameIndexes: Int16Array, addtive: boolean, frontPlay: boolean, outDatas: Array<number | string | boolean>) {\n        var nodes = this._nodes;\n        for (var i = 0, n = nodes.count; i < n; i++) {\n            var node = nodes.getNodeByIndex(i);\n            var nextFrameIndex;\n            var keyFrames = node._keyFrames;\n            var keyFramesCount = keyFrames.length;\n            if (0 == keyFramesCount) continue;\n            var frameIndex = realTimeCurrentFrameIndexes[i];\n            if (frontPlay) {\n                if ((-1 != frameIndex) && (playCurTime < keyFrames[frameIndex].time)) {//重置正向循环\n                    frameIndex = -1;\n                    realTimeCurrentFrameIndexes[i] = frameIndex;\n                }\n\n                nextFrameIndex = frameIndex + 1;\n                while (nextFrameIndex < keyFramesCount) {\n                    if (keyFrames[nextFrameIndex].time > playCurTime)\n                        break;\n                    frameIndex++;\n                    nextFrameIndex++;\n                    realTimeCurrentFrameIndexes[i] = frameIndex;\n                }\n            } else {\n                nextFrameIndex = frameIndex + 1;\n                if ((nextFrameIndex != keyFramesCount) && (playCurTime > keyFrames[nextFrameIndex].time)) {//重置逆向循环\n                    frameIndex = keyFramesCount - 1;\n                    realTimeCurrentFrameIndexes[i] = frameIndex;\n                }\n\n                nextFrameIndex = frameIndex + 1;\n                while (frameIndex > -1) {\n                    if (keyFrames[frameIndex].time < playCurTime)\n                        break;\n                    frameIndex--;\n                    nextFrameIndex--;\n                    realTimeCurrentFrameIndexes[i] = frameIndex;\n                }\n\n            }\n            var isEnd = nextFrameIndex == keyFramesCount;\n\n            if (-1 != frameIndex) {\n                var frame = keyFrames[frameIndex];\n                if (isEnd) {//如果nextFarme为空，不修改数据，保持上一帧\n                    outDatas[i] = frame.data.val;\n                } else {\n                    var nextFarme = keyFrames[nextFrameIndex];\n                    var d = nextFarme.time - frame.time;\n                    var t;\n                    if (d !== 0)\n                        t = (playCurTime - frame.time) / d;\n                    else\n                        t = 0;\n\n                    outDatas[i] = this._getTweenVal(frame, nextFarme, t, d);\n                }\n            } else {\n                outDatas[i] = keyFrames[0].data.val;\n            }\n\n            if (addtive && \"number\" == typeof keyFrames[0].data.val) {\n                outDatas[i] = <number>outDatas[i] - keyFrames[0].data.val;\n            }\n\n        }\n    }\n\n    /**\n     * @internal\n     * @param frame \n     * @param nextFrame \n     * @param t \n     * @param dur \n     * @returns \n     */\n    private _getTweenVal(frame: Keyframe2D, nextFrame: Keyframe2D, t: number, dur: number) {\n        var start = frame.data;\n        var end = nextFrame.data;\n\n        if (\"number\" != typeof start.val || \"number\" != typeof end.val) {\n            return start.val;\n        }\n        var tweenFun = (AnimationClip2D.tween as any)[start.tweenType];\n        var poval = start.val as number;\n        var oval = end.val as number;\n\n        //var t = (x - s.cx) / (e.cx - s.cx);\n        if (null != tweenFun) {\n            return tweenFun(t, poval, oval - poval, 1);\n        }\n\n        var outTangent = 0;\n        var inTangent = 0;\n\n        var outWeight = NaN;\n        var inWeight = NaN;\n\n        if (null != start.tweenInfo) {\n            outTangent = start.tweenInfo.outTangent;\n            outWeight = start.tweenInfo.outWeight;\n        }\n        if (null != end.tweenInfo) {\n            inTangent = end.tweenInfo.inTangent;\n            inWeight = end.tweenInfo.inWeight;\n        }\n        if (isNaN(outWeight) || 0 >= outWeight) outWeight = Keyframe2D.defaultWeight;\n        if (isNaN(inWeight) || 0 >= inWeight) inWeight = Keyframe2D.defaultWeight;\n        if (isNaN(outTangent)) outTangent = 0;\n        if (isNaN(inTangent)) inTangent = 0;\n\n        if (Math.abs(outTangent) == Number.MAX_VALUE) {\n            if (0 > outTangent) {\n                outTangent = -Infinity;\n            } else {\n                outTangent = Infinity;\n            }\n        }\n\n        if (Math.abs(inTangent) == Number.MAX_VALUE) {\n            if (0 > inTangent) {\n                inTangent = -Infinity;\n            } else {\n                inTangent = Infinity;\n            }\n        }\n\n        var tnum: number;\n        if ((!start.tweenInfo && !end.tweenInfo) || (Keyframe2D.defaultWeight == inWeight && Keyframe2D.defaultWeight == outWeight)) {\n            //var dur = nextFrameTime - startFrameTime;\n            tnum = AnimationClip2D.tween.hermiteInterpolate(outTangent, inTangent, poval, oval, t, dur);\n        } else {\n            tnum = this.hermiteCurveSplineWeight(poval, frame.time, outWeight, outTangent, oval, nextFrame.time, inWeight, inTangent, t);\n        }\n        return tnum;\n    }\n\n    /**\n     * @internal\n     * @param time \n     * @returns \n     */\n    private _binarySearchEventIndex(time: number): number {\n        var start = 0;\n        var end = this._animationEvents.length - 1;\n        var mid;\n        while (start <= end) {\n            mid = (start + end) >> 1;\n            var midValue = this._animationEvents[mid].time;\n            if (midValue == time)\n                return mid;\n            else if (midValue > time)\n                end = mid - 1;\n            else\n                start = mid + 1;\n        }\n        return start;\n    }\n\n    /**\n     * hermite插值算法\n     * @param frameValue 上一帧值\n     * @param frametime 上一帧事件\n     * @param frameOutWeight 上一帧权重\n     * @param frameOutTangent 上一帧切线\n     * @param nextframeValue 下一帧值\n     * @param nextframetime 下一帧时间\n     * @param nextframeInweight 下一帧权重\n     * @param nextframeIntangent 下一帧切线\n     * @param time 时间\n     * @returns \n     */\n    hermiteCurveSplineWeight(frameValue: number, frametime: number, frameOutWeight: number, frameOutTangent: number, nextframeValue: number, nextframetime: number, nextframeInweight: number, nextframeIntangent: number, time: number) {\n        let Eps = 2.22e-16;\n\n        let x = time;\n        let x1 = frametime;\n        let y1 = frameValue;\n        let wt1 = frameOutWeight;\n        let x2 = nextframetime;\n        let y2 = nextframeValue;\n        let wt2 = nextframeInweight;\n\n        let dx = x2 - x1;\n        let dy = y2 - y1;\n        dy = Math.max(Math.abs(dy), Eps) * (dy < 0 ? -1 : 1);\n\n        let yp1 = frameOutTangent;\n        let yp2 = nextframeIntangent;\n\n        if (!Number.isFinite(yp1) || !Number.isFinite(yp2)) {\n            return frameValue;\n        }\n\n        yp1 = yp1 * dx / dy;\n        yp2 = yp2 * dx / dy;\n\n        let wt2s = 1 - wt2;\n\n        let t = 0.5;\n        let t2 = 0;\n\n        if (Math.abs(wt1 - 0.33333334) < 0.0001 && Math.abs(wt2 - 0.33333334) < 0.0001) {\n            t = x;\n            t2 = 1 - t;\n        }\n        else {\n            while (true) {\n                t2 = (1 - t);\n                let fg = 3 * t2 * t2 * t * wt1 + 3 * t2 * t * t * wt2s + t * t * t - x;\n                if (Math.abs(fg) <= 2.5 * Eps)\n                    break;\n\n                // third order householder method\n                let fpg = 3 * t2 * t2 * wt1 + 6 * t2 * t * (wt2s - wt1) + 3 * t * t * (1 - wt2s);\n                let fppg = 6 * t2 * (wt2s - 2 * wt1) + 6 * t * (1 - 2 * wt2s + wt1);\n                let fpppg = 18 * wt1 - 18 * wt2s + 6;\n\n                t -= (6 * fg * fpg * fpg - 3 * fg * fg * fppg) / (6 * fpg * fpg * fpg - 6 * fg * fpg * fppg + fg * fg * fpppg);\n            }\n        }\n\n        let y = 3 * t2 * t2 * t * wt1 * yp1 + 3 * t2 * t * t * (1 - wt2 * yp2) + t * t * t;\n\n        return y * dy + y1;\n    }\n\n\n    /**\n     * 添加动画事件。\n     * @param event 动画事件\n     */\n    addEvent(event: Animation2DEvent): void {\n        var index = this._binarySearchEventIndex(event.time);\n        this._animationEvents.splice(index, 0, event);\n    }\n\n\n\n}","import { AniParmType } from \"./AnimatorControllerParse\";\n\nexport class Animation2DParm {\n    name: string;\n    type: AniParmType;\n    value: boolean | number;\n}","import { AniStateConditionType, AniStateConditionNumberCompressType } from \"./AnimatorControllerParse\";\n\nexport class AnimatorStateCondition {\n    /**\n     * @internal\n     */\n    static _conditionNameMap: any = {};\n\n    /**\n     * @internal\n     */\n    static _propertyNameCounter: number = 0;\n\n    /**\n     * 通过名称获得唯一ID。\n     * @param name Shader属性名称。\n     * @return 唯一ID。\n     */\n    static conditionNameToID(name: string): number {\n        if (AnimatorStateCondition._conditionNameMap[name] != null) {\n            return AnimatorStateCondition._conditionNameMap[name];\n        } else {\n            var id: number = this._propertyNameCounter++;\n            this._conditionNameMap[name] = id;\n            this._conditionNameMap[id] = name;\n            return id;\n        }\n    }\n\n    /**\n     * 通过ID获得唯一名称。\n     * @param id \n     * @returns \n     */\n    static conditionIDToName(id: number): string {\n        return this._conditionNameMap[id];\n    }\n\n    /**\n     * @internal 状态条件类型\n     */\n    protected _type: AniStateConditionType;\n\n    /**\n     * @internal\n     */\n    private _id: number;\n\n    /**\n     * @intenral\n     */\n    private _name: string;\n\n    /**\n     * 状态机过渡条件\n     */\n    constructor(name: string = null) {\n        if (!name) return;\n        this._id = AnimatorStateCondition.conditionNameToID(name);\n        this._name = name;\n    }\n\n    /**\n     * 唯一ID\n     */\n    get id() {\n        return this._id;\n    }\n\n    /**\n     * 名称\n     */\n    get name() {\n        return this._name;\n    }\n\n    set name(value: string) {\n        this._id = AnimatorStateCondition.conditionNameToID(value);\n        this._name = value\n    }\n\n    /**\n     * 条件类型\n     */\n    get type() {\n        return this._type;\n    }\n\n    /**\n     * 检查状态是否触发\n     * @param value \n     * @returns \n     */\n    checkState(value: number | boolean): boolean {\n        return false;\n    }\n}\n\nexport class AnimatorStateNumberCondition extends AnimatorStateCondition {\n    /**\n     * @internal\n     */\n    private _numberValue: number;\n\n    /**\n     * @internal\n     */\n    private _numberCompareFlag: AniStateConditionNumberCompressType;\n\n    /**\n     * 创建number比较条件类\n     * @param name \n     */\n    constructor(name: string) {\n        super(name);\n        this._numberValue = 0;\n        this._numberCompareFlag = AniStateConditionNumberCompressType.Greater;\n        this._type = AniStateConditionType.Number;\n    }\n\n    /**\n     * number值\n     */\n    get numberValue() {\n        return this._numberValue;\n    }\n\n    set numberValue(value: number) {\n        this._numberValue = value;\n    }\n\n    /**\n     * 判断类型\n     */\n    get compareFlag() {\n        return this._numberCompareFlag;\n    }\n\n    set compareFlag(value: AniStateConditionNumberCompressType) {\n        this._numberCompareFlag = value;\n    }\n\n    /**\n     * 检查状态是否触发\n     * @param value \n     * @returns \n     */\n    checkState(value: number): boolean {\n        if (AniStateConditionNumberCompressType.Greater == this._numberCompareFlag)\n            return value > this._numberValue;\n        else\n            return value < this._numberValue;\n    }\n}\n\nexport class AnimatorStateBoolCondition extends AnimatorStateCondition {\n    /**\n     * @internal\n     */\n    private _compareFlag: boolean;\n\n    /**\n     * 创建bool比较条件类\n     * @param name \n     */\n    constructor(name: string) {\n        super(name);\n        this._compareFlag = true;\n        this._type = AniStateConditionType.Bool;\n    }\n\n    /**\n     * 判断类型 \n     */\n    get compareFlag() {\n        return this._compareFlag;\n    }\n\n    set compareFlag(value: boolean) {\n        this._compareFlag = value;\n    }\n\n    /**\n     * 检查状态是否触发\n     * @param value \n     * @returns \n     */\n    checkState(value: boolean): boolean {\n        return this._compareFlag == value;\n    }\n}\n\nexport class AnimatorStateTriggerCondition extends AnimatorStateCondition {\n    /**\n     * 创建trigger比较条件类\n     * @param name \n     */\n    constructor(name: string) {\n        super(name);\n        this._type = AniStateConditionType.Trigger;\n    }\n\n    /**\n     * 检查状态是否触发,tigger 如果是true,就算条件达成\n     * @param value \n     * @returns \n     */\n    checkState(value: boolean): boolean {\n        return value;\n    }\n}","import { Animation2DParm } from \"./Animation2DParm\";\nimport { AniStateConditionType } from \"./AnimatorControllerParse\";\nimport { AnimatorState2D } from \"./AnimatorState2D\";\nimport { AnimatorStateCondition } from \"./AnimatorStateCondition\";\n\nexport class AnimatorTransition2D {\n    mute: boolean;\n    exitTime: number;//退出时间\n    exitByTime: boolean;//是否设置生效时间\n    transstartoffset: number;//归一化的时间的下一个state播放位置\n    transduration: number;//归一化过度时间 TODO 0-1\n    conditions: AnimatorStateCondition[];//\n    destState: AnimatorState2D;\n    /**\n     * 创建一个新的Animatortransition2D\n     */\n    constructor() {\n        this.conditions = [];\n        this.exitByTime = true;\n        this.exitTime = 1;\n        this.transduration = 0;\n        this.transstartoffset = 0;\n        this.mute = false;\n    }\n\n    /**\n     * 增加一个条件\n     * @param condition \n     */\n     addCondition(condition: AnimatorStateCondition): void {\n        if (this.conditions.indexOf(condition) == -1) {\n            this.conditions.push(condition);\n        }\n    }\n\n    /**\n     * 删除一个条件\n     * @param condition \n     */\n    removeCondition(condition: AnimatorStateCondition): void {\n        let index = this.conditions.indexOf(condition);\n        if (index != -1) {\n            this.conditions.splice(index, 0);\n        }\n    }\n\n    /**\n    * 是否启用过渡\n    * @param normalizeTime \n    * @param paramsMap \n    */\n    check(normalizeTime: number, paramsMap: Record<string, Animation2DParm>, isReplay: boolean): boolean {\n        if (this.mute) {\n            return false;\n        }\n        if (this.exitByTime && (normalizeTime < this.exitTime && !isReplay)) {\n            return false;\n        }\n        if (null == this.conditions || 0 == this.conditions.length) {\n            return true;\n        }\n        for (var i = 0; i < this.conditions.length; i++) {\n            let con = this.conditions[i];\n\n            let out = con.checkState(paramsMap[con.name].value);\n            if (out) {\n                if (con.type == AniStateConditionType.Trigger) {\n                    paramsMap[con.name].value = false;\n                }\n                return true;\n            }\n        }\n        return false;\n    }\n}","import { Resource } from \"../resource/Resource\";\nimport { ClassUtils } from \"../utils/ClassUtils\";\nimport { Animation2DParm } from \"./Animation2DParm\";\nimport { Animator2D } from \"./Animator2D\";\nimport { AnimatorControllerLayer2D } from \"./AnimatorControllerLayer2D\";\nimport { AnimatorControllerParse, AniParmType, TypeAnimatorConditions, TypeAnimatorControllerData, TypeAnimatorParams, TypeAnimatorState, TypeAnimatorTransition } from \"./AnimatorControllerParse\";\nimport { AnimatorState2D } from \"./AnimatorState2D\";\nimport { AnimatorStateCondition, AnimatorStateBoolCondition, AnimatorStateNumberCondition, AnimatorStateTriggerCondition } from \"./AnimatorStateCondition\";\nimport { AnimatorTransition2D } from \"./AnimatorTransition2D\";\n\n/**\n * <code>2D动画控制器<code/>\n */\nexport class AnimatorController2D extends Resource {\n    /**\n     * @internal\n     */\n    data: TypeAnimatorControllerData;\n\n    /**\n     * @internal\n     */\n    clipsID: string[];\n\n    /**\n     * 实例化2D动画控制器\n     * @param data \n     */\n    constructor(data: any) {\n        super();\n        let obj = AnimatorControllerParse.parse(data);\n        this.data = obj.ret;\n        this.clipsID = obj.clipsID;\n    }\n\n    /**\n     * @internal\n     * @returns \n     */\n    private getLayers() {\n        let layers = this.data.controllerLayers;\n        let lArr: AnimatorControllerLayer2D[] = [];\n        for (let i = layers.length - 1; i >= 0; i--) {\n            let l = layers[i];\n            let acl = new AnimatorControllerLayer2D(l.name);\n            lArr.unshift(acl);\n\n\n            for (let k in l) {\n                if (\"name\" == k || \"states\" == k || null == (l as any)[k]) {\n                    continue;\n                }\n                try {\n                    (acl as any)[k] = (l as any)[k];\n                } catch (err: any) { }\n            }\n            this.getState(l.states, acl, this.data);\n\n        }\n        return lArr;\n    }\n\n    /**\n     * @internal\n     * @param states \n     * @param idCatch \n     * @param acl \n     * @returns \n     */\n    private createState(states: TypeAnimatorState[], idCatch: Record<string, AnimatorState2D>, acl: AnimatorControllerLayer2D) {\n        if (!states) return null;\n        let ret: Record<string, AnimatorState2D> = {};\n        let defID: string = null;\n        for (let i = states.length - 1; i >= 0; i--) {\n            let obj = states[i];\n            let childStates = obj.states;\n            if (childStates) {\n                let groupRet = this.createState(childStates, idCatch, acl);\n                if (groupRet) {\n                    idCatch[obj.id] = groupRet.states[groupRet.id];\n                }\n                continue;\n            }\n\n            if (0 > Number(obj.id)) {\n                if (\"-1\" == obj.id) {\n                    let transitions = obj.soloTransitions;\n                    if (transitions && 0 < transitions.length) {\n                        defID = transitions[0].id;\n                    }\n                }\n                continue;\n            }\n\n            let state = new AnimatorState2D();\n            idCatch[obj.id] = state;\n            ret[obj.id] = state;\n            for (let k in obj) {\n                try {\n                    if (\"scripts\" == k) {\n                        let scripts: string[] = obj[k];\n                        if (scripts && Array.isArray(scripts)) {\n                            for (let k = scripts.length - 1; k >= 0; k--) {\n                                let uuid = scripts[k];\n                                if (uuid && 0 == uuid.indexOf(\"res://\")) {\n                                    uuid = uuid.substring(6);\n                                }\n                                let c = ClassUtils.getClass(uuid);\n                                if (c) {\n                                    state.addScript(c);\n                                }\n                            }\n                        }\n                        continue;\n                    } else if (\"soloTransitions\" == k) {\n                        continue;\n                    } else if (null != (obj as any)[k]) {\n                        (state as any)[k] = (obj as any)[k];\n                    }\n                } catch (err: any) { }\n            }\n\n            acl.addState(state);\n        }\n        return { id: defID, states: ret };\n    }\n\n    /**\n     * @internal\n     * @param states \n     * @param acl \n     * @param data \n     */\n    private getState(states: TypeAnimatorState[], acl: AnimatorControllerLayer2D, data: TypeAnimatorControllerData) {\n        //let ret:\n        if (states) {\n            let idCatch: Record<string, AnimatorState2D> = {};\n            this.createState(states, idCatch, acl);\n            this.setTransitions(states, idCatch, acl, data);\n        }\n    }\n\n    /**\n     * @internal\n     * @param exitRet \n     * @param transitions \n     * @param idCatch \n     * @param data \n     * @param pExitRet \n     */\n    private setExitTransition(exitRet: Record<string, TypeAnimatorTransition[]>, transitions: TypeAnimatorTransition[], idCatch: Record<string, AnimatorState2D>, data: TypeAnimatorControllerData, pExitRet: Record<string, TypeAnimatorTransition[]>) {\n        for (let id in exitRet) {\n            let state = idCatch[id];\n            if (state) {\n\n                let ats: AnimatorTransition2D[] = state.transitions;\n                let sts: AnimatorTransition2D[] = state.soloTransitions;\n\n                let linArr = exitRet[id];\n                for (let i = transitions.length - 1; i >= 0; i--) {\n                    let t = transitions[i];\n                    if (\"-3\" == t.id) {\n                        if (null == pExitRet[id]) {\n                            pExitRet[id] = [];\n                        }\n                        pExitRet[id].push(t);\n                        continue;\n                    }\n\n\n                    for (let j = linArr.length - 1; j >= 0; j--) {\n                        let t2 = linArr[j];\n\n\n                        let ato = new AnimatorTransition2D();\n                        ato.destState = idCatch[t.id];\n\n                        if (t.conditions) {\n                            this.addConditions(t.conditions, ato, data);\n                        }\n\n                        if (t2.conditions) {\n                            this.addConditions(t2.conditions, ato, data);\n                        }\n\n\n                        for (let k in t) {\n                            if (\"solo\" == k || \"id\" == k || \"conditions\" == k) {\n                                continue;\n                            } else {\n                                (ato as any)[k] = (t as any)[k];\n                            }\n                        }\n\n                        if (t.solo) {\n                            sts.unshift(ato);\n                        } else {\n                            ats.unshift(ato);\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    private _getAnimatorTransition2D(o: TypeAnimatorTransition, idCatch: Record<string, AnimatorState2D>, data: TypeAnimatorControllerData) {\n        let ato = new AnimatorTransition2D();\n\n        if (idCatch[o.id]) {\n            ato.destState = idCatch[o.id];\n        }\n        if (o.conditions) {\n            this.addConditions(o.conditions, ato, data);\n        }\n\n        for (let k in o) {\n            if (\"solo\" == k || \"id\" == k || \"conditions\" == k) {\n                continue;\n            } else {\n                (ato as any)[k] = (o as any)[k];\n            }\n        }\n        return ato;\n    }\n\n    /**\n     * @internal\n     * @param states \n     * @param idCatch \n     * @param acl \n     * @param data \n     * @param pState \n     * @returns \n     */\n    private setTransitions(states: TypeAnimatorState[], idCatch: Record<string, AnimatorState2D>, acl: AnimatorControllerLayer2D, data: TypeAnimatorControllerData, pState?: TypeAnimatorState) {\n        if (!states) return null;\n\n        let exitRet: Record<string, TypeAnimatorTransition[]> = {};\n\n        for (let i = states.length - 1; i >= 0; i--) {\n            let obj = states[i];\n\n            if (obj.states) {\n                let exitTransition = this.setTransitions(obj.states, idCatch, acl, data, obj);\n                if (exitTransition) {\n                    let transitions = obj.soloTransitions;\n                    if (transitions) {\n                        this.setExitTransition(exitTransition, transitions, idCatch, data, exitRet);\n                    }\n                }\n            }\n        }\n\n\n        for (let i = states.length - 1; i >= 0; i--) {\n            let obj = states[i];\n\n            if (obj.states) {\n                continue;\n            }\n            if (\"-1\" == obj.id) {\n                if (obj.soloTransitions && 0 < obj.soloTransitions.length) {\n                    if (null == pState) {\n                        acl.defaultState = idCatch[obj.soloTransitions[0].id];\n                        acl._enterTransition = this._getAnimatorTransition2D(obj.soloTransitions[0], idCatch, data);\n                    } else {\n                        idCatch[pState.id] = idCatch[obj.soloTransitions[0].id];\n                    }\n                    continue;\n                }\n            } else if (\"-2\" == obj.id) {\n                let transitions = obj.soloTransitions;\n                if (transitions) {\n                    for (let j = transitions.length - 1; j >= 0; j--) {\n                        let o = transitions[j];\n                        let destState = idCatch[o.id];\n                        if (destState) {\n                            for (let idk in idCatch) {\n                                let state = idCatch[idk];\n                                let ato = this._getAnimatorTransition2D(o, idCatch, data)\n                                // let ato = new AnimatorTransition2D();\n                                // ato.destState = destState;\n                                // if (o.conditions) {\n                                //     this.addConditions(o.conditions, ato, data);\n                                // }\n\n                                // for (let k in o) {\n                                //     if (\"solo\" == k || \"id\" == k || \"conditions\" == k) {\n                                //         continue;\n                                //     } else {\n                                //         (ato as any)[k] = (o as any)[k];\n                                //     }\n                                // }\n\n                                if (o.solo) {\n                                    state.soloTransitions.unshift(ato);\n                                } else {\n                                    state.transitions.unshift(ato);\n                                }\n                            }\n                        }\n\n                    }\n                }\n                continue;\n            } else if (\"-3\" == obj.id) {\n                continue;\n            }\n\n            let soloTransitions = obj.soloTransitions;\n            if (soloTransitions && idCatch[obj.id]) {\n\n                let ats: AnimatorTransition2D[] = idCatch[obj.id].transitions;\n                let sts: AnimatorTransition2D[] = idCatch[obj.id].soloTransitions;\n                for (let j = soloTransitions.length - 1; j >= 0; j--) {\n                    let o = soloTransitions[j];\n                    if (\"-3\" == o.id) {\n                        if (null == exitRet[obj.id]) {\n                            exitRet[obj.id] = [];\n                        }\n                        exitRet[obj.id].push(o);\n                        continue;\n                    }\n\n                    let ato = this._getAnimatorTransition2D(o,idCatch,data);\n\n                    if (o.solo) {\n                        sts.unshift(ato);\n                    } else {\n                        ats.unshift(ato);\n                    }\n                }\n            }\n        }\n\n        return exitRet;\n    }\n\n    /**\n     * @internal\n     * @param arr \n     * @param ato \n     * @param data \n     * @returns \n     */\n    private addConditions(arr: TypeAnimatorConditions[], ato: AnimatorTransition2D, data: TypeAnimatorControllerData) {\n        let parms = data.animatorParams;\n        if (null == parms || 0 == parms.length) return;\n        for (let i = 0, len = arr.length; i < len; i++) {\n            let o = arr[i];\n            let parm: TypeAnimatorParams = null;\n            for (let j = parms.length - 1; j >= 0; j--) {\n                if (parms[j].id == o.id) {\n                    parm = parms[j];\n                    break;\n                }\n            }\n            if (null == parm) {\n                return;\n            }\n            let c: AnimatorStateCondition;\n            if (parm.type == AniParmType.Bool) {\n                let b = new AnimatorStateBoolCondition(parm.name);\n                b.compareFlag = Boolean(o.checkValue);\n                c = b;\n            } else if (parm.type == AniParmType.Float) {\n                let n = new AnimatorStateNumberCondition(parm.name);\n                n.numberValue = Number(o.checkValue);\n                n.compareFlag = o.type;\n                c = n;\n            } else if (parm.type == AniParmType.Trigger) {\n                let t = new AnimatorStateTriggerCondition(parm.name);\n                c = t;\n            }\n            ato.addCondition(c);\n        }\n    }\n\n    /**\n     * @internal\n     * @param a \n     */\n    updateTo(a: Animator2D) {\n        let currLayer = (a as any)._controllerLayers;\n\n        for (let i = 0, len = currLayer.length; i < len; i++) {\n            currLayer[i].destroy();\n        }\n        currLayer.length = 0;\n\n        let layers = this.getLayers();\n        for (let i = 0, len = layers.length; i < len; i++) {\n            a.addControllerLayer(layers[i]);\n        }\n\n        let parms = this.data.animatorParams;\n        if (parms) {\n            let setParm: Record<string, Animation2DParm> = {};\n            for (let i = parms.length - 1; i >= 0; i--) {\n                let p = parms[i];\n                let sp = new Animation2DParm();\n                sp.name = p.name;\n                sp.type = p.type;\n                sp.value = p.val;\n                setParm[p.name] = sp;\n            }\n            a.parameters = setParm;\n        }\n    }\n}","import { Component } from \"./Component\";\nimport { Event } from \"../events/Event\"\nimport { Collision } from \"../d3/physics/Collision\";\nimport { PhysicsColliderComponent } from \"../d3/physics/PhysicsColliderComponent\";\nimport { ColliderBase } from \"../physics/Collider2D/ColliderBase\";\nimport { Sprite3D } from \"../d3/core/Sprite3D\";\nimport { Sprite } from \"../display/Sprite\";\nimport { ILaya } from \"../../ILaya\";\n\n/**\n * <code>Script</code> 类用于创建脚本的父类，该类为抽象类，不允许实例。\n */\nexport class Script extends Component {\n    declare owner: Sprite | Sprite3D;\n\n    /**\n     * @internal\n     * @override\n     */\n    _isScript(): boolean {\n        return true;\n    }\n\n    protected setupScript(): void {\n        let owner = this.owner;\n        let func: Function;\n\n        if (!(this.onTriggerEnter == Script.prototype.onTriggerEnter)) owner.on(Event.TRIGGER_ENTER, this, this.onTriggerEnter);\n        if (!(this.onTriggerStay == Script.prototype.onTriggerStay)) owner.on(Event.TRIGGER_STAY, this, this.onTriggerStay);\n        if (!(this.onTriggerExit == Script.prototype.onTriggerExit)) owner.on(Event.TRIGGER_EXIT, this, this.onTriggerExit);\n\n        if (!(this.onCollisionEnter == Script.prototype.onCollisionEnter)) owner.on(Event.COLLISION_ENTER, this, this.onCollisionEnter);\n        if (!(this.onCollisionStay == Script.prototype.onCollisionStay)) owner.on(Event.COLLISION_STAY, this, this.onCollisionStay);\n        if (!(this.onCollisionExit == Script.prototype.onCollisionExit)) owner.on(Event.COLLISION_EXIT, this, this.onCollisionExit);\n        if (func = this.onJointBreak) owner.on(Event.JOINT_BREAK, this, func);\n\n        if (func = this.onMouseDown) owner.on(Event.MOUSE_DOWN, this, func);\n        if (func = this.onMouseUp) owner.on(Event.MOUSE_UP, this, func);\n        if (func = this.onRightMouseDown) owner.on(Event.RIGHT_MOUSE_DOWN, this, func);\n        if (func = this.onRightMouseUp) owner.on(Event.RIGHT_MOUSE_UP, this, func);\n        if (func = this.onMouseMove) owner.on(Event.MOUSE_MOVE, this, func);\n        if (func = this.onMouseDrag) owner.on(Event.MOUSE_DRAG, this, func);\n        if (func = this.onMouseDragEnd) owner.on(Event.MOUSE_DRAG_END, this, func);\n        if (func = this.onMouseOver) owner.on(Event.MOUSE_OVER, this, func);\n        if (func = this.onMouseOut) owner.on(Event.MOUSE_OUT, this, func);\n        if (func = this.onMouseClick) owner.on(Event.CLICK, this, func);\n        if (func = this.onMouseDoubleClick) owner.on(Event.DOUBLE_CLICK, this, func);\n        if (func = this.onMouseRightClick) owner.on(Event.RIGHT_CLICK, this, func);\n\n        if (func = this.onKeyDown) ILaya.stage.on(Event.KEY_DOWN, this, func);\n        if (func = this.onKeyPress) ILaya.stage.on(Event.KEY_PRESS, this, func);\n        if (func = this.onKeyUp) ILaya.stage.on(Event.KEY_UP, this, func);\n        owner.event(Event._Add_Script);\n    }\n\n    /**\n     * 3D物理触发器事件与2D物理碰撞事件，开始碰撞时执行\n     */\n    onTriggerEnter?(other: PhysicsColliderComponent | ColliderBase, self?: ColliderBase, contact?: any): void;\n\n    /**\n     * 3D物理触发器事件与2D物理碰撞事件，持续碰撞时执行\n     */\n    onTriggerStay?(other: PhysicsColliderComponent | ColliderBase, self?: ColliderBase, contact?: any): void;\n\n    /**\n     * 3D物理触发器事件与2D物理碰撞事件，结束碰撞时执行\n     */\n    onTriggerExit?(other: PhysicsColliderComponent | ColliderBase, self?: ColliderBase, contact?: any): void;\n\n    /**\n     * 3D物理碰撞器事件（不适用2D），开始碰撞时执行\n     */\n    onCollisionEnter?(collision: Collision): void;\n\n    /**\n     * 3D物理碰撞器事件（不适用2D），持续碰撞时执行\n     */\n    onCollisionStay?(collision: Collision): void;\n\n    /**\n     *3D物理碰撞器事件（不适用2D），结束碰撞时执行\n     */\n    onCollisionExit?(collision: Collision): void;\n\n    /**\n     * 关节破坏时执行此方法\n     */\n    onJointBreak?(): void;\n\n    /**\n     * 鼠标按下时执行\n     */\n    onMouseDown?(evt: Event): void;\n\n    /**\n     * 鼠标抬起时执行\n     */\n    onMouseUp?(evt: Event): void;\n\n    /**\n     * 鼠标右键或中键按下时执行\n     */\n    onRightMouseDown?(evt: Event): void;\n\n    /**\n     * 鼠标右键或中键抬起时执行\n     */\n    onRightMouseUp?(evt: Event): void;\n\n    /**\n     * 鼠标在节点上移动时执行\n     */\n    onMouseMove?(evt: Event): void;\n\n    /**\n     * 鼠标进入节点时执行\n     */\n    onMouseOver?(evt: Event): void;\n\n    /**\n     * 鼠标离开节点时执行\n     */\n    onMouseOut?(evt: Event): void;\n\n    /**\n     * 鼠标按住一个物体后，拖拽时执行\n     */\n    onMouseDrag?(evt: Event): void;\n\n    /**\n     * 鼠标按住一个物体，拖拽一定距离，释放鼠标按键后执行\n     */\n    onMouseDragEnd?(evt: Event): void;\n\n    /**\n     * 鼠标点击时执行\n     */\n    onMouseClick?(evt: Event): void;\n\n    /**\n     * 鼠标双击时执行\n     */\n    onMouseDoubleClick?(evt: Event): void;\n\n    /**\n     * 鼠标右键点击时执行\n     */\n    onMouseRightClick?(evt: Event): void;\n\n    /**\n     * 键盘按下时执行\n     */\n    onKeyDown?(evt: Event): void;\n\n    /**\n     * 键盘产生一个字符时执行\n     */\n    onKeyPress?(evt: Event): void;\n\n    /**\n     * 键盘抬起时执行\n     */\n    onKeyUp?(evt: Event): void;\n}\n\n","import { IResourceLoader, ILoadTask, Loader } from \"../net/Loader\";\nimport { TextResource, TextResourceFormat } from \"../resource/TextResource\";\n\nclass TextAssetLoader implements IResourceLoader {\n    load(task: ILoadTask) {\n        return task.loader.fetch(task.url, \"text\", task.progress.createCallback(), task.options).then(data => {\n            if (!data)\n                return null;\n\n            return new TextResource(data, TextResourceFormat.Plain);\n        });\n    }\n}\n\nclass BytesAssetLoader implements IResourceLoader {\n    load(task: ILoadTask) {\n        return task.loader.fetch(task.url, \"arraybuffer\", task.progress.createCallback(), task.options).then(data => {\n            if (!data)\n                return null;\n\n            return new TextResource(data, TextResourceFormat.Buffer);\n        });\n    }\n}\n\nclass JsonAssetLoader implements IResourceLoader {\n    load(task: ILoadTask) {\n        return task.loader.fetch(task.url, \"json\", task.progress.createCallback(), task.options).then(data => {\n            if (!data)\n                return null;\n\n            return new TextResource(data, TextResourceFormat.JSON);\n        });\n    }\n}\n\nclass XMLAssetLoader implements IResourceLoader {\n    load(task: ILoadTask) {\n        return task.loader.fetch(task.url, \"xml\", task.progress.createCallback(), task.options).then(data => {\n            if (!data)\n                return null;\n\n            return new TextResource(data, TextResourceFormat.XML);\n        });\n    }\n}\n\nLoader.registerLoader([\"txt\", \"csv\"], TextAssetLoader, Loader.TEXT);\nLoader.registerLoader([\"bin\", \"bytes\", \"fui\"], BytesAssetLoader, Loader.BUFFER);\nLoader.registerLoader([\"json\"], JsonAssetLoader, Loader.JSON);\nLoader.registerLoader([\"xml\"], XMLAssetLoader, Loader.XML);","import { IResourceLoader, ILoadTask, Loader } from \"../net/Loader\";\nimport { AtlasResource } from \"../resource/AtlasResource\";\nimport { Texture } from \"../resource/Texture\";\nimport { Utils } from \"../utils/Utils\";\n\nclass AtlasLoader implements IResourceLoader {\n    load(task: ILoadTask) {\n        return task.loader.fetch(task.url, \"json\", task.progress.createCallback(0.2), task.options).then(data => {\n            if (!data)\n                return null;\n\n            let toloadPics: Array<Promise<Texture>> = [];\n            if (data.meta && data.meta.image) {\n                let folderPath: string = \"\";\n                let i = task.url.lastIndexOf(\"/\");\n                if (i != -1)\n                    folderPath = task.url.substring(0, i + 1);\n\n                //如果图集带了版本号，需要将图集中包含的图片也需要追加版本号，以此解决浏览器缓存的问题\n                let query: string = \"\";\n                i = task.url.lastIndexOf(\"?\");\n                if (i != -1)\n                    query = task.url.substring(i);\n\n                //带图片信息的类型\n                let pics: Array<string> = data.meta.image.split(\",\");\n                for (let pic of pics)\n                    toloadPics.push(task.loader.load(folderPath + pic + query, null, task.progress.createCallback()));\n            } else {  //不带图片信息\n                toloadPics.push(task.loader.load(Utils.replaceFileExtension(task.url, \"png\"), null, task.progress.createCallback()));\n            }\n\n            return Promise.all(toloadPics).then(pics => {\n                let baseUrl = task.options.baseUrl || \"\";\n\n                let frames: any = data.frames;\n                let directory: string = (data.meta && data.meta.prefix != null) ? data.meta.prefix : task.url.substring(0, task.url.lastIndexOf(\".\")) + \"/\";\n                let subTextures: Array<Texture> = [];\n\n                let scaleRate: number = 1;\n                if (data.meta && data.meta.scale && data.meta.scale != 1)\n                    scaleRate = parseFloat(data.meta.scale);\n\n                for (let tPic of pics) {\n                    if (tPic) {\n                        tPic._addReference();\n                        tPic.scaleRate = scaleRate;\n                    }\n                }\n\n                for (let name in frames) {\n                    let obj = frames[name];\n                    let tPic = pics[obj.frame.idx ? obj.frame.idx : 0];\n                    if (!tPic)\n                        continue;\n\n                    let url = baseUrl + directory + (obj.filename || name);\n                    let tt = Texture.create(tPic, obj.frame.x, obj.frame.y, obj.frame.w, obj.frame.h, obj.spriteSourceSize.x, obj.spriteSourceSize.y, obj.sourceSize.w, obj.sourceSize.h);\n                    tt.lock = true;\n                    tt._sizeGrid = obj.sizeGrid;\n                    tt._stateNum = obj.stateNum;\n                    task.loader.cacheRes(url, tt);\n                    tt.url = url;\n                    subTextures.push(tt);\n                }\n\n                return new AtlasResource(directory, pics, subTextures);\n            });\n        });\n    }\n}\n\nLoader.registerLoader([\"atlas\"], AtlasLoader, Loader.ATLAS);","import { Component } from \"../components/Component\";\nimport { Node } from \"../display/Node\";\nimport { Scene } from \"../display/Scene\";\nimport { Sprite } from \"../display/Sprite\";\nimport { Loader, ILoadURL } from \"../net/Loader\";\nimport { URL } from \"../net/URL\";\nimport { Prefab } from \"../resource/HierarchyResource\";\nimport { ClassUtils } from \"../utils/ClassUtils\";\nimport { IDecodeObjOptions, SerializeUtil } from \"./SerializeUtil\";\n\nconst errorList: Array<any> = [];\n\nexport class HierarchyParser {\n    public static parse(data: any, options?: Record<string, any>, errors?: Array<any>): Array<Node> {\n        errors = errors || errorList;\n        let nodeMap: Record<string, Node> = {};\n        let dataList: Array<any> = [];\n        let allNodes: Array<Node> = [];\n        let outNodes: Array<Node> = [];\n        let scene: Scene;\n\n        let inPrefab: boolean;\n        let prefabNodeDict: Map<Node, Record<string, Node>>;\n        let skinBaseUrl: string;\n        let overrideData: Array<Array<any>>;\n\n        if (options) {\n            inPrefab = options.inPrefab;\n            if (inPrefab)\n                prefabNodeDict = options.prefabNodeDict;\n            skinBaseUrl = options.skinBaseUrl;\n            overrideData = options.overrideData;\n        }\n\n        function createChildren(data: any, prefab: Node) {\n            for (let child of data._$child) {\n                if (child._$child) {\n                    let node = createNode(child, prefab);\n                    createChildren(child, child._$prefab ? node : prefab);\n\n                    dataList.push(child);\n                    allNodes.push(node);\n                }\n                else {\n                    let node = createNode(child, prefab);\n                    dataList.push(child);\n                    allNodes.push(node);\n                }\n            }\n        }\n\n        function createNode(nodeData: any, prefab: Node, runtime?: string): Node {\n            let node: Node;\n            let pstr: string;\n            if (pstr = nodeData._$override) { //prefab里的override节点\n                if (prefab && prefabNodeDict) {\n                    if (Array.isArray(pstr)) {\n                        node = prefab;\n                        for (let i = 0, n = pstr.length; i < n; i++) {\n                            let map = prefabNodeDict.get(node);\n                            node = map?.[pstr[i]];\n                            if (!node)\n                                break;\n                        }\n                    }\n                    else {\n                        let map = prefabNodeDict.get(prefab);\n                        if (map)\n                            node = map[nodeData._$override];\n                    }\n                }\n            }\n            else {\n                if (pstr = nodeData._$prefab) { //prefab根节点\n                    let res = <Prefab>Loader.getRes(URL.getResURLByUUID(pstr), Loader.HIERARCHY);\n                    if (res) {\n                        if (!prefabNodeDict)\n                            prefabNodeDict = new Map();\n\n                        let overrideData2: Array<any> = [];\n                        let testId = nodeData._$id;\n                        if (overrideData) {\n                            for (let i = 0, n = overrideData.length; i < n; i++) {\n                                let arr = overrideData[i];\n                                if (arr && arr.length > 0) {\n                                    overrideData2[i] = arr.filter(d => {\n                                        let od = d._$override || d._$parent;\n                                        return Array.isArray(od) && od.length > n - i && od[n - i - 1] == testId;\n                                    });\n                                }\n                                else\n                                    overrideData2[i] = arr;\n                            }\n                        }\n\n                        overrideData2.push(nodeData._$child);\n\n                        node = res.create({ inPrefab: true, prefabNodeDict: prefabNodeDict, overrideData: overrideData2 }, errors);\n                    }\n                }\n                else if (pstr = nodeData._$type) {\n                    let cls = ClassUtils.getClass(runtime || pstr);\n                    if (cls) {\n                        try {\n                            node = new cls();\n                            if (runtime != null && !(node instanceof Node)) {\n                                errors.push(new Error(`runtime class invalid - '${runtime}', must derive from Node`));\n                                node = null;\n                            }\n                        }\n                        catch (err: any) {\n                            errors.push(err);\n                        }\n                    }\n                    else {\n                        errors.push(new Error(`unknown type '${runtime || pstr}'`));\n                    }\n                }\n\n                if (node)\n                    nodeMap[nodeData._$id] = node;\n            }\n\n            return node;\n        }\n\n        function getNodeByRef(idPath: string | string[]) {\n            if (Array.isArray(idPath)) {\n                let prefab = nodeMap[idPath[0]];\n                if (prefab && idPath.length > 1)\n                    return findNodeInPrefab(prefab, idPath, 1);\n                else\n                    return prefab;\n            }\n            else\n                return nodeMap[idPath];\n        }\n\n        function findNodeInPrefab(prefab: Node, idPath: string | string[], startIndex: number = 0) {\n            if (!idPath)\n                return prefab;\n\n            let map = prefabNodeDict?.get(prefab);\n            if (!map)\n                return null;\n\n            if (Array.isArray(idPath)) {\n                let node: Node;\n                for (let i = startIndex, n = idPath.length; i < n; i++) {\n                    if (!map)\n                        return null;\n\n                    node = map[idPath[i]];\n                    if (!node)\n                        break;\n\n                    map = prefabNodeDict.get(node);\n                }\n                return node;\n            }\n            else\n                return map[idPath];\n        }\n\n        let bakedOverrideData: Record<string, Array<any>>;\n        function getNodeData(node: Node) {\n            (<Sprite>node).visible = false;\n\n            let i = allNodes.indexOf(node);\n            let nodeData = dataList[i];\n\n            if (!overrideData)\n                return nodeData;\n\n            if (bakedOverrideData === undefined)\n                bakedOverrideData = SerializeUtil.bakeOverrideData(overrideData);\n\n            if (bakedOverrideData)\n                return SerializeUtil.applyOverrideData(nodeData, bakedOverrideData);\n            else\n                return nodeData;\n        }\n\n        let runtime: string;\n        if (data._$type || data._$prefab) {\n            runtime = data._$runtime;\n            if (runtime && runtime.startsWith(\"res://\"))\n                runtime = runtime.substring(6);\n\n            let node = createNode(data, null, runtime);\n            if (node) {\n                if (data._$child)\n                    createChildren(data, data._$prefab ? node : null);\n\n                dataList.push(data);\n                allNodes.push(node);\n\n                if (node instanceof Scene)\n                    scene = node;\n            }\n        }\n        else {\n            if (data._$child)\n                createChildren(data, null);\n        }\n\n        let cnt = dataList.length;\n\n        //生成树\n        let k = 0;\n        let outNodeData: Array<any> = [];\n        for (let i = 0; i < cnt; i++) {\n            let nodeData = dataList[i];\n            let node = allNodes[i];\n\n            let children: Array<any> = nodeData._$child;\n            if (children) {\n                let num = children.length;\n                if (node) {\n                    if (nodeData._$prefab) {\n                        for (let j = 0; j < num; j++) {\n                            let m = k - num + j;\n                            let n = outNodes[m];\n                            if (n && !n.parent) { //是预制体新增\n                                let nodeData2 = outNodeData[m];\n                                let parentNode = findNodeInPrefab(node, nodeData2._$parent);\n                                if (parentNode) {\n                                    let pos = nodeData2._$index;\n                                    if (pos != null && pos < parentNode.numChildren)\n                                        parentNode.addChildAt(n, pos);\n                                    else\n                                        parentNode.addChild(n);\n                                }\n                                else {\n                                    //挂接的节点可能被删掉了\n                                    node.addChildAt(n, 0);\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        for (let j = 0; j < num; j++) {\n                            let n = outNodes[k - num + j];\n                            if (n) {\n                                if (node === scene && n._is3D)\n                                    scene._scene3D = <any>n;\n                                else\n                                    node.addChild(n);\n                            }\n                        }\n                    }\n                }\n                k -= num;\n            }\n\n            outNodes[k] = node;\n            outNodeData[k] = nodeData;\n            k++;\n        }\n        outNodes.length = k;\n        outNodes = outNodes.filter(n => n != null);\n        let topNode = outNodes[0];\n\n        //加载所有组件\n        let compInitList: Array<any> = [];\n        for (let i = 0; i < cnt; i++) {\n            let components = dataList[i]._$comp;\n            if (!components)\n                continue;\n\n            let node = allNodes[i];\n            if (!node)\n                continue;\n\n            for (let compData of components) {\n                let comp: Component;\n                if (compData._$override) {\n                    let cls: any = ClassUtils.getClass(compData._$override);\n                    if (cls)\n                        comp = node.getComponent(cls);\n                }\n                else {\n                    let cls: any = ClassUtils.getClass(compData._$type);\n                    if (cls) {\n                        comp = node.getComponent(cls);\n                        if (!comp) {\n                            try {\n                                comp = node.addComponent(cls);\n                            }\n                            catch (err: any) {\n                                errors.push(err);\n                            }\n                        }\n                    }\n                }\n\n                if (comp)\n                    compInitList.push(compData, comp);\n            }\n        }\n\n        //设置节点属性\n        const decodeOptions: IDecodeObjOptions = { outErrors: errors, getNodeByRef, getNodeData };\n        for (let i = 0; i < cnt; i++) {\n            let nodeData = dataList[i];\n            let node = allNodes[i];\n            if (node) {\n                if (skinBaseUrl != null && (node instanceof Sprite))\n                    node._skinBaseUrl = skinBaseUrl;\n\n                SerializeUtil.decodeObj(nodeData, node, decodeOptions);\n\n                if (runtime && nodeData._$var && node.name) {\n                    try {\n                        (<any>topNode)[node.name] = node;\n                    }\n                    catch (err: any) {\n                        errors.push(err);\n                    }\n                }\n            }\n        }\n\n        //设置组件属性\n        cnt = compInitList.length;\n        for (let i = 0; i < cnt; i += 2) {\n            SerializeUtil.decodeObj(compInitList[i], compInitList[i + 1], decodeOptions);\n        }\n\n        if (inPrefab && prefabNodeDict && topNode) //记录下nodeMap，上层创建prefab时使用\n            prefabNodeDict.set(topNode, nodeMap);\n\n        if (errors == errorList)\n            errorList.length = 0;\n\n        return outNodes;\n    }\n\n    public static collectResourceLinks(data: any, basePath: string) {\n        let test: Record<string, string[]> = {};\n        let innerUrls: (string | ILoadURL)[] = [];\n\n        function addInnerUrl(url: string, type: string) {\n            if (!url)\n                return \"\";\n            let entry = test[url];\n            if (entry === undefined) {\n                let url2: string;\n                if (url.length >= 36 && url.charCodeAt(8) === 45 && url.charCodeAt(13) === 45) //uuid xxxxxxxx-xxxx-...\n                    url2 = \"res://\" + url;\n                else\n                    url2 = URL.join(basePath, url);\n                innerUrls.push({ url: url2, type: type });\n                test[url] = entry = [url2, type];\n            }\n            else if (entry.indexOf(type, 1) == -1) {\n                entry.push(type);\n                innerUrls.push({ url: entry[0], type: type });\n            }\n            return entry[0];\n        }\n\n        function check(data: any) {\n            for (let key in data) {\n                let child = data[key];\n                if (child == null)\n                    continue;\n                if (Array.isArray(child)) {\n                    for (let item of child) {\n                        if (item == null)\n                            continue;\n\n                        if (typeof (item) === \"object\") {\n                            if (item._$uuid != null)\n                                item._$uuid = addInnerUrl(item._$uuid, SerializeUtil.getLoadTypeByEngineType(item._$type));\n                            else if (item._$prefab != null) {\n                                item._$prefab = addInnerUrl(item._$prefab, Loader.HIERARCHY);\n                                check(item);\n                            }\n                            else\n                                check(item);\n                        }\n                    }\n                }\n                else if (typeof (child) === \"object\") {\n                    if (child._$uuid != null)\n                        child._$uuid = addInnerUrl(child._$uuid, SerializeUtil.getLoadTypeByEngineType(child._$type));\n                    else if (child._$prefab != null) {\n                        child._$prefab = addInnerUrl(child._$prefab, Loader.HIERARCHY);\n                        check(child);\n                    }\n                    else\n                        check(child);\n                }\n            }\n        }\n\n        check(data);\n\n        if (data._$preloads) {\n            for (let url of data._$preloads)\n                innerUrls.push(url);\n        }\n\n        return innerUrls;\n    }\n}","import { IResourceLoader, ILoadTask, Loader } from \"../net/Loader\";\nimport { URL } from \"../net/URL\";\nimport { AssetDb } from \"../resource/AssetDb\";\nimport { Prefab } from \"../resource/HierarchyResource\";\nimport { IHierarchyParserAPI, PrefabImpl } from \"../resource/PrefabImpl\";\nimport { HierarchyParser } from \"./HierarchyParser\";\nimport { LegacyUIParser } from \"./LegacyUIParser\";\n\nexport class HierarchyLoader implements IResourceLoader {\n    static v3: IHierarchyParserAPI = HierarchyParser;\n    static v2: IHierarchyParserAPI = null;\n    static legacySceneOrPrefab: IHierarchyParserAPI = LegacyUIParser;\n\n    load(task: ILoadTask) {\n        let url = task.url;\n        let isModel = task.ext == \"gltf\" || task.ext == \"fbx\" || task.ext == \"glb\";\n        if (isModel)\n            url = AssetDb.inst.getSubAssetURL(url, task.uuid, \"0\", \"lh\");\n        return task.loader.fetch(url, \"json\", task.progress.createCallback(0.2), task.options).then(data => {\n            if (!data)\n                return null;\n\n            if (data._$ver != null)\n                return this._load(HierarchyLoader.v3, task, data, 3);\n            else if (task.ext == \"ls\" || task.ext == \"lh\")\n                return this._load(HierarchyLoader.v2, task, data, 2);\n            else if (task.ext == \"scene\" || task.ext == \"prefab\")\n                return this._load(HierarchyLoader.legacySceneOrPrefab, task, data, 2);\n            else\n                return null;\n        });\n    }\n\n    //@internal\n    private _load(api: IHierarchyParserAPI, task: ILoadTask, data: any, version: number): Promise<Prefab> {\n        let basePath = URL.getPath(task.url);\n        let links = api.collectResourceLinks(data, basePath);\n        return task.loader.load(links, { initiator: task }, task.progress.createCallback()).then((resArray: any[]) => {\n            let res = new PrefabImpl(api, data, version);\n            res.addDeps(resArray);\n            return res;\n        });\n    }\n}\n\nLoader.registerLoader([\"lh\", \"ls\", \"scene\", \"prefab\"], HierarchyLoader, Loader.HIERARCHY);","/**\n * https://en.wikipedia.org/wiki/Radiance_(software)#HDR_image_format\n * \n * 文件第一行为 \"#?RADIANCE\"\n * \n * 以 \"#\" 开始为 注释行\n * \n * 后面有 key=value 形式声明信息\n * 包括 \"FORMAT=32-bit_rle_rgbe\" 格式声明\n * \n * 空行代表 header 结束， \n * \n * header 信息下一行 描述 图像分辨率和像素数据\n * 由 Radiance tools 生成, 一般为 \"-Y height +X width\"\n * \n * 之后为 图像 二进制像素数据\n *  \n */\n\nimport { Vector4 } from \"../maths/Vector4\";\nimport { TextureFormat } from \"../RenderEngine/RenderEnum/TextureFormat\";\nimport { Texture2D } from \"../resource/Texture2D\";\n\n/**\n * https://floyd.lbl.gov/radiance/framer.html\n */\nexport class HDRTextureInfo {\n\n    static HDRTEXTURE: string = \"HDRTEXTURE\";\n\n    static _parseHDRTexture(data: ArrayBuffer, propertyParams: any = null, constructParams: any[] = null) {\n\n        let hdrInfo = HDRTextureInfo.getHDRInfo(data);\n\n        let texture = new Texture2D(hdrInfo.width, hdrInfo.height, hdrInfo.format, false, false, false);\n\n        texture.setHDRData(hdrInfo);\n\n        if (propertyParams) {\n            if (propertyParams.wrapModeU != null) texture.wrapModeU = propertyParams.wrapModeU;\n            if (propertyParams.wrapModeV != null) texture.wrapModeV = propertyParams.wrapModeV;\n            if (propertyParams.filterMode != null) texture.filterMode = propertyParams.filterMode;\n            if (propertyParams.anisoLevel != null) texture.anisoLevel = propertyParams.anisoLevel;\n        }\n\n        return texture;\n    }\n\n    /**\n     * \n     * @param source \n     */\n    static getHDRInfo(source: ArrayBuffer) {\n\n        let data = new Uint8Array(source);\n        let readByteOffset = 0;\n\n        const readLine = () => {\n            let lineStr = HDRTextureInfo.getLineString(data, readByteOffset);\n            // string 带着 '\\n' 就不用 +1\n            readByteOffset += lineStr.length + 1;\n            return lineStr;\n        }\n\n        // header\n        let identifier = readLine();\n        // todo  非 Radiance tools 生成文件 identifier 是否还是 RADIANCE\n        if (identifier != \"#?RADIANCE\") {\n            throw \"HDR image: identifier wrong.\";\n        }\n\n        let commandsMap = new Map();\n\n        let line = \"\";\n        do {\n            line = readLine();\n            if (line[0] != \"#\") {\n                let commands = line.split(\"=\");\n                commandsMap.set(commands[0], commands[1]);\n            }\n\n        } while (line != \"\");\n        // header end\n\n        /**\n         * FORMAT\n         * EXPOSURE\n         * COLORCORR\n         * SOFTWARE\n         * PIXASPECT\n         * VIEW\n         * PRIMARIES\n         */\n        let hdrFormat = commandsMap.get(\"FORMAT\");\n        /**\n         * 32-bit_rle_rgbe\n         * 32-bit_rle_xyze\n         */\n        if (hdrFormat != \"32-bit_rle_rgbe\") {\n            throw \"HDR image: unsupported format.\";\n        }\n\n        let resolutionStr = readLine();\n        let resolutions = resolutionStr.split(\" \");\n\n        let decreaseY = resolutions[0] == \"-Y\";\n        let decreaseX = resolutions[2] == \"-X\";\n\n        let height = parseInt(resolutions[1]);\n        let width = parseInt(resolutions[3]);\n\n        // format 固定?\n        let hdrInfo = new HDRTextureInfo(source, readByteOffset, decreaseX, decreaseY, width, height, TextureFormat.R32G32B32A32);\n\n        /**\n         * Scanline Records\n         * 1. Uncompressed 每像素 4 字节\n         * 2. Old run-length encoded\n         * 3. New run-length encoded *✓\n         */\n\n\n        return hdrInfo;\n    }\n\n    private static getLineString(data: Uint8Array, readByteOffset: number) {\n\n        let dataLength = data.length;\n\n        let index = readByteOffset;\n\n        let res = \"\";\n        let char = \"\";\n        // do {\n        //     char = String.fromCharCode(data[index]);\n        //     res = `${res}${char}`;\n        //     index++;\n        // } while (index < dataLength && char != \"\\n\");\n\n        while (index < dataLength && char != \"\\n\") {\n            res = `${res}${char}`;\n            char = String.fromCharCode(data[index]);\n            index++;\n        }\n\n        return res;\n\n    }\n\n\n\n    constructor(public source: ArrayBuffer, public byteOffset: number, public decreaseX: boolean, public decreaseY: boolean, public width: number, public height: number, public format: TextureFormat) {\n\n    }\n\n    get_32_bit_rle_rgbe(): ArrayBufferView {\n\n        let width = this.width;\n        let height = this.height;\n        let decreaseX = this.decreaseX;\n        let decreaseY = this.decreaseY;\n\n        let data = new Uint8Array(this.source, this.byteOffset);\n        let dataIndex = 0;\n\n        let rgbeBuffer = new ArrayBuffer(width * 4);\n        let rgbeArray = new Uint8Array(rgbeBuffer);\n\n        let pixelBuffer = new ArrayBuffer(width * height * 4 * 3);\n        let pixelArray = new Float32Array(pixelBuffer);\n\n        // todo decreaseX and decreaseY\n        for (let y = height; y > 0; y--) {\n\n            // begin unnormalized pixel\n            let a2 = data[dataIndex++]; // equal to 2\n            let b2 = data[dataIndex++]; // equal to 2\n            let c = data[dataIndex++]; // upper byte\n            let d = data[dataIndex++]; // lower byte\n\n            let scanlineLength = (c << 8) | d;\n\n            if (scanlineLength != width) {\n                throw \"HDR info: scanlineLength wrong.\";\n            }\n\n            let index = 0;\n            for (let i = 0; i < 4; i++) {\n                let endIndex = (i + 1) * scanlineLength;\n\n                while (index < endIndex) {\n                    let a = data[dataIndex++];\n                    let b = data[dataIndex++];\n                    if (a > 128) {\n                        let count = a - 128;\n                        if (count > endIndex - index) {\n                            throw \"HDR info: ??\";\n                        }\n                        while (count-- > 0) {\n                            rgbeArray[index++] = b;\n                        }\n                    }\n                    else {\n                        let count = a;\n                        if (count == 0 || count > endIndex - index) {\n                            throw \"HDR info: ??\";\n                        }\n                        rgbeArray[index++] = b;\n                        if (--count > 0) {\n                            for (let j = 0; j < count; j++) {\n                                rgbeArray[index++] = data[dataIndex++];\n                            }\n                        }\n                    }\n\n                }\n            }\n\n            for (let i = 0; i < scanlineLength; i++) {\n                let r = rgbeArray[i];\n                let g = rgbeArray[i + scanlineLength];\n                let b = rgbeArray[i + 2 * scanlineLength];\n                let e = rgbeArray[i + 3 * scanlineLength];\n\n                // /// test data\n                // /**\n                //  * (R,G,B)=(1.,.5,.25) would be represented by the bytes (128,64,32,129).\n                //  */\n                // r = 128;\n                // g = 64;\n                // b = 32;\n                // e = 129;\n\n                let index = (height - y) * scanlineLength * 3 + i * 3;\n\n                const Ldexp = (mantissa: number, exponent: number) => {\n                    if (exponent > 1023) {\n                        return mantissa * Math.pow(2, 1023) * Math.pow(2, exponent - 1023);\n                    }\n\n                    if (exponent < -1074) {\n                        return mantissa * Math.pow(2, -1074) * Math.pow(2, exponent + 1074);\n                    }\n\n                    return mantissa * Math.pow(2, exponent);\n                }\n\n                if (e > 0) {\n                    let exponent = Ldexp(1.0, e - (128 + 8));\n                    pixelArray[index] = r * exponent;\n                    pixelArray[index + 1] = g * exponent;\n                    pixelArray[index + 2] = b * exponent;\n                }\n                else {\n                    pixelArray[index] = 0;\n                    pixelArray[index + 1] = 0;\n                    pixelArray[index + 2] = 0;\n                }\n            }\n\n        }\n\n        return pixelArray;\n    }\n\n\n    /**\n     * https://www.radiance-online.org/archived/radsite/radiance/refer/Notes/picture_format.html\n     */\n    readScanLine(): ArrayBufferView {\n\n        let width = this.width;\n        let height = this.height;\n        let decreaseX = this.decreaseX;\n        let decreaseY = this.decreaseY;\n\n        let n = 3;\n        if (this.format == TextureFormat.R32G32B32A32) {\n            n = 4;\n        }\n\n        let pixelArray = new Float32Array(width * height * n);\n\n        let scanlineArray = new Uint8Array(width * 4);\n\n        let data = new Uint8Array(this.source, this.byteOffset);\n        let dataLength = data.length;\n        let dataIndex = 0;\n\n        const getc = () => {\n            // todo  check\n            if (dataIndex >= dataLength) {\n                throw \"HDR info: data wrong.\";\n            }\n\n            return data[dataIndex++];\n        };\n\n        const wrong = () => {\n            throw \"HDR info: data wrong.\";\n        }\n\n        for (let y = (height - 1); y >= 0; y--) {\n\n            this.readcolors(scanlineArray, getc, wrong);\n\n            for (let i = 0; i < width; i++) {\n\n                // color_color func\n                let index = 4 * i;\n                let byter = scanlineArray[index];\n                let byteg = scanlineArray[index + 1];\n                let byteb = scanlineArray[index + 2];\n                let bytee = scanlineArray[index + 3];\n\n                // /// test data\n                // /**\n                //  * (R,G,B)=(1.,.5,.25) would be represented by the bytes (128,64,32,129)\n                //  */\n                // byter = 128;\n                // byteg = 64;\n                // byteb = 32;\n                // bytee = 129;\n\n                let offsetY = y;\n                let offsetX = i;\n                if (decreaseY) {\n                    offsetY = height - 1 - y;\n                }\n                if (decreaseX) {\n                    offsetX = width - 1 - i;\n                }\n\n                let pixelIndex = offsetY * width * n + offsetX * n;\n\n                if (bytee == 0) {\n                    pixelArray[pixelIndex] = 0;\n                    pixelArray[pixelIndex + 1] = 0;\n                    pixelArray[pixelIndex + 2] = 0;\n                    if (n == 4) {\n                        pixelArray[pixelIndex + 3] = 1;\n                    }\n                }\n                else {\n                    let f = ldexp(1.0, bytee - (128 + 8));\n                    pixelArray[pixelIndex] = (byter + 0.5) * f;\n                    pixelArray[pixelIndex + 1] = (byteg + 0.5) * f;\n                    pixelArray[pixelIndex + 2] = (byteb + 0.5) * f;\n                    if (n == 4) {\n                        pixelArray[pixelIndex + 3] = 1;\n                    }\n                }\n            }\n\n        }\n        return pixelArray;\n    }\n\n    readcolors(scanlineArray: Uint8Array, getc: () => number, wrong: () => void) {\n\n        const setScanLineData = (w: number, channel: number, value: number) => {\n            scanlineArray[w * 4 + channel] = value;\n        }\n\n        let width = this.width;\n\n        // 第一个数据\n        let unnormalizedr = getc();\n        let unnormalizedg = getc();\n        let unnormalizedb = getc();\n        let unnormalizede = getc();\n\n        if (width < 8 || width > 32767) {\n            this.olddreadcolors(scanlineArray, getc, unnormalizedr, unnormalizedg, unnormalizedb, unnormalizede);\n            return;\n        }\n\n        if (unnormalizedr != 2 || unnormalizedg != 2 || unnormalizedb & 128) {\n            this.olddreadcolors(scanlineArray, getc, unnormalizedr, unnormalizedg, unnormalizedb, unnormalizede);\n            return;\n        }\n\n        if ((unnormalizedb << 8 | unnormalizede) != width) {\n            wrong()\n        }\n        for (let i = 0; i < 4; i++) {\n            for (let j = 0; j < width;) {\n                let code = getc();\n                if (code > 128) {\n                    code &= 127;\n                    let val = getc();\n                    if (j + code > width) {\n                        wrong();\n                    }\n                    while (code--) {\n                        setScanLineData(j++, i, val);\n                    }\n                }\n                else {\n                    if (j + code > width) {\n                        wrong();\n                    }\n                    while (code--) {\n                        let val = getc();\n                        setScanLineData(j++, i, val);\n                    }\n                }\n            }\n        }\n\n    }\n\n    olddreadcolors(scanlineArray: Uint8Array, getc: () => number, r: number, g: number, b: number, e: number) {\n\n        let rshift = 0;\n\n        let len = this.width;\n\n        scanlineArray[0] = r;\n        scanlineArray[1] = g;\n        scanlineArray[2] = b;\n        scanlineArray[3] = e;\n\n        for (let w = 1; w < len; w++) {\n            let unnormalizedr = getc();\n            let unnormalizedg = getc();\n            let unnormalizedb = getc();\n            let unnormalizede = getc();\n\n            let scanIndex = w * 4;\n            scanlineArray[scanIndex] = unnormalizedr;\n            scanlineArray[scanIndex + 1] = unnormalizedg;\n            scanlineArray[scanIndex + 2] = unnormalizedb;\n            scanlineArray[scanIndex + 3] = unnormalizede;\n\n            if (unnormalizedr == 1 && unnormalizedg == 1 && unnormalizedb == 1) {\n                let lastIndex = scanIndex - 4;\n                for (let i = unnormalizede << rshift; i > 0; i--) {\n                    scanlineArray[scanIndex] = scanlineArray[lastIndex];\n                    scanlineArray[scanIndex + 1] = scanlineArray[lastIndex + 1];\n                    scanlineArray[scanIndex + 2] = scanlineArray[lastIndex + 2];\n                    scanlineArray[scanIndex + 3] = scanlineArray[lastIndex + 3];\n                    // len--;\n                }\n                rshift += 8;\n            }\n            else {\n                // len--;\n                rshift = 0;\n            }\n        }\n\n\n    }\n\n    color_color(col: Vector4, clr: Vector4) {\n        let f = 0;\n        if (clr.w == 0) {\n            col.x = col.y = col.z = 0;\n        }\n        else {\n            f = ldexp(1.0, clr.w - (128 + 8));\n            // todo   + 0.5 值会变\n            col.x = (clr.x) * f;\n            col.y = (clr.y) * f;\n            col.z = (clr.z) * f;\n        }\n    }\n\n\n\n}\n\nfunction ldexp(value: number, exponent: number): number {\n    return value * Math.pow(2, exponent);\n}","import { Texture2D, TextureConstructParams, TexturePropertyParams } from \"../resource/Texture2D\";\nimport { Texture } from \"../resource/Texture\";\nimport { IResourceLoader, ILoadTask, Loader, ILoadURL } from \"../net/Loader\";\nimport { HDRTextureInfo } from \"../RenderEngine/HDRTextureInfo\";\nimport { KTXTextureInfo } from \"../RenderEngine/KTXTextureInfo\";\nimport { TextureDimension } from \"../RenderEngine/RenderEnum/TextureDimension\";\nimport { ClassUtils } from \"../utils/ClassUtils\";\nimport { BaseTexture } from \"../resource/BaseTexture\";\nimport { TextureFormat } from \"../RenderEngine/RenderEnum/TextureFormat\";\nimport { Browser } from \"../utils/Browser\";\nimport { AssetDb } from \"../resource/AssetDb\";\nimport { Resource } from \"../resource/Resource\";\nimport { Utils } from \"../utils/Utils\";\nimport { RenderTexture } from \"../resource/RenderTexture\";\nimport { VideoTexture } from \"../media/VideoTexture\";\nimport { LayaEnv } from \"../../LayaEnv\";\nimport { LayaGL } from \"../layagl/LayaGL\";\n\nvar internalResources: Record<string, Texture2D>;\n\nclass Texture2DLoader implements IResourceLoader {\n    constructor() {\n        if (!internalResources) {\n            internalResources = {\n                \"WhiteTexture.png\": Texture2D.whiteTexture,\n                \"BlackTexture.png\": Texture2D.blackTexture,\n                \"GrayTexture.png\": Texture2D.grayTexture,\n                \"NormalTexture.png\": Texture2D.normalTexture,\n            };\n        }\n    }\n\n    load(task: ILoadTask) {\n        if (task.url.indexOf(\"internal/\") != -1) {\n            let tex = internalResources[Utils.getBaseName(task.url)];\n            if (tex)\n                return Promise.resolve(tex);\n        }\n\n        let meta: any;\n        if (!task.url.startsWith(\"data:\")) {\n            meta = AssetDb.inst.metaMap[task.url];\n            if (!meta && LayaEnv.isPreview) {\n                return AssetDb.inst.getMeta(task.url, task.uuid).then(meta => {\n                    return this.load2(task, meta);\n                });\n            }\n        }\n\n        return this.load2(task, meta);\n    }\n\n    protected load2(task: ILoadTask, meta: any) {\n        let constructParams: TextureConstructParams;\n        let propertyParams: TexturePropertyParams;\n        let ext = task.ext;\n        let url = task.url;\n        if (meta) {\n            let platform = Browser.platform;\n            let fileIndex = meta.platforms?.[platform] || 0;\n            let fileInfo = meta.files?.[fileIndex] || {};\n            if (fileInfo.file) {\n                url = AssetDb.inst.getSubAssetURL(url, task.uuid, fileInfo.file, fileInfo.ext);\n                ext = fileInfo.ext;\n            }\n\n            constructParams = [0, 0, fileInfo.format ?? 1, meta.mipmap, meta.readWrite, meta.sRGB];\n            propertyParams = {\n                wrapModeU: meta.wrapMode,\n                wrapModeV: meta.wrapMode,\n                filterMode: meta.filterMode,\n                anisoLevel: meta.anisoLevel,\n                premultiplyAlpha: !!meta.pma,\n                hdrEncodeFormat: meta.hdrEncodeFormat,\n            };\n        }\n        else {\n            constructParams = task.options.constructParams;\n            propertyParams = task.options.propertyParams;\n        }\n\n        let compress = compressedFormats.indexOf(ext) != -1 ? ext : null;\n        if (compress != null) {\n            return task.loader.fetch(url, \"arraybuffer\", task.progress.createCallback(), task.options).then(data => {\n                if (!data)\n                    return null;\n\n                let tex: BaseTexture;\n                switch (compress) {\n                    case \"dds\":\n                        tex = Texture2D._parseDDS(data, propertyParams, constructParams);\n                        break;\n\n                    case \"ktx\":\n                        let ktxInfo = KTXTextureInfo.getKTXTextureInfo(data);\n                        if (ktxInfo.dimension == TextureDimension.Cube) {\n                            //这里在core模块，不能直接引用d3里的TextureCube\n                            let cls = ClassUtils.getClass(\"TextureCube\");\n                            if (cls) {\n                                let tc = new cls(ktxInfo.width, ktxInfo.format, ktxInfo.mipmapCount > 1, ktxInfo.sRGB);\n                                tc.setKTXData(ktxInfo);\n                                tex = tc;\n                            }\n                            else\n                                return null;\n                        }\n                        else if (ktxInfo.dimension == TextureDimension.Tex2D) {\n                            tex = Texture2D._parseKTX(data, propertyParams, constructParams);\n                        }\n                        break;\n                    case \"pvr\":\n                        tex = Texture2D._parsePVR(data, propertyParams, constructParams);\n                        break;\n\n                    case \"hdr\":\n                        tex = HDRTextureInfo._parseHDRTexture(data, propertyParams, constructParams);\n                        break;\n\n                    case \"lanit.ls\":\n                        tex = Texture2D._SimpleAnimatorTextureParse(data, propertyParams, constructParams);\n                        break;\n                }\n\n                let obsoluteInst = <Texture2D>task.obsoluteInst;\n                if (obsoluteInst && Object.getPrototypeOf(obsoluteInst) == Object.getPrototypeOf(tex))\n                    tex = this.move(obsoluteInst, tex);\n\n                if (propertyParams && propertyParams.hdrEncodeFormat)\n                    tex.hdrEncodeFormat = propertyParams.hdrEncodeFormat;\n\n                if (meta) {\n                    (<any>tex)._sizeGrid = meta.sizeGrid;\n                    (<any>tex)._stateNum = meta.stateNum;\n                }\n\n                return tex;\n            });\n        }\n        else {\n            let options = task.options;\n            let premultiplyAlpha = (propertyParams && propertyParams.premultiplyAlpha) ? \"premultiply\" : \"none\";\n            if (options.useWorkerLoader && premultiplyAlpha === \"none\")\n                options = Object.assign({ workerLoaderOptions: { premultiplyAlpha } }, options);\n\n            return task.loader.fetch(url, \"image\", task.progress.createCallback(), options).then(img => {\n                if (LayaGL.textureContext.needBitmap) {\n                    if (img instanceof ImageBitmap)\n                        return img;\n                    else\n                        return createImageBitmap(img, options.workerLoaderOptions || { premultiplyAlpha });\n                } else {\n                    return img;\n                }\n            }).then(bitmapimage => {\n                if (!bitmapimage)\n                    return null;\n                let tex: BaseTexture = Texture2D._parseImage(bitmapimage, propertyParams, constructParams);\n                let obsoluteInst = <Texture2D>task.obsoluteInst;\n                if (obsoluteInst && Object.getPrototypeOf(obsoluteInst) == Object.getPrototypeOf(tex))\n                    tex = this.move(obsoluteInst, tex);\n                if (meta) {\n                    (<any>tex)._sizeGrid = meta.sizeGrid;\n                    (<any>tex)._stateNum = meta.stateNum;\n                }\n                return tex;\n            });\n        }\n    }\n\n    private move(obsoluteInst: BaseTexture, tex: BaseTexture) {\n        obsoluteInst._texture = tex._texture;\n        obsoluteInst.width = tex.width;\n        obsoluteInst.height = tex.height;\n        obsoluteInst.obsolute = false;\n        delete Resource._idResourcesMap[tex.id];\n        return obsoluteInst;\n    }\n}\n\nclass RenderTextureLoader implements IResourceLoader {\n    load(task: ILoadTask) {\n        return task.loader.fetch(task.url, \"json\", task.progress.createCallback(), task.options).then(data => {\n            if (!data)\n                return null;\n\n            let rt = <RenderTexture>task.obsoluteInst;\n            if (rt)\n                rt.recreate(data.width, data.height, data.colorFormat, data.depthFormat,\n                    data.generateMipmap, data.multiSamples, data.generateDepthTexture, data.sRGB);\n            else\n                rt = new RenderTexture(data.width, data.height, data.colorFormat, data.depthFormat,\n                    data.generateMipmap, data.multiSamples, data.generateDepthTexture, data.sRGB);\n\n            if (null != data.anisoLevel)\n                rt.anisoLevel = data.anisoLevel;\n            if (null != data.filterMode)\n                rt.filterMode = data.filterMode;\n            if (null != data.wrapModeU)\n                rt.wrapModeU = data.wrapModeU;\n            if (null != data.wrapModeV)\n                rt.wrapModeV = data.wrapModeV;\n\n            return rt;\n        });\n    }\n}\n\n\nclass VideoTextureLoader implements IResourceLoader {\n    load(task: ILoadTask) {\n        let inst = <VideoTexture>task.obsoluteInst || new VideoTexture();\n        inst.source = task.url;\n        return Promise.resolve(inst);\n    }\n}\n\nconst propertyParams2d: TexturePropertyParams = { premultiplyAlpha: true };\nconst constructParams2d: TextureConstructParams = [null, null, TextureFormat.R8G8B8A8, false, false, true];\n\nclass TextureLoader implements IResourceLoader {\n    wrapTex2D(task: ILoadTask, tex2D: Texture2D) {\n        if (!tex2D)\n            return null;\n\n        let tex = <Texture>task.obsoluteInst;\n        if (tex) { //recover\n            tex.setTo(tex2D);\n            tex.obsolute = false;\n            tex._sizeGrid = (<any>tex2D)._sizeGrid;\n            tex._stateNum = (<any>tex2D)._stateNum;\n            tex.event(\"reload\");\n            if (tex._clipCache) {\n                tex._clipCache.forEach(t => {\n                    t.event(\"reload\");\n                    t._sizeGrid = tex._sizeGrid;\n                    t._stateNum = tex._stateNum;\n                });\n            }\n        }\n        else {\n            tex = new Texture(tex2D);\n            tex._sizeGrid = (<any>tex2D)._sizeGrid;\n            tex._stateNum = (<any>tex2D)._stateNum;\n        }\n\n        return tex;\n    }\n\n    load(task: ILoadTask) {\n        let tex2D = <Texture2D>task.loader.getRes(task.url, Loader.TEXTURE2D);\n        if (!tex2D || tex2D.obsolute) {\n            let url: ILoadURL = { url: task.url, type: Loader.TEXTURE2D };\n\n            if (!task.options.propertyParams)\n                url.propertyParams = propertyParams2d;\n            else if (task.options.propertyParams.premultiplyAlpha == null)\n                url.propertyParams = Object.assign({}, propertyParams2d, task.options.propertyParams);\n\n            if (!task.options.constructParams)\n                url.constructParams = constructParams2d;\n            else if (task.options.constructParams[5] == null)\n                url.constructParams = Object.assign([], constructParams2d, task.options.constructParams);\n            return task.loader.load(url, task.options, task.progress.createCallback()).then(tex2D => {\n                return this.wrapTex2D(task, tex2D);\n            });\n        }\n        else\n            return Promise.resolve(this.wrapTex2D(task, tex2D));\n    }\n}\n\nconst compressedFormats = [\"ktx\", \"pvr\", \"dds\", \"hdr\", \"lanit.ls\"];\nconst videoFormats = [\"mp4\", \"webm\"];\n\nLoader.registerLoader([\"tga\", \"tif\", \"tiff\", \"png\", \"jpg\", \"jpeg\", \"rendertexture\", ...videoFormats, ...compressedFormats], TextureLoader, Loader.IMAGE);\nLoader.registerLoader([], Texture2DLoader, Loader.TEXTURE2D);\nLoader.registerLoader([\"rendertexture\"], RenderTextureLoader, Loader.TEXTURE2D);\nLoader.registerLoader(videoFormats, VideoTextureLoader, Loader.TEXTURE2D);","import { AnimationClip2D } from \"../components/AnimationClip2D\";\nimport { IResourceLoader, ILoadTask, Loader } from \"../net/Loader\";\n\nclass AnimationClip2DLoader implements IResourceLoader {\n    load(task: ILoadTask) {\n        return task.loader.fetch(task.url, \"arraybuffer\", task.progress.createCallback(), task.options).then(data => {\n            if (!data)\n                return null;\n\n            return AnimationClip2D._parse(data);\n        });\n    }\n}\nLoader.registerLoader([\"mc\"], AnimationClip2DLoader);","import { AnimatorController2D } from \"../components/AnimatorController2D\";\nimport { TypeAnimatorState } from \"../components/AnimatorControllerParse\";\nimport { IResourceLoader, ILoadTask, Loader } from \"../net/Loader\";\nimport { URL } from \"../net/URL\";\n\nclass AnimationController2DLoader implements IResourceLoader {\n    load(task: ILoadTask) {\n        return task.loader.fetch(task.url, \"json\", task.progress.createCallback(0.2), task.options).then(data => {\n            let ret = new AnimatorController2D(data);\n            if (ret.data && ret.data.controllerLayers) {\n                let layers = ret.data.controllerLayers;\n                let promises: Array<any> = [];\n                for (let i = layers.length - 1; i >= 0; i--) {\n                    let states = layers[i].states;\n                    this.loadStates(states, promises, task);\n\n                }\n                return Promise.all(promises).then(() => ret);\n            }\n            else\n                return ret;\n        });\n    }\n\n\n    loadStates(states: TypeAnimatorState[], promises: Array<any>, task: ILoadTask) {\n        let basePath = URL.getPath(task.url);\n        for (let j = states.length - 1; j >= 0; j--) {\n            if (states[j].clip && states[j].clip._$uuid) {\n                let url = URL.getResURLByUUID(states[j].clip._$uuid);\n                if (!url.startsWith(\"res://\"))\n                    url = URL.join(basePath, url);\n                promises.push(task.loader.load(url).then(res => {\n                    states[j].clip = res;\n                }));\n\n                // promises.push(task.loader.load(\"res://\" + states[j].clip._$uuid).then(res => {\n                //     states[j].clip = res;\n                // }));\n            }\n\n            if (states[j].states) {\n                this.loadStates(states[j].states, promises, task);\n            }\n        }\n    }\n}\n\nLoader.registerLoader([\"mcc\"], AnimationController2DLoader);","import { ILoadTask, IResourceLoader, Loader } from \"../net/Loader\";\n\nexport class NullLoader implements IResourceLoader {\n    load(task: ILoadTask) {\n        return Promise.resolve(null);\n    }\n}\n\nLoader.registerLoader([\"lighting\"], NullLoader);","import { BitmapFont } from \"../display/BitmapFont\";\nimport { IResourceLoader, ILoadTask, Loader } from \"../net/Loader\";\nimport { Utils } from \"../utils/Utils\";\n\nclass BitmapFontLoader implements IResourceLoader {\n    load(task: ILoadTask) {\n        let picUrl = Utils.replaceFileExtension(task.url, \"png\");\n        return Promise.all([\n            task.loader.fetch(task.url, \"xml\", task.progress.createCallback(0.2), task.options),\n            task.loader.load(picUrl, task.options, task.progress.createCallback(0.8))\n        ]).then(([xml, tex]) => {\n            if (!xml || !tex)\n                return null;\n\n            let font = new BitmapFont();\n            font.parseFont(xml, tex);\n\n            return font;\n        });\n    }\n}\n\nLoader.registerLoader([\"fnt\"], BitmapFontLoader, Loader.FONT);","import { ILaya } from \"../../ILaya\";\nimport { LayaEnv } from \"../../LayaEnv\";\nimport { IResourceLoader, ILoadTask, Loader } from \"../net/Loader\";\nimport { URL } from \"../net/URL\";\nimport { Browser } from \"../utils/Browser\";\nimport { Utils } from \"../utils/Utils\";\n\nconst testString = \"LayaTTFFont\";\n\nclass TTFFontLoader implements IResourceLoader {\n\n    load(task: ILoadTask) {\n        let fontName = Utils.replaceFileExtension(Utils.getBaseName(task.url), \"\");\n        if (LayaEnv.isConch) {\n            return task.loader.fetch(task.url, \"arraybuffer\").then(data => {\n                if (data)\n                    (window as any)[\"conch\"].registerFont(fontName, data);\n                return { family: fontName };\n            });\n        }\n        else if ((window as any).FontFace) {\n            let fontFace: any = new (window as any).FontFace(fontName, \"url('\" + URL.postFormatURL(URL.formatURL(task.url)) + \"')\");\n            (document as any).fonts.add(fontFace);\n            return fontFace.load().then(() => {\n                return fontFace;\n            });\n        }\n        else {\n            let fontTxt = \"40px \" + fontName;\n            let txtWidth = Browser.measureText(testString, fontTxt).width;\n\n            let fontStyle: any = Browser.createElement(\"style\");\n            fontStyle.type = \"text/css\";\n            document.body.appendChild(fontStyle);\n            fontStyle.textContent = \"@font-face { font-family:'\" + fontName + \"'; src:url('\" + URL.postFormatURL(URL.formatURL(task.url)) + \"');}\";\n\n            return new Promise((resolve) => {\n                let checkComplete = () => {\n                    if (Browser.measureText(testString, fontTxt).width != txtWidth)\n                        complete();\n                };\n                let complete = () => {\n                    ILaya.systemTimer.clear(this, checkComplete);\n                    ILaya.systemTimer.clear(this, complete);\n\n                    resolve({ family: fontName });\n                };\n\n                ILaya.systemTimer.once(10000, this, complete);\n                ILaya.systemTimer.loop(20, this, checkComplete);\n            });\n        }\n    }\n}\n\nLoader.registerLoader([\"ttf\", \"woff\", \"woff2\", \"otf\"], TTFFontLoader, Loader.TTF);","import { Vector3 } from \"../../maths/Vector3\";\nimport { BlendEquationSeparate } from \"../RenderEnum/BlendEquationSeparate\";\nimport { BlendFactor } from \"../RenderEnum/BlendFactor\";\nimport { BlendType } from \"../RenderEnum/BlendType\";\nimport { CompareFunction } from \"../RenderEnum/CompareFunction\";\nimport { CullMode } from \"../RenderEnum/CullMode\";\nimport { StencilOperation } from \"../RenderEnum/StencilOperation\";\n\n\n\n/**\n * <code>RenderState</code> 类用于控制渲染状态。\n */\nexport class RenderState {\n\t/**剔除枚举_不剔除。*/\n\tstatic CULL_NONE: number = CullMode.Off;\n\t/**剔除枚举_剔除正面。*/\n\tstatic CULL_FRONT: number = CullMode.Front;\n\t/**剔除枚举_剔除背面。*/\n\tstatic CULL_BACK: number = CullMode.Back;\n\n\t/**混合枚举_禁用。*/\n\tstatic BLEND_DISABLE: number = BlendType.BLEND_DISABLE;\n\t/**混合枚举_启用_RGB和Alpha统一混合。*/\n\tstatic BLEND_ENABLE_ALL: number = BlendType.BLEND_ENABLE_ALL;\n\t/**混合枚举_启用_RGB和Alpha单独混合。*/\n\tstatic BLEND_ENABLE_SEPERATE: number = BlendType.BLEND_ENABLE_SEPERATE;\n\n\t/**混合参数枚举_零,例：RGB(0,0,0),Alpha:(1)。*/\n\tstatic BLENDPARAM_ZERO: number = BlendFactor.Zero;\n\t/**混合参数枚举_一,例：RGB(1,1,1),Alpha:(1)。*/\n\tstatic BLENDPARAM_ONE: number = BlendFactor.One;\n\t/**混合参数枚举_源颜色,例：RGB(Rs, Gs, Bs)，Alpha(As)。*/\n\tstatic BLENDPARAM_SRC_COLOR: number = BlendFactor.SourceColor;\n\t/**混合参数枚举_一减源颜色,例：RGB(1-Rs, 1-Gs, 1-Bs)，Alpha(1-As)。*/\n\tstatic BLENDPARAM_ONE_MINUS_SRC_COLOR: number = BlendFactor.OneMinusSourceColor;\n\t/**混合参数枚举_目标颜色,例：RGB(Rd, Gd, Bd),Alpha(Ad)。*/\n\tstatic BLENDPARAM_DST_COLOR: number = BlendFactor.DestinationColor;\n\t/**混合参数枚举_一减目标颜色,例：RGB(1-Rd, 1-Gd, 1-Bd)，Alpha(1-Ad)。*/\n\tstatic BLENDPARAM_ONE_MINUS_DST_COLOR: number = BlendFactor.OneMinusDestinationColor;\n\t/**混合参数枚举_源透明,例:RGB(As, As, As),Alpha(1-As)。*/\n\tstatic BLENDPARAM_SRC_ALPHA: number = BlendFactor.SourceAlpha;\n\t/**混合参数枚举_一减源阿尔法,例:RGB(1-As, 1-As, 1-As),Alpha(1-As)。*/\n\tstatic BLENDPARAM_ONE_MINUS_SRC_ALPHA: number = BlendFactor.OneMinusSourceAlpha;\n\t/**混合参数枚举_目标阿尔法，例：RGB(Ad, Ad, Ad),Alpha(Ad)。*/\n\tstatic BLENDPARAM_DST_ALPHA: number = BlendFactor.DestinationAlpha;\n\t/**混合参数枚举_一减目标阿尔法,例：RGB(1-Ad, 1-Ad, 1-Ad),Alpha(Ad)。*/\n\tstatic BLENDPARAM_ONE_MINUS_DST_ALPHA: number = BlendFactor.OneMinusDestinationAlpha;\n\t/**混合参数枚举_阿尔法饱和，例：RGB(min(As, 1 - Ad), min(As, 1 - Ad), min(As, 1 - Ad)),Alpha(1)。*/\n\tstatic BLENDPARAM_SRC_ALPHA_SATURATE: number = BlendFactor.SourceAlphaSaturate;\n\t/**混合参数枚举_混合设置颜色 */\n\tstatic BLENDPARAM_BLENDCOLOR: number = BlendFactor.BlendColor;\n\t/**很合参数枚举_混合颜色取反 */\n\tstatic BLENDPARAM_BLEND_ONEMINUS_COLOR: number = BlendFactor.OneMinusBlendColor;\n\n\t/**混合方程枚举_加法,例：source + destination*/\n\tstatic BLENDEQUATION_ADD: number = BlendEquationSeparate.ADD;\n\t/**混合方程枚举_减法，例：source - destination*/\n\tstatic BLENDEQUATION_SUBTRACT: number = BlendEquationSeparate.SUBTRACT;\n\t/**混合方程枚举_反序减法，例：destination - source*/\n\tstatic BLENDEQUATION_REVERSE_SUBTRACT: number = BlendEquationSeparate.REVERSE_SUBTRACT;\n\t/**混合方程枚举_取最小 TODO */\n\tstatic BLENDEQUATION_MIN: number = BlendEquationSeparate.MIN;\n\t/**混合方程枚举_取最大 TODO*/\n\tstatic BLENDEQUATION_MAX: number = BlendEquationSeparate.MAX;\n\n\t/**深度测试函数枚举_关闭深度测试。*/\n\tstatic DEPTHTEST_OFF: number = CompareFunction.Off;/*WebGLContext.NEVER*/;//TODO:什么鬼\n\t/**深度测试函数枚举_从不通过。*/\n\tstatic DEPTHTEST_NEVER: number = CompareFunction.Never/*WebGLContext.NEVER*/;\n\t/**深度测试函数枚举_小于时通过。*/\n\tstatic DEPTHTEST_LESS: number = CompareFunction.Less/*WebGLContext.LESS*/;\n\t/**深度测试函数枚举_等于时通过。*/\n\tstatic DEPTHTEST_EQUAL: number = CompareFunction.Equal/*WebGLContext.EQUAL*/;\n\t/**深度测试函数枚举_小于等于时通过。*/\n\tstatic DEPTHTEST_LEQUAL: number = CompareFunction.LessEqual/*WebGLContext.LEQUAL*/;\n\t/**深度测试函数枚举_大于时通过。*/\n\tstatic DEPTHTEST_GREATER: number = CompareFunction.Greater/*WebGLContext.GREATER*/;\n\t/**深度测试函数枚举_不等于时通过。*/\n\tstatic DEPTHTEST_NOTEQUAL: number = CompareFunction.NotEqual/*WebGLContext.NOTEQUAL*/;\n\t/**深度测试函数枚举_大于等于时通过。*/\n\tstatic DEPTHTEST_GEQUAL: number = CompareFunction.GreaterEqual/*WebGLContext.GEQUAL*/;\n\t/**深度测试函数枚举_总是通过。*/\n\tstatic DEPTHTEST_ALWAYS: number = CompareFunction.Always/*WebGLContext.ALWAYS*/;\n\n\n\tstatic STENCILTEST_OFF: number = CompareFunction.Off;\n\t/**深度测试函数枚举_从不通过。*/\n\tstatic STENCILTEST_NEVER: number = CompareFunction.Never/*WebGLContext.NEVER*/;\n\t/**深度测试函数枚举_小于时通过。*/\n\tstatic STENCILTEST_LESS: number = CompareFunction.Less/*WebGLContext.LESS*/;\n\t/**深度测试函数枚举_等于时通过。*/\n\tstatic STENCILTEST_EQUAL: number = CompareFunction.Equal/*WebGLContext.EQUAL*/;\n\t/**深度测试函数枚举_小于等于时通过。*/\n\tstatic STENCILTEST_LEQUAL: number = CompareFunction.LessEqual/*WebGLContext.LEQUAL*/;\n\t/**深度测试函数枚举_大于时通过。*/\n\tstatic STENCILTEST_GREATER: number = CompareFunction.Greater/*WebGLContext.GREATER*/;\n\t/**深度测试函数枚举_不等于时通过。*/\n\tstatic STENCILTEST_NOTEQUAL: number = CompareFunction.NotEqual/*WebGLContext.NOTEQUAL*/;\n\t/**深度测试函数枚举_大于等于时通过。*/\n\tstatic STENCILTEST_GEQUAL: number = CompareFunction.GreaterEqual/*WebGLContext.GEQUAL*/;\n\t/**深度测试函数枚举_总是通过。*/\n\tstatic STENCILTEST_ALWAYS: number = CompareFunction.Always/*WebGLContext.ALWAYS*/;\n\t/**保持当前值*/\n\tstatic STENCILOP_KEEP: number = StencilOperation.Keep;\n\t/**将模板缓冲区值设置为0*/\n\tstatic STENCILOP_ZERO: number = StencilOperation.Zero;\n\t/**将模具缓冲区值设置为指定的参考值*/\n\tstatic STENCILOP_REPLACE: number = StencilOperation.Replace;\n\t/**增加当前模具缓冲区值+1 */\n\tstatic STENCILOP_INCR: number = StencilOperation.IncrementSaturate;\n\t/**增加当前模具缓冲区值,超过最大值的时候循环*/\n\tstatic STENCILOP_INCR_WRAP: number = StencilOperation.IncrementWrap;\n\t/**递减当前模板缓冲区的值*/\n\tstatic STENCILOP_DECR: number = StencilOperation.DecrementSaturate;\n\t/**递减当前模板缓冲去的值，小于0时会循环*/\n\tstatic STENCILOP_DECR_WRAP: number = StencilOperation.DecrementWrap;\n\t/**按位反转当前的模板缓冲区的值*/\n\tstatic STENCILOP_INVERT: number = StencilOperation.Invert;\n\n\t/** @internal */\n\tstatic readonly Default: Readonly<RenderState> = new RenderState();\n\n\t/**渲染剔除状态。*/\n\tcull: number;\n\t/**透明混合。*/\n\tblend: number;\n\t/**源混合参数,在blend为BLEND_ENABLE_ALL时生效。*/\n\tsrcBlend: number;\n\t/**目标混合参数,在blend为BLEND_ENABLE_ALL时生效。*/\n\tdstBlend: number;\n\t/**RGB源混合参数,在blend为BLEND_ENABLE_SEPERATE时生效。*/\n\tsrcBlendRGB: number;\n\t/**RGB目标混合参数,在blend为BLEND_ENABLE_SEPERATE时生效。*/\n\tdstBlendRGB: number;\n\t/**Alpha源混合参数,在blend为BLEND_ENABLE_SEPERATE时生效。*/\n\tsrcBlendAlpha: number;\n\t/**Alpha目标混合参数,在blend为BLEND_ENABLE_SEPERATE时生效。*/\n\tdstBlendAlpha: number;\n\t/**混合方程。*/\n\tblendEquation: number;\n\t/**RGB混合方程。*/\n\tblendEquationRGB: number;\n\t/**Alpha混合方程。*/\n\tblendEquationAlpha: number;\n\t/**深度测试函数。*/\n\tdepthTest: number;\n\t/**是否深度测试。*/\n\tdepthWrite: boolean;\n\t/**是否模板写入 */\n\tstencilWrite: boolean;\n\t/**是否开启模板测试 */\n\tstencilTest: number;\n\t/**模板值 一般会在0-255*/\n\tstencilRef: number;\n\t/**模板设置值 */\n\tstencilOp: Vector3;\n\n\t/**\n\t * 创建一个 <code>RenderState</code> 实例。\n\t */\n\tconstructor() {\n\t\tthis.cull = RenderState.CULL_BACK;\n\t\tthis.blend = RenderState.BLEND_DISABLE;\n\t\tthis.srcBlend = RenderState.BLENDPARAM_ONE;\n\t\tthis.dstBlend = RenderState.BLENDPARAM_ZERO;\n\t\tthis.srcBlendRGB = RenderState.BLENDPARAM_ONE;\n\t\tthis.dstBlendRGB = RenderState.BLENDPARAM_ZERO;\n\t\tthis.srcBlendAlpha = RenderState.BLENDPARAM_ONE;\n\t\tthis.dstBlendAlpha = RenderState.BLENDPARAM_ZERO;\n\t\tthis.blendEquation = RenderState.BLENDEQUATION_ADD;\n\t\tthis.blendEquationRGB = RenderState.BLENDEQUATION_ADD;\n\t\tthis.blendEquationAlpha = RenderState.BLENDEQUATION_ADD;\n\t\tthis.depthTest = RenderState.DEPTHTEST_LEQUAL;\n\t\tthis.depthWrite = true;\n\t\tthis.stencilRef = 1;\n\t\tthis.stencilTest = RenderState.STENCILTEST_OFF;\n\t\tthis.stencilWrite = false;\n\t\tthis.stencilOp = new Vector3(RenderState.STENCILOP_KEEP, RenderState.STENCILOP_KEEP, RenderState.STENCILOP_REPLACE);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tsetNull() {\n\t\tthis.cull = null;\n\t\tthis.blend = null;\n\t\tthis.srcBlend = null;\n\t\tthis.dstBlend = null;\n\t\tthis.srcBlendRGB = null;\n\t\tthis.dstBlendRGB = null;\n\t\tthis.srcBlendAlpha = null;\n\t\tthis.dstBlendAlpha = null;\n\t\tthis.blendEquation = null;\n\t\tthis.blendEquationRGB = null;\n\t\tthis.blendEquationAlpha = null;\n\t\tthis.depthTest = null;\n\t\tthis.depthWrite = null;\n\t\tthis.stencilRef = null;\n\t\tthis.stencilTest = null;\n\t\tthis.stencilWrite = null;\n\t\tthis.stencilOp.set(null, null, null);\n\t}\n\n\t/**\n\t * 克隆\n\t * @param dest \n\t */\n\tcloneTo(dest: RenderState) {\n\t\tdest.cull = this.cull;\n\t\tdest.blend = this.blend;\n\t\tdest.srcBlend = this.srcBlend;\n\t\tdest.dstBlend = this.dstBlend;\n\t\tdest.srcBlendRGB = this.srcBlendRGB;\n\t\tdest.dstBlendRGB = this.dstBlendRGB;\n\t\tdest.srcBlendAlpha = this.srcBlendAlpha;\n\t\tdest.dstBlendAlpha = this.dstBlendAlpha;\n\t\tdest.blendEquation = this.blendEquation;\n\t\tdest.blendEquationRGB = this.blendEquationRGB;\n\t\tdest.blendEquationAlpha = this.blendEquationAlpha;\n\t\tdest.depthTest = this.depthTest;\n\t\tdest.depthWrite = this.depthWrite;\n\t\tdest.stencilRef = this.stencilRef;\n\t\tdest.stencilTest = this.stencilTest;\n\t\tdest.stencilWrite = this.stencilWrite;\n\t\tthis.stencilOp.cloneTo(dest.stencilOp);\n\t}\n\n\n\t/**\n\t * 克隆。\n\t * @return\t 克隆副本。\n\t */\n\tclone(): RenderState {\n\t\tvar dest: RenderState = new RenderState();\n\t\tthis.cloneTo(dest);\n\t\treturn dest;\n\t}\n\n}\n\n\n","import { UniformBufferObject } from \"./UniformBufferObject\";\n\n/**\n * 管理\n */\nexport class UniformBufferBase {\n    /**@internal */\n    _singgle: boolean;\n    /**@internal */\n    _mapArray: UniformBufferObject[];\n    /**@internal bind pointer*/\n    _glPointerID: number;\n    /**@internal ubo name*/\n    _blockName: string;\n    /**@internal */\n    _curUniformBuffer:UniformBufferObject;\n    /**\n     * 实例化一个UBOBase\n     * @internal\n     * @param name \n     * @param pointer \n     * @param single \n     */\n    constructor(name: string, pointer: number, single: boolean) {\n        this._mapArray = [];\n        this._blockName = name;\n        this._singgle = single;\n        this._glPointerID = pointer;\n    }\n\n    /**\n     * 增加Buffer\n     * @internal\n     * @param buffer \n     */\n    add(buffer: UniformBufferObject) {\n        let index = this._mapArray.indexOf(buffer);\n        if (index == -1)\n            this._mapArray.push(buffer);\n    }\n\n    /**\n     * 移除Buffer\n     * @internal\n     * @param buffer \n     */\n    splitBuffer(buffer: UniformBufferObject) {\n        let index = this._mapArray.indexOf(buffer);\n        if (index != -1)\n            this._mapArray.splice(index, 1);\n    }\n}","import { BufferUsage, BufferTargetType } from \"./RenderEnum/BufferTargetType\";\nimport { SubUniformBufferData } from \"./SubUniformBufferData\";\nimport { UniformBufferBase } from \"./UniformBufferBase\";\nimport { UnifromBufferData } from \"./UniformBufferData\";\nimport { Buffer } from \"./Buffer\";\nimport { LayaGL } from \"../layagl/LayaGL\";\n/**\n * 类封装WebGL2UniformBufferObect\n */\nexport class UniformBufferObject extends Buffer {\n    static UBONAME_SCENE = \"SceneUniformBlock\";\n    static UBONAME_CAMERA = \"CameraUniformBlock\";\n    static UBONAME_SPRITE3D = \"SpriteUniformBlock\";\n    static UBONAME_SHADOW = \"ShadowUniformBlock\";\n    private static commonMap: string[] = [\"CameraUniformBlock\", \"SceneUniformBlock\", \"SpriteUniformBlock\", \"ShadowUniformBlock\"]\n\n    /**@internal */\n    private static _Map: Map<string, UniformBufferBase> = new Map<string, UniformBufferBase>();\n\n    /**\n     * create Uniform Buffer Base\n     * @param name Uniform block name(must pitch Shader)\n     * @param bufferUsage config usage\n     * @param bytelength byte length\n     * @returns \n     */\n    static create(name: string, bufferUsage: number, bytelength: number, isSingle: boolean = false) {\n        if (!UniformBufferObject._Map.get(name)) {\n            UniformBufferObject._Map.set(name, new UniformBufferBase(name, LayaGL.renderEngine.getUBOPointer(name), isSingle));\n        }\n        let bufferBase = UniformBufferObject._Map.get(name);\n        if (bufferBase._singgle && bufferBase._mapArray.length > 0) {\n            return null;\n        } else {\n            let ubo = LayaGL.renderOBJCreate.createUniformBufferObject(bufferBase._glPointerID, name, bufferUsage, bytelength, isSingle);\n            if(bufferBase._singgle) bufferBase.add(ubo);\n            return ubo;\n        }\n    }\n\n    /**\n     * get Uniform Buffer by name\n     * @param name Uniform block name(must pitch Shader)\n     * @returns \n     */\n    static getBuffer(name: string, index: number) {\n        let base = UniformBufferObject._Map.get(name);\n        if (!base)\n            return null;\n        return base._mapArray[index];\n    }\n\n    /**@interanl */\n    _glPointer: number;\n\n    /**@internal */\n    _updateDataInfo: UnifromBufferData;\n\n    /**@internal */\n    _isSingle: boolean = false;\n\n    /**buffer name */\n    _name: string;\n\n    /**all byte length */\n    byteLength: number;\n\n    /**\n     * @interanl\n     */\n    constructor(glPointer: number, name: string, bufferUsage: BufferUsage, byteLength: number, isSingle: boolean) {\n        super(BufferTargetType.UNIFORM_BUFFER,bufferUsage);\n        this._glPointer = glPointer;\n        this.byteLength = byteLength;\n        this._name = name;\n        this._isSingle = isSingle;\n        this.bind();\n        if (this._isSingle)\n            this._bindUniformBufferBase();\n        this._glBuffer.setDataLength(this.byteLength);\n    }\n\n    /**\n     * differcnt UBO bind Point\n     * @internal\n     */\n    _bindUniformBufferBase() {\n        // const base = UniformBufferObject._Map.get(this._name);\n        // if (base._curUniformBuffer != this) {\n            this._glBuffer.bindBufferBase(this._glPointer);\n            //base._curUniformBuffer = this;\n        // }\n    }\n\n    /**\n     * 绑定一段\n     * @internal\n     */\n    _bindBufferRange(offset: number, byteCount: number) {\n        this.bind();\n        this._glBuffer.bindBufferRange(this._glPointer,offset,byteCount);\n        //gl.bindBufferRange(gl.UNIFORM_BUFFER, this._glPointer, this._glBuffer, offset, byteCount);\n    }\n\n    /**\n     * 重置buffer长度\n     * @param bytelength \n     */\n    _reset(bytelength: number) {\n        \n        //destroy\n        if (this._glBuffer) {\n            this._glBuffer.destroy();\n            this._glBuffer = null;\n        }\n        //create new\n        this._byteLength = this.byteLength = bytelength;\n        this._glBuffer = LayaGL.renderEngine.createBuffer(this._bufferType,this._bufferUsage);\n        if (this._isSingle)\n            this._bindUniformBufferBase();\n        this._glBuffer.setDataLength(this.byteLength);\n    }\n\n    /**\n     * @inheritDoc\n     * @override\n     */\n    bind(): boolean {\n       return this._glBuffer.bindBuffer();\n    }\n\n    /**\n     * set UniformBuffer data by UniformBufferData\n     * @param buffer Float32Array data\n     * @param bufferOffset byteOffset\n     * @param byteCount  byteCount\n     * @returns \n     */\n    setData(buffer: Float32Array, bufferOffset: number = 0, byteCount: number = Number.MAX_SAFE_INTEGER): void {\n        if (byteCount < 0) return;\n        this.bind();\n        var needSubData: boolean = !(bufferOffset == 0 && byteCount == this.byteLength);\n        if (needSubData) {\n            var subData: Uint8Array = new Uint8Array(buffer.buffer, bufferOffset, byteCount);\n            //bufferSubData(this._bufferType, bufferOffset, subData);\n            this._glBuffer.setData(subData,bufferOffset);\n        }\n        else {\n            // let gl = (LayaGL.instance as WebGL2RenderingContext);                                                 \n            // gl.bufferSubData(this._bufferType, bufferOffset, buffer, 0, buffer.length);\n            this._glBuffer.setDataEx(buffer,bufferOffset,buffer.length);\n        }\n    }\n\n    /**\n     * set UniformBuffer data by UniformBufferData\n     * @param bufferData \n     */\n    setDataByUniformBufferData(bufferData: UnifromBufferData) {\n        if (this._updateDataInfo == bufferData) {\n            this.setData(bufferData._buffer, bufferData._updateFlag.x * 4, (bufferData._updateFlag.y - bufferData._updateFlag.x) * 4);\n            bufferData._resetUpdateFlag();\n        } else {\n            this.setData(bufferData._buffer, 0, this.byteLength);\n            bufferData._resetUpdateFlag();\n            this._updateDataInfo = bufferData;\n        }\n    }\n\n    /**\n     * set Data by subUniformBufferData\n     * @param bufferData sub UniformBufferData\n     * @param offset \n     */\n    setDataByByUniformBufferDataOffset(bufferData: SubUniformBufferData, offset: number) {\n        let datalength = bufferData.getbyteLength();//offset\n        let reallength = bufferData._realByte;//update Count\n        bufferData._resetUpdateFlag();\n        //let gl = (LayaGL.instance as WebGL2RenderingContext);\n        this.bind();\n        //gl.bufferSubData(this._bufferType, offset * datalength, bufferData._buffer, 0, reallength / 4);\n        this._glBuffer.setDataEx(bufferData._buffer,offset * datalength,reallength / 4);\n    }\n\n    /**\n\t * @private\n\t */\n\tdestroy(): void {\n\t\tsuper.destroy();\n\t}\n}","import { Config } from \"../../Config\";\nimport { Config3D } from \"../../Config3D\";\nimport { ILaya } from \"../../ILaya\";\nimport { BufferUsage } from \"../RenderEngine/RenderEnum/BufferTargetType\";\nimport { DefineDatas } from \"../RenderEngine/RenderShader/DefineDatas\";\nimport { RenderState } from \"../RenderEngine/RenderShader/RenderState\";\nimport { Shader3D } from \"../RenderEngine/RenderShader/Shader3D\";\nimport { ShaderData, ShaderDataType, ShaderDataItem, ShaderDataDefaultValue } from \"../RenderEngine/RenderShader/ShaderData\";\nimport { ShaderDefine } from \"../RenderEngine/RenderShader/ShaderDefine\";\nimport { UniformBufferObject } from \"../RenderEngine/UniformBufferObject\";\nimport { LayaGL } from \"../layagl/LayaGL\";\nimport { Color } from \"../maths/Color\";\nimport { Matrix3x3 } from \"../maths/Matrix3x3\";\nimport { Matrix4x4 } from \"../maths/Matrix4x4\";\nimport { Vector2 } from \"../maths/Vector2\";\nimport { Vector3 } from \"../maths/Vector3\";\nimport { Vector4 } from \"../maths/Vector4\";\nimport { Loader } from \"../net/Loader\";\nimport { Handler } from \"../utils/Handler\";\nimport { IClone } from \"../utils/IClone\";\nimport { BaseTexture } from \"./BaseTexture\";\nimport { Resource } from \"./Resource\";\nimport { Event } from \"../events/Event\";\n\n\nexport enum MaterialRenderMode {\n    /**渲染状态_不透明。*/\n    RENDERMODE_OPAQUE,\n    /**渲染状态_阿尔法测试。*/\n    RENDERMODE_CUTOUT,\n    /**渲染状态__透明。*/\n    RENDERMODE_TRANSPARENT,\n    /**渲染状态__加色法混合。*/\n    RENDERMODE_ADDTIVE,\n    /**渲染状态_透明混合。*/\n    RENDERMODE_ALPHABLENDED,\n    /**渲染状态_自定义 */\n    RENDERMODE_CUSTOME\n}\n\n/**\n * <code>Material</code> 类用于创建材质。\n */\nexport class Material extends Resource implements IClone {\n    /** 渲染队列_不透明。*/\n    static RENDERQUEUE_OPAQUE: number = 2000;\n    /** 渲染队列_阿尔法裁剪。*/\n    static RENDERQUEUE_ALPHATEST: number = 2450;\n    /** 渲染队列_透明。*/\n    static RENDERQUEUE_TRANSPARENT: number = 3000;\n\n    /**着色器变量,透明测试值。*/\n    static ALPHATESTVALUE: number;\n\n    /**材质级着色器宏定义,透明测试。*/\n    static SHADERDEFINE_ALPHATEST: ShaderDefine;\n    static SHADERDEFINE_MAINTEXTURE: ShaderDefine;\n    static SHADERDEFINE_ADDTIVEFOG: ShaderDefine;\n    /**\n     * 加载材质。\n     * @param url 材质地址。\n     * @param complete 完成回掉。\n     */\n    static load(url: string, complete: Handler): void {\n        ILaya.loader.load(url, complete, null, Loader.MATERIAL);\n    }\n\n    /**\n     * @internal\n     */\n    static __initDefine__(): void {\n        Material.SHADERDEFINE_ALPHATEST = Shader3D.getDefineByName(\"ALPHATEST\");\n        Material.SHADERDEFINE_MAINTEXTURE = Shader3D.getDefineByName(\"MAINTEXTURE\");\n        Material.SHADERDEFINE_ADDTIVEFOG = Shader3D.getDefineByName(\"ADDTIVEFOG\");\n        Material.ALPHATESTVALUE = Shader3D.propertyNameToID(\"u_AlphaTestValue\");\n        Shader3D.CULL = Shader3D.propertyNameToID(\"s_Cull\");\n        Shader3D.BLEND = Shader3D.propertyNameToID(\"s_Blend\");\n        Shader3D.BLEND_SRC = Shader3D.propertyNameToID(\"s_BlendSrc\");\n        Shader3D.BLEND_DST = Shader3D.propertyNameToID(\"s_BlendDst\");\n        Shader3D.BLEND_SRC_RGB = Shader3D.propertyNameToID(\"s_BlendSrcRGB\");\n        Shader3D.BLEND_DST_RGB = Shader3D.propertyNameToID(\"s_BlendDstRGB\");\n        Shader3D.BLEND_SRC_ALPHA = Shader3D.propertyNameToID(\"s_BlendSrcAlpha\");\n        Shader3D.BLEND_DST_ALPHA = Shader3D.propertyNameToID(\"s_BlendDstAlpha\");\n        Shader3D.BLEND_EQUATION = Shader3D.propertyNameToID(\"s_BlendEquation\");\n        Shader3D.BLEND_EQUATION_RGB = Shader3D.propertyNameToID(\"s_BlendEquationRGB\");\n        Shader3D.BLEND_EQUATION_ALPHA = Shader3D.propertyNameToID(\"s_BlendEquationAlpha\");\n        Shader3D.DEPTH_TEST = Shader3D.propertyNameToID(\"s_DepthTest\");\n        Shader3D.DEPTH_WRITE = Shader3D.propertyNameToID(\"s_DepthWrite\");\n        Shader3D.STENCIL_Ref = Shader3D.propertyNameToID(\"s_StencilRef\");\n        Shader3D.STENCIL_TEST = Shader3D.propertyNameToID(\"s_StencilTest\");\n        Shader3D.STENCIL_WRITE = Shader3D.propertyNameToID(\"s_StencilWrite\");\n        Shader3D.STENCIL_Op = Shader3D.propertyNameToID(\"s_StencilOp\");\n    }\n\n    /**@internal */\n    private _matRenderNode: MaterialRenderMode;\n    /** @internal */\n    _shader: Shader3D;\n    /** @private */\n    _shaderValues: ShaderData | null;//TODO:剥离贴图ShaderValue\n    /** 所属渲染队列. */\n    renderQueue: number;\n\n    /**\n     * 着色器数据。\n     */\n    get shaderData(): ShaderData {\n        return this._shaderValues;\n    }\n\n    /**\n     * 透明测试模式裁剪值。\n     */\n    get alphaTestValue(): number {\n        return this._shaderValues.getNumber(Material.ALPHATESTVALUE);\n    }\n\n    set alphaTestValue(value: number) {\n        this._shaderValues.setNumber(Material.ALPHATESTVALUE, value);\n    }\n\n    /**\n     * 是否透明裁剪。\n     */\n    get alphaTest(): boolean {\n        return this.shaderData.hasDefine(Material.SHADERDEFINE_ALPHATEST);\n    }\n\n    set alphaTest(value: boolean) {\n        if (value)\n            this._shaderValues.addDefine(Material.SHADERDEFINE_ALPHATEST);\n        else\n            this._shaderValues.removeDefine(Material.SHADERDEFINE_ALPHATEST);\n    }\n\n    /**\n     * 增加Shader宏定义。\n     * @param value 宏定义。\n     */\n    addDefine(define: ShaderDefine): void {\n        this._shaderValues.addDefine(define);\n    }\n\n    /**\n     * 移除Shader宏定义。\n     * @param value 宏定义。\n     */\n    removeDefine(define: ShaderDefine): void {\n        this._shaderValues.removeDefine(define);\n    }\n\n    /**\n     * 开启 或 关闭 shader 宏定义\n     * @param define \n     * @param value true: addDefine, false: removeDefine\n     */\n    setDefine(define: ShaderDefine, value: boolean) {\n        if (value) {\n            this._shaderValues.addDefine(define);\n        }\n        else {\n            this._shaderValues.removeDefine(define);\n        }\n    }\n\n    /**\n     * 是否包含Shader宏定义。\n     * @param value 宏定义。\n     */\n    hasDefine(define: ShaderDefine): boolean {\n        return this._shaderValues.hasDefine(define);\n    }\n\n    /**\n     * 是否写入深度。\n     */\n    get depthWrite(): boolean {\n        return this._shaderValues.getBool(Shader3D.DEPTH_WRITE);\n    }\n\n    set depthWrite(value: boolean) {\n        this._shaderValues.setBool(Shader3D.DEPTH_WRITE, value);\n    }\n\n\n    /**\n     * 剔除方式。\n     */\n    get cull(): number {\n        return this._shaderValues.getInt(Shader3D.CULL);\n    }\n\n    set cull(value: number) {\n        this._shaderValues.setInt(Shader3D.CULL, value);\n    }\n\n    /**\n     * 混合方式。\n     */\n    get blend(): number {\n        return this._shaderValues.getInt(Shader3D.BLEND);\n    }\n\n    set blend(value: number) {\n        this._shaderValues.setInt(Shader3D.BLEND, value);\n    }\n\n\n    /**\n     * 混合源。\n     */\n    get blendSrc(): number {\n        return this._shaderValues.getInt(Shader3D.BLEND_SRC);\n    }\n\n    set blendSrc(value: number) {\n        this._shaderValues.setInt(Shader3D.BLEND_SRC, value);\n    }\n\n\n\n    /**\n     * 混合目标。\n     */\n    get blendDst(): number {\n        return this._shaderValues.getInt(Shader3D.BLEND_DST);\n    }\n\n    set blendDst(value: number) {\n        this._shaderValues.setInt(Shader3D.BLEND_DST, value);\n    }\n\n    /**\n     * 混合目标 alpha\n     */\n    public get blendSrcAlpha(): number {\n        return this._shaderValues.getInt(Shader3D.BLEND_SRC_ALPHA);\n    }\n    public set blendSrcAlpha(value: number) {\n        this._shaderValues.setInt(Shader3D.BLEND_SRC_ALPHA, value);\n    }\n\n    /**\n     * 混合原 RGB\n     */\n    public get blendSrcRGB(): number {\n        return this._shaderValues.getInt(Shader3D.BLEND_SRC_RGB);\n    }\n    /**\n     * 混合原 RGB\n     */\n    public set blendSrcRGB(value: number) {\n        this._shaderValues.setInt(Shader3D.BLEND_SRC_RGB, value);\n    }\n\n    public get blendDstRGB(): number {\n        return this._shaderValues.getInt(Shader3D.BLEND_DST_RGB);\n    }\n    public set blendDstRGB(value: number) {\n        this._shaderValues.setInt(Shader3D.BLEND_DST_RGB, value);\n    }\n\n    /**\n     * 混合目标 alpha\n     */\n    public get blendDstAlpha(): number {\n        return this._shaderValues.getInt(Shader3D.BLEND_DST_ALPHA);\n    }\n    public set blendDstAlpha(value: number) {\n        this._shaderValues.setInt(Shader3D.BLEND_DST_ALPHA, value);\n    }\n\n    /**\n     * 混合方程\n     */\n    public get blendEquation(): number {\n        return this._shaderValues.getInt(Shader3D.BLEND_EQUATION);\n    }\n    public set blendEquation(value: number) {\n        this._shaderValues.setInt(Shader3D.BLEND_EQUATION, value);\n    }\n\n    /**\n     * 混合方式 RGB\n     */\n    public get blendEquationRGB(): number {\n        return this._shaderValues.getInt(Shader3D.BLEND_EQUATION_RGB);\n    }\n    public set blendEquationRGB(value: number) {\n        this._shaderValues.setInt(Shader3D.BLEND_EQUATION_RGB, value);\n    }\n\n    /**\n     * 混合方式 Alpha\n     */\n    public get blendEquationAlpha(): number {\n        return this._shaderValues.getInt(Shader3D.BLEND_EQUATION_ALPHA);\n    }\n    public set blendEquationAlpha(value: number) {\n        this._shaderValues.setInt(Shader3D.BLEND_EQUATION_ALPHA, value);\n    }\n\n    /**\n     * 深度测试方式。\n     */\n    get depthTest(): number {\n        return this._shaderValues.getInt(Shader3D.DEPTH_TEST);\n    }\n\n    set depthTest(value: number) {\n        this._shaderValues.setInt(Shader3D.DEPTH_TEST, value);\n    }\n\n    /**\n     * 模板测试方式\n     */\n    get stencilTest(): number {\n        return this._shaderValues.getInt(Shader3D.STENCIL_TEST);\n    }\n\n    set stencilTest(value: number) {\n        this._shaderValues.setInt(Shader3D.STENCIL_TEST, value);\n    }\n\n    /**\n     * 是否写入模板。\n     */\n    get stencilWrite(): boolean {\n        return this._shaderValues.getBool(Shader3D.STENCIL_WRITE);\n    }\n\n    set stencilWrite(value: boolean) {\n        this._shaderValues.setBool(Shader3D.STENCIL_WRITE, value);\n    }\n\n    /**\n     * 写入模板值\n     */\n    set stencilRef(value: number) {\n        this._shaderValues.setInt(Shader3D.STENCIL_Ref, value);\n    }\n\n    get stencilRef(): number {\n        return this._shaderValues.getInt(Shader3D.STENCIL_Ref);\n    }\n\n    /** */\n    /**\n     * 写入模板测试设置\n     * vector(fail, zfail, zpass)\n     */\n    set stencilOp(value: Vector3) {\n        this._shaderValues.setVector3(Shader3D.STENCIL_Op, value);\n    }\n\n    get stencilOp(): Vector3 {\n        return this._shaderValues.getVector3(Shader3D.STENCIL_Op);\n    }\n\n    /**\n     * 获得材质属性\n     */\n    get MaterialProperty(): any {\n        let propertyMap: any = {};\n        var shaderValues = this._shaderValues.getData();\n        for (let key in shaderValues) {\n            propertyMap[LayaGL.renderEngine.propertyIDToName(parseInt(key))] = shaderValues[key];\n        }\n        return propertyMap;\n    }\n\n    /**\n     * 获得材质宏\n     */\n    get MaterialDefine(): Array<string> {\n        let shaderDefineArray = new Array<string>();\n        let defineData = this._shaderValues._defineDatas;\n        Shader3D._getNamesByDefineData(defineData, shaderDefineArray);\n        return shaderDefineArray;\n    }\n\n    /**\n     * 渲染模式。\n     */\n    set materialRenderMode(value: MaterialRenderMode) {\n        this._matRenderNode = value;\n        switch (value) {\n            case MaterialRenderMode.RENDERMODE_OPAQUE:\n                this.alphaTest = false;\n                this.renderQueue = Material.RENDERQUEUE_OPAQUE;\n                this.depthWrite = true;\n                //this.cull = RenderState.CULL_BACK;\n                this.blend = RenderState.BLEND_DISABLE;\n                this.depthTest = RenderState.DEPTHTEST_LESS;\n                break;\n            case MaterialRenderMode.RENDERMODE_CUTOUT:\n                this.renderQueue = Material.RENDERQUEUE_ALPHATEST;\n                this.alphaTest = true;\n                this.depthWrite = true;\n                //this.cull = RenderState.CULL_BACK;\n                this.blend = RenderState.BLEND_DISABLE;\n                this.depthTest = RenderState.DEPTHTEST_LESS;\n                break;\n            case MaterialRenderMode.RENDERMODE_TRANSPARENT:\n                this.renderQueue = Material.RENDERQUEUE_TRANSPARENT;\n                this.alphaTest = false;\n                this.depthWrite = false;\n                //this.cull = RenderState.CULL_BACK;\n                this.blend = RenderState.BLEND_ENABLE_ALL;\n                this.blendSrc = RenderState.BLENDPARAM_SRC_ALPHA;\n                this.blendDst = RenderState.BLENDPARAM_ONE_MINUS_SRC_ALPHA;\n                this.depthTest = RenderState.DEPTHTEST_LESS;\n                break;\n            case MaterialRenderMode.RENDERMODE_ADDTIVE:\n                this.renderQueue = Material.RENDERQUEUE_TRANSPARENT;\n                this.alphaTest = false;\n                this.depthWrite = false;\n                //this.cull = RenderState.CULL_NONE;\n                this.blend = RenderState.BLEND_ENABLE_ALL;\n                this.blendSrc = RenderState.BLENDPARAM_SRC_ALPHA;\n                this.blendDst = RenderState.BLENDPARAM_ONE;\n                this.depthTest = RenderState.DEPTHTEST_LESS;\n                this._shaderValues.addDefine(Material.SHADERDEFINE_ADDTIVEFOG);\n                break;\n            case MaterialRenderMode.RENDERMODE_ALPHABLENDED:\n                this.renderQueue = Material.RENDERQUEUE_TRANSPARENT;\n                this.alphaTest = false;\n                this.depthWrite = false;\n                //this.cull = RenderState.CULL_NONE;\n                this.blend = RenderState.BLEND_ENABLE_ALL;\n                this.blendSrc = RenderState.BLENDPARAM_SRC_ALPHA;\n                this.blendDst = RenderState.BLENDPARAM_ONE_MINUS_SRC_ALPHA;\n                this.depthTest = RenderState.DEPTHTEST_LESS;\n                this._shaderValues.removeDefine(Material.SHADERDEFINE_ADDTIVEFOG);\n                break;\n            case MaterialRenderMode.RENDERMODE_CUSTOME:\n                //TODO IDE\n                break;\n            default:\n                console.warn(`Material : renderMode value error - (${value}).`);\n                break;\n        }\n    }\n\n    /**\n     * 获得材质渲染状态\n     */\n    get materialRenderMode() {\n        return this._matRenderNode;\n    }\n\n    /**\n     * 创建一个 <code>Material</code> 实例。\n     */\n    constructor() {\n        super();\n        this._shaderValues = LayaGL.renderOBJCreate.createShaderData(this);\n        this.renderQueue = Material.RENDERQUEUE_OPAQUE;\n        this.alphaTest = false;\n        this.cull = RenderState.CULL_BACK;\n        this.blend = RenderState.BLEND_DISABLE;\n        this.blendSrc = RenderState.BLENDPARAM_ONE;\n        this.blendDst = RenderState.BLENDPARAM_ZERO;\n        this.blendSrcRGB = RenderState.BLENDPARAM_ONE;\n        this.blendDstRGB = RenderState.BLENDPARAM_ZERO;\n        this.blendSrcAlpha = RenderState.BLENDPARAM_ONE;\n        this.blendDstAlpha = RenderState.BLENDPARAM_ZERO;\n        this.blendEquation = RenderState.BLENDEQUATION_ADD;\n        this.blendEquationRGB = RenderState.BLENDEQUATION_ADD;\n        this.blendEquationAlpha = RenderState.BLENDEQUATION_ADD;\n        this.depthTest = RenderState.DEPTHTEST_LEQUAL;\n        this.depthWrite = true;\n        this.stencilRef = 1;\n        this.stencilTest = RenderState.STENCILTEST_OFF;\n        this.stencilWrite = false;\n        this.stencilOp = new Vector3(RenderState.STENCILOP_KEEP, RenderState.STENCILOP_KEEP, RenderState.STENCILOP_REPLACE);\n        this.destroyedImmediately = Config.destroyResourceImmediatelyDefault;\n    }\n\n    /**\n     * @internal\n     * @param shader \n     * @returns \n     */\n    private _bindShaderInfo(shader: Shader3D) {\n        //update UBOData by Shader\n        let subShader = shader.getSubShaderAt(0);//TODO\t\n        // ubo\n        let shaderUBODatas = subShader._uniformBufferDataMap;\n        if (!shaderUBODatas)\n            return;\n        for (let key of shaderUBODatas.keys()) {\n            //create data\n            let uboData = shaderUBODatas.get(key).clone();\n            //create UBO\n            let ubo = UniformBufferObject.create(key, BufferUsage.Dynamic, uboData.getbyteLength(), false);\n            this._shaderValues.setUniformBuffer(Shader3D.propertyNameToID(key), ubo);\n            this._shaderValues._addCheckUBO(key, ubo, uboData);\n        }\n    }\n\n    /**\n     * @internal\n     * 清除UBO\n     * @returns \n     */\n    private _releaseUBOData() {\n        if (!this._shaderValues.uniformBufferDatas) {\n            return;\n        }\n        for (let value of this._shaderValues.uniformBufferDatas.values()) {\n            value.ubo._updateDataInfo.destroy();\n            value.ubo.destroy();\n            value.ubo._updateDataInfo = null;\n        }\n        this._shaderValues.uniformBufferDatas.clear();\n        this._shaderValues.uniformBuffersMap.clear();\n    }\n\n    /**\n     * @inheritDoc\n     * @override\n     */\n    protected _disposeResource(): void {\n        this._releaseUBOData();\n        this._shaderValues.destroy();\n        this._shaderValues = null;\n    }\n\n    get shader() {\n        return this._shader;\n    }\n\n    /**\n     * get all material uniform property \n     * @returns \n     */\n    effectiveProperty() {\n        return this._shader.getSubShaderAt(0)._uniformTypeMap;\n    }\n\n    /**\n     * 设置使用Shader名字。\n     * @param name 名称。\n     */\n    setShaderName(name: string): void {\n        this._shader = Shader3D.find(name);\n        if (!this._shader) {\n            //throw new Error(\"Material: unknown shader name.\");\n            console.warn(`Material: unknown shader name '${name}'`);\n            this._shader = Shader3D.find(\"BLINNPHONG\");\n        }\n\n        if (Config3D._uniformBlock) {\n            this._releaseUBOData();\n            //bind shader info\n            // todo 清理残留 shader data\n            this._bindShaderInfo(this._shader);\n        }\n\n        // set default value\n        // todo subShader 选择\n        let subShader = this._shader.getSubShaderAt(0);\n        let defaultValue = subShader._uniformDefaultValue;\n        let typeMap = subShader._uniformTypeMap;\n        this.applyUniformDefaultValue(typeMap, defaultValue);\n    }\n\n    /**\n     * @internal\n     */\n    applyUniformDefaultValue(typeMap: Map<string, ShaderDataType>, defaultValue: Record<string, ShaderDataItem>) {\n        typeMap.forEach((type, key) => {\n            if (defaultValue && defaultValue[key] != undefined) {\n                let value = defaultValue[key];\n                this.setShaderData(key, type, value);\n            }\n            else {\n                this.setShaderData(key, type, ShaderDataDefaultValue(type));\n            }\n        });\n    }\n\n    /**\n     * 获得bool属性值\n     * @param uniformIndex 属性索引\n     * @returns \n     */\n    getBoolByIndex(uniformIndex: number): boolean {\n        return this.shaderData.getBool(uniformIndex);\n    }\n\n\n    /**\n     * 设置bool值\n     * @param uniformIndex 属性索引\n     * @param value 值\n     */\n    setBoolByIndex(uniformIndex: number, value: boolean) {\n        this.shaderData.setBool(uniformIndex, value);\n    }\n\n    /**\n     * 活得bool值\n     * @param name 属性名称\n     * @returns \n     */\n    getBool(name: string): boolean {\n        let uniformIndex = Shader3D.propertyNameToID(name);\n        return this.getBoolByIndex(uniformIndex);\n    }\n\n    /**\n     * 设置bool值\n     * @param name 属性名称\n     * @param value 值\n     */\n    setBool(name: string, value: boolean) {\n        let uniformIndex = Shader3D.propertyNameToID(name);\n        this.setBoolByIndex(uniformIndex, value);\n    }\n\n    /**\n     * 获得Float值\n     * @param uniformIndex 属性索引\n     * @returns \n     */\n    getFloatByIndex(uniformIndex: number): number {\n        return this.shaderData.getNumber(uniformIndex);\n    }\n\n    /**\n     * 设置Float值\n     * @param uniformIndex 属性索引\n     * @param value 值\n     */\n    setFloatByIndex(uniformIndex: number, value: number) {\n        this.shaderData.setNumber(uniformIndex, value);\n    }\n\n    /**\n     * 获得Float值\n     * @param name 属性名称\n     * @returns \n     */\n    getFloat(name: string): number {\n        let uniformIndex = Shader3D.propertyNameToID(name);\n        return this.getFloatByIndex(uniformIndex);\n    }\n\n    /**\n     * 设置Float值\n     * @param name 属性名称\n     * @param value 值\n     */\n    setFloat(name: string, value: number) {\n        let uniformIndex = Shader3D.propertyNameToID(name);\n        this.setFloatByIndex(uniformIndex, value);\n    }\n\n    /**\n     * 获得Int值\n     * @param uniformIndex 属性索引\n     * @returns \n     */\n    getIntByIndex(uniformIndex: number): number {\n        return this.shaderData.getInt(uniformIndex);\n    }\n\n    /**\n     * 设置Int值\n     * @param uniformIndex 属性索引\n     * @param value 值\n     */\n    setIntByIndex(uniformIndex: number, value: number) {\n        this.shaderData.setInt(uniformIndex, value);\n    }\n\n    /**\n     * 获得Int值\n     * @param name 属性名称\n     * @returns \n     */\n    getInt(name: string): number {\n        let uniformIndex = Shader3D.propertyNameToID(name);\n        return this.getIntByIndex(uniformIndex);\n    }\n\n    /**\n     * 设置Int值\n     * @param name 属性名称\n     * @param value 值\n     */\n    setInt(name: string, value: number) {\n        let uniformIndex = Shader3D.propertyNameToID(name);\n        this.setIntByIndex(uniformIndex, value);\n    }\n\n    /**\n     * 获得Vector2\n     * @param uniformIndex 属性索引\n     * @returns \n     */\n    getVector2ByIndex(uniformIndex: number): Vector2 {\n        return this.shaderData.getVector2(uniformIndex);\n    }\n\n    /**\n     * 设置Vector2\n     * @param uniformIndex 属性索引\n     * @param value 值\n     */\n    setVector2ByIndex(uniformIndex: number, value: Vector2) {\n        this.shaderData.setVector2(uniformIndex, value);\n    }\n\n    /**\n     * 获得Vector2\n     * @param name 属性名称\n     * @returns \n     */\n    getVector2(name: string): Vector2 {\n        let uniformIndex = Shader3D.propertyNameToID(name);\n        return this.getVector2ByIndex(uniformIndex);\n    }\n\n    /**\n     * 设置Vector2\n     * @param name 属性名称\n     * @param value 值\n     */\n    setVector2(name: string, value: Vector2) {\n        let uniformIndex = Shader3D.propertyNameToID(name);\n        this.setVector2ByIndex(uniformIndex, value);\n    }\n\n    /**\n     * 获得Vector3\n     * @param uniformIndex 属性索引\n     * @returns \n     */\n    getVector3ByIndex(uniformIndex: number): Vector3 {\n        return this.shaderData.getVector3(uniformIndex);\n    }\n\n    /**\n     * 设置Vector3\n     * @param uniformIndex 属性索引\n     * @param value 值\n     */\n    setVector3ByIndex(uniformIndex: number, value: Vector3) {\n        this.shaderData.setVector3(uniformIndex, value);\n    }\n\n    /**\n     * 获得Vector3\n     * @param name 属性名称\n     * @returns \n     */\n    getVector3(name: string) {\n        let uniformIndex = Shader3D.propertyNameToID(name);\n        return this.getVector3ByIndex(uniformIndex);\n    }\n\n    /**\n     * 设置Vector3\n     * @param name 属性名称\n     * @param value 值\n     */\n    setVector3(name: string, value: Vector3) {\n        let uniformIndex = Shader3D.propertyNameToID(name);\n        this.setVector3ByIndex(uniformIndex, value);\n    }\n\n    /**\n     * 获得Vector4\n     * @param uniformIndex 属性索引\n     * @param value 值\n     */\n    setVector4ByIndex(uniformIndex: number, value: Vector4) {\n        this.shaderData.setVector(uniformIndex, value);\n    }\n\n    /**\n     * 设置Vector4\n     * @param uniformIndex 属性索引\n     * @returns \n     */\n    getVector4ByIndex(uniformIndex: number): Vector4 {\n        return this.shaderData.getVector(uniformIndex);\n    }\n\n    /**\n     * 设置Vector4\n     * @param name 属性名称\n     * @param value 值\n     */\n    setVector4(name: string, value: Vector4) {\n        let uniformIndex = Shader3D.propertyNameToID(name);\n        this.setVector4ByIndex(uniformIndex, value);\n    }\n\n    /**\n     * 获得Vector4\n     * @param name 属性名称\n     * @returns \n     */\n    getVector4(name: string) {\n        let uniformIndex = Shader3D.propertyNameToID(name);\n        return this.getVector4ByIndex(uniformIndex);\n    }\n\n    /**\n     * 获得Color\n     * @param uniformIndex 属性索引\n     * @returns \n     */\n    getColorByIndex(uniformIndex: number): Color {\n        return this.shaderData.getColor(uniformIndex);\n    }\n\n    /**\n     * 设置Color\n     * @param uniformIndex 属性索引\n     * @param value 值\n     */\n    setColorByIndex(uniformIndex: number, value: Color) {\n        this.shaderData.setColor(uniformIndex, value);\n    }\n\n    /**\n     * 获得Color\n     * @param name 属性名称\n     * @returns \n     */\n    getColor(name: string): Color {\n        let uniformIndex = Shader3D.propertyNameToID(name);\n        return this.shaderData.getColor(uniformIndex);\n    }\n\n    /**\n     * 设置Color\n     * @param name 属性名称\n     * @param value 值\n     */\n    setColor(name: string, value: Color) {\n        let uniformIndex = Shader3D.propertyNameToID(name);\n        this.setColorByIndex(uniformIndex, value);\n    }\n\n    /**\n     * 获得Matrix4x4\n     * @param uniformIndex 属性索引\n     * @returns \n     */\n    getMatrix4x4ByIndex(uniformIndex: number): Matrix4x4 {\n        return this.shaderData.getMatrix4x4(uniformIndex);\n    }\n\n    /**\n     * 设置Matrix4x4\n     * @param uniformIndex 属性索引\n     * @param value 值\n     */\n    setMatrix4x4ByIndex(uniformIndex: number, value: Matrix4x4) {\n        this.shaderData.setMatrix4x4(uniformIndex, value);\n    }\n\n    /**\n     * 获得Matrix4x4\n     * @param name 属性名称\n     * @returns \n     */\n    getMatrix4x4(name: string): Matrix4x4 {\n        let uniformIndex = Shader3D.propertyNameToID(name);\n        return this.getMatrix4x4ByIndex(uniformIndex);\n    }\n\n    /**\n     * 设置Matrix4x4\n     * @param name 属性名称\n     * @param value 值\n     */\n    setMatrix4x4(name: string, value: Matrix4x4) {\n        let uniformIndex = Shader3D.propertyNameToID(name);\n        this.setMatrix4x4ByIndex(uniformIndex, value);\n    }\n\n    /**\n     * 获取 matrix3x3\n     * @param index \n     * @returns \n     */\n    getMatrix3x3ByIndex(index: number) {\n        return this.shaderData.getMatrix3x3(index);\n    }\n\n    /**\n     * 设置 matrix3x3\n     * @param index \n     * @param value \n     */\n    setMatrix3x3ByIndex(index: number, value: Matrix3x3) {\n        this.shaderData.setMatrix3x3(index, value);\n    }\n\n    /**\n     * 获取 matrix3x3\n     * @param name \n     * @returns \n     */\n    getMatrix3x3(name: string): Matrix3x3 {\n        let index = Shader3D.propertyNameToID(name);\n        return this.getMatrix3x3ByIndex(index);\n    }\n\n    /**\n     * 设置 matrix3x3\n     * @param name \n     * @param value \n     */\n    setMatrix3x3(name: string, value: Matrix3x3) {\n        let index = Shader3D.propertyNameToID(name);\n        this.setMatrix3x3ByIndex(index, value);\n    }\n\n    /**\n     * 设置纹理\n     * @param uniformIndex 属性索引\n     * @param texture \n     */\n    setTextureByIndex(uniformIndex: number, texture: BaseTexture) {\n        this.shaderData.setTexture(uniformIndex, texture);\n        if (texture && !texture._texture)//贴图为加载完，需要重设\n            texture.once(Event.READY, this, this.reSetTexture);\n    }\n\n    private reSetTexture(texture: BaseTexture) {\n        let index = this.shaderData.getSourceIndex(texture);\n        if (index != -1) {\n            this.setTextureByIndex(index, texture);\n        }\n    }\n\n    /**\n     * 获得纹理\n     * @param uniformIndex 属性索引\n     * @returns \n     */\n    getTextureByIndex(uniformIndex: number) {\n        return this.shaderData.getTexture(uniformIndex);\n    }\n\n    /**\n     * 设置纹理\n     * @param name 属性名称\n     * @param texture \n     */\n    setTexture(name: string, texture: BaseTexture) {\n        let uniformIndex = Shader3D.propertyNameToID(name);\n        this.setTextureByIndex(uniformIndex, texture);\n    }\n\n    /**\n     * 获得纹理\n     * @param name 属性名称\n     * @returns \n     */\n    getTexture(name: string): BaseTexture {\n        let uniformIndex = Shader3D.propertyNameToID(name);\n        return this.getTextureByIndex(uniformIndex);\n    }\n\n    /**\n     * 获得Buffer\n     * @param uniformIndex 属性索引\n     * @returns \n     */\n    getBufferByIndex(uniformIndex: number): Float32Array {\n        return this.shaderData.getBuffer(uniformIndex);\n    }\n\n    /**\n     * 设置Buffer\n     * @param uniformIndex 属性索引\n     * @param value 值\n     */\n    setBufferByIndex(uniformIndex: number, value: Float32Array) {\n        this.shaderData.setBuffer(uniformIndex, value);\n    }\n\n    /**\n     * 获得Buffer\n     * @param name 属性名称\n     * @returns \n     */\n    getBuffer(name: string): Float32Array {\n        let uniformIndex = Shader3D.propertyNameToID(name);\n        return this.getBufferByIndex(uniformIndex);\n    }\n\n    /**\n     * 设置Buffer\n     * @param name 属性名称\n     * @param value 值\n     */\n    setBuffer(name: string, value: Float32Array) {\n        let uniformIndex = Shader3D.propertyNameToID(name);\n        this.setBufferByIndex(uniformIndex, value);\n    }\n\n    /**\n     * 设置ShaderData的属性值\n     * @param uniformIndex 属性索引\n     * @param type 值类型\n     * @param value 值\n     */\n    setShaderDataByIndex(uniformIndex: number, type: ShaderDataType, value: ShaderDataItem) {\n        this.shaderData.setShaderData(uniformIndex, type, value);\n    }\n\n    /**\n     * 设置ShaderData的属性值\n     * @param name 属性名称\n     * @param type 值类型\n     * @param value 值\n     */\n    setShaderData(name: string, type: ShaderDataType, value: ShaderDataItem) {\n        let uniformIndex = Shader3D.propertyNameToID(name);\n        this.setShaderDataByIndex(uniformIndex, type, value);\n    }\n\n    /**\n     * 获得ShaderData的属性值\n     * @param name 属性名称\n     * @param type 值类型\n     * @returns \n     */\n    getShaderData(name: string, type: ShaderDataType): ShaderDataItem {\n        let uniformIndex = Shader3D.propertyNameToID(name);\n        return this.getShaderDataByIndex(uniformIndex, type);\n    }\n\n    /**\n     * 获得ShaderData的属性值\n     * @param uniformIndex 属性索引\n     * @param type 值类型\n     * @returns \n     */\n    getShaderDataByIndex(uniformIndex: number, type: ShaderDataType): ShaderDataItem {\n        return this._shaderValues.getShaderData(uniformIndex, type);\n    }\n\n    /**\n     * 克隆。\n     * @param\tdestObject 克隆源。\n     */\n    cloneTo(destObject: any): void {\n        var destBaseMaterial: Material = (<Material>destObject);\n        destBaseMaterial.name = this.name;\n        destBaseMaterial.renderQueue = this.renderQueue;\n        destBaseMaterial.setShaderName(this._shader._name);\n        this._shaderValues.cloneTo(destBaseMaterial._shaderValues);\n    }\n\n    /**\n     * 克隆。\n     * @return\t 克隆副本。\n     */\n    clone(): any {\n        var dest: Material = new Material();\n        this.cloneTo(dest);\n        return dest;\n    }\n\n    //--------------------------------------------兼容-------------------------------------------------\n    /**\n     * 设置属性值\n     * @deprecated\n     * @param name \n     * @param value \n     */\n    setShaderPropertyValue(name: string, value: any) {\n        let propertyID = Shader3D.propertyNameToID(name);\n        this.shaderData.setValueData(propertyID, value);\n    }\n\n    /**\n     * 获取属性值\n     * @deprecated\n     * @param name \n     */\n    getShaderPropertyValue(name: string): any {\n        return this.shaderData.getValueData(Shader3D.propertyNameToID(name));\n    }\n\n    get _defineDatas(): DefineDatas {\n        return this._shaderValues._defineDatas;\n    }\n\n    /**\n     * override it\n     */\n    oldparseEndEvent() {\n        //TODO\n    }\n}\n\n\n","import { DDSTextureInfo } from \"../RenderEngine/DDSTextureInfo\";\nimport { KTXTextureInfo } from \"../RenderEngine/KTXTextureInfo\";\nimport { TextureDimension } from \"../RenderEngine/RenderEnum/TextureDimension\";\nimport { TextureFormat } from \"../RenderEngine/RenderEnum/TextureFormat\";\nimport { LayaGL } from \"../layagl/LayaGL\";\nimport { BaseTexture } from \"./BaseTexture\";\n\nexport enum TextureCubeFace {\n    /**+x */\n    PositiveX,\n    /**-x */\n    NegativeX,\n    /**+y */\n    PositiveY,\n    /**-y */\n    NegativeY,\n    /**+z */\n    PositiveZ,\n    /**-z */\n    NegativeZ\n}\n\nconst DEFAULT_PIXELS: Uint8Array = new Uint8Array(4);\n\n/**\n * <code>TextureCube</code> 类用于生成立方体纹理。\n */\nexport class TextureCube extends BaseTexture {\n\n    /**@private*/\n    private static _blackTexture: TextureCube;\n    /**@private*/\n    private static _grayTexture: TextureCube;\n    /**@private*/\n    private static _whiteTexture: TextureCube;\n\n    private static _errorTexture: TextureCube;\n\n    /**\n     * 黑色纯色纹理。\n     */\n    static get blackTexture() {\n        return TextureCube._blackTexture;\n    }\n\n    /**\n     * 灰色纯色纹理。\n     */\n    static get grayTexture() {\n        return TextureCube._grayTexture;\n    }\n\n    /**\n     * 白色纯色纹理。\n     */\n    static get whiteTexture() {\n        return TextureCube._whiteTexture;\n    }\n\n    static get errorTexture() {\n        return TextureCube._errorTexture;\n    }\n\n    /**\n     * @internal\n     */\n    static __init__(): void {\n        var blackTexture: TextureCube = new TextureCube(1, TextureFormat.R8G8B8A8, false);\n        var grayTexture: TextureCube = new TextureCube(1, TextureFormat.R8G8B8A8, false);\n        var writeTexture: TextureCube = new TextureCube(1, TextureFormat.R8G8B8A8, false);\n        var pixels = DEFAULT_PIXELS;\n        pixels[0] = 0, pixels[1] = 0, pixels[2] = 0; pixels[3] = 255;\n        blackTexture.setPixelsData([pixels, pixels, pixels, pixels, pixels, pixels], false, false);\n        blackTexture.lock = true;//锁住资源防止被资源管理释放\n        pixels[0] = 128, pixels[1] = 128, pixels[2] = 128; pixels[3] = 255;\n        grayTexture.setPixelsData([pixels, pixels, pixels, pixels, pixels, pixels], false, false);\n        grayTexture.lock = true;//锁住资源防止被资源管理释放\n        pixels[0] = 255, pixels[1] = 255, pixels[2] = 255; pixels[3] = 255;\n        writeTexture.setPixelsData([pixels, pixels, pixels, pixels, pixels, pixels], false, false);\n        writeTexture.lock = true;\n        TextureCube._grayTexture = grayTexture;\n        TextureCube._blackTexture = blackTexture;\n        TextureCube._whiteTexture = writeTexture;\n        TextureCube._errorTexture = writeTexture;\n    }\n\n    constructor(size: number, format: TextureFormat, mipmap: boolean = true, sRGB: boolean = false, premultiplyAlpha: boolean = false) {\n        super(size, size, format);\n\n        this._dimension = TextureDimension.Cube;\n\n        this._texture = LayaGL.textureContext.createTextureInternal(this._dimension, size, size, format, mipmap, sRGB, premultiplyAlpha);\n        return;\n    }\n\n    // todo source数组 改为 CubeInfo 结构体?\n    setImageData(source: (HTMLImageElement | HTMLCanvasElement | ImageBitmap)[], premultiplyAlpha: boolean, invertY: boolean) {\n        let error = false;\n        let k = source.findIndex(s => s != null);\n        if (k != -1) {\n            let img = source[k];\n            if (!source.every(s => s != null && s.width == img.width && s.height == img.height)) //必须满足所有元素不为null且大小相等\n                error = true;\n        }\n        else\n            error = true;\n\n        let texture = this._texture;\n        if (!error)\n            LayaGL.textureContext.setCubeImageData(texture, source, premultiplyAlpha, invertY);\n        else {\n            let pixels = DEFAULT_PIXELS;\n            LayaGL.textureContext.setCubePixelsData(texture, [pixels, pixels, pixels, pixels, pixels, pixels], premultiplyAlpha, invertY);\n        }\n    }\n\n    setPixelsData(source: ArrayBufferView[], premultiplyAlpha: boolean, invertY: boolean) {\n        let texture = this._texture;\n        LayaGL.textureContext.setCubePixelsData(texture, source, premultiplyAlpha, invertY);\n    }\n\n    updateSubPixelsData(source: ArrayBufferView[], xOffset: number, yOffset: number, width: number, height: number, mipmapLevel: number, generateMipmap: boolean, premultiplyAlpha: boolean, invertY: boolean) {\n        let texture = this._texture;\n        LayaGL.textureContext.setCubeSubPixelData(texture, source, mipmapLevel, generateMipmap, xOffset, yOffset, width, height, premultiplyAlpha, invertY);\n    }\n\n    setDDSData(ddsInfo: DDSTextureInfo) {\n        let texture = this._texture;\n        LayaGL.textureContext.setCubeDDSData(texture, ddsInfo);\n    }\n\n    setKTXData(ktxInfo: KTXTextureInfo) {\n        let texture = this._texture;\n        LayaGL.textureContext.setCubeKTXData(texture, ktxInfo);\n    }\n\n    get defaultTexture(): BaseTexture {\n        return TextureCube.grayTexture;\n    }\n}","import { BlendEquationSeparate } from \"../RenderEngine/RenderEnum/BlendEquationSeparate\";\nimport { BlendFactor } from \"../RenderEngine/RenderEnum/BlendFactor\";\nimport { CompareFunction } from \"../RenderEngine/RenderEnum/CompareFunction\";\nimport { Shader3D } from \"../RenderEngine/RenderShader/Shader3D\";\nimport { ShaderDefine } from \"../RenderEngine/RenderShader/ShaderDefine\";\nimport { Color } from \"../maths/Color\";\nimport { Matrix3x3 } from \"../maths/Matrix3x3\";\nimport { Matrix4x4 } from \"../maths/Matrix4x4\";\nimport { Vector2 } from \"../maths/Vector2\";\nimport { Vector3 } from \"../maths/Vector3\";\nimport { Vector4 } from \"../maths/Vector4\";\nimport { Loader, ILoadURL } from \"../net/Loader\";\nimport { Material } from \"../resource/Material\";\nimport { ClassUtils } from \"../utils/ClassUtils\";\nimport { URL } from \"../net/URL\";\n\nexport class MaterialParser {\n\n    static parse(data: any): Material {\n        let props: any = data.props;\n\n        switch (data.version) {\n            case \"LAYAMATERIAL:01\":\n            case \"LAYAMATERIAL:02\":\n            case \"LAYAMATERIAL:03\":\n                let mat = MaterialParser.parseLegacy(data);\n                mat.oldparseEndEvent();\n                return mat;\n            case \"LAYAMATERIAL:04\":\n                break;\n            default:\n                throw new Error(`unkonwn material version: ${data.version}`);\n        }\n\n        let mat = new Material();\n        mat.setShaderName(props.type);\n        let renderQueue: number;\n        for (let key in props) {\n            switch (key) {\n                case \"type\":\n                case \"name\":\n                    break;\n                case \"defines\":\n                    let defineNames: any[] = props[key];\n                    for (let i = 0, n = defineNames.length; i < n; i++) {\n                        let define: ShaderDefine = Shader3D.getDefineByName(defineNames[i]);//TODO:是否取消defines\n                        mat._shaderValues.addDefine(define);\n                    }\n                    break;\n                case \"textures\":\n                    let textures: any[] = props[key];\n                    for (let i = 0, n = textures.length; i < n; i++) {\n                        let texture: any = textures[i];\n                        let path: string = texture.path;\n                        (path) && (mat._shaderValues.setTexture(Shader3D.propertyNameToID(texture.name), Loader.getBaseTexture(path)));\n                    }\n                    break;\n                case \"renderQueue\":\n                    renderQueue = props[key];\n                    break;\n                case \"alphaTest\":\n                    mat.alphaTest = props[key];\n                    break;\n                case \"materialRenderMode\":\n                    mat.materialRenderMode = props[key];\n                    break;\n                default:\n                    let property = props[key];\n                    let uniName = Shader3D.propertyNameToID(key);\n\n                    switch (uniName) {\n                        case Shader3D.CULL:\n                            mat.cull = property;\n                            break;\n                        case Shader3D.BLEND:\n                            mat.blend = property;\n                            break;\n                        case Shader3D.BLEND_SRC:\n                            mat.blendSrc = property;\n                            break;\n                        case Shader3D.BLEND_DST:\n                            mat.blendDst = property;\n                            break;\n                        case Shader3D.BLEND_DST_ALPHA:\n                            mat.blendDstAlpha = property;\n                            break;\n                        case Shader3D.BLEND_SRC_ALPHA:\n                            mat.blendSrcAlpha = property;\n                            break;\n                        case Shader3D.BLEND_SRC_RGB:\n                            mat.blendSrcRGB = property;\n                            break;\n                        case Shader3D.BLEND_SRC_RGB:\n                            mat.blendDstRGB = property;\n                            break;\n                        case Shader3D.DEPTH_TEST:\n                            mat.depthTest = property;\n                            break;\n                        case Shader3D.DEPTH_WRITE:\n                            mat.depthWrite = !!props[key];\n                            break;\n                        case Shader3D.STENCIL_TEST:\n                            mat.stencilTest = property;\n                            break;\n                        case Shader3D.STENCIL_Op:\n                            mat.stencilOp = property;\n                            break;\n                        case Shader3D.STENCIL_Ref:\n                            mat.stencilRef = property;\n                            break;\n                        case Shader3D.STENCIL_WRITE:\n                            mat.stencilWrite = property;\n                            break;\n                        default:\n                            if (!property.length) {\n                                mat._shaderValues.setNumber(uniName, props[key]);\n                            } else {\n                                var vectorValue = property;\n                                switch (vectorValue.length) {\n                                    case 2:\n                                        mat._shaderValues.setVector2(uniName, new Vector2(vectorValue[0], vectorValue[1]));\n                                        break;\n                                    case 3:\n                                        mat._shaderValues.setVector3(uniName, new Vector3(vectorValue[0], vectorValue[1], vectorValue[2]));\n                                        break;\n                                    case 4:\n                                        if (mat._shaderValues.getColor(uniName)) {\n                                            mat._shaderValues.setColor(uniName, new Color(vectorValue[0], vectorValue[1], vectorValue[2], vectorValue[3]));\n                                        } else\n                                            mat._shaderValues.setVector(uniName, new Vector4(vectorValue[0], vectorValue[1], vectorValue[2], vectorValue[3]));\n                                        break;\n                                    case 9:\n                                        let matrix3 = new Matrix3x3();\n                                        matrix3.elements = new Float32Array(vectorValue);\n                                        mat._shaderValues.setMatrix3x3(uniName, matrix3);\n                                        break;\n                                    case 16:\n                                        let matrix4 = new Matrix4x4();\n                                        matrix4.elements = new Float32Array(vectorValue);\n                                        mat._shaderValues.setMatrix4x4(uniName, matrix4);\n                                        break;\n                                    default:\n                                        mat._shaderValues.setBuffer(uniName, vectorValue);\n                                }\n                            }\n                            break;\n                    }\n            }\n        }\n        if (null != renderQueue) {\n            mat.renderQueue = renderQueue;\n        }\n\n        return mat;\n    }\n\n    static collectLinks(data: any, basePath: string) {\n        let urls: ILoadURL[] = [];\n        let textures: any[] = data.props?.textures;\n        if (textures) {\n            for (let i = 0, n = textures.length; i < n; i++) {\n                let tex2D: any = textures[i];\n                let tex2DPath: string = tex2D.path;\n                if (tex2DPath) {\n                    tex2D.path = URL.join(basePath, tex2DPath);\n                    urls.push({ url: tex2D.path, type: Loader.TEXTURE2D, constructParams: tex2D.constructParams, propertyParams: tex2D.propertyParams });\n                }\n            }\n        }\n        return urls;\n    }\n\n\n    /**\n     * @deprecated\n     * @inheritDoc\n     */\n    static parseLegacy(data: any): Material {\n        let jsonData: any = data;\n        let props: any = jsonData.props;\n\n        let mat: Material;\n        let classType: string = props.type;\n        let clas: any = ClassUtils.getClass(classType);\n        if (!clas && classType && classType.startsWith(\"Laya.\"))\n            clas = ClassUtils.getClass(classType.substring(5));\n        if (clas)\n            mat = new clas();\n        else {\n            mat = new Material();\n            mat.setShaderName(classType);\n        }\n\n        switch (jsonData.version) {\n            case \"LAYAMATERIAL:01\":\n            case \"LAYAMATERIAL:02\":\n                for (let key in props) {\n                    switch (key) {\n                        case \"type\":\n                            break;\n                        case \"vectors\":\n                            let vectors = props[key];\n                            for (let i = 0, n = vectors.length; i < n; i++) {\n                                let vector = vectors[i];\n                                let vectorValue = vector.value;\n                                switch (vectorValue.length) {\n                                    case 2:\n                                        (<any>mat)[vector.name] = new Vector2(vectorValue[0], vectorValue[1]);\n                                        break;\n                                    case 3:\n                                        if ((<any>mat)[vector.name] instanceof Color) {\n                                            (<any>mat)[vector.name] = new Color(vectorValue[0], vectorValue[1], vectorValue[2], 1.0);\n                                        } else\n                                            (<any>mat)[vector.name] = new Vector3(vectorValue[0], vectorValue[1], vectorValue[2]);\n                                        break;\n                                    case 4:\n                                        if ((<any>mat)[vector.name] instanceof Color) {\n                                            (<any>mat)[vector.name] = new Color(vectorValue[0], vectorValue[1], vectorValue[2], vectorValue[3]);\n                                        } else\n                                            (<any>mat)[vector.name] = new Vector4(vectorValue[0], vectorValue[1], vectorValue[2], vectorValue[3]);\n                                        break;\n                                    default:\n                                        throw new Error(\"unkonwn material color length: \" + vectorValue.length);\n                                }\n                            }\n                            break;\n                        case \"colors\":\n                            let colors = props[key];\n                            for (let i = 0, n = colors.length; i < n; i++) {\n                                let color = colors[i];\n                                let vectorValue = color.value;\n                                (<any>mat)[color.name] = new Color(vectorValue[0], vectorValue[1], vectorValue[2], vectorValue[3])\n                            }\n                            break;\n                        case \"textures\":\n                            let textures: any[] = props[key];\n                            for (let i = 0, n = textures.length; i < n; i++) {\n                                let texture: any = textures[i];\n                                let path: string = texture.path;\n                                (path) && ((<any>mat)[texture.name] = Loader.getBaseTexture(path));\n                            }\n                            break;\n                        case \"defines\":\n                            let defineNames: any[] = props[key];\n                            for (let i = 0, n = defineNames.length; i < n; i++) {\n                                let define: ShaderDefine = Shader3D.getDefineByName(defineNames[i]);//TODO:是否取消defines\n                                mat._shaderValues.addDefine(define);\n                            }\n                            break;\n                        case \"renderStates\"://\"LAYAMATERIAL:02\" \n                            let renderStatesData: any[] = props[key];\n                            let renderStateData: any = renderStatesData[0];\n                            mat.blend = renderStateData.blend;\n                            mat.cull = this._getRenderStateParams(renderStateData.cull);\n                            mat.depthTest = this._getRenderStateParams(renderStateData.depthTest);\n                            mat.depthWrite = renderStateData.depthWrite;\n                            mat.blendSrc = this._getRenderStateParams(renderStateData.srcBlend);\n                            mat.blendDst = this._getRenderStateParams(renderStateData.dstBlend);\n                            break;\n                        case \"cull\"://\"LAYAMATERIAL:01\"\n                            mat.cull = this._getRenderStateParams(props[key]);\n                            break;\n                        case \"blend\"://\"LAYAMATERIAL:01\"\n                            mat.blend = this._getRenderStateParams(props[key]);\n                            break;\n                        case \"depthWrite\"://\"LAYAMATERIAL:01\" \n                            mat.depthWrite = !!props[key];\n                            break;\n                        case \"srcBlend\"://\"LAYAMATERIAL:01\" \n                            mat.blendSrc = this._getRenderStateParams(props[key]);\n                            break;\n                        case \"dstBlend\"://\"LAYAMATERIAL:01\" \n                            mat.blendDst = this._getRenderStateParams(props[key]);\n                            break;\n                        case \"depthTest\":\n                            mat.depthTest = this._getRenderStateParams(props[key]);\n                            break;\n                        case \"blendDst\":\n                            mat.blendDst = this._getRenderStateParams(props[key]);\n                            break;\n                        case \"blendSrc\":\n                            mat.blendSrc = this._getRenderStateParams(props[key]);\n                            break;\n                        default:\n                            (<any>mat)[key] = props[key];\n                    }\n                }\n                break;\n            case \"LAYAMATERIAL:03\":\n                for (let key in props) {\n                    switch (key) {\n                        case \"type\":\n                        case \"name\":\n                            break;\n                        case \"defines\":\n                            let defineNames: any[] = props[key];\n                            for (let i = 0, n = defineNames.length; i < n; i++) {\n                                let define: ShaderDefine = Shader3D.getDefineByName(defineNames[i]);//TODO:是否取消defines\n                                mat._shaderValues.addDefine(define);\n                            }\n                            break;\n                        case \"textures\":\n                            let textures: any[] = props[key];\n                            for (let i = 0, n = textures.length; i < n; i++) {\n                                let texture: any = textures[i];\n                                let path: string = texture.path;\n                                (path) && (mat._shaderValues.setTexture(Shader3D.propertyNameToID(texture.name), Loader.getBaseTexture(path)));\n                            }\n                            break;\n                        case \"renderQueue\":\n                            mat.renderQueue = props[key];\n                            break;\n                        default:\n                            let property = props[key];\n                            let uniName = Shader3D.propertyNameToID(key);\n\n                            switch (uniName) {\n                                case Shader3D.CULL:\n                                    mat.cull = this._getRenderStateParams(property);\n                                    break;\n                                case Shader3D.BLEND:\n                                    mat.blend = this._getRenderStateParams(property);\n                                    break;\n                                case Shader3D.BLEND_SRC:\n                                    mat.blendSrc = this._getRenderStateParams(property);\n                                    break;\n                                case Shader3D.BLEND_DST:\n                                    mat.blendDst = this._getRenderStateParams(property);\n                                    break;\n                                case Shader3D.DEPTH_TEST:\n                                    mat.depthTest = this._getRenderStateParams(property);\n                                    break;\n                                case Shader3D.DEPTH_WRITE:\n                                    mat.depthWrite = !!props[key];\n                                    break;\n                                default:\n                                    if (!property.length) {\n                                        mat._shaderValues.setNumber(uniName, props[key]);\n                                    } else {\n                                        var vectorValue = property;\n                                        switch (vectorValue.length) {\n                                            case 2:\n                                                mat._shaderValues.setVector2(uniName, new Vector2(vectorValue[0], vectorValue[1]));\n                                                break;\n                                            case 3:\n                                                mat._shaderValues.setVector3(uniName, new Vector3(vectorValue[0], vectorValue[1], vectorValue[2]));\n                                                break;\n                                            case 4:\n                                                if (mat._shaderValues.getColor(uniName)) {\n                                                    mat._shaderValues.setColor(uniName, new Color(vectorValue[0], vectorValue[1], vectorValue[2], vectorValue[3]));\n                                                } else\n                                                    mat._shaderValues.setVector(uniName, new Vector4(vectorValue[0], vectorValue[1], vectorValue[2], vectorValue[3]));\n                                                break;\n                                            default:\n                                                throw new Error(\"unkonwn material color length: \" + vectorValue.length);\n                                        }\n                                    }\n                                    break;\n                            }\n\n\n                    }\n                }\n                break;\n            default:\n                throw new Error(\"unkonwn material version: \" + jsonData.version);\n        }\n        return mat;\n    }\n\n\n    /**\n        * @deprecated\n        * 兼容Blend数据\n        */\n    private static _getRenderStateParams(type: number) {\n        switch (type) {\n            case 0x0300:\n                return BlendFactor.SourceColor;\n            case 0x0301:\n                return BlendFactor.OneMinusSourceColor;\n            case 0x0306:\n                return BlendFactor.DestinationColor;\n            case 0x0307:\n                return BlendFactor.OneMinusDestinationColor;\n            case 0x0302:\n                return BlendFactor.SourceAlpha;\n            case 0x0303:\n                return BlendFactor.OneMinusSourceAlpha;\n            case 0x0304:\n                return BlendFactor.DestinationAlpha;\n            case 0x0305:\n                return BlendFactor.OneMinusDestinationAlpha;\n            case 0x0308:\n                return BlendFactor.SourceAlphaSaturate;\n            case 0x8006:\n                return BlendEquationSeparate.ADD;\n            case 0x800A:\n                return BlendEquationSeparate.SUBTRACT;\n            case 0x800B:\n                return BlendEquationSeparate.REVERSE_SUBTRACT;\n            case 0x0200:\n                return CompareFunction.Never;\n            case 0x0201:\n                return CompareFunction.Less;\n            case 0x0202:\n                return CompareFunction.Equal;\n            case 0x0203:\n                return CompareFunction.LessEqual;\n            case 0x0204:\n                return CompareFunction.Greater;\n            case 0x0205:\n                return CompareFunction.NotEqual;\n            case 0x0206:\n                return CompareFunction.GreaterEqual;\n            case 0x0207:\n                return CompareFunction.Always;\n            default:\n                return type;\n        }\n    }\n}","import { IResourceLoader, ILoadTask, ILoadURL, Loader } from \"../net/Loader\";\nimport { URL } from \"../net/URL\";\nimport { Shader3D } from \"../RenderEngine/RenderShader/Shader3D\";\nimport { AssetDb } from \"../resource/AssetDb\";\nimport { Material } from \"../resource/Material\";\nimport { MaterialParser } from \"./MaterialParser\";\n\nclass MaterialLoader implements IResourceLoader {\n    load(task: ILoadTask) {\n        return task.loader.fetch(task.url, \"json\", task.progress.createCallback(0.3), task.options).then(data => {\n            if (!data)\n                return null;\n\n            let basePath = URL.getPath(task.url);\n            let urls: Array<ILoadURL | string> = MaterialParser.collectLinks(data, basePath);\n\n            if (data.version === \"LAYAMATERIAL:04\") {\n                let shaderName = data.props.type;\n                if (!Shader3D.find(shaderName)) {\n                    let url = AssetDb.inst.shaderName_to_URL(shaderName);\n                    if (url)\n                        urls.push(url);\n                    else {\n                        return AssetDb.inst.shaderName_to_URL_async(shaderName).then(url => {\n                            if (url)\n                                urls.push(url);\n                            else if (data.props.shaderPath)\n                                urls.push(URL.join(basePath, data.props.shaderPath));\n                            else\n                                Loader.warn(`unknown shaderName: ${shaderName}`);\n                            return this.load2(task, data, urls);\n                        });\n                    }\n                }\n            }\n\n            return this.load2(task, data, urls);\n        });\n    }\n\n    private load2(task: ILoadTask, data: any, urls: Array<any>): Promise<any> {\n        if (urls.length == 0) {\n            let mat = MaterialParser.parse(data);\n            let obsoluteInst = <Material>task.obsoluteInst;\n            if (obsoluteInst)\n                mat = this.move(obsoluteInst, mat);\n            return Promise.resolve(mat);\n        }\n\n        return task.loader.load(urls, task.options, task.progress.createCallback()).then(() => {\n            let mat = MaterialParser.parse(data);\n\n            let obsoluteInst = <Material>task.obsoluteInst;\n            if (task.obsoluteInst)\n                mat = this.move(obsoluteInst, mat);\n            return mat;\n        });\n    }\n\n    private move(obsoluteInst: Material, mat: Material) {\n        obsoluteInst._shaderValues.reset();\n        obsoluteInst.setShaderName(mat._shader.name);\n        mat._shaderValues.cloneTo(obsoluteInst._shaderValues);\n        obsoluteInst.renderQueue = mat.renderQueue;\n        obsoluteInst.materialRenderMode = mat.materialRenderMode;\n        obsoluteInst.obsolute = false;\n        mat.destroy();\n        return obsoluteInst;\n    }\n}\n\nLoader.registerLoader([\"lmat\"], MaterialLoader, Loader.MATERIAL);","export class ParseJSON {\n    static parse(str: string) {\n        return this.parseStart(str);\n    }\n\n    private static findIndex(str: string, i: number, fstr: string, len: number) {\n        var fi = str.indexOf(fstr, i + 1);\n        if (0 > fi) {\n            fi = len;\n        }\n        return { str: str.substring(i + 1, fi), i: fi };\n\n    }\n    private static finCurrObj(): any {\n        this.type = 1;\n        if (null == this.cobj) {\n            return null;\n        }\n        if (0 == this.currArr.length) {\n            if (this.cobj.k) {\n                this.ret[this.cobj.k] = this.cobj.val;\n            }\n            return null;\n        } else {\n            var pobj = this.currArr.pop()!;\n            if (this.cobj.k) {\n                if (Array.isArray(pobj.val)) {\n                    if (null != this.cobj.k) {\n                        var obj: any = {};\n                        obj[this.cobj.k] = this.cobj.val;\n                        pobj.val.push(obj);\n                    } else {\n                        //没有key，应该创建的时候已经push进去了\n                        //pobj.val.push(cobj.val);\n                    }\n                } else {\n                    pobj.val[this.cobj.k] = this.cobj.val;\n                }\n            } else if (Array.isArray(this.cobj.val)) {\n                if (Array.isArray(pobj.val)) {\n                    pobj.val.push(this.cobj.val);\n                } else {\n                    pobj.val = this.cobj.val;\n                }\n            } else {\n                //console.log(\"应该是已经被push过的obj对象，无需处理\");\n            }\n            return pobj;\n        }\n    }\n\n    private static formatVal(str: string | null) {\n        if (null == str) {\n            return null;\n        }\n        var numVal = Number(str);\n        if (!isNaN(numVal)) {\n            return numVal;\n        }\n\n        if (\"false\" == str.toLowerCase()) {\n            return false;\n        } else if (\"true\" == str.toLowerCase()) {\n            return true;\n        } else if (\"null\" == str) {\n            return null;\n        }\n\n\n        return str;\n    }\n\n    private static len: number;\n    private static ret: any;\n    private static currStr: string | null;\n    private static currArr: { k?: string, val: any }[];\n    private static cobj: any;\n    /**type为0代表没有找到任何状态，1为当前在寻找key，2为当前在寻找val */\n    private static type: number;\n\n    private static finCurrStr() {\n        if (null != this.currStr) {\n            this.currStr = this.currStr.trim();\n            if (\"\" != this.currStr) {\n                if (null != this.cobj) {\n                    if (Array.isArray(this.cobj.val)) {\n                        this.cobj.val.push(this.formatVal(this.currStr));\n                    } else {\n                        this.cobj.val = this.formatVal(this.currStr);\n                        this.cobj = this.finCurrObj();\n                    }\n                }\n                this.currStr = \"\";\n            }\n        }\n    }\n\n\n    private static parseStart(str: string) {\n        this.len = str.length;\n        var i = 0;\n        this.ret = {};\n        this.currStr = null;\n        this.currArr = [];\n        this.cobj = null;\n        this.type = 0;\n\n\n        while (i < this.len) {\n            var c = str.charAt(i);\n            if (\"/\" == c) {\n                if (i + 1 < this.len) {\n                    i += 1;\n                    var cNext = str.charAt(i);\n                    var cstr = null;\n                    if (\"/\" == cNext) {\n                        //单行注释\n                        cstr = \"\\n\";\n                    } else if (\"*\" == cNext) {\n                        //多行注释\n                        cstr = \"*/\"\n                    }\n                    if (null != cstr) {\n\n\n\n                        this.finCurrStr();\n\n\n                        var fi = str.indexOf(cstr, i);\n                        if (0 > fi) {\n                            console.log(\"没有找到注释结尾，应该是一直注释到最后了\");\n                            i = this.len;\n                        } else {\n                            i = fi + cstr.length - 1;\n                        }\n                    }\n                }\n            } else if (\"}\" == c) {\n                if (null != this.cobj) {\n                    this.finCurrStr();\n                    if (null != this.cobj) {\n                        this.cobj = this.finCurrObj();\n                    }\n                }\n                this.currStr = \"\";\n                this.type = 1;\n                //obj结束\n            } else if (\"{\" == c) {\n                this.currStr = \"\";\n                this.type = 1;\n\n\n\n\n            } else if (\"'\" == c || \"\\\"\" == c || \"‘\" == c || \"“\" == c) {\n                //检测发现这里是字符串\n                if (\"‘\" == c) {\n                    c = \"’\";\n                } else if (\"“\" == c) {\n                    c = \"”\";\n                }\n                var obj = this.findIndex(str, i, c, this.len);\n\n                if (2 == this.type && null != this.cobj && Array.isArray(this.cobj.val)) {\n                    if (null != this.currStr) {\n                        this.currStr = this.currStr.trim();\n                        if (\"\" != this.currStr) {\n                            this.cobj.val.push(this.formatVal(this.currStr));\n                        }\n                    }\n                    this.cobj.val.push(obj.str);\n                    this.currStr = \"\";\n                } else if (null != this.currStr) {\n                    this.currStr += obj.str;\n                }\n                i = obj.i;\n            } else if (\";\" == c || \",\" == c || \"\\n\" == c) {\n                this.finCurrStr();\n            } else if (\"]\" == c) {\n                //数组结束\n                if (null != this.currStr && null != this.cobj && Array.isArray(this.cobj.val)) {\n                    this.currStr = this.currStr.trim();\n                    if (\"\" != this.currStr) {\n                        this.cobj.val.push(this.formatVal(this.currStr));\n                    }\n                }\n                if (null != this.cobj) {\n                    //数组需要完成两次才算结束出去\n                    this.cobj = this.finCurrObj();\n                    this.cobj = this.finCurrObj();\n                }\n                this.currStr = \"\";\n            } else if (\"[\" == c) {\n                if (2 != this.type) {\n                    console.warn(\"没有key值，忽略掉一个数组\");\n                } else {\n                    if (null != this.cobj) {\n                        this.currArr.push(this.cobj);\n                    }\n                    this.cobj = { val: [] };\n                }\n            } else if (\":\" == c) {\n                if (null != this.currStr && 1 == this.type) {\n                    this.type = 2;\n                    if (null != this.cobj) {\n                        this.currArr.push(this.cobj);\n                    }\n                    if (null != this.cobj && Array.isArray(this.cobj.val)) {\n                        //数组中的obj对象 eg: {b:[{aa:3,bb:4}],}\n                        var pcobj = this.cobj;\n                        this.cobj = { val: {} };\n                        pcobj.val.push(this.cobj.val);\n                        this.currArr.push(this.cobj);\n\n                    }\n                    this.cobj = { k: this.currStr.trim(), val: {} };\n\n\n\n                    this.currStr = \"\";\n                }\n            } else if (null != this.currStr) {\n                this.currStr += c;\n            }\n            i++;\n        }\n        return this.ret;\n    }\n\n\n}","import { Shader3D, IShaderObjStructor, IShaderpassStructor } from \"../RenderEngine/RenderShader/Shader3D\";\nimport { ShaderDataType } from \"../RenderEngine/RenderShader/ShaderData\";\nimport { ParseJSON } from \"../utils/ParseJSON\";\nimport { Color } from \"../maths/Color\";\nimport { Matrix3x3 } from \"../maths/Matrix3x3\";\nimport { Matrix4x4 } from \"../maths/Matrix4x4\";\nimport { Vector2 } from \"../maths/Vector2\";\nimport { Vector3 } from \"../maths/Vector3\";\nimport { Vector4 } from \"../maths/Vector4\";\nimport { Texture2D } from \"../resource/Texture2D\";\nimport { TextureCube } from \"../resource/TextureCube\";\n\n\nconst CGBlock: string[] = [\"GLSL Start\", \"GLSL End\"];\nconst split: string[] = [\"#defineGLSL\", \"#endGLSL\"];\nconst shaderBlock: string[] = [\"Shader3D Start\", \"Shader3D End\"];\nconst shaderDataOBJ: Record<string, ShaderDataType> = {\n    \"Color\": ShaderDataType.Color,\n    \"Int\": ShaderDataType.Int,\n    \"Bool\": ShaderDataType.Bool,\n    \"Float\": ShaderDataType.Float,\n    \"Vector2\": ShaderDataType.Vector2,\n    \"Vector3\": ShaderDataType.Vector3,\n    \"Vector4\": ShaderDataType.Vector4,\n    \"Matrix4x4\": ShaderDataType.Matrix4x4,\n    \"Matrix3x3\": ShaderDataType.Matrix3x3,\n    \"Texture2D\": ShaderDataType.Texture2D,\n    \"TextureCube\": ShaderDataType.TextureCube,\n    \"Texture2DArray\": ShaderDataType.Texture2DArray,\n    \"Texture3D\": ShaderDataType.Texture3D,\n};\n\n//TODO 格式改变\nexport class ShaderParser {\n\n    static parse(data: string, basePath?: string): Shader3D {\n        let obj = ShaderParser.getShaderBlock(data);\n        let cgmap = ShaderParser.getCGBlock(data);\n        ShaderParser.bindCG(obj, cgmap);\n        let shader = Shader3D.parse(obj, basePath);\n        return shader;\n    }\n\n    static compileToTree(sliceFlag: string[], data: string, sliceIndex: number): string[] {\n        if (sliceIndex == sliceFlag.length)\n            return [data];\n        let slicedata = sliceFlag[sliceIndex];\n        let splitmap = data.split(slicedata);\n        if (splitmap.length == 1)\n            return splitmap;\n        let map: string[] = [];\n        for (let i = 0, n = splitmap.length; i < n; i++) {\n            map = map.concat(ShaderParser.compileToTree(sliceFlag, splitmap[i], sliceIndex + 1));\n            (i != n - 1) && map.push(slicedata);\n        }\n        return map;\n    }\n\n    static getMapKey(value: string) {\n        let index = value.indexOf(\"\\n\");\n        value = value.slice(0, index).replace(\"\\r\", \"\");\n        value = value.slice(0, index).replace(\" \", \"\");\n        value = value.trim();\n        return value;\n    }\n\n    /**\n     * get Shader Data\n     */\n    static getShaderBlock(source: string) {\n        let shaderObj: IShaderObjStructor = null;\n        try {\n            let i1 = source.indexOf(shaderBlock[0]);\n            if (i1 == -1)\n                throw new Error(`no '${shaderBlock[0]}' tag`);\n            let i2 = source.indexOf(shaderBlock[1]);\n            if (i2 == -1)\n                throw new Error(`no '${shaderBlock[1]}' tag`);\n            let shaderData = source.substring(i1 + shaderBlock[0].length, i2);\n            shaderObj = ParseJSON.parse(shaderData);//TODO new FIle parse(1、去掉繁琐的json格式报错，2、可以有注释)\n        } catch (err: any) {\n            console.error(\"Shader parse error: \" + err + \"\\n\" + source.substring(0, 100) + \"...\");\n        }\n        return shaderObj;\n    }\n\n    /**\n     * get CG data for map\n     * @param source \n     * @returns \n     */\n    static getCGBlock(source: string): { [key: string]: string } {\n        let cgmap: { [key: string]: string } = {};\n        try {\n            let i1 = source.indexOf(CGBlock[0]);\n            if (i1 == -1)\n                throw new Error(`no '${shaderBlock[0]}' tag`);\n            let i2 = source.indexOf(CGBlock[1]);\n            if (i2 == -1)\n                throw new Error(`no '${shaderBlock[1]}' tag`);\n            let cgdata = source.substring(i1, i2);\n            let map = ShaderParser.compileToTree(split, cgdata, 0);\n            for (let i = 0, n = map.length; i < n; i++) {\n                let value = map[i];\n                if (value == split[0]) {\n                    i += 1\n                    let datavalue = map[i];\n                    let key = ShaderParser.getMapKey(datavalue);\n                    cgmap[key] = datavalue.slice(datavalue.indexOf(\"\\n\"), datavalue.length - 1);\n                }\n            }\n        } catch (err: any) {\n            console.error(\"Shader parse error: \" + err + \"\\n\" + source.substring(0, 100) + \"...\");\n        }\n        return cgmap;\n    }\n\n    static bindCG(shaderObj: IShaderObjStructor, cgmap: { [key: string]: string }) {\n        //pass trans\n        let passArray = shaderObj.shaderPass as Array<IShaderpassStructor>;\n        if (passArray) {\n            passArray.forEach(element => {\n                if (element.VS) {\n                    element.VS = cgmap[element.VS];\n                }\n                if (element.FS) {\n                    element.FS = cgmap[element.FS];\n                }\n            });\n        }\n        //attribute map trans\n        let attributemap = shaderObj.attributeMap;\n        if (attributemap) {\n            let indexofAttribute = 0;\n            for (let i in attributemap) {\n                //TODO  这里的格式要重新理 \"name\":type or \"name\":[type,custom Attribute Location]\n                if (attributemap[i] instanceof Array) {\n                    let dataArray = attributemap[i];\n                    let type = ShaderParser.getShaderDataType(dataArray[0]);\n                    if (type == null) {\n                        console.warn(`${shaderObj.name}: unkown attribute type '${dataArray[0]}'`);\n                        continue;\n                    }\n                    attributemap[i] = [dataArray[1], type];\n                } else {\n                    let type = ShaderParser.getShaderDataType(attributemap[i]);\n                    if (type == null) {\n                        console.warn(`${shaderObj.name}: unkown attribute type '${attributemap[i]}'`);\n                        continue;\n                    }\n                    attributemap[i] = [indexofAttribute, type];\n                    indexofAttribute++;\n                }\n\n            }\n        }\n        //uniform map trans\n        let uniformMap = shaderObj.uniformMap;\n        if (uniformMap) {\n            let defaultmap: any = {};\n            shaderObj.defaultValue = defaultmap;\n\n            let newUniformMap: any = {};\n            shaderObj.uniformMap = newUniformMap;\n\n            for (let k in uniformMap) {\n                let entry = uniformMap[k];\n                if (entry.serializable === false)\n                    continue;\n\n                let dataType = ShaderParser.getShaderDataType(entry.type);\n                if (dataType == null) {\n                    console.warn(`${shaderObj.name}: unkown uniform type '${entry.type}'`);\n                    continue;\n                }\n\n                if (entry.default != null)\n                    defaultmap[k] = ShaderParser.getDefaultData(dataType, entry.default);\n\n                if (entry.block) {\n                    let block: Record<string, ShaderDataType> = newUniformMap[entry.block];\n                    if (!block)\n                        newUniformMap[entry.block] = block = {};\n                    block[k] = dataType;\n                }\n                else\n                    newUniformMap[k] = dataType;\n            }\n        }\n    }\n\n    /**\n     * trans string to ShaderDataType\n     * @param value \n     * @returns \n     */\n    static getShaderDataType(value: string): ShaderDataType {\n        return shaderDataOBJ[value];\n    }\n\n    /**\n     * set ShaderData Value\n     * @param type \n     * @param data \n     * @returns \n     */\n    static getDefaultData(type: ShaderDataType, data: any) {\n        switch (type) {\n            case ShaderDataType.Int:\n            case ShaderDataType.Float:\n            case ShaderDataType.Bool:\n                return data;\n            case ShaderDataType.Vector2:\n                return new Vector2(data[0], data[1]);\n            case ShaderDataType.Vector3:\n                return new Vector3(data[0], data[1], data[2]);\n            case ShaderDataType.Vector4:\n                return new Vector4(data[0], data[1], data[2], data[3]);\n            case ShaderDataType.Color:\n                return new Color(data[0], data[1], data[2], data[3]);\n            case ShaderDataType.Matrix4x4:\n                let mat = new Matrix4x4();\n                mat.cloneByArray(data);\n                return mat;\n            case ShaderDataType.Matrix3x3:\n                let mat3 = new Matrix3x3();\n                mat3.cloneByArray(data);\n                return mat3;\n            case ShaderDataType.Texture2D:\n                let tex = null;\n                if (data == \"white\")\n                    tex = Texture2D.whiteTexture;\n                else if (data == \"black\")\n                    tex = Texture2D.blackTexture;\n                else if (data == \"gray\")\n                    tex = Texture2D.grayTexture;\n                else if (data == \"normal\")\n                    tex = Texture2D.normalTexture;\n                return tex;\n            case ShaderDataType.TextureCube:\n                let texcube = TextureCube.grayTexture;\n                if (data == \"white\")\n                    texcube = TextureCube.whiteTexture;\n                else if (data == \"black\")\n                    texcube = TextureCube.blackTexture;\n                else if (data == \"gray\")\n                    texcube = TextureCube.grayTexture;\n                return texcube;\n        }\n    }\n}","\nimport { IShaderpassStructor, Shader3D } from \"../RenderEngine/RenderShader/Shader3D\";\nimport { SubShader } from \"../RenderEngine/RenderShader/SubShader\";\nimport { IResourceLoader, ILoadTask, Loader } from \"../net/Loader\";\nimport { AssetDb } from \"../resource/AssetDb\";\nimport { ShaderCompile } from \"../webgl/utils/ShaderCompile\";\nimport { URL } from \"../net/URL\";\nimport { ShaderParser } from \"./ShaderParser\";\n\nclass ShaderLoader implements IResourceLoader {\n    load(task: ILoadTask) {\n        let url = task.url;\n        if (task.ext === \"bps\")\n            url = AssetDb.inst.getSubAssetURL(url, task.uuid, \"0\", \"shader\");\n\n        return task.loader.fetch(url, \"text\", task.progress.createCallback(), task.options).then(data => {\n            if (!data)\n                return null;\n\n            let obj = ShaderParser.getShaderBlock(data);\n            let cgmap = ShaderParser.getCGBlock(data);\n            ShaderParser.bindCG(obj, cgmap);\n\n            if (!obj.name || !obj.uniformMap)\n                return null;\n\n            let basePath = URL.getPath(task.url);\n            let passArray: IShaderpassStructor[] = obj.shaderPass;\n            return Promise.all(passArray.map(pass => ShaderCompile.compileAsync(pass.VS, pass.FS, basePath))).then(compiledObjs => {\n                if (compiledObjs.findIndex(obj => obj == null) != -1) {\n                    Loader.warn(\"some pass null \" + task.url);\n                    return null;\n                }\n\n                let shader = Shader3D.add(obj.name, obj.enableInstancing, obj.supportReflectionProbe);\n                shader._surportVolumetricGI = obj.surportVolumetricGI;\n                let subshader = new SubShader(obj.attributeMap ? obj.attributeMap : SubShader.DefaultAttributeMap, obj.uniformMap, obj.defaultValue);\n                shader.addSubShader(subshader);\n\n                for (let i in passArray) {\n                    let pass = subshader._addShaderPass(compiledObjs[i], passArray[i].pipeline);\n                    pass.statefirst = passArray[i].statefirst ?? false;\n                    ShaderCompile.getRenderState(passArray[i].renderState, pass.renderState);\n                }\n                return shader;\n            });\n        });\n    }\n}\n\nLoader.registerLoader([\"shader\", \"bps\"], ShaderLoader);","import { IResourceLoader, ILoadTask, Loader } from \"../../net/Loader\";\nimport { WebAudioSound } from \"./WebAudioSound\";\n\nclass WebAudioLoader implements IResourceLoader {\n    load(task: ILoadTask) {\n        return task.loader.fetch(task.url, \"arraybuffer\", task.progress.createCallback(), task.options).then(data => {\n            if (!data)\n                return null;\n\n            return WebAudioSound.ctx.decodeAudioData(data);\n        });\n    }\n}\n\nLoader.registerLoader([\"mp3\", \"wav\", \"ogg\"], WebAudioLoader, Loader.SOUND);","import { ClassUtils } from \"./utils/ClassUtils\";\nimport { Component } from \"./components/Component\";\nimport { Animation } from \"./display/Animation\";\nimport { AnimationBase } from \"./display/AnimationBase\";\nimport { BitmapFont } from \"./display/BitmapFont\";\nimport { EffectAnimation } from \"./display/EffectAnimation\";\nimport { FrameAnimation } from \"./display/FrameAnimation\";\nimport { Input } from \"./display/Input\";\nimport { Node } from \"./display/Node\";\nimport { Scene } from \"./display/Scene\";\nimport { Sprite } from \"./display/Sprite\";\nimport { Stage } from \"./display/Stage\";\nimport { Text } from \"./display/Text\";\nimport { BlurFilter } from \"./filters/BlurFilter\";\nimport { ColorFilter } from \"./filters/ColorFilter\";\nimport { GlowFilter } from \"./filters/GlowFilter\";\nimport { Point } from \"./maths/Point\";\nimport { Rectangle } from \"./maths/Rectangle\";\nimport { SoundNode } from \"./media/SoundNode\";\nimport { VideoNode } from \"./media/VideoNode\";\nimport { Texture } from \"./resource/Texture\";\nimport { Texture2D } from \"./resource/Texture2D\";\nimport { Animator2D } from \"./components/Animator2D\";\nimport { AnimatorControllerLayer2D } from \"./components/AnimatorControllerLayer2D\";\nimport { AnimatorState2D } from \"./components/AnimatorState2D\";\nimport { AnimationClip2D } from \"./components/AnimationClip2D\";\nimport { Animation2DParm } from \"./components/Animation2DParm\";\nimport { Animation2DCondition } from \"./components/Animation2DCondition\";\nimport { Prefab } from \"./resource/HierarchyResource\";\nimport { Widget } from \"./components/Widget\";\nimport { AnimatorController2D } from \"./components/AnimatorController2D\";\nimport { Vector2 } from \"./maths/Vector2\";\nimport { Vector3 } from \"./maths/Vector3\";\nimport { Vector4 } from \"./maths/Vector4\";\nimport { Quaternion } from \"./maths/Quaternion\";\nimport { Color } from \"./maths/Color\";\nimport { Script } from \"./components/Script\";\nimport { Matrix } from \"./maths/Matrix\";\nimport { Matrix3x3 } from \"./maths/Matrix3x3\";\nimport { Matrix4x4 } from \"./maths/Matrix4x4\";\n\nimport \"./loaders/TextResourceLoader\";\nimport \"./loaders/AtlasLoader\";\nimport \"./loaders/HierarchyLoader\";\nimport \"./loaders/TextureLoader\";\nimport \"./loaders/AnimationClip2DLoader\";\nimport \"./loaders/AnimationController2DLoader\";\nimport \"./loaders/NullLoader\";\nimport \"./loaders/BitmapFontLoader\";\nimport \"./loaders/TTFFontLoader\";\nimport \"./loaders/MaterialLoader\";\nimport \"./loaders/ShaderLoader\";\nimport \"./media/webaudio/WebAudioLoader\";\n\nlet c = ClassUtils.regClass;\n\nc(\"Record\", Object);\nc(\"Node\", Node);\nc(\"Sprite\", Sprite);\nc(\"Widget\", Widget);\nc(\"Text\", Text);\nc(\"Input\", Input);\nc(\"AnimationBase\", AnimationBase);\nc(\"Animation\", Animation);\nc(\"FrameAnimation\", FrameAnimation);\nc(\"EffectAnimation\", EffectAnimation);\nc(\"SoundNode\", SoundNode);\nc(\"VideoNode\", VideoNode);\n\nc(\"Scene\", Scene);\nc(\"Stage\", Stage);\nc(\"Component\", Component);\nc(\"Script\", Script);\nc(\"BitmapFont\", BitmapFont);\nc(\"BlurFilter\", BlurFilter);\nc(\"ColorFilter\", ColorFilter);\nc(\"GlowFilter\", GlowFilter);\nc(\"Point\", Point);\nc(\"Rectangle\", Rectangle);\nc(\"Texture\", Texture);\nc(\"Texture2D\", Texture2D);\n\nc(\"Prefab\", Prefab);\n\nc(\"Animator2D\", Animator2D);\nc(\"AnimatorControllerLayer2D\", AnimatorControllerLayer2D);\nc(\"AnimatorState2D\", AnimatorState2D);\nc(\"AnimationClip2D\", AnimationClip2D);\nc(\"AnimatorController2D\", AnimatorController2D);\nc(\"Animation2DParm\", Animation2DParm);\nc(\"Animation2DCondition\", Animation2DCondition);\n\nc(\"Vector2\", Vector2);\nc(\"Vector3\", Vector3);\nc(\"Vector4\", Vector4);\nc(\"Quaternion\", Quaternion);\nc(\"Color\", Color);\nc(\"Matrix\", Matrix);\nc(\"Matrix3x3\", Matrix3x3);\nc(\"Matrix4x4\", Matrix4x4);","/**\n * <p> <code>LocalStorage</code> 类用于没有时间限制的数据存储。</p>\n */\nexport class LocalStorage {\n\n    /**@ 基础类*/\n    static _baseClass: any;\n    /**\n     *  数据列表。\n     */\n    static items: any;\n    /**\n     * 表示是否支持  <code>LocalStorage</code>。\n     */\n    static support: boolean = false;\n    /**@internal */\n    static __init__(): boolean {\n        if (!LocalStorage._baseClass) {\n            LocalStorage._baseClass = Storage;\n            Storage.init();\n        }\n        LocalStorage.items = LocalStorage._baseClass.items;\n        LocalStorage.support = LocalStorage._baseClass.support;\n        return LocalStorage.support;\n    }\n\n    /**\n     * 存储指定键名和键值，字符串类型。\n     * @param key 键名。\n     * @param value 键值。\n     */\n    static setItem(key: string, value: string): void {\n        LocalStorage._baseClass.setItem(key, value);\n    }\n\n    /**\n     * 获取指定键名的值。\n     * @param key 键名。\n     * @return 字符串型值。\n     */\n    static getItem(key: string): string {\n        return LocalStorage._baseClass.getItem(key);\n    }\n\n    /**\n     * 存储指定键名及其对应的 <code>Object</code> 类型值。\n     * @param key 键名。\n     * @param value 键值。是 <code>Object</code> 类型，此致会被转化为 JSON 字符串存储。\n     */\n    static setJSON(key: string, value: any): void {\n        LocalStorage._baseClass.setJSON(key, value);\n    }\n\n    /**\n     * 获取指定键名对应的 <code>Object</code> 类型值。\n     * @param key 键名。\n     * @return <code>Object</code> 类型值\n     */\n    static getJSON(key: string): any {\n        return LocalStorage._baseClass.getJSON(key);\n    }\n\n    /**\n     * 删除指定键名的信息。\n     * @param key 键名。\n     */\n    static removeItem(key: string): void {\n        LocalStorage._baseClass.removeItem(key);\n    }\n\n    /**\n     * 清除本地存储信息。\n     */\n    static clear(): void {\n        LocalStorage._baseClass.clear();\n    }\n}\n\n\n/** @internal */\nclass Storage {\n\n\t/**\n\t *  数据列表。\n\t */\n    static items: any;\n\t/**\n\t * 表示是否支持  <code>LocalStorage</code>。\n\t */\n    static support: boolean = false;\n\n    static init(): void {\n        try { Storage.support = true; Storage.items = window.localStorage; Storage.setItem('laya', '1'); Storage.removeItem('laya'); } catch (e) { Storage.support = false; } if (!Storage.support) console.log('LocalStorage is not supprot or browser is private mode.');\n    }\n\n\t/**\n\t * 存储指定键名和键值，字符串类型。\n\t * @param key 键名。\n\t * @param value 键值。\n\t */\n    static setItem(key: string, value: string): void {\n        try {\n            Storage.support && Storage.items.setItem(key, value);\n        } catch (e) {\n            console.warn(\"set localStorage failed\", e);\n        }\n    }\n\n\t/**\n\t * 获取指定键名的值。\n\t * @param key 键名。\n\t * @return 字符串型值。\n\t */\n    static getItem(key: string): string {\n        return Storage.support ? Storage.items.getItem(key) : null;\n    }\n\n\t/**\n\t * 存储指定键名和它的 <code>Object</code> 类型值。\n\t * @param key 键名。\n\t * @param value 键值。是 <code>Object</code> 类型，此致会被转化为 JSON 字符串存储。\n\t */\n    static setJSON(key: string, value: any): void {\n        try {\n            Storage.support && Storage.items.setItem(key, JSON.stringify(value));\n        } catch (e) {\n            console.warn(\"set localStorage failed\", e);\n        }\n    }\n\n\t/**\n\t * 获取指定键名的 <code>Object</code> 类型值。\n\t * @param key 键名。\n\t * @return <code>Object</code> 类型值\n\t */\n    static getJSON(key: string): any {\n        try{\n            let obj = JSON.parse(Storage.support ? Storage.items.getItem(key) : null);\n            return obj;\n        }catch(err){\n            return Storage.items.getItem(key);\n        }\n    }\n\n\t/**\n\t * 删除指定键名的信息。\n\t * @param key 键名。\n\t */\n    static removeItem(key: string): void {\n        Storage.support && Storage.items.removeItem(key);\n    }\n\n\t/**\n\t * 清除本地存储信息。\n\t */\n    static clear(): void {\n        Storage.support && Storage.items.clear();\n    }\n\n}\n","import { RenderSpriteData, Value2D } from \"./Value2D\";\nimport { Shader3D } from \"../../../../RenderEngine/RenderShader/Shader3D\";\n\nexport class PrimitiveSV extends Value2D {\n    constructor() {\n        super(RenderSpriteData.Primitive);\n        this._defaultShader = Shader3D.find(\"Sprite2DPrimitive\");\n    }\n}\n\n","import { RenderSpriteData, Value2D } from \"./Value2D\";\nimport { Shader3D } from \"../../../../RenderEngine/RenderShader/Shader3D\";\nimport { Vector2 } from \"../../../../maths/Vector2\";\nimport { Vector4 } from \"../../../../maths/Vector4\";\nimport { Matrix4x4 } from \"../../../../maths/Matrix4x4\";\nimport { ShaderDefines2D } from \"../ShaderDefines2D\";\n\nexport class TextureSV extends Value2D {\n    strength: number = 0;//TODO  delete？？\n\n    private _blurInfo: Vector2 = new Vector2();//TODO  shader中没有用\n    public get blurInfo(): Vector2 {\n        return this.defines.getVector2(ShaderDefines2D.UNIFORM_BLURINFO);\n    }\n    public set blurInfo(value: Vector2) {\n        this.defines.setVector2(ShaderDefines2D.UNIFORM_BLURINFO, value);\n    }\n\n    private _u_blurInfo1: Vector4 = new Vector4();\n    public get u_blurInfo1(): Vector4 {\n        return this.defines.getVector(ShaderDefines2D.UNIFORM_BLURINFO1);\n    }\n    public set u_blurInfo1(value: Vector4) {\n        this.defines.setVector(ShaderDefines2D.UNIFORM_BLURINFO1, value);\n    }\n\n    private _u_blurInfo2: Vector4 = new Vector4();\n    public get u_blurInfo2(): Vector4 {\n        return this.defines.getVector(ShaderDefines2D.UNIFORM_BLURINFO2);\n    }\n    public set u_blurInfo2(value: Vector4) {\n        this.defines.setVector(ShaderDefines2D.UNIFORM_BLURINFO2, value);\n    }\n\n    private _u_TexRange: Vector4 = new Vector4();\n    public get u_TexRange(): Vector4 {\n        return this.defines.getVector(ShaderDefines2D.UNIFORM_TEXRANGE)\n    }\n    public set u_TexRange(value: Vector4) {\n        this.defines.setVector(ShaderDefines2D.UNIFORM_TEXRANGE, value);\n    }\n    private _colorMat: Matrix4x4 = new Matrix4x4();\n    public get colorMat(): Matrix4x4 {\n        return this.defines.getMatrix4x4(ShaderDefines2D.UNIFORM_COLORMAT);\n    }\n    public set colorMat(value: Matrix4x4) {\n        this.defines.setMatrix4x4(ShaderDefines2D.UNIFORM_COLORMAT, value);\n    }\n\n    private _colorAlpha: Vector4 = new Vector4();\n    public get colorAlpha(): Vector4 {\n        return this.defines.getVector(ShaderDefines2D.UNIFORM_COLORALPHA);\n    }\n    public set colorAlpha(value: Vector4) {\n        this.defines.setVector(ShaderDefines2D.UNIFORM_COLORALPHA, value);\n    }\n\n    private _strength_sig2_2sig2_gauss1: Vector4 = new Vector4();\n    public get strength_sig2_2sig2_gauss1(): Vector4 {\n        return this.defines.getVector(ShaderDefines2D.UNIFORM_STRENGTH_SIG2_2SIG2_GAUSS1);\n    }\n    public set strength_sig2_2sig2_gauss1(value: Vector4) {\n        this.defines.setVector(ShaderDefines2D.UNIFORM_STRENGTH_SIG2_2SIG2_GAUSS1, value);\n    }\n\n    constructor() {\n        super(RenderSpriteData.Texture2D);\n        this._defaultShader = Shader3D.find(\"Sprite2DTexture\");\n        this.blurInfo = this._blurInfo;\n        this.u_blurInfo1 = this._u_blurInfo1;\n        this.u_blurInfo2 = this._u_blurInfo2;\n        this.u_TexRange = this._u_TexRange;\n        this.colorMat = this._colorMat;\n        this.colorAlpha = this._colorAlpha;\n        this.strength_sig2_2sig2_gauss1 = this._strength_sig2_2sig2_gauss1;\n    }\n    /**\n     * @override\n     */\n    clear(): void {\n        this.texture = null;\n        //this.shader = null;\n        this.defines._defineDatas.clear();\n\n    }\n}\n","import { Browser } from \"./Browser\";\n/**\n * <code>Mouse</code> 类用于控制鼠标光标样式。\n */\nexport class Mouse {\n    /**@private */\n    private static _style: any;\n    /**@private */\n    private static _preCursor: string;\n\n    /**\n     * 设置鼠标样式\n     * @param cursorStr\n     * 例如auto move no-drop col-resize\n     * all-scroll pointer not-allowed row-resize\n     * crosshair progress e-resize ne-resize\n     * default text n-resize nw-resize\n     * help vertical-text s-resize se-resize\n     * inherit wait w-resize sw-resize\n     */\n    static set cursor(cursorStr: string) {\n        Mouse._style.cursor = cursorStr;\n    }\n\n    static get cursor(): string {\n        return Mouse._style.cursor;\n    }\n\n    /**@internal */\n    static __init__(): any {\n        Mouse._style = Browser.document.body.style;\n    }\n\n    /**\n     * 隐藏鼠标\n     */\n    static hide(): void {\n        if (Mouse.cursor != \"none\") {\n            Mouse._preCursor = Mouse.cursor;\n            Mouse.cursor = \"none\";\n        }\n    }\n\n    /**\n     * 显示鼠标\n     */\n    static show(): void {\n        if (Mouse.cursor == \"none\") {\n            if (Mouse._preCursor) {\n                Mouse.cursor = Mouse._preCursor;\n            } else {\n                Mouse.cursor = \"auto\";\n            }\n        }\n    }\n}\n\n","import { Mesh2D } from \"./Mesh2D\";\nimport { RenderParams } from \"../../RenderEngine/RenderEnum/RenderParams\";\nimport { VertexDeclaration } from \"../../RenderEngine/VertexDeclaration\";\nimport { VertexElementFormat } from \"../../renders/VertexElementFormat\";\nimport { VertexElement } from \"../../renders/VertexElement\";\nimport { LayaGL } from \"../../layagl/LayaGL\";\n\n/**\n * drawImage，fillRect等会用到的简单的mesh。每次添加必然是一个四边形。\n */\nexport class MeshParticle2D extends Mesh2D {\n    static const_stride: number = 116;\n    private static _fixattriInfo: any[];\n    private static _POOL: any[] = [];\n    static vertexDeclaration: VertexDeclaration = null;\n    static __init__(): void {\n        const glfloat = LayaGL.renderEngine.getParams(RenderParams.FLOAT);\n        MeshParticle2D._fixattriInfo = [\n            glfloat, 4, 0,\t//CornerTextureCoordinate\n            glfloat, 3, 16,//pos\n            glfloat, 3, 28,//vel\n            glfloat, 4, 40,//start color\n            glfloat, 4, 56,//end color\n            glfloat, 3, 72,//size,rot\n            glfloat, 2, 84,//radius\n            glfloat, 4, 92,//radian\n            glfloat, 1, 108,//AgeAddScale\n            glfloat, 1, 112];\n\n\n    }\n\n    //TODO:coverage\n    constructor(maxNum: number) {\n        super(MeshParticle2D.const_stride, maxNum * 4 * MeshParticle2D.const_stride, 4);\t\t//ib 先4\n        this.canReuse = true;\n        this.setAttributes(MeshParticle2D._fixattriInfo);\n        this.createQuadIB(maxNum);\n        this._quadNum = maxNum;\n\n        if (!MeshParticle2D.vertexDeclaration) {\n            MeshParticle2D.vertexDeclaration = new VertexDeclaration(116, [\n                new VertexElement(0, VertexElementFormat.Vector4, 0),\n                new VertexElement(16, VertexElementFormat.Vector3, 1),\n                new VertexElement(28, VertexElementFormat.Vector3, 2),\n                new VertexElement(40, VertexElementFormat.Vector4, 3),\n                new VertexElement(56, VertexElementFormat.Vector4, 4),\n                new VertexElement(72, VertexElementFormat.Vector3, 5),\n                new VertexElement(84, VertexElementFormat.Vector2, 6),\n                new VertexElement(92, VertexElementFormat.Vector4, 7),\n                new VertexElement(108, VertexElementFormat.Single, 8),\n                new VertexElement(112, VertexElementFormat.Single, 9)\n            ]);\n        }\n\n        this._vb.vertexDeclaration = MeshParticle2D.vertexDeclaration;\n    }\n\n    setMaxParticleNum(maxNum: number): void {\n        this._vb.buffer2D._resizeBuffer(maxNum * 4 * MeshParticle2D.const_stride, false);\n        this.createQuadIB(maxNum);\n    }\n\n    /**\n     * \n     */\n    //TODO:coverage\n    static getAMesh(maxNum: number): MeshParticle2D {\n        //console.log('getmesh');\n        if (MeshParticle2D._POOL.length) {\n            var ret: MeshParticle2D = MeshParticle2D._POOL.pop();\n            ret.setMaxParticleNum(maxNum);\n            return ret;\n        }\n        return new MeshParticle2D(maxNum);\n    }\n\n    /**\n     * 把本对象放到回收池中，以便getMesh能用。\n     * @override\n     */\n    //TODO:coverage\n    releaseMesh(): void {\n        this._vb.buffer2D.setByteLength(0);\n        this.vertNum = 0;\n        this.indexNum = 0;\n        //_applied = false;\n        MeshParticle2D._POOL.push(this);\n    }\n\n    //TODO:coverage\n    /**\n     * @override\n     */\n    destroy(): void {\n        this._ib.destroy();\n        this._vb.destroy();\n        this._vb.deleteBuffer();\n        //ib用deletebuffer么\n    }\n}\n\n","﻿import { ILaya } from \"./ILaya\";\nimport { Input } from \"./laya/display/Input\";\nimport { Sprite } from \"./laya/display/Sprite\";\nimport { Stage } from \"./laya/display/Stage\";\nimport { InputManager } from \"./laya/events/InputManager\";\nimport { SoundManager } from \"./laya/media/SoundManager\";\nimport { Loader } from \"./laya/net/Loader\";\nimport { LocalStorage } from \"./laya/net/LocalStorage\";\nimport { Render } from \"./laya/renders/Render\";\nimport { RenderSprite } from \"./laya/renders/RenderSprite\";\nimport { Context } from \"./laya/resource/Context\";\nimport { HTMLCanvas } from \"./laya/resource/HTMLCanvas\";\nimport { RenderTexture2D } from \"./laya/resource/RenderTexture2D\";\nimport { Texture } from \"./laya/resource/Texture\";\nimport { Browser } from \"./laya/utils/Browser\";\nimport { CacheManger } from \"./laya/utils/CacheManger\";\nimport { ColorUtils } from \"./laya/utils/ColorUtils\";\nimport { Timer } from \"./laya/utils/Timer\";\nimport { PrimitiveSV } from \"./laya/webgl/shader/d2/value/PrimitiveSV\";\nimport { TextureSV } from \"./laya/webgl/shader/d2/value/TextureSV\";\nimport { RenderSpriteData, Value2D } from \"./laya/webgl/shader/d2/value/Value2D\";\nimport { RenderState2D } from \"./laya/webgl/utils/RenderState2D\";\nimport { WebGL } from \"./laya/webgl/WebGL\";\nimport { Mouse } from \"./laya/utils/Mouse\";\nimport { MeshVG } from \"./laya/webgl/utils/MeshVG\";\nimport { MeshParticle2D } from \"./laya/webgl/utils/MeshParticle2D\";\nimport { MeshQuadTexture } from \"./laya/webgl/utils/MeshQuadTexture\";\nimport { MeshTexture } from \"./laya/webgl/utils/MeshTexture\";\nimport { WeakObject } from \"./laya/utils/WeakObject\";\nimport { RenderStateContext } from \"./laya/RenderEngine/RenderStateContext\";\nimport { RenderClearFlag } from \"./laya/RenderEngine/RenderEnum/RenderClearFlag\";\nimport { IStageConfig, LayaEnv } from \"./LayaEnv\";\nimport { Color } from \"./laya/maths/Color\";\nimport { URL } from \"./laya/net/URL\";\nimport { RunDriver } from \"./laya/utils/RunDriver\";\nimport { Config } from \"./Config\";\nimport { Shader3D } from \"./laya/RenderEngine/RenderShader/Shader3D\";\nimport { LayaGL } from \"./laya/layagl/LayaGL\";\nimport { Material } from \"./laya/resource/Material\";\n\n/**\n * <code>Laya</code> 是全局对象的引用入口集。\n * Laya类引用了一些常用的全局对象，比如Laya.stage：舞台，Laya.timer：时间管理器，Laya.loader：加载管理器，使用时注意大小写。\n */\nexport class Laya {\n    /** 舞台对象的引用。*/\n    static stage: Stage = null;\n\n    /**@private 系统时钟管理器，引擎内部使用*/\n    static systemTimer: Timer = null;\n    /**@private 组件的物理时钟管理器*/\n    static physicsTimer: Timer = null;\n    /**游戏主时针，同时也是管理场景，动画，缓动等效果时钟，通过控制本时针缩放，达到快进慢播效果*/\n    static timer: Timer = null;\n    /** 加载管理器的引用。*/\n    static loader: Loader = null;\n\n    /**@private Render 类的引用。*/\n    static render: Render;\n\n    private static _inited = false;\n    private static _initCallbacks: Array<() => void | Promise<void>> = [];\n    private static _beforeInitCallbacks: Array<(stageConfig: IStageConfig) => void | Promise<void>> = [];\n    private static _afterInitCallbacks: Array<() => void | Promise<void>> = [];\n\n    /**\n     * 初始化引擎。使用引擎需要先初始化引擎。\n     */\n    static init(stageConfig?: IStageConfig): Promise<void>;\n    /**\n     * 初始化引擎。使用引擎需要先初始化引擎。\n     * @param\twidth 初始化的游戏窗口宽度，又称设计宽度。\n     * @param\theight 初始化的游戏窗口高度，又称设计高度。\n     */\n    static init(width: number, height: number): Promise<void>;\n    static init(...args: any[]): Promise<void> {\n        if (Laya._inited)\n            return Promise.resolve();\n        Laya._inited = true;\n\n        if (!WebGL.enable())\n            throw new Error(\"Must support webGL!\");\n\n        let stageConfig: IStageConfig;\n        if (typeof (args[0]) === \"number\") {\n            stageConfig = {\n                designWidth: args[0],\n                designHeight: args[1]\n            };\n        }\n        else\n            stageConfig = args[0];\n\n        Browser.__init__();\n        URL.__init__();\n\n        let laya3D = (<any>window)[\"Laya3D\"];\n        if (laya3D) {\n            RunDriver.changeWebGLSize = laya3D._changeWebGLSize;\n            Render.is3DMode = true;\n        }\n\n        // 创建主画布\n        //这个其实在Render中感觉更合理，但是runtime要求第一个canvas是主画布，所以必须在下面的那个离线画布之前\n        let mainCanv = Browser.mainCanvas = new HTMLCanvas(true);\n        //Render._mainCanvas = mainCanv;\n        Laya._setStyleInfo(mainCanv);\n        if (!Browser.onKGMiniGame && !Browser.onAlipayMiniGame && !Browser.onTBMiniGame) {\n            Browser.container.appendChild(mainCanv.source);//xiaosong add\n        }\n\n        Browser.canvas = new HTMLCanvas(true);\n        Browser.context = <CanvasRenderingContext2D>(Browser.canvas.getContext('2d') as any);\n        Browser.supportWebAudio = SoundManager.__init__();\n        Browser.supportLocalStorage = LocalStorage.__init__();\n\n        systemTimer = new Timer(false);\n        physicsTimer = new Timer(false);\n        timer = new Timer(false);\n        loader = new Loader();\n\n        Laya.systemTimer = Timer.gSysTimer = systemTimer;\n        Laya.timer = timer;\n        Laya.physicsTimer = physicsTimer;\n        Laya.loader = loader;\n\n        ILaya.systemTimer = systemTimer;\n        ILaya.physicsTimer = physicsTimer;\n        ILaya.timer = timer;\n        ILaya.loader = loader;\n\n        WeakObject.__init__();\n        Mouse.__init__();\n\n        if (LayaEnv.isConch) {\n            Laya.enableNative();\n        }\n        CacheManger.beginCheck();\n\n        let steps: Array<() => any> = [];\n\n        if (LayaEnv.beforeInit)\n            steps.push(() => LayaEnv.beforeInit(stageConfig));\n        steps.push(() => Promise.all(Laya._beforeInitCallbacks.map(func => func(stageConfig))));\n\n        steps.push(() => LayaGL.renderOBJCreate.createEngine(null, Browser.mainCanvas));\n        steps.push(() => Laya.initRender2D(stageConfig));\n        if (laya3D)\n            steps.push(() => laya3D.__init__());\n        steps.push(() => Promise.all(Laya._initCallbacks.map(func => func())));\n\n        steps.push(() => Promise.all(Laya._afterInitCallbacks.map(func => func())));\n\n        if (LayaEnv.afterInit)\n            steps.push(() => LayaEnv.afterInit());\n\n        let p = Promise.resolve();\n        for (let step of steps)\n            p = p.then(step);\n\n        return p;\n    }\n\n    /**\n     * @internal\n     * 适配淘宝小游戏\n     * @param mainCanv \n     */\n    static _setStyleInfo(mainCanv: HTMLCanvas): void {\n        let style: any = mainCanv.source.style;\n        style.position = 'absolute';\n        style.top = style.left = \"0px\";\n        style.background = \"#000000\";\n    }\n\n    static initRender2D(stageConfig: IStageConfig) {\n        stage = ((<any>window)).stage = ILaya.stage = Laya.stage = new Stage();\n\n        Shader3D.init();\n        MeshQuadTexture.__int__();\n        MeshVG.__init__();\n        MeshTexture.__init__();\n\n        Laya.render = Laya.createRender();\n        render = Laya.render;\n        stage.size(stageConfig.designWidth, stageConfig.designHeight);\n        if (stageConfig.scaleMode)\n            stage.scaleMode = stageConfig.scaleMode;\n        if (stageConfig.screenMode)\n            stage.screenMode = stageConfig.screenMode;\n        if (stageConfig.alignV)\n            stage.alignV = stageConfig.alignV;\n        if (stageConfig.alignH)\n            stage.alignH = stageConfig.alignH;\n        if (Config.isAlpha)\n            stage.bgColor = null;\n        else if (stageConfig.backgroundColor)\n            stage.bgColor = stageConfig.backgroundColor;\n\n        if (LayaEnv.isConch && (window as any).conch.setGlobalRepaint) {\n            (window as any).conch.setGlobalRepaint(stage.setGlobalRepaint.bind(stage));\n        }\n\n        RenderStateContext.__init__();\n        MeshParticle2D.__init__();\n        RenderSprite.__init__();\n        Material.__initDefine__();\n        InputManager.__init__(stage, Render.canvas);\n        if (!!(window as any).conch && \"conchUseWXAdapter\" in Browser.window) {\n            Input.isAppUseNewInput = true;\n        }\n        Input.__init__();\n        SoundManager.autoStopMusic = true;\n        //Init internal 2D Value2D\n        Value2D._initone(RenderSpriteData.Texture2D, TextureSV);\n        Value2D._initone(RenderSpriteData.Primitive, PrimitiveSV);\n    }\n\n    /**\n     * hook function\n     * @internal\n     * @returns \n     */\n    static createRender(): Render {\n        return new Render(0, 0, Browser.mainCanvas);\n    }\n\n    /**\n     * 表示是否捕获全局错误并弹出提示。默认为false。\n     * 适用于移动设备等不方便调试的时候，设置为true后，如有未知错误，可以弹窗抛出详细错误堆栈。\n     */\n    static alertGlobalError(value: boolean) {\n        var erralert: number = 0;\n        if (value) {\n            Browser.window.onerror = function (msg: string, url: string, line: string, column: string, detail: any): void {\n                if (erralert++ < 5 && detail)\n                    this.alert(\"出错啦，请把此信息截图给研发商\\n\" + msg + \"\\n\" + detail.stack);\n            }\n        } else {\n            Browser.window.onerror = null;\n        }\n    }\n    /**@internal */\n    private static _evcode: string = \"eva\" + \"l\";\n\n    /**@internal */\n    static _runScript(script: string): any {\n        return Browser.window[Laya._evcode](script);\n    }\n\n    /**\n     * 开启DebugPanel\n     * @param\tdebugJsPath laya.debugtool.js文件路径\n     */\n    static enableDebugPanel(debugJsPath: string = \"libs/laya.debugtool.js\"): void {\n        if (!(window as any)['Laya'][\"DebugPanel\"]) {\n            var script: any = Browser.createElement(\"script\");\n            script.onload = function (): void {\n                (window as any)['Laya'][\"DebugPanel\"].enable();\n            }\n            script.src = debugJsPath;\n            Browser.document.body.appendChild(script);\n        } else {\n            (window as any)['Laya'][\"DebugPanel\"].enable();\n        }\n    }\n\n    private static isNativeRender_enable: boolean = false;\n\n    /**@private */\n    private static enableNative(): void {\n        if (Laya.isNativeRender_enable)\n            return;\n        Laya.isNativeRender_enable = true;\n        RenderState2D.width = Browser.window.innerWidth;\n        RenderState2D.height = Browser.window.innerHeight;\n\n        Stage.clear = function (color: string): void {\n            Context.set2DRenderConfig();//渲染2D前要还原2D状态,否则可能受3D影响\n            var c: any[] = ColorUtils.create(color).arrColor;\n\n            LayaGL.renderEngine.clearRenderTexture(RenderClearFlag.Color | RenderClearFlag.Depth, new Color(c[0], c[1], c[2], c[3]), 1);\n            // if (c) gl.clearColor(c[0], c[1], c[2], c[3]);\n            // gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT | gl.STENCIL_BUFFER_BIT);\n            RenderState2D.clear();\n        }\n\n        Sprite.drawToCanvas = function (sprite: Sprite, _renderType: number, canvasWidth: number, canvasHeight: number, offsetX: number, offsetY: number): any {\n            offsetX -= sprite.x;\n            offsetY -= sprite.y;\n            offsetX |= 0;\n            offsetY |= 0;\n            canvasWidth |= 0;\n            canvasHeight |= 0;\n\n            var canv: HTMLCanvas = new HTMLCanvas(false);\n            var ctx: Context = canv.getContext('2d') as Context;\n            canv.size(canvasWidth, canvasHeight);\n\n            ctx.asBitmap = true;\n            ctx._targets.start();\n            RenderSprite.renders[_renderType]._fun(sprite, ctx, offsetX, offsetY);\n            ctx.flush();\n            ctx._targets.end();\n            ctx._targets.restore();\n            return canv;\n        }\n        //RenderTexture2D.prototype._uv = RenderTexture2D.flipyuv;\n        Object[\"defineProperty\"](RenderTexture2D.prototype, \"uv\", {\n            \"get\": function (): any {\n                return this._uv;\n            },\n            \"set\": function (v: any): void {\n                this._uv = v;\n            }\n        }\n        );\n        HTMLCanvas.prototype.getTexture = function (): Texture | RenderTexture2D {\n            if (!this._texture) {\n                // @ts-ignore\n                this._texture = this.context._targets;\n                //遗留的奇怪代码，先注释掉\n                // @ts-ignore\n                this._texture.uv = RenderTexture2D.flipyuv;\n                // @ts-ignore\n                this._texture.bitmap = this._texture;\n            }\n            return this._texture;\n        }\n    }\n    /**\n     * 引擎各个模块，例如物理，寻路等，如果有初始化逻辑可以在这里注册初始化函数。开发者一般不直接使用。\n     * @param callback 模块的初始化函数\n     */\n    static addInitCallback(callback: () => void | Promise<void>) {\n        Laya._initCallbacks.push(callback);\n    }\n\n    /**\n     * 在引擎初始化前执行自定义逻辑。此时Stage尚未创建，因为可以修改stageConfig实现动态舞台配置。\n     * @param callback \n     */\n    static addBeforeInitCallback(callback: (stageConfig: IStageConfig) => void | Promise<void>): void {\n        Laya._beforeInitCallbacks.push(callback);\n    }\n\n    /**\n     * 在引擎初始化后执行自定义逻辑\n     * @param callback \n     */\n    static addAfterInitCallback(callback: () => void | Promise<void>): void {\n        Laya._afterInitCallbacks.push(callback);\n    }\n}\n\nILaya.Laya = Laya;\nILaya.Loader = Loader;\nILaya.Context = Context;\nILaya.Browser = Browser;\n\n/**@internal */\nexport var init = Laya.init;\n/**@internal */\nexport var stage: Stage;\n/**@internal */\nexport var systemTimer: Timer;\n/**@internal */\nexport var physicsTimer: Timer;\n/**@internal */\nexport var timer: Timer;\n/**@internal */\nexport var loader: Loader;\n/**@internal */\nexport var render: Render;\n/**@internal */\nexport var alertGlobalError = Laya.alertGlobalError;\n/**@internal */\nexport var enableDebugPanel = Laya.enableDebugPanel;\n\nexport var addInitCallback = Laya.addInitCallback;\nexport var addBeforeInitCallback = Laya.addBeforeInitCallback;\nexport var addAfterInitCallback = Laya.addAfterInitCallback;","export enum DrawType {\n    DrawArray,\n    DrawArrayInstance,\n    DrawElement,\n    DrawElementInstance\n}","export enum RenderDrawMode{\n    TRIANGLES,\n    POINTS,\n    LINES\n}","export enum RenderIndexMode{\n    UNSIGNED_BYTE,\n    UNSIGNED_SHORT,\n    UNSIGNED_INT\n}","export enum TextureCompareMode {\n    None,\n    LEQUAL,\n    GEQUAL,\n    LESS,\n    GREATER,\n    EQUAL,\n    NOTEQUAL,\n    ALWAYS,\n    NEVER\n}","/**\n * 纹理解码格式。\n */\nexport enum TextureDecodeFormat {\n    /** 常规解码方式,直接采样纹理颜色。*/\n    Normal,\n    /** 按照RGBM方式解码并计算最终RGB颜色。 */\n    RGBM\n}","import { BlendEquationSeparate } from \"./RenderEnum/BlendEquationSeparate\";\nimport { BlendFactor } from \"./RenderEnum/BlendFactor\";\nimport { BlendType } from \"./RenderEnum/BlendType\";\n\nexport class BlendState {\n    static _blend_All_pool: any = {};\n    static _blend_seperate_pool: any = {};\n    static create(blendType: number, colorBlendhash: BlendComponent, alphaBlendComponent: BlendComponent) {\n\n    }\n    /** Whether to enable blend. */\n    blendType: BlendType = 0;\n    colorBlendComponent: BlendComponent;\n    alphaBlendComponent: BlendComponent;\n    constructor(blendType: number) {\n\n    }\n}\n\nexport class BlendComponent {\n    static _pool: any = {};\n    static getHash(blendOperationGLData: number, sourceBlendFactor: number, destinationFactor: number): number {\n        return (blendOperationGLData) + (sourceBlendFactor << 3) + (destinationFactor << 7);\n    }\n    static getBlendComponent(blendOperationGLData: number, sourceBlendFactor: number, destinationFactor: number) {\n        let index = BlendComponent.getHash(blendOperationGLData, sourceBlendFactor, destinationFactor);\n        if (!BlendComponent._pool[index])\n            BlendComponent._pool[index] = new BlendComponent(blendOperationGLData, sourceBlendFactor, destinationFactor, index);\n        return BlendComponent._pool[index];\n    }\n    _blendOperation: BlendEquationSeparate;\n    _blendOperationGLData: number;\n    _sourceBlendFactor: BlendFactor;\n    _sourceBlendFactorGLData: number;\n    _destinationFactor: BlendFactor;\n    _destinationFactorGLData: number;\n    _hashIndex = 0;\n    constructor(blendOperationGLData: BlendEquationSeparate, sourceBlendFactor: BlendFactor, destinationFactor: BlendFactor, hashindex: number) {\n        this._hashIndex = hashindex;\n        this._blendOperationGLData = blendOperationGLData;\n        this._sourceBlendFactor = sourceBlendFactor;\n        this._destinationFactor = destinationFactor;\n    }\n\n\n\n\n}","import { ShaderDataType } from \"./RenderShader/ShaderData\";\n\ntype UniformProperty = { id: number, propertyName: string, uniformtype?: ShaderDataType }\nexport class CommandUniformMap {\n\n\t/**@internal */\n\t_idata: { [key: number]: { block?: Object, propertyName: string, uniformtype?: ShaderDataType, blockProperty?: UniformProperty[] } } = {};\n\t_stateName: string;\n\n\tconstructor(stateName: string) {\n\t\tthis._stateName = stateName;\n\t}\n\n\thasPtrID(propertyID: number): boolean {\n\t\treturn !!(this._idata[propertyID] != null);\n\t}\n\n\tgetMap() {\n\t\treturn this._idata;\n\t}\n\n\t/**\n\t * 增加一个Uniform参数\n\t * @internal\n\t * @param propertyID \n\t * @param propertyKey \n\t */\n\taddShaderUniform(propertyID: number, propertyKey: string, uniformtype: ShaderDataType, block: string = null): void {\n\t\tthis._idata[propertyID] = { uniformtype: uniformtype, propertyName: propertyKey, block: block };\n\t}\n\n\t/**\n\t * 增加一个Uniform\n\t * @param propertyID \n\t * @param propertyKey \n\t */\n\taddShaderBlockUniform(propertyID: number, blockname: string, blockProperty: UniformProperty[]): void {\n\t\tthis._idata[propertyID] = { propertyName: blockname, blockProperty: blockProperty }\n\t\tblockProperty.forEach(element => {\n\t\t\tthis.addShaderUniform(element.id, element.propertyName, element.uniformtype, blockname);\n\t\t});\n\t}\n\n\n\n}","import { LayaGL } from \"../layagl/LayaGL\";\nimport { RenderStateType } from \"./RenderEnum/RenderStateType\";\n\n/**\n * 渲染状态设置命令流\n */\nexport class RenderStateCommand{\n    cmdArray:Map<RenderStateType,any> = new Map();\n    constructor(){\n\n    }\n    addCMD(renderstate:RenderStateType,value:number|boolean|Array<number>){\n        this.cmdArray.set(renderstate,value);\n    }\n\n    applyCMD(){\n        LayaGL.renderEngine.applyRenderStateCMD(this);\n    }\n\n    clear(){\n        this.cmdArray.clear();\n    }\n}","import { Handler } from \"../utils/Handler\";\nimport { Sprite } from \"../display/Sprite\";\nimport { Tween } from \"../utils/Tween\";\nimport { Component } from \"../components/Component\";\n\n/**\n * 效果插件基类，基于对象池管理\n */\nexport class EffectBase extends Component {\n    /**动画持续时间，单位为毫秒*/\n    duration: number = 1000;\n    /**动画延迟时间，单位为毫秒*/\n    delay: number = 0;\n    /**重复次数，默认为播放一次*/\n    repeat: number = 0;\n    /**缓动类型，如果为空，则默认为匀速播放*/\n    ease: string;\n    /**触发事件，如果为空，则创建时触发*/\n    eventName: string;\n    /**效用作用的目标对象，如果为空，则是脚本所在的节点本身*/\n    target: Sprite;\n    /**效果结束后，是否自动移除节点*/\n    autoDestroyAtComplete: boolean = true;\n\n    protected _comlete: Handler;\n    protected _tween: Tween;\n\n    protected _onAwake(): void {\n        this.target = this.target || (<Sprite>this.owner);\n        if (this.autoDestroyAtComplete) \n            this._comlete = Handler.create(this.target, this.target.destroy, null, false);\n        if (this.eventName) \n            this.owner.on(this.eventName, this, this._exeTween);\n        else \n            this._exeTween();\n    }\n\n    protected _exeTween(): void {\n        this._tween = this._doTween();\n        this._tween.repeat = this.repeat;\n    }\n\n    protected _doTween(): Tween {\n        return null;\n    }\n\n    onReset(): void {\n        this.duration = 1000;\n        this.delay = 0;\n        this.repeat = 0;\n        this.ease = null;\n        this.target = null;\n        if (this.eventName) {\n            this.owner.off(this.eventName, this, this._exeTween);\n            this.eventName = null;\n        }\n        if (this._comlete) {\n            this._comlete.recover();\n            this._comlete = null;\n        }\n        if (this._tween) {\n            this._tween.clear();\n            this._tween = null;\n        }\n    }\n}\n\n","/**\n * <p><code>KeyLocation</code> 类包含表示在键盘或类似键盘的输入设备上按键位置的常量。</p>\n * <p><code>KeyLocation</code> 常数用在键盘事件对象的 <code>keyLocation </code>属性中。</p>\n */\nexport class KeyLocation {\n    /**\n     * 表示激活的键不区分位于左侧还是右侧，也不区分是否位于数字键盘（或者是使用对应于数字键盘的虚拟键激活的）。\n     */\n    static STANDARD: number = 0;\n    /**\n     * 表示激活的键在左侧键位置（此键有多个可能的位置）。\n     */\n    static LEFT: number = 1;\n    /**\n     * 表示激活的键在右侧键位置（此键有多个可能的位置）。\n     */\n    static RIGHT: number = 2;\n    /**\n     * <p>表示激活的键位于数字键盘或者是使用对应于数字键盘的虚拟键激活的。</p>\n     * <p>注意：此属性只在flash模式下有效。</p>\n     * */\n    static NUM_PAD: number = 3;\n\n}\n\n\n","/**\n * <code>Keyboard</code> 类的属性是一些常数，这些常数表示控制游戏时最常用的键。\n */\nexport class Keyboard {\n    /** 与 0 的键控代码值 (48) 关联的常数。*/\n    static NUMBER_0: number = 48;\n    /** 与 1 的键控代码值 (49) 关联的常数。*/\n    static NUMBER_1: number = 49;\n    /** 与 2 的键控代码值 (50) 关联的常数。*/\n    static NUMBER_2: number = 50;\n    /** 与 3 的键控代码值 (51) 关联的常数。*/\n    static NUMBER_3: number = 51;\n    /** 与 4 的键控代码值 (52) 关联的常数。*/\n    static NUMBER_4: number = 52;\n    /** 与 5 的键控代码值 (53) 关联的常数。*/\n    static NUMBER_5: number = 53;\n    /** 与 6 的键控代码值 (54) 关联的常数。*/\n    static NUMBER_6: number = 54;\n    /** 与 7 的键控代码值 (55) 关联的常数。*/\n    static NUMBER_7: number = 55;\n    /** 与 8 的键控代码值 (56) 关联的常数。*/\n    static NUMBER_8: number = 56;\n    /** 与 9 的键控代码值 (57) 关联的常数。*/\n    static NUMBER_9: number = 57;\n\n    /** 与 A 键的键控代码值 (65) 关联的常数。*/\n    static A: number = 65;\n    /** 与 B 键的键控代码值 (66) 关联的常数。*/\n    static B: number = 66;\n    /** 与 C 键的键控代码值 (67) 关联的常数。*/\n    static C: number = 67;\n    /** 与 D 键的键控代码值 (68) 关联的常数。*/\n    static D: number = 68;\n    /** 与 E 键的键控代码值 (69) 关联的常数。*/\n    static E: number = 69;\n    /** 与 F 键的键控代码值 (70) 关联的常数。*/\n    static F: number = 70;\n    /** 与 G 键的键控代码值 (71) 关联的常数。*/\n    static G: number = 71;\n    /** 与 H 键的键控代码值 (72) 关联的常数。*/\n    static H: number = 72;\n    /** 与 I 键的键控代码值 (73) 关联的常数。*/\n    static I: number = 73;\n    /** 与 J 键的键控代码值 (74) 关联的常数。*/\n    static J: number = 74;\n    /** 与 K 键的键控代码值 (75) 关联的常数。*/\n    static K: number = 75;\n    /** 与 L 键的键控代码值 (76) 关联的常数。*/\n    static L: number = 76;\n    /** 与 M 键的键控代码值 (77) 关联的常数。*/\n    static M: number = 77;\n    /** 与 N 键的键控代码值 (78) 关联的常数。*/\n    static N: number = 78;\n    /** 与 O 键的键控代码值 (79) 关联的常数。*/\n    static O: number = 79;\n    /** 与 P 键的键控代码值 (80) 关联的常数。*/\n    static P: number = 80;\n    /** 与 Q 键的键控代码值 (81) 关联的常数。*/\n    static Q: number = 81;\n    /** 与 R 键的键控代码值 (82) 关联的常数。*/\n    static R: number = 82;\n    /** 与 S 键的键控代码值 (83) 关联的常数。*/\n    static S: number = 83;\n    /** 与 T 键的键控代码值 (84) 关联的常数。*/\n    static T: number = 84;\n    /** 与 U 键的键控代码值 (85) 关联的常数。*/\n    static U: number = 85;\n    /** 与 V 键的键控代码值 (86) 关联的常数。*/\n    static V: number = 86;\n    /** 与 W 键的键控代码值 (87) 关联的常数。*/\n    static W: number = 87;\n    /** 与 X 键的键控代码值 (88) 关联的常数。*/\n    static X: number = 88;\n    /** 与 Y 键的键控代码值 (89) 关联的常数。*/\n    static Y: number = 89;\n    /** 与 Z 键的键控代码值 (90) 关联的常数。*/\n    static Z: number = 90;\n\n    /** 与 F1 的键控代码值 (112) 关联的常数。*/\n    static F1: number = 112;\n    /** 与 F2 的键控代码值 (113) 关联的常数。*/\n    static F2: number = 113;\n    /** 与 F3 的键控代码值 (114) 关联的常数。*/\n    static F3: number = 114;\n    /** 与 F4 的键控代码值 (115) 关联的常数。*/\n    static F4: number = 115;\n    /** 与 F5 的键控代码值 (116) 关联的常数。*/\n    static F5: number = 116;\n    /** 与 F6 的键控代码值 (117) 关联的常数。*/\n    static F6: number = 117;\n    /** 与 F7 的键控代码值 (118) 关联的常数。*/\n    static F7: number = 118;\n    /** 与 F8 的键控代码值 (119) 关联的常数。*/\n    static F8: number = 119;\n    /** 与 F9 的键控代码值 (120) 关联的常数。*/\n    static F9: number = 120;\n    /** 与 F10 的键控代码值 (121) 关联的常数。*/\n    static F10: number = 121;\n    /** 与 F11 的键控代码值 (122) 关联的常数。*/\n    static F11: number = 122;\n    /** 与 F12 的键控代码值 (123) 关联的常数。*/\n    static F12: number = 123;\n    /** 与 F13 的键控代码值 (124) 关联的常数。*/\n    static F13: number = 124;\n    /** 与 F14 的键控代码值 (125) 关联的常数。*/\n    static F14: number = 125;\n    /** 与 F15 的键控代码值 (126) 关联的常数。*/\n    static F15: number = 126;\n\n    /** 与数字键盘的伪键控代码 (21) 关联的常数。*/\n    static NUMPAD: number = 21;\n    /** 与数字键盘上的数字 0 的键控代码值 (96) 关联的常数。*/\n    static NUMPAD_0: number = 96;\n    /** 与数字键盘上的数字 1 的键控代码值 (97) 关联的常数。*/\n    static NUMPAD_1: number = 97;\n    /** 与数字键盘上的数字 2 的键控代码值 (98) 关联的常数。*/\n    static NUMPAD_2: number = 98;\n    /** 与数字键盘上的数字 3 的键控代码值 (99) 关联的常数。*/\n    static NUMPAD_3: number = 99;\n    /** 与数字键盘上的数字 4 的键控代码值 (100) 关联的常数。*/\n    static NUMPAD_4: number = 100;\n    /** 与数字键盘上的数字 5 的键控代码值 (101) 关联的常数。*/\n    static NUMPAD_5: number = 101;\n    /** 与数字键盘上的数字 6 的键控代码值 (102) 关联的常数。*/\n    static NUMPAD_6: number = 102;\n    /** 与数字键盘上的数字 7 的键控代码值 (103) 关联的常数。*/\n    static NUMPAD_7: number = 103;\n    /** 与数字键盘上的数字 8 的键控代码值 (104) 关联的常数。*/\n    static NUMPAD_8: number = 104;\n    /** 与数字键盘上的数字 9 的键控代码值 (105) 关联的常数。*/\n    static NUMPAD_9: number = 105;\n\n    /** 与数字键盘上的加号 (+) 的键控代码值 (107) 关联的常数。*/\n    static NUMPAD_ADD: number = 107;\n    /** 与数字键盘上的小数点 (.) 的键控代码值 (110) 关联的常数。*/\n    static NUMPAD_DECIMAL: number = 110;\n    /** 与数字键盘上的除号 (/) 的键控代码值 (111) 关联的常数。*/\n    static NUMPAD_DIVIDE: number = 111;\n    /** 与数字键盘上的 Enter 的键控代码值 (108) 关联的常数。*/\n    static NUMPAD_ENTER: number = 108;\n    /** 与数字键盘上的乘号 (*) 的键控代码值 (106) 关联的常数。*/\n    static NUMPAD_MULTIPLY: number = 106;\n    /** 与数字键盘上的减号 (-) 的键控代码值 (109) 关联的常数。*/\n    static NUMPAD_SUBTRACT: number = 109;\n    /** 与 ; 键的键控代码值 (186) 关联的常数。*/\n    static SEMICOLON: number = 186;\n    /** 与 = 键的键控代码值 (187) 关联的常数。*/\n    static EQUAL: number = 187;\n    /** 与 F15 的键控代码值 (188) 关联的常数。*/\n    static COMMA: number = 188;\n    /** 与 - 键的键控代码值 (189) 关联的常数。*/\n    static MINUS: number = 189;\n    /** 与 . 键的键控代码值 (190) 关联的常数。*/\n    static PERIOD: number = 190;\n    /** 与 / 键的键控代码值 (191) 关联的常数。*/\n    static SLASH: number = 191;\n    /** 与 ` 键的键控代码值 (192) 关联的常数。*/\n    static BACKQUOTE: number = 192;\n    /** 与 [ 键的键控代码值 (219) 关联的常数。*/\n    static LEFTBRACKET: number = 219;\n    /** 与 \\ 键的键控代码值 (220) 关联的常数。*/\n    static BACKSLASH: number = 220;\n    /** 与 ] 键的键控代码值 (221) 关联的常数。*/\n    static RIGHTBRACKET: number = 221;\n    /** 与 ' 键的键控代码值 (222) 关联的常数。*/\n    static QUOTE: number = 222;\n    /** 与 Alternate (Option) 键的键控代码值 (18) 关联的常数。*/\n    static ALTERNATE: number = 18;\n    /** 与 Backspace 的键控代码值 (8) 关联的常数。*/\n    static BACKSPACE: number = 8;\n    /** 与 Caps Lock 的键控代码值 (20) 关联的常数。*/\n    static CAPS_LOCK: number = 20;\n    /** 与 Mac 命令键 (15) 关联的常数。*/\n    static COMMAND: number = 15;\n    /** 与 Ctrl 的键控代码值 (17) 关联的常数。*/\n    static CONTROL: number = 17;\n    /** 与 Delete 的键控代码值 (46) 关联的常数。*/\n    static DELETE: number = 46;\n    /** 与 Enter 的键控代码值 (13) 关联的常数。*/\n    static ENTER: number = 13;\n    /** 与 Esc 的键控代码值 (27) 关联的常数。*/\n    static ESCAPE: number = 27;\n    /** 与 Page Up 的键控代码值 (33) 关联的常数。*/\n    static PAGE_UP: number = 33;\n    /** 与 Page Down 的键控代码值 (34) 关联的常数。*/\n    static PAGE_DOWN: number = 34;\n    /** 与 End 的键控代码值 (35) 关联的常数。*/\n    static END: number = 35;\n    /** 与 Home 的键控代码值 (36) 关联的常数。*/\n    static HOME: number = 36;\n    /** 与向左箭头键的键控代码值 (37) 关联的常数。*/\n    static LEFT: number = 37;\n    /** 与向上箭头键的键控代码值 (38) 关联的常数。*/\n    static UP: number = 38;\n    /** 与向右箭头键的键控代码值 (39) 关联的常数。*/\n    static RIGHT: number = 39;\n    /** 与向下箭头键的键控代码值 (40) 关联的常数。*/\n    static DOWN: number = 40;\n    /** 与 Shift 的键控代码值 (16) 关联的常数。*/\n    static SHIFT: number = 16;\n    /** 与空格键的键控代码值 (32) 关联的常数。*/\n    static SPACE: number = 32;\n    /** 与 Tab 的键控代码值 (9) 关联的常数。*/\n    static TAB: number = 9;\n    /** 与 Insert 的键控代码值 (45) 关联的常数。*/\n    static INSERT: number = 45;\n}\n\n\n","import { ShaderVariable } from \"../RenderEngine/RenderShader/ShaderVariable\";\n\n/**\n * @private\n * CommandEncoder Shader变量集合\n */\nexport class CommandEncoder {\n    \n    /**@internal shader variable list*/\n    _idata: ShaderVariable[] = [];\n\n    /**\n     * 实例化一个ShaderVariable集合\n     */\n    constructor() {\n    }\n\n    /**\n     * @internal\n     * @returns Array of ShaderVariable\n     */\n    getArrayData(): ShaderVariable[] {\n        return this._idata;\n    }\n\n    /**\n     * @internal\n     * @returns count of ShaderVariableArray\n     */\n    getCount(): number {\n        return this._idata.length;\n    }\n\n    /**\n     * @internal\n     * add one ShaderVariable\n     * @param variable \n     */\n    addShaderUniform(variable: ShaderVariable): void {\n        this._idata.push(variable);\n    }\n\n}\n\n","import { Sprite } from \"../display/Sprite\"\nimport { SpriteConst } from \"../display/SpriteConst\"\nimport { Stage } from \"../display/Stage\"\nimport { RenderSprite } from \"../renders/RenderSprite\"\nimport { Context } from \"../resource/Context\"\nimport { ILaya } from \"../../ILaya\";\n/**\n * ...\n * @author ww\n */\nexport class QuickTestTool {\n\n    private static showedDic: any = {};\n    private static _rendertypeToStrDic: any = {};\n    private static _typeToNameDic: any = {};\n\n    //TODO:coverage\n    static getMCDName(type: number): string {\n        return QuickTestTool._typeToNameDic[type];\n    }\n\n    //TODO:coverage\n    static showRenderTypeInfo(type: any, force: boolean = false): void {\n        if (!force && QuickTestTool.showedDic[type])\n            return;\n        QuickTestTool.showedDic[type] = true;\n        if (!QuickTestTool._rendertypeToStrDic[type]) {\n            var arr: any[] = [];\n            var tType: number;\n            tType = 1;\n            while (tType <= type) {\n                if (tType & type) {\n                    arr.push(QuickTestTool.getMCDName(tType & type));\n                }\n                tType = tType << 1;\n            }\n            QuickTestTool._rendertypeToStrDic[type] = arr.join(\",\");\n        }\n        console.log(\"cmd:\", QuickTestTool._rendertypeToStrDic[type]);\n\n    }\n\n    //TODO:coverage\n    static __init__(): void {\n\n        QuickTestTool._typeToNameDic[SpriteConst.ALPHA] = \"ALPHA\";\n        QuickTestTool._typeToNameDic[SpriteConst.TRANSFORM] = \"TRANSFORM\";\n        QuickTestTool._typeToNameDic[SpriteConst.TEXTURE] = \"TEXTURE\";\n        QuickTestTool._typeToNameDic[SpriteConst.GRAPHICS] = \"GRAPHICS\";\n        QuickTestTool._typeToNameDic[SpriteConst.ONECHILD] = \"ONECHILD\";\n        QuickTestTool._typeToNameDic[SpriteConst.CHILDS] = \"CHILDS\";\n        QuickTestTool._typeToNameDic[SpriteConst.TRANSFORM | SpriteConst.ALPHA] = \"TRANSFORM|ALPHA\";\n\n        QuickTestTool._typeToNameDic[SpriteConst.CANVAS] = \"CANVAS\";\n        QuickTestTool._typeToNameDic[SpriteConst.BLEND] = \"BLEND\";\n        QuickTestTool._typeToNameDic[SpriteConst.FILTERS] = \"FILTERS\";\n        QuickTestTool._typeToNameDic[SpriteConst.MASK] = \"MASK\";\n        QuickTestTool._typeToNameDic[SpriteConst.CLIP] = \"CLIP\";\n        QuickTestTool._typeToNameDic[SpriteConst.LAYAGL3D] = \"LAYAGL3D\";\n    }\n    _renderType: number;\n    _repaint: number;\n    _x: number;\n    _y: number;\n    //TODO:coverage\n    constructor() {\n\n    }\n    /**\n     * 更新、呈现显示对象。由系统调用。\n     * @param\tcontext 渲染的上下文引用。\n     * @param\tx X轴坐标。\n     * @param\ty Y轴坐标。\n     */\n    //TODO:coverage\n    render(context: Context, x: number, y: number): void {\n        QuickTestTool._addType(this._renderType);\n        QuickTestTool.showRenderTypeInfo(this._renderType);\n        //if (_renderType == (SpriteConst.IMAGE | SpriteConst.GRAPHICS | SpriteConst.CHILDS))\n        //{\n        //debugger;\n        //}\n        RenderSprite.renders[this._renderType]._fun(this, context, x + this._x, y + this._y);\n        this._repaint = 0;\n    }\n\n    private static _PreStageRender: Function;\n\n    /**@internal */\n    //TODO:coverage\n    _stageRender(context: Context, x: number, y: number): void {\n        QuickTestTool._countStart();\n        QuickTestTool._PreStageRender.call(ILaya.stage, context, x, y);//TODO TS\n        QuickTestTool._countEnd();\n    }\n    private static _countDic: any = {};\n\n    //TODO:coverage\n    private static _countStart(): void {\n        var key: string;\n        for (key in QuickTestTool._countDic) {\n            QuickTestTool._countDic[key] = 0;\n        }\n    }\n    private static _i: number = 0;\n\n    //TODO:coverage\n    private static _countEnd(): void {\n        QuickTestTool._i++;\n        if (QuickTestTool._i > 60) {\n            QuickTestTool.showCountInfo();\n            QuickTestTool._i = 0;\n        }\n    }\n\n    /**@internal */\n    private static _addType(type: number): void {\n        if (!QuickTestTool._countDic[type]) {\n            QuickTestTool._countDic[type] = 1;\n        } else {\n            QuickTestTool._countDic[type] += 1;\n        }\n    }\n\n    //TODO:coverage\n    static showCountInfo(): void {\n        console.log(\"===================\");\n        var key: string;\n        for (key in QuickTestTool._countDic) {\n            console.log(\"count:\" + QuickTestTool._countDic[key]);\n            QuickTestTool.showRenderTypeInfo(key, true);\n        }\n    }\n\n    //TODO:coverage\n    static enableQuickTest(): void {\n        QuickTestTool.__init__();\n        Sprite[\"prototype\"][\"render\"] = QuickTestTool[\"prototype\"][\"render\"];\n        QuickTestTool._PreStageRender = Stage[\"prototype\"][\"render\"];\n        Stage[\"prototype\"][\"render\"] = QuickTestTool[\"prototype\"][\"_stageRender\"];\n    }\n}\n\n\n","import { Event } from \"../events/Event\"\nimport { EventDispatcher } from \"../events/EventDispatcher\"\nimport { Browser } from \"../utils/Browser\"\nimport { Byte } from \"../utils/Byte\"\n\n/**\n * 连接建立成功后调度。\n * @eventType Event.OPEN\n * */\n/*[Event(name = \"open\", type = \"laya.events.Event\")]*/\n/**\n * 接收到数据后调度。\n * @eventType Event.MESSAGE\n * */\n/*[Event(name = \"message\", type = \"laya.events.Event\")]*/\n/**\n * 连接被关闭后调度。\n * @eventType Event.CLOSE\n * */\n/*[Event(name = \"close\", type = \"laya.events.Event\")]*/\n/**\n * 出现异常后调度。\n * @eventType Event.ERROR\n * */\n/*[Event(name = \"error\", type = \"laya.events.Event\")]*/\n\n/**\n * <p> <code>Socket</code> 封装了 HTML5 WebSocket ，允许服务器端与客户端进行全双工（full-duplex）的实时通信，并且允许跨域通信。在建立连接后，服务器和 Browser/Client Agent 都能主动的向对方发送或接收文本和二进制数据。</p>\n * <p>要使用 <code>Socket</code> 类的方法，请先使用构造函数 <code>new Socket</code> 创建一个 <code>Socket</code> 对象。 <code>Socket</code> 以异步方式传输和接收数据。</p>\n */\nexport class Socket extends EventDispatcher {\n    /**\n     * <p>主机字节序，是 CPU 存放数据的两种不同顺序，包括小端字节序和大端字节序。</p>\n     * <p> LITTLE_ENDIAN ：小端字节序，地址低位存储值的低位，地址高位存储值的高位。</p>\n     * <p> BIG_ENDIAN ：大端字节序，地址低位存储值的高位，地址高位存储值的低位。有时也称之为网络字节序。</p>\n     */\n    static LITTLE_ENDIAN: string = \"littleEndian\";\n    /**\n     * <p>主机字节序，是 CPU 存放数据的两种不同顺序，包括小端字节序和大端字节序。</p>\n     * <p> BIG_ENDIAN ：大端字节序，地址低位存储值的高位，地址高位存储值的低位。有时也称之为网络字节序。</p>\n     * <p> LITTLE_ENDIAN ：小端字节序，地址低位存储值的低位，地址高位存储值的高位。</p>\n     */\n    static BIG_ENDIAN: string = \"bigEndian\";\n    /**@internal */\n    _endian: string;\n    /**@private */\n    protected _socket: any;\n    /**@private */\n    private _connected: boolean;\n    /**@private */\n    private _addInputPosition: number;\n    /**@private */\n    private _input: any;\n    /**@private */\n    private _output: any;\n\n    /**\n     * 不再缓存服务端发来的数据，如果传输的数据为字符串格式，建议设置为true，减少二进制转换消耗。\n     */\n    disableInput: boolean = false;\n    /**\n     * 用来发送和接收数据的 <code>Byte</code> 类。\n     */\n    private _byteClass: new () => any;\n    /**\n     * <p>子协议名称。子协议名称字符串，或由多个子协议名称字符串构成的数组。必须在调用 connect 或者 connectByUrl 之前进行赋值，否则无效。</p>\n     * <p>指定后，只有当服务器选择了其中的某个子协议，连接才能建立成功，否则建立失败，派发 Event.ERROR 事件。</p>\n     * @see https://html.spec.whatwg.org/multipage/comms.html#dom-websocket\n     */\n    protocols: any = [];\n\n    /**\n     * 缓存的服务端发来的数据。\n     */\n    get input(): any {\n        return this._input;\n    }\n\n    /**\n     * 表示需要发送至服务端的缓冲区中的数据。\n     */\n    get output(): any {\n        return this._output;\n    }\n\n    /**\n     * 表示此 Socket 对象目前是否已连接。\n     */\n    get connected(): boolean {\n        return this._connected;\n    }\n\n    /**\n     * <p>主机字节序，是 CPU 存放数据的两种不同顺序，包括小端字节序和大端字节序。</p>\n     * <p> LITTLE_ENDIAN ：小端字节序，地址低位存储值的低位，地址高位存储值的高位。</p>\n     * <p> BIG_ENDIAN ：大端字节序，地址低位存储值的高位，地址高位存储值的低位。</p>\n     */\n    get endian(): string {\n        return this._endian;\n    }\n\n    set endian(value: string) {\n        this._endian = value;\n        if (this._input != null) this._input.endian = value;\n        if (this._output != null) this._output.endian = value;\n    }\n\n    /**\n     * <p>创建新的 Socket 对象。默认字节序为 Socket.BIG_ENDIAN 。若未指定参数，将创建一个最初处于断开状态的套接字。若指定了有效参数，则尝试连接到指定的主机和端口。</p>\n     * @param host\t\t服务器地址。\n     * @param port\t\t服务器端口。\n     * @param byteClass\t用于接收和发送数据的 Byte 类。如果为 null ，则使用 Byte 类，也可传入 Byte 类的子类。\n     * @param protocols\t子协议名称。子协议名称字符串，或由多个子协议名称字符串构成的数组\n     * @param isSecure  是否使用WebSocket安全协议wss，默认（false）使用普通协议ws\n     * @see laya.utils.Byte\n     */\n    constructor(host: string | null = null, port: number = 0, byteClass: new () => any = null, protocols: any[] | null = null, isSecure: boolean = false) {\n        super();\n        this._byteClass = byteClass ? byteClass : Byte;\n        this.protocols = protocols;\n        this.endian = Socket.BIG_ENDIAN;\n        if (host && port > 0 && port < 65535) this.connect(host, port, isSecure);\n    }\n\n    /**\n     * <p>连接到指定的主机和端口。</p>\n     * <p>连接成功派发 Event.OPEN 事件；连接失败派发 Event.ERROR 事件；连接被关闭派发 Event.CLOSE 事件；接收到数据派发 Event.MESSAGE 事件； 除了 Event.MESSAGE 事件参数为数据内容，其他事件参数都是原生的 HTML DOM Event 对象。</p>\n     * @param host\t服务器地址。\n     * @param port\t服务器端口。\n     * @param isSecure  是否使用WebSocket安全协议wss，默认（false）使用普通协议ws\n     */\n    connect(host: string, port: number, isSecure: boolean = false): void {\n        this.connectByUrl(`${isSecure ? \"wss\" : \"ws\"}://${host}:${port}`);\n    }\n\n    /**\n     * <p>连接到指定的服务端 WebSocket URL。 URL 类似 ws://yourdomain:port。</p>\n     * <p>连接成功派发 Event.OPEN 事件；连接失败派发 Event.ERROR 事件；连接被关闭派发 Event.CLOSE 事件；接收到数据派发 Event.MESSAGE 事件； 除了 Event.MESSAGE 事件参数为数据内容，其他事件参数都是原生的 HTML DOM Event 对象。</p>\n     * @param url\t要连接的服务端 WebSocket URL。 URL 类似 ws://yourdomain:port。\n     */\n    connectByUrl(url: string): void {\n        if (this._socket != null) this.close();\n\n        this._socket && this.cleanSocket();\n\n        if (!this.protocols || this.protocols.length == 0) {\n            this._socket = new Browser.window.WebSocket(url);\n        } else {\n            this._socket = new Browser.window.WebSocket(url, this.protocols);\n        }\n\n        this._socket.binaryType = \"arraybuffer\";\n\n        this._output = new this._byteClass();\n        this._output.endian = this.endian;\n        this._input = new this._byteClass();\n        this._input.endian = this.endian;\n        this._addInputPosition = 0;\n\n        this._socket.onopen = (e: any) => {\n            this._onOpen(e);\n        };\n        this._socket.onmessage = (msg: any): void => {\n            this._onMessage(msg);\n        };\n        this._socket.onclose = (e: any): void => {\n            this._onClose(e);\n        };\n        this._socket.onerror = (e: any): void => {\n            this._onError(e);\n        };\n    }\n\n    /**\n     * 清理Socket：关闭Socket链接，关闭事件监听，重置Socket\n     */\n    cleanSocket(): void {\n        this.close();\n        this._connected = false;\n        this._socket.onopen = null;\n        this._socket.onmessage = null;\n        this._socket.onclose = null;\n        this._socket.onerror = null;\n        this._socket = null;\n    }\n\n    /**\n     * 关闭连接。\n     */\n    close(): void {\n        if (this._socket != null) {\n            try {\n                this._socket.close();\n            } catch (e) {\n            }\n        }\n    }\n\n    /**\n     * @private\n     * 连接建立成功 。\n     */\n    protected _onOpen(e: any): void {\n        this._connected = true;\n        this.event(Event.OPEN, e);\n    }\n\n    /**\n     * @private\n     * 接收到数据处理方法。\n     * @param msg 数据。\n     */\n    protected _onMessage(msg: any): void {\n        if (!msg || !msg.data) return;\n        var data: any = msg.data;\n        if (this.disableInput && data) {\n            this.event(Event.MESSAGE, data);\n            return;\n        }\n        if (this._input.length > 0 && this._input.bytesAvailable < 1) {\n            this._input.clear();\n            this._addInputPosition = 0;\n        }\n        var pre: number = this._input.pos;\n        !this._addInputPosition && (this._addInputPosition = 0);\n        this._input.pos = this._addInputPosition;\n\n        if (data) {\n            if (typeof (data) == 'string') {\n                this._input.writeUTFBytes(data);\n            } else {\n                this._input.writeArrayBuffer(data);\n            }\n            this._addInputPosition = this._input.pos;\n            this._input.pos = pre;\n        }\n        this.event(Event.MESSAGE, data);\n    }\n\n    /**\n     * @private\n     * 连接被关闭处理方法。\n     */\n    protected _onClose(e: any): void {\n        this._connected = false;\n        this.event(Event.CLOSE, e)\n    }\n\n    /**\n     * @private\n     * 出现异常处理方法。\n     */\n    protected _onError(e: any): void {\n        this.event(Event.ERROR, e)\n    }\n\n    /**\n     * 发送数据到服务器。\n     * @param\tdata 需要发送的数据，可以是String或者ArrayBuffer。\n     */\n    send(data: any): void {\n        this._socket.send(data);\n    }\n\n    /**\n     * 发送缓冲区中的数据到服务器。\n     */\n    flush(): void {\n        if (this._output && this._output.length > 0) {\n            var evt: any;\n            try {\n                this._socket && this._socket.send(this._output.__getBuffer().slice(0, this._output.length));\n            } catch (e) {\n                evt = e;\n            }\n            this._output.endian = this.endian;\n            this._output.clear();\n            if (evt) this.event(Event.ERROR, evt);\n        }\n    }\n}\n\n\n","\nimport { ShaderDataType } from \"../../RenderEngine/RenderShader/ShaderData\";\nimport { LayaGL } from \"../../layagl/LayaGL\";\nimport { RenderCapable } from \"../RenderEnum/RenderCapable\";\nimport { UniformMapType } from \"./SubShader\";\n\n/**\n * @internal\n */\nexport class GLSLCodeGenerator {\n\n    static glslAttributeString(attributeMap: { [name: string]: [number, ShaderDataType] }) {\n\n        let res = \"\";\n        for (const key in attributeMap) {\n            let type = getAttributeType(attributeMap[key][1]);\n            if (type != \"\") {\n                res = `${res}attribute ${type} ${key};\\n`;\n            }\n        }\n\n        return res;\n    }\n\n    static glslUniformString(uniformsMap: UniformMapType, useUniformBlock: boolean) {\n\n        if (useUniformBlock) {\n            let blocksStr = \"\";\n            let uniformsStr = \"\";\n            for (const key in uniformsMap) {\n                // uniform block\n                if (typeof uniformsMap[key] == \"object\") {\n                    let blockUniforms = <{ [uniformName: string]: ShaderDataType }>uniformsMap[key];\n                    blocksStr += `uniform ${key} {\\n`;\n                    for (const uniformName in blockUniforms) {\n                        let dataType = blockUniforms[uniformName];\n                        let typeStr = getAttributeType(dataType);\n                        if (typeStr != \"\") {\n                            blocksStr += `${typeStr} ${uniformName};\\n`;\n                        }\n                    }\n                    blocksStr += \"};\\n\";\n                }\n                else { // uniform\n                    let dataType = <ShaderDataType>uniformsMap[key];\n                    let typeStr = getAttributeType(dataType);\n                    if (typeStr != \"\") {\n                        uniformsStr += `uniform ${typeStr} ${key};\\n`;\n                    }\n                }\n            }\n            return blocksStr + uniformsStr;\n\n        }\n        else {\n            let uniformsStr = \"\";\n            for (const key in uniformsMap) {\n                // uniform block\n                if (typeof uniformsMap[key] == \"object\") {\n                    let blockUniforms = <{ [uniformName: string]: ShaderDataType }>uniformsMap[key];\n                    for (const uniformName in blockUniforms) {\n                        let dataType = blockUniforms[uniformName];\n                        let typeStr = getAttributeType(dataType);\n                        if (typeStr != \"\") {\n                            uniformsStr += `uniform ${typeStr} ${uniformName};\\n`;\n                        }\n                    }\n                }\n                else { // uniform\n                    let dataType = <ShaderDataType>uniformsMap[key];\n                    let typeStr = getAttributeType(dataType);\n                    if (typeStr != \"\") {\n                        uniformsStr += `uniform ${typeStr} ${key};\\n`;\n                    }\n                }\n            }\n            return uniformsStr;\n        }\n\n    }\n}\n\nfunction getAttributeType(type: ShaderDataType) {\n    switch (type) {\n        case ShaderDataType.Int:\n            return \"int\";\n        case ShaderDataType.Bool:\n            return \"bool\";\n        case ShaderDataType.Float:\n            return \"float\";\n        case ShaderDataType.Vector2:\n            return \"vec2\";\n        case ShaderDataType.Vector3:\n            return \"vec3\";\n        case ShaderDataType.Vector4:\n        case ShaderDataType.Color:\n            return \"vec4\";\n        case ShaderDataType.Matrix4x4:\n            return \"mat4\";\n        case ShaderDataType.Matrix3x3:\n            return \"mat3\";\n        case ShaderDataType.Texture2D:\n            return \"sampler2D\";\n        case ShaderDataType.TextureCube:\n            return \"samplerCube\";\n        case ShaderDataType.Texture2DArray:\n            if (LayaGL.renderEngine.getCapable(RenderCapable.Texture3D)) {\n                return \"sampler2DArray\";\n            }\n            else {\n                return \"\";\n            }\n        case ShaderDataType.Texture3D:\n            if (LayaGL.renderEngine.getCapable(RenderCapable.Texture3D)) {\n                return \"sampler3D\";\n            }\n            else {\n                return \"\";\n            }\n        default:\n            return \"\";\n    }\n}","import { Config3D } from \"../../../Config3D\";\nimport { CommandEncoder } from \"../../layagl/CommandEncoder\";\nimport { CullMode } from \"../../RenderEngine/RenderEnum/CullMode\";\nimport { IRenderShaderInstance } from \"../../RenderEngine/RenderInterface/IRenderShaderInstance\";\nimport { Shader3D } from \"../../RenderEngine/RenderShader/Shader3D\";\nimport { ShaderData, ShaderDataType } from \"../../RenderEngine/RenderShader/ShaderData\";\nimport { ShaderPass } from \"../../RenderEngine/RenderShader/ShaderPass\";\nimport { ShaderVariable } from \"../../RenderEngine/RenderShader/ShaderVariable\";\nimport { UniformMapType } from \"../../RenderEngine/RenderShader/SubShader\";\nimport { ShaderCompileDefineBase, ShaderProcessInfo } from \"../../webgl/utils/ShaderCompileDefineBase\";\nimport { ShaderNode } from \"../../webgl/utils/ShaderNode\";\nimport { WebGLEngine } from \"../RenderEngine/WebGLEngine/WebGLEngine\";\nimport { RenderParams } from \"../RenderEnum/RenderParams\";\nimport { GLSLCodeGenerator } from \"./GLSLCodeGenerator\";\nimport { RenderStateContext } from \"../../RenderEngine/RenderStateContext\";\nimport { Stat } from \"../../utils/Stat\";\nimport { RenderState } from \"./RenderState\";\nimport { LayaGL } from \"../../layagl/LayaGL\";\n\n/**\n * <code>ShaderInstance</code> 类用于实现ShaderInstance。\n */\nexport class ShaderInstance {\n\t/**@internal */\n\tprivate _shaderPass: ShaderCompileDefineBase | ShaderPass;\n\n\tprivate _renderShaderInstance: IRenderShaderInstance;\n\n\t/**@internal */\n\t_sceneUniformParamsMap: CommandEncoder;\n\t/**@internal */\n\t_cameraUniformParamsMap: CommandEncoder;\n\t/**@internal */\n\t_spriteUniformParamsMap: CommandEncoder;\n\t/**@internal */\n\t_materialUniformParamsMap: CommandEncoder;\n\t/**@internal */\n\t_sprite2DUniformParamsMap: CommandEncoder;\n\t/**@internal */\n\tprivate _customUniformParamsMap: any[] = [];\n\n\t/**@internal */\n\t_uploadMark: number = -1;\n\t/**@internal */\n\t_uploadMaterial: ShaderData;\n\t/**@internal RenderIDTODO*/\n\t_uploadRender: any;\n\t/** @internal */\n\t_uploadRenderType: number = -1;\n\t/**@internal CamneraTOD*/\n\t_uploadCameraShaderValue: ShaderData;\n\t/**@internal SceneIDTODO*/\n\t_uploadScene: any;\n\n\t/**\n\t * 创建一个 <code>ShaderInstance</code> 实例。\n\t */\n\tconstructor(shaderProcessInfo: ShaderProcessInfo, shaderPass: ShaderCompileDefineBase) {\n\t\t// shaderProcessInfo.is2D ? this._webGLShaderLanguageProcess2D(shaderProcessInfo.defineString, shaderProcessInfo.attributeMap, shaderProcessInfo.uniformMap, shaderProcessInfo.vs, shaderProcessInfo.ps)\n\t\tthis._webGLShaderLanguageProcess3D(shaderProcessInfo.defineString, shaderProcessInfo.attributeMap, shaderProcessInfo.uniformMap, shaderProcessInfo.vs, shaderProcessInfo.ps);\n\t\tif (this._renderShaderInstance._complete) {\n\t\t\tthis._shaderPass = shaderPass;\n\t\t\tshaderProcessInfo.is2D ? this._create2D() : this._create();\n\t\t}\n\t}\n\n\t/**\n\t * get complete\n\t */\n\tget complete(): boolean {\n\t\treturn this._renderShaderInstance._complete;\n\t}\n\n\tprotected _webGLShaderLanguageProcess3D(defineString: string[],\n\t\tattributeMap: { [name: string]: [number, ShaderDataType] },\n\t\tuniformMap: UniformMapType, VS: ShaderNode, FS: ShaderNode) {\n\n\t\tvar clusterSlices = Config3D.lightClusterCount;\n\t\tvar defMap: any = {};\n\n\t\tvar vertexHead: string;\n\t\tvar fragmentHead: string;\n\t\tvar defineStr: string = \"\";\n\n\t\t// 拼接 shader attribute\n\t\tlet useUniformBlock = Config3D._uniformBlock;\n\t\tlet attributeglsl = GLSLCodeGenerator.glslAttributeString(attributeMap);\n\t\tlet uniformglsl = GLSLCodeGenerator.glslUniformString(uniformMap, useUniformBlock);\n\n\t\tif ((LayaGL.renderEngine as WebGLEngine).isWebGL2) {\n\t\t\tdefineString.push(\"GRAPHICS_API_GLES3\");\n\t\t\tvertexHead =\n\t\t\t\t`#version 300 es\n#if defined(GL_FRAGMENT_PRECISION_HIGH)\n    precision highp float;\n    precision highp int;\n    precision highp sampler2DArray;\n    precision highp sampler3D;\n#else\n    precision mediump float;\n    precision mediump int;\n    precision mediump sampler2DArray;\n    precision mediump sampler3D;\n#endif\nlayout(std140, column_major) uniform;\n#define attribute in\n#define varying out\n#define textureCube texture\n#define texture2D texture\n${attributeglsl}\n${uniformglsl}\n`;\n\n\t\t\tfragmentHead =\n\t\t\t\t`#version 300 es\n#if defined(GL_FRAGMENT_PRECISION_HIGH)\n    precision highp float;\n    precision highp int;\n    precision highp sampler2DArray;\n\tprecision highp sampler3D;\n#else\n    precision mediump float;\n    precision mediump int;\n    precision mediump sampler2DArray;\n\tprecision mediump sampler3D;\n#endif\nlayout(std140, column_major) uniform;\n#define varying in\nout highp vec4 pc_fragColor;\n#define gl_FragColor pc_fragColor\n#define gl_FragDepthEXT gl_FragDepth\n#define texture2D texture\n#define textureCube texture\n#define texture2DProj textureProj\n#define texture2DLodEXT textureLod\n#define texture2DProjLodEXT textureProjLod\n#define textureCubeLodEXT textureLod\n#define texture2DGradEXT textureGrad\n#define texture2DProjGradEXT textureProjGrad\n#define textureCubeGradEXT textureGrad\n${uniformglsl}`;\n\t\t}\n\t\telse {\n\t\t\tvertexHead =\n\t\t\t\t`#if defined(GL_FRAGMENT_PRECISION_HIGH)\n    precision highp float;\n    precision highp int;\n#else\n    precision mediump float;\n    precision mediump int;\n#endif\n${attributeglsl}\n${uniformglsl}`;\n\t\t\tfragmentHead =\n\t\t\t\t`#ifdef GL_EXT_shader_texture_lod\n    #extension GL_EXT_shader_texture_lod : enable\n#endif\n\n#ifdef GL_OES_standard_derivatives\n\t#extension GL_OES_standard_derivatives : enable \n#endif\n\n#if defined(GL_FRAGMENT_PRECISION_HIGH)\n    precision highp float;\n    precision highp int;\n#else\n    precision mediump float;\n    precision mediump int;\n#endif\n\n#if !defined(GL_EXT_shader_texture_lod)\n    #define texture1DLodEXT texture1D\n    #define texture2DLodEXT texture2D\n    #define texture2DProjLodEXT texture2DProj\n    #define textureCubeLodEXT textureCube\n#endif\n${uniformglsl}`;\n\t\t}\n\n\t\t// todo \n\t\tdefineStr += \"#define MAX_LIGHT_COUNT \" + Config3D.maxLightCount + \"\\n\";\n\t\tdefineStr += \"#define MAX_LIGHT_COUNT_PER_CLUSTER \" + Config3D._maxAreaLightCountPerClusterAverage + \"\\n\";\n\t\tdefineStr += \"#define CLUSTER_X_COUNT \" + clusterSlices.x + \"\\n\";\n\t\tdefineStr += \"#define CLUSTER_Y_COUNT \" + clusterSlices.y + \"\\n\";\n\t\tdefineStr += \"#define CLUSTER_Z_COUNT \" + clusterSlices.z + \"\\n\";\n\t\tdefineStr += \"#define MORPH_MAX_COUNT \" + Config3D.maxMorphTargetCount + \"\\n\";\n\t\tdefineStr += \"#define SHADER_CAPAILITY_LEVEL \" + LayaGL.renderEngine.getParams(RenderParams.SHADER_CAPAILITY_LEVEL) + \"\\n\";\n\n\n\n\t\tfor (var i: number = 0, n: number = defineString.length; i < n; i++) {\n\t\t\tvar def: string = defineString[i];\n\t\t\tdefineStr += \"#define \" + def + \"\\n\";\n\t\t\tdefMap[def] = true;\n\t\t}\n\n\t\tvar vs: any[] = VS.toscript(defMap, []);\n\t\tvar vsVersion: string = '';\n\t\tif (vs[0].indexOf('#version') == 0) {\n\t\t\tvsVersion = vs[0] + '\\n';\n\t\t\tvs.shift();\n\t\t}\n\n\t\tvar ps: any[] = FS.toscript(defMap, []);\n\t\tvar psVersion: string = '';\n\t\tif (ps[0].indexOf('#version') == 0) {\n\t\t\tpsVersion = ps[0] + '\\n';\n\t\t\tps.shift();\n\t\t};\n\t\tlet dstVS = vsVersion + vertexHead + defineStr + vs.join('\\n');\n\t\tlet detFS = psVersion + fragmentHead + defineStr + ps.join('\\n');\n\t\tthis._renderShaderInstance = LayaGL.renderEngine.createShaderInstance(dstVS, detFS, attributeMap);\n\t}\n\n\tprotected _webGLShaderLanguageProcess2D(defineString: string[],\n\t\tattributeMap: { [name: string]: [number, ShaderDataType] },\n\t\tuniformMap: UniformMapType, VS: ShaderNode, FS: ShaderNode) {\n\t\tvar defMap: any = {};\n\n\t\tvar vertexHead: string;\n\t\tvar fragmentHead: string;\n\t\tvar defineStr: string = \"\";\n\n\t\tif ((LayaGL.renderEngine as WebGLEngine).isWebGL2) {\n\t\t\tvertexHead =\n\t\t\t\t`#version 300 es\\n\n                #define attribute in\n                #define varying out\n                #define textureCube texture\n                #define texture2D texture\\n`;\n\t\t\tfragmentHead =\n\t\t\t\t`#version 300 es\\n\n                #define varying in\n                out highp vec4 pc_fragColor;\n                #define gl_FragColor pc_fragColor\n                #define gl_FragDepthEXT gl_FragDepth\n                #define texture2D texture\n                #define textureCube texture\n                #define texture2DProj textureProj\n                #define texture2DLodEXT textureLod\n                #define texture2DProjLodEXT textureProjLod\n                #define textureCubeLodEXT textureLod\n                #define texture2DGradEXT textureGrad\n                #define texture2DProjGradEXT textureProjGrad\n                #define textureCubeGradEXT textureGrad\\n`;\n\t\t}\n\t\telse {\n\t\t\tvertexHead = \"\"\n\t\t\tfragmentHead =\n\t\t\t\t`#ifdef GL_EXT_shader_texture_lod\n                    #extension GL_EXT_shader_texture_lod : enable\n                #endif\n                #if !defined(GL_EXT_shader_texture_lod)\n                    #define texture1DLodEXT texture1D\n                    #define texture2DLodEXT texture2D\n                    #define texture2DProjLodEXT texture2DProj\n                    #define texture3DLodEXT texture3D\n                    #define textureCubeLodEXT textureCube\n                #endif\\n`;\n\t\t}\n\n\n\t\tfor (var i: number = 0, n: number = defineString.length; i < n; i++) {\n\t\t\tvar def: string = defineString[i];\n\t\t\tdefineStr += \"#define \" + def + \"\\n\";\n\t\t\tdefMap[def] = true;\n\t\t}\n\n\t\tvar vs: any[] = VS.toscript(defMap, []);\n\t\tvar vsVersion: string = '';\n\t\tif (vs[0].indexOf('#version') == 0) {\n\t\t\tvsVersion = vs[0] + '\\n';\n\t\t\tvs.shift();\n\t\t}\n\n\t\tvar ps: any[] = FS.toscript(defMap, []);\n\t\tvar psVersion: string = '';\n\t\tif (ps[0].indexOf('#version') == 0) {\n\t\t\tpsVersion = ps[0] + '\\n';\n\t\t\tps.shift();\n\t\t}\n\n\t\tlet dstVS = vsVersion + vertexHead + defineStr + vs.join('\\n');\n\t\tlet detFS = psVersion + fragmentHead + defineStr + ps.join('\\n');\n\t\tthis._renderShaderInstance = LayaGL.renderEngine.createShaderInstance(dstVS, detFS, attributeMap);\n\t}\n\t/**\n\t * @internal\n\t */\n\tprotected _create(): void {\n\t\tthis._sceneUniformParamsMap = new CommandEncoder();\n\t\tthis._cameraUniformParamsMap = new CommandEncoder();\n\t\tthis._spriteUniformParamsMap = new CommandEncoder();\n\t\tthis._materialUniformParamsMap = new CommandEncoder();\n\t\tconst sceneParams = LayaGL.renderOBJCreate.createGlobalUniformMap(\"Scene3D\");\n\t\t//const spriteParms = LayaGL.renderOBJCreate.createGlobalUniformMap(\"Sprite3D\");//分开，根据不同的Render\n\t\tconst cameraParams = LayaGL.renderOBJCreate.createGlobalUniformMap(\"BaseCamera\");\n\t\tconst customParams = LayaGL.renderOBJCreate.createGlobalUniformMap(\"Custom\");\n\t\tlet i, n;\n\t\tlet data: ShaderVariable[] = this._renderShaderInstance.getUniformMap();\n\t\tfor (i = 0, n = data.length; i < n; i++) {\n\t\t\tlet one: ShaderVariable = data[i];\n\t\t\tif (sceneParams.hasPtrID(one.dataOffset)) {\n\t\t\t\tthis._sceneUniformParamsMap.addShaderUniform(one);\n\t\t\t} else if (cameraParams.hasPtrID(one.dataOffset)) {\n\t\t\t\tthis._cameraUniformParamsMap.addShaderUniform(one);\n\t\t\t} else if (this.hasSpritePtrID(one.dataOffset)) {\n\t\t\t\tthis._spriteUniformParamsMap.addShaderUniform(one);\n\t\t\t} else if (customParams.hasPtrID(one.dataOffset)) {\n\t\t\t\tthis._customUniformParamsMap || (this._customUniformParamsMap = []);\n\t\t\t\tthis._customUniformParamsMap[one.dataOffset] = one;\n\t\t\t} else {\n\t\t\t\tthis._materialUniformParamsMap.addShaderUniform(one);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tprotected _create2D(): void {\n\t\tthis._sprite2DUniformParamsMap = new CommandEncoder();\n\t\tthis._materialUniformParamsMap = new CommandEncoder();\n\t\tthis._sceneUniformParamsMap = new CommandEncoder();\n\t\tconst sprite2DParms = LayaGL.renderOBJCreate.createGlobalUniformMap(\"Sprite2D\");//分开，根据不同的Render\n\t\tconst sceneParms = LayaGL.renderOBJCreate.createGlobalUniformMap(\"Sprite2DGlobal\");//分开，根据不同的Render\n\t\tlet i, n;\n\t\tlet data: ShaderVariable[] = this._renderShaderInstance.getUniformMap();\n\t\tfor (i = 0, n = data.length; i < n; i++) {\n\t\t\tlet one: ShaderVariable = data[i];\n\t\t\tif (sprite2DParms.hasPtrID(one.dataOffset)) {\n\t\t\t\tthis._sprite2DUniformParamsMap.addShaderUniform(one);\n\t\t\t} else if (sceneParms.hasPtrID(one.dataOffset)) {\n\t\t\t\tthis._sceneUniformParamsMap.addShaderUniform(one);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._materialUniformParamsMap.addShaderUniform(one);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate hasSpritePtrID(dataOffset: number): boolean {\n\t\tlet commap = this._shaderPass.nodeCommonMap;\n\t\tif (!commap) {\n\t\t\treturn false;\n\t\t} else {\n\t\t\tfor (let i = 0, n = commap.length; i < n; i++) {\n\t\t\t\tif (LayaGL.renderOBJCreate.createGlobalUniformMap(commap[i]).hasPtrID(dataOffset))\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t * @override\n\t */\n\tprotected _disposeResource(): void {\n\t\tthis._renderShaderInstance.destroy();\n\t\tthis._sceneUniformParamsMap = null;\n\t\tthis._cameraUniformParamsMap = null;\n\t\tthis._spriteUniformParamsMap = null;\n\t\tthis._materialUniformParamsMap = null\n\t\tthis._customUniformParamsMap = null;\n\n\t\tthis._uploadMaterial = null;\n\t\tthis._uploadRender = null;\n\t\tthis._uploadCameraShaderValue = null;\n\t\tthis._uploadScene = null;\n\t}\n\n\t/**\n\t * apply shader programe\n\t * @returns \n\t */\n\tbind() {\n\t\treturn this._renderShaderInstance.bind();\n\t}\n\n\t/**\n\t * upload uniform data\n\t * @param shaderUniform \n\t * @param shaderDatas \n\t * @param uploadUnTexture \n\t */\n\tuploadUniforms(shaderUniform: CommandEncoder, shaderDatas: ShaderData, uploadUnTexture: boolean) {\n\t\tStat.uploadUniform += LayaGL.renderEngine.uploadUniforms(this._renderShaderInstance, shaderUniform, shaderDatas, uploadUnTexture);\n\t}\n\n\t/**\n\t * set blend depth stencil RenderState\n\t * @param shaderDatas \n\t */\n\tuploadRenderStateBlendDepth(shaderDatas: ShaderData): void {\n\t\tif ((<ShaderPass>this._shaderPass).statefirst)\n\t\t\tthis.uploadRenderStateBlendDepthByShader(shaderDatas);\n\t\telse\n\t\t\tthis.uploadRenderStateBlendDepthByMaterial(shaderDatas);\n\t}\n\n\t/**\n\t * set blend depth stencil RenderState frome Shader\n\t * @param shaderDatas \n\t */\n\tuploadRenderStateBlendDepthByShader(shaderDatas: ShaderData) {\n\t\tvar datas: any = shaderDatas.getData();\n\t\tvar renderState: RenderState = (<ShaderPass>this._shaderPass).renderState;\n\t\tvar depthWrite: any = (renderState.depthWrite ?? datas[Shader3D.DEPTH_WRITE]) ?? RenderState.Default.depthWrite;\n\t\tRenderStateContext.setDepthMask(depthWrite);\n\t\tvar depthTest: any = (renderState.depthTest ?? datas[Shader3D.DEPTH_TEST]) ?? RenderState.Default.depthTest;\n\t\tif (depthTest == RenderState.DEPTHTEST_OFF)\n\t\t\tRenderStateContext.setDepthTest(false);\n\t\telse {\n\t\t\tRenderStateContext.setDepthTest(true);\n\t\t\tRenderStateContext.setDepthFunc(depthTest);\n\t\t}\n\t\t//Stencil\n\t\tvar stencilWrite: any = (renderState.stencilWrite ?? datas[Shader3D.STENCIL_WRITE]) ?? RenderState.Default.stencilWrite;\n\t\tvar stencilTest: any = (renderState.stencilTest ?? datas[Shader3D.STENCIL_TEST]) ?? RenderState.Default.stencilTest;\n\t\tRenderStateContext.setStencilMask(stencilWrite);\n\t\tif (stencilWrite) {\n\t\t\tvar stencilOp: any = (renderState.stencilOp ?? datas[Shader3D.STENCIL_Op]) ?? RenderState.Default.stencilOp;\n\t\t\tRenderStateContext.setstencilOp(stencilOp.x, stencilOp.y, stencilOp.z);\n\t\t}\n\t\tif (stencilTest == RenderState.STENCILTEST_OFF) {\n\t\t\tRenderStateContext.setStencilTest(false);\n\t\t} else {\n\t\t\tvar stencilRef: any = (renderState.stencilRef ?? datas[Shader3D.STENCIL_Ref]) ?? RenderState.Default.stencilRef;\n\t\t\tRenderStateContext.setStencilTest(true);\n\t\t\tRenderStateContext.setStencilFunc(stencilTest, stencilRef);\n\t\t}\n\t\t//blend\n\t\tvar blend: any = (renderState.blend ?? datas[Shader3D.BLEND]) ?? RenderState.Default.blend;\n\t\tswitch (blend) {\n\t\t\tcase RenderState.BLEND_DISABLE:\n\t\t\t\tRenderStateContext.setBlend(false);\n\t\t\t\tbreak;\n\t\t\tcase RenderState.BLEND_ENABLE_ALL:\n\t\t\t\tvar blendEquation: any = (renderState.blendEquation ?? datas[Shader3D.BLEND_EQUATION]) ?? RenderState.Default.blendEquation;\n\t\t\t\tvar srcBlend: any = (renderState.srcBlend ?? datas[Shader3D.BLEND_SRC]) ?? RenderState.Default.srcBlend;\n\t\t\t\tvar dstBlend: any = (renderState.dstBlend ?? datas[Shader3D.BLEND_DST]) ?? RenderState.Default.dstBlend;\n\t\t\t\tRenderStateContext.setBlend(true);\n\t\t\t\tRenderStateContext.setBlendEquation(blendEquation);\n\t\t\t\tRenderStateContext.setBlendFunc(srcBlend, dstBlend);\n\t\t\t\tbreak;\n\t\t\tcase RenderState.BLEND_ENABLE_SEPERATE:\n\t\t\t\tvar blendEquationRGB: any = (renderState.blendEquationRGB ?? datas[Shader3D.BLEND_EQUATION_RGB]) ?? RenderState.Default.blendEquationRGB;\n\t\t\t\tvar blendEquationAlpha: any = (renderState.blendEquationAlpha ?? datas[Shader3D.BLEND_EQUATION_ALPHA]) ?? RenderState.Default.blendEquationAlpha;\n\t\t\t\tvar srcRGB: any = (renderState.srcBlendRGB ?? datas[Shader3D.BLEND_SRC_RGB]) ?? RenderState.Default.srcBlendRGB;\n\t\t\t\tvar dstRGB: any = (renderState.dstBlendRGB ?? datas[Shader3D.BLEND_DST_RGB]) ?? RenderState.Default.dstBlendRGB;\n\t\t\t\tvar srcAlpha: any = (renderState.srcBlendAlpha ?? datas[Shader3D.BLEND_SRC_ALPHA]) ?? RenderState.Default.srcBlendAlpha;\n\t\t\t\tvar dstAlpha: any = (renderState.dstBlendAlpha ?? datas[Shader3D.BLEND_DST_ALPHA]) ?? RenderState.Default.dstBlendAlpha;\n\t\t\t\tRenderStateContext.setBlend(true);\n\t\t\t\tRenderStateContext.setBlendEquationSeparate(blendEquationRGB, blendEquationAlpha);\n\t\t\t\tRenderStateContext.setBlendFuncSeperate(srcRGB, dstRGB, srcAlpha, dstAlpha);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t * set blend depth stencil RenderState frome Material\n\t * @param shaderDatas \n\t */\n\tuploadRenderStateBlendDepthByMaterial(shaderDatas: ShaderData) {\n\t\tvar datas: any = shaderDatas.getData();\n\n\t\t// depth\n\t\tvar depthWrite: any = datas[Shader3D.DEPTH_WRITE];\n\t\tdepthWrite = depthWrite ?? RenderState.Default.depthWrite;\n\t\tRenderStateContext.setDepthMask(depthWrite);\n\n\t\tvar depthTest: any = datas[Shader3D.DEPTH_TEST];\n\t\tdepthTest = depthTest ?? RenderState.Default.depthTest;\n\t\tif (depthTest === RenderState.DEPTHTEST_OFF) {\n\t\t\tRenderStateContext.setDepthTest(false);\n\t\t}\n\t\telse {\n\t\t\tRenderStateContext.setDepthTest(true);\n\t\t\tRenderStateContext.setDepthFunc(depthTest);\n\t\t}\n\n\t\t//Stencil\n\t\tvar stencilWrite: any = datas[Shader3D.STENCIL_WRITE];\n\t\tstencilWrite = stencilWrite ?? RenderState.Default.stencilWrite;\n\t\tRenderStateContext.setStencilMask(stencilWrite);\n\t\tif (stencilWrite) {\n\t\t\tvar stencilOp: any = datas[Shader3D.STENCIL_Op];\n\t\t\tstencilOp = stencilOp ?? RenderState.Default.stencilOp;\n\t\t\tRenderStateContext.setstencilOp(stencilOp.x, stencilOp.y, stencilOp.z);\n\t\t}\n\n\t\tvar stencilTest: any = datas[Shader3D.STENCIL_TEST];\n\t\tstencilTest = stencilTest ?? RenderState.Default.stencilTest;\n\t\tif (stencilTest == RenderState.STENCILTEST_OFF) {\n\t\t\tRenderStateContext.setStencilTest(false);\n\t\t}\n\t\telse {\n\t\t\tvar stencilRef: any = datas[Shader3D.STENCIL_Ref];\n\t\t\tstencilRef = stencilRef ?? RenderState.Default.stencilRef;\n\t\t\tRenderStateContext.setStencilTest(true);\n\t\t\tRenderStateContext.setStencilFunc(stencilTest, stencilRef);\n\t\t}\n\n\t\t//blend\n\t\tvar blend: any = datas[Shader3D.BLEND];\n\t\tblend = blend ?? RenderState.Default.blend;\n\t\tswitch (blend) {\n\t\t\tcase RenderState.BLEND_ENABLE_ALL:\n\t\t\t\tvar blendEquation: any = datas[Shader3D.BLEND_EQUATION];\n\t\t\t\tblendEquation = blendEquation ?? RenderState.Default.blendEquation;\n\t\t\t\tvar srcBlend: any = datas[Shader3D.BLEND_SRC];\n\t\t\t\tsrcBlend = srcBlend ?? RenderState.Default.srcBlend;\n\t\t\t\tvar dstBlend: any = datas[Shader3D.BLEND_DST];\n\t\t\t\tdstBlend = dstBlend ?? RenderState.Default.dstBlend;\n\t\t\t\tRenderStateContext.setBlend(true);\n\t\t\t\tRenderStateContext.setBlendEquation(blendEquation);\n\t\t\t\tRenderStateContext.setBlendFunc(srcBlend, dstBlend);\n\t\t\t\tbreak;\n\t\t\tcase RenderState.BLEND_ENABLE_SEPERATE:\n\t\t\t\tvar blendEquationRGB: any = datas[Shader3D.BLEND_EQUATION_RGB];\n\t\t\t\tblendEquationRGB = blendEquationRGB ?? RenderState.Default.blendEquationRGB;\n\n\t\t\t\tvar blendEquationAlpha: any = datas[Shader3D.BLEND_EQUATION_ALPHA];\n\t\t\t\tblendEquationAlpha = blendEquationAlpha ?? RenderState.Default.blendEquationAlpha;\n\n\t\t\t\tvar srcRGB: any = datas[Shader3D.BLEND_SRC_RGB];\n\t\t\t\tsrcRGB = srcRGB ?? RenderState.Default.srcBlendRGB;\n\n\t\t\t\tvar dstRGB: any = datas[Shader3D.BLEND_DST_RGB];\n\t\t\t\tdstRGB = dstRGB ?? RenderState.Default.dstBlendRGB;\n\n\t\t\t\tvar srcAlpha: any = datas[Shader3D.BLEND_SRC_ALPHA];\n\t\t\t\tsrcAlpha = srcAlpha ?? RenderState.Default.srcBlendAlpha;\n\n\t\t\t\tvar dstAlpha: any = datas[Shader3D.BLEND_DST_ALPHA];\n\t\t\t\tdstAlpha = dstAlpha ?? RenderState.Default.dstBlendAlpha;\n\n\t\t\t\tRenderStateContext.setBlend(true);\n\t\t\t\tRenderStateContext.setBlendEquationSeparate(blendEquationRGB, blendEquationAlpha);\n\t\t\t\tRenderStateContext.setBlendFuncSeperate(srcRGB, dstRGB, srcAlpha, dstAlpha);\n\t\t\t\tbreak;\n\t\t\tcase RenderState.BLEND_DISABLE:\n\t\t\tdefault:\n\t\t\t\tRenderStateContext.setBlend(false);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\n\t/**\n\t * @internal\n\t */\n\tuploadRenderStateFrontFace(shaderDatas: ShaderData, isTarget: boolean, invertFront: boolean): void {\n\t\tvar renderState: RenderState = (<ShaderPass>this._shaderPass).renderState;\n\t\tvar datas: any = shaderDatas.getData();\n\t\tvar cull: any = datas[Shader3D.CULL];\n\t\tif ((<ShaderPass>this._shaderPass).statefirst) {\n\t\t\tcull = renderState.cull ?? cull;\n\t\t}\n\t\tcull = cull ?? RenderState.Default.cull;\n\t\tvar forntFace: number;\n\t\tswitch (cull) {\n\t\t\tcase RenderState.CULL_NONE:\n\t\t\t\tRenderStateContext.setCullFace(false);\n\t\t\t\tif (isTarget != invertFront)\n\t\t\t\t\tforntFace = CullMode.Front;//gl.CCW\n\t\t\t\telse\n\t\t\t\t\tforntFace = CullMode.Back;\n\t\t\t\tRenderStateContext.setFrontFace(forntFace);\n\t\t\t\tbreak;\n\t\t\tcase RenderState.CULL_FRONT:\n\t\t\t\tRenderStateContext.setCullFace(true);\n\t\t\t\tif (isTarget == invertFront)\n\t\t\t\t\tforntFace = CullMode.Front;//gl.CCW\n\t\t\t\telse\n\t\t\t\t\tforntFace = CullMode.Back;\n\t\t\t\tRenderStateContext.setFrontFace(forntFace);\n\t\t\t\tbreak;\n\t\t\tcase RenderState.CULL_BACK:\n\t\t\tdefault:\n\t\t\t\tRenderStateContext.setCullFace(true);\n\t\t\t\tif (isTarget != invertFront)\n\t\t\t\t\tforntFace = CullMode.Front;//gl.CCW\n\t\t\t\telse\n\t\t\t\t\tforntFace = CullMode.Back;\n\t\t\t\tRenderStateContext.setFrontFace(forntFace);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tuploadCustomUniform(index: number, data: any): void {\n\t\tLayaGL.renderEngine.uploadCustomUniforms(this._renderShaderInstance, this._customUniformParamsMap, index, data);\n\t}\n}\n\n","/**\n *  <code>shaderVariable</code> 类用于保存shader变量上传相关信息。\n */\nexport class ShaderVariable {\n\tstatic pointID: number = 0;\n\t/**@internal */\n\tname: string;\n\t/**@internal */\n\ttype: number;\n\t/**@internal */\n\tlocation: number;\n\t/**@internal */\n\tisArray: boolean;\n\t/**@internal */\n\ttextureID: number;\n\t/**@internal */\n\tdataOffset: number;\n\n\t/**@internal */\n\tcaller: any;\n\t/**@internal */\n\tfun: any;\n\t/**@internal */\n\tuploadedValue: any[];\n\t/**@internal */\n\tonID: number;\n\n\t/**\n\t * 创建一个 <code>shaderVariable</code> 实例。\n\t */\n\tconstructor() {\n\t\tthis.onID = ShaderVariable.pointID++;\n\t\tthis.textureID = -1;\n\t}\n\n}\n\n\n","import { RenderCapable } from \"../RenderEngine/RenderEnum/RenderCapable\";\nimport { TextureDimension } from \"../RenderEngine/RenderEnum/TextureDimension\";\nimport { TextureFormat } from \"../RenderEngine/RenderEnum/TextureFormat\";\nimport { ITexture3DContext } from \"../RenderEngine/RenderInterface/ITextureContext\";\nimport { LayaGL } from \"../layagl/LayaGL\";\nimport { BaseTexture } from \"./BaseTexture\";\n\n/**\n * 3D 纹理\n */\nexport class Texture3D extends BaseTexture {\n\n    private static _defaultTexture: Texture3D;\n\n    static get defaultTexture() {\n        return this._defaultTexture;\n    }\n\n    /** @internal */\n    static __init__() {\n        if (LayaGL.renderEngine.getCapable(RenderCapable.Texture3D)) {\n            this._defaultTexture = new Texture3D(1, 1, 1, TextureFormat.R8G8B8A8, false, false);\n            this._defaultTexture.lock = true;\n\n            this._defaultTexture.setPixelsData(new Uint8Array([255, 255, 255, 255]));\n        }\n    }\n\n    depth: number;\n\n    constructor(width: number, height: number, depth: number, format: TextureFormat, mipmap: boolean = true, sRGB: boolean = false) {\n        super(width, height, format);\n        this._dimension = TextureDimension.Tex3D;\n        this.depth = depth;\n\n        this._gammaSpace = sRGB;\n\n        let context = <ITexture3DContext>LayaGL.textureContext;\n\n        this._texture = context.createTexture3DInternal(this._dimension, width, height, depth, format, mipmap, sRGB, false);\n    }\n\n    /**\n    * 设置像素数据\n    * @param source 像素数据\n    */\n    setPixelsData(source: ArrayBufferView) {\n        let texture = this._texture;\n        let context = <ITexture3DContext>LayaGL.textureContext;\n        context.setTexture3DPixelsData(texture, source, this.depth, false, false)\n    }\n\n    /**\n     * 更新像素数据\n     * @param xOffset x 偏移\n     * @param yOffset y 偏移\n     * @param zOffset z 偏移\n     * @param width 更新数据宽度\n     * @param height 更新数据高度\n     * @param depth 更新数据深度层级\n     * @param pixels 像素数据\n     * @param mipmapLevel mipmap 等级\n     * @param generateMipmap 是否生成 mipmap\n     */\n    setSubPixelsData(xOffset: number, yOffset: number, zOffset: number, width: number, height: number, depth: number, pixels: ArrayBufferView, mipmapLevel: number, generateMipmap: boolean) {\n        let texture = this._texture;\n        let context = <ITexture3DContext>LayaGL.textureContext;\n        context.setTexture3DSubPixelsData(texture, pixels, mipmapLevel, generateMipmap, xOffset, yOffset, zOffset, width, height, depth, false, false);\n    }\n\n}","export class Base64Tool {\n\n    static chars: string = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n    static reg = /^\\s*data:([a-z]+\\/[a-z0-9-+.]+(;[a-z-]+=[a-z0-9-]+)?)?(;base64)?,([a-z0-9!$&',()*+;=\\-._~:@\\/?%\\s]*?)\\s*$/i;\n    static reghead = /^\\s*data:([a-z]+\\/[a-z0-9-+.]+(;[a-z-]+=[a-z0-9-]+)?)?(;base64)?,/i;\n\n    // Use a lookup table to find the index.\n    static lookup: Uint8Array = null;\n\n    static init(): void {\n        if (Base64Tool.lookup)\n            return;\n        Base64Tool.lookup = new Uint8Array(256)\n        for (var i: number = 0; i < Base64Tool.chars.length; i++) {\n            Base64Tool.lookup[Base64Tool.chars.charCodeAt(i)] = i;\n        }\n    }\n\n    /**\n     * 判断字符串是否是 base64\n     * @param str \n     */\n    static isBase64String(str: string): boolean {\n        return Base64Tool.reg.test(str);\n    }\n\n    /**\n     * 编码ArrayBuffer \n     * @param arraybuffer\n     * @return \n     * \n     */\n    static encode(arraybuffer: ArrayBuffer): string {\n        var bytes: Uint8Array = new Uint8Array(arraybuffer), i: number, len: number = bytes[\"length\"], base64: string = \"\";\n\n        for (i = 0; i < len; i += 3) {\n            base64 += Base64Tool.chars[bytes[i] >> 2];\n            base64 += Base64Tool.chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n            base64 += Base64Tool.chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n            base64 += Base64Tool.chars[bytes[i + 2] & 63];\n        }\n\n        if ((len % 3) === 2) {\n            base64 = base64.substring(0, base64.length - 1) + \"=\";\n        }\n        else if (len % 3 === 1) {\n            base64 = base64.substring(0, base64.length - 2) + \"==\";\n        }\n\n        return base64;\n    }\n\n    /**\n     * 解码成ArrayBuffer \n     * @param base64\n     * @return \n     * \n     */\n    static decode(base64: string): ArrayBuffer {\n        Base64Tool.init();\n        var bufferLength: number = base64.length * 0.75, len: number = base64.length, i: number, p: number = 0, encoded1: number, encoded2: number, encoded3: number, encoded4: number;\n\n        if (base64[base64.length - 1] === \"=\") {\n            bufferLength--;\n            if (base64[base64.length - 2] === \"=\") {\n                bufferLength--;\n            }\n        }\n\n        var arraybuffer: ArrayBuffer = new ArrayBuffer(bufferLength), bytes: Uint8Array = new Uint8Array(arraybuffer);\n\n        for (i = 0; i < len; i += 4) {\n            encoded1 = Base64Tool.lookup[base64.charCodeAt(i)];\n            encoded2 = Base64Tool.lookup[base64.charCodeAt(i + 1)];\n            encoded3 = Base64Tool.lookup[base64.charCodeAt(i + 2)];\n            encoded4 = Base64Tool.lookup[base64.charCodeAt(i + 3)];\n\n            if(p + 1 > bufferLength) continue;\n            bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n            if(p + 1 > bufferLength) continue;\n            bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n            if(p + 1 > bufferLength) continue;\n            bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n        }\n\n        return arraybuffer;\n    }\n\n}","\nfunction arrayBufferSlice(this: ArrayBuffer, start: number, end: number): ArrayBuffer {\n    var arrU8List: Uint8Array = new Uint8Array(this, start, end - start);\n    var newU8List: Uint8Array = new Uint8Array(arrU8List.length);\n    newU8List.set(arrU8List);\n    return newU8List.buffer;\n}\n\nfunction uint8ArraySlice(this: Uint8Array): Uint8Array {\n    var sz: number = this.length;\n    var dec: Uint8Array = new Uint8Array(this.length);\n    for (var i: number = 0; i < sz; i++) dec[i] = this[i];\n    return dec;\n}\n\nfunction float32ArraySlice(this: Float32Array): Float32Array {\n    var sz: number = this.length;\n    var dec: Float32Array = new Float32Array(this.length);\n    for (var i: number = 0; i < sz; i++) dec[i] = this[i];\n    return dec;\n}\n\nfunction uint16ArraySlice(this: Uint16Array, ...arg: any[]): Uint16Array {\n    var sz: number;\n    var dec: Uint16Array;\n    var i: number;\n    if (arg.length === 0) {\n        sz = this.length;\n        dec = new Uint16Array(sz);\n        for (i = 0; i < sz; i++)\n            dec[i] = this[i];\n\n    } else if (arg.length === 2) {\n        var start: number = arg[0];\n        var end: number = arg[1];\n\n        if (end > start) {\n            sz = end - start;\n            dec = new Uint16Array(sz);\n            for (i = start; i < end; i++)\n                dec[i - start] = this[i];\n        } else {\n            dec = new Uint16Array(0);\n        }\n    }\n    return dec;\n}\n\nArrayBuffer.prototype.slice || (ArrayBuffer.prototype.slice = arrayBufferSlice);\nFloat32Array.prototype.slice || (Float32Array.prototype.slice = float32ArraySlice);\nUint16Array.prototype.slice || (Uint16Array.prototype.slice = uint16ArraySlice);\nUint8Array.prototype.slice || (Uint8Array.prototype.slice = uint8ArraySlice);","import { Browser } from \"./Browser\";\n\n/**\n * <code>Log</code> 类用于在界面内显示日志记录信息。\n * 注意：在加速器内不可使用\n */\nexport class Log {\n\n    /**@private */\n    private static _logdiv: any;\n    /**@private */\n    private static _btn: any;\n    /**@private */\n    private static _count: number = 0;\n    /**最大打印数量，超过这个数量，则自动清理一次，默认为50次*/\n    static maxCount: number = 50;\n    /**是否自动滚动到底部，默认为true*/\n    static autoScrollToBottom: boolean = true;\n\n    /**\n     * 激活Log系统，使用方法Laya.init(800,600,Laya.Log);\n     */\n    static enable(): void {\n        if (!Log._logdiv) {\n            Log._logdiv = Browser.createElement('div');\n            Log._logdiv.style.cssText = \"border:white;padding:4px;overflow-y:auto;z-index:1000000;background:rgba(100,100,100,0.6);color:white;position: absolute;left:0px;top:0px;width:50%;height:50%;\";\n            Browser.document.body.appendChild(Log._logdiv);\n\n            Log._btn = Browser.createElement(\"button\");\n            Log._btn.innerText = \"Hide\";\n            Log._btn.style.cssText = \"z-index:1000001;position: absolute;left:10px;top:10px;\";\n            Log._btn.onclick = Log.toggle;\n            Browser.document.body.appendChild(Log._btn);\n        }\n    }\n\n    /**隐藏/显示日志面板*/\n    static toggle(): void {\n        var style: any = Log._logdiv.style;\n        if (style.display === \"\") {\n            Log._btn.innerText = \"Show\";\n            style.display = \"none\";\n        } else {\n            Log._btn.innerText = \"Hide\";\n            style.display = \"\";\n        }\n    }\n\n    /**\n     * 增加日志内容。\n     * @param\tvalue 需要增加的日志内容。\n     */\n    static print(value: string): void {\n        if (Log._logdiv) {\n            //内容太多清理掉\n            if (Log._count >= Log.maxCount) Log.clear();\n            Log._count++;\n\n            Log._logdiv.innerText += value + \"\\n\";\n            //自动滚动\n            if (Log.autoScrollToBottom) {\n                if (Log._logdiv.scrollHeight - Log._logdiv.scrollTop - Log._logdiv.clientHeight < 50) {\n                    Log._logdiv.scrollTop = Log._logdiv.scrollHeight;\n                }\n            }\n        }\n    }\n\n    /**\n     * 清理日志\n     */\n    static clear(): void {\n        Log._logdiv.innerText = \"\";\n        Log._count = 0;\n    }\n}\n\n","//import { PerfHUD } from \"./PerfHUD\";\nlet DATANUM = 300;\n/**\n * @internal\n */\nexport class PerfData {\n    id: number;\n    name: string;\n    color: number;\n    scale: number = 1.0;\n    datas: any[] = new Array(DATANUM);\n    datapos: number = 0;\n    constructor(id: number, color: number, name: string, scale: number) {\n        this.id = id;\n        this.color = color;\n        this.name = name;\n        this.scale = scale;\n    }\n    addData(v: number): void {\n        this.datas[this.datapos] = v;\n        this.datapos++;\n        this.datapos %= DATANUM;\n    }\n}\n\n","import { PerfData } from \"./PerfData\";\nimport { Sprite } from \"../display/Sprite\"\nimport { SpriteConst } from \"../display/SpriteConst\"\nimport { Context } from \"../resource/Context\"\n/**\n * @internal\n */\nexport class PerfHUD extends Sprite {\n    private static _lastTm: number = 0;\t//perf Data\n    private static _now: () => number = null;\n    private datas: any[] = [];\n    static DATANUM: number = 300;\n\n    xdata: any[] = new Array(PerfHUD.DATANUM);\n    ydata: any[] = new Array(PerfHUD.DATANUM);\n\n    hud_width: number = 800;\n    hud_height: number = 200;\n\n    gMinV: number = 0;\n    gMaxV: number = 100;\n\n    private textSpace: number = 40;\t//留给刻度文字的\n    static inst: PerfHUD;\n\n    private _now: Function;\n    private sttm: number = 0;\n\n    static drawTexTm: number = 0;\n\n    //TODO:coverage\n    constructor() {\n        super();\n        PerfHUD.inst = this;\n        this._renderType |= SpriteConst.CUSTOM;\n        this._setCustomRender();\n\n        this.addDataDef(0, 0xffffff, 'frame', 1.0);\n        this.addDataDef(1, 0x00ff00, 'update', 1.0);\n        this.addDataDef(2, 0xff0000, 'flush', 1.0);\n        PerfHUD._now = performance ? performance.now.bind(performance) : Date.now;\n    }\n\n    //TODO:coverage\n    now(): number {\n        return PerfHUD._now();\n    }\n\n    //TODO:coverage\n    start(): void {\n        this.sttm = PerfHUD._now();\n    }\n\n    //TODO:coverage\n    end(i: number): void {\n        var dt: number = PerfHUD._now() - this.sttm;\n        this.updateValue(i, dt);\n    }\n\n    //TODO:coverage\n    config(w: number, h: number): void {\n        this.hud_width = w;\n        this.hud_height = h;\n    }\n\n    //TODO:coverage\n    addDataDef(id: number, color: number, name: string, scale: number): void {\n        this.datas[id] = new PerfData(id, color, name, scale);\n    }\n\n    //TODO:coverage\n    updateValue(id: number, v: number): void {\n        this.datas[id].addData(v);\n    }\n\n    //TODO:coverage\n    v2y(v: number): number {\n        var bb: number = this._y + this.hud_height * (1 - (v - this.gMinV) / this.gMaxV);\n        return this._y + this.hud_height * (1 - (v - this.gMinV) / this.gMaxV);\n    }\n\n    //TODO:coverage\n    drawHLine(ctx: Context, v: number, color: string, text: string): void {\n        var sx: number = this._x;\n        var ex: number = this._x + this.hud_width;\n        var sy: number = this.v2y(v);\n        ctx.fillText(text, sx, sy - 6, null, 'green', null);\n        sx += this.textSpace;\n        ctx.fillStyle = color;\n        ctx.fillRect(sx, sy, this._x + this.hud_width, 1, null);\n    }\n\n    //TODO:coverage\n    /**\n     * \n     * @param ctx \n     * @param x \n     * @param y \n     * @override\n     */\n    customRender(ctx: Context, x: number, y: number): void {\n        var now: number = performance.now();;\n        if (PerfHUD._lastTm <= 0) PerfHUD._lastTm = now;\n        this.updateValue(0, now - PerfHUD._lastTm);\n        PerfHUD._lastTm = now;\n\n        ctx.save();\n        ctx.fillRect(this._x, this._y, this.hud_width, this.hud_height + 4, '#000000cc');\n        ctx.globalAlpha = 0.9;\n        /*\n        for ( var i = 0; i < gMaxV; i+=30) {\n            drawHLine(ctx, i, 'green', '' + i);// '' + Math.round(1000 / (i + 1)));\n        }\n        */\n        this.drawHLine(ctx, 0, 'green', '    0');\n        this.drawHLine(ctx, 10, 'green', '  10');\n        this.drawHLine(ctx, 16.667, 'red', ' ');\n        this.drawHLine(ctx, 20, 'green', '50|20');\n        this.drawHLine(ctx, 16.667 * 2, 'yellow', '');\n        this.drawHLine(ctx, 16.667 * 3, 'yellow', '');\n        this.drawHLine(ctx, 16.667 * 4, 'yellow', '');\n        this.drawHLine(ctx, 50, 'green', '20|50');\n        this.drawHLine(ctx, 100, 'green', '10|100');\n\n        //数据\n        for (var di: number = 0, sz: number = this.datas.length; di < sz; di++) {\n            var cd: PerfData = this.datas[di];\n            if (!cd) continue;\n            var dtlen: number = cd.datas.length;\n            var dx: number = (this.hud_width - this.textSpace) / dtlen;\n            var cx: number = cd.datapos;\n            var _cx: number = this._x + this.textSpace;\n            ctx.fillStyle = cd.color;\n            //开始部分\n            /*\n            ctx.beginPath();\n            ctx.strokeStyle = cd.color;\n            ctx.moveTo(_cx, v2y(cd.datas[cx]* cd.scale) );\n            cx++;\n            _cx += dx;\n            for ( var dtsz:int = dtlen; cx < dtsz; cx++) {\n                ctx.lineTo(_cx, v2y(cd.datas[cx]* cd.scale) );\n                _cx += dx;\n            }\n            //剩下的\n            for (cx = 0; cx < cd.datapos; cx++) {\n                ctx.lineTo(_cx, v2y(cd.datas[cx] * cd.scale));\n                _cx += dx;\n            }\n            ctx.stroke();\n            */\n            for (var dtsz: number = dtlen; cx < dtsz; cx++) {\n                var sty: number = this.v2y(cd.datas[cx] * cd.scale);\n                ctx.fillRect(_cx, sty, dx, this.hud_height + this._y - sty, null);\n                _cx += dx;\n            }\n            //剩下的\n            for (cx = 0; cx < cd.datapos; cx++) {\n                sty = this.v2y(cd.datas[cx] * cd.scale);\n                ctx.fillRect(_cx, sty, dx, this.hud_height + this._y - sty, null);\n                _cx += dx;\n            }\n\n        }\n        ctx.restore();\n    }\n}\n\n","import { CacheManger } from \"./CacheManger\";\nimport { Pool } from \"./Pool\";\n\n/**\n * @private\n * 基于个数的对象缓存管理器\n */\nexport class PoolCache {\n\n    //TODO:\n    /**\n     * 对象在Pool中的标识\n     */\n    sign: string;\n    /**\n     * 允许缓存的最大数量\n     */\n    maxCount: number = 1000;\n\n    /**\n     * 获取缓存的对象列表\n     * @return\n     *\n     */\n    getCacheList(): any[] {\n        return Pool.getPoolBySign(this.sign);\n    }\n\n    /**\n     * 尝试清理缓存\n     * @param force 是否强制清理\n     *\n     */\n    tryDispose(force: boolean): void {\n        var list: any[];\n        list = Pool.getPoolBySign(this.sign);\n        if (list.length > this.maxCount) {\n            list.splice(this.maxCount, list.length - this.maxCount);\n        }\n    }\n\n    /**\n     * 添加对象缓存管理\n     * @param sign 对象在Pool中的标识\n     * @param maxCount 允许缓存的最大数量\n     *\n     */\n    static addPoolCacheManager(sign: string, maxCount: number = 100): void {\n        var cache: PoolCache;\n        cache = new PoolCache();\n        cache.sign = sign;\n        cache.maxCount = maxCount;\n        CacheManger.regCacheByFunction(cache.tryDispose.bind(cache), cache.getCacheList.bind(cache));\n    }\n}\n\n","\n/**\n * <code>SingletonList</code> 类用于实现单例队列。\n */\nexport class SingletonList<T> {\n    /**@internal [只读]*/\n    elements: Array<T> = [];\n    /** @internal [只读]*/\n    length: number = 0;\n\n    /**\n     * 创建一个新的 <code>SingletonList</code> 实例。\n     */\n    constructor() {\n    }\n\n    /**\n     * @internal\n     */\n    protected _add(element: T): void {\n        if (this.length === this.elements.length)\n            this.elements.push(element);\n        else\n            this.elements[this.length] = element;\n    }\n\n    /**\n     * @internal\n     */\n    add(element: T): void {\n        let index = this.elements.indexOf(element);\n        if ((typeof (element) != \"number\") && index != -1 && index < this.length)\n            return;\n        if (this.length === this.elements.length)\n            this.elements.push(element);\n        else\n            this.elements[this.length] = element;\n        this.length++;\n    }\n\n    indexof(element:T){\n        let index = this.elements.indexOf(element);\n        if(index!=-1&&index<this.length)\n            return index;\n        return -1;\n    }\n\n    /**\n     * @internal\n     * @param element \n     */\n    remove(element: T): void {\n        let index = this.elements.indexOf(element);\n        if (index != -1 && index < this.length) {\n            this.elements[index] = this.elements[this.length - 1];\n            this.length--;\n        }\n\n    }\n\n    /**\n     * @internal\n     */\n    clear(){\n        this.elements = [];\n        this.length = 0;\n    }\n\n    /**\n     * @internal\n     */\n    clean(){\n        this.elements.length = this.length;\n    }\n\n    destroy() {\n        this.elements = null;\n    }\n}\n\n\n","import { Pool } from \"./Pool\";\nimport { Tween } from \"./Tween\";\nimport { Browser } from \"./Browser\";\nimport { Handler } from \"./Handler\";\nimport { Utils } from \"./Utils\";\nimport { Event } from \"../events/Event\"\nimport { EventDispatcher } from \"../events/EventDispatcher\"\nimport { ILaya } from \"../../ILaya\";\n\n/**\n * 整个缓动结束的时候会调度\n * @eventType Event.COMPLETE\n */\n/*[Event(name = \"complete\", type = \"laya.events.Event\")]*/\n/**\n * 当缓动到达标签时会调度。\n * @eventType Event.LABEL\n */\n/*[Event(name = \"label\", type = \"laya.events.Event\")]*/\n\n/**\n * <code>TimeLine</code> 是一个用来创建时间轴动画的类。\n */\nexport class TimeLine extends EventDispatcher {\n\n    private _labelDic: any;\n    private _tweenDic: any = {};\n    private _tweenDataList: any[] = [];\n    private _endTweenDataList: any[];//以结束时间进行排序\n    private _currTime: number = 0;\n    private _lastTime: number = 0;\n    private _startTime: number = 0;\n    /**当前动画数据播放到第几个了*/\n    private _index: number = 0;\n    /**为TWEEN创建属于自己的唯一标识，方便管理*/\n    private _gidIndex: number = 0;\n    /**保留所有对象第一次注册动画时的状态（根据时间跳转时，需要把对象的恢复，再计算接下来的状态）*/\n    private _firstTweenDic: any = {};\n    /**是否需要排序*/\n    private _startTimeSort: boolean = false;\n    private _endTimeSort: boolean = false;\n    /**是否循环*/\n    private _loopKey: boolean = false;\n    /** 缩放动画播放的速度。*/\n    scale: number = 1;\n\n    private _frameRate: number = 60;\n    private _frameIndex: number = 0;\n    private _total: number = 0;\n\n    /**\n     * 控制一个对象，从当前点移动到目标点。\n     * @param\ttarget\t\t要控制的对象。\n     * @param\tprops\t\t要控制对象的属性。\n     * @param\tduration\t对象TWEEN的时间。\n     * @param\tease\t\t缓动类型\n     * @param\toffset\t\t相对于上一个对象，偏移多长时间（单位：毫秒）。\n     */\n    static to(target: any, props: any, duration: number, ease: Function = null, offset: number = 0): TimeLine {\n        return (new TimeLine()).to(target, props, duration, ease, offset);\n    }\n\n    /**\n     * 从 props 属性，缓动到当前状态。\n     * @param\ttarget\t\ttarget 目标对象(即将更改属性值的对象)\n     * @param\tprops\t\t要控制对象的属性\n     * @param\tduration\t对象TWEEN的时间\n     * @param\tease\t\t缓动类型\n     * @param\toffset\t\t相对于上一个对象，偏移多长时间（单位：毫秒）\n     */\n    static from(target: any, props: any, duration: number, ease: Function = null, offset: number = 0): TimeLine {\n        return (new TimeLine()).from(target, props, duration, ease, offset);\n    }\n\n    /**\n     * 控制一个对象，从当前点移动到目标点。\n     * @param\ttarget\t\t要控制的对象。\n     * @param\tprops\t\t要控制对象的属性。\n     * @param\tduration\t对象TWEEN的时间。\n     * @param\tease\t\t缓动类型\n     * @param\toffset\t\t相对于上一个对象，偏移多长时间（单位：毫秒）。\n     */\n    to(target: any, props: any, duration: number, ease: Function = null, offset: number = 0): TimeLine {\n        return this._create(target, props, duration, ease, offset, true);\n    }\n\n    /**\n     * 从 props 属性，缓动到当前状态。\n     * @param\ttarget\t\ttarget 目标对象(即将更改属性值的对象)\n     * @param\tprops\t\t要控制对象的属性\n     * @param\tduration\t对象TWEEN的时间\n     * @param\tease\t\t缓动类型\n     * @param\toffset\t\t相对于上一个对象，偏移多长时间（单位：毫秒）\n     */\n    from(target: any, props: any, duration: number, ease: Function = null, offset: number = 0): TimeLine {\n        return this._create(target, props, duration, ease, offset, false);\n    }\n\n    /** @private */\n    private _create(target: any, props: any, duration: number, ease: Function, offset: number, isTo: boolean): TimeLine {\n        var tTweenData: tweenData = Pool.getItemByClass(\"tweenData\", tweenData);\n        tTweenData.isTo = isTo;\n        tTweenData.type = 0;\n        tTweenData.target = target;\n        tTweenData.duration = duration;\n        tTweenData.data = props;\n        tTweenData.startTime = this._startTime + offset;\n        tTweenData.endTime = tTweenData.startTime + tTweenData.duration;\n        tTweenData.ease = ease;\n        this._startTime = Math.max(tTweenData.endTime, this._startTime);\n        this._tweenDataList.push(tTweenData);\n        this._startTimeSort = true;\n        this._endTimeSort = true;\n        return this;\n    }\n\n    /**\n     * 在时间队列中加入一个标签。\n     * @param\tlabel\t标签名称。\n     * @param\toffset\t标签相对于上个动画的偏移时间(单位：毫秒)。\n     */\n    addLabel(label: string, offset: number): TimeLine {\n        var tTweenData: tweenData = Pool.getItemByClass(\"tweenData\", tweenData);\n        tTweenData.type = 1;\n        tTweenData.data = label;\n        tTweenData.endTime = tTweenData.startTime = this._startTime + offset;\n        this._labelDic || (this._labelDic = {});\n        this._labelDic[label] = tTweenData;\n        this._tweenDataList.push(tTweenData);\n        return this;\n    }\n\n    /**\n     * 移除指定的标签\n     * @param\tlabel\n     */\n    removeLabel(label: string): void {\n        if (this._labelDic && this._labelDic[label]) {\n            var tTweenData: tweenData = this._labelDic[label];\n            if (tTweenData) {\n                var tIndex: number = this._tweenDataList.indexOf(tTweenData);\n                if (tIndex > -1) {\n                    this._tweenDataList.splice(tIndex, 1);\n                }\n            }\n            delete this._labelDic[label];\n        }\n    }\n\n    /**\n     * 动画从整个动画的某一时间开始。\n     * @param\ttime(单位：毫秒)。\n     */\n    gotoTime(time: number): void {\n        if (this._tweenDataList == null || this._tweenDataList.length == 0) return;\n        var tTween: Tween;\n        var tObject: any;\n        for (var p in this._firstTweenDic) {\n            tObject = this._firstTweenDic[p];\n            if (tObject) {\n                for (var tDataP in tObject) {\n                    if (tDataP in tObject.diyTarget) {\n                        tObject.diyTarget[tDataP] = tObject[tDataP];\n                    }\n                }\n            }\n        }\n        for (p in this._tweenDic) {\n            tTween = this._tweenDic[p];\n            tTween.clear();\n            delete this._tweenDic[p];\n        }\n        this._index = 0;\n        this._gidIndex = 0;\n        this._currTime = time;\n        this._lastTime = Browser.now();\n        var tTweenDataCopyList: any[];\n        if (this._endTweenDataList == null || this._endTimeSort) {\n            this._endTimeSort = false;\n            this._endTweenDataList = tTweenDataCopyList = this._tweenDataList.concat();\n            //对数据排序\n            function Compare(paraA: any, paraB: any): number {\n                if (paraA.endTime > paraB.endTime) {\n                    return 1;\n                } else if (paraA.endTime < paraB.endTime) {\n                    return -1;\n                } else {\n                    return 0;\n                }\n            }\n            tTweenDataCopyList.sort(Compare);\n        } else {\n            tTweenDataCopyList = this._endTweenDataList\n        }\n\n        var tTweenData: tweenData;\n        //叠加已经经过的关键帧数据\n        for (var i: number = 0, n: number = tTweenDataCopyList.length; i < n; i++) {\n            tTweenData = tTweenDataCopyList[i];\n            if (tTweenData.type == 0) {\n                if (time >= tTweenData.endTime) {\n                    this._index = Math.max(this._index, i + 1);\n                    //把经历过的属性加入到对象中\n                    var props: any = tTweenData.data;\n                    if (tTweenData.isTo) {\n                        for (var tP in props) {\n                            tTweenData.target[tP] = props[tP];\n                        }\n                    }\n                } else {\n                    break;\n                }\n            }\n        }\n        //创建当前正在行动的TWEEN;\n        for (i = 0, n = this._tweenDataList.length; i < n; i++) {\n            tTweenData = this._tweenDataList[i];\n            if (tTweenData.type == 0) {\n                if (time >= tTweenData.startTime && time < tTweenData.endTime) {\n                    this._index = Math.max(this._index, i + 1);\n                    this._gidIndex++;\n                    tTween = Pool.getItemByClass(\"tween\", Tween);\n                    tTween._create(tTweenData.target, tTweenData.data, tTweenData.duration, tTweenData.ease, Handler.create(this, this._animComplete, [this._gidIndex]), 0, false, tTweenData.isTo, true, false);\n                    tTween.setStartTime(this._currTime - (time - tTweenData.startTime));\n                    tTween._updateEase(this._currTime);\n                    tTween.gid = this._gidIndex;\n                    this._tweenDic[this._gidIndex] = tTween;\n                }\n            }\n        }\n    }\n\n    /**\n     * 从指定的标签开始播。\n     * @param\tLabel 标签名。\n     */\n    gotoLabel(Label: string): void {\n        if (this._labelDic == null) return;\n        var tLabelData: tweenData = this._labelDic[Label];\n        if (tLabelData) this.gotoTime(tLabelData.startTime);\n    }\n\n    /**\n     * 暂停整个动画。\n     */\n    pause(): void {\n        ILaya.timer.clear(this, this._update);\n    }\n\n    /**\n     * 恢复暂停动画的播放。\n     */\n    resume(): void {\n        this.play(this._currTime, this._loopKey);\n    }\n\n    /**\n     * 播放动画。\n     * @param\ttimeOrLabel 开启播放的时间点或标签名。\n     * @param\tloop 是否循环播放。\n     */\n    play(timeOrLabel: any = 0, loop: boolean = false): void {\n        if (!this._tweenDataList) return;\n        if (this._startTimeSort) {\n            this._startTimeSort = false;\n            //对数据排序\n            function Compare(paraA: any, paraB: any): number {\n                if (paraA.startTime > paraB.startTime) {\n                    return 1;\n                } else if (paraA.startTime < paraB.startTime) {\n                    return -1;\n                } else {\n                    return 0;\n                }\n            }\n            this._tweenDataList.sort(Compare);\n\n            for (var i: number = 0, n: number = this._tweenDataList.length; i < n; i++) {\n                var tTweenData: tweenData = this._tweenDataList[i];\n                if (tTweenData != null && tTweenData.type == 0) {\n                    var tTarget: any = tTweenData.target;\n                    var gid: number = (tTarget.$_GID || (tTarget.$_GID = Utils.getGID()));\n                    var tSrcData: any = null;\n                    //把对象的初始属性保留下来，方便跳转时，回复到初始状态\n                    if (this._firstTweenDic[gid] == null) {\n                        tSrcData = {};\n                        tSrcData.diyTarget = tTarget;\n                        this._firstTweenDic[gid] = tSrcData;\n                    } else {\n                        tSrcData = this._firstTweenDic[gid];\n                    }\n                    for (var p in tTweenData.data) {\n                        if (tSrcData[p] == null) {\n                            tSrcData[p] = tTarget[p];\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof (timeOrLabel) == 'string') {\n            this.gotoLabel(timeOrLabel);\n        } else {\n            this.gotoTime(timeOrLabel);\n        }\n        this._loopKey = loop;\n        this._lastTime = Browser.now();\n        ILaya.timer.frameLoop(1, this, this._update);\n    }\n\n    /**\n     * 更新当前动画。\n     */\n    private _update(): void {\n        if (this._currTime >= this._startTime) {\n            if (this._loopKey) {\n                this._complete();\n                if (!this._tweenDataList) return;\n                this.gotoTime(0);\n            } else {\n                for (var p in this._tweenDic) {\n                    tTween = this._tweenDic[p];\n                    tTween.complete();\n                }\n                this.pause();\n                this._complete();\n                return;\n            }\n        }\n\n        var tNow: number = Browser.now();\n        var tFrameTime: number = tNow - this._lastTime;\n        var tCurrTime: number = this._currTime += tFrameTime * this.scale;\n        this._lastTime = tNow;\n\n        for (p in this._tweenDic) {\n            tTween = this._tweenDic[p];\n            tTween._updateEase(tCurrTime);\n        }\n\n        var tTween: Tween;\n        if (this._tweenDataList.length != 0 && this._index < this._tweenDataList.length) {\n            var tTweenData: tweenData = this._tweenDataList[this._index];\n            if (tCurrTime >= tTweenData.startTime) {\n                this._index++;\n                //创建TWEEN\n                if (tTweenData.type == 0) {\n                    this._gidIndex++;\n                    tTween = Pool.getItemByClass(\"tween\", Tween);\n                    tTween._create(tTweenData.target, tTweenData.data, tTweenData.duration, tTweenData.ease, Handler.create(this, this._animComplete, [this._gidIndex]), 0, false, tTweenData.isTo, true, false);\n                    tTween.setStartTime(tCurrTime);\n                    tTween.gid = this._gidIndex;\n                    this._tweenDic[this._gidIndex] = tTween;\n                    tTween._updateEase(tCurrTime);\n                } else {\n                    this.event(Event.LABEL, tTweenData.data);\n                }\n            }\n        }\n\n\n    }\n\n    /**\n     * 指定的动画索引处的动画播放完成后，把此动画从列表中删除。\n     * @param\tindex\n     */\n    private _animComplete(index: number): void {\n        var tTween: Tween = this._tweenDic[index];\n        if (tTween) delete this._tweenDic[index];\n    }\n\n    /** @private */\n    private _complete(): void {\n        this.event(Event.COMPLETE);\n    }\n\n    /**\n     * @private\n     * 得到帧索引\n     */\n    get index(): number {\n        return this._frameIndex;\n    }\n\n    /**\n     * @private\n     * 设置帧索引\n     */\n    set index(value: number) {\n        this._frameIndex = value;\n        this.gotoTime(this._frameIndex / this._frameRate * 1000);\n    }\n\n    /**\n     * 得到总帧数。\n     */\n    get total(): number {\n        this._total = Math.floor(this._startTime / 1000 * this._frameRate);\n        return this._total;\n    }\n\n    /**\n     * 重置所有对象，复用对象的时候使用。\n     */\n    reset(): void {\n        var p: any;\n        if (this._labelDic) {\n            for (p in this._labelDic) {\n                delete this._labelDic[p];\n            }\n        }\n        var tTween: Tween;\n        for (p in this._tweenDic) {\n            tTween = this._tweenDic[p];\n            tTween.clear();\n            delete this._tweenDic[p];\n        }\n        for (p in this._firstTweenDic) {\n            delete this._firstTweenDic[p];\n        }\n        this._endTweenDataList = null;\n        if (this._tweenDataList && this._tweenDataList.length) {\n            var i: number, len: number;\n            len = this._tweenDataList.length;\n            for (i = 0; i < len; i++) {\n                if (this._tweenDataList[i])\n                    this._tweenDataList[i].destroy();\n            }\n        }\n        this._tweenDataList.length = 0;\n        this._currTime = 0;\n        this._lastTime = 0;\n        this._startTime = 0;\n        this._index = 0;\n        this._gidIndex = 0;\n        this.scale = 1;\n        ILaya.timer.clear(this, this._update);\n    }\n\n    /**\n     * 彻底销毁此对象。\n     */\n    destroy(): void {\n        this.reset();\n        this._labelDic = null;\n        this._tweenDic = null;\n        this._tweenDataList = null;\n        this._firstTweenDic = null;\n    }\n}\n\n\n/**\n * @internal\n */\nclass tweenData {\n    type: number = 0;//0代表TWEEN,1代表标签\n    isTo: boolean = true;\n    startTime: number;\n    endTime: number;\n    target: any;\n    duration: number;\n    ease: Function;\n    data: any;\n    destroy(): void {\n        this.target = null;\n        this.ease = null;\n        this.data = null;\n        this.isTo = true;\n        this.type = 0;\n        Pool.recover(\"tweenData\", this);\n    }\n}\n","import { Context } from \"../../resource/Context\"\nimport { Pool } from \"../../utils/Pool\"\n\n/**\n * 绘制粒子\n * @private\n */\nexport class DrawParticleCmd {\n    static ID: string = \"DrawParticleCmd\";\n\n    private _templ: any;\n\n    /**@private */\n    static create(_temp: any): DrawParticleCmd {\n        var cmd: DrawParticleCmd = Pool.getItemByClass(\"DrawParticleCmd\", DrawParticleCmd);\n        cmd._templ = _temp;\n        return cmd;\n    }\n\n    /**\n     * 回收到对象池\n     */\n    recover(): void {\n        this._templ = null;\n        Pool.recover(\"DrawParticleCmd\", this);\n    }\n\n    /**@private */\n    run(context: Context, gx: number, gy: number): void {\n        //这个只有webgl在用\n        context.drawParticle(gx, gy, this._templ);\n    }\n\n    /**@private */\n    get cmdID(): string {\n        return DrawParticleCmd.ID;\n    }\n}\n\n","import { CommandUniformMap } from \"../../../RenderEngine/CommandUniformMap\";\n\nexport class NativeCommandUniformMap extends CommandUniformMap {\n\n\tprivate _nativeObj: any;\n\n    constructor(_nativeObj: any, stateName: string){\n        super(stateName);\n\t\tthis._nativeObj = _nativeObj;\n    }\n    hasPtrID(propertyID: number): boolean {\n\t\treturn this._nativeObj.hasPtrID(propertyID);\n\t}\n\n\tgetMap() {\n\t\treturn this._idata;\n\t}\n\n\t/**\n\t * 增加一个UniformMap\n\t * @internal\n\t * @param propertyID \n\t * @param propertyKey \n\t */\n\taddShaderUniform(propertyID: number, propertyKey: string): void {\n\t\t//this._idata[propertyID] = propertyKey;\n        this._nativeObj.addShaderUniform(propertyID, propertyKey);\n\t}\n}","import { NativeWebGLEngine } from \"./NativeWebGLEngine\";\n\n/**\n * WebglObject 基类\n */\nexport class NativeGLObject{\n    protected _engine:NativeWebGLEngine;\n    protected _gl: WebGLRenderingContext | WebGL2RenderingContext;\n    protected _id:number;\n    protected _destroyed: boolean = false;\n\n    constructor(engine: NativeWebGLEngine){\n        this._engine = engine;\n        this._gl = this._engine.gl;\n        this._id = this._engine._IDCounter++;\n    }\n\n    get destroyed():boolean{\n        return this._destroyed;\n    }\n\n\n    /**\n     * @override\n     */\n    setResourceManager():void{\n    };\n\n    destroy():void{\n        if (this._destroyed) return;\n        this._destroyed = true;\n    }\n\n}","\nimport { WebGLExtension } from \"../WebGLEngine/GLEnum/WebGLExtension\";\nimport { FilterMode } from \"../../RenderEnum/FilterMode\";\nimport { RenderCapable } from \"../../RenderEnum/RenderCapable\";\nimport { RenderTargetFormat } from \"../../RenderEnum/RenderTargetFormat\";\nimport { TextureCompareMode } from \"../../RenderEnum/TextureCompareMode\";\nimport { TextureDimension } from \"../../RenderEnum/TextureDimension\";\nimport { TextureFormat } from \"../../RenderEnum/TextureFormat\";\nimport { InternalTexture } from \"../../RenderInterface/InternalTexture\";\nimport { ITextureContext } from \"../../RenderInterface/ITextureContext\";\nimport { NativeGLObject } from \"./NativeGLObject\";\nimport { NativeWebGLEngine } from \"./NativeWebGLEngine\";\nimport { DDSTextureInfo } from \"../../DDSTextureInfo\";\nimport { HDRTextureInfo } from \"../../HDRTextureInfo\";\nimport { KTXTextureInfo } from \"../../KTXTextureInfo\";\nimport { InternalRenderTarget } from \"../../RenderInterface/InternalRenderTarget\";\n\nexport class NativeGLTextureContext extends NativeGLObject implements ITextureContext {\n    needBitmap: boolean;\n    protected _native: any;\n\n    constructor(engine: NativeWebGLEngine, native: any) {\n        super(engine);\n        this._native = native;\n        this.needBitmap = false;\n    }\n\n    createTextureInternal(dimension: TextureDimension, width: number, height: number, format: TextureFormat, generateMipmap: boolean, sRGB: boolean): InternalTexture {\n        return this._native.createTextureInternal(dimension, width, height, format, generateMipmap, sRGB);\n    }\n\n    setTextureImageData(texture: InternalTexture, source: HTMLImageElement | HTMLCanvasElement | ImageBitmap, premultiplyAlpha: boolean, invertY: boolean) {\n        this._native.setTextureImageData(texture, (source as any)._nativeObj.conchImgId, premultiplyAlpha, invertY);\n    }\n\n    setTexturePixelsData(texture: InternalTexture, source: ArrayBufferView, premultiplyAlpha: boolean, invertY: boolean) {\n        this._native.setTexturePixelsData(texture, source, premultiplyAlpha, invertY);\n    }\n\n    initVideoTextureData(texture: InternalTexture): void {\n        this._native.initVideoTextureData(texture);\n    }\n\n    setTextureSubPixelsData(texture: InternalTexture, source: ArrayBufferView, mipmapLevel: number, generateMipmap: boolean, xOffset: number, yOffset: number, width: number, height: number, premultiplyAlpha: boolean, invertY: boolean): void {\n        this._native.setTextureSubPixelsData(texture, source, mipmapLevel, generateMipmap, xOffset, yOffset, width, height, premultiplyAlpha, invertY);\n    }\n\n    setTextureSubImageData(texture: InternalTexture, source: HTMLImageElement | HTMLCanvasElement | ImageBitmap, x: number, y: number, premultiplyAlpha: boolean, invertY: boolean): void {\n        throw new Error(\"setTextureSubImageData Method not implemented.\");\n    }\n\n    setTexture3DImageData(texture: InternalTexture, source: HTMLImageElement[] | HTMLCanvasElement[] | ImageBitmap[], depth: number, premultiplyAlpha: boolean, invertY: boolean): void {\n        this._native.setTexture3DImageData(texture, (source as any[]).map(function (s) { return s._nativeObj }), depth, premultiplyAlpha, invertY);\n    }\n\n    setTexture3DPixlesData(texture: InternalTexture, source: ArrayBufferView, depth: number, premultiplyAlpha: boolean, invertY: boolean): void {\n        this._native.setTexture3DPixlesData(texture, source, depth, premultiplyAlpha, invertY);\n    }\n\n    setTexture3DSubPixelsData(texture: InternalTexture, source: ArrayBufferView, mipmapLevel: number, generateMipmap: boolean, xOffset: number, yOffset: number, zOffset: number, width: number, height: number, depth: number, premultiplyAlpha: boolean, invertY: boolean): void {\n        this._native.setTexture3DSubPixelsData(texture, source, mipmapLevel, generateMipmap, xOffset, yOffset, zOffset, width, height, depth, premultiplyAlpha, invertY);\n    }\n\n    setTextureHDRData(texture: InternalTexture, hdrInfo: HDRTextureInfo): void {\n        let sourceData = hdrInfo.readScanLine();\n        throw new Error(\"setTextureHDRData Method not implemented.\");\n        this.setTexturePixelsData(texture, sourceData, false, false);\n    }\n    setTextureDDSData(texture: InternalTexture, ddsInfo: DDSTextureInfo) {\n        this._native.setTextureKTXData(texture, ddsInfo);\n    }\n\n    setTextureKTXData(texture: InternalTexture, ktxInfo: KTXTextureInfo) {\n        this._native.setTextureKTXData(texture, ktxInfo);\n    }\n    setCubeImageData(texture: InternalTexture, sources: (HTMLImageElement | HTMLCanvasElement | ImageBitmap)[], premultiplyAlpha: boolean, invertY: boolean): void {\n        var images: any[] = [];\n        var length = sources.length;\n        for (let index = 0; index < length; index++) {\n            images.push((sources[index] as any)._nativeObj);\n        }\n        this._native.setCubeImageData(texture, images, premultiplyAlpha, invertY);\n    }\n\n    setCubePixelsData(texture: InternalTexture, source: ArrayBufferView[], premultiplyAlpha: boolean, invertY: boolean): void {\n        this._native.setCubePixelsData(texture, source, premultiplyAlpha, invertY);\n    }\n    setCubeSubPixelData(texture: InternalTexture, source: ArrayBufferView[], mipmapLevel: number, generateMipmap: boolean, xOffset: number, yOffset: number, width: number, height: number, premultiplyAlpha: boolean, invertY: boolean): void {\n        this._native.setCubeSubPixelData(texture, source, mipmapLevel, generateMipmap, xOffset, yOffset, width, height, premultiplyAlpha, invertY);\n    }\n\n\n    setCubeDDSData(texture: InternalTexture, ddsInfo: DDSTextureInfo) {\n        this._native.setCubeDDSData(texture, ddsInfo);\n    }\n\n    setCubeKTXData(texture: InternalTexture, ktxInfo: KTXTextureInfo) {\n        this._native.setCubeKTXData(texture, ktxInfo);\n    }\n\n    setTextureCompareMode(texture: InternalTexture, compareMode: TextureCompareMode): TextureCompareMode {\n        return this._native.setTextureCompareMode(texture, compareMode);\n    }\n\n    bindRenderTarget(renderTarget: InternalRenderTarget, faceIndex: number = 0): void {\n        this._native.bindRenderTarget(renderTarget, faceIndex);\n    }\n\n    bindoutScreenTarget(): void {\n        this._native.bindoutScreenTarget();\n    }\n\n    unbindRenderTarget(renderTarget: InternalRenderTarget): void {\n        this._native.unbindRenderTarget(renderTarget);\n    }\n\n    createRenderTextureInternal(dimension: TextureDimension, width: number, height: number, format: RenderTargetFormat, generateMipmap: boolean, sRGB: boolean): InternalTexture {\n        return this._native.createRenderTextureInternal(dimension, width, height, format, generateMipmap, sRGB);\n    }\n\n    createRenderTargetInternal(width: number, height: number, colorFormat: RenderTargetFormat, depthStencilFormat: RenderTargetFormat, generateMipmap: boolean, sRGB: boolean, multiSamples: number): InternalRenderTarget {\n        return this._native.createRenderTargetInternal(width, height, colorFormat, depthStencilFormat ? depthStencilFormat : RenderTargetFormat.None, generateMipmap, sRGB, multiSamples);\n    }\n\n    createRenderTargetCubeInternal(size: number, colorFormat: RenderTargetFormat, depthStencilFormat: RenderTargetFormat, generateMipmap: boolean, sRGB: boolean, multiSamples: number): InternalRenderTarget {\n        return this._native.createRenderTargetCubeInternal(size, colorFormat, depthStencilFormat, generateMipmap, sRGB, multiSamples);\n    }\n    createRenderTextureCubeInternal(dimension: TextureDimension, size: number, format: RenderTargetFormat, generateMipmap: boolean, sRGB: boolean): InternalTexture {\n        throw new Error(\"createRenderTextureCubeInternal Method not implemented.\");\n    }\n    // todo  color 0, 1, 2, 3 ?\n    setupRendertargetTextureAttachment(renderTarget: InternalRenderTarget, texture: InternalTexture) {\n        this._native.setupRendertargetTextureAttachment(renderTarget, texture);\n    }\n\n    // todo 不同 格式\n    readRenderTargetPixelData(renderTarget: InternalRenderTarget, xOffset: number, yOffset: number, width: number, height: number, out: ArrayBufferView): ArrayBufferView {\n        return this._native.readRenderTargetPixelData(renderTarget, xOffset, yOffset, width, height, out);\n    }\n\n    updateVideoTexture(texture: InternalTexture, video: HTMLVideoElement, premultiplyAlpha: boolean, invertY: boolean): void {\n        this._native.updateVideoTexture(texture, (video as any)._nativeObj.conchImgId, premultiplyAlpha, invertY);\n    }\n\n    getRenderTextureData(internalTex: InternalRenderTarget, x: number, y: number, width: number, height: number): ArrayBufferView {\n        return this._native.getRenderTextureData(internalTex, x, y, width, height);\n    }\n}","import { NativeGLTextureContext } from \"./NativeGLTextureContext\";\nimport { NativeWebGLEngine } from \"./NativeWebGLEngine\";\nimport { TextureDimension } from \"../../RenderEnum/TextureDimension\";\nimport { HDRTextureInfo } from \"../../HDRTextureInfo\";\nimport { FilterMode } from \"../../RenderEnum/FilterMode\";\nimport { RenderTargetFormat } from \"../../RenderEnum/RenderTargetFormat\";\nimport { TextureCompareMode } from \"../../RenderEnum/TextureCompareMode\";\nimport { TextureFormat } from \"../../RenderEnum/TextureFormat\";\nimport { KTXTextureInfo } from \"../../KTXTextureInfo\";\nimport { InternalTexture } from \"../../RenderInterface/InternalTexture\";\nimport { InternalRenderTarget } from \"../../RenderInterface/InternalRenderTarget\";\n\n/**\n * 将继承修改为类似 WebGLRenderingContextBase, WebGLRenderingContextOverloads 多继承 ?\n */\nexport class NativeGL2TextureContext extends NativeGLTextureContext {\n\n    constructor(engine: NativeWebGLEngine, native: any) {\n        super(engine, native);\n    }\n}","import { IndexFormat } from \"../../RenderEnum/IndexFormat\";\nimport { MeshTopology } from \"../../RenderEnum/RenderPologyMode\";\nimport { IRenderDrawContext } from \"../../RenderInterface/IRenderDrawContext\";\nimport { IRenderGeometryElement } from \"../../RenderInterface/RenderPipelineInterface/IRenderGeometryElement\";\nimport { NativeGLObject } from \"./NativeGLObject\";\nimport { NativeWebGLEngine } from \"./NativeWebGLEngine\";\n\n//TODO\nexport class NativeGLRenderDrawContext extends NativeGLObject implements IRenderDrawContext {\n    _nativeObj: any;\n    constructor(engine: NativeWebGLEngine) {\n        super(engine);\n        this._nativeObj = new (window as any).conchGLRenderDrawContext((engine as any)._nativeObj);\n    }\n\n    /**\n     * @internal\n     */\n    drawElementsInstanced(mode: MeshTopology, count: number, type: IndexFormat, offset: number, instanceCount: number): void {\n        this._nativeObj.drawElementsInstanced(mode, count, type, offset, instanceCount);\n    }\n\n    /**\n     * @internal\n     */\n    drawArraysInstanced(mode: MeshTopology, first: number, count: number, instanceCount: number): void {\n        this._nativeObj.drawArraysInstanced(mode, first, count, instanceCount);\n    }\n\n    /**\n     * @internal \n     */\n    drawArrays(mode: MeshTopology, first: number, count: number): void {\n        this._nativeObj.drawArrays(mode, first, count);\n    }\n\n    /**\n     * @internal\n     */\n    drawElements(mode: MeshTopology, count: number, type: IndexFormat, offset: number): void {\n        this._nativeObj.drawElements(mode, count, type, offset);\n    }\n\n    drawElements2DTemp(mode: MeshTopology, count: number, type: IndexFormat, offset: number): void {\n        //todo\n    }\n\n    /**\n     * @internal\n     */\n    drawGeometryElement(geometryElement: IRenderGeometryElement): void {\n        this._nativeObj.drawGeometryElement((geometryElement as any)._nativeObj);\n    }\n\n\n}","import { BlendType } from \"../../../RenderEngine/RenderEnum/BlendType\";\nimport { RenderStateType } from \"../../../RenderEngine/RenderEnum/RenderStateType\";\nimport { RenderStateCommand } from \"../../../RenderEngine/RenderStateCommand\";\nimport { LayaGL } from \"../../../layagl/LayaGL\";\n\n\n/**\n * 渲染状态设置命令流\n */\nexport class NativeRenderStateCommand extends RenderStateCommand {\n    private _nativeObj: any;\n    constructor() {\n        super();\n        this._nativeObj = new (window as any).conchRenderStateCommand();\n    }\n\n    addCMD(renderstate: RenderStateType, value: any) {\n        switch (renderstate) {\n            case RenderStateType.DepthTest:\n            case RenderStateType.DepthMask:\n            case RenderStateType.DepthFunc:\n            case RenderStateType.StencilTest:\n            case RenderStateType.StencilMask:\n            case RenderStateType.BlendEquation:\n            case RenderStateType.CullFace:\n            case RenderStateType.FrontFace:\n                this._nativeObj.addCMDInt1(renderstate, value);\n                break;\n            case RenderStateType.StencilFunc:\n            case RenderStateType.BlendFunc:\n            case RenderStateType.BlendEquationSeparate:\n                this._nativeObj.addCMDInt2(renderstate, value[0], value[1]);\n                break;\n            case RenderStateType.StencilOp:\n                this._nativeObj.addCMDInt3(renderstate, value[0], value[1], value[2]);//TODO\n                break;\n            case RenderStateType.BlendType:\n                this._nativeObj.addCMDInt1(renderstate, value != BlendType.BLEND_DISABLE ? 1 : 0);\n                break;\n            case RenderStateType.BlendFuncSeperate:\n                this._nativeObj.addCMDInt4(renderstate, value[0], value[1], value[2], value[3]);\n                break;\n            default:\n                throw \"unknow type of renderStateType\";\n                break;\n        }\n    }\n\n    applyCMD() {\n        LayaGL.renderEngine.applyRenderStateCMD(this);\n    }\n\n    clear() {\n        this._nativeObj.clear();\n    }\n}","import { Vector3 } from \"../../../maths/Vector3\";\nimport { Vector4 } from \"../../../maths/Vector4\";\n\n\nexport class NativeRenderState {\n\t_nativeObj: any;\n\n\tset cull(value: number) {\n\t\tthis._nativeObj.cull = value;\n\t}\n\tget cull(): number {\n\t\treturn this._nativeObj.cull;\n\t}\n\n\tset blend(value: number) {\n\t\tthis._nativeObj.blend = value;\n\t}\n\tget blend(): number {\n\t\treturn this._nativeObj.blend;\n\t}\n\n\tset srcBlend(value: number) {\n\t\tthis._nativeObj.srcBlend = value;\n\t}\n\tget srcBlend(): number {\n\t\treturn this._nativeObj.srcBlend;\n\t}\n\n\tset dstBlend(value: number) {\n\t\tthis._nativeObj.dstBlend = value;\n\t}\n\tget dstBlend(): number {\n\t\treturn this._nativeObj.dstBlend;\n\t}\n\t\n\tset srcBlendRGB(value: number) {\n\t\tthis._nativeObj.srcBlendRGB = value;\n\t}\n\tget srcBlendRGB(): number {\n\t\treturn this._nativeObj.srcBlendRGB;\n\t}\n\t\n\tset dstBlendRGB(value: number) {\n\t\tthis._nativeObj.dstBlendRGB = value;\n\t}\n\tget dstBlendRGB(): number {\n\t\treturn this._nativeObj.dstBlendRGB;\n\t}\n\t\n\tset srcBlendAlpha(value: number) {\n\t\tthis._nativeObj.srcBlendAlpha = value;\n\t}\n\tget srcBlendAlpha(): number {\n\t\treturn this._nativeObj.srcBlendAlpha;\n\t}\n\t\n\tset dstBlendAlpha(value: number) {\n\t\tthis._nativeObj.dstBlendAlpha = value;\n\t}\n\tget dstBlendAlpha(): number {\n\t\treturn this._nativeObj.dstBlendAlpha;\n\t}\n\t\n\tset blendEquation(value: number) {\n\t\tthis._nativeObj.blendEquation = value;\n\t}\n\tget blendEquation(): number {\n\t\treturn this._nativeObj.blendEquation;\n\t}\n\t\n\tset blendEquationRGB(value: number) {\n\t\tthis._nativeObj.blendEquationRGB = value;\n\t}\n\tget blendEquationRGB(): number {\n\t\treturn this._nativeObj.blendEquationRGB;\n\t}\n\t\n\tset blendEquationAlpha(value: number) {\n\t\tthis._nativeObj.blendEquationAlpha = value;\n\t}\n\tget blendEquationAlpha(): number {\n\t\treturn this._nativeObj.blendEquationAlpha;\n\t}\n\t\n\tset depthTest(value: number) {\n\t\tthis._nativeObj.depthTest = value;\n\t}\n\tget depthTest(): number {\n\t\treturn this._nativeObj.depthTest;\n\t}\n\t\n\tset depthWrite(value: boolean) {\n\t\tthis._nativeObj.depthWrite = value;\n\t}\n\tget depthWrite(): boolean {\n\t\treturn this._nativeObj.depthWrite;\n\t}\n\t\n\tset stencilWrite(value: boolean) {\n\t\tthis._nativeObj.stencilWrite = value;\n\t}\n\tget stencilWrite(): boolean {\n\t\treturn this._nativeObj.stencilWrite;\n\t}\n\t\n\tset stencilTest(value: number) {\n\t\tthis._nativeObj.stencilTest = value;\n\t}\n\tget stencilTest(): number {\n\t\treturn this._nativeObj.stencilTest;\n\t}\n\t\n\tset stencilRef(value: number) {\n\t\tthis._nativeObj.stencilRef = value;\n\t}\n\tget stencilRef(): number {\n\t\treturn this._nativeObj.stencilRef;\n\t}\n\n\tset stencilOp(value: Vector3) {\n\t\tthis._nativeObj.setStencilOp(value.x, value.y, value.z);\n\t}\n\tsetNull():void {\n\t\tthis._nativeObj.setNull();\n\t}\n\tconstructor() {\n\t\tthis._nativeObj = new (window as any).conchRenderState();\n\t}\n\n}\n\n\n","export enum MemoryDataType{\n   ShaderData,\n   TextureData,\n   VertexData,\n   IndexData,\n   BaseRenderData,\n}","import { Color } from \"../../../maths/Color\";\nimport { Matrix4x4 } from \"../../../maths/Matrix4x4\";\nimport { Quaternion } from \"../../../maths/Quaternion\";\nimport { Vector2 } from \"../../../maths/Vector2\";\nimport { Vector3 } from \"../../../maths/Vector3\";\nimport { Vector4 } from \"../../../maths/Vector4\";\nimport { INativeUploadNode } from \"../../../RenderEngine/RenderEngine/NativeGLEngine/CommonMemory/INativeUploadNode\";\nimport { MemoryDataType } from \"../../../RenderEngine/RenderEngine/NativeGLEngine/CommonMemory/MemoryDataType\";\nimport { UploadMemory } from \"../../../RenderEngine/RenderEngine/NativeGLEngine/CommonMemory/UploadMemory\";\nimport { UploadMemoryManager } from \"../../../RenderEngine/RenderEngine/NativeGLEngine/CommonMemory/UploadMemoryManager\";\nimport { ShaderData } from \"../../../RenderEngine/RenderShader/ShaderData\";\nimport { BaseTexture } from \"../../../resource/BaseTexture\";\nimport { Resource } from \"../../../resource/Resource\";\nimport { Texture } from \"../../../resource/Texture\";\nimport { Texture2D } from \"../../../resource/Texture2D\";\nimport { NativeUniformBufferObject } from \"./NativeUniformBufferObject\";\n\n\nexport enum NativeShaderDataType {\n    Number32,\n    Vector2,\n    Vector3,\n    Vector4,\n    Matrix4x4,\n    Number32Array,\n    Texture,\n    ShaderDefine,\n    UBO,\n}\n\nexport class NativeShaderData extends ShaderData implements INativeUploadNode {\n    private inUploadList: boolean = false;\n    _dataType: MemoryDataType;\n    nativeObjID: number;\n    _nativeObj: any;\n    updateMap: Map<number, Function>;\n    updataSizeMap: Map<number, number>;\n    payload32bitNum: number = 0;\n    /**\n     * @internal\t\n     */\n    constructor(ownerResource: Resource = null) {\n        super(ownerResource)\n        this._initData();\n        this._nativeObj = new (window as any).conchShaderData();\n        this._nativeObj.setApplyUBOData(this.applyUBOData.bind(this));\n        this.nativeObjID = this._nativeObj.nativeID;\n        this._dataType = MemoryDataType.ShaderData;\n        this.updateMap = new Map();\n        this.updataSizeMap = new Map();\n    }\n\n    /**\n     * @override interface INativeUploadNode\n     * @internal\n     */\n    getUploadMemoryLength(): number {\n        let head = 4;//header\n        this.updataSizeMap.forEach((value) => {\n            this.payload32bitNum += value;\n        });\n        return (this.payload32bitNum + head) * 4;\n    }\n\n    /**\n     * @override interface INativeUploadNode\n     * @internal\n     * @param memoryBlock \n     * @param stride \n     */\n    uploadDataTOShareMemory(memoryBlock: UploadMemory, strideInByte: number): boolean {\n        if (!this._data) {\n            return false;\n        }\n        let array = memoryBlock.int32Array;\n        let strideFloat = strideInByte / 4;\n        //type\n        array[strideFloat++] = MemoryDataType.ShaderData;\n        //instanceID\n        array[strideFloat++] = this.nativeObjID;\n        //dataLength\n        array[strideFloat++] = this.payload32bitNum;\n        //Shaderdata property change nums\n        array[strideFloat++] = this.updateMap.size;\n        this.updateMap.forEach((value, key) => {\n            strideFloat += value.call(this, key, memoryBlock, strideFloat);\n        });\n        this.clearUpload();\n        this.inUploadList = false;\n        return true;\n    }\n\n    clearUpload() {\n        this.payload32bitNum = 0;\n        this.updataSizeMap.clear();\n        this.updateMap.clear();\n    }\n\n    applyUBOData() {\n        if (this._uniformBufferDatas) {\n            super.applyUBOData();\n        }\n\t}\n    compressNumber(index: number, memoryBlock: UploadMemory, stride: number): number {\n        //console.log(\"..index \" + index + \" NativeShaderDataType.Number32 \" + NativeShaderDataType.Number32 + \"stride \" + stride);\n        var length = 3;\n        memoryBlock.int32Array[stride] = index;\n        memoryBlock.int32Array[stride + 1] = NativeShaderDataType.Number32;\n        memoryBlock.float32Array[stride + 2] = this._data[index];\n        return length;\n    }\n\n    compressVector2(index: number, memoryBlock: UploadMemory, stride: number): number {\n        //console.log(\"..index \" + index + \" NativeShaderDataType.Vector2 \" + NativeShaderDataType.Vector2 + \"stride \" + stride);\n        var length = 4;\n        memoryBlock.int32Array[stride] = index;\n        memoryBlock.int32Array[stride + 1] = NativeShaderDataType.Vector2;\n        var value: Vector2 = this._data[index];\n        memoryBlock.float32Array[stride + 2] = value.x;\n        memoryBlock.float32Array[stride + 3] = value.y;\n        return length;\n    }\n\n    compressVector3(index: number, memoryBlock: UploadMemory, stride: number): number {\n        //console.log(\"..index \" + index + \" NativeShaderDataType.Vector3 \" + NativeShaderDataType.Vector2 + \"stride \" + stride);\n        var length = 5;\n        memoryBlock.int32Array[stride] = index;\n        memoryBlock.int32Array[stride + 1] = NativeShaderDataType.Vector3;\n        var value: Vector3 = this._data[index];\n        memoryBlock.float32Array[stride + 2] = value.x;\n        memoryBlock.float32Array[stride + 3] = value.y;\n        memoryBlock.float32Array[stride + 4] = value.z;\n        return length;\n    }\n\n    compressVector4(index: number, memoryBlock: UploadMemory, stride: number): number {\n        //console.log(\"..index \" + index + \" NativeShaderDataType.Vector4 \" + NativeShaderDataType.Vector4 + \"stride \" + stride);\n        var length = 6;\n        memoryBlock.int32Array[stride] = index;\n        memoryBlock.int32Array[stride + 1] = NativeShaderDataType.Vector4;\n        var value: Vector4 = this._data[index];\n        memoryBlock.float32Array[stride + 2] = value.x;\n        memoryBlock.float32Array[stride + 3] = value.y;\n        memoryBlock.float32Array[stride + 4] = value.z;\n        memoryBlock.float32Array[stride + 5] = value.w;\n        return length;\n    }\n    \n\n    compressMatrix4x4(index: number, memoryBlock: UploadMemory, stride: number): number {\n        //console.log(\"..index \" + index + \" NativeShaderDataType.Matrix4x4 \" + NativeShaderDataType.Matrix4x4 + \"stride \" + stride);\n        var length = 18;\n        memoryBlock.int32Array[stride] = index;\n        memoryBlock.int32Array[stride + 1] = NativeShaderDataType.Matrix4x4;\n        var value: Matrix4x4 = this._data[index];\n        memoryBlock.float32Array.set(value.elements, stride + 2);\n        return length;\n    }\n\n    compressNumberArray(index: number, memoryBlock: UploadMemory, stride: number): number {\n        //console.log(\"..index \" + index + \" NativeShaderDataType.Number32Array \" + NativeShaderDataType.Number32Array + \"stride \" + stride);\n        memoryBlock.int32Array[stride] = index\n        memoryBlock.int32Array[stride + 1] = NativeShaderDataType.Number32Array;\n        var value: Float32Array = this._data[index];\n        memoryBlock.int32Array[stride + 2] = value.length;\n        memoryBlock.float32Array.set(value, stride + 3);\n        return value.length + 3;\n    }\n\n    compressTexture(index: number, memoryBlock: UploadMemory, stride: number): number {\n        //console.log(\"..index \" + index + \" NativeShaderDataType.Texture \" + NativeShaderDataType.Texture + \"stride \" + stride);\n        var value: any = this._data[index];\n        memoryBlock.int32Array[stride] = index;\n        memoryBlock.int32Array[stride + 1] = NativeShaderDataType.Texture;\n        if (value && value instanceof Texture) {\n            memoryBlock.int32Array[stride + 2] = (value.bitmap._texture as any).id;\n        }\n        else if (value && value._texture) {\n            memoryBlock.int32Array[stride + 2] = (value._texture as any).id;\n        }\n        else {\n            memoryBlock.int32Array[stride + 2] = (Texture2D.errorTexture._texture as any).id;\n        }\n        return 3;\n    }\n\n    compressUBO(index: number, memoryBlock: UploadMemory, stride: number): number {\n        var value:NativeUniformBufferObject = this._data[index];\n        memoryBlock.int32Array[stride] = index;\n        memoryBlock.int32Array[stride + 1] = NativeShaderDataType.UBO;\n        memoryBlock.int32Array[stride + 2] = (value._conchUniformBufferObject as any).nativeID;\n        return 3;\n    }\n\n    private configMotionProperty(key: number, length: number, callBack: Function) {\n        this.updateMap.set(key, callBack);\n        this.updataSizeMap.set(key, length);\n        if (!this.inUploadList) {\n            this.inUploadList = true;\n            UploadMemoryManager.getInstance()._dataNodeList.add(this);\n        }\n    }\n\n    /**\n     * 设置布尔。\n     * @param\tindex shader索引。\n     * @param\tvalue 布尔。\n     */\n    setBool(index: number, value: boolean): void {\n        super.setBool(index, value);\n        this.configMotionProperty(index, 3, this.compressNumber);\n    }\n\n    /**\n     * 设置整型。\n     * @param\tindex shader索引。\n     * @param\tvalue 整形。\n     */\n    setInt(index: number, value: number): void {\n        //this._data[index] = value;\n        super.setInt(index, value);\n        this.configMotionProperty(index, 3, this.compressNumber);\n    }\n\n    /**\n     * 设置浮点。\n     * @param\tindex shader索引。\n     * @param\tvalue 浮点。\n     */\n    setNumber(index: number, value: number): void {\n        super.setNumber(index, value);\n        this.configMotionProperty(index, 3, this.compressNumber);\n    }\n\n    /**\n     * 设置Vector2向量。\n     * @param\tindex shader索引。\n     * @param\tvalue Vector2向量。\n     */\n    setVector2(index: number, value: Vector2): void {\n        super.setVector2(index, value);\n        this.configMotionProperty(index, 4, this.compressVector2);\n    }\n\n    /**\n     * 设置Vector3向量。\n     * @param\tindex shader索引。\n     * @param\tvalue Vector3向量。\n     */\n    setVector3(index: number, value: Vector3): void {\n        super.setVector3(index, value);\n        this.configMotionProperty(index, 5, this.compressVector3);\n    }\n\n    /**\n     * 设置向量。\n     * @param\tindex shader索引。\n     * @param\tvalue 向量。\n     */\n    setVector(index: number, value: Vector4): void {\n        super.setVector(index, value);\n        this.configMotionProperty(index, 6, this.compressVector4);\n    }\n\n    /**\n     * 设置颜色\n     * @param index 索引\n     * @param value 颜色值\n     */\n    setColor(index: number, value: Color): void {\n        super.setColor(index, value);\n        this.configMotionProperty(index, 6, this.compressVector4);\n    }\n\n    /**\n     * 设置矩阵。\n     * @param\tindex shader索引。\n     * @param\tvalue  矩阵。\n     */\n    setMatrix4x4(index: number, value: Matrix4x4): void {\n        super.setMatrix4x4(index, value);\n        this.configMotionProperty(index, 18, this.compressMatrix4x4);\n    }\n\n\n    /**\n     * 设置Buffer。\n     * @param\tindex shader索引。\n     * @param\tvalue  buffer数据。\n     */\n    setBuffer(index: number, value: Float32Array): void {\n        super.setBuffer(index, value);\n        this.configMotionProperty(index, 3 + value.length, this.compressNumberArray);\n    }\n\n    /**\n     * 设置纹理。\n     * @param\tindex shader索引。\n     * @param\tvalue 纹理。\n     */\n    setTexture(index: number, value: BaseTexture): void {\n        super.setTexture(index, value);\n        this.configMotionProperty(index, 3, this.compressTexture);\n    }\n\n    /**\n     * \n     * @param index \n     * @param value \n     */\n    setUniformBuffer(index: number, value: NativeUniformBufferObject) {\n        this._data[index] = value;\n        this.configMotionProperty(index, 3, this.compressUBO);\n    }\n\n    /**\n     * set shader data\n     * @deprecated\n     * @param index uniformID\n     * @param value data\n     */\n    setValueData(index: number, value: any) {\n        // if (!!value.clone)\n        //     this._data[index] = value.clone();\n        // else\n        //     this._data[index] = value;\n        //有点恶心\n        if (typeof value == \"boolean\") {\n            this.setBool(index, <boolean>value);\n        } else if (typeof value == \"number\") {\n            this.setNumber(index, <number>value);\n        } else if (value instanceof Color) {\n            this.setColor(index, <Color>value);\n        } else if (value instanceof Vector2) {\n            this.setVector2(index, <Vector2>value);\n        } else if (value instanceof Vector3) {\n            this.setVector3(index, <Vector3>value);\n        } else if (value instanceof Vector4 || value instanceof Quaternion) {\n            this.setVector(index, <Vector4>value);\n        } else if (value instanceof Matrix4x4) {\n            this.setMatrix4x4(index, <Matrix4x4>value);\n        } else if (value.ArrayBuffer != null) {\n            this.setBuffer(index, value);\n        } else if (value._texture != null) {\n            this.setTexture(index, value);\n        }\n    }\n\n    cloneTo(destObject: NativeShaderData) {\n        var dest: NativeShaderData = <NativeShaderData>destObject;\n        for (var k in this._data) {//TODO:需要优化,杜绝is判断，慢\n            var value: any = this._data[k];\n            if (value != null) {\n                if (typeof (value) == 'boolean') {\n                    destObject.setBool((k as any), value);\n                } else if (typeof (value) == 'number') {\n                    destObject.setNumber(k as any, <number>value);\n                } else if (value instanceof Vector2) {\n                    destObject.setVector2(k as any, <Vector2>value);\n                } else if (value instanceof Vector3) {\n                    destObject.setVector3(k as any, <Vector3>value);\n                } else if (value instanceof Vector4) {\n                    destObject.setVector(k as any, <Vector4>value);\n                } else if (value instanceof Matrix4x4) {\n                    destObject.setMatrix4x4(k as any, <Matrix4x4>value);\n                } else if (value instanceof BaseTexture) {\n                    destObject.setTexture(k as any, value);\n                }\n            }\n        }\n        this._defineDatas.cloneTo(dest._defineDatas);\n        this._gammaColorMap.forEach((color, index) => {\n\t\t    destObject._gammaColorMap.set(index, color.clone());\n\t    })\n    }\n    /**\n     * 克隆。\n     * @return\t 克隆副本。\n     */\n    clone(): any {\n        var dest: NativeShaderData = new NativeShaderData();\n        this.cloneTo(dest);\n        return dest;\n    }\n    destroy(): void {\n\t\tsuper.destroy();\n        this._nativeObj.destroy();\n        this._nativeObj = null;\n\t}\n}","/**\n * WebGL mode.\n */\n export enum WebGLMode {\n    /** Auto, use WebGL2.0 if support, or will fallback to WebGL1.0. */\n    Auto = 0,\n    /** WebGL2.0. */\n    WebGL2 = 1,\n    /** WebGL1.0, */\n    WebGL1 = 2\n}","export enum WebGLExtension{\n    OES_vertex_array_object,\n    ANGLE_instanced_arrays,\n    OES_texture_half_float,\n    OES_texture_half_float_linear,\n    OES_texture_float,\n    OES_element_index_uint,\n    OES_texture_float_linear,//allows linear filtering with floating-point pixel types for textures.\n    EXT_color_buffer_half_float,//Render BufferHalf float color\n    EXT_shader_texture_lod,\n    WEBGL_depth_texture,\n    EXT_sRGB,\n    EXT_color_buffer_float,\n    EXT_texture_filter_anisotropic,\n    WEBGL_compressed_texture_s3tc,\n    WEBGL_compressed_texture_s3tc_srgb,\n    WEBGL_compressed_texture_pvrtc,\n    WEBGL_compressed_texture_etc1,\n    WEBGL_compressed_texture_etc,\n    WEBGL_compressed_texture_astc,\n    OES_standard_derivatives,\n}","/**\n * 共享内存分配,并且绑定Native共享Buffer\n */\nexport class CommonMemoryAllocater{\n    \n    /**\n     * 创建内存，并绑定为共享内存\n     * @param size \n     * @returns \n     */\n    static creatBlock(size:number):ArrayBuffer{\n        const buffer = new ArrayBuffer(size);\n        \n        //native bind todo:\n        //buffer.nativeid = ??\n        return buffer;\n    }\n\n    /**\n     * 释放共享内存\n     * @param buffer \n     */\n    static freeMemoryBlock(buffer:ArrayBuffer){\n        //TODO native free buffer\n        buffer = null;\n    }\n    \n    \n    \n}","import { CommonMemoryAllocater } from \"./CommonMemoryAllocater\";\n\nexport class NativeMemory {\n    static NativeSourceID:number = 0;\n    /**@internal 共享内存数据 */\n    public _buffer: ArrayBuffer;\n    /**@internal 显示数据 */\n    static  _sharedBuffer: ArrayBuffer = new ArrayBuffer(256);\n    /**@internal 显示数据 */\n    protected _idata:Int32Array;\n    protected _fdata:Float32Array;\n    protected _f64data:Float64Array;\n    protected _byteArray:Uint8Array;\n    /**数据长度 */\n    protected _byteLength: number;\n    /**销毁标记 */\n    protected _destroyed: boolean;\n    /**数据资源 */\n    protected _id:number;\n    /**\n     * 实例化一个共享内存\n     * @param size byteLength\n     */\n    constructor(size: number, shared: boolean) {\n        if (shared) {\n            if (size > NativeMemory._sharedBuffer.byteLength) {\n                throw new Error(\"NativeMemory:shared buffer not enough\");\n            }\n            this._buffer = NativeMemory._sharedBuffer;\n        }\n        else {\n            this._buffer = CommonMemoryAllocater.creatBlock(size);\n        }\n        this._idata = new Int32Array(this._buffer);\n        this._fdata = new Float32Array(this._buffer);\n        this._f64data = new Float64Array(this._buffer);\n        this._byteArray = new Uint8Array(this._buffer);\n        this._byteLength = size;\n    }\n\n    /**\n     * Float32Array Data\n     */\n    get float32Array(): Float32Array {\n        return  this._fdata;\n    }\n\n    get float64Array(): Float64Array {\n        return  this._f64data;\n    }\n    /**\n     * Uint16Array Data\n     */\n    /*get uint16Array(): Uint16Array {\n        if (!(this._bufferData instanceof Uint16Array))\n            this._bufferData = new Uint16Array(this._buffer);\n        return <Uint16Array>this._bufferData;\n    }*/\n\n    /**\n     * Uint8Array Data\n     */\n    get uint8Array(): Uint8Array {\n        return this._byteArray;\n    }\n\n    /**\n     * Int32Array Data\n     */\n    get int32Array(): Int32Array {\n        return this._idata;\n    }\n\n    /**\n     * 设置数据\n     * @param data 数据\n     * @param stride 字节偏移\n     * //TODO 字节对齐\n     */\n    /*setData(data:Uint8Array|Uint16Array|Uint32Array|Int32Array|Float32Array,stride:number):void{\n        if(data instanceof Uint8Array){\n           this.uint8Array.set(data,stride/2);\n            return;\n        }\n        else if(data instanceof Uint16Array){\n           this.uint16Array.set(data,stride/2);\n            return;\n        }else{\n           this.float32Array.set(data,stride/4);\n            return;\n        }\n    }*/\n\n    /**\n     * 设置多个参数\n     * @param offset \n     * @param args \n     * 考虑字节对齐\n     */\n    /*setDataByParams(offset:number,...args: number[]):void{\n        if(args)\n        {\n            for(let i=0,n:number=args.length;i<n;i++)\n            this._bufferData[i+offset]=args[i];\n        }\n    }*/\n\n    /**\n     * 扩充buffer\n     * @param size \n     * @returns \n     */\n    /*expand(size: number) {\n        if(size<=this._byteLength)\n            return;\n        this._byteLength = size;\n        CommonMemoryAllocater.freeMemoryBlock(this._buffer);\n        this.clear();\n        this._buffer = CommonMemoryAllocater.creatBlock(size);\n    }*/\n\n    /**\n     * 删除\n     * @returns \n     */\n    destroy() {\n        if(this._destroyed)\n            return;\n        this.clear();\n        CommonMemoryAllocater.freeMemoryBlock(this._buffer);\n        this._destroyed = true;\n    }\n\n    /**\n     * 清楚\n     */\n    clear(): void {\n        this._idata = null;\n        this._fdata = null;\n        this._byteArray = null;\n    }\n}","import { INativeUploadNode } from \"./INativeUploadNode\";\nimport { NativeMemory } from \"./NativeMemory\";\n\nexport class UploadMemory extends NativeMemory{\n    \n    /**\n     * @internal\n     * 数据填充的位置\n     */\n    _currentOffsetInByte:number = 0;\n\n    constructor(size:number){\n        super(size,false);\n    }\n\n    addBlockCell(node: INativeUploadNode, dataSizeInByte: number){\n        if (node.uploadDataTOShareMemory(this, this._currentOffsetInByte)) {\n            this._currentOffsetInByte += dataSizeInByte;\n        }\n    }\n\n    /**\n     * check ability of size data\n     * @param size \n     * @returns \n     */\n    check(size:number){\n        return this._currentOffsetInByte + size < this._byteLength;\n    }\n\n    /**\n     * 清空更新数据\n     */\n    clear(): void {\n      this._currentOffsetInByte = 0;\n    }\n\n\n}","import { SingletonList } from \"../../../../utils/SingletonList\";\nimport { INativeUploadNode } from \"./INativeUploadNode\";\nimport { UploadMemory } from \"./UploadMemory\";\n\n/**\n * 用来组织所有的数据更新\n * 基本思路如下：每个需要更新native数据的类都继承接口INativeUploadNode，当需要上传数据时，会添加到UploadMemoryMenager.dataNodeList队列中，统一更新数据到共享Buffer中\n * 会有一个共享Buffer NativeMemory来记录总共用了几个UploadMemory，每个Upload中有几个UploadMemoryCell，在native中统一的将数据变化全部同步到Native的渲染底层\n */\nexport class UploadMemoryManager {\n    /**\n     * each upload block memory size\n     * defined 1MB\n     */\n    static UploadMemorySize: number = 1024 * 1024;\n    /*@internal SingleOBJ*/\n    private static _instance: UploadMemoryManager = null;\n    /**@internal 需要上传数据的Node列表*/\n    _dataNodeList: SingletonList<INativeUploadNode> = new SingletonList();\n    /**@internal */\n    _currentBlock: UploadMemory;\n    /**@internal */\n    _commandNums: number = 0;\n\n    /**@native C++ */\n    _conchUploadMemoryManager:any;\n\n    constructor() {\n        this._currentBlock = new UploadMemory(UploadMemoryManager.UploadMemorySize);\n        this._conchUploadMemoryManager = new (window as any).conchUploadMemoryManager();\n    }\n    static getInstance(): UploadMemoryManager {\n        if (!UploadMemoryManager._instance) {\n            UploadMemoryManager._instance = new UploadMemoryManager();\n        }\n        return UploadMemoryManager._instance;\n    }\n    private _addNodeCommand(node: INativeUploadNode, sizeInByte: number) {\n        this._currentBlock.addBlockCell(node, sizeInByte);\n        this._commandNums++;\n    }\n\n    static syncRenderMemory()\n    {\n        UploadMemoryManager.getInstance()._serialiseData();\n        UploadMemoryManager.getInstance().clear();\n    }\n\n    /**\n     * @internal\n     */\n    private _serialiseData() {\n        const elements = this._dataNodeList.elements;\n        for (let i = 0; i < this._dataNodeList.length; i++) {\n            let node = elements[i];\n            let dataSizeInByte = node.getUploadMemoryLength();//get upload Memory Length\n            if (dataSizeInByte > UploadMemoryManager.UploadMemorySize)\n                throw \"dataSize is too large, greater than UploadMemorySize,\";\n            if (this._currentBlock.check(dataSizeInByte)) { \n                 //Deserialization all cmd to native data\n                this.uploadData();\n                this._addNodeCommand(node, dataSizeInByte);\n            } else { \n              \n                this._addNodeCommand(node, dataSizeInByte);\n            }\n        }\n        this.uploadData();\n    }\n\n    /**强制更新数据 */\n    uploadData() {\n        if (this._commandNums > 0)\n        {\n            //Native upload data\n            this._conchUploadMemoryManager.uploadData(this._currentBlock._buffer, this._commandNums);\n            //clear uploadMemory\n            this._commandNums = 0;\n            this._currentBlock.clear();\n        }\n    }\n\n\n    /**\n     * clear UpdateLoad list\n     */\n    clear() {\n        this._dataNodeList.length = 0;\n    }\n}","import { BufferUsage } from \"../../../RenderEngine/RenderEnum/BufferTargetType\";\nimport { UniformBufferObject } from \"../../../RenderEngine/UniformBufferObject\";\nimport { LayaGL } from \"../../../layagl/LayaGL\";\n\n\nexport class NativeUniformBufferObject extends UniformBufferObject{\n    _conchUniformBufferObject:any = null;\n\n    constructor(glPointer: number, name: string, bufferUsage: BufferUsage, byteLength: number, isSingle: boolean) {\n        super(glPointer, name, bufferUsage, byteLength, isSingle);\n        this._conchUniformBufferObject = new (window as any).conchUniformBufferObject((LayaGL.renderEngine as any)._nativeObj, glPointer);\n        this._conchUniformBufferObject.setGLBuffer(this._glBuffer);\n    }\n}","import { IndexBuffer } from \"../../IndexBuffer\";\nimport { IRenderVertexState } from \"../../RenderInterface/IRenderVertexState\";\nimport { VertexBuffer } from \"../../VertexBuffer\";\nimport { VertexDeclaration } from \"../../VertexDeclaration\";\nimport { NativeGLObject } from \"./NativeGLObject\";\nimport { NativeWebGLEngine } from \"./NativeWebGLEngine\";\n\n\nexport class NativeGLVertexState extends NativeGLObject implements IRenderVertexState {\n\n    _vertexDeclaration: VertexDeclaration[] = [];\n    _bindedIndexBuffer: IndexBuffer;\n    _vertexBuffers: VertexBuffer[];\n    _nativeVertexBuffers:any[];\n    _nativeObj: any;\n    constructor(engine: NativeWebGLEngine) {\n        super(engine);\n        this._nativeObj = new (window as any).conchGLVertexState(engine._nativeObj);\n        this._nativeVertexBuffers=[];\n    }\n\n    bindVertexArray(): void {\n        this._nativeObj.bindVertexArray();\n    }\n\n    unbindVertexArray(): void {\n        this._nativeObj.unbindVertexArray();\n    }\n\n    applyVertexBuffer(vertexBuffer: VertexBuffer[]): void {\n        this._vertexBuffers = vertexBuffer;\n        this._nativeVertexBuffers.length = 0;\n        vertexBuffer.forEach((element) => {\n            this._nativeVertexBuffers.push((element as any)._conchVertexBuffer3D);\n        });\n        this._nativeObj.applyVertexBuffer(this._nativeVertexBuffers);\n    }\n\n    applyIndexBuffer(indexBuffer: IndexBuffer|null): void {\n        //需要强制更新IndexBuffer\n        \n        if(indexBuffer==null){\n            return;\n        }\n        this._bindedIndexBuffer = indexBuffer;\n        this._nativeObj.applyIndexBuffer((indexBuffer as any)._conchIndexBuffer3D);\n    }\n    /**\n     * @internal\n     */\n    destroy() {\n        this._vertexBuffers = null;\n        this._nativeVertexBuffers=[];\n        this._bindedIndexBuffer = null;\n        super.destroy();\n        this._nativeObj.destroy()\n    }\n} ","import { WebGLEngine } from \"./WebGLEngine\";\n\n/**\n * WebglObject 基类\n */\nexport class GLObject{\n    protected _engine:WebGLEngine;\n    protected _gl: WebGLRenderingContext | WebGL2RenderingContext;\n    protected _id:number;\n    protected _destroyed: boolean = false;\n\n    constructor(engine: WebGLEngine){\n        this._engine = engine;\n        this._gl = this._engine.gl;\n        this._id = this._engine._IDCounter++;\n    }\n\n    get destroyed():boolean{\n        return this._destroyed;\n    }\n\n    /**\n     * destroy\n     * @override\n     * @returns \n     */\n    destroy():void{\n        if (this._destroyed) return;\n        this._destroyed = true;\n    }\n\n}","import { FilterMode } from \"../../RenderEnum/FilterMode\";\nimport { RenderCapable } from \"../../RenderEnum/RenderCapable\";\nimport { RenderParams } from \"../../RenderEnum/RenderParams\";\nimport { RenderStatisticsInfo } from \"../../RenderEnum/RenderStatInfo\";\nimport { TextureCompareMode } from \"../../RenderEnum/TextureCompareMode\";\nimport { TextureDimension } from \"../../RenderEnum/TextureDimension\";\nimport { WrapMode } from \"../../RenderEnum/WrapMode\";\nimport { InternalTexture } from \"../../RenderInterface/InternalTexture\";\nimport { WebGLExtension } from \"./GLEnum/WebGLExtension\";\nimport { GLObject } from \"./GLObject\";\nimport { WebGLEngine } from \"./WebGLEngine\";\n\n/** @internal */\nexport class WebGLInternalTex extends GLObject implements InternalTexture {\n\n    _gl: WebGLRenderingContext | WebGL2RenderingContext;\n\n    readonly resource: WebGLTexture;\n    _resourceTarget: number;\n\n    readonly width: number;\n    readonly height: number;\n    readonly depth: number;\n    readonly isPotSize: boolean;\n\n    private _mipmap: boolean;\n    /**\n     * 是否存在 mipmap 数据\n     */\n    get mipmap(): boolean {\n        return this._mipmap;\n    }\n\n    private _mipmapCount: number;\n    public get mipmapCount(): number {\n        return this._mipmapCount;\n    }\n\n    readonly useSRGBLoad: boolean;\n    readonly gammaCorrection: number;\n\n    // webgl param\n    readonly target: number;\n    internalFormat: number;\n    format: number;\n    type: number;\n    /**bytelength */\n    _gpuMemory: number = 0;\n\n    get gpuMemory(): number {\n        return this._gpuMemory;\n    }\n    set gpuMemory(value: number) {\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.GPUMemory, -this._gpuMemory);\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.TextureMemeory, -this._gpuMemory);\n        this._gpuMemory = value;\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.GPUMemory, this._gpuMemory);\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.TextureMemeory, this._gpuMemory);\n    }\n\n    constructor(engine: WebGLEngine, target: number, width: number, height: number, depth: number, dimension: TextureDimension, mipmap: boolean, useSRGBLoader: boolean, gammaCorrection: number) {\n        super(engine);\n\n        this.resource = this._gl.createTexture();\n\n        this.width = width;\n        this.height = height;\n        this.depth = depth;\n\n        const isPot = (value: number): boolean => {\n            return (value & (value - 1)) === 0;\n        }\n\n        this.isPotSize = isPot(width) && isPot(height);\n        if (dimension == TextureDimension.Tex3D) {\n            this.isPotSize = this.isPotSize && isPot(this.depth);\n        }\n\n        this._mipmap = mipmap && this.isPotSize;\n        this._mipmapCount = this._mipmap ? Math.max(Math.ceil(Math.log2(width)) + 1, Math.ceil(Math.log2(height)) + 1) : 1;\n        this._maxMipmapLevel = this._mipmapCount - 1;\n        this._baseMipmapLevel = 0;\n\n        this.useSRGBLoad = useSRGBLoader;\n        this.gammaCorrection = gammaCorrection;\n\n        this.target = target;\n\n        // default value\n        // this._filterMode = FilterMode.Bilinear;\n        // this._warpU = WrapMode.Repeat;\n        // this._warpV = WrapMode.Repeat;\n        // this._warpW = WrapMode.Repeat;\n        // this._anisoLevel = 4;\n\n        this.filterMode = FilterMode.Bilinear;\n        this.wrapU = WrapMode.Repeat;\n        this.wrapV = WrapMode.Repeat;\n        this.wrapW = WrapMode.Repeat;\n        this.anisoLevel = 4;\n\n        this.compareMode = TextureCompareMode.None;\n    }\n\n    private _filterMode: FilterMode;\n    public get filterMode(): FilterMode {\n        return this._filterMode;\n    }\n    public set filterMode(value: FilterMode) {\n        if (this._filterMode != value && this.resource) {\n            let gl = this._gl;\n            let mipmap = this.mipmap;\n            let min = this.getFilteMinrParam(value, mipmap);\n            this._setTexParameteri(gl.TEXTURE_MIN_FILTER, min);\n            let mag = this.getFilterMagParam(value);\n            this._setTexParameteri(gl.TEXTURE_MAG_FILTER, mag);\n\n            this._filterMode = value;\n        }\n    }\n\n    private _warpU: WrapMode;\n    public get wrapU(): WrapMode {\n        return this._warpU;\n    }\n    public set wrapU(value: WrapMode) {\n        if (this._warpU != value && this.resource) {\n            let gl = this._gl;\n            let warpParam = this.getWrapParam(value);\n            this._setWrapMode(gl.TEXTURE_WRAP_S, warpParam);\n            this._warpU = value;\n        }\n    }\n\n    private _warpV: WrapMode;\n\n    public get wrapV(): WrapMode {\n        return this._warpV;\n    }\n\n    public set wrapV(value: WrapMode) {\n        if (this._warpV != value && this.resource) {\n            let gl = this._gl;\n            let warpParam = this.getWrapParam(value);\n            this._setWrapMode(gl.TEXTURE_WRAP_T, warpParam);\n            this._warpV = value;\n        }\n    }\n\n    private _warpW: WrapMode;\n    public get wrapW(): WrapMode {\n        return this._warpW;\n    }\n    public set wrapW(value: WrapMode) {\n        if (this._warpW != value && this.resource) {\n            if (this._engine.getCapable(RenderCapable.Texture3D)) {\n                let gl = <WebGL2RenderingContext>this._gl;\n                let warpParam = this.getWrapParam(value);\n                this._setWrapMode(gl.TEXTURE_WRAP_R, warpParam);\n            }\n            this._warpW = value;\n        }\n    }\n\n    private _anisoLevel: number;\n    public get anisoLevel(): number {\n        return this._anisoLevel;\n    }\n    public set anisoLevel(value: number) {\n        let anisoExt = this._engine._supportCapatable.getExtension(WebGLExtension.EXT_texture_filter_anisotropic);\n        if (anisoExt) {\n            let gl = this._gl;\n            //let maxAnisoLevel = gl.getParameter(anisoExt.MAX_TEXTURE_MAX_ANISOTROPY_EXT);\n            let maxAnisoLevel = this._engine.getParams(RenderParams.Max_AnisoLevel_Count);\n\n            let level = Math.max(1, Math.min(maxAnisoLevel, value));\n            this._setTexParametexf(anisoExt.TEXTURE_MAX_ANISOTROPY_EXT, level);\n            this._anisoLevel = level;\n        }\n        else {\n            this._anisoLevel = 1;\n        }\n    }\n\n    private _baseMipmapLevel: number = 0;\n\n    public set baseMipmapLevel(value: number) {\n        if (this._engine.isWebGL2) {\n            this._setTexParameteri((<WebGL2RenderingContext>this._gl).TEXTURE_BASE_LEVEL, value);\n        }\n        this._baseMipmapLevel = value;\n    }\n\n    public get baseMipmapLevel() {\n        return this._baseMipmapLevel;\n    }\n\n    private _maxMipmapLevel: number = 0;\n\n    public set maxMipmapLevel(value: number) {\n        if (this._engine.isWebGL2) {\n            this._setTexParameteri((<WebGL2RenderingContext>this._gl).TEXTURE_MAX_LEVEL, value);\n        }\n        this._maxMipmapLevel = value;\n    }\n\n    public get maxMipmapLevel() {\n        return this._maxMipmapLevel;\n    }\n\n\n    private _compareMode: TextureCompareMode;\n    public get compareMode(): TextureCompareMode {\n        return this._compareMode;\n    }\n    public set compareMode(value: TextureCompareMode) {\n        this._compareMode = value;\n    }\n\n    // todo 设置参数函数 放在 context 里面? \n    public _setTexParameteri(pname: number, param: number) {\n        let gl = this._gl;\n        let target = this.target\n        this._engine._bindTexture(target, this.resource);\n        gl.texParameteri(target, pname, param);\n        this._engine._bindTexture(target, null);\n    }\n\n    public _setTexParametexf(pname: number, param: number) {\n        let gl = this._gl;\n        let target = this.target\n        this._engine._bindTexture(target, this.resource);\n        gl.texParameterf(target, pname, param);\n        this._engine._bindTexture(target, null);\n    }\n\n    protected getFilteMinrParam(filterMode: FilterMode, mipmap: boolean) {\n        let gl = this._gl;\n        switch (filterMode) {\n            case FilterMode.Point:\n                return mipmap ? gl.NEAREST_MIPMAP_NEAREST : gl.NEAREST;\n            case FilterMode.Bilinear:\n                return mipmap ? gl.LINEAR_MIPMAP_NEAREST : gl.LINEAR;\n            case FilterMode.Trilinear:\n                return mipmap ? gl.LINEAR_MIPMAP_LINEAR : gl.LINEAR;\n            default:\n                return mipmap ? gl.LINEAR_MIPMAP_NEAREST : gl.LINEAR;\n        }\n    }\n\n    protected getFilterMagParam(filterMode: FilterMode) {\n        let gl = this._gl;\n        switch (filterMode) {\n            case FilterMode.Point:\n                return gl.NEAREST;\n            case FilterMode.Bilinear:\n                return gl.LINEAR;\n            case FilterMode.Trilinear:\n                return gl.LINEAR;\n            default:\n                return gl.LINEAR;\n        }\n    }\n\n    protected getWrapParam(wrapMode: WrapMode) {\n        let gl = this._gl;\n        switch (wrapMode) {\n            case WrapMode.Repeat:\n                return gl.REPEAT;\n            case WrapMode.Clamp:\n                return gl.CLAMP_TO_EDGE;\n            case WrapMode.Mirrored:\n                return gl.MIRRORED_REPEAT;\n            default:\n                return gl.REPEAT;\n        }\n    }\n\n    protected _setWrapMode(pname: number, param: number) {\n        let gl = this._gl;\n        if (!this.isPotSize) {\n            param = gl.CLAMP_TO_EDGE;\n        }\n        this._setTexParameteri(pname, param);\n    }\n\n    dispose(): void {\n        let gl = this._gl;\n        gl.deleteTexture(this.resource);\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.GPUMemory, -this._gpuMemory);\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.TextureMemeory, -this._gpuMemory);\n        this._gpuMemory = 0;\n    }\n}","import { RenderStatisticsInfo } from \"../../RenderEnum/RenderStatInfo\";\nimport { RenderTargetFormat } from \"../../RenderEnum/RenderTargetFormat\";\nimport { InternalRenderTarget } from \"../../RenderInterface/InternalRenderTarget\";\nimport { InternalTexture } from \"../../RenderInterface/InternalTexture\";\nimport { GLObject } from \"./GLObject\";\nimport { WebGLEngine } from \"./WebGLEngine\";\n\nexport class WebGLInternalRT extends GLObject implements InternalRenderTarget {\n\n    _gl: WebGLRenderingContext | WebGL2RenderingContext;\n\n    _framebuffer: WebGLFramebuffer;\n\n    _depthbuffer: WebGLRenderbuffer;\n\n    _msaaFramebuffer: WebGLFramebuffer;\n    _msaaRenderbuffer: WebGLRenderbuffer;\n\n    _isCube: boolean;\n    _samples: number;\n\n    _generateMipmap: boolean;\n\n    _textures: InternalTexture[];\n    _depthTexture: InternalTexture;\n\n    colorFormat: RenderTargetFormat;\n    depthStencilFormat: RenderTargetFormat;\n\n    isSRGB: boolean;\n\n    /**bytelength */\n    _gpuMemory: number = 0;\n\n    get gpuMemory(): number {\n        return this._gpuMemory;\n    }\n    set gpuMemory(value: number) {\n\n        this._gpuMemory = value;\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.GPUMemory, this._gpuMemory);\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.RenderTextureMemory, this._gpuMemory);\n    }\n\n\n    constructor(engine: WebGLEngine, colorFormat: RenderTargetFormat, depthStencilFormat: RenderTargetFormat, isCube: boolean, generateMipmap: boolean, samples: number) {\n        super(engine);\n\n        this.colorFormat = colorFormat;\n        this.depthStencilFormat = depthStencilFormat;\n        this._isCube = isCube;\n        this._generateMipmap = generateMipmap;\n        this._samples = samples;\n\n        this._textures = [];\n        this._depthTexture = null;\n\n        this._framebuffer = this._gl.createFramebuffer();\n        if (samples > 1) {\n            this._msaaFramebuffer = this._gl.createFramebuffer();\n        }\n    }\n    \n\n\n    dispose(): void {\n        this._textures.forEach(tex => {\n            tex && tex.dispose();\n        });\n        this._textures = null;\n        this._depthTexture && this._depthTexture.dispose();\n        this._depthTexture = null;\n        this._framebuffer && this._gl.deleteFramebuffer(this._framebuffer);\n        this._framebuffer = null;\n        this._depthbuffer && this._gl.deleteRenderbuffer(this._depthbuffer);\n        this._depthbuffer = null;\n\n        this._msaaFramebuffer && this._gl.deleteFramebuffer(this._msaaFramebuffer);\n        this._msaaFramebuffer = null;\n        this._msaaRenderbuffer && this._gl.deleteRenderbuffer(this._msaaRenderbuffer);\n        this._msaaRenderbuffer = null;\n\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.GPUMemory,-this._gpuMemory);\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.RenderTextureMemory,-this._gpuMemory);\n        this._gpuMemory = 0;\n    }\n}","\nimport { WebGLExtension } from \"./GLEnum/WebGLExtension\";\nimport { WebGLInternalTex } from \"./WebGLInternalTex\";\nimport { WebGLInternalRT } from \"./WebGLInternalRT\";\nimport { FilterMode } from \"../../RenderEnum/FilterMode\";\nimport { RenderCapable } from \"../../RenderEnum/RenderCapable\";\nimport { RenderTargetFormat } from \"../../RenderEnum/RenderTargetFormat\";\nimport { TextureCompareMode } from \"../../RenderEnum/TextureCompareMode\";\nimport { TextureDimension } from \"../../RenderEnum/TextureDimension\";\nimport { TextureFormat } from \"../../RenderEnum/TextureFormat\";\nimport { InternalTexture } from \"../../RenderInterface/InternalTexture\";\nimport { ITextureContext } from \"../../RenderInterface/ITextureContext\";\nimport { GLObject } from \"./GLObject\";\nimport { WebGLEngine } from \"./WebGLEngine\";\nimport { DDSTextureInfo } from \"../../DDSTextureInfo\";\nimport { HDRTextureInfo } from \"../../HDRTextureInfo\";\nimport { KTXTextureInfo } from \"../../KTXTextureInfo\";\n\nexport class GLTextureContext extends GLObject implements ITextureContext {\n\n    protected _sRGB: any;\n    protected _oesTextureHalfFloat: any;\n    protected _compressdTextureS3tc_srgb: any;\n    protected _compressedTextureEtc1: any;\n    protected _compressedTextureS3tc: any;\n    protected _compressedTextureETC: any;\n    protected _compressedTextureASTC: any;\n    protected _webgl_depth_texture: any;\n    needBitmap: boolean;\n    constructor(engine: WebGLEngine) {\n        super(engine);\n        this.needBitmap = false;\n        this._sRGB = this._engine._supportCapatable.getExtension(WebGLExtension.EXT_sRGB)\n        this._oesTextureHalfFloat = this._engine._supportCapatable.getExtension(WebGLExtension.OES_texture_half_float)\n        this._compressdTextureS3tc_srgb = this._engine._supportCapatable.getExtension(WebGLExtension.WEBGL_compressed_texture_s3tc_srgb)\n        this._compressedTextureEtc1 = this._engine._supportCapatable.getExtension(WebGLExtension.WEBGL_compressed_texture_etc1)\n        this._compressedTextureS3tc = this._engine._supportCapatable.getExtension(WebGLExtension.WEBGL_compressed_texture_s3tc)\n        this._compressedTextureETC = this._engine._supportCapatable.getExtension(WebGLExtension.WEBGL_compressed_texture_etc)\n        this._compressedTextureASTC = this._engine._supportCapatable.getExtension(WebGLExtension.WEBGL_compressed_texture_astc)\n        this._webgl_depth_texture = this._engine._supportCapatable.getExtension(WebGLExtension.WEBGL_depth_texture);\n    }\n\n    _glParam: {\n        internalFormat: number,\n        format: number,\n        type: number,\n    } = {\n            internalFormat: 0,\n            format: 0,\n            type: 0,\n        };\n\n    glTextureParam(format: TextureFormat, useSRGB: boolean) {\n        let gl = this._gl;\n\n        this._glParam.internalFormat = null;\n        this._glParam.format = null;\n        this._glParam.type = null;\n        switch (format) {\n            case TextureFormat.R8G8B8:\n                this._glParam.internalFormat = useSRGB ? this._sRGB.SRGB_EXT : gl.RGB;\n                this._glParam.format = this._glParam.internalFormat;\n                this._glParam.type = gl.UNSIGNED_BYTE;\n                break;\n            case TextureFormat.R8G8B8A8:\n                this._glParam.internalFormat = useSRGB ? this._sRGB.SRGB_ALPHA_EXT : gl.RGBA;\n                this._glParam.format = this._glParam.internalFormat;\n                this._glParam.type = gl.UNSIGNED_BYTE;\n                break;\n            case TextureFormat.R5G6B5:\n                this._glParam.internalFormat = gl.RGB;\n                this._glParam.format = this._glParam.internalFormat;\n                this._glParam.type = gl.UNSIGNED_SHORT_5_6_5;\n                break;\n            case TextureFormat.R32G32B32A32:\n                this._glParam.internalFormat = gl.RGBA;\n                this._glParam.format = this._glParam.internalFormat;\n                this._glParam.type = gl.FLOAT;\n                break;\n            case TextureFormat.R32G32B32:\n                this._glParam.internalFormat = gl.RGB;\n                this._glParam.format = this._glParam.internalFormat;\n                this._glParam.type = gl.FLOAT;\n                break;\n            case TextureFormat.R16G16B16A16:\n                this._glParam.internalFormat = gl.RGBA;\n                this._glParam.format = this._glParam.internalFormat;\n                this._glParam.type = this._oesTextureHalfFloat.HALF_FLOAT_OES;\n                break;\n            case TextureFormat.R16G16B16:\n                this._glParam.internalFormat = gl.RGB;\n                this._glParam.format = this._glParam.internalFormat;\n                this._glParam.type = this._oesTextureHalfFloat.HALF_FLOAT_OES;\n                break;\n            case TextureFormat.DXT1:\n                this._glParam.internalFormat = useSRGB ? this._compressdTextureS3tc_srgb.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT : this._compressedTextureS3tc.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n                this._glParam.format = this._glParam.internalFormat;\n                this._glParam.type = gl.UNSIGNED_BYTE;\n                break;\n            case TextureFormat.DXT3:\n                this._glParam.internalFormat = useSRGB ? this._compressdTextureS3tc_srgb.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT : this._compressedTextureS3tc.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n                this._glParam.format = this._glParam.internalFormat;\n                this._glParam.type = gl.UNSIGNED_BYTE;\n                break;\n            case TextureFormat.DXT5:\n                this._glParam.internalFormat = useSRGB ? this._compressdTextureS3tc_srgb.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT : this._compressedTextureS3tc.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n                this._glParam.format = this._glParam.internalFormat;\n                this._glParam.type = gl.UNSIGNED_BYTE;\n                break;\n            case TextureFormat.ETC1RGB:\n                this._glParam.internalFormat = this._compressedTextureEtc1.COMPRESSED_RGB_ETC1_WEBGL;\n                this._glParam.format = this._glParam.internalFormat;\n                this._glParam.type = gl.UNSIGNED_BYTE;\n                break;\n            case TextureFormat.ETC2RGBA:\n                this._glParam.internalFormat = this._compressedTextureETC.COMPRESSED_RGBA8_ETC2_EAC;\n                this._glParam.format = this._glParam.internalFormat;\n                this._glParam.type = gl.UNSIGNED_BYTE;\n                break;\n            case TextureFormat.ETC2RGB:\n                this._glParam.internalFormat = this._compressedTextureETC.COMPRESSED_RGB8_ETC2;\n                this._glParam.format = this._glParam.internalFormat;\n                this._glParam.type = gl.UNSIGNED_BYTE;\n                break;\n            case TextureFormat.ETC2SRGB:\n                this._glParam.internalFormat = this._compressedTextureETC.COMPRESSED_SRGB8_ETC2;\n                this._glParam.format = this._glParam.internalFormat;\n                this._glParam.type = gl.UNSIGNED_BYTE;\n                break;\n            case TextureFormat.ETC2SRGB_Alpha8:\n                this._glParam.internalFormat = this._compressedTextureETC.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC;\n                this._glParam.format = this._glParam.internalFormat;\n                this._glParam.type = gl.UNSIGNED_BYTE;\n                break;\n            case TextureFormat.ASTC4x4:\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_RGBA_ASTC_4x4_KHR;\n                this._glParam.format = this._glParam.internalFormat;\n                this._glParam.type = gl.UNSIGNED_BYTE;\n                break;\n            case TextureFormat.ASTC6x6:\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_RGBA_ASTC_6x6_KHR;\n                this._glParam.format = this._glParam.internalFormat;\n                this._glParam.type = gl.UNSIGNED_BYTE;\n                break\n            case TextureFormat.ASTC8x8:\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_RGBA_ASTC_8x8_KHR;\n                this._glParam.format = this._glParam.internalFormat;\n                this._glParam.type = gl.UNSIGNED_BYTE;\n                break\n            case TextureFormat.ASTC10x10:\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_RGBA_ASTC_10x10_KHR;\n                this._glParam.format = this._glParam.internalFormat;\n                this._glParam.type = gl.UNSIGNED_BYTE;\n                break\n            case TextureFormat.ASTC12x12:\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_RGBA_ASTC_12x12_KHR;\n                this._glParam.format = this._glParam.internalFormat;\n                this._glParam.type = gl.UNSIGNED_BYTE;\n                break\n            case TextureFormat.ASTC4x4SRGB:\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR;\n                this._glParam.format = this._glParam.internalFormat;\n                this._glParam.type = gl.UNSIGNED_BYTE;\n                break;\n            case TextureFormat.ASTC6x6SRGB:\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR;\n                this._glParam.format = this._glParam.internalFormat;\n                this._glParam.type = gl.UNSIGNED_BYTE;\n                break;\n            case TextureFormat.ASTC8x8SRGB:\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR;\n                this._glParam.format = this._glParam.internalFormat;\n                this._glParam.type = gl.UNSIGNED_BYTE;\n                break;\n            case TextureFormat.ASTC10x10SRGB:\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR;\n                this._glParam.format = this._glParam.internalFormat;\n                this._glParam.type = gl.UNSIGNED_BYTE;\n                break;\n            case TextureFormat.ASTC12x12SRGB:\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR;\n                this._glParam.format = this._glParam.internalFormat;\n                this._glParam.type = gl.UNSIGNED_BYTE;\n                break;\n            default:\n                throw \"Unknown Texture Format.\";\n        }\n\n        return this._glParam;\n    }\n\n    // todo srgb ?\n    glRenderTextureParam(format: RenderTargetFormat, useSRGB: boolean) {\n        let gl = this._gl;\n\n        this._glParam.internalFormat = null;\n        this._glParam.format = null;\n        this._glParam.type = null;\n\n        switch (format) {\n            case RenderTargetFormat.R8G8B8:\n                this._glParam.internalFormat = useSRGB ? this._sRGB.SRGB_EXT : gl.RGB;\n                this._glParam.format = this._glParam.internalFormat;\n                this._glParam.type = gl.UNSIGNED_BYTE;\n                break;\n            case RenderTargetFormat.R8G8B8A8:\n                this._glParam.internalFormat = useSRGB ? this._sRGB.SRGB_EXT : gl.RGBA;\n                this._glParam.format = this._glParam.internalFormat;\n                this._glParam.type = gl.UNSIGNED_BYTE;\n                break;\n            case RenderTargetFormat.R16G16B16:\n                this._glParam.internalFormat = gl.RGB;\n                this._glParam.format = this._glParam.internalFormat;\n                this._glParam.type = this._oesTextureHalfFloat.HALF_FLOAT_OES;\n                break;\n            case RenderTargetFormat.R16G16B16A16:\n                this._glParam.internalFormat = gl.RGBA;\n                this._glParam.format = this._glParam.internalFormat;\n                this._glParam.type = this._oesTextureHalfFloat.HALF_FLOAT_OES;\n                break;\n            case RenderTargetFormat.R32G32B32:\n                this._glParam.internalFormat = gl.RGB;\n                this._glParam.format = this._glParam.internalFormat;\n                this._glParam.type = gl.FLOAT;\n                break;\n            case RenderTargetFormat.R32G32B32A32:\n                this._glParam.internalFormat = gl.RGBA;\n                this._glParam.format = this._glParam.internalFormat;\n                this._glParam.type = gl.FLOAT;\n                break;\n            case RenderTargetFormat.DEPTH_16:\n                this._glParam.internalFormat = gl.DEPTH_COMPONENT;\n                this._glParam.format = this._glParam.internalFormat;\n                this._glParam.type = gl.UNSIGNED_SHORT;\n                break;\n            case RenderTargetFormat.DEPTHSTENCIL_24_8:\n                this._glParam.internalFormat = gl.DEPTH_STENCIL;\n                this._glParam.format = this._glParam.internalFormat;\n                this._glParam.type = this._webgl_depth_texture.UNSIGNED_INT_24_8_WEBGL;\n                break;\n            case RenderTargetFormat.DEPTH_32:\n                this._glParam.internalFormat = gl.DEPTH_COMPONENT;\n                this._glParam.format = this._glParam.internalFormat;\n                this._glParam.type = gl.UNSIGNED_INT;\n                break;\n            case RenderTargetFormat.STENCIL_8:\n            default:\n                throw \"render texture format wrong.\"\n        }\n\n        return this._glParam;\n    }\n\n    glRenderBufferParam(format: RenderTargetFormat, useSRGB: boolean): { internalFormat: number; attachment: number } {\n        // todo\n        let gl = this._gl;\n        switch (format) {\n            case RenderTargetFormat.DEPTH_16:\n                return { internalFormat: gl.DEPTH_COMPONENT16, attachment: gl.DEPTH_ATTACHMENT };\n            case RenderTargetFormat.DEPTHSTENCIL_24_8:\n                return { internalFormat: gl.DEPTH_STENCIL, attachment: gl.DEPTH_STENCIL_ATTACHMENT };\n            case RenderTargetFormat.DEPTH_32:\n                return { internalFormat: gl.DEPTH_STENCIL, attachment: gl.DEPTH_ATTACHMENT };\n            case RenderTargetFormat.STENCIL_8:\n                return { internalFormat: gl.STENCIL_INDEX8, attachment: gl.STENCIL_ATTACHMENT };\n            default:\n                return null;\n        }\n    }\n\n    glRenderTargetAttachment(format: RenderTargetFormat) {\n        let gl = this._gl;\n        switch (format) {\n            case RenderTargetFormat.DEPTH_16:\n                return gl.DEPTH_ATTACHMENT;\n            case RenderTargetFormat.DEPTHSTENCIL_24_8:\n                return gl.DEPTH_STENCIL_ATTACHMENT;\n            case RenderTargetFormat.DEPTH_32:\n                return gl.DEPTH_ATTACHMENT;\n            case RenderTargetFormat.STENCIL_8:\n                return gl.STENCIL_ATTACHMENT;\n            case RenderTargetFormat.R8G8B8:\n            case RenderTargetFormat.R8G8B8A8:\n            case RenderTargetFormat.R16G16B16:\n            case RenderTargetFormat.R16G16B16A16:\n            case RenderTargetFormat.R32G32B32:\n            case RenderTargetFormat.R32G32B32A32:\n                return gl.COLOR_ATTACHMENT0;\n            default:\n                throw \"render format.\"\n        }\n    }\n\n    protected getTarget(dimension: TextureDimension): number {\n        let gl = this._gl;\n        switch (dimension) {\n            case TextureDimension.Tex2D:\n                return gl.TEXTURE_2D;\n            case TextureDimension.Cube:\n                return gl.TEXTURE_CUBE_MAP;\n            default:\n                throw \"texture dimension wrong in WebGL1.\"\n        }\n    }\n\n    public getFormatPixelsParams(format: TextureFormat) {\n\n        let formatParams: { channels: number, bytesPerPixel: number, dataTypedCons: any, typedSize: number } = {\n            channels: 0,\n            bytesPerPixel: 0,\n            dataTypedCons: Uint8Array,\n            typedSize: 1\n        }\n        switch (format) {\n            case TextureFormat.R8G8B8A8:\n                formatParams.channels = 4;\n                formatParams.bytesPerPixel = 4;\n                formatParams.dataTypedCons = Uint8Array\n                formatParams.typedSize = 1;\n                return formatParams;\n            case TextureFormat.R8G8B8:\n                formatParams.channels = 3;\n                formatParams.bytesPerPixel = 3;\n                formatParams.dataTypedCons = Uint8Array\n                formatParams.typedSize = 1;\n                return formatParams;\n            case TextureFormat.R5G6B5:\n                formatParams.channels = 3;\n                formatParams.bytesPerPixel = 2;\n                formatParams.dataTypedCons = Uint16Array\n                formatParams.typedSize = 2;\n                return formatParams;\n            case TextureFormat.R16G16B16:\n                formatParams.channels = 3;\n                formatParams.bytesPerPixel = 6;\n                formatParams.dataTypedCons = Uint16Array\n                formatParams.typedSize = 2;\n                return formatParams;\n            case TextureFormat.R16G16B16A16:\n                formatParams.channels = 4;\n                formatParams.bytesPerPixel = 8;\n                formatParams.dataTypedCons = Uint16Array\n                formatParams.typedSize = 2;\n                return formatParams;\n            case TextureFormat.R32G32B32:\n                formatParams.channels = 3;\n                formatParams.bytesPerPixel = 12;\n                formatParams.dataTypedCons = Float32Array\n                formatParams.typedSize = 4;\n                return formatParams;\n            case TextureFormat.R32G32B32A32:\n                formatParams.channels = 4;\n                formatParams.bytesPerPixel = 16;\n                formatParams.dataTypedCons = Float32Array\n                formatParams.typedSize = 4;\n                return formatParams;\n            default:\n                return formatParams;\n        }\n\n    }\n\n    /**\n     * caculate texture memory\n     * @param tex \n     * @returns \n     */\n    getGLtexMemory(tex: WebGLInternalTex, depth: number = 1): number {\n        let gl = this._gl;\n        let channels = 0;\n        let singlebyte = 0;\n        let bytelength = 0;\n\n        let srgb = this._sRGB ? this._sRGB.SRGB_EXT : gl.RGB;\n        let srgb_alpha = this._sRGB ? this._sRGB.SRGB_ALPHA_EXT : gl.RGBA;\n\n        switch (tex.internalFormat) {\n            case srgb:\n            case gl.RGB:\n                channels = 3;\n                break;\n            case srgb_alpha:\n            case gl.RGBA:\n                channels = 4;\n                break;\n            default:\n                channels = 0;\n                break;\n        }\n        switch (tex.type) {\n            case gl.UNSIGNED_BYTE:\n                singlebyte = 1;\n                break;\n            case gl.UNSIGNED_SHORT_5_6_5:\n                singlebyte = 2 / 3;\n                break;\n            case gl.FLOAT:\n                singlebyte = 4;\n                break;\n            case this._oesTextureHalfFloat.HALF_FLOAT_OES:\n                singlebyte = 2;\n                break;\n            default:\n                singlebyte = 0;\n                break;\n        }\n        bytelength = channels * singlebyte * tex.width * tex.height;\n        if (tex.mipmap) {\n            bytelength *= 1.333;\n        }\n        if (tex.target == gl.TEXTURE_CUBE_MAP)\n            bytelength *= 6;\n        else if (tex.target == gl.TEXTURE_2D)\n            bytelength *= 1;\n\n        return bytelength;\n    }\n\n    getGLRTTexMemory(width: number, height: number, colorFormat: RenderTargetFormat, depthStencilFormat: RenderTargetFormat, generateMipmap: boolean, multiSamples: number, cube: boolean) {\n        let getpixelbyte = (rtFormat: RenderTargetFormat) => {\n            let pixelByte = 0;\n            switch (rtFormat) {\n                case RenderTargetFormat.R8G8B8:\n                    pixelByte = 3;\n                    break;\n                case RenderTargetFormat.R8G8B8A8:\n                    pixelByte = 4;\n                    break;\n                case RenderTargetFormat.R16G16B16A16:\n                    pixelByte = 8;\n                    break;\n                case RenderTargetFormat.R32G32B32:\n                    pixelByte = 12;\n                    break;\n                case RenderTargetFormat.R32G32B32A32:\n                    pixelByte = 16;\n                    break;\n                case RenderTargetFormat.R16G16B16:\n                    pixelByte = 6;\n                    break;\n                case RenderTargetFormat.DEPTH_16:\n                    pixelByte = 2;\n                    break;\n                case RenderTargetFormat.STENCIL_8:\n                    pixelByte = 1;\n                    break;\n                case RenderTargetFormat.DEPTHSTENCIL_24_8:\n                    pixelByte = 4;\n                    break;\n                case RenderTargetFormat.DEPTH_32:\n                    pixelByte = 4;\n                    break;\n            }\n            return pixelByte;\n        }\n        let colorPixelbyte = getpixelbyte(colorFormat);\n        let depthPixelbyte = getpixelbyte(depthStencilFormat);\n        if (multiSamples > 1)//多重采样\n            colorPixelbyte *= 2;\n        if (cube)//box\n            colorPixelbyte *= 6;\n        if (generateMipmap)//mipmap\n            colorPixelbyte *= 1.333;\n        let colorMemory = colorPixelbyte * width * height;\n        let depthMemory = depthPixelbyte * width * height;\n        return colorMemory + depthMemory;\n    }\n\n    // protected getRenderTargetDepthFormat(format: RenderTargetDepthFormat): { internalFormat: number, attachment: number } {\n    //     let gl = this.gl;\n    //     switch (format) {\n    //         case RenderTargetDepthFormat.DEPTH_16:\n    //             return { internalFormat: gl.DEPTH_COMPONENT16, attachment: gl.DEPTH_ATTACHMENT };\n    //         case RenderTargetDepthFormat.DEPTHSTENCIL_24_8:\n    //             return { internalFormat: gl.DEPTH_STENCIL, attachment: gl.DEPTH_STENCIL_ATTACHMENT };\n    //         case RenderTargetDepthFormat.DEPTH_32:\n    //             return { internalFormat: gl.DEPTH_STENCIL, attachment: gl.DEPTH_STENCIL_ATTACHMENT };\n    //         case RenderTargetDepthFormat.STENCIL_8:\n    //             return { internalFormat: gl.STENCIL_INDEX8, attachment: gl.STENCIL_ATTACHMENT };\n    //         case RenderTargetDepthFormat.DEPTHSTENCIL_NONE:\n    //             return null;\n    //         default:\n    //             throw \"RenderTargetDepthFormat wrong.\"\n    //     }\n    // }\n\n    /**\n     * 根据 format 判断是否支持 SRGBload\n     * @param format \n     * @returns \n     */\n    supportSRGB(format: TextureFormat | RenderTargetFormat, mipmap: boolean): boolean {\n        switch (format) {\n            case TextureFormat.R8G8B8:\n            case TextureFormat.R8G8B8A8:\n                return this._engine.getCapable(RenderCapable.Texture_SRGB) && !mipmap;\n            case TextureFormat.DXT1:\n            case TextureFormat.DXT3:\n            case TextureFormat.DXT5:\n                // todo  验证 srgb format 和 mipmap webgl1 兼容问题\n                return this._engine.getCapable(RenderCapable.COMPRESS_TEXTURE_S3TC_SRGB) && !mipmap;\n            default:\n                return false;\n        }\n    }\n\n    supportGenerateMipmap(format: TextureFormat | RenderTargetFormat) {\n        switch (format) {\n            case RenderTargetFormat.DEPTH_16:\n            case RenderTargetFormat.DEPTHSTENCIL_24_8:\n            case RenderTargetFormat.DEPTH_32:\n            case RenderTargetFormat.STENCIL_8:\n                return false;\n            default:\n                return true;\n        }\n    }\n\n    /**\n     * 判断 纹理格式 本身是否是 SRGB格式\n     * @param format \n     * @returns \n     */\n    isSRGBFormat(format: TextureFormat | RenderTargetFormat) {\n        switch (format) {\n            case TextureFormat.ETC2SRGB:\n            case TextureFormat.ETC2SRGB_Alpha8:\n            case TextureFormat.ASTC4x4SRGB:\n            case TextureFormat.ASTC6x6SRGB:\n            case TextureFormat.ASTC8x8SRGB:\n            case TextureFormat.ASTC10x10SRGB:\n            case TextureFormat.ASTC12x12SRGB:\n                return true;\n            default:\n                return false;\n        }\n    }\n\n    createTextureInternal(dimension: TextureDimension, width: number, height: number, format: TextureFormat, generateMipmap: boolean, sRGB: boolean, premultipliedAlpha: boolean): InternalTexture {\n\n        // todo  一些format 不支持自动生成mipmap\n\n        // todo  这个判断, 若纹理本身格式不支持？\n        let useSRGBExt = this.isSRGBFormat(format) || (sRGB && this.supportSRGB(format, generateMipmap));\n        if (premultipliedAlpha) {//预乘法和SRGB同时开启，会有颜色白边问题\n            useSRGBExt = false;\n        }\n        let gammaCorrection = 1.0;\n        if (!useSRGBExt && sRGB) {\n            gammaCorrection = 2.2;\n        }\n\n        // let dimension = TextureDimension.Tex2D;\n        let target = this.getTarget(dimension);\n        let internalTex = new WebGLInternalTex(this._engine, target, width, height, 1, dimension, generateMipmap, useSRGBExt, gammaCorrection);\n\n        let glParam = this.glTextureParam(format, useSRGBExt);\n\n        internalTex.internalFormat = glParam.internalFormat;\n        internalTex.format = glParam.format;\n        internalTex.type = glParam.type;\n\n        //Resource:\n        //internalTex.gpuMemory = this.getGLtexMemory(format, width, height, dimension, generateMipmap);\n\n        return internalTex;\n    }\n\n    setTextureImageData(texture: WebGLInternalTex, source: HTMLImageElement | HTMLCanvasElement | ImageBitmap, premultiplyAlpha: boolean, invertY: boolean) {\n\n        if (texture.width != source.width || texture.height != source.height) {\n            // todo ?\n            console.warn(\"setTextureImageData: size not match\");\n        }\n\n        let target = texture.target;\n        let internalFormat = texture.internalFormat;\n        let format = texture.format;\n        let type = texture.type;\n        let width = texture.width;\n        let height = texture.height;\n\n        let gl = texture._gl;\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n\n        this._engine._bindTexture(texture.target, texture.resource);\n\n        gl.texImage2D(target, 0, internalFormat, format, type, source);\n        texture.gpuMemory = this.getGLtexMemory(texture);\n        //texture.\n        // gl.texImage2D(target, 0, internalFormat, width, height, 0, format, type, null);\n        // gl.texSubImage2D(target, 0, 0, 0, format, type, source);\n\n        if (texture.mipmap) {\n            gl.generateMipmap(texture.target);\n        }\n\n        //resource TODO\n\n        this._engine._bindTexture(texture.target, null);\n\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    }\n\n    setTextureSubImageData(texture: WebGLInternalTex, source: HTMLImageElement | HTMLCanvasElement | ImageBitmap, x: number, y: number, premultiplyAlpha: boolean, invertY: boolean) {\n\n        let target = texture.target;\n        let internalFormat = texture.internalFormat;\n        let format = texture.format;\n        let type = texture.type;\n        let width = source.width;\n        let height = source.height;\n\n        let gl = texture._gl;\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n\n        this._engine._bindTexture(texture.target, texture.resource);\n\n        gl.texSubImage2D(target, 0, x, y, format, type, source);\n        texture.gpuMemory = this.getGLtexMemory(texture);\n        //texture.\n        // gl.texImage2D(target, 0, internalFormat, width, height, 0, format, type, null);\n        // gl.texSubImage2D(target, 0, 0, 0, format, type, source);\n\n        if (texture.mipmap) {\n            gl.generateMipmap(texture.target);\n        }\n\n        //resource TODO\n\n        this._engine._bindTexture(texture.target, null);\n\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    }\n\n\n    initVideoTextureData(texture: WebGLInternalTex) {\n        let target = texture.target;\n        let internalFormat = texture.internalFormat;\n        let format = texture.format;\n        let type = texture.type;\n        let width = texture.width;\n        let height = texture.height;\n        let gl = texture._gl;\n        this._engine._bindTexture(texture.target, texture.resource);\n        gl.texImage2D(target, 0, texture.internalFormat, width, height, 0, format, type, null);\n        texture.gpuMemory = this.getGLtexMemory(texture);\n        if (texture.mipmap) {\n            gl.generateMipmap(texture.target);\n        }\n        this._engine._bindTexture(texture.target, null);\n    }\n\n    setTexturePixelsData(texture: WebGLInternalTex, source: ArrayBufferView, premultiplyAlpha: boolean, invertY: boolean) {\n        // todo check pixels size\n\n        let target = texture.target;\n        let internalFormat = texture.internalFormat;\n        let format = texture.format;\n        let type = texture.type;\n        let width = texture.width;\n        let height = texture.height;\n\n        let fourSize = width % 4 == 0 && height % 4 == 0;\n\n        let gl = texture._gl;\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\n\n        this._engine._bindTexture(texture.target, texture.resource);\n\n        // gl.texImage2D(target, 0, internalFormat, format, type, source);\n\n        gl.texImage2D(target, 0, internalFormat, width, height, 0, format, type, source);\n        // gl.texSubImage2D(target, 0, 0, 0, format, type, source);\n        texture.gpuMemory = this.getGLtexMemory(texture);\n\n        if (texture.mipmap) {\n            gl.generateMipmap(texture.target);\n        }\n        this._engine._bindTexture(texture.target, null);\n\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\n    }\n\n    setTextureSubPixelsData(texture: WebGLInternalTex, source: ArrayBufferView, mipmapLevel: number, generateMipmap: boolean, xOffset: number, yOffset: number, width: number, height: number, premultiplyAlpha: boolean, invertY: boolean): void {\n\n        generateMipmap = generateMipmap && mipmapLevel == 0;\n\n        // todo check pixels size\n\n        let target = texture.target;\n        let internalFormat = texture.internalFormat;\n        let format = texture.format;\n        let type = texture.type;\n\n        let fourSize = width % 4 == 0 && height % 4 == 0;\n\n        let gl = texture._gl;\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\n\n        this._engine._bindTexture(texture.target, texture.resource);\n        gl.texSubImage2D(target, mipmapLevel, xOffset, yOffset, width, height, format, type, source);\n\n        if (texture.mipmap && generateMipmap) {\n            gl.generateMipmap(texture.target);\n        }\n        this._engine._bindTexture(texture.target, null);\n\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\n    }\n\n    setTextureDDSData(texture: WebGLInternalTex, ddsInfo: DDSTextureInfo) {\n        //todo?\n        let premultiplyAlpha = false;\n        let invertY = false;\n\n        let target = texture.target;\n        let internalFormat = texture.internalFormat;\n        let format = texture.format;\n        let type = texture.type;\n        // todo texture size 与 ddsInfo size\n        let width = texture.width;\n        let height = texture.height;\n\n        let source = ddsInfo.source;\n        let dataOffset = ddsInfo.dataOffset;\n        let bpp = ddsInfo.bpp;\n        let blockBytes = ddsInfo.blockBytes;\n        let mipmapCount = ddsInfo.mipmapCount;\n\n        texture.maxMipmapLevel = mipmapCount - 1;\n\n        let fourSize = width % 4 == 0 && height % 4 == 0;\n\n        let gl = texture._gl;\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\n\n        this._engine._bindTexture(texture.target, texture.resource);\n\n        let mipmapWidth = width;\n        let mipmapHeight = height;\n        let memory = 0;\n        for (let index = 0; index < mipmapCount; index++) {\n\n            // todo  size 计算 方式\n            let dataLength = (((Math.max(4, mipmapWidth) / 4) * Math.max(4, mipmapHeight)) / 4) * blockBytes;\n            let sourceData = new Uint8Array(source, dataOffset, dataLength);\n\n            gl.compressedTexImage2D(target, index, internalFormat, mipmapWidth, mipmapHeight, 0, sourceData);\n            memory += sourceData.length;\n            dataOffset += bpp ? (mipmapWidth * mipmapHeight * (bpp / 8)) : dataLength;\n\n            mipmapWidth *= 0.5;\n            mipmapHeight *= 0.5;\n            mipmapWidth = Math.max(1.0, mipmapWidth);\n            mipmapHeight = Math.max(1.0, mipmapHeight);\n        }\n        texture.gpuMemory = memory;//TODO 不太准\n        this._engine._bindTexture(texture.target, null);\n\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\n    }\n\n    setTextureKTXData(texture: WebGLInternalTex, ktxInfo: KTXTextureInfo) {\n\n        //todo?\n        let premultiplyAlpha = false;\n        let invertY = false;\n\n        let source = ktxInfo.source;\n        let compressed = ktxInfo.compress;\n\n        let target = texture.target;\n        let internalFormat = texture.internalFormat;\n        let format = texture.format;\n        let type = texture.type;\n        let mipmapCount = texture.mipmapCount;\n        // todo texture size 与 ddsInfo size\n        let width = texture.width;\n        let height = texture.height;\n\n        texture.maxMipmapLevel = mipmapCount - 1;\n\n        let fourSize = width % 4 == 0 && height % 4 == 0;\n\n        let gl = texture._gl;\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\n\n        this._engine._bindTexture(texture.target, texture.resource);\n\n        let mipmapWidth = width;\n        let mipmapHeight = height;\n        let dataOffset = ktxInfo.headerOffset + ktxInfo.bytesOfKeyValueData;\n        let memory = 0;\n        for (let index = 0; index < ktxInfo.mipmapCount; index++) {\n            let imageSize = new Int32Array(source, dataOffset, 1)[0];\n\n            dataOffset += 4;\n            if (compressed) {\n                let sourceData = new Uint8Array(source, dataOffset, imageSize);\n                gl.compressedTexImage2D(target, index, internalFormat, mipmapWidth, mipmapHeight, 0, sourceData);\n                memory += sourceData.length;\n            }\n            else {\n                let pixelParams = this.getFormatPixelsParams(ktxInfo.format);\n                let typedSize = imageSize / pixelParams.typedSize;\n                let sourceData: ArrayBufferView = new pixelParams.dataTypedCons(source, dataOffset, typedSize);\n                gl.texImage2D(target, index, internalFormat, mipmapWidth, mipmapHeight, 0, format, type, sourceData);\n                memory += sourceData.byteLength;\n            }\n\n            dataOffset += imageSize;\n            dataOffset += 3 - ((imageSize + 3) % 4);\n\n            mipmapWidth = Math.max(1, mipmapWidth * 0.5);\n            mipmapHeight = Math.max(1, mipmapHeight * 0.5);\n        }\n\n        for (let index = ktxInfo.mipmapCount; index < texture.mipmapCount; index++) {\n            if (compressed) {\n                // todo\n            }\n            else {\n                gl.texImage2D(target, index, internalFormat, mipmapWidth, mipmapHeight, 0, format, type, null);\n            }\n\n            mipmapWidth = Math.max(1, mipmapWidth * 0.5);\n            mipmapHeight = Math.max(1, mipmapHeight * 0.5);\n        }\n\n        texture.gpuMemory = memory;//TODO 不太准\n        this._engine._bindTexture(texture.target, null);\n\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\n    }\n\n    setTextureHDRData(texture: WebGLInternalTex, hdrInfo: HDRTextureInfo): void {\n        let hdrPixelData = hdrInfo.readScanLine();\n        this.setTexturePixelsData(texture, hdrPixelData, false, false);\n    }\n\n    setCubeImageData(texture: WebGLInternalTex, sources: (HTMLImageElement | HTMLCanvasElement | ImageBitmap)[], premultiplyAlpha: boolean, invertY: boolean) {\n\n        let gl = texture._gl;\n\n        const cubeFace = [\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Z, // back\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Z, // front\n            gl.TEXTURE_CUBE_MAP_POSITIVE_X, // right\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_X, // left\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Y, // up\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, // down\n        ]\n\n        let internalFormat = texture.internalFormat;\n        let format = texture.format;\n        let type = texture.type;\n        let width = texture.width;\n        let height = texture.height;\n\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n\n        this._engine._bindTexture(texture.target, texture.resource);\n\n        for (let index = 0; index < cubeFace.length; index++) {\n            let target = cubeFace[index];\n            gl.texImage2D(target, 0, internalFormat, format, type, sources[index]);\n        }\n\n        if (texture.mipmap) {\n            gl.generateMipmap(texture.target);\n        }\n        this._engine._bindTexture(texture.target, null);\n        texture.gpuMemory = this.getGLtexMemory(texture);\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    }\n\n    setCubePixelsData(texture: WebGLInternalTex, source: ArrayBufferView[], premultiplyAlpha: boolean, invertY: boolean) {\n        let gl = texture._gl;\n\n        const cubeFace = [\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Z, // back\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Z, // front\n            gl.TEXTURE_CUBE_MAP_POSITIVE_X, // right\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_X, // left\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Y, // up\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, // down\n        ]\n\n        let target = texture.target;\n        let internalFormat = texture.internalFormat;\n        let format = texture.format;\n        let type = texture.type;\n        let width = texture.width;\n        let height = texture.height;\n\n        let fourSize = width % 4 == 0;\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\n\n        this._engine._bindTexture(texture.target, texture.resource);\n        if (source) {\n            for (let index = 0; index < cubeFace.length; index++) {\n                let t = cubeFace[index];\n                // gl.texImage2D(t, 0, internalFormat, format, type, sources[index]);\n                gl.texImage2D(t, 0, internalFormat, width, height, 0, format, type, source[index]);\n            }\n            if (texture.mipmap) {\n                gl.generateMipmap(texture.target);\n            }\n        }\n        else {\n            for (let index = 0; index < cubeFace.length; index++) {\n                let t = cubeFace[index];\n                // gl.texImage2D(t, 0, internalFormat, format, type, sources[index]);\n                gl.texImage2D(t, 0, internalFormat, width, height, 0, format, type, null);\n            }\n            if (texture.mipmap) {\n                gl.generateMipmap(texture.target);\n            }\n        }\n        this._engine._bindTexture(texture.target, null);\n        texture.gpuMemory = this.getGLtexMemory(texture);\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\n    }\n\n    setCubeSubPixelData(texture: WebGLInternalTex, source: ArrayBufferView[], mipmapLevel: number, generateMipmap: boolean, xOffset: number, yOffset: number, width: number, height: number, premultiplyAlpha: boolean, invertY: boolean): void {\n\n        generateMipmap = generateMipmap && mipmapLevel == 0;\n\n        let gl = texture._gl;\n\n        const cubeFace = [\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Z, // back\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Z, // front\n            gl.TEXTURE_CUBE_MAP_POSITIVE_X, // right\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_X, // left\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Y, // up\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, // down\n        ];\n\n        let target = texture.target;\n        let internalFormat = texture.internalFormat;\n        let format = texture.format;\n        let type = texture.type;\n\n        let fourSize = width % 4 == 0;\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\n\n        this._engine._bindTexture(texture.target, texture.resource);\n\n        for (let index = 0; index < cubeFace.length; index++) {\n            let target = cubeFace[index];\n            gl.texSubImage2D(target, mipmapLevel, xOffset, yOffset, width, height, format, type, source[index]);\n        }\n\n        if (texture.mipmap && generateMipmap) {\n            gl.generateMipmap(texture.target);\n        }\n        this._engine._bindTexture(texture.target, null);\n\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\n    }\n\n\n    setCubeDDSData(texture: WebGLInternalTex, ddsInfo: DDSTextureInfo) {\n        //todo?\n        let premultiplyAlpha = false;\n        let invertY = false;\n\n        // let target = texture.target;\n        let internalFormat = texture.internalFormat;\n        let format = texture.format;\n        let type = texture.type;\n        let width = texture.width;\n        let height = texture.height;\n\n        let source = ddsInfo.source;\n        let dataOffset = ddsInfo.dataOffset;\n        let bpp = ddsInfo.bpp;\n        let blockBytes = ddsInfo.blockBytes;\n        let mipmapCount = ddsInfo.mipmapCount;\n\n        texture.maxMipmapLevel = mipmapCount - 1;\n\n        let fourSize = width % 4 == 0 && height % 4 == 0;\n        fourSize = true;\n        let gl = texture._gl;\n\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\n\n        this._engine._bindTexture(texture.target, texture.resource);\n\n        const cubeFace = [\n            gl.TEXTURE_CUBE_MAP_POSITIVE_X, // right\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_X, // left\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Y, // up\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, // down\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Z, // back\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Z, // front\n        ]\n\n        let formatParams = this.getFormatPixelsParams(ddsInfo.format);\n        let channelsByte = formatParams.bytesPerPixel / formatParams.channels;\n\n        let dataTypeConstur = ddsInfo.format == TextureFormat.R32G32B32A32 ? Float32Array : Uint16Array;\n        let memory = 0;\n        if (!ddsInfo.compressed) {\n            for (let face = 0; face < 6; face++) {\n                let target = cubeFace[face];\n                let mipmapWidth = width;\n                let mipmapHeight = height;\n                for (let index = 0; index < mipmapCount; index++) {\n                    let dataLength = mipmapWidth * mipmapHeight * formatParams.channels;\n                    let sourceData = new dataTypeConstur(source, dataOffset, dataLength);\n                    gl.texImage2D(target, index, internalFormat, mipmapWidth, mipmapHeight, 0, format, type, sourceData);\n                    memory += sourceData.byteLength;\n                    dataOffset += dataLength * channelsByte;\n                    mipmapWidth *= 0.5;\n                    mipmapHeight *= 0.5;\n                    mipmapWidth = Math.max(1.0, mipmapWidth);\n                    mipmapHeight = Math.max(1.0, mipmapHeight);\n                }\n            }\n        }\n        else {\n            for (let face = 0; face < 6; face++) {\n                let target = cubeFace[face];\n                let mipmapWidth = width;\n                let mipmapHeight = height;\n                for (let index = 0; index < mipmapCount; index++) {\n                    let dataLength = Math.max(4, mipmapWidth) / 4 * Math.max(4, mipmapHeight) / 4 * blockBytes;\n\n                    let sourceData = new Uint8Array(source, dataOffset, dataLength);\n\n                    (texture.mipmap || index == 0) && gl.compressedTexImage2D(target, index, internalFormat, mipmapWidth, mipmapHeight, 0, sourceData);\n                    memory += sourceData.byteLength;\n                    dataOffset += bpp ? (mipmapWidth * mipmapHeight * (bpp / 8)) : dataLength;\n\n                    mipmapWidth *= 0.5;\n                    mipmapHeight *= 0.5;\n                    mipmapWidth = Math.max(1.0, mipmapWidth);\n                    mipmapHeight = Math.max(1.0, mipmapHeight);\n                }\n            }\n        }\n        texture.gpuMemory = memory;\n        this._engine._bindTexture(texture.target, null);\n\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\n    }\n\n    setCubeKTXData(texture: WebGLInternalTex, ktxInfo: KTXTextureInfo) {\n        //todo?\n        let premultiplyAlpha = false;\n        let invertY = false;\n\n        let source = ktxInfo.source;\n        let compressed = ktxInfo.compress;\n\n        // let target = texture.target;\n        let internalFormat = texture.internalFormat;\n        let format = texture.format;\n        let type = texture.type;\n        let mipmapCount = ktxInfo.mipmapCount;\n        // todo texture size 与 ddsInfo size\n        let width = texture.width;\n        let height = texture.height;\n\n        texture.maxMipmapLevel = mipmapCount - 1;\n\n        let fourSize = width % 4 == 0 && height % 4 == 0;\n\n        let gl = texture._gl;\n\n        // ktx 标准顺序\n        const cubeFace = [\n            gl.TEXTURE_CUBE_MAP_POSITIVE_X, // right\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_X, // left\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Y, // up\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, // down\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Z, // back\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Z, // front\n        ]\n\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\n\n        this._engine._bindTexture(texture.target, texture.resource);\n\n        let mipmapWidth = width;\n        let mipmapHeight = height;\n        let dataOffset = ktxInfo.headerOffset + ktxInfo.bytesOfKeyValueData;\n        let memory = 0;\n        for (let index = 0; index < ktxInfo.mipmapCount; index++) {\n            let imageSize = new Int32Array(source, dataOffset, 1)[0];\n\n            dataOffset += 4;\n            // todo  cube 在一起？\n\n            for (let face = 0; face < 6; face++) {\n                let target = cubeFace[face];\n\n                if (compressed) {\n                    let sourceData = new Uint8Array(source, dataOffset, imageSize);\n                    gl.compressedTexImage2D(target, index, internalFormat, mipmapWidth, mipmapHeight, 0, sourceData);\n                    memory += sourceData.byteLength;\n                }\n                else {\n                    let pixelParams = this.getFormatPixelsParams(ktxInfo.format);\n                    let typedSize = imageSize / pixelParams.typedSize;\n                    let sourceData = new pixelParams.dataTypedCons(source, dataOffset, typedSize);\n                    gl.texImage2D(target, index, internalFormat, mipmapWidth, mipmapHeight, 0, format, type, sourceData);\n                    memory += sourceData.byteLength;\n                }\n                dataOffset += imageSize;\n                dataOffset += 3 - ((imageSize + 3) % 4);\n            }\n\n\n            mipmapWidth = Math.max(1, mipmapWidth * 0.5);\n            mipmapHeight = Math.max(1, mipmapHeight * 0.5);\n        }\n\n        for (let index = ktxInfo.mipmapCount; index < texture.mipmapCount; index++) {\n\n            for (let face = 0; face < 6; face++) {\n                let target = cubeFace[face];\n                if (compressed) {\n                    // todo\n                }\n                else {\n                    gl.texImage2D(target, index, internalFormat, mipmapWidth, mipmapHeight, 0, format, type, null);\n                }\n            }\n\n            mipmapWidth = Math.max(1, mipmapWidth * 0.5);\n            mipmapHeight = Math.max(1, mipmapHeight * 0.5);\n        }\n\n        this._engine._bindTexture(texture.target, null);\n        texture.gpuMemory = memory;\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\n    }\n\n    setTextureCompareMode(texture: WebGLInternalTex, compareMode: TextureCompareMode): TextureCompareMode {\n        return TextureCompareMode.None;\n    }\n\n    bindRenderTarget(renderTarget: WebGLInternalRT, faceIndex: number = 0): void {\n        let gl = this._gl;\n        let framebuffer = renderTarget._framebuffer;\n\n        gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n\n        if (renderTarget._isCube) {\n            let texture = <WebGLInternalTex>renderTarget._textures[0];\n            gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_CUBE_MAP_POSITIVE_X + faceIndex, texture.resource, 0);\n        }\n\n    }\n\n    bindoutScreenTarget(): void {\n        let gl = this._gl;\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    }\n\n    unbindRenderTarget(renderTarget: WebGLInternalRT): void {\n        let gl = renderTarget._gl;\n\n        if (renderTarget._generateMipmap) {\n            renderTarget._textures.forEach(tex => {\n                let target = (<WebGLInternalTex>tex).target;\n                this._engine._bindTexture(target, tex.resource);\n                gl.generateMipmap(target);\n                this._engine._bindTexture(target, null);\n            });\n        }\n\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    }\n\n    createRenderTextureInternal(dimension: TextureDimension, width: number, height: number, format: RenderTargetFormat, generateMipmap: boolean, sRGB: boolean): WebGLInternalTex {\n        let useSRGBExt = false;\n\n        generateMipmap = generateMipmap && this.supportGenerateMipmap(format);\n\n        let gammaCorrection = 1.0;\n        // if (!useSRGBExt && sRGB) {\n        //     // todo \n        //     // gammaCorrection = 2.2;\n        // }\n\n        // let dimension = TextureDimension.Tex2D;\n        let target = this.getTarget(dimension);\n        let internalTex = new WebGLInternalTex(this._engine, target, width, height, 1, dimension, generateMipmap, useSRGBExt, gammaCorrection);\n\n        let glParam = this.glRenderTextureParam(format, useSRGBExt);\n\n        internalTex.internalFormat = glParam.internalFormat;\n        internalTex.format = glParam.format;\n        internalTex.type = glParam.type;\n\n        let internalFormat = internalTex.internalFormat;\n        let glFormat = internalTex.format;\n        let type = internalTex.type;\n\n        let gl = internalTex._gl;\n\n        this._engine._bindTexture(internalTex.target, internalTex.resource);\n\n        gl.texImage2D(target, 0, internalFormat, width, height, 0, glFormat, type, null);\n        //internalTex.gpuMemory = this.getGLtexMemory(internalTex);\n        this._engine._bindTexture(internalTex.target, null);\n\n        if (format == RenderTargetFormat.DEPTH_16 || format == RenderTargetFormat.DEPTH_32 || format == RenderTargetFormat.DEPTHSTENCIL_24_8) {\n            internalTex.filterMode = FilterMode.Point;\n        }\n\n        return internalTex;\n    }\n\n    createRenderTextureCubeInternal(dimension: TextureDimension, size: number, format: RenderTargetFormat, generateMipmap: boolean, sRGB: boolean): WebGLInternalTex {\n        let useSRGBExt = false;\n\n        generateMipmap = generateMipmap && this.supportGenerateMipmap(format);\n\n        let gammaCorrection = 1.0;\n        // todo 非 srgb framebuffer 只能渲染 linear, 目前不支持手动矫正\n        // if (!useSRGBExt && sRGB) {\n        //     gammaCorrection = 2.2;\n        // }\n\n        let target = this.getTarget(dimension);\n        let internalTex = new WebGLInternalTex(this._engine, target, size, size, 1, dimension, generateMipmap, useSRGBExt, gammaCorrection);\n\n        let glParam = this.glRenderTextureParam(format, useSRGBExt);\n\n        internalTex.internalFormat = glParam.internalFormat;\n        internalTex.format = glParam.format;\n        internalTex.type = glParam.type;\n\n        let internalFormat = internalTex.internalFormat;\n        let glFormat = internalTex.format;\n        let type = internalTex.type;\n\n        let gl = internalTex._gl;\n        const cubeFace = [\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Z, // back\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Z, // front\n            gl.TEXTURE_CUBE_MAP_POSITIVE_X, // right\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_X, // left\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Y, // up\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, // down\n        ]\n\n        this._engine._bindTexture(internalTex.target, internalTex.resource);\n\n        for (let index = 0; index < cubeFace.length; index++) {\n            let target = cubeFace[index];\n            gl.texImage2D(target, 0, internalFormat, size, size, 0, glFormat, type, null);\n        }\n        this._engine._bindTexture(internalTex.target, null);\n        //internalTex.gpuMemory = this.getGLtexMemory(internalTex);\n        if (format == RenderTargetFormat.DEPTH_16 || format == RenderTargetFormat.DEPTH_32 || format == RenderTargetFormat.DEPTHSTENCIL_24_8) {\n            internalTex.filterMode = FilterMode.Point;\n        }\n\n        return internalTex;\n    }\n\n    createRenderTargetInternal(width: number, height: number, colorFormat: RenderTargetFormat, depthStencilFormat: RenderTargetFormat, generateMipmap: boolean, sRGB: boolean, multiSamples: number): WebGLInternalRT {\n        multiSamples = 1;\n\n        let texture = this.createRenderTextureInternal(TextureDimension.Tex2D, width, height, colorFormat, generateMipmap, sRGB);\n\n        let renderTarget = new WebGLInternalRT(this._engine, colorFormat, depthStencilFormat, false, texture.mipmap, multiSamples);\n        renderTarget.gpuMemory = this.getGLRTTexMemory(width, height, colorFormat, depthStencilFormat, generateMipmap, multiSamples, false);\n        renderTarget.colorFormat = colorFormat;\n        renderTarget.depthStencilFormat = depthStencilFormat;\n        renderTarget._textures.push(texture);\n\n        let framebuffer = renderTarget._framebuffer;\n\n        let gl = <WebGLRenderingContext>renderTarget._gl;\n\n        gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n        // color\n        let colorAttachment = this.glRenderTargetAttachment(colorFormat);\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, colorAttachment, gl.TEXTURE_2D, texture.resource, 0);\n        // depth\n        let depthBufferParam = this.glRenderBufferParam(depthStencilFormat, false);\n        if (depthBufferParam) {\n            let depthbuffer = this.createRenderbuffer(width, height, depthBufferParam.internalFormat, renderTarget._samples);\n            renderTarget._depthbuffer = depthbuffer;\n            gl.framebufferRenderbuffer(gl.FRAMEBUFFER, depthBufferParam.attachment, gl.RENDERBUFFER, depthbuffer);\n        }\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\n        return renderTarget;\n    }\n\n    createRenderTargetCubeInternal(size: number, colorFormat: RenderTargetFormat, depthStencilFormat: RenderTargetFormat, generateMipmap: boolean, sRGB: boolean, multiSamples: number): WebGLInternalRT {\n        multiSamples = 1;\n\n        // let texture = this.createRenderTextureInternal(dimension, size, size, colorFormat, generateMipmap, sRGB);\n        let texture = this.createRenderTextureCubeInternal(TextureDimension.Cube, size, colorFormat, generateMipmap, sRGB);\n\n        let renderTarget = new WebGLInternalRT(this._engine, colorFormat, depthStencilFormat, true, texture.mipmap, multiSamples);\n        renderTarget.gpuMemory = this.getGLRTTexMemory(size, size, colorFormat, depthStencilFormat, generateMipmap, multiSamples, true);\n        renderTarget._textures.push(texture);\n\n        let framebuffer = renderTarget._framebuffer;\n\n        let gl = <WebGLRenderingContext>renderTarget._gl;\n\n        gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n\n        let depthBufferParam = this.glRenderBufferParam(depthStencilFormat, false);\n        if (depthBufferParam) {\n            let depthbuffer = this.createRenderbuffer(size, size, depthBufferParam.internalFormat, renderTarget._samples);\n            renderTarget._depthbuffer = depthbuffer;\n            gl.framebufferRenderbuffer(gl.FRAMEBUFFER, depthBufferParam.attachment, gl.RENDERBUFFER, depthbuffer);\n        }\n\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\n        return renderTarget;\n    }\n\n    createRenderbuffer(width: number, height: number, internalFormat: number, samples: number) {\n\n        // todo  多个 gl\n        let gl = this._gl;\n\n        let renderbuffer = gl.createRenderbuffer();\n        gl.bindRenderbuffer(gl.RENDERBUFFER, renderbuffer);\n\n        gl.renderbufferStorage(gl.RENDERBUFFER, internalFormat, width, height);\n\n        gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n\n        return renderbuffer;\n    }\n\n    // todo  color 0, 1, 2, 3 ?\n    setupRendertargetTextureAttachment(renderTarget: WebGLInternalRT, texture: WebGLInternalTex) {\n        let gl = renderTarget._gl;\n\n        renderTarget._depthTexture = texture;\n\n        let depthbuffer = renderTarget._depthbuffer;\n        depthbuffer && gl.deleteRenderbuffer(depthbuffer);\n        renderTarget._depthbuffer = null;\n        let attachment = this.glRenderTargetAttachment(renderTarget.depthStencilFormat);\n\n        let framebuffer = renderTarget._framebuffer;\n        gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, attachment, gl.TEXTURE_2D, texture.resource, 0);\n\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    }\n\n\n    readRenderTargetPixelData(renderTarget: WebGLInternalRT, xOffset: number, yOffset: number, width: number, height: number, out: ArrayBufferView): ArrayBufferView {\n\n        let gl = renderTarget._gl;\n\n        this.bindRenderTarget(renderTarget);\n\n        let frameState = gl.checkFramebufferStatus(gl.FRAMEBUFFER) == gl.FRAMEBUFFER_COMPLETE;\n\n        if (!frameState) {\n            this.unbindRenderTarget(renderTarget);\n            return null;\n        }\n        switch (renderTarget.colorFormat) {\n            case RenderTargetFormat.R8G8B8:\n                gl.readPixels(xOffset, yOffset, width, height, gl.RGB, gl.UNSIGNED_BYTE, out);\n                break;\n            case RenderTargetFormat.R8G8B8A8:\n                gl.readPixels(xOffset, yOffset, width, height, gl.RGBA, gl.UNSIGNED_BYTE, out);\n                break;\n            case RenderTargetFormat.R16G16B16:\n                gl.readPixels(xOffset, yOffset, width, height, gl.RGB, gl.FLOAT, out);\n                break;\n            case RenderTargetFormat.R16G16B16A16:\n                gl.readPixels(xOffset, yOffset, width, height, gl.RGBA, gl.FLOAT, out);\n                break;\n            case RenderTargetFormat.R32G32B32:\n                gl.readPixels(xOffset, yOffset, width, height, gl.RGB, gl.FLOAT, out);\n                break;\n            case RenderTargetFormat.R32G32B32A32:\n                gl.readPixels(xOffset, yOffset, width, height, gl.RGBA, gl.FLOAT, out);\n                break;\n        }\n        this.unbindRenderTarget(renderTarget);\n        return out;\n    }\n\n    updateVideoTexture(texture: WebGLInternalTex, video: HTMLVideoElement, premultiplyAlpha: boolean, invertY: boolean): void {\n\n        let gl = texture._gl;\n\n        let target = texture.target;\n        let internalFormat = texture.internalFormat;\n        let format = texture.format;\n        let type = texture.type;\n        let width = texture.width;\n        let height = texture.height;\n\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n        gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\n        this._engine._bindTexture(texture.target, texture.resource);\n        // todo 用 sub 会慢\n        //gl.texSubImage2D(target, 0, 0, 0, format, type, video);\n        gl.texImage2D(target, 0, internalFormat, format, type, video);\n\n        this._engine._bindTexture(texture.target, null);\n\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n        gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\n    }\n\n    getRenderTextureData(internalTex: WebGLInternalRT, x: number, y: number, width: number, height: number): ArrayBufferView {\n        if (internalTex.colorFormat == RenderTargetFormat.None)\n            return null;\n        let gl = internalTex._gl;\n        gl.bindFramebuffer(gl.FRAMEBUFFER, internalTex._framebuffer);\n        var canRead: boolean = (gl.checkFramebufferStatus(gl.FRAMEBUFFER) === gl.FRAMEBUFFER_COMPLETE);\n        if (!canRead) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n            return null;\n        }\n        let size = width * height;\n        let format, type;\n        var pixels;\n        switch (internalTex.colorFormat) {\n            case RenderTargetFormat.R8G8B8:\n                format = gl.RGB;\n                type = gl.UNSIGNED_BYTE;\n                pixels = new Uint8Array(size * 3);\n                break;\n            case RenderTargetFormat.R8G8B8A8:\n                format = gl.RGBA;\n                type = gl.UNSIGNED_BYTE;\n                pixels = new Uint8Array(size * 4);\n                break;\n            case RenderTargetFormat.R16G16B16:\n                format = gl.RGB;\n                type = gl.UNSIGNED_SHORT_4_4_4_4;\n                pixels = new Uint16Array(size * 3);\n                break;\n            case RenderTargetFormat.R16G16B16A16:\n                format = gl.RGBA;\n                type = gl.UNSIGNED_SHORT_4_4_4_4;\n                pixels = new Uint16Array(size * 4);\n                break;\n            case RenderTargetFormat.R32G32B32:\n                format = gl.RGB;\n                type = gl.FLOAT;\n                pixels = new Float32Array(size * 3);\n                break;\n            case RenderTargetFormat.R32G32B32A32:\n                format = gl.RGBA;\n                type = gl.FLOAT;\n                pixels = new Float32Array(size * 4);\n                break;\n            default:\n                return null;\n        }\n        gl.readPixels(x, y, width, height, format, type, pixels);\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        return pixels;\n    }\n\n}","import { GLTextureContext } from \"./GLTextureContext\";\nimport { WebGLEngine } from \"./WebGLEngine\";\nimport { WebGLInternalTex } from \"./WebGLInternalTex\";\nimport { WebGLInternalRT } from \"./WebGLInternalRT\";\nimport { TextureDimension } from \"../../RenderEnum/TextureDimension\";\nimport { HDRTextureInfo } from \"../../HDRTextureInfo\";\nimport { FilterMode } from \"../../RenderEnum/FilterMode\";\nimport { RenderTargetFormat } from \"../../RenderEnum/RenderTargetFormat\";\nimport { TextureCompareMode } from \"../../RenderEnum/TextureCompareMode\";\nimport { TextureFormat } from \"../../RenderEnum/TextureFormat\";\nimport { KTXTextureInfo } from \"../../KTXTextureInfo\";\nimport { RenderCapable } from \"../../RenderEnum/RenderCapable\";\nimport { ITexture3DContext } from \"../../RenderInterface/ITextureContext\";\nimport { InternalTexture } from \"../../RenderInterface/InternalTexture\";\n\n/**\n * 将继承修改为类似 WebGLRenderingContextBase, WebGLRenderingContextOverloads 多继承 ?\n */\nexport class GL2TextureContext extends GLTextureContext implements ITexture3DContext {\n\n    declare protected _gl: WebGL2RenderingContext;\n\n    constructor(engine: WebGLEngine) {\n        super(engine);\n    }\n\n    protected getTarget(dimension: TextureDimension): number {\n        let target: number = -1;\n        switch (dimension) {\n            case TextureDimension.Cube:\n                target = this._gl.TEXTURE_CUBE_MAP;\n                break;\n            case TextureDimension.Tex2D:\n                target = this._gl.TEXTURE_2D;\n                break;\n            case TextureDimension.Texture2DArray:\n                target = this._gl.TEXTURE_2D_ARRAY;\n                break;\n            case TextureDimension.Tex3D:\n                target = this._gl.TEXTURE_3D;\n                break;\n            default:\n                throw \"Unknow Texture Target\";\n        }\n        return target;\n    }\n\n    glTextureParam(format: TextureFormat, useSRGB: boolean) {\n        let gl = this._gl;\n        this._glParam.internalFormat = null;\n        this._glParam.format = null;\n        this._glParam.type = null;\n        switch (format) {\n            case TextureFormat.R8G8B8:\n                this._glParam.internalFormat = useSRGB ? gl.SRGB8 : gl.RGB8;\n                this._glParam.format = gl.RGB;\n                this._glParam.type = gl.UNSIGNED_BYTE;\n                break;\n            case TextureFormat.R8G8B8A8:\n                this._glParam.internalFormat = useSRGB ? gl.SRGB8_ALPHA8 : gl.RGBA8;\n                this._glParam.format = gl.RGBA;\n                this._glParam.type = gl.UNSIGNED_BYTE;\n                break;\n            case TextureFormat.R5G6B5:\n                this._glParam.internalFormat = gl.RGB565;\n                this._glParam.format = gl.RGB;\n                this._glParam.type = gl.UNSIGNED_SHORT_5_6_5;\n                break;\n            case TextureFormat.R32G32B32A32:\n                this._glParam.internalFormat = gl.RGBA32F;\n                this._glParam.format = gl.RGBA;\n                this._glParam.type = gl.FLOAT;\n                break;\n            case TextureFormat.R32G32B32:\n                this._glParam.internalFormat = gl.RGB32F;\n                this._glParam.format = gl.RGB;\n                this._glParam.type = gl.FLOAT;\n                break;\n            case TextureFormat.R16G16B16:\n                this._glParam.internalFormat = gl.RGB16F;\n                this._glParam.format = gl.RGB;\n                this._glParam.type = gl.HALF_FLOAT;\n                break;\n            case TextureFormat.R16G16B16A16:\n                this._glParam.internalFormat = gl.RGBA16F;\n                this._glParam.format = gl.RGBA;\n                this._glParam.type = gl.HALF_FLOAT;\n                break;\n            case TextureFormat.DXT1:\n                this._glParam.internalFormat = useSRGB ? this._compressdTextureS3tc_srgb.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT : this._compressedTextureS3tc.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n                // this._glParam.format = gl.RGBA;\n                // this._glParam.type = gl.UNSIGNED_BYTE;\n                break;\n            case TextureFormat.DXT3:\n                this._glParam.internalFormat = useSRGB ? this._compressdTextureS3tc_srgb.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT : this._compressedTextureS3tc.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n                // this._glParam.format = this._glParam.internalFormat;\n                // this._glParam.type = gl.UNSIGNED_BYTE;\n                break;\n            case TextureFormat.DXT5:\n                this._glParam.internalFormat = useSRGB ? this._compressdTextureS3tc_srgb.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT : this._compressedTextureS3tc.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n                // this._glParam.format = this._glParam.internalFormat;\n                // this._glParam.type = gl.UNSIGNED_BYTE;\n                break;\n            case TextureFormat.ETC1RGB:\n                this._glParam.internalFormat = this._compressedTextureEtc1.COMPRESSED_RGB_ETC1_WEBGL;\n                // this._glParam.format = this._glParam.internalFormat;\n                // this._glParam.type = gl.UNSIGNED_BYTE;\n                break;\n            case TextureFormat.ETC2RGBA:\n                this._glParam.internalFormat = this._compressedTextureETC.COMPRESSED_RGBA8_ETC2_EAC;\n                // this._glParam.format = this._glParam.internalFormat;\n                // this._glParam.type = gl.UNSIGNED_BYTE;\n                break;\n            case TextureFormat.ETC2RGB:\n                this._glParam.internalFormat = this._compressedTextureETC.COMPRESSED_RGB8_ETC2;\n                // this._glParam.format = this._glParam.internalFormat;\n                // this._glParam.type = gl.UNSIGNED_BYTE;\n                break;\n            case TextureFormat.ETC2SRGB:\n                this._glParam.internalFormat = this._compressedTextureETC.COMPRESSED_SRGB8_ETC2;\n                // this._glParam.format = this._glParam.internalFormat;\n                // this._glParam.type = gl.UNSIGNED_BYTE;\n                break;\n            case TextureFormat.ETC2SRGB_Alpha8:\n                this._glParam.internalFormat = this._compressedTextureETC.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC;\n                // this._glParam.format = this._glParam.internalFormat;\n                // this._glParam.type = gl.UNSIGNED_BYTE;\n                break;\n            case TextureFormat.ASTC4x4:\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_RGBA_ASTC_4x4_KHR;\n                // this._glParam.format = this._glParam.internalFormat;\n                // this._glParam.type = gl.UNSIGNED_BYTE;\n                break;\n            case TextureFormat.ASTC6x6:\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_RGBA_ASTC_6x6_KHR;\n                // this._glParam.format = this._glParam.internalFormat;\n                // this._glParam.type = gl.UNSIGNED_BYTE;\n                break\n            case TextureFormat.ASTC8x8:\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_RGBA_ASTC_8x8_KHR;\n                // this._glParam.format = this._glParam.internalFormat;\n                // this._glParam.type = gl.UNSIGNED_BYTE;\n                break\n            case TextureFormat.ASTC10x10:\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_RGBA_ASTC_10x10_KHR;\n                // this._glParam.format = this._glParam.internalFormat;\n                // this._glParam.type = gl.UNSIGNED_BYTE;\n                break\n            case TextureFormat.ASTC12x12:\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_RGBA_ASTC_12x12_KHR;\n                // this._glParam.format = this._glParam.internalFormat;\n                // this._glParam.type = gl.UNSIGNED_BYTE;\n                break\n            case TextureFormat.ASTC4x4SRGB:\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR;\n                // this._glParam.format = this._glParam.internalFormat;\n                // this._glParam.type = gl.UNSIGNED_BYTE;\n                break;\n            case TextureFormat.ASTC6x6SRGB:\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR;\n                // this._glParam.format = this._glParam.internalFormat;\n                // this._glParam.type = gl.UNSIGNED_BYTE;\n                break;\n            case TextureFormat.ASTC8x8SRGB:\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR;\n                // this._glParam.format = this._glParam.internalFormat;\n                // this._glParam.type = gl.UNSIGNED_BYTE;\n                break;\n            case TextureFormat.ASTC10x10SRGB:\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR;\n                // this._glParam.format = this._glParam.internalFormat;\n                // this._glParam.type = gl.UNSIGNED_BYTE;\n                break;\n            case TextureFormat.ASTC12x12SRGB:\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR;\n                // this._glParam.format = this._glParam.internalFormat;\n                // this._glParam.type = gl.UNSIGNED_BYTE;\n                break;\n            default:\n                throw \"Unknown Texture Format.\";\n        }\n\n        return this._glParam;\n    }\n\n    glRenderBufferParam(format: RenderTargetFormat, useSRGB: boolean): { internalFormat: number; attachment: number; } {\n        let gl = this._gl;\n        switch (format) {\n            case RenderTargetFormat.DEPTH_16:\n                return { internalFormat: gl.DEPTH_COMPONENT16, attachment: gl.DEPTH_ATTACHMENT };\n            case RenderTargetFormat.DEPTHSTENCIL_24_8:\n                return { internalFormat: gl.DEPTH24_STENCIL8, attachment: gl.DEPTH_STENCIL_ATTACHMENT };\n            case RenderTargetFormat.DEPTH_32:\n                return { internalFormat: gl.DEPTH_COMPONENT32F, attachment: gl.DEPTH_ATTACHMENT };\n            case RenderTargetFormat.STENCIL_8:\n                return { internalFormat: gl.STENCIL_INDEX8, attachment: gl.STENCIL_ATTACHMENT };\n            case RenderTargetFormat.R8G8B8:\n                return { internalFormat: useSRGB ? gl.SRGB8 : gl.RGB8, attachment: gl.COLOR_ATTACHMENT0 };\n            case RenderTargetFormat.R8G8B8A8:\n                return { internalFormat: useSRGB ? gl.SRGB8_ALPHA8 : gl.RGBA8, attachment: gl.COLOR_ATTACHMENT0 };\n            case RenderTargetFormat.R16G16B16:\n                return { internalFormat: gl.RGB16F, attachment: gl.COLOR_ATTACHMENT0 };\n            case RenderTargetFormat.R16G16B16A16:\n                return { internalFormat: gl.RGBA16F, attachment: gl.COLOR_ATTACHMENT0 };\n            case RenderTargetFormat.R32G32B32:\n                return { internalFormat: gl.RGB32F, attachment: gl.COLOR_ATTACHMENT0 };\n            case RenderTargetFormat.R32G32B32A32:\n                return { internalFormat: gl.RGBA32F, attachment: gl.COLOR_ATTACHMENT0 };\n            default:\n                return null;\n        }\n    }\n\n    glRenderTextureParam(format: RenderTargetFormat, useSRGB: boolean) {\n        let gl = this._gl;\n        this._glParam.internalFormat = null;\n        this._glParam.format = null;\n        this._glParam.type = null;\n\n        switch (format) {\n            case RenderTargetFormat.R8G8B8:\n                this._glParam.internalFormat = useSRGB ? gl.SRGB8 : gl.RGB8;\n                this._glParam.format = gl.RGB;\n                this._glParam.type = gl.UNSIGNED_BYTE;\n                break;\n            case RenderTargetFormat.R8G8B8A8:\n                this._glParam.internalFormat = useSRGB ? gl.SRGB8_ALPHA8 : gl.RGBA8;\n                this._glParam.format = gl.RGBA;\n                this._glParam.type = gl.UNSIGNED_BYTE;\n                break;\n            case RenderTargetFormat.R16G16B16:\n                this._glParam.internalFormat = gl.RGB16F;\n                this._glParam.format = gl.RGB;\n                this._glParam.type = gl.HALF_FLOAT;\n                break;\n            case RenderTargetFormat.R16G16B16A16:\n                this._glParam.internalFormat = gl.RGBA16F;\n                this._glParam.format = gl.RGBA;\n                this._glParam.type = gl.HALF_FLOAT;\n                break;\n            case RenderTargetFormat.R32G32B32:\n                this._glParam.internalFormat = gl.RGB32F;\n                this._glParam.format = gl.RGB;\n                this._glParam.type = gl.FLOAT;\n                break;\n            case RenderTargetFormat.R32G32B32A32:\n                this._glParam.internalFormat = gl.RGBA32F;\n                this._glParam.format = gl.RGBA;\n                this._glParam.type = gl.FLOAT;\n                break;\n            case RenderTargetFormat.DEPTH_16:\n                this._glParam.internalFormat = gl.DEPTH_COMPONENT16;\n                this._glParam.format = gl.DEPTH_COMPONENT;\n                this._glParam.type = gl.UNSIGNED_INT;\n                break;\n            case RenderTargetFormat.DEPTHSTENCIL_24_8:\n                this._glParam.internalFormat = gl.DEPTH24_STENCIL8;\n                this._glParam.format = this._glParam.internalFormat;\n                this._glParam.type = gl.UNSIGNED_INT_24_8;\n                break;\n            case RenderTargetFormat.DEPTH_32:\n                this._glParam.internalFormat = gl.DEPTH_COMPONENT32F;\n                this._glParam.format = this._glParam.internalFormat;\n                this._glParam.type = gl.UNSIGNED_INT;\n                break;\n            case RenderTargetFormat.STENCIL_8:\n                break;\n            default:\n                throw \"depth texture format wrong.\"\n        }\n\n        return this._glParam;\n    }\n\n    getGLtexMemory(tex: WebGLInternalTex, depth: number = 1): number {\n        let gl = this._gl;\n        let channels = 0;\n        let singlebyte = 0;\n        let bytelength = 0;\n        switch (tex.internalFormat) {\n            case gl.SRGB8:\n            case gl.RGB8:\n            case gl.RGB565:\n            case gl.RGB32F:\n            case gl.RGB16F:\n                channels = 3;\n                break;\n            case gl.SRGB8_ALPHA8:\n            case gl.RGBA8:\n            case gl.RGBA32F:\n            case gl.RGBA16F:\n                channels = 4;\n                break;\n            default:\n                channels = 0;\n                break;\n        }\n        switch (tex.type) {\n            case gl.UNSIGNED_BYTE:\n                singlebyte = 1;\n                break;\n            case gl.UNSIGNED_SHORT_5_6_5:\n                singlebyte = 2 / 3;\n                break;\n            case gl.FLOAT:\n                singlebyte = 4;\n                break;\n            case gl.HALF_FLOAT:\n                singlebyte = 2;\n                break;\n            default:\n                singlebyte = 0;\n                break;\n        }\n        bytelength = channels * singlebyte * tex.width * tex.height;\n        if (tex.mipmap) {\n            bytelength *= 1.333;\n        }\n        if (tex.target == gl.TEXTURE_CUBE_MAP)\n            bytelength *= 6;\n        else if (tex.target == gl.TEXTURE_2D)\n            bytelength *= 1;\n        else if (tex.target == gl.TEXTURE_2D_ARRAY)\n            bytelength *= depth;\n        return bytelength;\n    }\n\n    // todo webgl2 srgb 判断\n    supportSRGB(format: TextureFormat | RenderTargetFormat, mipmap: boolean): boolean {\n        switch (format) {\n            case TextureFormat.R8G8B8:\n                return this._engine.getCapable(RenderCapable.Texture_SRGB) && !mipmap;\n            case TextureFormat.R8G8B8A8:\n                return this._engine.getCapable(RenderCapable.Texture_SRGB);\n            case TextureFormat.DXT1:\n            case TextureFormat.DXT3:\n            case TextureFormat.DXT5:\n                // todo  验证 srgb format 和 mipmap webgl1 兼容问题\n                return this._engine.getCapable(RenderCapable.COMPRESS_TEXTURE_S3TC_SRGB) && !mipmap;\n            default:\n                return false;\n        }\n    }\n\n    setTextureImageData(texture: WebGLInternalTex, source: HTMLImageElement | HTMLCanvasElement | ImageBitmap, premultiplyAlpha: boolean, invertY: boolean) {\n        if (texture.width != source.width || texture.height != source.height) {\n            // todo ?\n            console.warn(\"setTextureImageData: size not match\");\n        }\n\n        let target = texture.target;\n        let internalFormat = texture.internalFormat;\n        let format = texture.format;\n        let type = texture.type;\n        let width = texture.width;\n        let height = texture.height;\n        let mipmapCount = texture.mipmapCount;\n\n        let gl = this._gl;\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n\n        this._engine._bindTexture(texture.target, texture.resource);\n\n        gl.texStorage2D(target, mipmapCount, internalFormat, width, height);\n        gl.texSubImage2D(target, 0, 0, 0, width, height, format, type, source);\n        texture.gpuMemory = this.getGLtexMemory(texture);\n        if (texture.mipmap) {\n            gl.generateMipmap(texture.target);\n        }\n\n        this._engine._bindTexture(texture.target, null);\n\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    }\n\n    setTextureSubImageData(texture: WebGLInternalTex, source: HTMLImageElement | HTMLCanvasElement | ImageBitmap, x: number, y: number, premultiplyAlpha: boolean, invertY: boolean) {\n        let target = texture.target;\n        let internalFormat = texture.internalFormat;\n        let format = texture.format;\n        let type = texture.type;\n        let width = texture.width;\n        let height = texture.height;\n        let mipmapCount = texture.mipmapCount;\n\n        let gl = this._gl;\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n\n        this._engine._bindTexture(texture.target, texture.resource);\n\n        //gl.texStorage2D(target, mipmapCount, internalFormat, source.width, source.height);\n        gl.texSubImage2D(target, 0, x, y, source.width, source.height, format, type, source);\n        texture.gpuMemory = this.getGLtexMemory(texture);\n        if (texture.mipmap) {\n            gl.generateMipmap(texture.target);\n        }\n\n        this._engine._bindTexture(texture.target, null);\n\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    }\n\n    setTexturePixelsData(texture: WebGLInternalTex, source: ArrayBufferView, premultiplyAlpha: boolean, invertY: boolean) {\n\n        let target = texture.target;\n        let internalFormat = texture.internalFormat;\n        let format = texture.format;\n        let type = texture.type;\n        let width = texture.width;\n        let height = texture.height;\n        let mipmapCount = texture.mipmapCount;\n\n        let fourSize = width % 4 == 0 && height % 4 == 0;\n        let gl = this._gl;\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\n\n        this._engine._bindTexture(texture.target, texture.resource);\n        gl.texStorage2D(target, mipmapCount, internalFormat, width, height);\n        texture.gpuMemory = this.getGLtexMemory(texture);\n        if (source) {\n            gl.texSubImage2D(target, 0, 0, 0, width, height, format, type, source);\n            if (texture.mipmap) {\n                gl.generateMipmap(texture.target);\n            }\n        }\n        this._engine._bindTexture(texture.target, null);\n\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\n    }\n\n    createTexture3DInternal(dimension: TextureDimension, width: number, height: number, depth: number, format: TextureFormat, generateMipmap: boolean, sRGB: boolean, premultipliedAlpha: boolean): InternalTexture {\n        // todo  一些format 不支持自动生成mipmap\n\n        // todo  这个判断, 若纹理本身格式不支持？\n        let useSRGBExt = this.isSRGBFormat(format) || (sRGB && this.supportSRGB(format, generateMipmap));\n        if (premultipliedAlpha) {//预乘法和SRGB同时开启，会有颜色白边问题\n            useSRGBExt = false;\n        }\n        let gammaCorrection = 1.0;\n        if (!useSRGBExt && sRGB) {\n            gammaCorrection = 2.2;\n        }\n\n        // let dimension = TextureDimension.Tex2D;\n        let target = this.getTarget(dimension);\n        let internalTex = new WebGLInternalTex(this._engine, target, width, height, depth, dimension, generateMipmap, useSRGBExt, gammaCorrection);\n\n        let glParam = this.glTextureParam(format, useSRGBExt);\n\n        internalTex.internalFormat = glParam.internalFormat;\n        internalTex.format = glParam.format;\n        internalTex.type = glParam.type;\n\n        return internalTex;\n    }\n\n    setTexture3DImageData(texture: WebGLInternalTex, sources: HTMLImageElement[] | HTMLCanvasElement[] | ImageBitmap[], depth: number, premultiplyAlpha: boolean, invertY: boolean) {\n        let target = texture.target;\n        let internalFormat = texture.internalFormat;\n        let format = texture.format;\n        let type = texture.type;\n        let width = texture.width;\n        let height = texture.height;\n        let mipmapCount = texture.mipmapCount;\n\n        let gl = this._gl;\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n\n        this._engine._bindTexture(texture.target, texture.resource);\n\n        gl.texStorage3D(target, mipmapCount, internalFormat, width, height, depth);\n        texture.gpuMemory = this.getGLtexMemory(texture, depth);\n        for (let index = 0; index < depth; index++) {\n            gl.texSubImage3D(target, 0, 0, 0, index, width, height, 1, format, type, sources[index]);\n        }\n        texture.gpuMemory = this.getGLtexMemory(texture);\n        if (texture.mipmap) {\n            gl.generateMipmap(texture.target);\n        }\n\n        this._engine._bindTexture(texture.target, null);\n\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    }\n\n    setTexture3DPixelsData(texture: WebGLInternalTex, source: ArrayBufferView, depth: number, premultiplyAlpha: boolean, invertY: boolean) {\n        let target = texture.target;\n        let internalFormat = texture.internalFormat;\n        let format = texture.format;\n        let type = texture.type;\n        let width = texture.width;\n        let height = texture.height;\n        let mipmapCount = texture.mipmapCount;\n\n        let fourSize = width % 4 == 0 && height % 4 == 0;\n        let gl = this._gl;\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\n\n        this._engine._bindTexture(texture.target, texture.resource);\n        gl.texStorage3D(target, mipmapCount, internalFormat, width, height, depth);\n        texture.gpuMemory = this.getGLtexMemory(texture, depth);\n        if (source) {\n            gl.texSubImage3D(target, 0, 0, 0, 0, width, height, depth, format, type, source);\n            if (texture.mipmap) {\n                gl.generateMipmap(texture.target);\n            }\n        }\n        this._engine._bindTexture(texture.target, null);\n\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\n    }\n\n    setTexture3DSubPixelsData(texture: WebGLInternalTex, source: ArrayBufferView, mipmapLevel: number, generateMipmap: boolean, xOffset: number, yOffset: number, zOffset: number, width: number, height: number, depth: number, premultiplyAlpha: boolean, invertY: boolean) {\n        generateMipmap = generateMipmap && mipmapLevel == 0;\n\n        let target = texture.target;\n        let internalFormat = texture.internalFormat;\n        let format = texture.format;\n        let type = texture.type;\n\n        let fourSize = width % 4 == 0 && height % 4 == 0;\n\n        let gl = this._gl;\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\n\n        this._engine._bindTexture(texture.target, texture.resource);\n\n        gl.texSubImage3D(target, mipmapLevel, xOffset, yOffset, zOffset, width, height, depth, format, type, source);\n\n        if (texture.mipmap && generateMipmap) {\n            gl.generateMipmap(texture.target);\n        }\n        this._engine._bindTexture(texture.target, null);\n\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\n    }\n\n    setTextureHDRData(texture: WebGLInternalTex, hdrInfo: HDRTextureInfo): void {\n        let sourceData = hdrInfo.readScanLine();\n\n        this.setTexturePixelsData(texture, sourceData, false, false);\n    }\n\n    setTextureKTXData(texture: WebGLInternalTex, ktxInfo: KTXTextureInfo) {\n\n        //todo?\n        let premultiplyAlpha = false;\n        let invertY = false;\n\n        let target = texture.target;\n        let internalFormat = texture.internalFormat;\n        let format = texture.format;\n        let type = texture.type;\n        let mipmapCount = texture.mipmapCount;\n        // todo texture size \n        let width = texture.width;\n        let height = texture.height;\n\n        texture.maxMipmapLevel = mipmapCount - 1;\n\n        let source = ktxInfo.source;\n        let compressed = ktxInfo.compress;\n        let fourSize = width % 4 == 0 && height % 4 == 0;\n\n        let gl = this._gl;\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\n\n        this._engine._bindTexture(texture.target, texture.resource);\n\n        if (!compressed) {\n            gl.texStorage2D(target, ktxInfo.mipmapCount, internalFormat, width, height);\n        }\n\n        let mipmapWidth = width;\n        let mipmapHeight = height;\n        let dataOffset = ktxInfo.headerOffset + ktxInfo.bytesOfKeyValueData;\n        let memory = 0;\n        for (let index = 0; index < ktxInfo.mipmapCount; index++) {\n\n            let imageSize = new Int32Array(source, dataOffset, 1)[0];\n\n            dataOffset += 4;\n\n            if (compressed) {\n                let sourceData = new Uint8Array(source, dataOffset, imageSize);\n                gl.compressedTexImage2D(target, index, internalFormat, mipmapWidth, mipmapHeight, 0, sourceData);\n                memory += sourceData.length;\n            }\n            else {\n                let pixelParams = this.getFormatPixelsParams(ktxInfo.format);\n                let typedSize = imageSize / pixelParams.typedSize;\n                let sourceData = new pixelParams.dataTypedCons(source, dataOffset, typedSize);\n                gl.texSubImage2D(target, index, 0, 0, mipmapWidth, mipmapHeight, format, type, sourceData);\n                memory += sourceData.length;\n            }\n\n            dataOffset += imageSize;\n            dataOffset += 3 - ((imageSize + 3) % 4);\n\n            mipmapWidth = Math.max(1, mipmapWidth * 0.5);\n            mipmapHeight = Math.max(1, mipmapHeight * 0.5);\n\n        }\n        this._engine._bindTexture(texture.target, null);\n        texture.gpuMemory = memory;\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\n    }\n\n    setCubeImageData(texture: WebGLInternalTex, sources: (HTMLImageElement | HTMLCanvasElement | ImageBitmap)[], premultiplyAlpha: boolean, invertY: boolean): void {\n        let gl = this._gl;\n\n        const cubeFace = [\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Z, // back\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Z, // front\n            gl.TEXTURE_CUBE_MAP_POSITIVE_X, // right\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_X, // left\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Y, // up\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, // down\n        ]\n\n        let target = texture.target;\n        let internalFormat = texture.internalFormat;\n        let format = texture.format;\n        let type = texture.type;\n        let width = texture.width;\n        let height = texture.height;\n        let mipmapCount = texture.mipmapCount;\n\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n\n        this._engine._bindTexture(texture.target, texture.resource);\n\n        gl.texStorage2D(target, mipmapCount, internalFormat, width, height);\n        texture.gpuMemory = this.getGLtexMemory(texture);\n        for (let index = 0; index < cubeFace.length; index++) {\n            let t = cubeFace[index];\n            // gl.texSubImage2D(t, 0, 0, 0, format, type, sources[index]);\n            gl.texSubImage2D(t, 0, 0, 0, format, type, sources[index]);\n        }\n\n        if (texture.mipmap) {\n            gl.generateMipmap(texture.target);\n        }\n\n        this._engine._bindTexture(texture.target, null);\n\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    }\n\n    setCubePixelsData(texture: WebGLInternalTex, source: ArrayBufferView[], premultiplyAlpha: boolean, invertY: boolean): void {\n        let gl = this._gl;\n\n        const cubeFace = [\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Z, // back\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Z, // front\n            gl.TEXTURE_CUBE_MAP_POSITIVE_X, // right\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_X, // left\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Y, // up\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, // down\n        ];\n\n        let target = texture.target;\n        let internalFormat = texture.internalFormat;\n        let format = texture.format;\n        let type = texture.type;\n        let width = texture.width;\n        let height = texture.height;\n        let mipmapCount = texture.mipmapCount;\n\n        let fourSize = width % 4 == 0;\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\n\n        this._engine._bindTexture(texture.target, texture.resource);\n        gl.texStorage2D(target, mipmapCount, internalFormat, width, height);\n        if (source) {\n            for (let index = 0; index < cubeFace.length; index++) {\n                let t = cubeFace[index];\n                gl.texSubImage2D(t, 0, 0, 0, width, height, format, type, source[index]);\n            }\n            if (texture.mipmap) {\n                gl.generateMipmap(texture.target);\n            }\n        }\n\n\n        this._engine._bindTexture(texture.target, null);\n        texture.gpuMemory = this.getGLtexMemory(texture);\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\n    }\n\n    setCubeKTXData(texture: WebGLInternalTex, ktxInfo: KTXTextureInfo): void {\n        //todo?\n        let premultiplyAlpha = false;\n        let invertY = false;\n\n        let gl = this._gl;\n\n        // ktx 标准顺序\n        const cubeFace = [\n            gl.TEXTURE_CUBE_MAP_POSITIVE_X, // right\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_X, // left\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Y, // up\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, // down\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Z, // back\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Z, // front\n        ]\n\n\n\n        let target = texture.target;\n        let internalFormat = texture.internalFormat;\n        let format = texture.format;\n        let type = texture.type;\n        let mipmapCount = texture.mipmapCount;\n        // todo texture size 与 ddsInfo size\n        let width = texture.width;\n        let height = texture.height;\n\n        texture.maxMipmapLevel = ktxInfo.mipmapCount - 1;\n\n        let source = ktxInfo.source;\n        let compressed = ktxInfo.compress;\n\n        let mipmapWidth = width;\n        let mipmapHeight = height;\n        let dataOffset = ktxInfo.headerOffset + ktxInfo.bytesOfKeyValueData;\n\n        let fourSize = width % 4 == 0 && height % 4 == 0;\n\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\n\n        this._engine._bindTexture(texture.target, texture.resource);\n\n        if (!compressed) {\n            gl.texStorage2D(target, ktxInfo.mipmapCount, internalFormat, width, height);\n        }\n        let memory = 0;\n        for (let index = 0; index < ktxInfo.mipmapCount; index++) {\n\n            let imageSize = new Int32Array(source, dataOffset, 1)[0];\n\n            dataOffset += 4;\n\n            for (let face = 0; face < 6; face++) {\n                let t = cubeFace[face];\n\n                if (compressed) {\n                    let sourceData = new Uint8Array(source, dataOffset, imageSize);\n                    gl.compressedTexImage2D(t, index, internalFormat, mipmapWidth, mipmapHeight, 0, sourceData);\n                    memory += sourceData.byteLength;\n                }\n                else {\n                    let pixelParams = this.getFormatPixelsParams(ktxInfo.format);\n                    let typedSize = imageSize / pixelParams.typedSize;\n                    let sourceData = new pixelParams.dataTypedCons(source, dataOffset, typedSize);\n                    gl.texSubImage2D(t, index, 0, 0, mipmapWidth, mipmapHeight, format, type, sourceData);\n                    memory += sourceData.byteLength;\n                }\n                dataOffset += imageSize;\n                dataOffset += 3 - ((imageSize + 3) % 4);\n            }\n\n            mipmapWidth = Math.max(1, mipmapWidth * 0.5);\n            mipmapHeight = Math.max(1, mipmapHeight * 0.5);\n        }\n        texture.gpuMemory = memory;\n        this._engine._bindTexture(texture.target, null);\n\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\n\n    }\n\n\n    //TODO miner\n    getCubeKTXRGBMData(texture: WebGLInternalTex, ktxInfo: KTXTextureInfo) {\n        let rightFaceData = [];\n        let leftFaceData = [];\n        let upFaceData = [];\n        let downFaceData = [];\n        let backFaceData = [];\n        let frontFaceData = [];\n        //todo?\n        let premultiplyAlpha = false;\n        let invertY = false;\n\n        let gl = this._gl;\n\n        // ktx 标准顺序\n        const cubeFace = [\n            gl.TEXTURE_CUBE_MAP_POSITIVE_X, // right\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_X, // left\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Y, // up\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, // down\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Z, // back\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Z, // front\n        ]\n\n\n\n        let target = texture.target;\n        let internalFormat = texture.internalFormat;\n        let format = texture.format;\n        let type = texture.type;\n        let mipmapCount = texture.mipmapCount;\n        // todo texture size 与 ddsInfo size\n        let width = texture.width;\n        let height = texture.height;\n\n        texture.maxMipmapLevel = mipmapCount - 1;\n\n        let source = ktxInfo.source;\n        let compressed = ktxInfo.compress;\n\n        let mipmapWidth = width;\n        let mipmapHeight = height;\n        let dataOffset = ktxInfo.headerOffset + ktxInfo.bytesOfKeyValueData;\n\n        let fourSize = width % 4 == 0 && height % 4 == 0;\n\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\n\n        this._engine._bindTexture(texture.target, texture.resource);\n\n        if (!compressed) {\n            gl.texStorage2D(target, ktxInfo.mipmapCount, internalFormat, width, height);\n        }\n        let memory = 0;\n        for (let index = 0; index < ktxInfo.mipmapCount; index++) {\n\n            let imageSize = new Int32Array(source, dataOffset, 1)[0];\n\n            dataOffset += 4;\n\n            for (let face = 0; face < 6; face++) {\n                let t = cubeFace[face];\n                let pixelParams = this.getFormatPixelsParams(ktxInfo.format);\n                let typedSize = imageSize / pixelParams.typedSize;\n                let sourceData = new pixelParams.dataTypedCons(source, dataOffset, typedSize);\n                gl.texSubImage2D(t, index, 0, 0, mipmapWidth, mipmapHeight, format, type, sourceData);\n                memory += sourceData.byteLength;\n            }\n            dataOffset += imageSize;\n            dataOffset += 3 - ((imageSize + 3) % 4);\n        }\n\n        mipmapWidth = Math.max(1, mipmapWidth * 0.5);\n        mipmapHeight = Math.max(1, mipmapHeight * 0.5);\n\n        texture.gpuMemory = memory;\n        this._engine._bindTexture(texture.target, null);\n\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\n    }\n\n    setTextureCompareMode(texture: WebGLInternalTex, compareMode: TextureCompareMode): TextureCompareMode {\n        let gl = this._gl;\n        switch (compareMode) {\n            case TextureCompareMode.LEQUAL:\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_FUNC, gl.LEQUAL);\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_MODE, gl.COMPARE_REF_TO_TEXTURE);\n                break;\n            case TextureCompareMode.GEQUAL:\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_FUNC, gl.GEQUAL);\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_MODE, gl.COMPARE_REF_TO_TEXTURE);\n                break;\n            case TextureCompareMode.LESS:\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_FUNC, gl.LESS);\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_MODE, gl.COMPARE_REF_TO_TEXTURE);\n                break;\n            case TextureCompareMode.GREATER:\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_FUNC, gl.GREATER);\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_MODE, gl.COMPARE_REF_TO_TEXTURE);\n                break;\n            case TextureCompareMode.EQUAL:\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_FUNC, gl.EQUAL);\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_MODE, gl.COMPARE_REF_TO_TEXTURE);\n                break;\n            case TextureCompareMode.NOTEQUAL:\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_FUNC, gl.NOTEQUAL);\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_MODE, gl.COMPARE_REF_TO_TEXTURE);\n                break;\n            case TextureCompareMode.ALWAYS:\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_FUNC, gl.ALWAYS);\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_MODE, gl.COMPARE_REF_TO_TEXTURE);\n                break;\n            case TextureCompareMode.NEVER:\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_FUNC, gl.NEVER);\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_MODE, gl.COMPARE_REF_TO_TEXTURE);\n                break;\n            case TextureCompareMode.None:\n            default:\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_FUNC, gl.LEQUAL);\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_MODE, gl.NONE);\n                break;\n        }\n        return compareMode;\n\n    }\n\n    createRenderbuffer(width: number, height: number, internalFormat: number, samples: number): WebGLRenderbuffer {\n        // todo  多个 gl\n        let gl = this._gl;\n\n        let renderbuffer = gl.createRenderbuffer();\n        gl.bindRenderbuffer(gl.RENDERBUFFER, renderbuffer);\n\n        if (samples > 1) {\n            gl.renderbufferStorageMultisample(gl.RENDERBUFFER, samples, internalFormat, width, height);\n        }\n        else {\n            gl.renderbufferStorage(gl.RENDERBUFFER, internalFormat, width, height);\n        }\n\n        gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n\n        return renderbuffer;\n    }\n\n    createRenderTextureInternal(dimension: TextureDimension, width: number, height: number, format: RenderTargetFormat, generateMipmap: boolean, sRGB: boolean): WebGLInternalTex {\n\n        generateMipmap = generateMipmap && this.supportGenerateMipmap(format);\n\n        let useSRGBExt = this.isSRGBFormat(format) || (sRGB && this.supportSRGB(format, generateMipmap));\n\n        let gammaCorrection = 1.0;\n        // todo 非 srgb framebuffer 只能渲染 linear, 目前不支持手动矫正\n        // if (!useSRGBExt && sRGB) {\n        //     gammaCorrection = 2.2;\n        // }\n\n        let target = this.getTarget(dimension);\n        let internalTex = new WebGLInternalTex(this._engine, target, width, height, 1, dimension, generateMipmap, useSRGBExt, gammaCorrection);\n\n        let glParam = this.glRenderTextureParam(format, useSRGBExt);\n\n        internalTex.internalFormat = glParam.internalFormat;\n        internalTex.format = glParam.format;\n        internalTex.type = glParam.type;\n\n        let internalFormat = internalTex.internalFormat;\n        let glFormat = internalTex.format;\n        let type = internalTex.type;\n\n        let gl = this._gl;\n\n        this._engine._bindTexture(internalTex.target, internalTex.resource);\n\n        gl.texStorage2D(target, internalTex.mipmapCount, internalFormat, width, height);\n\n        this._engine._bindTexture(internalTex.target, null);\n\n        if (format == RenderTargetFormat.DEPTH_16 || format == RenderTargetFormat.DEPTH_32 || format == RenderTargetFormat.DEPTHSTENCIL_24_8) {\n            internalTex.filterMode = FilterMode.Point;\n        }\n\n        return internalTex;\n    }\n\n    createRenderTargetInternal(width: number, height: number, colorFormat: RenderTargetFormat, depthStencilFormat: RenderTargetFormat, generateMipmap: boolean, sRGB: boolean, multiSamples: number): WebGLInternalRT {\n        let texture = this.createRenderTextureInternal(TextureDimension.Tex2D, width, height, colorFormat, generateMipmap, sRGB);\n\n        let renderTarget = new WebGLInternalRT(this._engine, colorFormat, depthStencilFormat, false, texture.mipmap, multiSamples);\n        renderTarget.gpuMemory = this.getGLRTTexMemory(width, height, colorFormat, depthStencilFormat, generateMipmap, multiSamples, false);\n        renderTarget._textures.push(texture);\n\n        let gl = <WebGLRenderingContext>renderTarget._gl;\n\n        if (renderTarget._samples > 1) {\n            let msaaFramebuffer = renderTarget._msaaFramebuffer;\n            let renderbufferParam = this.glRenderBufferParam(colorFormat, sRGB);\n            let msaaRenderbuffer = renderTarget._msaaRenderbuffer = this.createRenderbuffer(width, height, renderbufferParam.internalFormat, renderTarget._samples);\n            gl.bindFramebuffer(gl.FRAMEBUFFER, msaaFramebuffer);\n            gl.framebufferRenderbuffer(gl.FRAMEBUFFER, renderbufferParam.attachment, gl.RENDERBUFFER, msaaRenderbuffer);\n            // depth\n            let depthBufferParam = this.glRenderBufferParam(depthStencilFormat, false);\n            if (depthBufferParam) {\n                let depthbuffer = this.createRenderbuffer(width, height, depthBufferParam.internalFormat, renderTarget._samples);\n                renderTarget._depthbuffer = depthbuffer;\n                gl.framebufferRenderbuffer(gl.FRAMEBUFFER, depthBufferParam.attachment, gl.RENDERBUFFER, depthbuffer);\n            }\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\n            let framebuffer = renderTarget._framebuffer;\n            gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n            // color\n            let colorAttachment = this.glRenderTargetAttachment(colorFormat);\n            gl.framebufferTexture2D(gl.FRAMEBUFFER, colorAttachment, gl.TEXTURE_2D, texture.resource, 0);\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        }\n        else {\n            let framebuffer = renderTarget._framebuffer;\n\n            gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n            // color\n            let colorAttachment = this.glRenderTargetAttachment(colorFormat);\n            gl.framebufferTexture2D(gl.FRAMEBUFFER, colorAttachment, gl.TEXTURE_2D, texture.resource, 0);\n\n            // depth\n            let depthBufferParam = this.glRenderBufferParam(depthStencilFormat, false);\n            if (depthBufferParam) {\n                let depthbuffer = this.createRenderbuffer(width, height, depthBufferParam.internalFormat, renderTarget._samples);\n                renderTarget._depthbuffer = depthbuffer;\n                gl.framebufferRenderbuffer(gl.FRAMEBUFFER, depthBufferParam.attachment, gl.RENDERBUFFER, depthbuffer);\n            }\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        }\n\n        return renderTarget;\n\n    }\n\n    createRenderTargetCubeInternal(size: number, colorFormat: RenderTargetFormat, depthStencilFormat: RenderTargetFormat, generateMipmap: boolean, sRGB: boolean, multiSamples: number): WebGLInternalRT {\n        let texture = this.createRenderTextureCubeInternal(TextureDimension.Cube, size, colorFormat, generateMipmap, sRGB);\n\n        let renderTarget = new WebGLInternalRT(this._engine, colorFormat, depthStencilFormat, true, texture.mipmap, multiSamples);\n        renderTarget.gpuMemory = this.getGLRTTexMemory(size, size, colorFormat, depthStencilFormat, generateMipmap, multiSamples, true);\n        renderTarget.colorFormat = colorFormat;\n        renderTarget.depthStencilFormat = depthStencilFormat;\n        renderTarget._textures.push(texture);\n        renderTarget.isSRGB = sRGB;\n\n        let gl = <WebGLRenderingContext>renderTarget._gl;\n\n        if (renderTarget._samples > 1) {\n            let msaaFramebuffer = renderTarget._msaaFramebuffer;\n            let renderbufferParam = this.glRenderBufferParam(colorFormat, false);\n            let msaaRenderbuffer = renderTarget._msaaRenderbuffer = this.createRenderbuffer(size, size, renderbufferParam.internalFormat, renderTarget._samples);\n            gl.bindFramebuffer(gl.FRAMEBUFFER, msaaFramebuffer);\n            gl.framebufferRenderbuffer(gl.FRAMEBUFFER, renderbufferParam.attachment, gl.RENDERBUFFER, msaaRenderbuffer);\n            // depth\n            let depthBufferParam = this.glRenderBufferParam(depthStencilFormat, false);\n            if (depthBufferParam) {\n                let depthbuffer = this.createRenderbuffer(size, size, depthBufferParam.internalFormat, renderTarget._samples);\n                renderTarget._depthbuffer = depthbuffer;\n                gl.framebufferRenderbuffer(gl.FRAMEBUFFER, depthBufferParam.attachment, gl.RENDERBUFFER, depthbuffer);\n            }\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        }\n        else {\n            let framebuffer = renderTarget._framebuffer;\n\n            gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n\n            // depth\n            let depthBufferParam = this.glRenderBufferParam(depthStencilFormat, false);\n            if (depthBufferParam) {\n                let depthbuffer = this.createRenderbuffer(size, size, depthBufferParam.internalFormat, renderTarget._samples);\n                renderTarget._depthbuffer = depthbuffer;\n                gl.framebufferRenderbuffer(gl.FRAMEBUFFER, depthBufferParam.attachment, gl.RENDERBUFFER, depthbuffer);\n            }\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        }\n\n\n        return renderTarget;\n    }\n\n    createRenderTextureCubeInternal(dimension: TextureDimension, size: number, format: RenderTargetFormat, generateMipmap: boolean, sRGB: boolean): WebGLInternalTex {\n        generateMipmap = generateMipmap && this.supportGenerateMipmap(format);\n\n        let useSRGBExt = this.isSRGBFormat(format) || (sRGB && this.supportSRGB(format, generateMipmap));\n\n        let gammaCorrection = 1.0;\n        // todo 非 srgb framebuffer 只能渲染 linear, 目前不支持手动矫正\n        // if (!useSRGBExt && sRGB) {\n        //     gammaCorrection = 2.2;\n        // }\n\n        let target = this.getTarget(dimension);\n        let internalTex = new WebGLInternalTex(this._engine, target, size, size, 1, dimension, generateMipmap, useSRGBExt, gammaCorrection);\n\n        let glParam = this.glRenderTextureParam(format, useSRGBExt);\n\n        internalTex.internalFormat = glParam.internalFormat;\n        internalTex.format = glParam.format;\n        internalTex.type = glParam.type;\n\n\n        let internalFormat = internalTex.internalFormat;\n        let glFormat = internalTex.format;\n        let type = internalTex.type;\n\n        let gl = this._gl;\n\n        this._engine._bindTexture(internalTex.target, internalTex.resource);\n\n        gl.texStorage2D(target, internalTex.mipmapCount, internalFormat, size, size);\n\n        this._engine._bindTexture(internalTex.target, null);\n\n        return internalTex;\n\n    }\n\n    bindRenderTarget(renderTarget: WebGLInternalRT, faceIndex: number = 0): void {\n        let gl = this._gl;\n\n        if (renderTarget._isCube) {\n            let framebuffer = renderTarget._framebuffer;\n            gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n            let texture = <WebGLInternalTex>renderTarget._textures[0];\n            gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_CUBE_MAP_POSITIVE_X + faceIndex, texture.resource, 0);\n        }\n\n        if (renderTarget._samples > 1) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, renderTarget._msaaFramebuffer);\n        }\n        else {\n            let framebuffer = renderTarget._framebuffer;\n\n            gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n        }\n    }\n\n    unbindRenderTarget(renderTarget: WebGLInternalRT): void {\n        let gl = this._gl;\n        if (renderTarget._samples > 1) {\n\n            gl.bindFramebuffer(gl.READ_FRAMEBUFFER, renderTarget._msaaFramebuffer);\n            gl.bindFramebuffer(gl.DRAW_FRAMEBUFFER, renderTarget._framebuffer);\n\n            let texture = renderTarget._textures[0];\n\n            // todo 不用clear ?\n            // gl.clearBufferfv(gl.COLOR, 0, [0, 0, 0, 0]);\n            // gl.clearBufferfi(gl.DEPTH_STENCIL, 0, 1.0, 0);\n\n            // todo  blit mask\n            let biltMask = gl.COLOR_BUFFER_BIT;\n            if (renderTarget._depthTexture) {\n                biltMask |= gl.DEPTH_BUFFER_BIT;\n            }\n\n            gl.blitFramebuffer(0, 0, texture.width, texture.height, 0, 0, texture.width, texture.height, biltMask, gl.NEAREST);\n        }\n        if (renderTarget._generateMipmap) {\n            renderTarget._textures.forEach(tex => {\n                let target = (<WebGLInternalTex>tex).target;\n                this._engine._bindTexture(target, tex.resource);\n                gl.generateMipmap(target);\n                this._engine._bindTexture(target, null);\n            });\n        }\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    }\n}","import { BufferTargetType, BufferUsage } from \"../../RenderEnum/BufferTargetType\";\nimport { RenderStatisticsInfo } from \"../../RenderEnum/RenderStatInfo\";\nimport { IRenderBuffer } from \"../../RenderInterface/IRenderBuffer\";\nimport { GLObject } from \"./GLObject\";\nimport { WebGLEngine } from \"./WebGLEngine\";\n\nexport class GLBuffer extends GLObject implements IRenderBuffer {\n    //GLParams\n    _glBuffer: WebGLBuffer;\n    _glTarget: number;\n    _glUsage: number;\n    //Common Enum\n    _glTargetType: BufferTargetType;\n    _glBufferUsageType: BufferUsage;\n    //size\n    _byteLength: number = 0;\n\n    constructor(engine: WebGLEngine, targetType: BufferTargetType, bufferUsageType: BufferUsage) {\n        super(engine)\n        this._glTargetType = targetType;\n        this._glBufferUsageType = bufferUsageType;\n        this._getGLTarget(this._glTargetType);\n        this._getGLUsage(this._glBufferUsageType);\n        this._glBuffer = this._gl.createBuffer();\n    }\n\n    private _getGLUsage(usage: BufferUsage) {\n        switch (usage) {\n            case BufferUsage.Static:\n                this._glUsage = this._gl.STATIC_DRAW;\n                break;\n            case BufferUsage.Dynamic:\n                this._glUsage = this._gl.DYNAMIC_DRAW;\n                break;\n            case BufferUsage.Stream:\n                this._glUsage = this._gl.STREAM_DRAW;\n                break;\n            default:\n                console.error(\"usage is not standard\");\n                break;\n        }\n    }\n\n    private _getGLTarget(target: BufferTargetType) {\n        switch (target) {\n            case BufferTargetType.ARRAY_BUFFER:\n                this._glTarget = this._gl.ARRAY_BUFFER\n                break;\n            case BufferTargetType.UNIFORM_BUFFER:\n                this._glTarget = (<WebGL2RenderingContext>this._gl).UNIFORM_BUFFER;\n                break;\n            case BufferTargetType.ELEMENT_ARRAY_BUFFER:\n                this._glTarget = this._gl.ELEMENT_ARRAY_BUFFER\n                break;\n            default:\n                break;\n        }\n    }\n\n    private _memorychange(bytelength: number) {\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.BufferMemory, bytelength);\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.GPUMemory, bytelength);\n    }\n\n    bindBuffer(): boolean {\n        if (this._engine._getbindBuffer(this._glTargetType) != this) {\n            this._gl.bindBuffer(this._glTarget, this._glBuffer);\n            this._engine._setbindBuffer(this._glTargetType, this);\n            return true;\n        }\n        return false;\n    }\n\n    unbindBuffer() {\n        if (this._engine._getbindBuffer(this._glTargetType) == this) {\n            this._gl.bindBuffer(this._glTarget, null);\n            this._engine._setbindBuffer(this._glTargetType, null);\n        }\n    }\n\n    orphanStorage() {\n        this.bindBuffer();\n        this.setDataLength(this._byteLength);\n    }\n\n    setDataLength(srcData: number): void {\n        let gl = this._gl;\n        this.bindBuffer();\n        this._memorychange(-this._byteLength);\n        this._byteLength = srcData;\n        gl.bufferData(this._glTarget, this._byteLength, this._glUsage);\n        this.unbindBuffer();\n        this._memorychange(this._byteLength);\n    }\n\n\n\n\n    setData(srcData: ArrayBuffer | ArrayBufferView, offset: number): void {\n        let gl = this._gl;\n        this.bindBuffer();\n        gl.bufferSubData(this._glTarget, offset, <ArrayBufferView>srcData);\n        this.unbindBuffer();\n    }\n    setDataEx(srcData: ArrayBuffer | ArrayBufferView, offset: number, length: number): void {\n        let gl = this._gl;\n        this.bindBuffer();\n        gl.bufferSubData(this._glTarget, offset, srcData as ArrayBufferView, 0, length);\n        this.unbindBuffer();\n    }\n    // setData(srcData: ArrayBuffer | ArrayBufferView | number, offset?: number, length?: number): void {\n    //     let gl = this._gl;\n    //     this.bindBuffer();\n    //     if (typeof srcData == \"number\") {\n    //         this._byteLength = srcData as number;\n    //         gl.bufferData(this._glTarget, this._byteLength, this._glUsage);\n    //     }\n    //     if (offset != undefined && length == undefined) {\n    //         gl.bufferSubData(this._glTarget, offset, <ArrayBufferView>srcData);\n    //     }\n    //     if(offset != undefined && length != undefined) {\n    //         gl.bufferSubData(this._glTarget, offset, srcData as ArrayBufferView, 0, length);\n    //     }\n    //     this.unbindBuffer();\n    // }\n\n\n    //TODO:\n    bindBufferBase(glPointer: number) {\n        if (this._engine._getBindUBOBuffer(glPointer) != this) {\n            const gl = <WebGL2RenderingContext>this._gl;\n            gl.bindBufferBase(this._glTarget, glPointer, this._glBuffer);\n            this._engine._setBindUBOBuffer(glPointer, this);\n        }\n    }\n\n    //TODO:\n    bindBufferRange(glPointer: number, offset: number, byteCount: number) {\n        const gl = <WebGL2RenderingContext>this._gl;\n        gl.bindBufferRange(this._glTarget, glPointer, this._glBuffer, offset, byteCount);\n    }\n\n    resizeBuffer(dataLength: number) {\n        this.bindBuffer();\n        const gl = this._gl;\n        this._byteLength = dataLength;\n        gl.bufferData(this._glTarget, this._byteLength, this._glUsage);\n    }\n\n    destroy() {\n        super.destroy();\n        const gl = this._gl;\n        gl.deleteBuffer(this._glBuffer);\n        this._memorychange(-this._byteLength);\n        this._byteLength = 0;\n        this._engine = null;\n        this._glBuffer = null;\n        this._glTarget = null;\n        this._glUsage = null;\n        this._gl = null;\n\n    }\n}","import { RenderCapable } from \"../../RenderEnum/RenderCapable\";\nimport { RenderParams } from \"../../RenderEnum/RenderParams\";\nimport { WebGLExtension } from \"./GLEnum/WebGLExtension\";\nimport { WebGLEngine } from \"./WebGLEngine\";\n\n/**\n * \n */\nexport class GLParams{\n    _engine: WebGLEngine;\n    _gl: WebGLRenderingContext | WebGL2RenderingContext;\n    _glParamsData:Map<RenderParams,number>;\n    constructor(engine: WebGLEngine){\n        this._engine = engine;\n        this._gl = this._engine.gl;\n        this._initParams();\n    }\n\n    private _initParams(){\n        const gl = this._gl;\n        this._glParamsData = new Map();\n        this._glParamsData.set(RenderParams.Max_Active_Texture_Count,gl.getParameter(gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS));\n        const maxVertexUniform:number = gl.getParameter(gl.MAX_VERTEX_UNIFORM_VECTORS);\n        const maxFragUniform:number = gl.getParameter(gl.MAX_FRAGMENT_UNIFORM_VECTORS);\n        this._glParamsData.set(RenderParams.Max_Uniform_Count,Math.min(maxVertexUniform,maxFragUniform));\n        this._glParamsData.set(RenderParams.MAX_Texture_Size,gl.getParameter(gl.MAX_TEXTURE_SIZE));\n        this._glParamsData.set(RenderParams.MAX_Texture_Image_Uint,gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS));\n        if(this._engine.getCapable(RenderCapable.Texture_anisotropic)){\n            const anisoExt = this._engine._supportCapatable.getExtension(WebGLExtension.EXT_texture_filter_anisotropic);\n            this._glParamsData.set(RenderParams.Max_AnisoLevel_Count,gl.getParameter(anisoExt.MAX_TEXTURE_MAX_ANISOTROPY_EXT));\n        }\n        if(this._engine.isWebGL2)\n            this._glParamsData.set(RenderParams.SHADER_CAPAILITY_LEVEL,35);\n        else\n            this._glParamsData.set(RenderParams.SHADER_CAPAILITY_LEVEL,30);\n        this._glParamsData.set(RenderParams.FLOAT,gl.FLOAT);\n        this._glParamsData.set(RenderParams.UNSIGNED_BYTE,gl.UNSIGNED_BYTE);\n        this._glParamsData.set(RenderParams.UNSIGNED_SHORT,gl.UNSIGNED_SHORT);\n        this._glParamsData.set(RenderParams.BYTE,gl.BYTE);\n\n    }\n\n    getParams(params:RenderParams):number{\n        return this._glParamsData.get(params);\n    }\n}","import { IRender2DContext } from \"../../RenderInterface/IRender2DContext\";\nimport { GLObject } from \"./GLObject\";\nimport { GLShaderInstance } from \"./GLShaderInstance\";\nimport { WebGLEngine } from \"./WebGLEngine\";\n\n\nexport class GLRender2DContext extends GLObject implements IRender2DContext {\n    private shaderInstance:GLShaderInstance;\n    private cacheShaderProgram:any;\n\n    constructor(engine: WebGLEngine) {\n        super(engine);\n        //this.shaderInstance = new GLShaderInstance(engine, null, null, null);\n    }\n\n    activeTexture(textureID: number): void {\n        if (this._engine._activedTextureID !== textureID) {\n            this._gl.activeTexture(textureID);\n            this._engine._activedTextureID = textureID;\n        }\n    }\n\n    bindTexture(target: number, texture: WebGLTexture): void {\n        this._engine._bindTexture(target, texture);\n    }\n\n    bindUseProgram(webglProgram: any):boolean {\n        if(this.cacheShaderProgram==webglProgram)\n            return false;\n        this._gl.useProgram(webglProgram);\n        this._engine._glUseProgram = null;;\n        return true;\n    }\n\n}","import { RenderGeometryElementOBJ } from \"../../../d3/RenderObjs/RenderObj/RenderGeometryElementOBJ\";\nimport { DrawType } from \"../../RenderEnum/DrawType\";\nimport { IndexFormat } from \"../../RenderEnum/IndexFormat\";\nimport { MeshTopology } from \"../../RenderEnum/RenderPologyMode\";\nimport { RenderStatisticsInfo } from \"../../RenderEnum/RenderStatInfo\";\nimport { IRenderDrawContext } from \"../../RenderInterface/IRenderDrawContext\";\nimport { WebGLExtension } from \"./GLEnum/WebGLExtension\";\nimport { GLObject } from \"./GLObject\";\nimport { WebGLEngine } from \"./WebGLEngine\"\n\n//TODO\nexport class GLRenderDrawContext extends GLObject implements IRenderDrawContext {\n    /**@internal */\n    private _angleInstancedArrays: any;\n\n    constructor(engine: WebGLEngine) {\n        super(engine);\n        if (!this._engine.isWebGL2) {\n            this._angleInstancedArrays = this._engine._supportCapatable.getExtension(WebGLExtension.ANGLE_instanced_arrays);\n        }\n    }\n\n    /**\n     * @internal\n     * @param mode \n     * @returns \n     */\n    getMeshTopology(mode: MeshTopology): number {\n        switch (mode) {\n            case MeshTopology.Points:\n                return this._gl.POINTS;\n            case MeshTopology.Lines:\n                return this._gl.LINES;\n            case MeshTopology.LineLoop:\n                return this._gl.LINE_LOOP;\n            case MeshTopology.LineStrip:\n                return this._gl.LINE_STRIP;\n            case MeshTopology.Triangles:\n                return this._gl.TRIANGLES;\n            case MeshTopology.TriangleStrip:\n                return this._gl.TRIANGLE_STRIP;\n            case MeshTopology.TriangleFan:\n                return this._gl.TRIANGLE_FAN;\n        }\n    }\n\n    /**\n     * @internal\n     * @param type \n     * @returns \n     */\n    getIndexType(type: IndexFormat): number {\n        switch (type) {\n            case IndexFormat.UInt8:\n                return this._gl.UNSIGNED_BYTE;\n            case IndexFormat.UInt16:\n                return this._gl.UNSIGNED_SHORT;\n            case IndexFormat.UInt32:\n                return this._gl.UNSIGNED_INT;\n        }\n    }\n\n    /**\n     * @internal\n     */\n    drawElementsInstanced(mode: number, count: number, type: IndexFormat, offset: number, instanceCount: number): void {\n        if (this._engine.isWebGL2)\n            (<WebGL2RenderingContext>this._gl).drawElementsInstanced(mode, count, type, offset, instanceCount);\n        else\n            this._angleInstancedArrays.drawElementsInstancedANGLE(mode, count, type, offset, instanceCount);\n\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.DrawCall, 1);\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.InstanceDrawCall, 1);\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.Triangle, count / 3 * instanceCount);\n\n    }\n\n    /**\n     * @internal\n     */\n    drawArraysInstanced(mode: number, first: number, count: number, instanceCount: number): void {\n        if (this._engine.isWebGL2)\n            (<WebGL2RenderingContext>this._gl).drawArraysInstanced(mode, first, count, instanceCount);\n        else\n            this._angleInstancedArrays.drawArraysInstancedANGLE(mode, first, count, instanceCount);\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.DrawCall, 1);\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.InstanceDrawCall, 1);\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.Triangle, (count - 2) * instanceCount);\n    }\n\n    /**\n     * @internal\n     * @param mode \n     * @param first \n     * @param count \n     */\n    drawArrays(mode: number, first: number, count: number): void {\n        this._gl.drawArrays(mode, first, count);\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.DrawCall, 1);\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.Triangle, (count - 2));\n    }\n\n    /**\n     * @internal\n     * @param mode \n     * @param count \n     * @param type \n     * @param offset \n     */\n    drawElements(mode: number, count: number, type: IndexFormat, offset: number): void {\n        this._gl.drawElements(mode, count, type, offset);\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.DrawCall, 1);\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.Triangle, count / 3);\n    }\n\n    /**\n     * @internal\n     * @param mode \n     * @param count \n     * @param type \n     * @param offset \n     */\n    drawElements2DTemp(mode: MeshTopology, count: number, type: IndexFormat, offset: number): void {\n        mode = this.getMeshTopology(mode);\n        type = this.getIndexType(type);\n        this._gl.drawElements(mode, count, type, offset);\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.DrawCall, 1);\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.Triangle, count / 3);\n    }\n\n    /**\n     * @internal\n     * @param geometryElement \n     */\n    drawGeometryElement(geometryElement: RenderGeometryElementOBJ): void {\n        geometryElement.bufferState.bind();\n        let element = geometryElement.drawParams.elements;\n        let length = geometryElement.drawParams.length;\n        switch (geometryElement.drawType) {\n            case DrawType.DrawArray:\n                for (let i = 0; i < length; i += 2) {\n                    this.drawArrays(geometryElement._glmode, element[i], element[i + 1]);\n                }\n                break;\n            case DrawType.DrawElement:\n                for (let i = 0; i < length; i += 2) {\n                    this.drawElements(geometryElement._glmode, element[i + 1], geometryElement._glindexFormat, element[i]);\n                }\n                break;\n            case DrawType.DrawArrayInstance:\n                for (let i = 0; i < length; i += 2) {\n                    this.drawArraysInstanced(geometryElement._glmode, element[i], element[i + 1], geometryElement.instanceCount);\n                }\n                break;\n            case DrawType.DrawElementInstance:\n                for (let i = 0; i < length; i += 2) {\n                    this.drawElementsInstanced(geometryElement._glmode, element[i + 1], geometryElement._glindexFormat, element[i], geometryElement.instanceCount);\n                }\n                break;\n            default:\n                break;\n        }\n    }\n}","import { BlendEquationSeparate } from \"../../RenderEnum/BlendEquationSeparate\";\nimport { BlendFactor } from \"../../RenderEnum/BlendFactor\";\nimport { BlendType } from \"../../RenderEnum/BlendType\";\nimport { CompareFunction } from \"../../RenderEnum/CompareFunction\";\nimport { CullMode } from \"../../RenderEnum/CullMode\";\nimport { RenderStateType } from \"../../RenderEnum/RenderStateType\";\nimport { StencilOperation } from \"../../RenderEnum/StencilOperation\";\nimport { RenderStateCommand } from \"../../RenderStateCommand\";\nimport { WebGLEngine } from \"./WebGLEngine\";\n\nexport class GLRenderState {\n    //Depth\n    /**@internal */\n    private _depthTest: boolean = true;\n    /**@internal */\n    private _depthMask: boolean = true;\n    /**@internal */\n    private _depthFunc: number;\n    //stencil\n    /**@internal */\n    private _stencilTest: boolean = false;\n    /**@internal */\n    private _stencilFunc: number;\n    /**@internal */\n    private _stencilMask: boolean;\n    /**@internal */\n    private _stencilRef: number\n    /**@internal */\n    private _stencilOp_fail: number;\n    /**@internal */\n    private _stencilOp_zfail: number;\n    /**@internal */\n    private _stencilOp_zpass: number;\n    //blender\n    /**@internal */\n    private _blend: boolean = false;\n    /**@internal */\n    private _blendEquation: number;\n    /**@internal */\n    private _blendEquationRGB: number;\n    /**@internal */\n    private _blendEquationAlpha: number;\n    /**@internal */\n    private _sFactor: number;\n    /**@internal */\n    private _dFactor: number;\n    /**@internal */\n    private _sFactorRGB: number;\n    /**@internal */\n    private _dFactorRGB: number;\n    /**@internal */\n    private _sFactorAlpha: number;\n    /**@internal */\n    private _dFactorAlpha: number;\n    //cull\n    /**@internal */\n    private _cullFace: boolean = false;\n    /**@internal */\n    private _frontFace: number;\n\n    /**@internal */\n    _engine: WebGLEngine;\n    /**@internal */\n    _gl: WebGLRenderingContext | WebGL2RenderingContext;\n\n    /**\n     * intance glRenderState\n     * @param engine \n     */\n    constructor(engine: WebGLEngine) {\n        this._engine = engine;\n        this._gl = this._engine.gl;\n        this._initState();\n    }\n\n    /**\n     * init\n     */\n    private _initState() {\n        //TODO:并不完全\n        const gl = this._gl;\n        this.setDepthFunc(CompareFunction.Less);\n        this.setBlendEquationSeparate(BlendEquationSeparate.ADD, BlendEquationSeparate.ADD);\n        this._blendEquation = BlendEquationSeparate.ADD;\n        this._sFactor = BlendFactor.One;\n        this._dFactor = BlendFactor.Zero;\n        this._sFactorAlpha = BlendFactor.One;\n        this._dFactorAlpha = BlendFactor.One;\n    }\n\n    /**\n     * get gl blend factor\n     * @param factor \n     * @returns \n     */\n    _getBlendFactor(factor: BlendFactor) {\n        const gl = this._gl;\n        switch (factor) {\n            case BlendFactor.Zero:\n                return gl.ZERO;\n            case BlendFactor.One:\n                return gl.ONE;\n            case BlendFactor.SourceColor:\n                return gl.SRC_COLOR;\n            case BlendFactor.OneMinusSourceColor:\n                return gl.ONE_MINUS_SRC_COLOR;\n            case BlendFactor.DestinationColor:\n                return gl.DST_COLOR;\n            case BlendFactor.OneMinusDestinationColor:\n                return gl.ONE_MINUS_DST_COLOR;\n            case BlendFactor.SourceAlpha:\n                return gl.SRC_ALPHA;\n            case BlendFactor.OneMinusSourceAlpha:\n                return gl.ONE_MINUS_SRC_ALPHA;\n            case BlendFactor.DestinationAlpha:\n                return gl.DST_ALPHA;\n            case BlendFactor.OneMinusDestinationAlpha:\n                return gl.ONE_MINUS_DST_ALPHA;\n            case BlendFactor.SourceAlphaSaturate:\n                return gl.SRC_ALPHA_SATURATE;\n            case BlendFactor.BlendColor:\n                return gl.CONSTANT_COLOR;\n            case BlendFactor.OneMinusBlendColor:\n                return gl.ONE_MINUS_CONSTANT_COLOR;\n        }\n    }\n\n    /**\n     * get gl blend operation\n     * @param factor \n     * @returns \n     */\n    _getBlendOperation(factor: BlendEquationSeparate) {\n        const gl = this._gl;\n        switch (factor) {\n            case BlendEquationSeparate.ADD:\n                return gl.FUNC_ADD;\n            case BlendEquationSeparate.SUBTRACT:\n                return gl.FUNC_SUBTRACT;\n            case BlendEquationSeparate.REVERSE_SUBTRACT:\n                return gl.FUNC_REVERSE_SUBTRACT;\n            // case BlendEquationSeparate.MIN:\n            //     return -1;\n            // case BlendEquationSeparate.MAX:\n            //     return -1;\n            default:\n                throw \"Unknow type\"\n        }\n    }\n\n    /**\n     * get gl compare fun factor\n     * @param compareFunction \n     * @returns \n     */\n    _getGLCompareFunction(compareFunction: CompareFunction): number {\n        const gl = this._gl;\n        switch (compareFunction) {\n            case CompareFunction.Never:\n                return gl.NEVER;\n            case CompareFunction.Less:\n                return gl.LESS;\n            case CompareFunction.Equal:\n                return gl.EQUAL;\n            case CompareFunction.LessEqual:\n                return gl.LEQUAL;\n            case CompareFunction.Greater:\n                return gl.GREATER;\n            case CompareFunction.NotEqual:\n                return gl.NOTEQUAL;\n            case CompareFunction.GreaterEqual:\n                return gl.GEQUAL;\n            case CompareFunction.Always:\n                return gl.ALWAYS;\n            default:\n                return gl.LEQUAL; // todo\n        }\n    }\n\n    /**\n     * get gl stencil operation\n     * @param compareFunction \n     * @returns \n     */\n    _getGLStencilOperation(compareFunction: StencilOperation): number {\n        const gl = this._gl;\n        switch (compareFunction) {\n            case StencilOperation.Keep:\n                return gl.KEEP;\n            case StencilOperation.Zero:\n                return gl.ZERO;\n            case StencilOperation.Replace:\n                return gl.REPLACE;\n            case StencilOperation.IncrementSaturate:\n                return gl.INCR;\n            case StencilOperation.DecrementSaturate:\n                return gl.DECR;\n            case StencilOperation.Invert:\n                return gl.INVERT;\n            case StencilOperation.IncrementWrap:\n                return gl.INCR_WRAP;\n            case StencilOperation.DecrementWrap:\n                return gl.DECR_WRAP;\n        }\n    }\n\n    /**\n     * get gl frontface factor\n     * @param cullmode \n     * @returns \n     */\n    _getGLFrontfaceFactor(cullmode: CullMode) {\n        if (cullmode == CullMode.Front)\n            return this._gl.CCW;\n        else\n            return this._gl.CW;\n    }\n\n    //Depth\n    /**\n     * @internal\n     */\n    setDepthTest(value: boolean): void {\n        value !== this._depthTest && (this._depthTest = value, value ? this._gl.enable(this._gl.DEPTH_TEST) : this._gl.disable(this._gl.DEPTH_TEST));\n    }\n\n    /**\n     * @internal\n     */\n    setDepthMask(value: boolean): void {\n        value !== this._depthMask && (this._depthMask = value, this._gl.depthMask(value));\n    }\n\n    /**\n     * @internal\n     * value {CompareType}\n     */\n    setDepthFunc(value: number): void {\n        value !== this._depthFunc && (this._depthFunc = value, this._gl.depthFunc(this._getGLCompareFunction(value)));\n    }\n\n\n    //stencil\n    /**\n     * @internal\n     */\n    setStencilTest(value: boolean): void {\n        value !== this._stencilTest && (this._stencilTest = value, value ? this._gl.enable(this._gl.STENCIL_TEST) : this._gl.disable(this._gl.STENCIL_TEST));\n    }\n\n    /**\n     * 模板写入开关\n     * @param value \n     */\n    setStencilMask(value: boolean): void {\n        value !== this._stencilMask && (this._stencilMask = value, value ? this._gl.stencilMask(0xff) : this._gl.stencilMask(0x00));\n    }\n\n    /**\n     * @internal\n     */\n    setStencilFunc(fun: number, ref: number): void {\n        if (fun != this._stencilFunc || ref != this._stencilRef) {\n            this._stencilFunc = fun;\n            this._stencilRef = ref;\n            this._gl.stencilFunc(this._getGLCompareFunction(fun), ref, 0xff);\n        }\n    }\n\n    /**\n    * @internal\n    */\n    setstencilOp(fail: number, zfail: number, zpass: number) {\n        if (this._stencilOp_fail != fail || this._stencilOp_zfail != zfail || this._stencilOp_zpass != zpass) {\n            this._stencilOp_fail = fail;\n            this._stencilOp_zfail = zfail;\n            this._stencilOp_zpass = zpass;\n            this._gl.stencilOp(this._getGLStencilOperation(fail), this._getGLStencilOperation(zfail), this._getGLStencilOperation(zpass));\n        }\n    }\n\n    //blend()\n    /**\n     * @internal\n     */\n    setBlend(value: boolean): void {\n        value !== this._blend && (this._blend = value, value ? this._gl.enable(this._gl.BLEND) : this._gl.disable(this._gl.BLEND));\n    }\n\n    /**\n     * @internal\n     */\n    setBlendEquation(blendEquation: number): void {\n        if (blendEquation !== this._blendEquation) {\n            this._blendEquation = blendEquation;\n            this._blendEquationRGB = this._blendEquationAlpha = null;\n            this._gl.blendEquation(this._getBlendOperation(blendEquation));\n        }\n    }\n\n    /**\n     * @internal\n     */\n    setBlendEquationSeparate(blendEquationRGB: number, blendEquationAlpha: number): void {\n        if (blendEquationRGB !== this._blendEquationRGB || blendEquationAlpha !== this._blendEquationAlpha) {\n            this._blendEquationRGB = blendEquationRGB;\n            this._blendEquationAlpha = blendEquationAlpha;\n            this._blendEquation = null;\n            this._gl.blendEquationSeparate(this._getBlendOperation(blendEquationRGB), this._getBlendOperation(blendEquationAlpha));\n        }\n    }\n\n    /**\n     * @internal\n     */\n    setBlendFunc(sFactor: number, dFactor: number, force: boolean = false): void {\n        // 有个iOS的bug，用原来的写法有时候会出错\n        if (force || sFactor !== this._sFactor || dFactor !== this._dFactor) {\n            this._sFactor = sFactor;\n            this._dFactor = dFactor;\n            this._sFactorRGB = null;\n            this._dFactorRGB = null;\n            this._sFactorAlpha = null;\n            this._dFactorAlpha = null;\n            this._gl.blendFunc(this._getBlendFactor(sFactor), this._getBlendFactor(dFactor));\n        }\n    }\n\n    /**\n     * @internal\n     */\n    setBlendFuncSeperate(srcRGB: number, dstRGB: number, srcAlpha: number, dstAlpha: number): void {\n        if (srcRGB !== this._sFactorRGB || dstRGB !== this._dFactorRGB || srcAlpha !== this._sFactorAlpha || dstAlpha !== this._dFactorAlpha) {\n            this._sFactorRGB = srcRGB;\n            this._dFactorRGB = dstRGB;\n            this._sFactorAlpha = srcAlpha;\n            this._dFactorAlpha = dstAlpha;\n            this._sFactor = null;\n            this._dFactor = null;\n            this._gl.blendFuncSeparate(this._getBlendFactor(srcRGB), this._getBlendFactor(dstRGB), this._getBlendFactor(srcAlpha), this._getBlendFactor(dstAlpha));\n        }\n    }\n\n    //cull\n    /**\n     * @internal\n     */\n    setCullFace(value: boolean): void {\n        value !== this._cullFace && (this._cullFace = value, value ? this._gl.enable(this._gl.CULL_FACE) : this._gl.disable(this._gl.CULL_FACE));\n    }\n\n    /**\n     * @internal\n     */\n    setFrontFace(value: number): void {\n        value !== this._frontFace && (this._frontFace = value, this._gl.frontFace(this._getGLFrontfaceFactor(value)));\n    }\n\n    /**\n     * apply RenderState list\n     * @param cmd \n     */\n    applyRenderStateCommand(cmd: RenderStateCommand) {\n        let cmdArray = cmd.cmdArray;\n        cmdArray.forEach((value, key) => {\n            switch (key) {\n                case RenderStateType.DepthTest:\n                    this.setDepthTest(value);\n                    break;\n                case RenderStateType.DepthMask:\n                    this.setDepthMask(value);\n                    break;\n                case RenderStateType.DepthFunc:\n                    this.setDepthFunc(value);\n                    break;\n                case RenderStateType.StencilTest:\n                    this.setStencilTest(value);\n                    break;\n                case RenderStateType.StencilMask:\n                    this.setStencilMask(value);\n                    break;\n                case RenderStateType.StencilFunc:\n                    this.setStencilFunc(value[0], value[1]);\n                    break;\n                case RenderStateType.StencilOp:\n                    this.setstencilOp(value[0], value[1], value[2]);//TODO\n                    break;\n                case RenderStateType.BlendType:\n                    this.setBlend(value != BlendType.BLEND_DISABLE);\n                    break;\n                case RenderStateType.BlendEquation:\n                    this.setBlendEquation(value);\n                    break;\n                case RenderStateType.BlendEquationSeparate:\n                    this.setBlendEquationSeparate(value[0], value[1]);//TODO\n                    break;\n                case RenderStateType.BlendFunc:\n                    this.setBlendFunc(value[0], value[1]);\n                    break;\n                case RenderStateType.BlendFuncSeperate:\n                    this.setBlendFuncSeperate(value[0], value[1], value[2], value[3]);\n                    break;\n                case RenderStateType.CullFace:\n                    this.setCullFace(value);\n                    break;\n                case RenderStateType.FrontFace:\n                    this.setFrontFace(value);\n                    break;\n                default:\n                    throw \"unknow type of renderStateType\";\n                    break;\n            }\n        })\n    }\n}","import { LayaEnv } from \"../../../../LayaEnv\";\nimport { TextureCube } from \"../../../resource/TextureCube\";\nimport { Matrix4x4 } from \"../../../maths/Matrix4x4\";\nimport { Vector2 } from \"../../../maths/Vector2\";\nimport { Vector3 } from \"../../../maths/Vector3\";\nimport { Vector4 } from \"../../../maths/Vector4\";\nimport { BaseTexture } from \"../../../resource/BaseTexture\";\nimport { Texture2D } from \"../../../resource/Texture2D\";\nimport { IRenderShaderInstance } from \"../../RenderInterface/IRenderShaderInstance\";\nimport { ShaderDataType } from \"../../RenderShader/ShaderData\";\nimport { ShaderVariable } from \"../../RenderShader/ShaderVariable\";\nimport { UniformBufferObject } from \"../../UniformBufferObject\";\nimport { GLObject } from \"./GLObject\";\nimport { WebGLEngine } from \"./WebGLEngine\";\nimport { Matrix3x3 } from \"../../../maths/Matrix3x3\";\n\n\nexport class GLShaderInstance extends GLObject implements IRenderShaderInstance {\n\n    _engine: WebGLEngine;\n\n    _gl: WebGLRenderingContext | WebGL2RenderingContext;\n\n    /**@internal */\n    private _vs: string;\n    /**@internal */\n    private _ps: string;\n    /**@internal TextureId*/\n    private _curActTexIndex: number;\n    /**@internal */\n    private _vshader: WebGLShader;\n    /**@internal */\n    private _pshader: WebGLShader;\n    /**@internal */\n    private _program: WebGLProgram;\n    /**@internal */\n    private _attributeMap: { [name: string]: [number, ShaderDataType] };\n    /**@internal */\n    private _uniformMap: ShaderVariable[];\n    /**@internal */\n    // todo 没用到\n    private _uniformObjectMap: { [key: string]: ShaderVariable };\n    /**@internal */\n    _complete: boolean = true;\n\n    constructor(engine: WebGLEngine, vs: string, ps: string, attributeMap: { [name: string]: [number, ShaderDataType] }) {\n        super(engine);\n        this._vs = vs;\n        this._ps = ps;\n        this._attributeMap = attributeMap;\n        this._uniformMap = [];\n        this._create();\n    }\n\n    private _create(): void {\n\n        const gl: WebGLRenderingContext = this._gl;\n        this._program = gl.createProgram();\n        this._vshader = this._createShader(gl, this._vs, gl.VERTEX_SHADER);\n        this._pshader = this._createShader(gl, this._ps, gl.FRAGMENT_SHADER);\n        gl.attachShader(this._program, this._vshader);\n        gl.attachShader(this._program, this._pshader);\n\n        for (var k in this._attributeMap)//根据声明调整location,便于VAO使用\n            gl.bindAttribLocation(this._program, this._attributeMap[k][0], k);\n        gl.linkProgram(this._program);\n        const bo = gl.getProgramParameter(this._program, gl.LINK_STATUS);\n\n        if (!bo) {\n            var info = gl.getProgramInfoLog(this._program);\n            console.error(new Error('Could not compile WebGL program. \\n\\n' + info));\n            this._complete = false;\n            return;\n        }\n\n        //Uniform\n        //Unifrom Objcet\n        const nUniformNum: number = gl.getProgramParameter(this._program, gl.ACTIVE_UNIFORMS);\n\n        this.useProgram();\n        this._curActTexIndex = 0;\n        let one: ShaderVariable, i: number;\n        for (i = 0; i < nUniformNum; i++) {\n            var uniformData: WebGLActiveInfo = gl.getActiveUniform(this._program, i);\n            var uniName: string = uniformData.name;\n            let location: WebGLUniformLocation = gl.getUniformLocation(this._program, uniName);\n            if (!location && location != 0)\n                continue;\n            one = new ShaderVariable();\n            one.location = location as number;\n            if (uniName.indexOf('[0]') > 0) {\n                one.name = uniName = uniName.substr(0, uniName.length - 3);\n                one.isArray = true;\n            } else {\n                one.name = uniName;\n                one.isArray = false;\n            }\n            one.type = uniformData.type;\n            this._addShaderUnifiormFun(one);\n            this._uniformMap.push(one);\n            one.dataOffset = this._engine.propertyNameToID(uniName);\n        }\n        if (this._engine.isWebGL2) {\n            this._uniformObjectMap = {};\n            var nUniformBlock: number = gl.getProgramParameter(this._program, (gl as WebGL2RenderingContext).ACTIVE_UNIFORM_BLOCKS);\n            for (i = 0; i < nUniformBlock; i++) {\n                let gl2 = (gl as WebGL2RenderingContext);\n                var uniformBlockName: string = gl2.getActiveUniformBlockName(this._program, i);\n                one = new ShaderVariable();\n                one.name = uniformBlockName;\n                one.isArray = false;\n                one.type = (gl as WebGL2RenderingContext).UNIFORM_BUFFER;\n                one.dataOffset = this._engine.propertyNameToID(uniformBlockName);\n                let location = one.location = gl2.getUniformBlockIndex(this._program, uniformBlockName);\n                gl2.uniformBlockBinding(this._program, location, this._engine.getUBOPointer(uniformBlockName));\n                this._uniformObjectMap[one.name] = one;\n                this._uniformMap.push(one);\n                this._addShaderUnifiormFun(one);\n            }\n        }\n    }\n\n    private _legalUBObyteLength(bytelength: number): number {\n        return Math.ceil(bytelength / 16) * 16;\n    }\n\n    /**\n    * @internal\n    */\n    private _createShader(gl: WebGLRenderingContext, str: string, type: number): any {\n        var shader: WebGLShader = gl.createShader(type);\n        gl.shaderSource(shader, str);\n        gl.compileShader(shader);\n        if (this._engine._isShaderDebugMode && !gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n            if (!LayaEnv.isPlaying) {\n                console.warn(gl.getShaderInfoLog(shader));\n            } else {\n                console.error(gl.getShaderInfoLog(shader));\n            }\n        }\n        return shader;\n    }\n\n\n    /**\n     * @internal\n     */\n    private _addShaderUnifiormFun(one: ShaderVariable): void {\n        var gl: WebGLRenderingContext = this._gl;\n        one.caller = this;\n        var isArray: boolean = one.isArray;\n        switch (one.type) {\n            case gl.BOOL:\n                one.fun = this._uniform1i;\n                one.uploadedValue = new Array(1);\n                break;\n            case gl.INT:\n                one.fun = isArray ? this._uniform1iv : this._uniform1i;//TODO:优化\n                one.uploadedValue = new Array(1);\n                break;\n            case gl.FLOAT:\n                one.fun = isArray ? this._uniform1fv : this._uniform1f;\n                one.uploadedValue = new Array(1);\n                break;\n            case gl.FLOAT_VEC2:\n                one.fun = isArray ? this._uniform_vec2v : this._uniform_vec2;\n                one.uploadedValue = new Array(2);\n                break;\n            case gl.FLOAT_VEC3:\n                one.fun = isArray ? this._uniform_vec3v : this._uniform_vec3;\n                one.uploadedValue = new Array(3);\n                break;\n            case gl.FLOAT_VEC4:\n                one.fun = isArray ? this._uniform_vec4v : this._uniform_vec4;\n                one.uploadedValue = new Array(4);\n                break;\n            case gl.FLOAT_MAT2:\n                one.fun = this._uniformMatrix2fv;\n                break;\n            case gl.FLOAT_MAT3:\n                one.fun = this._uniformMatrix3fv;\n                break;\n            case gl.FLOAT_MAT4:\n                one.fun = isArray ? this._uniformMatrix4fv : this._uniformMatrix4f;\n                break;\n            case gl.SAMPLER_2D:\n            case (<WebGL2RenderingContext>gl).SAMPLER_2D_SHADOW:\n                gl.uniform1i(one.location, this._curActTexIndex);\n                one.textureID = this._engine._glTextureIDParams[this._curActTexIndex++];\n                one.fun = this._uniform_sampler2D;\n                break;\n            case (<WebGL2RenderingContext>gl).SAMPLER_2D_ARRAY:\n                gl.uniform1i(one.location, this._curActTexIndex);\n                one.textureID = this._engine._glTextureIDParams[this._curActTexIndex++];\n                one.fun = this._uniform_sampler2DArray;\n                break;\n            case 0x8b5f://sampler3D\n                gl.uniform1i(one.location, this._curActTexIndex);\n                one.textureID = this._engine._glTextureIDParams[this._curActTexIndex++];\n                one.fun = this._uniform_sampler3D;\n                break;\n            case gl.SAMPLER_CUBE:\n                gl.uniform1i(one.location, this._curActTexIndex);\n                one.textureID = this._engine._glTextureIDParams[this._curActTexIndex++];\n                one.fun = this._uniform_samplerCube;\n                break;\n            case (gl as WebGL2RenderingContext).UNIFORM_BUFFER:\n                one.fun = this._uniform_UniformBuffer;\n                break;\n            default:\n                throw new Error(\"compile shader err!\");\n        }\n    }\n\n    getUniformMap(): ShaderVariable[] {\n        return this._uniformMap;\n    }\n\n    /**\n     * @internal\n     * @returns \n     */\n    bind(): boolean {\n        return this.useProgram();\n    }\n\n    /**\n     * @internal\n     */\n    useProgram(): boolean {\n        if (this._engine._glUseProgram === this)\n            return false;\n        this._gl.useProgram(this._program);\n        this._engine._glUseProgram = this;\n        return true;\n    }\n\n    /**\n    * @internal\n    */\n    _uniform1f(one: any, value: any): number {\n        var uploadedValue: any[] = one.uploadedValue;\n        if (uploadedValue[0] !== value) {\n            this._gl.uniform1f(one.location, uploadedValue[0] = value);\n            return 1;\n        }\n        return 0;\n    }\n\n    /**\n    * @internal\n    */\n    _uniform1fv(one: any, value: any): number {\n        if (value.length < 4) {\n            var uploadedValue: any[] = one.uploadedValue;\n            if (uploadedValue[0] !== value[0] || uploadedValue[1] !== value[1] || uploadedValue[2] !== value[2] || uploadedValue[3] !== value[3]) {\n                this._gl.uniform1fv(one.location, value);\n                uploadedValue[0] = value[0];\n                uploadedValue[1] = value[1];\n                uploadedValue[2] = value[2];\n                uploadedValue[3] = value[3];\n                return 1;\n            }\n            return 0;\n        } else {\n            this._gl.uniform1fv(one.location, value);\n            return 1;\n        }\n    }\n\n    /**\n     * @internal\n     */\n    _uniform_vec2(one: any, v: Vector2): number {\n        var uploadedValue: any[] = one.uploadedValue;\n        if (uploadedValue[0] !== v.x || uploadedValue[1] !== v.y) {\n            this._gl.uniform2f(one.location, uploadedValue[0] = v.x, uploadedValue[1] = v.y);\n            return 1;\n        }\n        return 0;\n    }\n\n    /**\n     * @internal\n     */\n    _uniform_vec2v(one: any, value: Float32Array): number {\n        if (value.length < 2) {\n            var uploadedValue: any[] = one.uploadedValue;\n            if (uploadedValue[0] !== value[0] || uploadedValue[1] !== value[1] || uploadedValue[2] !== value[2] || uploadedValue[3] !== value[3]) {\n                this._gl.uniform2fv(one.location, value);\n                uploadedValue[0] = value[0];\n                uploadedValue[1] = value[1];\n                uploadedValue[2] = value[2];\n                uploadedValue[3] = value[3];\n                return 1;\n            }\n            return 0;\n        } else {\n            this._gl.uniform2fv(one.location, value);\n            return 1;\n        }\n    }\n\n    /**\n     * @internal\n     */\n    _uniform_vec3(one: any, v: Vector3): number {\n        var uploadedValue: any[] = one.uploadedValue;\n        if (uploadedValue[0] !== v.x || uploadedValue[1] !== v.y || uploadedValue[2] !== v.z) {\n            this._gl.uniform3f(one.location, uploadedValue[0] = v.x, uploadedValue[1] = v.y, uploadedValue[2] = v.z);\n            return 1;\n        }\n        return 0;\n    }\n\n    /**\n     * @internal\n     */\n    _uniform_vec3v(one: any, v: Float32Array): number {\n        this._gl.uniform3fv(one.location, v);\n        return 1;\n    }\n\n    /**\n     * @internal\n     */\n    _uniform_vec4(one: any, v: Vector4): number {\n        var uploadedValue: any[] = one.uploadedValue;\n        if (uploadedValue[0] !== v.x || uploadedValue[1] !== v.y || uploadedValue[2] !== v.z || uploadedValue[3] !== v.w) {\n            this._gl.uniform4f(one.location, uploadedValue[0] = v.x, uploadedValue[1] = v.y, uploadedValue[2] = v.z, uploadedValue[3] = v.w);\n            return 1;\n        }\n        return 0;\n    }\n\n    /**\n     * @internal\n     */\n    _uniform_vec4v(one: any, v: Float32Array): number {\n        this._gl.uniform4fv(one.location, v);\n        return 1;\n    }\n\n    /**\n     * @internal\n     */\n    _uniformMatrix2fv(one: any, value: any): number {\n        this._gl.uniformMatrix2fv(one.location, false, value);\n        return 1;\n    }\n\n    /**\n     * @internal\n     */\n    _uniformMatrix3fv(one: any, m: Matrix3x3): number {\n        let value = m.elements;\n        this._gl.uniformMatrix3fv(one.location, false, value);\n        return 1;\n    }\n\n    /**\n     * @internal\n     */\n    _uniformMatrix4f(one: any, m: Matrix4x4): number {\n        var value: Float32Array = m.elements;\n        this._gl.uniformMatrix4fv(one.location, false, value);\n        return 1;\n    }\n\n    /**\n     * @internal\n     */\n    _uniformMatrix4fv(one: any, m: Float32Array): number {\n        this._gl.uniformMatrix4fv(one.location, false, m);\n        return 1;\n    }\n\n    /**\n     * @internal\n     */\n    _uniform1i(one: any, value: any): number {\n        var uploadedValue: any[] = one.uploadedValue;\n        if (uploadedValue[0] !== value) {\n            this._gl.uniform1i(one.location, uploadedValue[0] = value);\n            return 1;\n        }\n        return 0;\n    }\n\n    /**\n     * @internal\n     */\n    _uniform1iv(one: any, value: any): number {\n        this._gl.uniform1iv(one.location, value);\n        return 1;\n    }\n\n    /**\n     * @internal\n     */\n    _uniform_ivec2(one: any, value: any): number {\n        var uploadedValue: any[] = one.uploadedValue;\n        if (uploadedValue[0] !== value[0] || uploadedValue[1] !== value[1]) {\n            this._gl.uniform2i(one.location, uploadedValue[0] = value[0], uploadedValue[1] = value[1]);\n            return 1;\n        }\n        return 0;\n    }\n\n    /**\n     * @internal\n     */\n    _uniform_ivec2v(one: any, value: any): number {\n        this._gl.uniform2iv(one.location, value);\n        return 1;\n    }\n\n    /**\n     * @internal\n     */\n    _uniform_vec3i(one: any, value: any): number {\n        var uploadedValue: any[] = one.uploadedValue;\n        if (uploadedValue[0] !== value[0] || uploadedValue[1] !== value[1] || uploadedValue[2] !== value[2]) {\n            this._gl.uniform3i(one.location, uploadedValue[0] = value[0], uploadedValue[1] = value[1], uploadedValue[2] = value[2]);\n            return 1;\n        }\n        return 0;\n    }\n\n    /**\n     * @internal\n     */\n    _uniform_vec3vi(one: any, value: any): number {\n        this._gl.uniform3iv(one.location, value);\n        return 1;\n    }\n\n    /**\n     * @internal\n     */\n    _uniform_vec4i(one: any, value: any): number {\n        var uploadedValue: any[] = one.uploadedValue;\n        if (uploadedValue[0] !== value[0] || uploadedValue[1] !== value[1] || uploadedValue[2] !== value[2] || uploadedValue[3] !== value[3]) {\n            this._gl.uniform4i(one.location, uploadedValue[0] = value[0], uploadedValue[1] = value[1], uploadedValue[2] = value[2], uploadedValue[3] = value[3]);\n            return 1;\n        }\n        return 0;\n    }\n\n    /**\n     * @internal\n     */\n    _uniform_vec4vi(one: any, value: any): number {\n        this._gl.uniform4iv(one.location, value);\n        return 1;\n    }\n\n    /**\n     * @internal\n     */\n    _uniform_sampler2D(one: any, texture: BaseTexture): number {//TODO:TEXTURTE ARRAY\n        var value: any = texture ? texture._getSource() : Texture2D.errorTexture._getSource();\n        var gl: WebGLRenderingContext = this._gl;\n        this._bindTexture(one.textureID, gl.TEXTURE_2D, value);\n        return 0;\n    }\n\n    _uniform_sampler2DArray(one: any, texture: BaseTexture): number {\n        var value: any = texture ? texture._getSource() : Texture2D.errorTexture._getSource();\n        var gl: WebGL2RenderingContext = this._gl as WebGL2RenderingContext;\n        this._bindTexture(one.textureID, gl.TEXTURE_2D_ARRAY, value);\n        return 0;\n    }\n\n    _uniform_sampler3D(one: any, texture: BaseTexture): number {//TODO:TEXTURTE ARRAY\n        var value: any = texture ? texture._getSource() : Texture2D.errorTexture._getSource();\n        var gl: WebGL2RenderingContext = this._gl as WebGL2RenderingContext;\n        this._bindTexture(one.textureID, gl.TEXTURE_3D, value);\n        return 0;\n    }\n\n    /**\n     * @internal\n     */\n    _uniform_samplerCube(one: any, texture: BaseTexture): number {//TODO:TEXTURTECUBE ARRAY\n        var value: any = texture ? texture._getSource() : TextureCube.errorTexture._getSource();\n        var gl: WebGLRenderingContext = this._gl;\n        this._bindTexture(one.textureID, gl.TEXTURE_CUBE_MAP, value);\n        return 0;\n    }\n\n    /**\n     * @internal\n     * @param one \n     * @param value \n     * @returns \n     */\n    _uniform_UniformBuffer(one: any, value: UniformBufferObject) {\n        value._bindUniformBufferBase();\n        return 1;\n    }\n\n    /**\n     * @internal\n     */\n    _bindTexture(textureID: number, target: number, texture: WebGLTexture): void {\n        const gl = this._gl;\n        if (this._engine._activedTextureID !== textureID) {\n            gl.activeTexture(textureID);\n            this._engine._activedTextureID = textureID;\n        }\n        const texID = this._engine._activedTextureID - this._gl.TEXTURE0;\n        if (this._engine._activeTextures[texID] !== texture) {\n            gl.bindTexture(target, texture);\n            this._engine._activeTextures[texID] = texture;\n        }\n    }\n\n    destroy() {\n        super.destroy();\n        const gl = this._gl;\n        gl.deleteShader(this._vshader);\n        gl.deleteShader(this._pshader);\n        gl.deleteProgram(this._program);\n        this._vshader = null;\n        this._pshader = null;\n        this._program = null;\n        this._attributeMap = null;\n        this._uniformMap = null;\n        this._uniformObjectMap = null;\n        this._gl = null;\n        this._engine = null;\n    }\n\n}","import { IndexBuffer } from \"../../IndexBuffer\";\nimport { IRenderVertexState } from \"../../RenderInterface/IRenderVertexState\";\nimport { VertexBuffer } from \"../../VertexBuffer\";\nimport { VertexDeclaration } from \"../../VertexDeclaration\";\nimport { WebGLExtension } from \"./GLEnum/WebGLExtension\";\nimport { GLObject } from \"./GLObject\";\nimport { WebGLEngine } from \"./WebGLEngine\";\n\n\nexport class GLVertexState extends GLObject implements IRenderVertexState {\n    private _angleInstancedArrays: any;\n    private _vaoExt: any | null;\n    private _vao: WebGLVertexArrayObject | WebGLVertexArrayObjectOES;\n\n    _vertexDeclaration: VertexDeclaration[] = [];\n    _bindedIndexBuffer: IndexBuffer;\n    _vertexBuffers: VertexBuffer[];\n\n    constructor(engine: WebGLEngine) {\n        super(engine);\n        if (!engine.isWebGL2)\n            this._vaoExt = engine._supportCapatable.getExtension(WebGLExtension.OES_vertex_array_object);\n        this._vao = this.createVertexArray();\n        this._angleInstancedArrays = this._engine._supportCapatable.getExtension(WebGLExtension.ANGLE_instanced_arrays);\n    }\n\n    /**\n     * @internal\n     */\n    private createVertexArray(): any {\n        if (this._engine.isWebGL2)\n            return (<WebGL2RenderingContext>this._gl).createVertexArray();\n        else\n            return this._vaoExt.createVertexArrayOES();\n    }\n\n    /**\n     * @internal\n     */\n    private deleteVertexArray(): void {\n        if (this._engine.isWebGL2)\n            (<WebGL2RenderingContext>this._gl).deleteVertexArray(this._vao);\n        else\n            this._vaoExt.deleteVertexArrayOES(this._vao);\n    }\n\n    /**\n     * @internal\n     */\n    bindVertexArray(): void {\n        if (this._engine._GLBindVertexArray == this)\n            return;\n        if (this._engine.isWebGL2)\n            (<WebGL2RenderingContext>this._gl).bindVertexArray(this._vao);\n        else\n            this._vaoExt.bindVertexArrayOES(this._vao);\n        this._engine._GLBindVertexArray = this;\n    }\n\n    /**\n     * @internal\n     */\n    unbindVertexArray(): void {\n        if (this._engine.isWebGL2)\n            (<WebGL2RenderingContext>this._gl).bindVertexArray(null);\n        else\n            this._vaoExt.bindVertexArrayOES(null);\n        this._engine._GLBindVertexArray = null;\n    }\n\n    /**\n     * @internal\n     */\n    isVertexArray(): void {\n        if (this._engine.isWebGL2)\n            (<WebGL2RenderingContext>this._gl).isVertexArray(this._vao);\n        else\n            this._vaoExt.isVertexArrayOES(this._vao);\n    }\n\n    applyVertexBuffer(vertexBuffer: VertexBuffer[]): void {\n        //Clear front VAO\n        this.clearVAO();\n        this._vertexBuffers = vertexBuffer;\n        if (this._engine._GLBindVertexArray == this) {\n            this._vertexDeclaration.length = vertexBuffer.length;\n            var i = 0;\n            vertexBuffer.forEach(element => {\n                var verDec: VertexDeclaration = element.vertexDeclaration;\n                this._vertexDeclaration[i++] = element.vertexDeclaration;\n                var valueData: any = verDec._shaderValues;\n                element.bind();\n                for (var k in valueData) {\n                    var loc: number = parseInt(k);\n                    var attribute: any[] = valueData[k];\n                    this._gl.enableVertexAttribArray(loc);\n                    this._gl.vertexAttribPointer(loc, attribute[0], attribute[1], !!attribute[2], attribute[3], attribute[4]);\n                    if (element.instanceBuffer)\n                        this.vertexAttribDivisor(loc, 1);\n                }\n            });\n        } else {\n            throw \"BufferState: must call bind() function first.\";\n        }\n\n    }\n\n    //绑定之前需要先处理了前面的\n    clearVAO(){\n        for(let i = 0,n=this._vertexDeclaration.length;i<n;i++){\n            var verDec: VertexDeclaration = this._vertexDeclaration[i];\n            var valueData: any = verDec._shaderValues;\n            for (var k in valueData) {\n                var loc: number = parseInt(k);\n                this._gl.disableVertexAttribArray(loc);\n            }\n        }\n    }\n\n    applyIndexBuffer(indexBuffer: IndexBuffer | null): void {\n        //需要强制更新IndexBuffer\n\n        if (indexBuffer == null) {\n            return;\n        }\n        if (this._engine._GLBindVertexArray == this) {\n            if (this._bindedIndexBuffer !== indexBuffer) {\n                indexBuffer.bind();//TODO:可和vao合并bind\n                this._bindedIndexBuffer = indexBuffer;\n            }\n        } else {\n            throw \"BufferState: must call bind() function first.\";\n        }\n    }\n\n    /**\n         * @internal\n         */\n    vertexAttribDivisor(index: number, divisor: number): void {\n        if (this._engine.isWebGL2)\n            (<WebGL2RenderingContext>this._gl).vertexAttribDivisor(index, divisor);\n        else\n            this._angleInstancedArrays.vertexAttribDivisorANGLE(index, divisor);\n    }\n\n\n    /**\n     * @internal\n     */\n    destroy() {\n        super.destroy();\n        const gl = this._gl;\n        this.deleteVertexArray();\n        this._gl = null;\n        this._engine = null;\n    }\n} ","// @ts-nocheck\nexport class VertexArrayObject {\n    constructor() {\n    }\n}\n\n\n(function () {\n    \"use strict\";\n\n    var glErrorShadow = {};\n\n    function error(msg) {\n        if (window.console && window.console.error) {\n            window.console.error(msg);\n        }\n    }\n\n    function log(msg) {\n        if (window.console && window.console.log) {\n            window.console.log(msg);\n        }\n    }\n\n    function synthesizeGLError(err, opt_msg) {\n        glErrorShadow[err] = true;\n        if (opt_msg !== undefined) {\n            error(opt_msg)\n        }\n    }\n\n    function wrapGLError(gl) {\n        var f = gl.getError;\n        gl.getError = function () {\n            var err;\n            do {\n                err = f.apply(gl);\n                if (err != gl.NO_ERROR) {\n                    glErrorShadow[err] = true;\n                }\n            } while (err != gl.NO_ERROR);\n\n            for (var err1 in glErrorShadow) {\n                if (glErrorShadow[err1]) {\n                    delete glErrorShadow[err1];\n                    return parseInt(err1);\n                }\n            }\n            return gl.NO_ERROR;\n        };\n    }\n\n    var WebGLVertexArrayObjectOES = function WebGLVertexArrayObjectOES(ext) {\n        var gl = ext.gl;\n\n        this.ext = ext;\n        this.isAlive = true;\n        this.hasBeenBound = false;\n\n        this.elementArrayBuffer = null;\n        this.attribs = new Array(ext.maxVertexAttribs);\n        for (var n = 0; n < this.attribs.length; n++) {\n            var attrib = new (WebGLVertexArrayObjectOES as any).VertexAttrib(gl);\n            this.attribs[n] = attrib;\n        }\n\n        this.maxAttrib = 0;\n    };\n\n    (WebGLVertexArrayObjectOES as any).VertexAttrib = function VertexAttrib(gl) {\n        this.enabled = false;\n        this.buffer = null;\n        this.size = 4;\n        this.type = gl.FLOAT;\n        this.normalized = false;\n        this.stride = 16;\n        this.offset = 0;\n\n        this.cached = \"\";\n        this.recache();\n    };\n    (WebGLVertexArrayObjectOES as any).VertexAttrib.prototype.recache = function recache() {\n        this.cached = [this.size, this.type, this.normalized, this.stride, this.offset].join(\":\");\n    };\n\n    var OESVertexArrayObject = function OESVertexArrayObject(gl) {\n        var self = this;\n        this.gl = gl;\n\n        wrapGLError(gl);\n\n        var original = this.original = {\n            getParameter: gl.getParameter,\n            enableVertexAttribArray: gl.enableVertexAttribArray,\n            disableVertexAttribArray: gl.disableVertexAttribArray,\n            bindBuffer: gl.bindBuffer,\n            getVertexAttrib: gl.getVertexAttrib,\n            vertexAttribPointer: gl.vertexAttribPointer\n        };\n\n        gl.getParameter = function getParameter(pname) {\n            if (pname == self.VERTEX_ARRAY_BINDING_OES) {\n                if (self.currentVertexArrayObject == self.defaultVertexArrayObject) {\n                    return null;\n                } else {\n                    return self.currentVertexArrayObject;\n                }\n            }\n            return original.getParameter.apply(this, arguments);\n        };\n\n        gl.enableVertexAttribArray = function enableVertexAttribArray(index) {\n            var vao = self.currentVertexArrayObject;\n            vao.maxAttrib = Math.max(vao.maxAttrib, index);\n            var attrib = vao.attribs[index];\n            attrib.enabled = true;\n            return original.enableVertexAttribArray.apply(this, arguments);\n        };\n        gl.disableVertexAttribArray = function disableVertexAttribArray(index) {\n            var vao = self.currentVertexArrayObject;\n            vao.maxAttrib = Math.max(vao.maxAttrib, index);\n            var attrib = vao.attribs[index];\n            attrib.enabled = false;\n            return original.disableVertexAttribArray.apply(this, arguments);\n        };\n\n        gl.bindBuffer = function bindBuffer(target, buffer) {\n            switch (target) {\n                case gl.ARRAY_BUFFER:\n                    self.currentArrayBuffer = buffer;\n                    break;\n                case gl.ELEMENT_ARRAY_BUFFER:\n                    self.currentVertexArrayObject.elementArrayBuffer = buffer;\n                    break;\n            }\n            return original.bindBuffer.apply(this, arguments);\n        };\n\n        gl.getVertexAttrib = function getVertexAttrib(index, pname) {\n            var vao = self.currentVertexArrayObject;\n            var attrib = vao.attribs[index];\n            switch (pname) {\n                case gl.VERTEX_ATTRIB_ARRAY_BUFFER_BINDING:\n                    return attrib.buffer;\n                case gl.VERTEX_ATTRIB_ARRAY_ENABLED:\n                    return attrib.enabled;\n                case gl.VERTEX_ATTRIB_ARRAY_SIZE:\n                    return attrib.size;\n                case gl.VERTEX_ATTRIB_ARRAY_STRIDE:\n                    return attrib.stride;\n                case gl.VERTEX_ATTRIB_ARRAY_TYPE:\n                    return attrib.type;\n                case gl.VERTEX_ATTRIB_ARRAY_NORMALIZED:\n                    return attrib.normalized;\n                default:\n                    return original.getVertexAttrib.apply(this, arguments);\n            }\n        };\n\n        gl.vertexAttribPointer = function vertexAttribPointer(indx, size, type, normalized, stride, offset) {\n            var vao = self.currentVertexArrayObject;\n            vao.maxAttrib = Math.max(vao.maxAttrib, indx);\n            var attrib = vao.attribs[indx];\n            attrib.buffer = self.currentArrayBuffer;\n            attrib.size = size;\n            attrib.type = type;\n            attrib.normalized = normalized;\n            attrib.stride = stride;\n            attrib.offset = offset;\n            attrib.recache();\n            return original.vertexAttribPointer.apply(this, arguments);\n        };\n\n        if (gl.instrumentExtension) {\n            gl.instrumentExtension(this, \"OES_vertex_array_object\");\n        }\n\n        gl.canvas.addEventListener('webglcontextrestored', function () {\n            log(\"OESVertexArrayObject emulation library context restored\");\n            self.reset_();\n        }, true);\n\n        this.reset_();\n    };\n\n    OESVertexArrayObject.prototype.VERTEX_ARRAY_BINDING_OES = 0x85B5;\n\n    OESVertexArrayObject.prototype.reset_ = function reset_() {\n        var contextWasLost = this.vertexArrayObjects !== undefined;\n        if (contextWasLost) {\n            for (var ii = 0; ii < this.vertexArrayObjects.length; ++ii) {\n                this.vertexArrayObjects.isAlive = false;\n            }\n        }\n        var gl = this.gl;\n        this.maxVertexAttribs = gl.getParameter(gl.MAX_VERTEX_ATTRIBS);\n\n        this.defaultVertexArrayObject = new WebGLVertexArrayObjectOES(this);\n        this.currentVertexArrayObject = null;\n        this.currentArrayBuffer = null;\n        this.vertexArrayObjects = [this.defaultVertexArrayObject];\n\n        this.bindVertexArrayOES(null);\n    };\n\n    OESVertexArrayObject.prototype.createVertexArrayOES = function createVertexArrayOES() {\n        var arrayObject = new WebGLVertexArrayObjectOES(this);\n        this.vertexArrayObjects.push(arrayObject);\n        return arrayObject;\n    };\n\n    OESVertexArrayObject.prototype.deleteVertexArrayOES = function deleteVertexArrayOES(arrayObject) {\n        arrayObject.isAlive = false;\n        this.vertexArrayObjects.splice(this.vertexArrayObjects.indexOf(arrayObject), 1);\n        if (this.currentVertexArrayObject == arrayObject) {\n            this.bindVertexArrayOES(null);\n        }\n    };\n\n    OESVertexArrayObject.prototype.isVertexArrayOES = function isVertexArrayOES(arrayObject) {\n        if (arrayObject && arrayObject instanceof WebGLVertexArrayObjectOES) {\n            if ((arrayObject as any).hasBeenBound && (arrayObject as any).ext == this) {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    OESVertexArrayObject.prototype.bindVertexArrayOES = function bindVertexArrayOES(arrayObject) {\n        var gl = this.gl;\n        if (arrayObject && !arrayObject.isAlive) {\n            synthesizeGLError(gl.INVALID_OPERATION, \"bindVertexArrayOES: attempt to bind deleted arrayObject\");\n            return;\n        }\n        var original = this.original;\n\n        var oldVAO = this.currentVertexArrayObject;\n        this.currentVertexArrayObject = arrayObject || this.defaultVertexArrayObject;\n        this.currentVertexArrayObject.hasBeenBound = true;\n        var newVAO = this.currentVertexArrayObject;\n\n        if (oldVAO == newVAO) {\n            return;\n        }\n\n        if (!oldVAO || newVAO.elementArrayBuffer != oldVAO.elementArrayBuffer) {\n            original.bindBuffer.call(gl, gl.ELEMENT_ARRAY_BUFFER, newVAO.elementArrayBuffer);\n        }\n\n        var currentBinding = this.currentArrayBuffer;\n        var maxAttrib = Math.max(oldVAO ? oldVAO.maxAttrib : 0, newVAO.maxAttrib);\n        for (var n = 0; n <= maxAttrib; n++) {\n            var attrib = newVAO.attribs[n];\n            var oldAttrib = oldVAO ? oldVAO.attribs[n] : null;\n\n            if (!oldVAO || attrib.enabled != oldAttrib.enabled) {\n                if (attrib.enabled) {\n                    original.enableVertexAttribArray.call(gl, n);\n                } else {\n                    original.disableVertexAttribArray.call(gl, n);\n                }\n            }\n\n            if (attrib.enabled) {\n                var bufferChanged = false;\n                if (!oldVAO || attrib.buffer != oldAttrib.buffer) {\n                    if (currentBinding != attrib.buffer) {\n                        original.bindBuffer.call(gl, gl.ARRAY_BUFFER, attrib.buffer);\n                        currentBinding = attrib.buffer;\n                    }\n                    bufferChanged = true;\n                }\n\n                if (bufferChanged || attrib.cached != oldAttrib.cached) {\n                    original.vertexAttribPointer.call(gl, n, attrib.size, attrib.type, attrib.normalized, attrib.stride, attrib.offset);\n                }\n            }\n        }\n\n        if (this.currentArrayBuffer != currentBinding) {\n            original.bindBuffer.call(gl, gl.ARRAY_BUFFER, this.currentArrayBuffer);\n        }\n    };\n\n    (window as any)._setupVertexArrayObject = function (gl) {\n        var original_getSupportedExtensions = gl.getSupportedExtensions;\n        gl.getSupportedExtensions = function getSupportedExtensions() {\n            var list = original_getSupportedExtensions.call(this) || [];\n            if (list.indexOf(\"OES_vertex_array_object\") < 0) {\n                list.push(\"OES_vertex_array_object\");\n            }\n            return list;\n        };\n\n        var original_getExtension = gl.getExtension;\n\n        gl.getExtension = function getExtension(name) {\n            var ext = original_getExtension.call(this, name);\n            if (ext) {\n                return ext;\n            }\n            if (name !== \"OES_vertex_array_object\") {\n                return null;\n            }\n\n            if (!this.__OESVertexArrayObject) {\n                console.log(\"Setup OES_vertex_array_object polyfill\");\n                this.__OESVertexArrayObject = new OESVertexArrayObject(this);\n            }\n            return this.__OESVertexArrayObject;\n        };\n    };\n}());\n","import { RenderCapable } from \"../../RenderEnum/RenderCapable\";\nimport { WebGLExtension } from \"./GLEnum/WebGLExtension\";\nimport { VertexArrayObject } from \"./VertexArrayObject\";\nimport { WebGLEngine } from \"./WebGLEngine\";\n\nexport class GlCapable {\n    /**@internal */\n    private _extentionVendorPrefixes: string[] = [\"\", \"WEBKIT_\", \"MOZ_\"];\n    /**@internal */\n    private _gl: any;\n    /**@internal */\n    private _extensionMap: Map<WebGLExtension, any>;\n    /**@internal */\n    private _capabilityMap: Map<RenderCapable, boolean>;\n\n\n    constructor(glEngine: WebGLEngine) {\n        this._gl = glEngine.gl;\n        this.initExtension(glEngine.isWebGL2);\n        this.initCapable(glEngine.isWebGL2);\n    }\n\n    private initCapable(isWebgl2: boolean) {\n        this._capabilityMap = new Map();\n        //Index Uint32\n        let value = isWebgl2 || !!(this.getExtension(WebGLExtension.OES_element_index_uint));\n        this._capabilityMap.set(RenderCapable.Element_Index_Uint32, value);\n        //FLoat32Texture\n        value = isWebgl2 || !!(this.getExtension(WebGLExtension.OES_texture_float));\n        this._capabilityMap.set(RenderCapable.TextureFormat_R32G32B32A32, value);\n        //halfFloatTexture\n        value = isWebgl2 || !!(this.getExtension(WebGLExtension.OES_texture_half_float));\n        this._capabilityMap.set(RenderCapable.TextureFormat_R16G16B16A16, value);\n        //anistropic\n        value = !!(this.getExtension(WebGLExtension.EXT_texture_filter_anisotropic));\n        this._capabilityMap.set(RenderCapable.Texture_anisotropic, value);\n\n        // half float renderable\n        if (isWebgl2) {\n            value = !!this.getExtension(WebGLExtension.EXT_color_buffer_float) || !!this.getExtension(WebGLExtension.EXT_color_buffer_half_float);\n        }\n        else {\n            value = ((!!this.getExtension(WebGLExtension.OES_texture_half_float)) || (!!this.getExtension(WebGLExtension.EXT_color_buffer_half_float))) && (!!this.getExtension(WebGLExtension.OES_texture_half_float_linear));\n        }\n        this._capabilityMap.set(RenderCapable.RenderTextureFormat_R16G16B16A16, value);\n\n        // float renderable\n        if (isWebgl2) {\n            value = !!this.getExtension(WebGLExtension.EXT_color_buffer_float) && !!this.getExtension(WebGLExtension.OES_texture_float_linear);\n        }\n        else {\n            // OES_texture_float implicitly enables the WEBGL_color_buffer_float extension (if supported)\n            value = (!!this.getExtension(WebGLExtension.OES_texture_float)) && (!!this.getExtension(WebGLExtension.OES_texture_float_linear));\n        }\n        this._capabilityMap.set(RenderCapable.RenderTextureFormat_R32G32B32A32, value);\n\n        value = isWebgl2 || (!!this.getExtension(WebGLExtension.WEBGL_depth_texture));\n        this._capabilityMap.set(RenderCapable.RenderTextureFormat_Depth, value);\n        value = isWebgl2;\n        this._capabilityMap.set(RenderCapable.RenderTextureFormat_ShadowMap, value);\n        value = isWebgl2 || (!!this.getExtension(WebGLExtension.OES_vertex_array_object));\n        this._capabilityMap.set(RenderCapable.Vertex_VAO, value);\n        value = (isWebgl2 || (!!this.getExtension(WebGLExtension.ANGLE_instanced_arrays)));\n        this._capabilityMap.set(RenderCapable.DrawElement_Instance, value);\n        value = (isWebgl2) || (!!this.getExtension(WebGLExtension.EXT_shader_texture_lod));\n        this._capabilityMap.set(RenderCapable.Shader_TextureLod, value);\n        value = (!!this.getExtension(WebGLExtension.WEBGL_compressed_texture_s3tc));\n        this._capabilityMap.set(RenderCapable.COMPRESS_TEXTURE_S3TC, value);\n        value = (!!this.getExtension(WebGLExtension.WEBGL_compressed_texture_s3tc_srgb));\n        this._capabilityMap.set(RenderCapable.COMPRESS_TEXTURE_S3TC_SRGB, value);\n        value = (!!this.getExtension(WebGLExtension.WEBGL_compressed_texture_pvrtc));\n        this._capabilityMap.set(RenderCapable.COMPRESS_TEXTURE_PVRTC, value);\n        value = (!!this.getExtension(WebGLExtension.WEBGL_compressed_texture_etc1));\n        this._capabilityMap.set(RenderCapable.COMPRESS_TEXTURE_ETC1, value);\n        value = (!!this.getExtension(WebGLExtension.WEBGL_compressed_texture_etc));\n        this._capabilityMap.set(RenderCapable.COMPRESS_TEXTURE_ETC, value);\n        value = (!!this.getExtension(WebGLExtension.WEBGL_compressed_texture_astc));\n        this._capabilityMap.set(RenderCapable.COMPRESS_TEXTURE_ASTC, value);\n        value = (isWebgl2) || (!!this.getExtension(WebGLExtension.EXT_sRGB))\n        this._capabilityMap.set(RenderCapable.Texture_SRGB, value);\n        value = (!!this.getExtension(WebGLExtension.OES_texture_float_linear));\n        this._capabilityMap.set(RenderCapable.Texture_FloatLinearFiltering, value);\n        value = isWebgl2 || (!!this.getExtension(WebGLExtension.OES_texture_half_float_linear));\n        this._capabilityMap.set(RenderCapable.Texture_HalfFloatLinearFiltering, value);\n        value = isWebgl2;\n        this._capabilityMap.set(RenderCapable.MSAA, value);\n        this._capabilityMap.set(RenderCapable.UnifromBufferObject, value);\n        this._capabilityMap.set(RenderCapable.Texture3D, value);\n    }\n\n    private initExtension(isWebgl2: boolean) {\n        this._extensionMap = new Map();\n        const setExtensionMap = (extension: WebGLExtension, value: any, map: Map<WebGLExtension, any>) => {\n            value && map.set(extension, value);\n        }\n        const _extTextureFilterAnisotropic = this._getExtension(\"EXT_texture_filter_anisotropic\");\n        setExtensionMap(WebGLExtension.EXT_texture_filter_anisotropic, _extTextureFilterAnisotropic, this._extensionMap);\n        const _compressedTextureS3tc = this._getExtension(\"WEBGL_compressed_texture_s3tc\");\n        setExtensionMap(WebGLExtension.WEBGL_compressed_texture_s3tc, _compressedTextureS3tc, this._extensionMap);\n        const _compressdTextureS3tc_srgb = this._getExtension(\"WEBGL_compressed_texture_s3tc_srgb\");\n        setExtensionMap(WebGLExtension.WEBGL_compressed_texture_s3tc_srgb, _compressdTextureS3tc_srgb, this._extensionMap);\n        const _compressedTexturePvrtc = this._getExtension(\"WEBGL_compressed_texture_pvrtc\");\n        setExtensionMap(WebGLExtension.WEBGL_compressed_texture_pvrtc, _compressedTexturePvrtc, this._extensionMap);\n        const _compressedTextureEtc1 = this._getExtension(\"WEBGL_compressed_texture_etc1\");\n        setExtensionMap(WebGLExtension.WEBGL_compressed_texture_etc1, _compressedTextureEtc1, this._extensionMap);\n        const _compressedTextureETC = this._getExtension(\"WEBGL_compressed_texture_etc\");\n        setExtensionMap(WebGLExtension.WEBGL_compressed_texture_etc, _compressedTextureETC, this._extensionMap);\n        const _compressedTextureASTC = this._getExtension(\"WEBGL_compressed_texture_astc\");\n        setExtensionMap(WebGLExtension.WEBGL_compressed_texture_astc, _compressedTextureASTC, this._extensionMap);\n        const _oesTextureFloatLinear = this._getExtension(\"OES_texture_float_linear\");\n        setExtensionMap(WebGLExtension.OES_texture_float_linear, _oesTextureFloatLinear, this._extensionMap);\n        const _extColorBufferHalfFloat = this._getExtension(\"EXT_color_buffer_half_float\");\n        setExtensionMap(WebGLExtension.EXT_color_buffer_half_float, _extColorBufferHalfFloat, this._extensionMap);\n        if (isWebgl2) {\n            const _extColorBufferFloat = this._getExtension(\"EXT_color_buffer_float\");\n            setExtensionMap(WebGLExtension.EXT_color_buffer_float, _extColorBufferFloat, this._extensionMap);\n        } else {\n            VertexArrayObject;//强制引用\n            if ((window as any)._setupVertexArrayObject) //兼容VAO\n                (window as any)._setupVertexArrayObject(this._gl);\n            const _vaoExt = this._getExtension(\"OES_vertex_array_object\");\n            setExtensionMap(WebGLExtension.OES_vertex_array_object, _vaoExt, this._extensionMap);\n            const _angleInstancedArrays = this._getExtension(\"ANGLE_instanced_arrays\");\n            setExtensionMap(WebGLExtension.ANGLE_instanced_arrays, _angleInstancedArrays, this._extensionMap);\n            const _oesTextureHalfFloat = this._getExtension(\"OES_texture_half_float\");\n            setExtensionMap(WebGLExtension.OES_texture_half_float, _oesTextureHalfFloat, this._extensionMap);\n            const _oesTextureHalfFloatLinear = this._getExtension(\"OES_texture_half_float_linear\");\n            setExtensionMap(WebGLExtension.OES_texture_half_float_linear, _oesTextureHalfFloatLinear, this._extensionMap);\n            const _oesTextureFloat = this._getExtension(\"OES_texture_float\");\n            setExtensionMap(WebGLExtension.OES_texture_float, _oesTextureFloat, this._extensionMap);\n\n            const _oes_element_index_uint = this._getExtension(\"OES_element_index_uint\");\n            setExtensionMap(WebGLExtension.OES_element_index_uint, _oes_element_index_uint, this._extensionMap);\n            const _extShaderTextureLod = this._getExtension(\"EXT_shader_texture_lod\");\n            setExtensionMap(WebGLExtension.EXT_shader_texture_lod, _extShaderTextureLod, this._extensionMap);\n            const _webgl_depth_texture = this._getExtension(\"WEBGL_depth_texture\");\n            setExtensionMap(WebGLExtension.WEBGL_depth_texture, _webgl_depth_texture, this._extensionMap);\n            const _sRGB = this._getExtension(\"EXT_sRGB\");\n            setExtensionMap(WebGLExtension.EXT_sRGB, _sRGB, this._extensionMap);\n\n            const OES_standard_derivatives = this._getExtension(\"OES_standard_derivatives\");\n            setExtensionMap(WebGLExtension.OES_standard_derivatives, OES_standard_derivatives, this._extensionMap);\n        }\n    }\n\n    getCapable(type: RenderCapable): boolean {\n        return this._capabilityMap.get(type);\n    }\n\n    getExtension(type: WebGLExtension): any {\n        if (this._extensionMap.has(type))\n            return this._extensionMap.get(type);\n        else\n            return null;\n    }\n\n    /**\n     * @internal\n     */\n    private _getExtension(name: string) {\n        const prefixes: string[] = this._extentionVendorPrefixes;\n        for (const k in prefixes) {\n            var ext = this._gl.getExtension(prefixes[k] + name);\n            if (ext)\n                return ext;\n        }\n        return null;\n    }\n\n\n}","import { LayaEnv } from \"../../../../LayaEnv\";\nimport { CommandEncoder } from \"../../../layagl/CommandEncoder\";\nimport { Color } from \"../../../maths/Color\";\nimport { Vector4 } from \"../../../maths/Vector4\";\nimport { BaseTexture } from \"../../../resource/BaseTexture\";\nimport { BufferTargetType, BufferUsage } from \"../../RenderEnum/BufferTargetType\";\nimport { RenderCapable } from \"../../RenderEnum/RenderCapable\";\nimport { RenderClearFlag } from \"../../RenderEnum/RenderClearFlag\";\nimport { RenderParams } from \"../../RenderEnum/RenderParams\";\nimport { RenderStatisticsInfo } from \"../../RenderEnum/RenderStatInfo\";\nimport { IRender2DContext } from \"../../RenderInterface/IRender2DContext\";\nimport { IRenderBuffer } from \"../../RenderInterface/IRenderBuffer\";\nimport { IRenderDrawContext } from \"../../RenderInterface/IRenderDrawContext\";\nimport { IRenderEngine } from \"../../RenderInterface/IRenderEngine\";\nimport { IRenderEngineFactory } from \"../../RenderInterface/IRenderEngineFactory\";\nimport { IRenderShaderInstance } from \"../../RenderInterface/IRenderShaderInstance\";\nimport { IRenderVertexState } from \"../../RenderInterface/IRenderVertexState\";\nimport { ITextureContext } from \"../../RenderInterface/ITextureContext\";\nimport { ShaderData, ShaderDataType } from \"../../RenderShader/ShaderData\";\nimport { ShaderVariable } from \"../../RenderShader/ShaderVariable\";\nimport { RenderStateCommand } from \"../../RenderStateCommand\";\nimport { GL2TextureContext } from \"./GL2TextureContext\";\nimport { GLBuffer } from \"./GLBuffer\";\nimport { GlCapable } from \"./GlCapable\";\nimport { WebGLExtension } from \"./GLEnum/WebGLExtension\";\nimport { WebGLMode } from \"./GLEnum/WebGLMode\";\nimport { GLParams } from \"./GLParams\";\nimport { GLRender2DContext } from \"./GLRender2DContext\";\nimport { GLRenderDrawContext } from \"./GLRenderDrawContext\";\nimport { GLRenderState } from \"./GLRenderState\";\nimport { GLShaderInstance } from \"./GLShaderInstance\";\nimport { GLTextureContext } from \"./GLTextureContext\";\nimport { GLVertexState } from \"./GLVertexState\";\nimport { WebGlConfig } from \"./WebGLConfig\";\n\n/**\n * 封装Webgl\n */\nexport class WebGLEngine implements IRenderEngine {\n\n    _context: WebGLRenderingContext | WebGL2RenderingContext;\n\n    private _config: WebGlConfig;\n\n    private _isWebGL2: boolean;\n\n    private _webglMode: WebGLMode;\n\n    /**@internal */\n    private _propertyNameMap: any = {};\n    /**@internal */\n    private _propertyNameCounter: number = 0;\n    /**@internal */\n    _renderOBJCreateContext: IRenderEngineFactory;\n\n    /**@internal */\n    _IDCounter: number = 0;\n\n    /**@internal ShaderDebugMode*/\n    _isShaderDebugMode: boolean = true;\n\n    /**@internal gl.TextureID*/\n    _glTextureIDParams: Array<number>;\n\n    /**@internal bind active Texture*/\n    _activedTextureID: number;\n\n    /**@internal bindTexture */\n    //RenderTexture TODO\n    _activeTextures: WebGLTexture[];\n\n    /**\n    * @internal\n    * bind GLVertexArray\n    */\n    _GLBindVertexArray: GLVertexState;\n\n    /**\n    * @internal\n    * 支持功能\n    */\n    _supportCapatable: GlCapable;\n\n    /**\n     * @internal\n     * bind Program\n     */\n    _glUseProgram: GLShaderInstance;\n\n    //bind glBuffer by glBuffer target\n    //key BufferTargetType\n    private _GLBufferBindMap: { [key: number]: GLBuffer | null };\n\n    private _curUBOPointer: number = 0;\n    //记录绑定UBO的glPointer\n    private _GLUBOPointerMap: Map<string, number> = new Map();\n    //记录绑定Pointer的UBO\n    private _GLBindPointerUBOMap: Map<number, GLBuffer> = new Map();\n    //bind viewport\n    private _lastViewport: Vector4;\n    private _lastScissor: Vector4;\n\n    //bind clearColor\n    private _lastClearColor: Color = new Color;\n    private _lastClearDepth: number = 1;\n\n    //GL参数\n    private _GLParams: GLParams;\n\n    //GL纹理生成\n    private _GLTextureContext: GLTextureContext | GL2TextureContext;\n    //Gl Draw\n    private _GLRenderDrawContext: GLRenderDrawContext;\n\n    private _GL2DRenderContext: GLRender2DContext;\n\n    //GLRenderState\n    _GLRenderState: GLRenderState;\n\n    // //TODO:管理Buffer\n    // private _bufferResourcePool: any;\n    // //TODO:管理Texture\n    // private _textureResourcePool: any;\n    // //TODO:管理FrameBuffer\n    // private _RenderBufferResource: any;\n\n    //GPU统计数据\n    private _GLStatisticsInfo: Map<RenderStatisticsInfo, number> = new Map();\n\n    constructor(config: WebGlConfig, webglMode: WebGLMode = WebGLMode.Auto) {\n        this._config = config;\n        this._isWebGL2 = false;\n        //init data\n        this._lastViewport = new Vector4(0, 0, 0, 0);\n        this._lastClearColor = new Color(0, 0, 0, 0);\n        this._lastScissor = new Vector4(0, 0, 0, 0);\n        this._webglMode = webglMode;\n        this._initStatisticsInfo();\n    }\n\n    /**\n     * GL Context\n     * @member {WebGLRenderingContext}\n     */\n    get gl() {\n        return this._context;\n    }\n\n    get isWebGL2() {\n        return this._isWebGL2;\n    }\n\n    get webglConfig() {\n        return this._config;\n    }\n\n    private _initStatisticsInfo() {\n        this._GLStatisticsInfo.set(RenderStatisticsInfo.DrawCall, 0);\n        this._GLStatisticsInfo.set(RenderStatisticsInfo.InstanceDrawCall, 0);\n        this._GLStatisticsInfo.set(RenderStatisticsInfo.Triangle, 0);\n        this._GLStatisticsInfo.set(RenderStatisticsInfo.UniformUpload, 0);\n        this._GLStatisticsInfo.set(RenderStatisticsInfo.TextureMemeory, 0);\n        this._GLStatisticsInfo.set(RenderStatisticsInfo.GPUMemory, 0);\n        this._GLStatisticsInfo.set(RenderStatisticsInfo.RenderTextureMemory, 0);\n        this._GLStatisticsInfo.set(RenderStatisticsInfo.BufferMemory, 0);\n    }\n\n    /**\n     * @internal\n     * @param info \n     * @param value \n     */\n    _addStatisticsInfo(info: RenderStatisticsInfo, value: number) {\n        this._GLStatisticsInfo.set(info, this._GLStatisticsInfo.get(info) + value);\n    }\n\n    /**\n     * 清除\n     * @internal\n     * @param info \n     */\n    clearStatisticsInfo(info: RenderStatisticsInfo) {\n        this._GLStatisticsInfo.set(info, 0);\n    }\n\n    /**\n     * @internal\n     * @param info \n     * @returns \n     */\n    getStatisticsInfo(info: RenderStatisticsInfo): number {\n        return this._GLStatisticsInfo.get(info);\n    }\n\n    /**\n     * @internal\n     * @param glPointer \n     * @returns \n     */\n    _getBindUBOBuffer(glPointer: number): GLBuffer {\n        return this._GLBindPointerUBOMap.get(glPointer);\n    }\n\n    /**\n     * @internal\n     * @param glPointer \n     * @param buffer \n     */\n    _setBindUBOBuffer(glPointer: number, buffer: GLBuffer): void {\n        this._GLBindPointerUBOMap.set(glPointer, buffer);\n    }\n\n    /**\n     * create GL\n     * @param canvas \n     */\n    initRenderEngine(canvas: any) {\n        let names;\n        let gl;\n        switch (this._webglMode) {\n            case WebGLMode.Auto:\n                names = [\"webgl2\", \"experimental-webgl2\", \"webgl\", \"experimental-webgl\"];\n                break;\n            case WebGLMode.WebGL1:\n                names = [\"webgl\", \"experimental-webgl\"];\n                break;\n            case WebGLMode.WebGL2:\n                names = [\"webgl2\", \"experimental-webgl2\"];\n                break;\n        }\n        for (var i: number = 0; i < names.length; i++) {\n            try {\n                gl = canvas.getContext(names[i], this._config);\n                // gl.drawingBufferColorSpace = \"display-p3\";\n            } catch (e) {\n            }\n            if (gl) {\n                if (names[i] === 'webgl2' || names[i] === 'experimental-webgl2') {\n                    this._isWebGL2 = true;\n                }\n                break;\n            }\n        }\n        this._context = gl;\n\n        //init Other\n        this._initBindBufferMap();\n        this._supportCapatable = new GlCapable(this);\n        this._GLParams = new GLParams(this);\n        this._GLRenderState = new GLRenderState(this);\n        this._glTextureIDParams = [gl.TEXTURE0, gl.TEXTURE1, gl.TEXTURE2, gl.TEXTURE3, gl.TEXTURE4, gl.TEXTURE5, gl.TEXTURE6, gl.TEXTURE7, gl.TEXTURE8, gl.TEXTURE9, gl.TEXTURE10, gl.TEXTURE11, gl.TEXTURE12, gl.TEXTURE13, gl.TEXTURE14, gl.TEXTURE15, gl.TEXTURE16, gl.TEXTURE17, gl.TEXTURE18, gl.TEXTURE19, gl.TEXTURE20, gl.TEXTURE21, gl.TEXTURE22, gl.TEXTURE23, gl.TEXTURE24, gl.TEXTURE25, gl.TEXTURE26, gl.TEXTURE27, gl.TEXTURE28, gl.TEXTURE29, gl.TEXTURE30, gl.TEXTURE31];\n        this._activedTextureID = gl.TEXTURE0;//默认激活纹理区为0;\n        this._activeTextures = [];\n        this._GLTextureContext = this.isWebGL2 ? new GL2TextureContext(this) : new GLTextureContext(this);\n        this._GLRenderDrawContext = new GLRenderDrawContext(this);\n        this._GL2DRenderContext = new GLRender2DContext(this);\n    }\n\n    private _initBindBufferMap() {\n        this._GLBufferBindMap = {};\n        this._GLBufferBindMap[BufferTargetType.ARRAY_BUFFER] = null;\n        this._GLBufferBindMap[BufferTargetType.ELEMENT_ARRAY_BUFFER] = null;\n        this._GLBufferBindMap[BufferTargetType.UNIFORM_BUFFER] = null;\n    }\n\n\n    _getbindBuffer(target: BufferTargetType) {\n        return this._GLBufferBindMap[target];\n    }\n\n    _setbindBuffer(target: BufferTargetType, buffer: GLBuffer | null) {\n        this._GLBufferBindMap[target] = buffer;\n    }\n\n    /**\n     * @internal\n     * @param target \n     * @param texture \n     */\n    _bindTexture(target: number, texture: WebGLTexture) {\n        const texID = this._activedTextureID - this._context.TEXTURE0;\n        if (this._activeTextures[texID] !== texture) {\n            this._context.bindTexture(target, texture);\n            this._activeTextures[texID] = texture;\n        }\n    }\n\n    bindTexture(texture: BaseTexture) {\n        this._bindTexture(texture._texture.target, texture._getSource());\n    }\n\n    applyRenderStateCMD(cmd: RenderStateCommand): void {\n        this._GLRenderState.applyRenderStateCommand(cmd);\n    }\n\n    //get capable of webgl\n    getCapable(capatableType: RenderCapable): boolean {\n        return this._supportCapatable.getCapable(capatableType);\n    }\n\n    viewport(x: number, y: number, width: number, height: number): void {\n        const gl = this._context;\n        const lv = this._lastViewport;\n        if (LayaEnv.isConch) {\n            gl.viewport(x, y, width, height);\n        } else if (x !== lv.x || y !== lv.y || width !== lv.z || height !== lv.w) {\n            gl.viewport(x, y, width, height);\n            lv.setValue(x, y, width, height);\n        }\n    }\n\n    scissor(x: number, y: number, width: number, height: number) {\n        const gl = this._context;\n        const lv = this._lastScissor;\n        if (LayaEnv.isConch) {\n            gl.scissor(x, y, width, height);\n        } else if (x !== lv.x || y !== lv.y || width !== lv.z || height !== lv.w) {\n            gl.scissor(x, y, width, height);\n            lv.setValue(x, y, width, height);\n        }\n    }\n\n    scissorTest(value: boolean) {\n        if (value)\n            this._context.enable(this._context.SCISSOR_TEST);\n        else\n            this._context.disable(this._context.SCISSOR_TEST);\n    }\n\n\n\n    clearRenderTexture(clearFlag: RenderClearFlag, clearcolor: Color = null, clearDepth: number = 1) {\n        var flag: number;\n        //this.gl.enable(this._gl.SCISSOR_TEST)\n        if (clearFlag & RenderClearFlag.Color) {\n            if (clearcolor && !this._lastClearColor.equal(clearcolor)) {\n                this._context.clearColor(clearcolor.r, clearcolor.g, clearcolor.b, clearcolor.a);\n                clearcolor.cloneTo(this._lastClearColor);\n            }\n            flag |= this.gl.COLOR_BUFFER_BIT;\n        }\n        if (clearFlag & RenderClearFlag.Depth) {\n            if (this._lastClearDepth != clearDepth) {\n                this._context.clearDepth(clearDepth);\n                this._lastClearDepth = clearDepth;\n            }\n            this._GLRenderState.setDepthMask(true);\n            flag |= this._context.DEPTH_BUFFER_BIT;\n        }\n        if (clearFlag & RenderClearFlag.Stencil) {\n            this._context.clearStencil(0);\n            this._GLRenderState.setStencilMask(true);\n            flag |= this._context.STENCIL_BUFFER_BIT;\n        }\n        if (flag)\n            this._context.clear(flag);\n        //this._gl.disable(this._gl.SCISSOR_TEST);\n    }\n\n    copySubFrameBuffertoTex(texture: BaseTexture, level: number, xoffset: number, yoffset: number, x: number, y: number, width: number, height: number) {\n        this._bindTexture(texture._texture.target, texture._getSource());\n        this._context.copyTexSubImage2D(texture._texture.target, level, xoffset, yoffset, x, y, width, height);\n    }\n\n    colorMask(r: boolean, g: boolean, b: boolean, a: boolean): void {\n        this._context.colorMask(r, g, b, a);\n    }\n\n    getParams(params: RenderParams): number {\n        return this._GLParams.getParams(params);\n    }\n\n\n    createBuffer(targetType: BufferTargetType, bufferUsageType: BufferUsage): IRenderBuffer {\n        //TODO SourceManager\n        return new GLBuffer(this, targetType, bufferUsageType);\n    }\n\n    createShaderInstance(vs: string, ps: string, attributeMap: { [name: string]: [number, ShaderDataType] }): IRenderShaderInstance {\n        //TODO SourceManager\n        return new GLShaderInstance(this, vs, ps, attributeMap);\n    }\n\n    createVertexState(): IRenderVertexState {\n        return new GLVertexState(this);\n    }\n\n    getUBOPointer(name: string): number {\n        if (!this._GLUBOPointerMap.has(name))\n            this._GLUBOPointerMap.set(name, this._curUBOPointer++);\n        return this._GLUBOPointerMap.get(name);\n    }\n\n\n\n    getTextureContext(): ITextureContext {\n        return this._GLTextureContext;\n    }\n\n    //TODO 先写完测试，这种封装过于死板\n    getDrawContext(): IRenderDrawContext {\n        return this._GLRenderDrawContext;\n    }\n\n    get2DRenderContext(): IRender2DContext {\n        return this._GL2DRenderContext;\n    }\n\n    getCreateRenderOBJContext(): IRenderEngineFactory {\n        return this._renderOBJCreateContext;\n    }\n\n    // //TODO:\n    // propertyNameToID(name: string): number {\n    //   return this.propertyNameToID(name);\n    // }\n\n    /**\n   * 通过Shader属性名称获得唯一ID。\n   * @param name Shader属性名称。\n   * @return 唯一ID。\n   */\n    propertyNameToID(name: string): number {\n        if (this._propertyNameMap[name] != null) {\n            return this._propertyNameMap[name];\n        } else {\n            var id: number = this._propertyNameCounter++;\n            this._propertyNameMap[name] = id;\n            this._propertyNameMap[id] = name;\n            return id;\n        }\n    }\n\n    propertyIDToName(id: number): string {\n        return this._propertyNameMap[id];\n    }\n\n    /**\n     * @internal\n     */\n    uploadUniforms(shader: GLShaderInstance, commandEncoder: CommandEncoder, shaderData: ShaderData, uploadUnTexture: boolean): number {\n        shaderData.applyUBO && shaderData.applyUBOData();\n        var data: any = shaderData._data;\n        var shaderUniform: any[] = commandEncoder.getArrayData();\n        var shaderCall: number = 0;\n        for (var i: number = 0, n: number = shaderUniform.length; i < n; i++) {\n            var one: any/*ShaderVariable*/ = shaderUniform[i];\n            if (uploadUnTexture || one.textureID !== -1) {//如uniform为纹理切换Shader时需要重新上传\n                var value: any = data[one.dataOffset];\n                if (value != null)\n                    shaderCall += one.fun.call(one.caller, one, value);\n            }\n        }\n        return shaderCall;\n    }\n\n    /**\n     * @internal\n     */\n    uploadCustomUniforms(shader: GLShaderInstance, custom: any[], index: number, data: any): number {\n        shader.bind();\n        var shaderCall: number = 0;\n        var one: ShaderVariable = custom[index];\n        if (one && data != null)\n            shaderCall += one.fun.call(one.caller, one, data);\n        return shaderCall;\n    }\n\n    createRenderStateComand(): RenderStateCommand {\n        return new RenderStateCommand();\n    }\n\n    unbindVertexState(): void {\n        if (this.isWebGL2)\n            (<WebGL2RenderingContext>this._context).bindVertexArray(null);\n        else\n            this._supportCapatable.getExtension(WebGLExtension.OES_vertex_array_object).bindVertexArrayOES(null);\n        this._GLBindVertexArray = null;\n    }\n\n}\n\n\n","\n/**\n * 阿拉伯文的转码。把unicode的阿拉伯文字母编码转成他们的老的能描述不同写法的编码。\n *  这个是从GitHub上 Javascript-Arabic-Reshaper 项目转来的\n * https://github.com/louy/Javascript-Arabic-Reshaper/blob/master/src/index.js\n */\n/**\n\t * Javascript Arabic Reshaper by Louy Alakkad\n\t * https://github.com/louy/Javascript-Arabic-Reshaper\n\t * Based on (http://git.io/vsnAd)\n\t */\nexport class ArabicReshaper {\n    private static charsMap: any[] = [[0x0621, 0xFE80, null, null, null], /* HAMZA */\n    [0x0622, 0xFE81, null, null, 0xFE82], /* ALEF_MADDA */\n    [0x0623, 0xFE83, null, null, 0xFE84], /* ALEF_HAMZA_ABOVE */\n    [0x0624, 0xFE85, null, null, 0xFE86], /* WAW_HAMZA */\n    [0x0625, 0xFE87, null, null, 0xFE88], /* ALEF_HAMZA_BELOW */\n    [0x0626, 0xFE89, 0xFE8B, 0xFE8C, 0xFE8A], /* YEH_HAMZA */\n    [0x0627, 0xFE8D, null, null, 0xFE8E], /* ALEF */\n    [0x0628, 0xFE8F, 0xFE91, 0xFE92, 0xFE90], /* BEH */\n    [0x0629, 0xFE93, null, null, 0xFE94], /* TEH_MARBUTA */\n    [0x062A, 0xFE95, 0xFE97, 0xFE98, 0xFE96], /* TEH */\n    [0x062B, 0xFE99, 0xFE9B, 0xFE9C, 0xFE9A], /* THEH */\n    [0x062C, 0xFE9D, 0xFE9F, 0xFEA0, 0xFE9E], /* JEEM */\n    [0x062D, 0xFEA1, 0xFEA3, 0xFEA4, 0xFEA2], /* HAH */\n    [0x062E, 0xFEA5, 0xFEA7, 0xFEA8, 0xFEA6], /* KHAH */\n    [0x062F, 0xFEA9, null, null, 0xFEAA], /* DAL */\n    [0x0630, 0xFEAB, null, null, 0xFEAC], /* THAL */\n    [0x0631, 0xFEAD, null, null, 0xFEAE], /* REH */\n    [0x0632, 0xFEAF, null, null, 0xFEB0], /* ZAIN */\n    [0x0633, 0xFEB1, 0xFEB3, 0xFEB4, 0xFEB2], /* SEEN */\n    [0x0634, 0xFEB5, 0xFEB7, 0xFEB8, 0xFEB6], /* SHEEN */\n    [0x0635, 0xFEB9, 0xFEBB, 0xFEBC, 0xFEBA], /* SAD */\n    [0x0636, 0xFEBD, 0xFEBF, 0xFEC0, 0xFEBE], /* DAD */\n    [0x0637, 0xFEC1, 0xFEC3, 0xFEC4, 0xFEC2], /* TAH */\n    [0x0638, 0xFEC5, 0xFEC7, 0xFEC8, 0xFEC6], /* ZAH */\n    [0x0639, 0xFEC9, 0xFECB, 0xFECC, 0xFECA], /* AIN */\n    [0x063A, 0xFECD, 0xFECF, 0xFED0, 0xFECE], /* GHAIN */\n    [0x0640, 0x0640, 0x0640, 0x0640, 0x0640], /* TATWEEL */\n    [0x0641, 0xFED1, 0xFED3, 0xFED4, 0xFED2], /* FEH */\n    [0x0642, 0xFED5, 0xFED7, 0xFED8, 0xFED6], /* QAF */\n    [0x0643, 0xFED9, 0xFEDB, 0xFEDC, 0xFEDA], /* KAF */\n    [0x0644, 0xFEDD, 0xFEDF, 0xFEE0, 0xFEDE], /* LAM */\n    [0x0645, 0xFEE1, 0xFEE3, 0xFEE4, 0xFEE2], /* MEEM */\n    [0x0646, 0xFEE5, 0xFEE7, 0xFEE8, 0xFEE6], /* NOON */\n    [0x0647, 0xFEE9, 0xFEEB, 0xFEEC, 0xFEEA], /* HEH */\n    [0x0648, 0xFEED, null, null, 0xFEEE], /* WAW */\n    [0x0649, 0xFEEF, null, null, 0xFEF0], /* ALEF_MAKSURA */\n    [0x064A, 0xFEF1, 0xFEF3, 0xFEF4, 0xFEF2], /* YEH */\n    [0x067E, 0xFB56, 0xFB58, 0xFB59, 0xFB57], /* PEH */\n    [0x06CC, 0xFBFC, 0xFBFE, 0xFBFF, 0xFBFD], /* Farsi Yeh */\n    [0x0686, 0xFB7A, 0xFB7C, 0xFB7D, 0xFB7B], /* Tcheh */\n    [0x06A9, 0xFB8E, 0xFB90, 0xFB91, 0xFB8F], /* Keheh */\n    [0x06AF, 0xFB92, 0xFB94, 0xFB95, 0xFB93], /* Gaf */\n    [0x0698, 0xFB8A, null, null, 0xFB8B]];\n    private static combCharsMap: any[] = [[[0x0644, 0x0622], 0xFEF5, null, null, 0xFEF6], /* LAM_ALEF_MADDA */\n    [[0x0644, 0x0623], 0xFEF7, null, null, 0xFEF8], /* LAM_ALEF_HAMZA_ABOVE */\n    [[0x0644, 0x0625], 0xFEF9, null, null, 0xFEFA], /* LAM_ALEF_HAMZA_BELOW */\n    [[0x0644, 0x0627], 0xFEFB, null, null, 0xFEFC]];\n    private static transChars: any[] = [0x0610, /* ARABIC SIGN SALLALLAHOU ALAYHE WASSALLAM */\n        0x0612, /* ARABIC SIGN ALAYHE ASSALLAM */\n        0x0613, /* ARABIC SIGN RADI ALLAHOU ANHU */\n        0x0614, /* ARABIC SIGN TAKHALLUS */\n        0x0615, /* ARABIC SMALL HIGH TAH */\n        0x064B, /* ARABIC FATHATAN */\n        0x064C, /* ARABIC DAMMATAN */\n        0x064D, /* ARABIC KASRATAN */\n        0x064E, /* ARABIC FATHA */\n        0x064F, /* ARABIC DAMMA */\n        0x0650, /* ARABIC KASRA */\n        0x0651, /* ARABIC SHADDA */\n        0x0652, /* ARABIC SUKUN */\n        0x0653, /* ARABIC MADDAH ABOVE */\n        0x0654, /* ARABIC HAMZA ABOVE */\n        0x0655, /* ARABIC HAMZA BELOW */\n        0x0656, /* ARABIC SUBSCRIPT ALEF */\n        0x0657, /* ARABIC INVERTED DAMMA */\n        0x0658, /* ARABIC MARK NOON GHUNNA */\n        0x0670, /* ARABIC LETTER SUPERSCRIPT ALEF */\n        0x06D6, /* ARABIC SMALL HIGH LIGATURE SAD WITH LAM WITH ALEF MAKSURA */\n        0x06D7, /* ARABIC SMALL HIGH LIGATURE QAF WITH LAM WITH ALEF MAKSURA */\n        0x06D8, /* ARABIC SMALL HIGH MEEM INITIAL FORM */\n        0x06D9, /* ARABIC SMALL HIGH LAM ALEF */\n        0x06DA, /* ARABIC SMALL HIGH JEEM */\n        0x06DB, /* ARABIC SMALL HIGH THREE DOTS */\n        0x06DC, /* ARABIC SMALL HIGH SEEN */\n        0x06DF, /* ARABIC SMALL HIGH ROUNDED ZERO */\n        0x06E0, /* ARABIC SMALL HIGH UPRIGHT RECTANGULAR ZERO */\n        0x06E1, /* ARABIC SMALL HIGH DOTLESS HEAD OF KHAH */\n        0x06E2, /* ARABIC SMALL HIGH MEEM ISOLATED FORM */\n        0x06E3, /* ARABIC SMALL LOW SEEN */\n        0x06E4, /* ARABIC SMALL HIGH MADDA */\n        0x06E7, /* ARABIC SMALL HIGH YEH */\n        0x06E8, /* ARABIC SMALL HIGH NOON */\n        0x06EA, /* ARABIC EMPTY CENTRE LOW STOP */\n        0x06EB, /* ARABIC EMPTY CENTRE HIGH STOP */\n        0x06EC, /* ARABIC ROUNDED HIGH STOP WITH FILLED CENTRE */\n        0x06ED];\n\n\n    //TODO:coverage\n    characterMapContains(c: number): boolean {\n        for (var i: number = 0; i < ArabicReshaper.charsMap.length; ++i) {\n            if (ArabicReshaper.charsMap[i][0] === c) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    //TODO:coverage\n    getCharRep(c: number): boolean {\n        for (var i: number = 0; i < ArabicReshaper.charsMap.length; ++i) {\n            if (ArabicReshaper.charsMap[i][0] === c) {\n                return ArabicReshaper.charsMap[i];\n            }\n        }\n        return false;\n    }\n\n    //TODO:coverage\n    getCombCharRep(c1:number, c2:number): boolean {\n        for (var i: number = 0; i < ArabicReshaper.combCharsMap.length; ++i) {\n            if (ArabicReshaper.combCharsMap[i][0][0] === c1 && ArabicReshaper.combCharsMap[i][0][1] === c2) {\n                return ArabicReshaper.combCharsMap[i];\n            }\n        }\n\n        // We should never reach here...\n        // istanbul ignore next\n        return false;\n    }\n\n    //TODO:coverage\n    isTransparent(c:number): boolean {\n        for (var i: number = 0; i < ArabicReshaper.transChars.length; ++i) {\n            if (ArabicReshaper.transChars[i] === c) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    //TODO:coverage\n    getOriginalCharsFromCode(code:number): string {\n        var j: number;\n\n        for (j = 0; j < ArabicReshaper.charsMap.length; ++j) {\n            if (ArabicReshaper.charsMap[j].indexOf(code) > -1) {\n                return String.fromCharCode(ArabicReshaper.charsMap[j][0]);\n            }\n        }\n\n        for (j = 0; j < ArabicReshaper.combCharsMap.length; ++j) {\n            if (ArabicReshaper.combCharsMap[j].indexOf(code) > -1) {\n                return String.fromCharCode(ArabicReshaper.combCharsMap[j][0][0]) +\n                    String.fromCharCode(ArabicReshaper.combCharsMap[j][0][1]);\n            }\n        }\n\n        return String.fromCharCode(code);\n    }\n\n    /**\n     * 转换函数。从normal转到presentB\n     * 这个返回的字符串可以直接按照从左到右的顺序渲染。\n     * 例如\n     * graphics.fillText(convertArabic('سلام'),....)\n     * \n    */\n    //TODO:coverage\n    convertArabic(normal:any): string {\n        var crep: any,\n            combcrep: any,\n            shaped: string = '';\n\n        for (var i: number = 0; i < normal.length; ++i) {\n            var current: number = normal.charCodeAt(i);\n            if (this.characterMapContains(current)) {\n                var prev: any = null,\n                    next: any = null,\n                    prevID: number = i - 1,\n                    nextID: number = i + 1;\n\n\t\t\t\t/*\n\t\t\t\t  Transparent characters have no effect in the shaping process.\n\t\t\t\t  So, ignore all the transparent characters that are BEFORE the\n\t\t\t\t  current character.\n\t\t\t\t  */\n                for (; prevID >= 0; --prevID) {\n                    if (!this.isTransparent(normal.charCodeAt(prevID))) {\n                        break;\n                    }\n                }\n\n                prev = (prevID >= 0) ? normal.charCodeAt(prevID) : null;\n                crep = prev ? this.getCharRep(prev) : false;\n                if (!crep || crep[2] == null && crep[3] == null) {\n                    prev = null; // prev character doesn’t connect with its successor\n                }\n\n\t\t\t\t/*\n\t\t\t\t  Transparent characters have no effect in the shaping process.\n\t\t\t\t  So, ignore all the transparent characters that are AFTER the\n\t\t\t\t  current character.\n\t\t\t\t  */\n                for (; nextID < normal.length; ++nextID) {\n                    if (!this.isTransparent(normal.charCodeAt(nextID))) {\n                        break;\n                    }\n                }\n\n                next = (nextID < normal.length) ? normal.charCodeAt(nextID) : null;\n                crep = next ? this.getCharRep(next) : false;\n                if (!crep || crep[3] == null && crep[4] == null) {\n                    next = null; // next character doesn’t connect with its predecessor\n                }\n\n                /* Combinations */\n                if (current === 0x0644 && next != null &&\n                    (next === 0x0622 || next === 0x0623 || next === 0x0625 || next === 0x0627)) {\n                    combcrep = this.getCombCharRep(current, next);\n                    if (prev != null) {\n                        shaped += String.fromCharCode(combcrep[4]);\n                    } else {\n                        shaped += String.fromCharCode(combcrep[1]);\n                    }\n\n                    ++i;\n                    continue;\n                }\n\n                crep = this.getCharRep(current);\n\n                /* Medial */\n                if (prev != null && next != null && crep[3] != null) {\n                    shaped += String.fromCharCode(crep[3]);\n                    continue;\n                } else /* Final */\n                    if (prev != null && crep[4] != null) {\n                        shaped += String.fromCharCode(crep[4]);\n                        continue;\n                    } else /* Initial */\n                        if (next != null && crep[2] != null) {\n                            shaped += String.fromCharCode(crep[2]);\n                            continue;\n                        } else /* Isolated */ {\n                            shaped += String.fromCharCode(crep[1]);\n                        }\n            } else {\n                shaped += String.fromCharCode(current);\n            }\n        }\n\n        return shaped;\n    }/*;*/\n\n    // convert from Arabic Presentation Forms B\n    //TODO:coverage\n    convertArabicBack(apfb:any): string {\n        var toReturn: string = '',\n            selectedChar: number;\n\n        var i: number;\n\n        for (i = 0; i < apfb.length; ++i) {\n            selectedChar = apfb.charCodeAt(i);\n\n            toReturn += this.getOriginalCharsFromCode(selectedChar);\n        }\n        return toReturn;\n    }\n}\n\n\n","export class MatirxArray {\n\n    /**\n     * 4*4矩阵数组相乘。\n     * o=a*b;\n     * @param\ta 4*4矩阵数组。\n     * @param\tb 4*4矩阵数组。\n     * @param\to 4*4矩阵数组。\n     */\n    //TODO:coverage\n    static ArrayMul(a: any[], b: any[], o: any[]): void {\n        if (!a) {\n            MatirxArray.copyArray(b, o);\n            return;\n        }\n\n        if (!b) {\n            MatirxArray.copyArray(a, o);\n            return;\n        }\n\n        var ai0: number, ai1: number, ai2: number, ai3: number;\n        for (var i: number = 0; i < 4; i++) {\n            ai0 = a[i];\n            ai1 = a[i + 4];\n            ai2 = a[i + 8];\n            ai3 = a[i + 12];\n            o[i] = ai0 * b[0] + ai1 * b[1] + ai2 * b[2] + ai3 * b[3];\n            o[i + 4] = ai0 * b[4] + ai1 * b[5] + ai2 * b[6] + ai3 * b[7];\n            o[i + 8] = ai0 * b[8] + ai1 * b[9] + ai2 * b[10] + ai3 * b[11];\n            o[i + 12] = ai0 * b[12] + ai1 * b[13] + ai2 * b[14] + ai3 * b[15];\n        }\n    }\n\n    //TODO:coverage\n    static copyArray(f: any[], t: any[]): void {\n        if (!f) return;\n        if (!t) return;\n        for (var i: number = 0; i < f.length; i++) {\n            t[i] = f[i];\n        }\n    }\n}\n\n","export class AnimatorState2DScript {\n    /**\n     * 动画状态开始时执行。\n     */\n    onStateEnter(): void {\n\n    }\n\n    /**\n     * 动画状态更新时执行。\n     */\n    onStateUpdate(): void {\n\n    }\n\n    /**\n     * 动画状态退出时执行。\n     */\n    onStateExit(): void {\n\n    }\n}","import { Sprite } from \"../display/Sprite\";\nimport { Tween } from \"../utils/Tween\";\nimport { Event } from \"../events/Event\";\nimport { Ease } from \"../utils/Ease\";\nimport { Handler } from \"../utils/Handler\";\n\n/**\n * @Script {name:ButtonEffect}\n * @author ww\n */\nexport class ButtonEffect {\n\n    private _tar: Sprite;\n    private _curState: number = 0;\n    private _curTween: Tween;\n    /**\n     * effectScale\n     * @prop {name:effectScale,type:number, tips:\"缩放值\",default:\"1.5\"}\n     */\n    effectScale: number = 1.5;\n    /**\n     * tweenTime\n     * @prop {name:tweenTime,type:number, tips:\"缓动时长\",default:\"300\"}\n     */\n    tweenTime: number = 300;\n    /**\n     * effectEase\n     * @prop {name:effectEase,type:ease, tips:\"效果缓动类型\"}\n     */\n    effectEase: string;\n    /**\n     * backEase\n     * @prop {name:backEase,type:ease, tips:\"恢复缓动类型\"}\n     */\n    backEase: string;\n\n    /**\n     * 设置控制对象 \n     * @param tar\n     */\n    set target(tar: Sprite) {\n        this._tar = tar;\n        tar.on(Event.MOUSE_DOWN, this, this.toChangedState);\n        tar.on(Event.MOUSE_UP, this, this.toInitState);\n        tar.on(Event.MOUSE_OUT, this, this.toInitState);\n    }\n\n    private toChangedState(): void {\n        this._curState = 1;\n        if (this._curTween) Tween.clear(this._curTween);\n        this._curTween = Tween.to(this._tar, { scaleX: this.effectScale, scaleY: this.effectScale }, this.tweenTime, (Ease as any)[this.effectEase], Handler.create(this, this.tweenComplete));\n    }\n\n    private toInitState(): void {\n        if (this._curState == 2) return;\n        if (this._curTween) Tween.clear(this._curTween);\n        this._curState = 2;\n        this._curTween = Tween.to(this._tar, { scaleX: 1, scaleY: 1 }, this.tweenTime, (Ease as any)[this.backEase], Handler.create(this, this.tweenComplete));\n    }\n    private tweenComplete(): void {\n        this._curState = 0;\n        this._curTween = null;\n    }\n}\n\n\n","import { EffectBase } from \"././EffectBase\";\nimport { Tween } from \"../utils/Tween\";\nimport { Ease } from \"../utils/Ease\";\n\n/**\n * 淡入效果\n */\nexport class FadeIn extends EffectBase {\n    /**\n     * @override\n     */\n    protected _doTween(): Tween {\n        this.target.alpha = 0;\n        return Tween.to(this.target, { alpha: 1 }, this.duration, (Ease as any)[this.ease], this._comlete, this.delay);\n    }\n}\n\n","import { EffectBase } from \"././EffectBase\";\nimport { Tween } from \"../utils/Tween\";\nimport { Ease } from \"../utils/Ease\";\n\n/**\n * 淡出效果\n */\nexport class FadeOut extends EffectBase {\n    /**\n     * @override\n     */\n    protected _doTween(): Tween {\n        this.target.alpha = 1;\n        return Tween.to(this.target, { alpha: 0 }, this.duration, (Ease as any)[this.ease], this._comlete, this.delay);\n    }\n}\n\n","import { IRender2DContext } from \"../../RenderInterface/IRender2DContext\";\nimport { NativeGLObject } from \"./NativeGLObject\";\nimport { NativeWebGLEngine } from \"./NativeWebGLEngine\";\n\n\nexport class NativeGLRender2DContext extends NativeGLObject implements IRender2DContext {\n\n    constructor(engine: NativeWebGLEngine) {\n        super(engine);\n    }\n\n    activeTexture(textureID: number): void {\n\n    }\n\n    bindTexture(target: number, texture: WebGLTexture): void {\n    }\n\n    bindUseProgram(webglProgram: any):boolean {\n        return true;\n    }\n\n}","import { NativeRenderStateCommand } from \"../../../RenderEngine/RenderEngine/NativeGLEngine/NativeRenderStateCommand\";\nimport { BufferUsage } from \"../../../RenderEngine/RenderEnum/BufferTargetType\";\nimport { IRenderEngineFactory } from \"../../../RenderEngine/RenderInterface/IRenderEngineFactory\";\nimport { RenderState } from \"../../../RenderEngine/RenderShader/RenderState\";\nimport { ShaderData } from \"../../../RenderEngine/RenderShader/ShaderData\";\nimport { ShaderInstance } from \"../../../RenderEngine/RenderShader/ShaderInstance\";\nimport { UniformBufferObject } from \"../../../RenderEngine/UniformBufferObject\";\nimport { ShaderCompileDefineBase, ShaderProcessInfo } from \"../../../webgl/utils/ShaderCompileDefineBase\";\nimport { NativeCommandUniformMap } from \"./NativeCommandUniformMap\";\nimport { NativeRenderState } from \"./NativeRenderState\";\nimport { NativeShaderData } from \"./NativeShaderData\";\nimport { NativeUniformBufferObject } from \"./NativeUniformBufferObject\";\n\n\nexport class NativeGLRenderEngineFactory implements IRenderEngineFactory {\n\n\n\n    createShaderData(): ShaderData {\n        return new NativeShaderData();\n    }\n\n    createShaderInstance(shaderProcessInfo:ShaderProcessInfo, shaderPass: ShaderCompileDefineBase): ShaderInstance {\n        //return new NativeShaderInstance(vs, ps, attributeMap, shaderPass) as unknown as ShaderInstance;\n        //TODO\n        return null;\n    }\n\n    createRenderStateComand(): NativeRenderStateCommand {\n        return new NativeRenderStateCommand();\n    }\n    createRenderState(): RenderState {\n        return new NativeRenderState() as unknown as RenderState;\n    }\n\n    createUniformBufferObject(glPointer: number, name: string, bufferUsage: BufferUsage, byteLength: number, isSingle: boolean): UniformBufferObject {\n        return new NativeUniformBufferObject(glPointer, name, bufferUsage, byteLength, isSingle);\n    }\n\n    createGlobalUniformMap(blockName: string): NativeCommandUniformMap{\n        return new NativeCommandUniformMap((window as any).conchCommandUniformMap.createGlobalUniformMap(blockName), blockName);\n    }\n\n    createEngine(config:any,canvas:any){\n        //TODO:\n        return Promise.resolve();\n    }\n}","import { CommandEncoder } from \"../../../layagl/CommandEncoder\";\nimport { BaseTexture } from \"../../../resource/BaseTexture\";\nimport { BufferTargetType, BufferUsage } from \"../../RenderEnum/BufferTargetType\";\nimport { RenderCapable } from \"../../RenderEnum/RenderCapable\";\nimport { RenderClearFlag } from \"../../RenderEnum/RenderClearFlag\";\nimport { RenderParams } from \"../../RenderEnum/RenderParams\";\nimport { IRender2DContext } from \"../../RenderInterface/IRender2DContext\";\nimport { IRenderBuffer } from \"../../RenderInterface/IRenderBuffer\";\nimport { IRenderDrawContext } from \"../../RenderInterface/IRenderDrawContext\";\nimport { IRenderEngine } from \"../../RenderInterface/IRenderEngine\";\nimport { IRenderShaderInstance } from \"../../RenderInterface/IRenderShaderInstance\";\nimport { IRenderVertexState } from \"../../RenderInterface/IRenderVertexState\";\nimport { ITextureContext } from \"../../RenderInterface/ITextureContext\";\nimport { RenderStateCommand } from \"../../RenderStateCommand\";\nimport { NativeGL2TextureContext } from \"./NativeGL2TextureContext\";\nimport { WebGLMode } from \"../WebGLEngine/GLEnum/WebGLMode\";\nimport { NativeGLRender2DContext } from \"./NativeGLRender2DContext\";\nimport { NativeGLTextureContext } from \"./NativeGLTextureContext\";\nimport { NativeGLVertexState } from \"./NativeGLVertexState\";\nimport { WebGlConfig } from \"../WebGLEngine/WebGLConfig\";\nimport { NativeGLRenderDrawContext } from \"./NativeGLRenderDrawContext\";\nimport { ShaderDataType } from \"../../RenderShader/ShaderData\";\nimport { RenderStatisticsInfo } from \"../../RenderEnum/RenderStatInfo\";\nimport { Color } from \"../../../maths/Color\";\nimport { NativeRenderStateCommand } from \"./NativeRenderStateCommand\";\nimport { IRenderEngineFactory } from \"../../RenderInterface/IRenderEngineFactory\";\n\n\n/**\n * @private 封装Webgl\n */\nexport class NativeWebGLEngine implements IRenderEngine {\n\n  _context: WebGLRenderingContext | WebGL2RenderingContext;\n\n  private _config: WebGlConfig;\n\n  /**@internal ShaderDebugMode*/\n  _isShaderDebugMode: boolean = true;\n\n  private _GLTextureContext: NativeGLTextureContext;\n  //Gl Draw\n  private _GLRenderDrawContext: NativeGLRenderDrawContext;\n\n  private _GL2DRenderContext: NativeGLRender2DContext;\n\n  /**@internal */\n  _renderOBJCreateContext:IRenderEngineFactory;\n\n  _nativeObj: any;\n\n  /**@internal */\n  _IDCounter: number;\n\n  constructor(config: WebGlConfig, webglMode: WebGLMode = WebGLMode.Auto) {\n    this._nativeObj = new (window as any).conchWebGLEngine(webglMode);\n  }\n  \n  createRenderStateComand(): RenderStateCommand {\n    return new NativeRenderStateCommand();\n  }\n  getUBOPointer(name: string): number {\n    return this._nativeObj.getUBOPointer(name);\n  }\n\n  _addStatisticsInfo(info: RenderStatisticsInfo, value: number) {\n    this._nativeObj.addStatisticsInfo(info, value);\n  }\n  /**\n * 清除\n * @internal\n * @param info \n */\n  clearStatisticsInfo(info: RenderStatisticsInfo) {\n    this._nativeObj.clearStatisticsInfo(info);\n  }\n\n  /**\n   * @internal\n   * @param info \n   * @returns \n   */\n  getStatisticsInfo(info: RenderStatisticsInfo): number {\n    return this._nativeObj.getStatisticsInfo(info);\n  }\n  /**\n   * GL Context\n   * @member {WebGLRenderingContext}\n   */\n  get gl() {\n    return this._context;\n  }\n\n  get isWebGL2() {\n    return this._nativeObj.isWebGL2;\n  }\n\n  get webglConfig() {\n    return this._config;\n  }\n\n  /**\n   * create GL\n   * @param canvas \n   */\n  initRenderEngine(canvas: any) {\n    this._nativeObj.initRenderEngine();\n    this._GLRenderDrawContext = new NativeGLRenderDrawContext(this);\n\n    if (this.isWebGL2) {\n      this._GLTextureContext = new NativeGL2TextureContext(this, new (window as any).conchGL2TextureContext(this._nativeObj));\n    }\n    else {\n      this._GLTextureContext = new NativeGLTextureContext(this, new (window as any).conchGLTextureContext(this._nativeObj));\n    }\n  }\n\n  bindTexture(texture: BaseTexture) {\n    throw new Error(\"Method not implemented.\");\n  }\n\n  applyRenderStateCMD(cmd: RenderStateCommand): void {\n    this._nativeObj.applyRenderStateCommand((cmd as any)._nativeObj);\n  }\n\n  //get capable of webgl\n  getCapable(capatableType: RenderCapable): boolean {\n    return this._nativeObj.getCapable(capatableType);\n  }\n\n  viewport(x: number, y: number, width: number, height: number): void {\n    this._nativeObj.viewport(x, y, width, height);\n  }\n\n  scissor(x: number, y: number, width: number, height: number) {\n    this._nativeObj.scissor(x, y, width, height);\n  }\n\n  scissorTest(value: boolean) {\n    this._nativeObj.scissorTest(value);\n  }\n\n  clearRenderTexture(clearFlag: RenderClearFlag, clearcolor: Color = null, clearDepth: number = 1) {\n    if (clearcolor)\n      this._nativeObj.clearRenderTexture(clearFlag, true, clearcolor.r, clearcolor.g, clearcolor.b, clearcolor.a, clearDepth);\n    else\n      this._nativeObj.clearRenderTexture(clearFlag, false, Color.BLACK.r, Color.BLACK.g, Color.BLACK.b, Color.BLACK.a, clearDepth);\n  }\n\n  copySubFrameBuffertoTex(texture: BaseTexture, level: number, xoffset: number, yoffset: number, x: number, y: number, width: number, height: number) {\n    this._nativeObj.copySubFrameBuffertoTex(texture._texture, level, xoffset, yoffset, x, y, width, height);\n  }\n\n  colorMask(r: boolean, g: boolean, b: boolean, a: boolean): void {\n    this._nativeObj.colorMask(r, g, b, a);\n  }\n\n  getParams(params: RenderParams): number {\n    return this._nativeObj.getParams(params);\n  }\n\n\n  createBuffer(targetType: BufferTargetType, bufferUsageType: BufferUsage): IRenderBuffer {\n    //TODO SourceManager\n    return new (window as any).conchGLBuffer(this._nativeObj, targetType, bufferUsageType);\n  }\n\n  createShaderInstance(vs: string, ps: string, attributeMap: { [name: string]: [number, ShaderDataType] }): IRenderShaderInstance {\n    throw new Error(\"Method not implemented.\");\n  }\n\n  createVertexState(): IRenderVertexState {\n    return new NativeGLVertexState(this);\n  }\n\n  getTextureContext(): ITextureContext {\n    return this._GLTextureContext;\n  }\n\n  //TODO 先写完测试，这种封装过于死板\n  getDrawContext(): IRenderDrawContext {\n    return this._GLRenderDrawContext;\n  }\n\n  get2DRenderContext(): IRender2DContext {\n    return this._GL2DRenderContext;\n  }\n\n  getCreateRenderOBJContext(): IRenderEngineFactory {\n    return this._renderOBJCreateContext;\n  }\n\n  propertyNameToID(name: string): number {\n    return this._nativeObj.propertyNameToID(name);\n  }\n\n  propertyIDToName(id: number): string {\n    throw new Error(\"Method not implemented.\");\n  }\n\n  uploadUniforms(shader: IRenderShaderInstance, commandEncoder: CommandEncoder, shaderData: any, uploadUnTexture: boolean): number {\n    throw new Error(\"Method not implemented.\");\n  }\n  uploadCustomUniforms(shader: IRenderShaderInstance, custom: any[], index: number, data: any): number {\n    throw new Error(\"Method not implemented.\");\n  }\n  unbindVertexState(): void{\n    this._nativeObj.unbindVertexState && this._nativeObj.unbindVertexState();\n  }\n}\n\n\n","import { RenderTargetFormat } from \"../RenderEngine/RenderEnum/RenderTargetFormat\";\nimport { TextureDimension } from \"../RenderEngine/RenderEnum/TextureDimension\";\nimport { LayaGL } from \"../layagl/LayaGL\";\nimport { RenderTexture } from \"./RenderTexture\";\n\n\n/**\n * <code>SpotLight</code> 类用于创建RenderTextureCube。\n */\nexport class RenderTextureCube extends RenderTexture {\n\n    /**\n     * +x, -x, +y, -y, +z, -z\n     */\n    faceIndex: number;\n\n    /**\n     * 实例化一个RendertextureCube\n     * @param size 像素\n     * @param colorFormat 颜色格式\n     * @param depthFormat 深度格式\n     * @param generateMipmap 是否生成mipmap\n     * @param multiSamples \n     */\n    constructor(size: number, colorFormat: RenderTargetFormat, depthFormat: RenderTargetFormat, generateMipmap: boolean, multiSamples: number) {\n        super(size, size, colorFormat, depthFormat, generateMipmap, multiSamples);\n        this.faceIndex = 0;\n    }\n\n    /**\n     * @internal\n     */\n    _createRenderTarget(): void {\n        this._dimension = TextureDimension.Cube;\n        this._renderTarget = LayaGL.textureContext.createRenderTargetCubeInternal(this.width, <RenderTargetFormat><any>this._format, this._depthStencilFormat, this._generateMipmap, this._gammaSpace, this._multiSamples);\n\n        this._texture = this._renderTarget._textures[0];\n    }\n\n    _start() {\n        RenderTexture._configInstance.invertY = this._isCameraTarget;\n        if (RenderTexture._currentActive != this) {\n            RenderTexture._currentActive && RenderTexture._currentActive._end();\n            RenderTexture._currentActive = this;\n            LayaGL.textureContext.bindRenderTarget(this._renderTarget, this.faceIndex);\n        }\n    }\n\n}","import { SoundChannel } from \"./SoundChannel\";\nimport { EventDispatcher } from \"../events/EventDispatcher\"\n\n/**\n * <code>Sound</code> 类是用来播放控制声音的类。\n * 引擎默认有两套声音方案，优先使用WebAudio播放声音，如果WebAudio不可用，则用H5Audio播放，H5Audio在部分机器上有兼容问题（比如不能混音，播放有延迟等）。\n */\nexport class Sound extends EventDispatcher {\n\n    /**\n     * 加载声音。\n     * @param url 地址。\n     */\n    load(url: string): void {\n\n    }\n\n    /**\n     * 播放声音。\n     * @param startTime 开始时间,单位秒\n     * @param loops 循环次数,0表示一直循环\n     * @return 声道 SoundChannel 对象。\n     */\n    play(startTime: number = 0, loops: number = 0): SoundChannel {\n        return null;\n    }\n\n    /**\n     * 获取总时间。\n     */\n    get duration(): number {\n        return 0;\n    }\n\n    /**\n     * 释放声音资源。\n     */\n    dispose(): void {\n\n    }\n}\n\n","/**\n * @private\n * <code>StringKey</code> 类用于存取字符串对应的数字。\n */\nexport class StringKey {\n\n    private _strsToID: any = {};\n    private _idToStrs: any[] = [];\n    private _length: number = 0;\n    //TODO:\n\n    /**\n     * 添加一个字符。\n     * @param\tstr 字符，将作为key 存储相应生成的数字。\n     * @return 此字符对应的数字。\n     */\n    //TODO:coverage\n    add(str: string): number {\n        var index: any = this._strsToID[str];\n        if (index != null) return index;\n\n        this._idToStrs[this._length] = str;\n        return this._strsToID[str] = this._length++;\n    }\n\n    /**\n     * 获取指定字符对应的ID。\n     * @param\tstr 字符。\n     * @return 此字符对应的ID。\n     */\n    //TODO:coverage\n    getID(str: string): number {\n        var index: any = this._strsToID[str];\n        return index == null ? -1 : index;\n    }\n\n    /**\n     * 根据指定ID获取对应字符。\n     * @param  id ID。\n     * @return 此id对应的字符。\n     */\n    //TODO:coverage\n    getName(id: number): string {\n        var str: any = this._idToStrs[id];\n        return str == null ? undefined : str;\n    }\n}\n\n","import { UniformBufferParamsType, UnifromBufferData } from \"./UniformBufferData\";\nexport class SubUniformBufferData extends UnifromBufferData{\n    \n    /**@internal */\n    _offset:number;\n\n    /**@interanl */\n    _isInPool:boolean = false;\n\n    /**@interanl */\n    _needUpdate:boolean = false;\n\n    /**@internal */\n    _realByte = 0;\n    /**\n     * create UniformBufferData Instance\n     * @param uniformParamsStat Params describe\n     */\n    constructor(uniformParamsStat: Map<number, UniformBufferParamsType>,bufferOffset:number) {\n        super(uniformParamsStat);\n        this._offset = bufferOffset;\n        this._realByte = this._bytelength;\n        this._bytelength =Math.ceil(this._bytelength/256)*256;\n    }\n\n\n}\n\n\n","/**\n * @private\n */\nexport class System {\n    /**\n     * 替换指定名称的定义。用来动态更改类的定义。\n     * @param\tname 属性名。\n     * @param\tclassObj 属性值。\n     */\n    //TODO:coverage\n    static changeDefinition(name: string, classObj: any): void {\n        (window as any).Laya[name] = classObj;\n        var str: string = name + \"=classObj\";\n        window['eval'](str);\n    }\n}\n\n","\nimport { Config } from \"../../../../Config\";\nimport { LayaGL } from \"../../../layagl/LayaGL\";\nimport { CommandUniformMap } from \"../../../RenderEngine/CommandUniformMap\";\nimport { WebGLMode } from \"../../../RenderEngine/RenderEngine/WebGLEngine/GLEnum/WebGLMode\";\nimport { WebGlConfig } from \"../../../RenderEngine/RenderEngine/WebGLEngine/WebGLConfig\";\nimport { WebGLEngine } from \"../../../RenderEngine/RenderEngine/WebGLEngine/WebGLEngine\";\nimport { BufferUsage } from \"../../../RenderEngine/RenderEnum/BufferTargetType\";\nimport { IRenderEngineFactory } from \"../../../RenderEngine/RenderInterface/IRenderEngineFactory\";\nimport { RenderState } from \"../../../RenderEngine/RenderShader/RenderState\";\nimport { ShaderData } from \"../../../RenderEngine/RenderShader/ShaderData\";\nimport { ShaderInstance } from \"../../../RenderEngine/RenderShader/ShaderInstance\";\nimport { RenderStateCommand } from \"../../../RenderEngine/RenderStateCommand\";\nimport { UniformBufferObject } from \"../../../RenderEngine/UniformBufferObject\";\nimport { ShaderCompileDefineBase, ShaderProcessInfo } from \"../../../webgl/utils/ShaderCompileDefineBase\";\n\nexport class WebGLRenderEngineFactory implements IRenderEngineFactory {\n\n    /**@internal */\n    private globalBlockMap: any = {};\n\n    createShaderData(): ShaderData {\n        return new ShaderData();\n    }  \n\n \n    createShaderInstance(shaderProcessInfo: ShaderProcessInfo, shaderPass: ShaderCompileDefineBase): ShaderInstance {\n        return new ShaderInstance(shaderProcessInfo, shaderPass);\n    }\n\n    \n    createRenderStateComand(): RenderStateCommand {\n        return new RenderStateCommand();\n    }\n\n    createRenderState(): RenderState {\n        return new RenderState();\n    }\n\n    createUniformBufferObject(glPointer: number, name: string, bufferUsage: BufferUsage, byteLength: number, isSingle: boolean): UniformBufferObject {\n        return new UniformBufferObject(glPointer, name, bufferUsage, byteLength, isSingle);\n    }\n\n    createGlobalUniformMap(blockName: string): CommandUniformMap {\n        let comMap = this.globalBlockMap[blockName];\n        if (!comMap)\n            comMap = this.globalBlockMap[blockName] = new CommandUniformMap(blockName);;\n        return comMap;\n    }\n\n    createEngine(config: any, canvas: any): Promise<void> {\n        let engine: WebGLEngine;\n        let glConfig: WebGlConfig = { stencil: Config.isStencil, alpha: Config.isAlpha, antialias: Config.isAntialias, premultipliedAlpha: Config.premultipliedAlpha, preserveDrawingBuffer: Config.preserveDrawingBuffer, depth: Config.isDepth, failIfMajorPerformanceCaveat: Config.isfailIfMajorPerformanceCaveat, powerPreference: Config.powerPreference };\n\n        //TODO  other engine\n        const webglMode: WebGLMode = Config.useWebGL2 ? WebGLMode.Auto : WebGLMode.WebGL1;\n        engine = new WebGLEngine(glConfig, webglMode);\n        engine.initRenderEngine(canvas._source);\n        var gl: WebGLRenderingContext = engine._context;//TODO 优化\n        if (Config.printWebglOrder)\n            this._replaceWebglcall(gl);\n\n        if (gl) {\n            new LayaGL();\n        }\n        LayaGL.renderEngine = engine;\n        LayaGL.textureContext = engine.getTextureContext();\n        LayaGL.renderDrawContext = engine.getDrawContext();\n        LayaGL.render2DContext = engine.get2DRenderContext();\n        return Promise.resolve();\n    }\n\n    /**@private test function*/\n    private _replaceWebglcall(gl: any) {\n        var tempgl: { [key: string]: any } = {};\n        for (const key in gl) {\n            if (typeof gl[key] == \"function\" && key != \"getError\" && key != \"__SPECTOR_Origin_getError\" && key != \"__proto__\") {\n                tempgl[key] = gl[key];\n                gl[key] = function () {\n                    let arr: IArguments[] = [];\n                    for (let i = 0; i < arguments.length; i++) {\n                        arr.push(arguments[i]);\n                    }\n                    let result = tempgl[key].apply(gl, arr);\n\n                    //console.log(RenderInfo.loopCount + \":gl.\" + key + \":\" + arr);\n                    let err = gl.getError();\n                    if (err) {\n                        //console.log(err);\n                        debugger;\n                    }\n                    return result;\n                }\n            }\n        }\n    }\n}\n \n"],"mappings":"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"}